From: <Saved by Blink>
Snapshot-Content-Location: https://chatgpt.com/c/68014770-1430-8013-aea4-fe4265eba799
Subject: Deep Learning Final Project - Face-specific Analysis Script
Date: Thu, 1 May 2025 12:07:56 -0400
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--zIanXexzKz9mlCBi1F8XbId4LZxMLKaXDSXMumdjRh----"


------MultipartBoundary--zIanXexzKz9mlCBi1F8XbId4LZxMLKaXDSXMumdjRh----
Content-Type: text/html
Content-ID: <frame-03786C852604268390E70BF5A16887DE@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://chatgpt.com/c/68014770-1430-8013-aea4-fe4265eba799

<!DOCTYPE html><html lang=3D"en-US" data-build=3D"prod-d7e0958d3627644494d7=
3b22b50f8068e6c9c99e" dir=3D"ltr" class=3D"_page-to-page-transition_m3fum_1=
4 dark" style=3D"color-scheme: dark;"><head><meta http-equiv=3D"Content-Typ=
e" content=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" href=3D"=
https://cdn.oaistatic.com/assets/root-bpcp30ia.css"><link rel=3D"stylesheet=
" href=3D"https://cdn.oaistatic.com/assets/conversation-small-dextt2zw.css"=
><meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1=
"><title>Deep Learning Final Project - Face-specific Analysis Script</title=
><meta name=3D"description" content=3D"ChatGPT helps you get answers, find =
inspiration and be more productive. It is free to use and easy to try. Just=
 ask and ChatGPT can help with writing, learning, brainstorming and more.">=
<meta name=3D"keyword" content=3D"ai chat,ai,chap gpt,chat gbt,chat gpt 3,c=
hat gpt login,chat gpt website,chat gpt,chat gtp,chat openai,chat,chatai,ch=
atbot gpt,chatg,chatgpt login,chatgpt,gpt chat,open ai,openai chat,openai c=
hatgpt,openai"><meta property=3D"og:description" content=3D"A conversationa=
l AI system that listens, learns, and challenges"><meta property=3D"og:titl=
e" content=3D"ChatGPT"><meta property=3D"og:image" content=3D"https://cdn.o=
aistatic.com/assets/chatgpt-share-og-u7j5uyao.webp"><meta property=3D"og:ur=
l" content=3D"https://chatgpt.com"><link rel=3D"preconnect" href=3D"https:/=
/cdn.oaistatic.com/"><link rel=3D"preconnect" href=3D"https://ab.chatgpt.co=
m/"><meta name=3D"robots" content=3D"index, follow"><meta name=3D"apple-itu=
nes-app" content=3D"app-id=3D6448311069"><meta name=3D"dd-trace-id" content=
=3D"12700702849274203600"><meta name=3D"dd-trace-time" content=3D"174611336=
1689"><link rel=3D"icon" href=3D"https://cdn.oaistatic.com/assets/favicon-m=
iwirzcw.ico" sizes=3D"32x32"><link rel=3D"icon" href=3D"data:image/svg+xml,=
%3csvg%20xmlns=3D'http://www.w3.org/2000/svg'%20width=3D'180'%20height=3D'1=
80'%20fill=3D'none'%3e%3cstyle%3e%20:root%20{%20--primary-fill:%20%23000;%2=
0--secondary-fill:%20%23fff;%20}%20@media%20(prefers-color-scheme:%20dark)%=
20{%20:root%20{%20--primary-fill:%20%23fff;%20--secondary-fill:%20%23000;%2=
0}%20}%20%3c/style%3e%3cg%20clip-path=3D'url(%23a)'%3e%3crect%20width=3D'18=
0'%20height=3D'180'%20fill=3D'var(--primary-fill)'%20rx=3D'90'%20/%3e%3cg%2=
0clip-path=3D'url(%23b)'%3e%3cpath%20fill=3D'var(--secondary-fill)'%20d=3D'=
M75.91%2073.628V62.232c0-.96.36-1.68%201.199-2.16l22.912-13.194c3.119-1.8%2=
06.838-2.639%2010.676-2.639%2014.394%200%2023.511%2011.157%2023.511%2023.03=
2%200%20.839%200%201.799-.12%202.758l-23.752-13.914c-1.439-.84-2.879-.84-4.=
318%200L75.91%2073.627Zm53.499%2044.383v-27.23c0-1.68-.72-2.88-2.159-3.719L=
97.142%2069.55l9.836-5.638c.839-.48%201.559-.48%202.399%200l22.912%2013.195=
c6.598%203.839%2011.035%2011.995%2011.035%2019.912%200%209.116-5.397%2017.5=
13-13.915%2020.992v.001Zm-60.577-23.99-9.836-5.758c-.84-.48-1.2-1.2-1.2-2.1=
6v-26.39c0-12.834%209.837-22.55%2023.152-22.55%205.039%200%209.716%201.679%=
2013.676%204.678L70.993%2055.516c-1.44.84-2.16%202.039-2.16%203.719v34.787-=
.002Zm21.173%2012.234L75.91%2098.339V81.546l14.095-7.917%2014.094%207.917v1=
6.793l-14.094%207.916Zm9.056%2036.467c-5.038%200-9.716-1.68-13.675-4.678l23=
.631-13.676c1.439-.839%202.159-2.038%202.159-3.718V85.863l9.956%205.757c.84=
.48%201.2%201.2%201.2%202.16v26.389c0%2012.835-9.957%2022.552-23.27%2022.55=
2v.001Zm-28.43-26.75L47.72%20102.778c-6.599-3.84-11.036-11.996-11.036-19.91=
3%200-9.236%205.518-17.513%2014.034-20.992v27.35c0%201.68.72%202.879%202.16=
%203.718l29.989%2017.393-9.837%205.638c-.84.48-1.56.48-2.399%200Zm-1.318%20=
19.673c-13.555%200-23.512-10.196-23.512-22.792%200-.959.12-1.919.24-2.879l2=
3.63%2013.675c1.44.84%202.88.84%204.32%200l30.108-17.392v11.395c0%20.96-.36=
1%201.68-1.2%202.16l-22.912%2013.194c-3.119%201.8-6.837%202.639-10.675%202.=
639Zm29.748%2014.274c14.515%200%2026.63-10.316%2029.39-23.991%2013.434-3.47=
9%2022.071-16.074%2022.071-28.91%200-8.396-3.598-16.553-10.076-22.43.6-2.52=
.96-5.039.96-7.557%200-17.153-13.915-29.99-29.989-29.99-3.239%200-6.358.48-=
9.477%201.56-5.398-5.278-12.835-8.637-20.992-8.637-14.515%200-26.63%2010.31=
6-29.39%2023.991-13.434%203.48-22.07%2016.074-22.07%2028.91%200%208.396%203=
.598%2016.553%2010.075%2022.431-.6%202.519-.96%205.038-.96%207.556%200%2017=
.154%2013.915%2029.989%2029.99%2029.989%203.238%200%206.357-.479%209.476-1.=
559%205.397%205.278%2012.835%208.637%2020.992%208.637Z'%20/%3e%3c/g%3e%3c/g=
%3e%3cdefs%3e%3cclipPath%20id=3D'a'%3e%3cpath%20d=3D'M0%200h180v180H0z'%20/=
%3e%3c/clipPath%3e%3cclipPath%20id=3D'b'%3e%3cpath%20d=3D'M29.487%2029.964h=
121.035v119.954H29.487z'%20/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e" type=
=3D"image/svg+xml"><link rel=3D"apple-touch-icon" sizes=3D"180x180" href=3D=
"https://cdn.oaistatic.com/assets/favicon-180x180-od45eci6.webp"><link rel=
=3D"stylesheet" href=3D"https://cdn.oaistatic.com/assets/root-bpcp30ia.css"=
><link rel=3D"stylesheet" href=3D"https://cdn.oaistatic.com/assets/conversa=
tion-small-dextt2zw.css"><link rel=3D"modulepreload" as=3D"script" crossori=
gin=3D"" href=3D"https://cdn.oaistatic.com/assets/ftmj33yld5w0a4bp.js"><lin=
k rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.=
oaistatic.com/assets/c6vr8ewbqday3p4k.js"><link rel=3D"modulepreload" as=3D=
"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/jkrt63xn=
fex3ww16.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" hre=
f=3D"https://cdn.oaistatic.com/assets/mkjf8o8cybmz7mzv.js"><link rel=3D"mod=
ulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.co=
m/assets/ddpcjqlsf5appiwy.js"><link rel=3D"modulepreload" as=3D"script" cro=
ssorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/equgbtn6oy5b3yaw.js"=
><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https:/=
/cdn.oaistatic.com/assets/hpccygchj576ezyo.js"><link rel=3D"modulepreload" =
as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/cdu=
hrn1yn6by4d84.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"=
" href=3D"https://cdn.oaistatic.com/assets/pc2givv05uuq8g6l.js"><link rel=
=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaist=
atic.com/assets/ckfi3gd8ughhxujr.js"><link rel=3D"modulepreload" as=3D"scri=
pt" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/ojrz9oez3fopl=
8f9.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"=
https://cdn.oaistatic.com/assets/e2rjag9iypzkh178.js"><link rel=3D"modulepr=
eload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/ass=
ets/e6aw6n9lemijyn9a.js"><link rel=3D"modulepreload" as=3D"script" crossori=
gin=3D"" href=3D"https://cdn.oaistatic.com/assets/jbffhp2asmiyt4g3.js"><lin=
k rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.=
oaistatic.com/assets/gdo1b4xt4rq78pao.js"><link rel=3D"modulepreload" as=3D=
"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/n4idafuh=
dh5bmwv5.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" hre=
f=3D"https://cdn.oaistatic.com/assets/abd9awqn4iu9c35l.js"><link rel=3D"sty=
lesheet" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/Formatte=
dText-kb0ehjj7.css"><link rel=3D"modulepreload" as=3D"script" crossorigin=
=3D"" href=3D"https://cdn.oaistatic.com/assets/dtu7l9hhym5ioyti.js"><link r=
el=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oai=
static.com/assets/irwpwuaa7shf2frm.js"><link rel=3D"modulepreload" as=3D"sc=
ript" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/cs6hunfqt2k=
681m8.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=
=3D"https://cdn.oaistatic.com/assets/igfi5q9kefx0f961.js"><link rel=3D"modu=
lepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com=
/assets/nab5tn6ip6356dbf.js"><link rel=3D"modulepreload" as=3D"script" cros=
sorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/eht9de3h1ffmicmq.js">=
<link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://=
cdn.oaistatic.com/assets/gqbbt3jgrtwgc8wq.js"><link rel=3D"modulepreload" a=
s=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/cq3z=
04gt9zxde03v.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D""=
 href=3D"https://cdn.oaistatic.com/assets/dmq3kq4a2b2ukac3.js"><link rel=3D=
"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistati=
c.com/assets/jpj8xsxdtxbcvk0e.js"><link rel=3D"modulepreload" as=3D"script"=
 crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/kguc6la4tbphhein=
.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"htt=
ps://cdn.oaistatic.com/assets/nmij2gpodjf9i725.js"><link rel=3D"moduleprelo=
ad" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets=
/do1r2cmg1c0u4c7z.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=
=3D"" href=3D"https://cdn.oaistatic.com/assets/kwzgjsq0t4viaybb.js"><link r=
el=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oai=
static.com/assets/ev5509lfm876lu05.js"><link rel=3D"modulepreload" as=3D"sc=
ript" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/n46pds673ol=
fpoid.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=
=3D"https://cdn.oaistatic.com/assets/m89x2zftpo6hrypr.js"></head><body clas=
s=3D"vsc-initialized" style=3D""><span data-radix-focus-guard=3D"" tabindex=
=3D"0" style=3D"outline: none; opacity: 0; position: fixed; pointer-events:=
 none;"></span><span data-testid=3D"blocking-initial-modals-done" class=3D"=
hidden"></span><a class=3D"bg-token-main-surface-primary fixed start-1/2 to=
p-1 z-50 mx-auto w-fit -translate-x-1/2 translate-y-[-100lvh] rounded-full =
px-3 py-2 focus-visible:translate-y-0" href=3D"https://chatgpt.com/c/680147=
70-1430-8013-aea4-fe4265eba799#main">Skip to content</a><div class=3D"flex =
h-full w-full flex-col"><div class=3D"relative flex h-full w-full flex-1 ov=
erflow-hidden transition-colors z-0"><div class=3D"relative flex h-full w-f=
ull flex-row overflow-hidden"><div class=3D"bg-token-sidebar-surface-primar=
y z-21 shrink-0 overflow-x-hidden [view-transition-name:var(--sidebar-slide=
over)] max-md:w-0!" style=3D"width: 260px;"><div class=3D"h-full w-[var(--s=
idebar-width)]"><div class=3D"flex h-full min-h-0 flex-col"><div class=3D"d=
raggable relative h-full w-full flex-1 items-start border-white/20"><h2 sty=
le=3D"position: absolute; border: 0px; width: 1px; height: 1px; padding: 0p=
x; margin: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-sp=
ace: nowrap; overflow-wrap: normal;">Chat history</h2><nav class=3D"flex h-=
full w-full flex-col ps-3" aria-label=3D"Chat history"><div id=3D"sidebar-h=
eader" class=3D"flex justify-between h-header-height xs:pe-3 flex items-cen=
ter"><span class=3D"flex" data-state=3D"closed"><button class=3D"text-token=
-text-secondary focus-visible:bg-token-surface-hover enabled:hover:bg-token=
-surface-hover disabled:text-token-text-quaternary h-10 rounded-lg px-2 foc=
us-visible:outline-0 no-draggable" aria-label=3D"Close sidebar" data-testid=
=3D"close-sidebar-button"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24=
 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-xl-he=
avy max-md:hidden"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
8.85719 3H15.1428C16.2266 2.99999 17.1007 2.99998 17.8086 3.05782C18.5375 3=
.11737 19.1777 3.24318 19.77 3.54497C20.7108 4.02433 21.4757 4.78924 21.955=
 5.73005C22.2568 6.32234 22.3826 6.96253 22.4422 7.69138C22.5 8.39925 22.5 =
9.27339 22.5 10.3572V13.6428C22.5 14.7266 22.5 15.6008 22.4422 16.3086C22.3=
826 17.0375 22.2568 17.6777 21.955 18.27C21.4757 19.2108 20.7108 19.9757 19=
.77 20.455C19.1777 20.7568 18.5375 20.8826 17.8086 20.9422C17.1008 21 16.22=
66 21 15.1428 21H8.85717C7.77339 21 6.89925 21 6.19138 20.9422C5.46253 20.8=
826 4.82234 20.7568 4.23005 20.455C3.28924 19.9757 2.52433 19.2108 2.04497 =
18.27C1.74318 17.6777 1.61737 17.0375 1.55782 16.3086C1.49998 15.6007 1.499=
99 14.7266 1.5 13.6428V10.3572C1.49999 9.27341 1.49998 8.39926 1.55782 7.69=
138C1.61737 6.96253 1.74318 6.32234 2.04497 5.73005C2.52433 4.78924 3.28924=
 4.02433 4.23005 3.54497C4.82234 3.24318 5.46253 3.11737 6.19138 3.05782C6.=
89926 2.99998 7.77341 2.99999 8.85719 3ZM6.35424 5.05118C5.74907 5.10062 5.=
40138 5.19279 5.13803 5.32698C4.57354 5.6146 4.1146 6.07354 3.82698 6.63803=
C3.69279 6.90138 3.60062 7.24907 3.55118 7.85424C3.50078 8.47108 3.5 9.2633=
9 3.5 10.4V13.6C3.5 14.7366 3.50078 15.5289 3.55118 16.1458C3.60062 16.7509=
 3.69279 17.0986 3.82698 17.362C4.1146 17.9265 4.57354 18.3854 5.13803 18.6=
73C5.40138 18.8072 5.74907 18.8994 6.35424 18.9488C6.97108 18.9992 7.76339 =
19 8.9 19H9.5V5H8.9C7.76339 5 6.97108 5.00078 6.35424 5.05118ZM11.5 5V19H15=
.1C16.2366 19 17.0289 18.9992 17.6458 18.9488C18.2509 18.8994 18.5986 18.80=
72 18.862 18.673C19.4265 18.3854 19.8854 17.9265 20.173 17.362C20.3072 17.0=
986 20.3994 16.7509 20.4488 16.1458C20.4992 15.5289 20.5 14.7366 20.5 13.6V=
10.4C20.5 9.26339 20.4992 8.47108 20.4488 7.85424C20.3994 7.24907 20.3072 6=
.90138 20.173 6.63803C19.8854 6.07354 19.4265 5.6146 18.862 5.32698C18.5986=
 5.19279 18.2509 5.10062 17.6458 5.05118C17.0289 5.00078 16.2366 5 15.1 5H1=
1.5ZM5 8.5C5 7.94772 5.44772 7.5 6 7.5H7C7.55229 7.5 8 7.94772 8 8.5C8 9.05=
229 7.55229 9.5 7 9.5H6C5.44772 9.5 5 9.05229 5 8.5ZM5 12C5 11.4477 5.44772=
 11 6 11H7C7.55229 11 8 11.4477 8 12C8 12.5523 7.55229 13 7 13H6C5.44772 13=
 5 12.5523 5 12Z" fill=3D"currentColor"></path></svg><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-xl-heavy md:hidden"><path fill-rule=3D"evenodd" clip-=
rule=3D"evenodd" d=3D"M3 8C3 7.44772 3.44772 7 4 7H20C20.5523 7 21 7.44772 =
21 8C21 8.55228 20.5523 9 20 9H4C3.44772 9 3 8.55228 3 8ZM3 16C3 15.4477 3.=
44772 15 4 15H14C14.5523 15 15 15.4477 15 16C15 16.5523 14.5523 17 14 17H4C=
3.44772 17 3 16.5523 3 16Z" fill=3D"currentColor"></path></svg></button></s=
pan><div class=3D"flex"><span class=3D"flex" data-state=3D"closed"><button =
aria-label=3D"Ctrl K" class=3D"text-token-text-secondary focus-visible:bg-t=
oken-surface-hover enabled:hover:bg-token-surface-hover disabled:text-token=
-text-quaternary h-10 rounded-lg px-2 focus-visible:outline-0"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xl-heavy"><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M10.75 4.25C7.16015 4.25 4.25 7.16015 4.25 10.75C4.=
25 14.3399 7.16015 17.25 10.75 17.25C14.3399 17.25 17.25 14.3399 17.25 10.7=
5C17.25 7.16015 14.3399 4.25 10.75 4.25ZM2.25 10.75C2.25 6.05558 6.05558 2.=
25 10.75 2.25C15.4444 2.25 19.25 6.05558 19.25 10.75C19.25 12.7369 18.5683 =
14.5645 17.426 16.0118L21.4571 20.0429C21.8476 20.4334 21.8476 21.0666 21.4=
571 21.4571C21.0666 21.8476 20.4334 21.8476 20.0429 21.4571L16.0118 17.426C=
14.5645 18.5683 12.7369 19.25 10.75 19.25C6.05558 19.25 2.25 15.4444 2.25 1=
0.75Z" fill=3D"currentColor"></path></svg></button></span><span class=3D"fl=
ex" data-state=3D"closed"><a aria-label=3D"New chat" data-testid=3D"create-=
new-chat-button" class=3D"text-token-text-secondary hover:bg-token-surface-=
hover focus-visible:bg-token-surface-hover flex h-10 items-center justify-c=
enter rounded-lg px-2 focus-visible:outline-0" href=3D"https://chatgpt.com/=
" data-discover=3D"true"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 =
24" fill=3D"currentColor" xmlns=3D"http://www.w3.org/2000/svg" class=3D"ico=
n-xl-heavy"><path d=3D"M15.6729 3.91287C16.8918 2.69392 18.8682 2.69392 20.=
0871 3.91287C21.3061 5.13182 21.3061 7.10813 20.0871 8.32708L14.1499 14.264=
3C13.3849 15.0293 12.3925 15.5255 11.3215 15.6785L9.14142 15.9899C8.82983 1=
6.0344 8.51546 15.9297 8.29289 15.7071C8.07033 15.4845 7.96554 15.1701 8.01=
005 14.8586L8.32149 12.6785C8.47449 11.6075 8.97072 10.615 9.7357 9.85006L1=
5.6729 3.91287ZM18.6729 5.32708C18.235 4.88918 17.525 4.88918 17.0871 5.327=
08L11.1499 11.2643C10.6909 11.7233 10.3932 12.3187 10.3014 12.9613L10.1785 =
13.8215L11.0386 13.6986C11.6812 13.6068 12.2767 13.3091 12.7357 12.8501L18.=
6729 6.91287C19.1108 6.47497 19.1108 5.76499 18.6729 5.32708ZM11 3.99929C11=
.0004 4.55157 10.5531 4.99963 10.0008 5.00007C9.00227 5.00084 8.29769 5.008=
27 7.74651 5.06064C7.20685 5.11191 6.88488 5.20117 6.63803 5.32695C6.07354 =
5.61457 5.6146 6.07351 5.32698 6.63799C5.19279 6.90135 5.10062 7.24904 5.05=
118 7.8542C5.00078 8.47105 5 9.26336 5 10.4V13.6C5 14.7366 5.00078 15.5289 =
5.05118 16.1457C5.10062 16.7509 5.19279 17.0986 5.32698 17.3619C5.6146 17.9=
264 6.07354 18.3854 6.63803 18.673C6.90138 18.8072 7.24907 18.8993 7.85424 =
18.9488C8.47108 18.9992 9.26339 19 10.4 19H13.6C14.7366 19 15.5289 18.9992 =
16.1458 18.9488C16.7509 18.8993 17.0986 18.8072 17.362 18.673C17.9265 18.38=
54 18.3854 17.9264 18.673 17.3619C18.7988 17.1151 18.8881 16.7931 18.9393 1=
6.2535C18.9917 15.7023 18.9991 14.9977 18.9999 13.9992C19.0003 13.4469 19.4=
484 12.9995 20.0007 13C20.553 13.0004 21.0003 13.4485 20.9999 14.0007C20.99=
91 14.9789 20.9932 15.7808 20.9304 16.4426C20.8664 17.116 20.7385 17.7136 2=
0.455 18.2699C19.9757 19.2107 19.2108 19.9756 18.27 20.455C17.6777 20.7568 =
17.0375 20.8826 16.3086 20.9421C15.6008 21 14.7266 21 13.6428 21H10.3572C9.=
27339 21 8.39925 21 7.69138 20.9421C6.96253 20.8826 6.32234 20.7568 5.73005=
 20.455C4.78924 19.9756 4.02433 19.2107 3.54497 18.2699C3.24318 17.6776 3.1=
1737 17.0374 3.05782 16.3086C2.99998 15.6007 2.99999 14.7266 3 13.6428V10.3=
572C2.99999 9.27337 2.99998 8.39922 3.05782 7.69134C3.11737 6.96249 3.24318=
 6.3223 3.54497 5.73001C4.02433 4.7892 4.78924 4.0243 5.73005 3.54493C6.286=
33 3.26149 6.88399 3.13358 7.55735 3.06961C8.21919 3.00673 9.02103 3.00083 =
9.99922 3.00007C10.5515 2.99964 10.9996 3.447 11 3.99929Z" fill=3D"currentC=
olor"></path></svg></a></span></div></div><div class=3D"flex-col flex-1 tra=
nsition-opacity duration-500 relative pe-3 overflow-y-auto"><div id=3D"side=
bar" class=3D"group/sidebar"><div class=3D"bg-token-sidebar-surface-primary=
 pt-0"><span class=3D"flex w-full items-center" data-state=3D"closed"><div =
class=3D"flex-1 transition-transform duration-100 active:scale-[0.98]"><a t=
itle=3D"ChatGPT" class=3D"no-draggable group rounded-lg active:opacity-90 b=
g-[var(--item-background-color)] h-9 text-sm screen-arch:relative screen-ar=
ch:bg-transparent screen-arch:py-[7px] flex items-center gap-2.5 p-2" href=
=3D"https://chatgpt.com/" data-discover=3D"true" style=3D"--item-background=
-color: var(--sidebar-surface-primary);"><div class=3D"text-token-text-seco=
ndary flex h-6 w-6 items-center justify-center"><div class=3D"h-6 w-6"><div=
 class=3D"gizmo-shadow-stroke bg-token-main-surface-primary text-token-text=
-primary relative flex h-full items-center justify-center rounded-full"><di=
v class=3D"flex h-full w-full items-center justify-center" style=3D"opacity=
: 1;"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" x=
mlns=3D"http://www.w3.org/2000/svg" class=3D"h-2/3 w-2/3"><text x=3D"-9999"=
 y=3D"-9999">ChatGPT</text><path d=3D"M9.20509 8.76511V6.50545C9.20509 6.31=
513 9.27649 6.17234 9.44293 6.0773L13.9861 3.46088C14.6046 3.10413 15.342 2=
.93769 16.103 2.93769C18.9573 2.93769 20.7651 5.14983 20.7651 7.50454C20.76=
51 7.67098 20.7651 7.86129 20.7412 8.05161L16.0316 5.2924C15.7462 5.12596 1=
5.4607 5.12596 15.1753 5.2924L9.20509 8.76511ZM19.8135 17.5659V12.1664C19.8=
135 11.8333 19.6708 11.5955 19.3854 11.429L13.4152 7.95633L15.3656 6.83833C=
15.5321 6.74328 15.6749 6.74328 15.8413 6.83833L20.3845 9.45474C21.6928 10.=
216 22.5728 11.8333 22.5728 13.4031C22.5728 15.2108 21.5025 16.8758 19.8135=
 17.5657V17.5659ZM7.80173 12.8088L5.8513 11.6671C5.68486 11.5721 5.61346 11=
.4293 5.61346 11.239V6.00613C5.61346 3.46111 7.56389 1.53433 10.2042 1.5343=
3C11.2033 1.53433 12.1307 1.86743 12.9159 2.46202L8.2301 5.17371C7.94475 5.=
34015 7.80195 5.57798 7.80195 5.91109V12.809L7.80173 12.8088ZM12 15.2349L9.=
20509 13.6651V10.3351L12 8.76534L14.7947 10.3351V13.6651L12 15.2349ZM13.795=
8 22.4659C12.7967 22.4659 11.8693 22.1328 11.0841 21.5382L15.7699 18.8265C1=
6.0553 18.6601 16.198 18.4222 16.198 18.0891V11.1912L18.1723 12.3329C18.338=
8 12.4279 18.4102 12.5707 18.4102 12.761V17.9939C18.4102 20.5389 16.4359 22=
.4657 13.7958 22.4657V22.4659ZM8.15848 17.1617L3.61528 14.5452C2.30696 13.7=
84 1.42701 12.1667 1.42701 10.5969C1.42701 8.76534 2.52115 7.12414 4.20987 =
6.43428V11.8574C4.20987 12.1905 4.35266 12.4284 4.63802 12.5948L10.5846 16.=
0436L8.63415 17.1617C8.46771 17.2567 8.32492 17.2567 8.15848 17.1617ZM7.897=
 21.0625C5.20919 21.0625 3.23488 19.0407 3.23488 16.5432C3.23488 16.3529 3.=
25875 16.1626 3.2824 15.9723L7.96817 18.6839C8.25352 18.8504 8.53911 18.850=
4 8.82446 18.6839L14.7947 15.2351V17.4948C14.7947 17.6851 14.7233 17.8279 1=
4.5568 17.9229L10.0136 20.5393C9.39518 20.8961 8.6578 21.0625 7.89677 21.06=
25H7.897ZM13.7958 23.8929C16.6739 23.8929 19.0762 21.8474 19.6235 19.1357C2=
2.2874 18.4459 24 15.9484 24 13.4034C24 11.7383 23.2865 10.121 22.002 8.955=
42C22.121 8.45588 22.1924 7.95633 22.1924 7.45702C22.1924 4.0557 19.4331 1.=
51045 16.2458 1.51045C15.6037 1.51045 14.9852 1.60549 14.3668 1.81968C13.29=
63 0.773071 11.8215 0.107086 10.2042 0.107086C7.32606 0.107086 4.92383 2.15=
256 4.37653 4.86425C1.7126 5.55411 0 8.05161 0 10.5966C0 12.2617 0.713506 1=
3.879 1.99795 15.0446C1.87904 15.5441 1.80764 16.0436 1.80764 16.543C1.8076=
4 19.9443 4.56685 22.4895 7.75421 22.4895C8.39632 22.4895 9.01478 22.3945 9=
.63324 22.1803C10.7035 23.2269 12.1783 23.8929 13.7958 23.8929Z" fill=3D"cu=
rrentColor"></path></svg></div></div></div></div><div class=3D"text-token-t=
ext-primary grow overflow-hidden text-sm text-ellipsis whitespace-nowrap">C=
hatGPT</div></a></div></span></div><div class=3D"relative self-stretch"><a =
title=3D"Sora" class=3D"no-draggable group rounded-lg active:opacity-90 bg-=
[var(--item-background-color)] h-9 text-sm screen-arch:relative screen-arch=
:bg-transparent screen-arch:py-[7px] flex items-center gap-2.5 p-2" href=3D=
"https://sora.chatgpt.com/?utm_source=3Dchatgpt" target=3D"_blank" style=3D=
"--item-background-color: var(--sidebar-surface-primary);"><div class=3D"te=
xt-token-text-secondary flex h-6 w-6 items-center justify-center"><img alt=
=3D"Sora icon" src=3D"https://cdn.oaistatic.com/assets/sora-mutf8tav.webp">=
</div><div class=3D"text-token-text-primary grow overflow-hidden text-sm te=
xt-ellipsis whitespace-nowrap">Sora</div><div class=3D"text-token-text-seco=
ndary hover:text-token-text-primary can-hover:group-hover:visible invisible=
"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><g transform=3D"rotate(45=
 12 12)"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 3C12.26=
52 3 12.5196 3.10536 12.7071 3.29289L19.7071 10.2929C20.0976 10.6834 20.097=
6 11.3166 19.7071 11.7071C19.3166 12.0976 18.6834 12.0976 18.2929 11.7071L1=
3 6.41421V20C13 20.5523 12.5523 21 12 21C11.4477 21 11 20.5523 11 20V6.4142=
2L5.70711 11.7071C5.31658 12.0976 4.68342 12.0976 4.29289 11.7071C3.90237 1=
1.3166 3.90237 10.6834 4.29289 10.2929L11.2929 3.29289C11.4804 3.10536 11.7=
348 3 12 3Z" fill=3D"currentColor"></path></g></svg></div></a></div><div cl=
ass=3D"relative self-stretch" data-testid=3D"sidebar-item-library"><a title=
=3D"Library" class=3D"no-draggable group rounded-lg active:opacity-90 bg-[v=
ar(--item-background-color)] h-9 text-sm screen-arch:relative screen-arch:b=
g-transparent screen-arch:py-[7px] flex items-center gap-2.5 p-2" href=3D"h=
ttps://chatgpt.com/library" data-discover=3D"true" style=3D"--item-backgrou=
nd-color: var(--sidebar-surface-primary);"><div class=3D"text-token-text-se=
condary flex h-6 w-6 items-center justify-center"><div class=3D"flex h-6 w-=
6 items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0=
 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-=
sm"><path d=3D"M12.3381 11.8959C12.4534 12.7162 11.8819 13.4747 11.0615 13.=
59C10.2411 13.7053 9.48263 13.1337 9.36733 12.3134C9.25204 11.493 9.82361 1=
0.7345 10.644 10.6192C11.4643 10.5039 12.2228 11.0755 12.3381 11.8959Z" fil=
l=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M7.63616 3.70373C7.89431 1.94808 9.56549 0.797489 11.2968 1.03005L20.=
1984 2.22577C21.9378 2.45942 23.227 4.02148 22.9672 5.78826L21.7162 14.2962=
C21.458 16.0519 19.7869 17.2025 18.0555 16.9699L16.7694 16.7971L16.9691 18.=
218C17.2111 19.9396 16.0116 21.5314 14.2899 21.7734L5.78198 22.9691C4.06037=
 23.211 2.46858 22.0115 2.22662 20.2899L1.0309 11.782C0.788948 10.0603 1.98=
845 8.46855 3.71006 8.2266L7.03992 7.75862L7.63616 3.70373ZM9.10408 7.46852=
L12.218 7.03088C13.9396 6.78892 15.5314 7.98842 15.7734 9.71004L16.4803 14.=
7404L18.3218 14.9877C19.0486 15.0853 19.6502 14.599 19.7375 14.0053L20.9885=
 5.49731C21.0742 4.91468 20.6508 4.3045 19.9321 4.20796L11.0305 3.01225C10.=
3038 2.91462 9.70219 3.40093 9.61488 3.99469L9.10408 7.46852ZM13.7928 9.988=
38C13.7046 9.36059 13.1242 8.92319 12.4964 9.01142L3.98841 10.2071C3.36061 =
10.2954 2.92321 10.8758 3.01144 11.5036L3.62988 15.904L4.69782 14.8409C5.80=
805 13.7357 7.56201 13.6151 8.81311 14.5579L14.8931 19.1395C14.9834 18.9455=
 15.0206 18.724 14.9886 18.4963L13.7928 9.98838ZM12.6844 19.9794L7.60948 16=
.1551C7.15326 15.8114 6.51367 15.8554 6.10882 16.2584L3.97781 18.3797L4.207=
16 20.0116C4.29539 20.6394 4.87584 21.0768 5.50364 20.9885L12.6844 19.9794Z=
" fill=3D"currentColor"></path></svg></div></div><div class=3D"text-token-t=
ext-primary grow overflow-hidden text-sm text-ellipsis whitespace-nowrap">L=
ibrary</div></a></div><div class=3D""><a class=3D"flex h-9 w-full items-cen=
ter gap-2.5 rounded-lg px-2 text-token-text-primary can-hover:hover:bg-toke=
n-sidebar-surface-secondary duration-100 active:scale-[0.98] motion-safe:tr=
ansition-transform" data-testid=3D"explore-gpts-button" href=3D"https://cha=
tgpt.com/gpts" data-discover=3D"true"><div class=3D"text-token-text-seconda=
ry flex h-6 w-6 items-center justify-center"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-md"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M6=
.75 4.5C5.50736 4.5 4.5 5.50736 4.5 6.75C4.5 7.99264 5.50736 9 6.75 9C7.992=
64 9 9 7.99264 9 6.75C9 5.50736 7.99264 4.5 6.75 4.5ZM2.5 6.75C2.5 4.40279 =
4.40279 2.5 6.75 2.5C9.09721 2.5 11 4.40279 11 6.75C11 9.09721 9.09721 11 6=
.75 11C4.40279 11 2.5 9.09721 2.5 6.75Z" fill=3D"currentColor"></path><path=
 fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M17.25 4.5C16.0074 4.5 15=
 5.50736 15 6.75C15 7.99264 16.0074 9 17.25 9C18.4926 9 19.5 7.99264 19.5 6=
.75C19.5 5.50736 18.4926 4.5 17.25 4.5ZM13 6.75C13 4.40279 14.9028 2.5 17.2=
5 2.5C19.5972 2.5 21.5 4.40279 21.5 6.75C21.5 9.09721 19.5972 11 17.25 11C1=
4.9028 11 13 9.09721 13 6.75Z" fill=3D"currentColor"></path><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M6.75 15C5.50736 15 4.5 16.0074 4.5=
 17.25C4.5 18.4926 5.50736 19.5 6.75 19.5C7.99264 19.5 9 18.4926 9 17.25C9 =
16.0074 7.99264 15 6.75 15ZM2.5 17.25C2.5 14.9028 4.40279 13 6.75 13C9.0972=
1 13 11 14.9028 11 17.25C11 19.5972 9.09721 21.5 6.75 21.5C4.40279 21.5 2.5=
 19.5972 2.5 17.25Z" fill=3D"currentColor"></path><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M17.25 15C16.0074 15 15 16.0074 15 17.25C15 1=
8.4926 16.0074 19.5 17.25 19.5C18.4926 19.5 19.5 18.4926 19.5 17.25C19.5 16=
.0074 18.4926 15 17.25 15ZM13 17.25C13 14.9028 14.9028 13 17.25 13C19.5972 =
13 21.5 14.9028 21.5 17.25C21.5 19.5972 19.5972 21.5 17.25 21.5C14.9028 21.=
5 13 19.5972 13 17.25Z" fill=3D"currentColor"></path></svg></div><span clas=
s=3D"text-sm">Explore GPTs</span></a><div class=3D"screen-arch:sticky scree=
n-arch:top-[var(--sticky-title-offset)] z-20 text-token-text-primary screen=
-arch:-me-2 screen-arch:h-10 screen-arch:min-w-[50cqw] screen-arch:-transla=
te-x-2 screen-arch:bg-[var(--sidebar-surface)] screen-arch:py-1 screen-arch=
:text-token-text-secondary overflow-clip ps-2 pt-7 text-xs font-semibold br=
eak-all text-ellipsis select-none"><h2 id=3D"snorlax-heading" class=3D"flex=
 h-[26px] w-full items-center justify-between text-xs">Projects<span class=
=3D"" data-state=3D"closed"><button aria-label=3D"Create new project" class=
=3D"me-1 flex rounded-lg focus-visible:opacity-100 items-center text-token-=
text-primary hover:bg-token-sidebar-surface-secondary can-hover:opacity-0 c=
an-hover:pointer-events-none can-hover:group-hover/sidebar:opacity-100 can-=
hover:group-hover/sidebar:pointer-events-auto transition-opacity duration-3=
00"><div class=3D"text-token-text-secondary flex h-[26px] w-[26px] items-ce=
nter justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" =
fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path =
d=3D"M12 6.00003C12.5523 6.00003 13 6.44775 13 7.00003L13 11L17 11C17.5523 =
11 18 11.4477 18 12C18 12.5523 17.5523 13 17 13L13 13L13 17C13 17.5523 12.5=
523 18 12 18C11.4477 18 11 17.5523 11 17L11 13L7 13C6.44771 13 6 12.5523 6 =
12C6 11.4477 6.44771 11 7 11L11 11L11 7.00003C11 6.44775 11.4477 6.00003 12=
 6.00003Z" fill=3D"currentColor"></path></svg></div></button></span></h2></=
div><aside class=3D"flex flex-col gap-4 mb-0"><ul aria-labelledby=3D"snorla=
x-heading" class=3D"flex flex-col screen-arch:mb-3"><div><a title=3D"DL Fea=
ture Extraction" class=3D"no-draggable group rounded-lg active:opacity-90 b=
g-[var(--item-background-color)] h-9 text-sm screen-arch:relative screen-ar=
ch:bg-transparent screen-arch:py-[7px] flex items-center gap-2.5 p-2" href=
=3D"https://chatgpt.com/g/g-p-680fc28741cc8191b598d2af10e5285a-dl-feature-e=
xtraction/project" data-discover=3D"true" style=3D"--item-background-color:=
 var(--sidebar-surface-primary);"><div class=3D"text-token-text-secondary f=
lex h-6 w-6 items-center justify-center"><span class=3D"" data-state=3D"clo=
sed"><button class=3D"text-token-text-secondary hover:bg-token-sidebar-surf=
ace-tertiary -m-0.5 flex rounded-xl p-0.5"><div class=3D"h-6 w-6"><div clas=
s=3D"text-token-text-primary relative flex h-full items-center justify-cent=
er"><div class=3D"[&amp;_path]:stroke-current text-token-text-primary" styl=
e=3D"width: 18px; height: 18px;"><div><svg xmlns=3D"http://www.w3.org/2000/=
svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink" viewBox=3D"0 0 24 24" wid=
th=3D"24" height=3D"24" preserveAspectRatio=3D"xMidYMid meet" style=3D"widt=
h: 100%; height: 100%; transform: translate3d(0px, 0px, 0px); content-visib=
ility: visible;"><defs><clipPath id=3D"__lottie_element_34"><rect width=3D"=
24" height=3D"24" x=3D"0" y=3D"0"></rect></clipPath></defs><g clip-path=3D"=
url(#__lottie_element_34)"><g transform=3D"matrix(1,0,0,1,0,0)" opacity=3D"=
1" style=3D"display: block;"><g opacity=3D"1" transform=3D"matrix(1,0,0,1,2=
,4)"><path stroke-linecap=3D"round" stroke-linejoin=3D"miter" fill-opacity=
=3D"0" stroke-miterlimit=3D"4" stroke=3D"rgb(0,0,0)" stroke-opacity=3D"1" s=
troke-width=3D"2" d=3D" M18,6.75 C18,5.352180004119873 18,4.403260231018066=
 17.7716007232666,3.85194993019104 C17.467199325561523,3.1168699264526367 1=
6.883100509643555,2.5328400135040283 16.148099899291992,2.2283599376678467 =
C15.596699714660645,2 14.89780044555664,2 13.5,2 C12.471400260925293,2 11.4=
4279956817627,2 10.414199829101562,2 C10.245599746704102,2 10.1612997055053=
71,2 10.080100059509277,1.9955899715423584 C9.397600173950195,1.95854997634=
8877 8.748200416564941,1.6895699501037598 8.239399909973145,1.2331700325012=
207 C8.178799629211426,1.1788400411605835 8.119199752807617,1.1192300319671=
63 8,1 C8,1 8,1 8,1 C7.880770206451416,0.8807700276374817 7.821159839630127=
,0.8211600184440613 7.7606000900268555,0.7668300271034241 C7.25181007385253=
9,0.31042999029159546 6.6024298667907715,0.041450001299381256 5.91993999481=
2012,0.004410000052303076 C5.838709831237793,0 5.75439977645874,0 5.5857901=
57318115,0 C5.323860168457031,0 5.061930179595947,0 4.800000190734863,0 C3.=
119839906692505,0 2.2797598838806152,0 1.6380300521850586,0.326979994773864=
75 C1.0735399723052979,0.6146000027656555 0.6146000027656555,1.073539972305=
2979 0.32697999477386475,1.6380300521850586 C0,2.2797598838806152 0,3.11983=
9906692505 0,4.800000190734863 C0,6.933333396911621 0,9.066666603088379 0,1=
1.199999809265137 C0,12.880200386047363 0,13.720199584960938 0.326979994773=
86475,14.362000465393066 C0.6146000027656555,14.92650032043457 1.0735399723=
052979,15.38539981842041 1.6380300521850586,15.67300033569336 C2.2797598838=
806152,16 3.119839906692505,16 4.800000190734863,16 C6.199999809265137,16 7=
.599999904632568,16 9,16"></path></g></g><g transform=3D"matrix(1,0,0,1,0,0=
)" opacity=3D"1" style=3D"display: block;"><g opacity=3D"1" transform=3D"ma=
trix(1,0,0,1,3,11.928171157836914)"><path stroke-linecap=3D"round" stroke-l=
inejoin=3D"round" fill-opacity=3D"0" stroke=3D"rgb(0,0,0)" stroke-opacity=
=3D"1" stroke-width=3D"2" d=3D" M3.3380892276763916,0.0718282088637352 C3.3=
380892276763916,0.0718282088637352 0.7009022235870361,2.436751127243042 0.3=
269801139831543,3.954716205596924 C-0.046942055225372314,5.472681999206543 =
0,6.027144432067871 0.32697999477386475,6.602755546569824 C0.61460000276565=
55,7.109038352966309 1.0735399723052979,7.5206122398376465 1.63803005218505=
86,7.7785515785217285 C2.2797598838806152,8.07182788848877 3.11983990669250=
5,8.07182788848877 4.800000190734863,8.07182788848877 C7.599999904632568,8.=
07182788848877 10.399999618530273,8.07182788848877 13.199999809265137,8.071=
82788848877 C14.880200386047363,8.07182788848877 15.079246520996094,8.07182=
8842163086 15.721046447753906,7.778552055358887 C16.285547256469727,7.52061=
22398376465 16.744447708129883,7.10903787612915 17.032047271728516,6.602755=
069732666 C17.201087951660156,6.3051981925964355 17.376131057739258,5.36748=
8384246826 17.94993019104004,3.954716682434082 C18.486120223999023,2.634541=
0346984863 19.40652084350586,0.8532359004020691 20,0.0718282088637352 C20,0=
.0718282088637352 3.3380889892578125,0.0718282088637352 3.3380889892578125,=
0.0718282088637352 C3.3380889892578125,0.0718282088637352 3.338089227676391=
6,0.0718282088637352 3.3380892276763916,0.0718282088637352z"></path></g></g=
></g></svg></div></div></div></div></button></span></div><div class=3D"text=
-token-text-primary grow overflow-hidden text-sm text-ellipsis whitespace-n=
owrap">DL Feature Extraction</div><div class=3D"flex gap-2"></div></a></div=
><div class=3D"overflow-hidden" style=3D"opacity: 1; transform: none;"><div=
 class=3D"screen-arch:gap-0.5 flex flex-col"><li class=3D"relative"><div dr=
aggable=3D"true" class=3D"no-draggable group rounded-lg active:opacity-90 b=
g-[var(--item-background-color)] h-9 text-sm screen-arch:bg-transparent rel=
ative ms-7 ps-1" style=3D"--item-background-color: var(--sidebar-surface-pr=
imary);"><a class=3D"motion-safe:group-active:screen-arch:scale-[98%] motio=
n-safe:group-active:screen-arch:transition-transform motion-safe:group-acti=
ve:screen-arch:duration-100 flex items-center gap-2 p-2" data-history-item-=
link=3D"true" href=3D"https://chatgpt.com/c/680fc492-391c-8013-bde1-acd4540=
872cd" data-discover=3D"true" style=3D"mask-image: var(--sidebar-mask);"><d=
iv class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" t=
itle=3D"RDM from CNN Layer2">RDM from CNN Layer2</div></a></div></li></div>=
</div><div><a title=3D"Deep Learning Final Project" class=3D"no-draggable g=
roup rounded-lg active:opacity-90 bg-[var(--item-background-color)] h-9 tex=
t-sm screen-arch:relative screen-arch:bg-transparent screen-arch:py-[7px] f=
lex items-center gap-2.5 p-2" href=3D"https://chatgpt.com/g/g-p-68014192735=
0819189b653a4f7c86099-deep-learning-final-project/project" data-discover=3D=
"true" style=3D"--item-background-color: var(--sidebar-surface-primary);"><=
div class=3D"text-token-text-secondary flex h-6 w-6 items-center justify-ce=
nter"><span class=3D"" data-state=3D"closed"><button class=3D"text-token-te=
xt-secondary hover:bg-token-sidebar-surface-tertiary -m-0.5 flex rounded-xl=
 p-0.5"><div class=3D"h-6 w-6"><div class=3D"text-token-text-primary relati=
ve flex h-full items-center justify-center"><div class=3D"[&amp;_path]:stro=
ke-current text-token-text-primary" style=3D"width: 18px; height: 18px;"><d=
iv><svg xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.o=
rg/1999/xlink" viewBox=3D"0 0 24 24" width=3D"24" height=3D"24" preserveAsp=
ectRatio=3D"xMidYMid meet" style=3D"width: 100%; height: 100%; transform: t=
ranslate3d(0px, 0px, 0px); content-visibility: visible;"><defs><clipPath id=
=3D"__lottie_element_42"><rect width=3D"24" height=3D"24" x=3D"0" y=3D"0"><=
/rect></clipPath></defs><g clip-path=3D"url(#__lottie_element_42)"><g trans=
form=3D"matrix(1,0,0,1,0,0)" opacity=3D"1" style=3D"display: block;"><g opa=
city=3D"1" transform=3D"matrix(1,0,0,1,2,4)"><path stroke-linecap=3D"round"=
 stroke-linejoin=3D"miter" fill-opacity=3D"0" stroke-miterlimit=3D"4" strok=
e=3D"rgb(0,0,0)" stroke-opacity=3D"1" stroke-width=3D"2" d=3D" M18,6.75 C18=
,5.352180004119873 18,4.403260231018066 17.7716007232666,3.85194993019104 C=
17.467199325561523,3.1168699264526367 16.883100509643555,2.5328400135040283=
 16.148099899291992,2.2283599376678467 C15.596699714660645,2 14.89780044555=
664,2 13.5,2 C12.471400260925293,2 11.44279956817627,2 10.414199829101562,2=
 C10.245599746704102,2 10.161299705505371,2 10.080100059509277,1.9955899715=
423584 C9.397600173950195,1.958549976348877 8.748200416564941,1.68956995010=
37598 8.239399909973145,1.2331700325012207 C8.178799629211426,1.17884004116=
05835 8.119199752807617,1.119230031967163 8,1 C8,1 8,1 8,1 C7.8807702064514=
16,0.8807700276374817 7.821159839630127,0.8211600184440613 7.76060009002685=
55,0.7668300271034241 C7.251810073852539,0.31042999029159546 6.602429866790=
7715,0.041450001299381256 5.919939994812012,0.004410000052303076 C5.8387098=
31237793,0 5.75439977645874,0 5.585790157318115,0 C5.323860168457031,0 5.06=
1930179595947,0 4.800000190734863,0 C3.119839906692505,0 2.2797598838806152=
,0 1.6380300521850586,0.32697999477386475 C1.0735399723052979,0.61460000276=
56555 0.6146000027656555,1.0735399723052979 0.32697999477386475,1.638030052=
1850586 C0,2.2797598838806152 0,3.119839906692505 0,4.800000190734863 C0,6.=
933333396911621 0,9.066666603088379 0,11.199999809265137 C0,12.880200386047=
363 0,13.720199584960938 0.32697999477386475,14.362000465393066 C0.61460000=
27656555,14.92650032043457 1.0735399723052979,15.38539981842041 1.638030052=
1850586,15.67300033569336 C2.2797598838806152,16 3.119839906692505,16 4.800=
000190734863,16 C6.199999809265137,16 7.599999904632568,16 9,16"></path></g=
></g><g transform=3D"matrix(1,0,0,1,0,0)" opacity=3D"1" style=3D"display: b=
lock;"><g opacity=3D"1" transform=3D"matrix(1,0,0,1,3,11.928171157836914)">=
<path stroke-linecap=3D"round" stroke-linejoin=3D"round" fill-opacity=3D"0"=
 stroke=3D"rgb(0,0,0)" stroke-opacity=3D"1" stroke-width=3D"2" d=3D" M3.338=
0892276763916,0.0718282088637352 C3.3380892276763916,0.0718282088637352 0.7=
009022235870361,2.436751127243042 0.3269801139831543,3.954716205596924 C-0.=
046942055225372314,5.472681999206543 0,6.027144432067871 0.3269799947738647=
5,6.602755546569824 C0.6146000027656555,7.109038352966309 1.073539972305297=
9,7.5206122398376465 1.6380300521850586,7.7785515785217285 C2.2797598838806=
152,8.07182788848877 3.119839906692505,8.07182788848877 4.800000190734863,8=
.07182788848877 C7.599999904632568,8.07182788848877 10.399999618530273,8.07=
182788848877 13.199999809265137,8.07182788848877 C14.880200386047363,8.0718=
2788848877 15.079246520996094,8.071828842163086 15.721046447753906,7.778552=
055358887 C16.285547256469727,7.5206122398376465 16.744447708129883,7.10903=
787612915 17.032047271728516,6.602755069732666 C17.201087951660156,6.305198=
1925964355 17.376131057739258,5.367488384246826 17.94993019104004,3.9547166=
82434082 C18.486120223999023,2.6345410346984863 19.40652084350586,0.8532359=
004020691 20,0.0718282088637352 C20,0.0718282088637352 3.3380889892578125,0=
.0718282088637352 3.3380889892578125,0.0718282088637352 C3.3380889892578125=
,0.0718282088637352 3.3380892276763916,0.0718282088637352 3.338089227676391=
6,0.0718282088637352z"></path></g></g></g></svg></div></div></div></div></b=
utton></span></div><div class=3D"text-token-text-primary grow overflow-hidd=
en text-sm text-ellipsis whitespace-nowrap">Deep Learning Final Project</di=
v><div class=3D"flex gap-2"></div></a></div><div class=3D"overflow-hidden" =
style=3D"opacity: 1; transform: none;"><div class=3D"screen-arch:gap-0.5 fl=
ex flex-col"><li class=3D"relative"><div draggable=3D"true" class=3D"no-dra=
ggable group rounded-lg active:opacity-90 bg-[var(--item-background-color)]=
 h-9 text-sm screen-arch:bg-transparent relative ms-7 ps-1" style=3D"--item=
-background-color: var(--sidebar-surface-tertiary);"><a class=3D"motion-saf=
e:group-active:screen-arch:scale-[98%] motion-safe:group-active:screen-arch=
:transition-transform motion-safe:group-active:screen-arch:duration-100 fle=
x items-center gap-2 p-2" data-history-item-link=3D"true" href=3D"https://c=
hatgpt.com/c/68014770-1430-8013-aea4-fe4265eba799" data-discover=3D"true" s=
tyle=3D"mask-image: var(--sidebar-mask);"><div class=3D"relative grow overf=
low-hidden whitespace-nowrap" dir=3D"auto" title=3D"Face-specific Analysis =
Script">Face-specific Analysis Script</div></a></div></li><li class=3D"rela=
tive"><div draggable=3D"true" class=3D"no-draggable group rounded-lg active=
:opacity-90 bg-[var(--item-background-color)] h-9 text-sm screen-arch:bg-tr=
ansparent relative ms-7 ps-1" style=3D"--item-background-color: var(--sideb=
ar-surface-primary);"><a class=3D"motion-safe:group-active:screen-arch:scal=
e-[98%] motion-safe:group-active:screen-arch:transition-transform motion-sa=
fe:group-active:screen-arch:duration-100 flex items-center gap-2 p-2" data-=
history-item-link=3D"true" href=3D"https://chatgpt.com/c/680fa9d4-4d58-8013=
-91dc-529365a46aa1" data-discover=3D"true" style=3D"mask-image: var(--sideb=
ar-mask);"><div class=3D"relative grow overflow-hidden whitespace-nowrap" d=
ir=3D"auto" title=3D"Load CNN Models HMO">Load CNN Models HMO</div></a></di=
v></li><li class=3D"relative"><div draggable=3D"true" class=3D"no-draggable=
 group rounded-lg active:opacity-90 bg-[var(--item-background-color)] h-9 t=
ext-sm screen-arch:bg-transparent relative ms-7 ps-1" style=3D"--item-backg=
round-color: var(--sidebar-surface-primary);"><a class=3D"motion-safe:group=
-active:screen-arch:scale-[98%] motion-safe:group-active:screen-arch:transi=
tion-transform motion-safe:group-active:screen-arch:duration-100 flex items=
-center gap-2 p-2" data-history-item-link=3D"true" href=3D"https://chatgpt.=
com/c/680e9f6d-6c18-8013-ae4a-807d35173a5e" data-discover=3D"true" style=3D=
"mask-image: var(--sidebar-mask);"><div class=3D"relative grow overflow-hid=
den whitespace-nowrap" dir=3D"auto" title=3D"Balance face non-face images">=
Balance face non-face images</div></a></div></li><li class=3D"relative"><di=
v draggable=3D"true" class=3D"no-draggable group rounded-lg active:opacity-=
90 bg-[var(--item-background-color)] h-9 text-sm screen-arch:bg-transparent=
 relative ms-7 ps-1" style=3D"--item-background-color: var(--sidebar-surfac=
e-primary);"><a class=3D"motion-safe:group-active:screen-arch:scale-[98%] m=
otion-safe:group-active:screen-arch:transition-transform motion-safe:group-=
active:screen-arch:duration-100 flex items-center gap-2 p-2" data-history-i=
tem-link=3D"true" href=3D"https://chatgpt.com/c/680ad30a-5af8-8013-8c94-3ab=
a343aa1c9" data-discover=3D"true" style=3D"mask-image: var(--sidebar-mask);=
"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"aut=
o" title=3D"Binary Classification Labeling">Binary Classification Labeling<=
/div></a></div></li><li class=3D"relative"><div draggable=3D"true" class=3D=
"no-draggable group rounded-lg active:opacity-90 bg-[var(--item-background-=
color)] h-9 text-sm screen-arch:bg-transparent relative ms-7 ps-1" style=3D=
"--item-background-color: var(--sidebar-surface-primary);"><a class=3D"moti=
on-safe:group-active:screen-arch:scale-[98%] motion-safe:group-active:scree=
n-arch:transition-transform motion-safe:group-active:screen-arch:duration-1=
00 flex items-center gap-2 p-2" data-history-item-link=3D"true" href=3D"htt=
ps://chatgpt.com/c/68043cbe-006c-8013-bf93-fc5f1d2885ca" data-discover=3D"t=
rue" style=3D"mask-image: var(--sidebar-mask);"><div class=3D"relative grow=
 overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"How LIME Works">H=
ow LIME Works</div></a></div></li></div></div></ul></aside><div id=3D"histo=
ry" class=3D"flex flex-col gap-2 text-token-text-primary text-sm mt-5 first=
:mt-0 false"><div><div class=3D"relative mt-5 first:mt-0 last:mb-5"><div cl=
ass=3D"bg-token-sidebar-surface-primary sticky top-0 z-20"><span class=3D"f=
lex h-9 items-center"><h3 class=3D"px-2 text-xs font-semibold text-ellipsis=
 overflow-hidden break-all pt-3 pb-2 text-token-text-primary">Today</h3></s=
pan></div><ol><li class=3D"relative" data-testid=3D"history-item-0"><div dr=
aggable=3D"true" class=3D"no-draggable group rounded-lg active:opacity-90 b=
g-[var(--item-background-color)] h-9 text-sm screen-arch:bg-transparent rel=
ative" style=3D"--item-background-color: var(--sidebar-surface-primary);"><=
a class=3D"motion-safe:group-active:screen-arch:scale-[98%] motion-safe:gro=
up-active:screen-arch:transition-transform motion-safe:group-active:screen-=
arch:duration-100 flex items-center gap-2 p-2" data-history-item-link=3D"tr=
ue" href=3D"https://chatgpt.com/c/6810e7a1-a840-8013-bab7-259c6e626c65" dat=
a-discover=3D"true" style=3D"mask-image: var(--sidebar-mask);"><div class=
=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"=
Fixing column mismatch">Fixing column mismatch</div></a></div></li><li clas=
s=3D"relative" data-testid=3D"history-item-1"><div draggable=3D"true" class=
=3D"no-draggable group rounded-lg active:opacity-90 bg-[var(--item-backgrou=
nd-color)] h-9 text-sm screen-arch:bg-transparent relative" style=3D"--item=
-background-color: var(--sidebar-surface-primary);"><a class=3D"motion-safe=
:group-active:screen-arch:scale-[98%] motion-safe:group-active:screen-arch:=
transition-transform motion-safe:group-active:screen-arch:duration-100 flex=
 items-center gap-2 p-2" data-history-item-link=3D"true" href=3D"https://ch=
atgpt.com/c/6812f4ef-7bc4-8013-93f1-ff4231dc5e05" data-discover=3D"true" st=
yle=3D"mask-image: var(--sidebar-mask);"><div class=3D"relative grow overfl=
ow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Fogo de Ch=C3=A3o Deals"=
>Fogo de Ch=C3=A3o Deals</div></a></div></li></ol></div><div class=3D"relat=
ive mt-5 first:mt-0 last:mb-5"><div class=3D"bg-token-sidebar-surface-prima=
ry sticky top-0 z-20"><span class=3D"flex h-9 items-center"><h3 class=3D"px=
-2 text-xs font-semibold text-ellipsis overflow-hidden break-all pt-3 pb-2 =
text-token-text-primary">Yesterday</h3></span></div><ol><li class=3D"relati=
ve" data-testid=3D"history-item-0"><div draggable=3D"true" class=3D"no-drag=
gable group rounded-lg active:opacity-90 bg-[var(--item-background-color)] =
h-9 text-sm screen-arch:bg-transparent relative" style=3D"--item-background=
-color: var(--sidebar-surface-primary);"><a class=3D"motion-safe:group-acti=
ve:screen-arch:scale-[98%] motion-safe:group-active:screen-arch:transition-=
transform motion-safe:group-active:screen-arch:duration-100 flex items-cent=
er gap-2 p-2" data-history-item-link=3D"true" href=3D"https://chatgpt.com/c=
/6812dd09-dfa0-8013-bb9e-e523a06e322b" data-discover=3D"true" style=3D"mask=
-image: var(--sidebar-mask);"><div class=3D"relative grow overflow-hidden w=
hitespace-nowrap" dir=3D"auto" title=3D"Internship Opportunity Clarificatio=
n">Internship Opportunity Clarification</div></a></div></li><li class=3D"re=
lative" data-testid=3D"history-item-1"><div draggable=3D"true" class=3D"no-=
draggable group rounded-lg active:opacity-90 bg-[var(--item-background-colo=
r)] h-9 text-sm screen-arch:bg-transparent relative" style=3D"--item-backgr=
ound-color: var(--sidebar-surface-primary);"><a class=3D"motion-safe:group-=
active:screen-arch:scale-[98%] motion-safe:group-active:screen-arch:transit=
ion-transform motion-safe:group-active:screen-arch:duration-100 flex items-=
center gap-2 p-2" data-history-item-link=3D"true" href=3D"https://chatgpt.c=
om/c/6812dcae-b56c-8013-abf7-82c3190e2651" data-discover=3D"true" style=3D"=
mask-image: var(--sidebar-mask);"><div class=3D"relative grow overflow-hidd=
en whitespace-nowrap" dir=3D"auto" title=3D"Sleuth Kit Overview">Sleuth Kit=
 Overview</div></a></div></li><li class=3D"relative" data-testid=3D"history=
-item-2"><div draggable=3D"true" class=3D"no-draggable group rounded-lg act=
ive:opacity-90 bg-[var(--item-background-color)] h-9 text-sm screen-arch:bg=
-transparent relative" style=3D"--item-background-color: var(--sidebar-surf=
ace-primary);"><a class=3D"motion-safe:group-active:screen-arch:scale-[98%]=
 motion-safe:group-active:screen-arch:transition-transform motion-safe:grou=
p-active:screen-arch:duration-100 flex items-center gap-2 p-2" data-history=
-item-link=3D"true" href=3D"https://chatgpt.com/c/6812996f-e5d0-8013-82ec-9=
f9ce8613036" data-discover=3D"true" style=3D"mask-image: var(--sidebar-mask=
);"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"a=
uto" title=3D"Share GitHub Project Recruiter">Share GitHub Project Recruite=
r</div></a></div></li><li class=3D"relative" data-testid=3D"history-item-3"=
><div draggable=3D"true" class=3D"no-draggable group rounded-lg active:opac=
ity-90 bg-[var(--item-background-color)] h-9 text-sm screen-arch:bg-transpa=
rent relative" style=3D"--item-background-color: var(--sidebar-surface-prim=
ary);"><a class=3D"motion-safe:group-active:screen-arch:scale-[98%] motion-=
safe:group-active:screen-arch:transition-transform motion-safe:group-active=
:screen-arch:duration-100 flex items-center gap-2 p-2" data-history-item-li=
nk=3D"true" href=3D"https://chatgpt.com/c/68126b63-5b38-8013-a03d-6fe922c9c=
114" data-discover=3D"true" style=3D"mask-image: var(--sidebar-mask);"><div=
 class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" tit=
le=3D"Spearman's Rank Correlation Explained">Spearman's Rank Correlation Ex=
plained</div></a></div></li></ol></div><div class=3D"relative mt-5 first:mt=
-0 last:mb-5"><div class=3D"bg-token-sidebar-surface-primary sticky top-0 z=
-20"><span class=3D"flex h-9 items-center"><h3 class=3D"px-2 text-xs font-s=
emibold text-ellipsis overflow-hidden break-all pt-3 pb-2 text-token-text-p=
rimary">Previous 7 Days</h3></span></div><ol><li class=3D"relative" data-te=
stid=3D"history-item-0"><div draggable=3D"true" class=3D"no-draggable group=
 rounded-lg active:opacity-90 bg-[var(--item-background-color)] h-9 text-sm=
 screen-arch:bg-transparent relative" style=3D"--item-background-color: var=
(--sidebar-surface-primary);"><a class=3D"motion-safe:group-active:screen-a=
rch:scale-[98%] motion-safe:group-active:screen-arch:transition-transform m=
otion-safe:group-active:screen-arch:duration-100 flex items-center gap-2 p-=
2" data-history-item-link=3D"true" href=3D"https://chatgpt.com/c/68119442-8=
210-8013-a22c-74a97323805b" data-discover=3D"true" style=3D"mask-image: var=
(--sidebar-mask);"><div class=3D"relative grow overflow-hidden whitespace-n=
owrap" dir=3D"auto" title=3D"TLS vs Blue University">TLS vs Blue University=
</div></a></div></li><li class=3D"relative" data-testid=3D"history-item-1">=
<div draggable=3D"true" class=3D"no-draggable group rounded-lg active:opaci=
ty-90 bg-[var(--item-background-color)] h-9 text-sm screen-arch:bg-transpar=
ent relative" style=3D"--item-background-color: var(--sidebar-surface-prima=
ry);"><a class=3D"motion-safe:group-active:screen-arch:scale-[98%] motion-s=
afe:group-active:screen-arch:transition-transform motion-safe:group-active:=
screen-arch:duration-100 flex items-center gap-2 p-2" data-history-item-lin=
k=3D"true" href=3D"https://chatgpt.com/c/68116874-6028-8013-9b49-bacadd6f81=
18" data-discover=3D"true" style=3D"mask-image: var(--sidebar-mask);"><div =
class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" titl=
e=3D"Install Matplotlib Conda">Install Matplotlib Conda</div></a></div></li=
><li class=3D"relative" data-testid=3D"history-item-2"><div draggable=3D"tr=
ue" class=3D"no-draggable group rounded-lg active:opacity-90 bg-[var(--item=
-background-color)] h-9 text-sm screen-arch:bg-transparent relative" style=
=3D"--item-background-color: var(--sidebar-surface-primary);"><a class=3D"m=
otion-safe:group-active:screen-arch:scale-[98%] motion-safe:group-active:sc=
reen-arch:transition-transform motion-safe:group-active:screen-arch:duratio=
n-100 flex items-center gap-2 p-2" data-history-item-link=3D"true" href=3D"=
https://chatgpt.com/c/6810e16c-c950-8013-a5df-220f5362bff8" data-discover=
=3D"true" style=3D"mask-image: var(--sidebar-mask);"><div class=3D"relative=
 grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"CSV File Mer=
ging">CSV File Merging</div></a></div></li><li class=3D"relative" data-test=
id=3D"history-item-3"><div draggable=3D"true" class=3D"no-draggable group r=
ounded-lg active:opacity-90 bg-[var(--item-background-color)] h-9 text-sm s=
creen-arch:bg-transparent relative" style=3D"--item-background-color: var(-=
-sidebar-surface-primary);"><a class=3D"motion-safe:group-active:screen-arc=
h:scale-[98%] motion-safe:group-active:screen-arch:transition-transform mot=
ion-safe:group-active:screen-arch:duration-100 flex items-center gap-2 p-2"=
 data-history-item-link=3D"true" href=3D"https://chatgpt.com/c/68105b84-7ad=
c-8013-9a89-d607ad1da6e0" data-discover=3D"true" style=3D"mask-image: var(-=
-sidebar-mask);"><div class=3D"relative grow overflow-hidden whitespace-now=
rap" dir=3D"auto" title=3D"Buffer Metadata Analysis">Buffer Metadata Analys=
is</div></a></div></li><li class=3D"relative" data-testid=3D"history-item-4=
"><div draggable=3D"true" class=3D"no-draggable group rounded-lg active:opa=
city-90 bg-[var(--item-background-color)] h-9 text-sm screen-arch:bg-transp=
arent relative" style=3D"--item-background-color: var(--sidebar-surface-pri=
mary);"><a class=3D"motion-safe:group-active:screen-arch:scale-[98%] motion=
-safe:group-active:screen-arch:transition-transform motion-safe:group-activ=
e:screen-arch:duration-100 flex items-center gap-2 p-2" data-history-item-l=
ink=3D"true" href=3D"https://chatgpt.com/c/680c746e-ffc8-8013-a591-3a0023ed=
09ee" data-discover=3D"true" style=3D"mask-image: var(--sidebar-mask);"><di=
v class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" ti=
tle=3D"Concurrent KvStore Review">Concurrent KvStore Review</div></a></div>=
</li><li class=3D"relative" data-testid=3D"history-item-5"><div draggable=
=3D"true" class=3D"no-draggable group rounded-lg active:opacity-90 bg-[var(=
--item-background-color)] h-9 text-sm screen-arch:bg-transparent relative" =
style=3D"--item-background-color: var(--sidebar-surface-primary);"><a class=
=3D"motion-safe:group-active:screen-arch:scale-[98%] motion-safe:group-acti=
ve:screen-arch:transition-transform motion-safe:group-active:screen-arch:du=
ration-100 flex items-center gap-2 p-2" data-history-item-link=3D"true" hre=
f=3D"https://chatgpt.com/c/680c46e1-7728-8013-bcf1-09f254bc4225" data-disco=
ver=3D"true" style=3D"mask-image: var(--sidebar-mask);"><div class=3D"relat=
ive grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Laplace T=
ransform of Hitting Time">Laplace Transform of Hitting Time</div></a></div>=
</li><li class=3D"relative" data-testid=3D"history-item-6"><div draggable=
=3D"true" class=3D"no-draggable group rounded-lg active:opacity-90 bg-[var(=
--item-background-color)] h-9 text-sm screen-arch:bg-transparent relative" =
style=3D"--item-background-color: var(--sidebar-surface-primary);"><a class=
=3D"motion-safe:group-active:screen-arch:scale-[98%] motion-safe:group-acti=
ve:screen-arch:transition-transform motion-safe:group-active:screen-arch:du=
ration-100 flex items-center gap-2 p-2" data-history-item-link=3D"true" hre=
f=3D"https://chatgpt.com/c/680c3b6e-e5c4-8013-abce-3851ba0f6078" data-disco=
ver=3D"true" style=3D"mask-image: var(--sidebar-mask);"><div class=3D"relat=
ive grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Reducing =
Image Size Memory">Reducing Image Size Memory</div></a></div></li><li class=
=3D"relative" data-testid=3D"history-item-7"><div draggable=3D"true" class=
=3D"no-draggable group rounded-lg active:opacity-90 bg-[var(--item-backgrou=
nd-color)] h-9 text-sm screen-arch:bg-transparent relative" style=3D"--item=
-background-color: var(--sidebar-surface-primary);"><a class=3D"motion-safe=
:group-active:screen-arch:scale-[98%] motion-safe:group-active:screen-arch:=
transition-transform motion-safe:group-active:screen-arch:duration-100 flex=
 items-center gap-2 p-2" data-history-item-link=3D"true" href=3D"https://ch=
atgpt.com/c/680c2df8-ed14-8013-a121-3f326384707a" data-discover=3D"true" st=
yle=3D"mask-image: var(--sidebar-mask);"><div class=3D"relative grow overfl=
ow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Epsilon Exploration vs E=
xploitation">Epsilon Exploration vs Exploitation</div></a></div></li><li cl=
ass=3D"relative" data-testid=3D"history-item-8"><div draggable=3D"true" cla=
ss=3D"no-draggable group rounded-lg active:opacity-90 bg-[var(--item-backgr=
ound-color)] h-9 text-sm screen-arch:bg-transparent relative" style=3D"--it=
em-background-color: var(--sidebar-surface-primary);"><a class=3D"motion-sa=
fe:group-active:screen-arch:scale-[98%] motion-safe:group-active:screen-arc=
h:transition-transform motion-safe:group-active:screen-arch:duration-100 fl=
ex items-center gap-2 p-2" data-history-item-link=3D"true" href=3D"https://=
chatgpt.com/c/680bd5b8-5704-8013-889d-2e7294efc478" data-discover=3D"true" =
style=3D"mask-image: var(--sidebar-mask);"><div class=3D"relative grow over=
flow-hidden whitespace-nowrap" dir=3D"auto" title=3D"CDF of N(0,t)">CDF of =
N(0,t)</div></a></div></li><li class=3D"relative" data-testid=3D"history-it=
em-9"><div draggable=3D"true" class=3D"no-draggable group rounded-lg active=
:opacity-90 bg-[var(--item-background-color)] h-9 text-sm screen-arch:bg-tr=
ansparent relative" style=3D"--item-background-color: var(--sidebar-surface=
-primary);"><a class=3D"motion-safe:group-active:screen-arch:scale-[98%] mo=
tion-safe:group-active:screen-arch:transition-transform motion-safe:group-a=
ctive:screen-arch:duration-100 flex items-center gap-2 p-2" data-history-it=
em-link=3D"true" href=3D"https://chatgpt.com/c/680bbbd5-fa44-8013-a80d-371c=
f766105c" data-discover=3D"true" style=3D"mask-image: var(--sidebar-mask);"=
><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto=
" title=3D"FileNotFoundError Fix">FileNotFoundError Fix</div></a></div></li=
><li class=3D"relative" data-testid=3D"history-item-10"><div draggable=3D"t=
rue" class=3D"no-draggable group rounded-lg active:opacity-90 bg-[var(--ite=
m-background-color)] h-9 text-sm screen-arch:bg-transparent relative" style=
=3D"--item-background-color: var(--sidebar-surface-primary);"><a class=3D"m=
otion-safe:group-active:screen-arch:scale-[98%] motion-safe:group-active:sc=
reen-arch:transition-transform motion-safe:group-active:screen-arch:duratio=
n-100 flex items-center gap-2 p-2" data-history-item-link=3D"true" href=3D"=
https://chatgpt.com/c/680ba7fe-810c-8013-893a-0c84a564b6b9" data-discover=
=3D"true" style=3D"mask-image: var(--sidebar-mask);"><div class=3D"relative=
 grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Extract Imag=
e Data CSV">Extract Image Data CSV</div></a></div></li><li class=3D"relativ=
e" data-testid=3D"history-item-11"><div draggable=3D"true" class=3D"no-drag=
gable group rounded-lg active:opacity-90 bg-[var(--item-background-color)] =
h-9 text-sm screen-arch:bg-transparent relative" style=3D"--item-background=
-color: var(--sidebar-surface-primary);"><a class=3D"motion-safe:group-acti=
ve:screen-arch:scale-[98%] motion-safe:group-active:screen-arch:transition-=
transform motion-safe:group-active:screen-arch:duration-100 flex items-cent=
er gap-2 p-2" data-history-item-link=3D"true" href=3D"https://chatgpt.com/c=
/680b937e-347c-8013-a34b-ed26c06e0b5a" data-discover=3D"true" style=3D"mask=
-image: var(--sidebar-mask);"><div class=3D"relative grow overflow-hidden w=
hitespace-nowrap" dir=3D"auto" title=3D"RDM comparison monkey CNN">RDM comp=
arison monkey CNN</div></a></div></li><li class=3D"relative" data-testid=3D=
"history-item-12"><div draggable=3D"true" class=3D"no-draggable group round=
ed-lg active:opacity-90 bg-[var(--item-background-color)] h-9 text-sm scree=
n-arch:bg-transparent relative" style=3D"--item-background-color: var(--sid=
ebar-surface-primary);"><a class=3D"motion-safe:group-active:screen-arch:sc=
ale-[98%] motion-safe:group-active:screen-arch:transition-transform motion-=
safe:group-active:screen-arch:duration-100 flex items-center gap-2 p-2" dat=
a-history-item-link=3D"true" href=3D"https://chatgpt.com/c/680ba071-ee8c-80=
13-8e0a-246e9ed67e19" data-discover=3D"true" style=3D"mask-image: var(--sid=
ebar-mask);"><div class=3D"relative grow overflow-hidden whitespace-nowrap"=
 dir=3D"auto" title=3D"OSCAR CPU GPU Setup">OSCAR CPU GPU Setup</div></a></=
div></li><li class=3D"relative" data-testid=3D"history-item-13"><div dragga=
ble=3D"true" class=3D"no-draggable group rounded-lg active:opacity-90 bg-[v=
ar(--item-background-color)] h-9 text-sm screen-arch:bg-transparent relativ=
e" style=3D"--item-background-color: var(--sidebar-surface-primary);"><a cl=
ass=3D"motion-safe:group-active:screen-arch:scale-[98%] motion-safe:group-a=
ctive:screen-arch:transition-transform motion-safe:group-active:screen-arch=
:duration-100 flex items-center gap-2 p-2" data-history-item-link=3D"true" =
href=3D"https://chatgpt.com/c/6809824c-af30-8013-8a97-20b4a06cfb8d" data-di=
scover=3D"true" style=3D"mask-image: var(--sidebar-mask);"><div class=3D"re=
lative grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Python=
 and .z01 Files">Python and .z01 Files</div></a></div></li><li class=3D"rel=
ative" data-testid=3D"history-item-14"><div draggable=3D"true" class=3D"no-=
draggable group rounded-lg active:opacity-90 bg-[var(--item-background-colo=
r)] h-9 text-sm screen-arch:bg-transparent relative" style=3D"--item-backgr=
ound-color: var(--sidebar-surface-primary);"><a class=3D"motion-safe:group-=
active:screen-arch:scale-[98%] motion-safe:group-active:screen-arch:transit=
ion-transform motion-safe:group-active:screen-arch:duration-100 flex items-=
center gap-2 p-2" data-history-item-link=3D"true" href=3D"https://chatgpt.c=
om/c/680aa123-158c-8013-9289-cd8e32e13b25" data-discover=3D"true" style=3D"=
mask-image: var(--sidebar-mask);"><div class=3D"relative grow overflow-hidd=
en whitespace-nowrap" dir=3D"auto" title=3D"Grading Rubric Clarification Re=
quest">Grading Rubric Clarification Request</div></a></div></li><li class=
=3D"relative" data-testid=3D"history-item-15"><div draggable=3D"true" class=
=3D"no-draggable group rounded-lg active:opacity-90 bg-[var(--item-backgrou=
nd-color)] h-9 text-sm screen-arch:bg-transparent relative" style=3D"--item=
-background-color: var(--sidebar-surface-primary);"><a class=3D"motion-safe=
:group-active:screen-arch:scale-[98%] motion-safe:group-active:screen-arch:=
transition-transform motion-safe:group-active:screen-arch:duration-100 flex=
 items-center gap-2 p-2" data-history-item-link=3D"true" href=3D"https://ch=
atgpt.com/c/680a6211-6aac-8013-8479-1043cb97b55d" data-discover=3D"true" st=
yle=3D"mask-image: var(--sidebar-mask);"><div class=3D"relative grow overfl=
ow-hidden whitespace-nowrap" dir=3D"auto" title=3D"MDP Policy Gradient Comp=
utation">MDP Policy Gradient Computation</div></a></div></li></ol></div><di=
v class=3D"relative mt-5 first:mt-0 last:mb-5"><div class=3D"bg-token-sideb=
ar-surface-primary sticky top-0 z-20"><span class=3D"flex h-9 items-center"=
><h3 class=3D"px-2 text-xs font-semibold text-ellipsis overflow-hidden brea=
k-all pt-3 pb-2 text-token-text-primary">Previous 30 Days</h3></span></div>=
<ol><li class=3D"relative" data-testid=3D"history-item-0"><div draggable=3D=
"true" class=3D"no-draggable group rounded-lg active:opacity-90 bg-[var(--i=
tem-background-color)] h-9 text-sm screen-arch:bg-transparent relative" sty=
le=3D"--item-background-color: var(--sidebar-surface-primary);"><a class=3D=
"motion-safe:group-active:screen-arch:scale-[98%] motion-safe:group-active:=
screen-arch:transition-transform motion-safe:group-active:screen-arch:durat=
ion-100 flex items-center gap-2 p-2" data-history-item-link=3D"true" href=
=3D"https://chatgpt.com/c/68099ef3-3bb0-8013-b8c9-93f3e42d8129" data-discov=
er=3D"true" style=3D"mask-image: var(--sidebar-mask);"><div class=3D"relati=
ve grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"Atomic vs =
Mutex Increment">Atomic vs Mutex Increment</div></a></div></li><li class=3D=
"relative" data-testid=3D"history-item-1"><div draggable=3D"true" class=3D"=
no-draggable group rounded-lg active:opacity-90 bg-[var(--item-background-c=
olor)] h-9 text-sm screen-arch:bg-transparent relative" style=3D"--item-bac=
kground-color: var(--sidebar-surface-primary);"><a class=3D"motion-safe:gro=
up-active:screen-arch:scale-[98%] motion-safe:group-active:screen-arch:tran=
sition-transform motion-safe:group-active:screen-arch:duration-100 flex ite=
ms-center gap-2 p-2" data-history-item-link=3D"true" href=3D"https://chatgp=
t.com/c/68099d51-c1d8-8013-b0c2-0ea351d0b272" data-discover=3D"true" style=
=3D"mask-image: var(--sidebar-mask);"><div class=3D"relative grow overflow-=
hidden whitespace-nowrap" dir=3D"auto" title=3D"Atomic vs Mutex Safety">Ato=
mic vs Mutex Safety</div></a></div></li><li class=3D"relative" data-testid=
=3D"history-item-2"><div draggable=3D"true" class=3D"no-draggable group rou=
nded-lg active:opacity-90 bg-[var(--item-background-color)] h-9 text-sm scr=
een-arch:bg-transparent relative" style=3D"--item-background-color: var(--s=
idebar-surface-primary);"><a class=3D"motion-safe:group-active:screen-arch:=
scale-[98%] motion-safe:group-active:screen-arch:transition-transform motio=
n-safe:group-active:screen-arch:duration-100 flex items-center gap-2 p-2" d=
ata-history-item-link=3D"true" href=3D"https://chatgpt.com/c/680980c6-c564-=
8013-891b-2f78b5a6cccd" data-discover=3D"true" style=3D"mask-image: var(--s=
idebar-mask);"><div class=3D"relative grow overflow-hidden whitespace-nowra=
p" dir=3D"auto" title=3D"Job Inquiry Follow-up">Job Inquiry Follow-up</div>=
</a></div></li><li class=3D"relative" data-testid=3D"history-item-3"><div d=
raggable=3D"true" class=3D"no-draggable group rounded-lg active:opacity-90 =
bg-[var(--item-background-color)] h-9 text-sm screen-arch:bg-transparent re=
lative" style=3D"--item-background-color: var(--sidebar-surface-primary);">=
<a class=3D"motion-safe:group-active:screen-arch:scale-[98%] motion-safe:gr=
oup-active:screen-arch:transition-transform motion-safe:group-active:screen=
-arch:duration-100 flex items-center gap-2 p-2" data-history-item-link=3D"t=
rue" href=3D"https://chatgpt.com/c/68097fef-5104-8013-9c10-6c858a9498bd" da=
ta-discover=3D"true" style=3D"mask-image: var(--sidebar-mask);"><div class=
=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"auto" title=3D"=
Job Inquiry C/C++">Job Inquiry C/C++</div></a></div></li><li class=3D"relat=
ive" data-testid=3D"history-item-4"><div draggable=3D"true" class=3D"no-dra=
ggable group rounded-lg active:opacity-90 bg-[var(--item-background-color)]=
 h-9 text-sm screen-arch:bg-transparent relative" style=3D"--item-backgroun=
d-color: var(--sidebar-surface-primary);"><a class=3D"motion-safe:group-act=
ive:screen-arch:scale-[98%] motion-safe:group-active:screen-arch:transition=
-transform motion-safe:group-active:screen-arch:duration-100 flex items-cen=
ter gap-2 p-2" data-history-item-link=3D"true" href=3D"https://chatgpt.com/=
c/68097cc5-ea28-8013-b093-b521e82c6dfd" data-discover=3D"true" style=3D"mas=
k-image: var(--sidebar-mask);"><div class=3D"relative grow overflow-hidden =
whitespace-nowrap" dir=3D"auto" title=3D"Follow-up email draft">Follow-up e=
mail draft</div></a></div></li><li class=3D"relative" data-testid=3D"histor=
y-item-5"><div draggable=3D"true" class=3D"no-draggable group rounded-lg ac=
tive:opacity-90 bg-[var(--item-background-color)] h-9 text-sm screen-arch:b=
g-transparent relative" style=3D"--item-background-color: var(--sidebar-sur=
face-primary);"><a class=3D"motion-safe:group-active:screen-arch:scale-[98%=
] motion-safe:group-active:screen-arch:transition-transform motion-safe:gro=
up-active:screen-arch:duration-100 flex items-center gap-2 p-2" data-histor=
y-item-link=3D"true" href=3D"https://chatgpt.com/c/68095c46-7334-8013-943a-=
aeef1f305e5f" data-discover=3D"true" style=3D"mask-image: var(--sidebar-mas=
k);"><div class=3D"relative grow overflow-hidden whitespace-nowrap" dir=3D"=
auto" title=3D"Estimate State Value V=CF=80">Estimate State Value V=CF=80</=
div></a></div></li></ol></div></div></div></div></div></div><div class=3D"p=
e-3"><div class=3D"flex flex-col py-2 empty:hidden dark:border-white/20"><a=
 class=3D"group flex gap-2 p-2.5 text-sm cursor-pointer focus:ring-0 radix-=
disabled:pointer-events-none radix-disabled:opacity-50 group items-center h=
over:bg-token-sidebar-surface-secondary screen-arch:px-2 screen-arch:py-1.5=
 screen-arch:min-h-[47px] m-0 rounded-lg px-2"><span class=3D"flex w-full f=
lex-row flex-wrap-reverse justify-between"><div class=3D"flex items-center =
gap-2"><span class=3D"border-token-border-default flex h-7 w-7 shrink-0 ite=
ms-center justify-center rounded-full border"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
12.5001 3.44338C12.1907 3.26474 11.8095 3.26474 11.5001 3.44338L4.83984 7.2=
8868C4.53044 7.46731 4.33984 7.79744 4.33984 8.1547V15.8453C4.33984 16.2026=
 4.53044 16.5327 4.83984 16.7113L11.5001 20.5566C11.8095 20.7353 12.1907 20=
.7353 12.5001 20.5566L19.1604 16.7113C19.4698 16.5327 19.6604 16.2026 19.66=
04 15.8453V8.1547C19.6604 7.79744 19.4698 7.46731 19.1604 7.28868L12.5001 3=
.44338ZM10.5001 1.71133C11.4283 1.17543 12.5719 1.17543 13.5001 1.71133L20.=
1604 5.55663C21.0886 6.09252 21.6604 7.0829 21.6604 8.1547V15.8453C21.6604 =
16.9171 21.0886 17.9075 20.1604 18.4434L13.5001 22.2887C12.5719 22.8246 11.=
4283 22.8246 10.5001 22.2887L3.83984 18.4434C2.91164 17.9075 2.33984 16.917=
1 2.33984 15.8453V8.1547C2.33984 7.0829 2.91164 6.09252 3.83984 5.55663L10.=
5001 1.71133Z" fill=3D"currentColor"></path><path d=3D"M9.44133 11.4454L9.9=
2944 9.98105C10.0321 9.67299 10.4679 9.67299 10.5706 9.98105L11.0587 11.445=
4C11.2941 12.1517 11.8483 12.7059 12.5546 12.9413L14.019 13.4294C14.327 13.=
5321 14.327 13.9679 14.019 14.0706L12.5546 14.5587C11.8483 14.7941 11.2941 =
15.3483 11.0587 16.0546L10.5706 17.519C10.4679 17.827 10.0321 17.827 9.9294=
4 17.519L9.44133 16.0546C9.2059 15.3483 8.65167 14.7941 7.94537 14.5587L6.4=
8105 14.0706C6.17298 13.9679 6.17298 13.5321 6.48105 13.4294L7.94537 12.941=
3C8.65167 12.7059 9.2059 12.1517 9.44133 11.4454Z" fill=3D"currentColor"></=
path><path d=3D"M14.4946 8.05961L14.7996 7.14441C14.8638 6.95187 15.1362 6.=
95187 15.2004 7.14441L15.5054 8.05961C15.6526 8.50104 15.999 8.84744 16.440=
4 8.99458L17.3556 9.29965C17.5481 9.36383 17.5481 9.63617 17.3556 9.70035L1=
6.4404 10.0054C15.999 10.1526 15.6526 10.499 15.5054 10.9404L15.2004 11.855=
6C15.1362 12.0481 14.8638 12.0481 14.7996 11.8556L14.4946 10.9404C14.3474 1=
0.499 14.001 10.1526 13.5596 10.0054L12.6444 9.70035C12.4519 9.63617 12.451=
9 9.36383 12.6444 9.29965L13.5596 8.99458C14.001 8.84744 14.3474 8.50104 14=
.4946 8.05961Z" fill=3D"currentColor"></path></svg></span><div class=3D"fle=
x flex-col"><span>View plans</span><span class=3D"text-token-text-tertiary =
line-clamp-1 text-xs">Unlimited access, team features, and more</span></div=
></div></span></a></div></div></nav></div></div></div></div><div class=3D"r=
elative flex h-full max-w-full flex-1 flex-col overflow-hidden"><div class=
=3D"draggable h-header-height bg-token-main-surface-primary sticky top-0 z-=
10 flex items-center justify-center border-transparent ps-0 md:hidden [box-=
shadow:var(--sharp-edge-top-shadow)]"><div class=3D"no-draggable absolute s=
tart-0 top-0 bottom-0 ms-3 inline-flex items-center justify-center"><button=
 type=3D"button" class=3D"hover:text-token-text-primary inline-flex rounded=
-md focus:ring-2 focus:ring-white focus:outline-hidden focus:ring-inset act=
ive:opacity-50" data-testid=3D"open-sidebar-button"><span class=3D"sr-only"=
>Open sidebar</span><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" f=
ill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-lg text-tok=
en-text-secondary mx-2"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M3 8C3 7.44772 3.44772 7 4 7H20C20.5523 7 21 7.44772 21 8C21 8.55228 20=
.5523 9 20 9H4C3.44772 9 3 8.55228 3 8ZM3 16C3 15.4477 3.44772 15 4 15H14C1=
4.5523 15 15 15.4477 15 16C15 16.5523 14.5523 17 14 17H4C3.44772 17 3 16.55=
23 3 16Z" fill=3D"currentColor"></path></svg></button></div><div class=3D"n=
o-draggable"><div class=3D"flex items-center gap-0 overflow-hidden px-2 py-=
1.5 whitespace-nowrap"><button class=3D"max-w-28 xs:max-w-40 sm:max-w-60 md=
:max-w-none group flex cursor-pointer items-center gap-1 rounded-lg py-1.5 =
px-1 text-lg hover:bg-token-main-surface-secondary radix-state-open:bg-toke=
n-main-surface-secondary font-semibold text-token-text-secondary overflow-h=
idden whitespace-nowrap"><a class=3D"truncate" href=3D"https://chatgpt.com/=
g/g-p-680141927350819189b653a4f7c86099-deep-learning-final-project/project"=
 data-discover=3D"true">Deep Learning Final Project</a></button><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md text-token-text-tertiary"><path fill-r=
ule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M9.29289 18.7071C8.90237 18.3166=
 8.90237 17.6834 9.29289 17.2929L14.5858 12L9.29289 6.70711C8.90237 6.31658=
 8.90237 5.68342 9.29289 5.29289C9.68342 4.90237 10.3166 4.90237 10.7071 5.=
29289L16.7071 11.2929C16.8946 11.4804 17 11.7348 17 12C17 12.2652 16.8946 1=
2.5196 16.7071 12.7071L10.7071 18.7071C10.3166 19.0976 9.68342 19.0976 9.29=
289 18.7071Z" fill=3D"currentColor"></path></svg><button type=3D"button" id=
=3D"radix-=C2=ABr1fl=C2=BB" aria-haspopup=3D"menu" aria-expanded=3D"false" =
data-state=3D"closed" class=3D"max-w-28 xs:max-w-40 sm:max-w-60 md:max-w-no=
ne group flex cursor-pointer items-center gap-1 rounded-lg py-1.5 px-1 text=
-lg hover:bg-token-main-surface-secondary radix-state-open:bg-token-main-su=
rface-secondary font-semibold text-token-text-secondary overflow-hidden whi=
tespace-nowrap"><div class=3D"truncate">Face-specific Analysis Script<span =
class=3D"bg-token-main-surface-secondary text-token-text-secondary relative=
 bottom-[1px] mx-1 inline-block rounded-md px-1 text-xs leading-4">4o</span=
></div><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" =
xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md text-token-text-terti=
ary"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M5.29289 9.2928=
9C5.68342 8.90237 6.31658 8.90237 6.70711 9.29289L12 14.5858L17.2929 9.2928=
9C17.6834 8.90237 18.3166 8.90237 18.7071 9.29289C19.0976 9.68342 19.0976 1=
0.3166 18.7071 10.7071L12.7071 16.7071C12.5196 16.8946 12.2652 17 12 17C11.=
7348 17 11.4804 16.8946 11.2929 16.7071L5.29289 10.7071C4.90237 10.3166 4.9=
0237 9.68342 5.29289 9.29289Z" fill=3D"currentColor"></path></svg></button>=
</div></div><div class=3D"no-draggable absolute end-0 top-0 bottom-0 me-3 i=
nline-flex items-center justify-center"><span class=3D"flex" data-state=3D"=
closed"><a aria-label=3D"New chat" class=3D"text-token-text-secondary hover=
:bg-token-surface-hover focus-visible:bg-token-surface-hover flex h-10 item=
s-center justify-center rounded-lg px-2 focus-visible:outline-0" href=3D"ht=
tps://chatgpt.com/" data-discover=3D"true"><svg width=3D"24" height=3D"24" =
viewBox=3D"0 0 24 24" fill=3D"currentColor" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-xl-heavy"><path d=3D"M15.6729 3.91287C16.8918 2.69392 1=
8.8682 2.69392 20.0871 3.91287C21.3061 5.13182 21.3061 7.10813 20.0871 8.32=
708L14.1499 14.2643C13.3849 15.0293 12.3925 15.5255 11.3215 15.6785L9.14142=
 15.9899C8.82983 16.0344 8.51546 15.9297 8.29289 15.7071C8.07033 15.4845 7.=
96554 15.1701 8.01005 14.8586L8.32149 12.6785C8.47449 11.6075 8.97072 10.61=
5 9.7357 9.85006L15.6729 3.91287ZM18.6729 5.32708C18.235 4.88918 17.525 4.8=
8918 17.0871 5.32708L11.1499 11.2643C10.6909 11.7233 10.3932 12.3187 10.301=
4 12.9613L10.1785 13.8215L11.0386 13.6986C11.6812 13.6068 12.2767 13.3091 1=
2.7357 12.8501L18.6729 6.91287C19.1108 6.47497 19.1108 5.76499 18.6729 5.32=
708ZM11 3.99929C11.0004 4.55157 10.5531 4.99963 10.0008 5.00007C9.00227 5.0=
0084 8.29769 5.00827 7.74651 5.06064C7.20685 5.11191 6.88488 5.20117 6.6380=
3 5.32695C6.07354 5.61457 5.6146 6.07351 5.32698 6.63799C5.19279 6.90135 5.=
10062 7.24904 5.05118 7.8542C5.00078 8.47105 5 9.26336 5 10.4V13.6C5 14.736=
6 5.00078 15.5289 5.05118 16.1457C5.10062 16.7509 5.19279 17.0986 5.32698 1=
7.3619C5.6146 17.9264 6.07354 18.3854 6.63803 18.673C6.90138 18.8072 7.2490=
7 18.8993 7.85424 18.9488C8.47108 18.9992 9.26339 19 10.4 19H13.6C14.7366 1=
9 15.5289 18.9992 16.1458 18.9488C16.7509 18.8993 17.0986 18.8072 17.362 18=
.673C17.9265 18.3854 18.3854 17.9264 18.673 17.3619C18.7988 17.1151 18.8881=
 16.7931 18.9393 16.2535C18.9917 15.7023 18.9991 14.9977 18.9999 13.9992C19=
.0003 13.4469 19.4484 12.9995 20.0007 13C20.553 13.0004 21.0003 13.4485 20.=
9999 14.0007C20.9991 14.9789 20.9932 15.7808 20.9304 16.4426C20.8664 17.116=
 20.7385 17.7136 20.455 18.2699C19.9757 19.2107 19.2108 19.9756 18.27 20.45=
5C17.6777 20.7568 17.0375 20.8826 16.3086 20.9421C15.6008 21 14.7266 21 13.=
6428 21H10.3572C9.27339 21 8.39925 21 7.69138 20.9421C6.96253 20.8826 6.322=
34 20.7568 5.73005 20.455C4.78924 19.9756 4.02433 19.2107 3.54497 18.2699C3=
.24318 17.6776 3.11737 17.0374 3.05782 16.3086C2.99998 15.6007 2.99999 14.7=
266 3 13.6428V10.3572C2.99999 9.27337 2.99998 8.39922 3.05782 7.69134C3.117=
37 6.96249 3.24318 6.3223 3.54497 5.73001C4.02433 4.7892 4.78924 4.0243 5.7=
3005 3.54493C6.28633 3.26149 6.88399 3.13358 7.55735 3.06961C8.21919 3.0067=
3 9.02103 3.00083 9.99922 3.00007C10.5515 2.99964 10.9996 3.447 11 3.99929Z=
" fill=3D"currentColor"></path></svg></a></span></div></div><div class=3D"n=
o-draggable bg-token-main-surface-primary flex w-full items-center justify-=
center md:hidden"></div><main class=3D"transition-width relative h-full w-f=
ull flex-1 overflow-auto" id=3D"main" z-index=3D"-1"><div id=3D"thread" cla=
ss=3D"group/thread @container/thread h-full w-full"><div role=3D"presentati=
on" class=3D"composer-parent flex flex-col focus-visible:outline-0 h-full">=
<div id=3D"page-header" class=3D"draggable no-draggable-children sticky top=
-0 p-3 flex items-center justify-between z-20 h-header-height font-semibold=
 bg-token-main-surface-primary pointer-events-none [view-transition-name:va=
r(--vt-page-header)] select-none *:pointer-events-auto motion-safe:transiti=
on max-md:hidden [box-shadow:var(--sharp-edge-top-shadow)]"><div class=3D"a=
bsolute start-1/2 ltr:-translate-x-1/2 rtl:translate-x-1/2"></div><div clas=
s=3D"flex items-center gap-0 overflow-hidden"><div class=3D"flex items-cent=
er gap-0 overflow-hidden px-2 py-1.5 whitespace-nowrap"><button class=3D"ma=
x-w-28 xs:max-w-40 sm:max-w-60 md:max-w-none group flex cursor-pointer item=
s-center gap-1 rounded-lg py-1.5 px-1 text-lg hover:bg-token-main-surface-s=
econdary radix-state-open:bg-token-main-surface-secondary font-semibold tex=
t-token-text-secondary overflow-hidden whitespace-nowrap"><a class=3D"trunc=
ate" href=3D"https://chatgpt.com/g/g-p-680141927350819189b653a4f7c86099-dee=
p-learning-final-project/project" data-discover=3D"true">Deep Learning Fina=
l Project</a></button><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24"=
 fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md text-t=
oken-text-tertiary"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M9.29289 18.7071C8.90237 18.3166 8.90237 17.6834 9.29289 17.2929L14.5858 12=
L9.29289 6.70711C8.90237 6.31658 8.90237 5.68342 9.29289 5.29289C9.68342 4.=
90237 10.3166 4.90237 10.7071 5.29289L16.7071 11.2929C16.8946 11.4804 17 11=
.7348 17 12C17 12.2652 16.8946 12.5196 16.7071 12.7071L10.7071 18.7071C10.3=
166 19.0976 9.68342 19.0976 9.29289 18.7071Z" fill=3D"currentColor"></path>=
</svg><button type=3D"button" id=3D"radix-=C2=ABr1fo=C2=BB" aria-haspopup=
=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"max-w-28 x=
s:max-w-40 sm:max-w-60 md:max-w-none group flex cursor-pointer items-center=
 gap-1 rounded-lg py-1.5 px-1 text-lg hover:bg-token-main-surface-secondary=
 radix-state-open:bg-token-main-surface-secondary font-semibold text-token-=
text-secondary overflow-hidden whitespace-nowrap"><div class=3D"truncate">F=
ace-specific Analysis Script<span class=3D"bg-token-main-surface-secondary =
text-token-text-secondary relative bottom-[1px] mx-1 inline-block rounded-m=
d px-1 text-xs leading-4">4o</span></div><svg width=3D"24" height=3D"24" vi=
ewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" clas=
s=3D"icon-md text-token-text-tertiary"><path fill-rule=3D"evenodd" clip-rul=
e=3D"evenodd" d=3D"M5.29289 9.29289C5.68342 8.90237 6.31658 8.90237 6.70711=
 9.29289L12 14.5858L17.2929 9.29289C17.6834 8.90237 18.3166 8.90237 18.7071=
 9.29289C19.0976 9.68342 19.0976 10.3166 18.7071 10.7071L12.7071 16.7071C12=
.5196 16.8946 12.2652 17 12 17C11.7348 17 11.4804 16.8946 11.2929 16.7071L5=
.29289 10.7071C4.90237 10.3166 4.90237 9.68342 5.29289 9.29289Z" fill=3D"cu=
rrentColor"></path></svg></button></div></div><div class=3D"flex items-cent=
er gap-2 pe-1 leading-[0]" id=3D"conversation-header-actions"><button type=
=3D"button" aria-label=3D"Open conversation options" data-testid=3D"convers=
ation-options-button" id=3D"radix-=C2=ABr1fq=C2=BB" aria-haspopup=3D"menu" =
aria-expanded=3D"false" data-state=3D"closed" class=3D"text-token-text-seco=
ndary hover:text-token-text-primary hover:bg-token-surface-hover radix-stat=
e-open:text-token-text-secondary flex aspect-square h-10 items-center justi=
fy-center rounded-full transition focus-visible:outline-0"><svg width=3D"24=
" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" class=3D"h-[22px] w-[22px]"><path fill-rule=3D"evenodd" clip-=
rule=3D"evenodd" d=3D"M12 21C10.8954 21 10 20.1046 10 19C10 17.8954 10.8954=
 17 12 17C13.1046 17 14 17.8954 14 19C14 20.1046 13.1046 21 12 21ZM12 14C10=
.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954=
 14 12C14 13.1046 13.1046 14 12 14ZM12 7C10.8954 7 10 6.10457 10 5C10 3.895=
43 10.8954 3 12 3C13.1046 3 14 3.89543 14 5C14 6.10457 13.1046 7 12 7Z" fil=
l=3D"currentColor"></path></svg></button><button aria-label=3D"Open Profile=
 Menu" data-testid=3D"profile-button" class=3D"text-token-text-secondary ho=
ver:text-token-text-primary hover:bg-token-surface-hover radix-state-open:t=
ext-token-text-secondary flex h-10 w-10 items-center justify-center rounded=
-full px-1 transition focus-visible:outline-0" type=3D"button" id=3D"radix-=
=C2=ABr1fs=C2=BB" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=
=3D"closed"><div class=3D"relative"><div class=3D"relative"><div class=3D"r=
elative flex overflow-hidden rounded-full"><img alt=3D"User" width=3D"32" h=
eight=3D"32" class=3D"rounded-xs" referrerpolicy=3D"no-referrer" src=3D"htt=
ps://lh3.googleusercontent.com/a/AGNmyxYv247PBLepAMdGx5OWzsckb6qXP3LcIozeBu=
OmMw=3Ds96-c"></div></div><span class=3D"absolute end-[4.8px] top-[21.5px] =
-me-2 flex h-3 items-center justify-center rounded-full bg-white text-[8px]=
 font-medium text-black" style=3D"width: 1.6rem; box-shadow: rgba(128, 128,=
 128, 0.1) 0px 0px 0px 1.1px; letter-spacing: -0.5px;">PLUS</span></div></b=
utton></div></div><div class=3D"flex shrink basis-auto flex-col overflow-hi=
dden -mb-(--composer-overlap-px) [--composer-overlap-px:24px] grow"><div cl=
ass=3D"relative h-full"><div class=3D"flex h-full flex-col overflow-y-auto =
[scrollbar-gutter:stable] @[84rem]/thread:pt-(--header-height)"><div aria-h=
idden=3D"true" data-edge=3D"true" class=3D"pointer-events-none h-px w-px"><=
/div><div class=3D"@thread-xl/thread:pt-header-height mt-1.5 flex flex-col =
text-sm pb-25"><article class=3D"text-token-text-primary w-full" dir=3D"aut=
o" data-testid=3D"conversation-turn-1" data-scroll-anchor=3D"false"><h5 cla=
ss=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [=
--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--s=
pacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-co=
ntent-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[-=
-thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem=
] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md=
:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=
=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0 =
flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"fle=
x max-w-full flex-col grow"><div data-message-author-role=3D"user" data-mes=
sage-id=3D"1e978637-73da-4816-a958-8a6fafbb6fa8" dir=3D"auto" class=3D"min-=
h-8 text-message relative flex w-full flex-col items-end gap-2 text-start b=
reak-words whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex=
 w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><div class=
=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-surface ro=
unded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">can you tell me w=
hat script 1a is doing</div></div></div></div></div></div></div></div></div=
></article><article class=3D"text-token-text-primary w-full" dir=3D"auto" d=
ata-testid=3D"conversation-turn-2" data-scroll-anchor=3D"false"><h6 class=
=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5=
 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:-=
-spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-=
content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:=
[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48r=
em] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 =
md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabinde=
x=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0=
 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div =
class=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"as=
sistant" data-message-id=3D"50238c44-fc7d-4498-8bf9-add6ca085227" dir=3D"au=
to" class=3D"min-h-8 text-message relative flex w-full flex-col items-end g=
ap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5" d=
ata-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 =
empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert=
 w-full break-words dark"><p data-start=3D"0" data-end=3D"68" class=3D"">Yu=
p! Let's break down what <code data-start=3D"27" data-end=3D"58">script_1a_=
face_specific.ipynb</code> is doing.</p>
<h3 data-start=3D"70" data-end=3D"90" class=3D"">High-level Goal:</h3>
<p data-start=3D"91" data-end=3D"382" class=3D"">This script is performing =
<strong data-start=3D"117" data-end=3D"159">face-specific neural response a=
nalysis</strong>=E2=80=94likely checking how individual neural units (or po=
pulations) in the visual cortex respond to face stimuli, as opposed to othe=
r kinds of images. It's part of the initial analysis pipeline for investiga=
ting face selectivity.</p>
<hr data-start=3D"384" data-end=3D"387" class=3D"">
<h3 data-start=3D"389" data-end=3D"443" class=3D"">Core Steps Inside <code =
data-start=3D"411" data-end=3D"442">script_1a_face_specific.ipynb</code>:</=
h3>
<ol data-start=3D"445" data-end=3D"1855">
<li data-start=3D"445" data-end=3D"596" class=3D"">
<p data-start=3D"448" data-end=3D"469" class=3D""><strong data-start=3D"448=
" data-end=3D"467">Imports &amp; Setup</strong></p>
<ul data-start=3D"473" data-end=3D"596">
<li data-start=3D"473" data-end=3D"535" class=3D"">
<p data-start=3D"475" data-end=3D"535" class=3D"">Loads necessary libraries=
 (NumPy, Pandas, Matplotlib, etc.).</p>
</li>
<li data-start=3D"539" data-end=3D"596" class=3D"">
<p data-start=3D"541" data-end=3D"596" class=3D"">Loads the experimental se=
ssion(s), units, and metadata.</p>
</li>
</ul>
</li>
<li data-start=3D"598" data-end=3D"776" class=3D"">
<p data-start=3D"601" data-end=3D"624" class=3D""><strong data-start=3D"601=
" data-end=3D"622">Session Selection</strong></p>
<ul data-start=3D"628" data-end=3D"776">
<li data-start=3D"628" data-end=3D"776" class=3D"">
<p data-start=3D"630" data-end=3D"776" class=3D"">It loops through availabl=
e sessions (typically monkey recording sessions), and selects those that ha=
ve relevant face-related stimulus information.</p>
</li>
</ul>
</li>
<li data-start=3D"778" data-end=3D"995" class=3D"">
<p data-start=3D"781" data-end=3D"812" class=3D""><strong data-start=3D"781=
" data-end=3D"810">Stimulus Label Extraction</strong></p>
<ul data-start=3D"816" data-end=3D"995">
<li data-start=3D"816" data-end=3D"895" class=3D"">
<p data-start=3D"818" data-end=3D"895" class=3D"">Identifies which image ca=
tegories in the stimulus set are labeled as <em data-start=3D"887" data-end=
=3D"894">faces</em>.</p>
</li>
<li data-start=3D"899" data-end=3D"995" class=3D"">
<p data-start=3D"901" data-end=3D"995" class=3D"">Often includes comparison=
s between face images and non-face categories like objects or scenes.</p>
</li>
</ul>
</li>
<li data-start=3D"997" data-end=3D"1220" class=3D"">
<p data-start=3D"1000" data-end=3D"1028" class=3D""><strong data-start=3D"1=
000" data-end=3D"1026">Spike Rate Calculation</strong></p>
<ul data-start=3D"1032" data-end=3D"1220">
<li data-start=3D"1032" data-end=3D"1114" class=3D"">
<p data-start=3D"1034" data-end=3D"1114" class=3D"">Calculates <strong data=
-start=3D"1045" data-end=3D"1061">firing rates</strong> of neurons in respo=
nse to face vs. non-face stimuli.</p>
</li>
<li data-start=3D"1118" data-end=3D"1220" class=3D"">
<p data-start=3D"1120" data-end=3D"1220" class=3D"">Uses a peristimulus tim=
e window to compute average spike counts or spike rates after stimulus onse=
t.</p>
</li>
</ul>
</li>
<li data-start=3D"1222" data-end=3D"1504" class=3D"">
<p data-start=3D"1225" data-end=3D"1278" class=3D""><strong data-start=3D"1=
225" data-end=3D"1257">Face Selectivity Index (FSI)</strong> or Related Met=
rics</p>
<ul data-start=3D"1282" data-end=3D"1504">
<li data-start=3D"1282" data-end=3D"1414" class=3D"">
<p data-start=3D"1284" data-end=3D"1414" class=3D"">Computes selectivity me=
trics (like FSI, d-prime, or AUC) to quantify how strongly each neuron pref=
ers faces over other categories.</p>
</li>
<li data-start=3D"1418" data-end=3D"1504" class=3D"">
<p data-start=3D"1420" data-end=3D"1504" class=3D"">These values may be use=
d later to filter "face-selective" units for deeper analysis.</p>
</li>
</ul>
</li>
<li data-start=3D"1506" data-end=3D"1654" class=3D"">
<p data-start=3D"1509" data-end=3D"1539" class=3D""><strong data-start=3D"1=
509" data-end=3D"1537">Visualization (optional)</strong></p>
<ul data-start=3D"1543" data-end=3D"1654">
<li data-start=3D"1543" data-end=3D"1654" class=3D"">
<p data-start=3D"1545" data-end=3D"1654" class=3D"">It might include plots =
to visualize neural responses=E2=80=94e.g., tuning curves or histograms of =
selectivity scores.</p>
</li>
</ul>
</li>
<li data-start=3D"1656" data-end=3D"1855" class=3D"">
<p data-start=3D"1659" data-end=3D"1679" class=3D""><strong data-start=3D"1=
659" data-end=3D"1677">Saving Results</strong></p>
<ul data-start=3D"1683" data-end=3D"1855">
<li data-start=3D"1683" data-end=3D"1855" class=3D"">
<p data-start=3D"1685" data-end=3D"1855" class=3D"">The processed results (=
e.g., neural selectivity scores or binary face-selective labels) are saved,=
 usually for downstream scripts (like <code data-start=3D"1821" data-end=3D=
"1853">1b_face_specific_match_control</code>).</p>
</li>
</ul>
</li>
</ol>
<hr data-start=3D"1857" data-end=3D"1860" class=3D"">
<h3 data-start=3D"1862" data-end=3D"1883" class=3D"">Why This Matters:</h3>
<p data-start=3D"1884" data-end=3D"2091" class=3D"">It=E2=80=99s establishi=
ng which neurons are "face-specialists"=E2=80=94an important prerequisite f=
or later comparisons, especially in match vs. control conditions, behaviora=
l correlation analyses, or population coding work.</p>
<hr data-start=3D"2093" data-end=3D"2096" class=3D"">
<p data-start=3D"2098" data-end=3D"2168" class=3D"">Want a line-by-line wal=
kthrough or more focus on one of the functions?</p></div></div></div></div>=
</div></div></div></div></article><article class=3D"text-token-text-primary=
 w-full" dir=3D"auto" data-testid=3D"conversation-turn-3" data-scroll-ancho=
r=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-=
auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread=
-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(1=
6)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-width=
:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-cont=
ent-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1=
 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outlin=
e-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative fl=
ex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"=
><div class=3D"flex max-w-full flex-col grow"><div data-message-author-role=
=3D"user" data-message-id=3D"319f8539-51a4-45d2-b45c-23d0821647ea" dir=3D"a=
uto" class=3D"min-h-8 text-message relative flex w-full flex-col items-end =
gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5">=
<div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-s=
tart"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-me=
ssage-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">c=
an you go through it line by line</div></div></div></div></div></div></div>=
</div></div></article><article class=3D"text-token-text-primary w-full" dir=
=3D"auto" data-testid=3D"conversation-turn-4" data-scroll-anchor=3D"false">=
<h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-=
auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content=
-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(=
--thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem] =
@[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-=
width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-ba=
se gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden=
" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-ful=
l min-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap=
-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author-r=
ole=3D"assistant" data-message-id=3D"5c309677-f134-4542-bc78-d4e9a639ba41" =
dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col it=
ems-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;=
]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-c=
ol gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:pro=
se-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"149" cla=
ss=3D"">Absolutely! Let=E2=80=99s walk through <code data-start=3D"31" data=
-end=3D"62">script_1a_face_specific.ipynb</code> <strong data-start=3D"63" =
data-end=3D"79">line by line</strong>, going block by block and explaining =
exactly what each part is doing.</p>
<hr data-start=3D"151" data-end=3D"154" class=3D"">
<h3 data-start=3D"156" data-end=3D"182" class=3D""><strong data-start=3D"16=
0" data-end=3D"182">1. Setup &amp; Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"184" data-end=3D"357"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> matplo=
tlib.pyplot </span><span><span class=3D"hljs-keyword">as</span></span><span=
> plt
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">import</span></span><span> xarray=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> xr
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span><span><span class=3D"hljs-keyword">import</span></span><span> seabor=
n </span><span><span class=3D"hljs-keyword">as</span></span><span> sns
</span></span></code></div></div></pre>
<ul data-start=3D"359" data-end=3D"590">
<li data-start=3D"359" data-end=3D"590" class=3D"">
<p data-start=3D"361" data-end=3D"391" class=3D"">Standard Python libraries=
 for:</p>
<ul data-start=3D"394" data-end=3D"590">
<li data-start=3D"394" data-end=3D"419" class=3D"">
<p data-start=3D"396" data-end=3D"419" class=3D"">Numerical ops (<code data=
-start=3D"411" data-end=3D"418">numpy</code>)</p>
</li>
<li data-start=3D"422" data-end=3D"450" class=3D"">
<p data-start=3D"424" data-end=3D"450" class=3D"">Table-like data (<code da=
ta-start=3D"441" data-end=3D"449">pandas</code>)</p>
</li>
<li data-start=3D"453" data-end=3D"489" class=3D"">
<p data-start=3D"455" data-end=3D"489" class=3D"">Plotting (<code data-star=
t=3D"465" data-end=3D"477">matplotlib</code>, <code data-start=3D"479" data=
-end=3D"488">seaborn</code>)</p>
</li>
<li data-start=3D"492" data-end=3D"516" class=3D"">
<p data-start=3D"494" data-end=3D"516" class=3D"">Path handling (<code data=
-start=3D"509" data-end=3D"515">Path</code>)</p>
</li>
<li data-start=3D"519" data-end=3D"563" class=3D"">
<p data-start=3D"521" data-end=3D"563" class=3D"">Working with labeled N-D =
arrays (<code data-start=3D"554" data-end=3D"562">xarray</code>)</p>
</li>
<li data-start=3D"566" data-end=3D"590" class=3D"">
<p data-start=3D"568" data-end=3D"590" class=3D"">Progress bars (<code data=
-start=3D"583" data-end=3D"589">tqdm</code>)</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"592" data-end=3D"595" class=3D"">
<h3 data-start=3D"597" data-end=3D"646" class=3D""><strong data-start=3D"60=
1" data-end=3D"646">2. Load shared utilities and define paths</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"648" data-end=3D"825"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">from</span></span><spa=
n> utils.load_data </span><span><span class=3D"hljs-keyword">import</span><=
/span><span> load_dataset
</span><span><span class=3D"hljs-keyword">from</span></span><span> utils.co=
mpute </span><span><span class=3D"hljs-keyword">import</span></span><span> =
compute_mean_firing_rates, compute_face_selectivity
</span><span><span class=3D"hljs-keyword">from</span></span><span> utils.pl=
ot </span><span><span class=3D"hljs-keyword">import</span></span><span> plo=
t_face_selectivity
</span></span></code></div></div></pre>
<ul data-start=3D"827" data-end=3D"1140">
<li data-start=3D"827" data-end=3D"1140" class=3D"">
<p data-start=3D"829" data-end=3D"859" class=3D"">Loads custom helper funct=
ions:</p>
<ul data-start=3D"862" data-end=3D"1140">
<li data-start=3D"862" data-end=3D"929" class=3D"">
<p data-start=3D"864" data-end=3D"929" class=3D""><code data-start=3D"864" =
data-end=3D"878">load_dataset</code>: likely loads experimental data (spike=
s, stimuli).</p>
</li>
<li data-start=3D"932" data-end=3D"1000" class=3D"">
<p data-start=3D"934" data-end=3D"1000" class=3D""><code data-start=3D"934"=
 data-end=3D"961">compute_mean_firing_rates</code>: gets average responses =
per condition.</p>
</li>
<li data-start=3D"1003" data-end=3D"1081" class=3D"">
<p data-start=3D"1005" data-end=3D"1081" class=3D""><code data-start=3D"100=
5" data-end=3D"1031">compute_face_selectivity</code>: calculates how select=
ive each unit is for faces.</p>
</li>
<li data-start=3D"1084" data-end=3D"1140" class=3D"">
<p data-start=3D"1086" data-end=3D"1140" class=3D""><code data-start=3D"108=
6" data-end=3D"1109">plot_face_selectivity</code>: used later for visualiza=
tion.</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"1142" data-end=3D"1145" class=3D"">
<h3 data-start=3D"1147" data-end=3D"1173" class=3D""><strong data-start=3D"=
1151" data-end=3D"1173">3. Load session(s)</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1175" data-end=3D"1218"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>dataset =3D load_dataset(</span><span><span class=
=3D"hljs-string">'all'</span></span><span>)
</span></span></code></div></div></pre>
<ul data-start=3D"1220" data-end=3D"1363">
<li data-start=3D"1220" data-end=3D"1363" class=3D"">
<p data-start=3D"1222" data-end=3D"1292" class=3D"">Loads all available ses=
sions. This <code data-start=3D"1257" data-end=3D"1266">dataset</code> obje=
ct probably contains:</p>
<ul data-start=3D"1295" data-end=3D"1363">
<li data-start=3D"1295" data-end=3D"1307" class=3D"">
<p data-start=3D"1297" data-end=3D"1307" class=3D"">Spike data</p>
</li>
<li data-start=3D"1310" data-end=3D"1335" class=3D"">
<p data-start=3D"1312" data-end=3D"1335" class=3D"">Trial/stimulus metadata=
</p>
</li>
<li data-start=3D"1338" data-end=3D"1363" class=3D"">
<p data-start=3D"1340" data-end=3D"1363" class=3D"">Unit/recording metadata=
</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"1365" data-end=3D"1368" class=3D"">
<h3 data-start=3D"1370" data-end=3D"1416" class=3D""><strong data-start=3D"=
1374" data-end=3D"1416">4. Define face and non-face categories</strong></h3=
>
<pre class=3D"overflow-visible!" data-start=3D"1418" data-end=3D"1547"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>face_labels =3D [</span><span><span class=3D"hljs-s=
tring">'human_face'</span></span><span>, </span><span><span class=3D"hljs-s=
tring">'monkey_face'</span></span><span>]
nonface_labels =3D [</span><span><span class=3D"hljs-string">'object'</span=
></span><span>, </span><span><span class=3D"hljs-string">'scene'</span></sp=
an><span>, </span><span><span class=3D"hljs-string">'body_part'</span></spa=
n><span>, </span><span><span class=3D"hljs-string">'text'</span></span><spa=
n>, </span><span><span class=3D"hljs-string">'artificial'</span></span><spa=
n>]
</span></span></code></div></div></pre>
<ul data-start=3D"1549" data-end=3D"1627">
<li data-start=3D"1549" data-end=3D"1627" class=3D"">
<p data-start=3D"1551" data-end=3D"1572" class=3D"">Separates categories:</=
p>
<ul data-start=3D"1575" data-end=3D"1627">
<li data-start=3D"1575" data-end=3D"1597" class=3D"">
<p data-start=3D"1577" data-end=3D"1597" class=3D"">Face: human + monkey</p=
>
</li>
<li data-start=3D"1600" data-end=3D"1627" class=3D"">
<p data-start=3D"1602" data-end=3D"1627" class=3D"">Non-face: everything el=
se</p>
</li>
</ul>
</li>
</ul>
<p data-start=3D"1629" data-end=3D"1675" class=3D"">These are used for grou=
ping trial types later.</p>
<hr data-start=3D"1677" data-end=3D"1680" class=3D"">
<h3 data-start=3D"1682" data-end=3D"1714" class=3D""><strong data-start=3D"=
1686" data-end=3D"1714">5. Loop through sessions</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1716" data-end=3D"1810"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>results =3D []

</span><span><span class=3D"hljs-keyword">for</span></span><span> session <=
/span><span><span class=3D"hljs-keyword">in</span></span><span> tqdm(datase=
t.sessions):
    data =3D dataset[session]
</span></span></code></div></div></pre>
<ul data-start=3D"1812" data-end=3D"1974">
<li data-start=3D"1812" data-end=3D"1852" class=3D"">
<p data-start=3D"1814" data-end=3D"1852" class=3D"">Prepares to loop throug=
h each session.</p>
</li>
<li data-start=3D"1853" data-end=3D"1974" class=3D"">
<p data-start=3D"1855" data-end=3D"1974" class=3D"">For each <code data-sta=
rt=3D"1864" data-end=3D"1873">session</code>, loads the actual data (via <c=
ode data-start=3D"1902" data-end=3D"1920">dataset[session]</code>), likely =
returning an <code data-start=3D"1943" data-end=3D"1959">xarray.Dataset</co=
de> or dictionary.</p>
</li>
</ul>
<hr data-start=3D"1976" data-end=3D"1979" class=3D"">
<h3 data-start=3D"1981" data-end=3D"2045" class=3D""><strong data-start=3D"=
1985" data-end=3D"2045">6. Compute mean firing rates for all units per cond=
ition</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2047" data-end=3D"2142"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>mean_rates =3D compute_mean_firing_rates(data, labe=
ls=3Dface_labels + nonface_labels)
</span></span></code></div></div></pre>
<ul data-start=3D"2144" data-end=3D"2275">
<li data-start=3D"2144" data-end=3D"2228" class=3D"">
<p data-start=3D"2146" data-end=3D"2228" class=3D"">Computes average spike =
rates for every unit per stimulus label (face or non-face).</p>
</li>
<li data-start=3D"2229" data-end=3D"2275" class=3D"">
<p data-start=3D"2231" data-end=3D"2275" class=3D"">Returns a 2D matrix: <c=
ode data-start=3D"2252" data-end=3D"2274">[n_units x n_labels]</code>.</p>
</li>
</ul>
<hr data-start=3D"2277" data-end=3D"2280" class=3D"">
<h3 data-start=3D"2282" data-end=3D"2317" class=3D""><strong data-start=3D"=
2286" data-end=3D"2317">7. Compute face selectivity</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2319" data-end=3D"2412"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>selectivity =3D compute_face_selectivity(mean_rates=
, face_labels, nonface_labels)
</span></span></code></div></div></pre>
<ul data-start=3D"2414" data-end=3D"2652">
<li data-start=3D"2414" data-end=3D"2510" class=3D"">
<p data-start=3D"2416" data-end=3D"2510" class=3D"">Calculates a scalar val=
ue per unit that reflects how strongly it prefers faces over non-faces.</p>
</li>
<li data-start=3D"2511" data-end=3D"2652" class=3D"">
<p data-start=3D"2513" data-end=3D"2537" class=3D"">Could be something like=
:</p>
<span class=3D"katex-display"><span class=3D"katex"><span class=3D"katex-ma=
thml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML" display=3D"block">=
<semantics><mrow><mtext>FSI</mtext><mo>=3D</mo><mfrac><mrow><msub><mi>=CE=
=BC</mi><mtext>face</mtext></msub><mo>=E2=88=92</mo><msub><mi>=CE=BC</mi><m=
text>nonface</mtext></msub></mrow><mrow><msub><mi>=CE=BC</mi><mtext>face</m=
text></msub><mo>+</mo><msub><mi>=CE=BC</mi><mtext>nonface</mtext></msub></m=
row></mfrac></mrow><annotation encoding=3D"application/x-tex">\text{FSI} =
=3D \frac{\mu_{\text{face}} - \mu_{\text{nonface}}}{\mu_{\text{face}} + \mu=
_{\text{nonface}}}</annotation></semantics></math></span><span class=3D"kat=
ex-html" aria-hidden=3D"true"><span class=3D"base"><span class=3D"strut" st=
yle=3D"height: 0.6833em;"></span><span class=3D"mord text"><span class=3D"m=
ord">FSI</span></span><span class=3D"mspace" style=3D"margin-right: 0.2778e=
m;"></span><span class=3D"mrel">=3D</span><span class=3D"mspace" style=3D"m=
argin-right: 0.2778em;"></span></span><span class=3D"base"><span class=3D"s=
trut" style=3D"height: 2.1408em; vertical-align: -0.8804em;"></span><span c=
lass=3D"mord"><span class=3D"mopen nulldelimiter"></span><span class=3D"mfr=
ac"><span class=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=3D=
"vlist" style=3D"height: 1.2603em;"><span style=3D"top: -2.314em;"><span cl=
ass=3D"pstrut" style=3D"height: 3em;"></span><span class=3D"mord"><span cla=
ss=3D"mord"><span class=3D"mord mathnormal">=CE=BC</span><span class=3D"msu=
psub"><span class=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=
=3D"vlist" style=3D"height: 0.3361em;"><span style=3D"top: -2.55em; margin-=
left: 0em; margin-right: 0.05em;"><span class=3D"pstrut" style=3D"height: 2=
.7em;"></span><span class=3D"sizing reset-size6 size3 mtight"><span class=
=3D"mord mtight"><span class=3D"mord text mtight"><span class=3D"mord mtigh=
t">face</span></span></span></span></span></span><span class=3D"vlist-s">=
=E2=80=8B</span></span><span class=3D"vlist-r"><span class=3D"vlist" style=
=3D"height: 0.15em;"><span></span></span></span></span></span></span><span =
class=3D"mspace" style=3D"margin-right: 0.2222em;"></span><span class=3D"mb=
in">+</span><span class=3D"mspace" style=3D"margin-right: 0.2222em;"></span=
><span class=3D"mord"><span class=3D"mord mathnormal">=CE=BC</span><span cl=
ass=3D"msupsub"><span class=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><s=
pan class=3D"vlist" style=3D"height: 0.3361em;"><span style=3D"top: -2.55em=
; margin-left: 0em; margin-right: 0.05em;"><span class=3D"pstrut" style=3D"=
height: 2.7em;"></span><span class=3D"sizing reset-size6 size3 mtight"><spa=
n class=3D"mord mtight"><span class=3D"mord text mtight"><span class=3D"mor=
d mtight">nonface</span></span></span></span></span></span><span class=3D"v=
list-s">=E2=80=8B</span></span><span class=3D"vlist-r"><span class=3D"vlist=
" style=3D"height: 0.15em;"><span></span></span></span></span></span></span=
></span></span><span style=3D"top: -3.23em;"><span class=3D"pstrut" style=
=3D"height: 3em;"></span><span class=3D"frac-line" style=3D"border-bottom-w=
idth: 0.04em;"></span></span><span style=3D"top: -3.677em;"><span class=3D"=
pstrut" style=3D"height: 3em;"></span><span class=3D"mord"><span class=3D"m=
ord"><span class=3D"mord mathnormal">=CE=BC</span><span class=3D"msupsub"><=
span class=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=3D"vlis=
t" style=3D"height: 0.3361em;"><span style=3D"top: -2.55em; margin-left: 0e=
m; margin-right: 0.05em;"><span class=3D"pstrut" style=3D"height: 2.7em;"><=
/span><span class=3D"sizing reset-size6 size3 mtight"><span class=3D"mord m=
tight"><span class=3D"mord text mtight"><span class=3D"mord mtight">face</s=
pan></span></span></span></span></span><span class=3D"vlist-s">=E2=80=8B</s=
pan></span><span class=3D"vlist-r"><span class=3D"vlist" style=3D"height: 0=
.15em;"><span></span></span></span></span></span></span><span class=3D"mspa=
ce" style=3D"margin-right: 0.2222em;"></span><span class=3D"mbin">=E2=88=92=
</span><span class=3D"mspace" style=3D"margin-right: 0.2222em;"></span><spa=
n class=3D"mord"><span class=3D"mord mathnormal">=CE=BC</span><span class=
=3D"msupsub"><span class=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span=
 class=3D"vlist" style=3D"height: 0.3361em;"><span style=3D"top: -2.55em; m=
argin-left: 0em; margin-right: 0.05em;"><span class=3D"pstrut" style=3D"hei=
ght: 2.7em;"></span><span class=3D"sizing reset-size6 size3 mtight"><span c=
lass=3D"mord mtight"><span class=3D"mord text mtight"><span class=3D"mord m=
tight">nonface</span></span></span></span></span></span><span class=3D"vlis=
t-s">=E2=80=8B</span></span><span class=3D"vlist-r"><span class=3D"vlist" s=
tyle=3D"height: 0.15em;"><span></span></span></span></span></span></span></=
span></span></span><span class=3D"vlist-s">=E2=80=8B</span></span><span cla=
ss=3D"vlist-r"><span class=3D"vlist" style=3D"height: 0.8804em;"><span></sp=
an></span></span></span></span><span class=3D"mclose nulldelimiter"></span>=
</span></span></span></span></span>
</li>
</ul>
<hr data-start=3D"2654" data-end=3D"2657" class=3D"">
<h3 data-start=3D"2659" data-end=3D"2691" class=3D""><strong data-start=3D"=
2663" data-end=3D"2691">8. Add results to a list</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2693" data-end=3D"2767"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>selectivity[</span><span><span class=3D"hljs-string=
">'session'</span></span><span>] =3D session
results.append(selectivity)
</span></span></code></div></div></pre>
<ul data-start=3D"2769" data-end=3D"2877">
<li data-start=3D"2769" data-end=3D"2821" class=3D"">
<p data-start=3D"2771" data-end=3D"2821" class=3D"">Tags the selectivity re=
sult with the session name.</p>
</li>
<li data-start=3D"2822" data-end=3D"2877" class=3D"">
<p data-start=3D"2824" data-end=3D"2877" class=3D"">Adds it to a growing li=
st of results across sessions.</p>
</li>
</ul>
<hr data-start=3D"2879" data-end=3D"2882" class=3D"">
<h3 data-start=3D"2884" data-end=3D"2928" class=3D""><strong data-start=3D"=
2888" data-end=3D"2928">9. Combine results from all sessions</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2930" data-end=3D"2994"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>results_df =3D pd.concat(results, ignore_index=3D</=
span><span><span class=3D"hljs-literal">True</span></span><span>)
</span></span></code></div></div></pre>
<ul data-start=3D"2996" data-end=3D"3137">
<li data-start=3D"2996" data-end=3D"3047" class=3D"">
<p data-start=3D"2998" data-end=3D"3047" class=3D"">Merges everything into =
a single pandas DataFrame.</p>
</li>
<li data-start=3D"3048" data-end=3D"3087" class=3D"">
<p data-start=3D"3050" data-end=3D"3087" class=3D"">Each row =3D one unit f=
rom one session.</p>
</li>
<li data-start=3D"3088" data-end=3D"3137" class=3D"">
<p data-start=3D"3090" data-end=3D"3137" class=3D"">Columns =3D selectivity=
 metrics, session ID, etc.</p>
</li>
</ul>
<hr data-start=3D"3139" data-end=3D"3142" class=3D"">
<h3 data-start=3D"3144" data-end=3D"3186" class=3D""><strong data-start=3D"=
3148" data-end=3D"3186">10. Plotting (optional but useful)</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3188" data-end=3D"3235"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>plot_face_selectivity(results_df)
</span></span></code></div></div></pre>
<ul data-start=3D"3237" data-end=3D"3367">
<li data-start=3D"3237" data-end=3D"3307" class=3D"">
<p data-start=3D"3239" data-end=3D"3307" class=3D"">Plots the distribution =
of face selectivity across units or sessions.</p>
</li>
<li data-start=3D"3308" data-end=3D"3367" class=3D"">
<p data-start=3D"3310" data-end=3D"3367" class=3D"">Could include histogram=
s, violin plots, or scatter plots.</p>
</li>
</ul>
<hr data-start=3D"3369" data-end=3D"3372" class=3D"">
<h3 data-start=3D"3374" data-end=3D"3397" class=3D""><strong data-start=3D"=
3378" data-end=3D"3397">11. Save output</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3399" data-end=3D"3482"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>results_df.to_csv(</span><span><span class=3D"hljs-=
string">'output/face_selectivity_summary.csv'</span></span><span>, index=3D=
</span><span><span class=3D"hljs-literal">False</span></span><span>)
</span></span></code></div></div></pre>
<ul data-start=3D"3484" data-end=3D"3616">
<li data-start=3D"3484" data-end=3D"3535" class=3D"">
<p data-start=3D"3486" data-end=3D"3535" class=3D"">Saves all results to CS=
V for downstream analysis.</p>
</li>
<li data-start=3D"3536" data-end=3D"3616" class=3D"">
<p data-start=3D"3538" data-end=3D"3616" class=3D"">This CSV will likely be=
 used in <code data-start=3D"3570" data-end=3D"3615">script_1b_face_specifi=
c_match_control.ipynb</code>.</p>
</li>
</ul>
<hr data-start=3D"3618" data-end=3D"3621" class=3D"">
<h2 data-start=3D"3623" data-end=3D"3636" class=3D"">=E2=9C=85 Summary:</h2=
>
<p data-start=3D"3637" data-end=3D"3668" class=3D"">This script does the fo=
llowing:</p>
<ol data-start=3D"3669" data-end=3D"3867">
<li data-start=3D"3669" data-end=3D"3701" class=3D"">
<p data-start=3D"3672" data-end=3D"3701" class=3D"">Loads data from all ses=
sions.</p>
</li>
<li data-start=3D"3702" data-end=3D"3781" class=3D"">
<p data-start=3D"3705" data-end=3D"3781" class=3D"">Computes the average fi=
ring rate of each unit for face and non-face stimuli.</p>
</li>
<li data-start=3D"3782" data-end=3D"3821" class=3D"">
<p data-start=3D"3785" data-end=3D"3821" class=3D"">Calculates a face selec=
tivity score.</p>
</li>
<li data-start=3D"3822" data-end=3D"3867" class=3D"">
<p data-start=3D"3825" data-end=3D"3867" class=3D"">Stores, visualizes, and=
 saves the results.</p>
</li>
</ol>
<hr data-start=3D"3869" data-end=3D"3872" class=3D"">
<p data-start=3D"3874" data-end=3D"4031" class=3D"">If you want, I can show=
 you the actual values inside functions like <code data-start=3D"3942" data=
-end=3D"3969">compute_mean_firing_rates</code> or <code data-start=3D"3973"=
 data-end=3D"3999">compute_face_selectivity</code> if they=E2=80=99re in th=
e codebase too.</p></div></div></div></div></div></div></div></div></articl=
e><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-testi=
d=3D"conversation-turn-5" data-scroll-anchor=3D"false"><h5 class=3D"sr-only=
">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-cont=
ent-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[=
72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)=
"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-conte=
nt-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto fle=
x max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap=
-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div c=
lass=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><div=
 class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full f=
lex-col grow"><div data-message-author-role=3D"user" data-message-id=3D"cab=
c1983-6288-4cf7-862b-f1d07113d3fd" dir=3D"auto" class=3D"min-h-8 text-messa=
ge relative flex w-full flex-col items-end gap-2 text-start break-words whi=
tespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-c=
ol gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative max=
-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 p=
y-2.5"><div class=3D"whitespace-pre-wrap">what about script 0a</div></div><=
/div></div></div></div></div></div></div></article><article class=3D"text-t=
oken-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-6" =
data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div c=
lass=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4=
)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-conte=
nt-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thr=
ead-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[=
64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-cont=
ent-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages=
 focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversa=
tion-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"r=
elative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col gro=
w"><div data-message-author-role=3D"assistant" data-message-id=3D"6217c06d-=
616f-45bc-9074-5b32eb350897" dir=3D"auto" class=3D"min-h-8 text-message rel=
ative flex w-full flex-col items-end gap-2 text-start break-words whitespac=
e-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><di=
v class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div cla=
ss=3D"markdown prose dark:prose-invert w-full break-words dark"><p data-sta=
rt=3D"0" data-end=3D"216" class=3D"">Great question=E2=80=94<code data-star=
t=3D"15" data-end=3D"50">script_0a_shared_processing.ipynb</code> is a <str=
ong data-start=3D"56" data-end=3D"93">foundational preprocessing script</st=
rong>. It's typically run <strong data-start=3D"114" data-end=3D"124">befor=
e</strong> analysis scripts like <code data-start=3D"147" data-end=3D"151">=
1a</code>, and helps set up shared data structures across all experiments.<=
/p>
<p data-start=3D"218" data-end=3D"255" class=3D"">Let=E2=80=99s go through =
it <strong data-start=3D"238" data-end=3D"254">line by line</strong>:</p>
<hr data-start=3D"257" data-end=3D"260" class=3D"">
<h3 data-start=3D"262" data-end=3D"280" class=3D""><strong data-start=3D"26=
6" data-end=3D"280">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"282" data-end=3D"415"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> xarray=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> xr
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span></span></code></div></div></pre>
<ul data-start=3D"417" data-end=3D"645">
<li data-start=3D"417" data-end=3D"645" class=3D"">
<p data-start=3D"419" data-end=3D"434" class=3D"">Standard tools:</p>
<ul data-start=3D"437" data-end=3D"645">
<li data-start=3D"437" data-end=3D"471" class=3D"">
<p data-start=3D"439" data-end=3D"471" class=3D""><code data-start=3D"439" =
data-end=3D"446">numpy</code>, <code data-start=3D"448" data-end=3D"456">pa=
ndas</code>: math and data</p>
</li>
<li data-start=3D"474" data-end=3D"556" class=3D"">
<p data-start=3D"476" data-end=3D"556" class=3D""><code data-start=3D"476" =
data-end=3D"484">xarray</code>: for handling labeled N-dimensional arrays (=
like trials =C3=97 units =C3=97 time)</p>
</li>
<li data-start=3D"559" data-end=3D"582" class=3D"">
<p data-start=3D"561" data-end=3D"582" class=3D""><code data-start=3D"561" =
data-end=3D"567">tqdm</code>: progress bars</p>
</li>
<li data-start=3D"585" data-end=3D"645" class=3D"">
<p data-start=3D"587" data-end=3D"645" class=3D""><code data-start=3D"587" =
data-end=3D"595">pickle</code>: saving intermediate data in Python-native f=
ormat</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"647" data-end=3D"650" class=3D"">
<h3 data-start=3D"652" data-end=3D"675" class=3D""><strong data-start=3D"65=
6" data-end=3D"675">2. Define paths</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"677" data-end=3D"780"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>DATA_DIR =3D Path(</span><span><span class=3D"hljs-=
string">"data"</span></span><span>)
OUTPUT_DIR =3D Path(</span><span><span class=3D"hljs-string">"intermediate"=
</span></span><span>)
OUTPUT_DIR.mkdir(exist_ok=3D</span><span><span class=3D"hljs-literal">True<=
/span></span><span>)
</span></span></code></div></div></pre>
<ul data-start=3D"782" data-end=3D"933">
<li data-start=3D"782" data-end=3D"839" class=3D"">
<p data-start=3D"784" data-end=3D"839" class=3D""><code data-start=3D"784" =
data-end=3D"794">DATA_DIR</code>: where raw or minimally processed data liv=
es</p>
</li>
<li data-start=3D"840" data-end=3D"933" class=3D"">
<p data-start=3D"842" data-end=3D"933" class=3D""><code data-start=3D"842" =
data-end=3D"854">OUTPUT_DIR</code>: new folder <code data-start=3D"867" dat=
a-end=3D"882">intermediate/</code> is created for storing shared preprocess=
ed results</p>
</li>
</ul>
<hr data-start=3D"935" data-end=3D"938" class=3D"">
<h3 data-start=3D"940" data-end=3D"967" class=3D""><strong data-start=3D"94=
4" data-end=3D"967">3. Load raw dataset</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"969" data-end=3D"1067"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">from</span></span><spa=
n> utils.load_data </span><span><span class=3D"hljs-keyword">import</span><=
/span><span> load_raw_sessions
sessions =3D load_raw_sessions(DATA_DIR)
</span></span></code></div></div></pre>
<ul data-start=3D"1069" data-end=3D"1234">
<li data-start=3D"1069" data-end=3D"1123" class=3D"">
<p data-start=3D"1071" data-end=3D"1123" class=3D"">Uses a helper to load r=
aw data from disk into memory</p>
</li>
<li data-start=3D"1124" data-end=3D"1234" class=3D"">
<p data-start=3D"1126" data-end=3D"1175" class=3D"">Likely returns a <code =
data-start=3D"1143" data-end=3D"1149">dict</code> or <code data-start=3D"11=
53" data-end=3D"1169">xarray.Dataset</code> with:</p>
<ul data-start=3D"1178" data-end=3D"1234">
<li data-start=3D"1178" data-end=3D"1197" class=3D"">
<p data-start=3D"1180" data-end=3D"1197" class=3D"">Neural recordings</p>
</li>
<li data-start=3D"1200" data-end=3D"1216" class=3D"">
<p data-start=3D"1202" data-end=3D"1216" class=3D"">Trial metadata</p>
</li>
<li data-start=3D"1219" data-end=3D"1234" class=3D"">
<p data-start=3D"1221" data-end=3D"1234" class=3D"">Event timings</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"1236" data-end=3D"1239" class=3D"">
<h3 data-start=3D"1241" data-end=3D"1275" class=3D""><strong data-start=3D"=
1245" data-end=3D"1275">4. Preprocess each session</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1277" data-end=3D"1360"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>shared_data =3D {}

</span><span><span class=3D"hljs-keyword">for</span></span><span> sess_name=
, sess_data </span><span><span class=3D"hljs-keyword">in</span></span><span=
> tqdm(sessions.items()):
</span></span></code></div></div></pre>
<ul data-start=3D"1362" data-end=3D"1462">
<li data-start=3D"1362" data-end=3D"1397" class=3D"">
<p data-start=3D"1364" data-end=3D"1397" class=3D"">Iterates over each sess=
ion=E2=80=99s data</p>
</li>
<li data-start=3D"1398" data-end=3D"1462" class=3D"">
<p data-start=3D"1400" data-end=3D"1462" class=3D"">Prepares a dictionary <=
code data-start=3D"1422" data-end=3D"1435">shared_data</code> to store proc=
essed results</p>
</li>
</ul>
<hr data-start=3D"1464" data-end=3D"1467" class=3D"">
<h3 data-start=3D"1469" data-end=3D"1503" class=3D""><strong data-start=3D"=
1473" data-end=3D"1503">5. Key preprocessing logic</strong></h3>
<p data-start=3D"1505" data-end=3D"1579" class=3D"">Here=E2=80=99s what typ=
ically happens in this block (depending on implementation):</p>
<pre class=3D"overflow-visible!" data-start=3D"1581" data-end=3D"1693"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>    spikes =3D sess_data[</span><span><span class=
=3D"hljs-string">"spikes"</span></span><span>]
    events =3D sess_data[</span><span><span class=3D"hljs-string">"events"<=
/span></span><span>]
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]
</span></span></code></div></div></pre>
<ul data-start=3D"1695" data-end=3D"1744">
<li data-start=3D"1695" data-end=3D"1744" class=3D"">
<p data-start=3D"1697" data-end=3D"1744" class=3D"">Pulls out spikes, event=
s, and trial information</p>
</li>
</ul>
<p data-start=3D"1746" data-end=3D"1751" class=3D"">Then:</p>
<pre class=3D"overflow-visible!" data-start=3D"1753" data-end=3D"2173"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>    </span><span><span class=3D"hljs-comment"># Ali=
gn spikes to events (e.g., stimulus onset)</span></span><span>
    aligned_spikes =3D align_spikes_to_event(spikes, events, align_event=3D=
</span><span><span class=3D"hljs-string">"stimulus_onset"</span></span><spa=
n>)
   =20
    </span><span><span class=3D"hljs-comment"># Bin or smooth spike trains<=
/span></span><span>
    sdf =3D compute_spike_density_function(aligned_spikes)
   =20
    </span><span><span class=3D"hljs-comment"># Attach trial metadata</span=
></span><span>
    shared_data[sess_name] =3D {
        </span><span><span class=3D"hljs-string">"sdf"</span></span><span>:=
 sdf,
        </span><span><span class=3D"hljs-string">"trials"</span></span><spa=
n>: trials,
        </span><span><span class=3D"hljs-string">"unit_info"</span></span><=
span>: sess_data.get(</span><span><span class=3D"hljs-string">"unit_info"</=
span></span><span>, </span><span><span class=3D"hljs-literal">None</span></=
span><span>),
    }
</span></span></code></div></div></pre>
<ul data-start=3D"2175" data-end=3D"2365">
<li data-start=3D"2175" data-end=3D"2240" class=3D"">
<p data-start=3D"2177" data-end=3D"2240" class=3D""><strong data-start=3D"2=
177" data-end=3D"2194">Aligns spikes</strong> to some reference point (like=
 stimulus onset)</p>
</li>
<li data-start=3D"2241" data-end=3D"2328" class=3D"">
<p data-start=3D"2243" data-end=3D"2328" class=3D"">Computes <strong data-s=
tart=3D"2252" data-end=3D"2278">spike density function</strong> (SDF), a sm=
oothed version of spike rate over time</p>
</li>
<li data-start=3D"2329" data-end=3D"2365" class=3D"">
<p data-start=3D"2331" data-end=3D"2365" class=3D"">Stores everything in <c=
ode data-start=3D"2352" data-end=3D"2365">shared_data</code></p>
</li>
</ul>
<hr data-start=3D"2367" data-end=3D"2370" class=3D"">
<h3 data-start=3D"2372" data-end=3D"2405" class=3D""><strong data-start=3D"=
2376" data-end=3D"2405">6. Save preprocessed data</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2407" data-end=3D"2519"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(OUTP=
UT_DIR / </span><span><span class=3D"hljs-string">"shared_preprocessed_data=
.pkl"</span></span><span>, </span><span><span class=3D"hljs-string">"wb"</s=
pan></span><span>) </span><span><span class=3D"hljs-keyword">as</span></spa=
n><span> f:
    pickle.dump(shared_data, f)
</span></span></code></div></div></pre>
<ul data-start=3D"2521" data-end=3D"2673">
<li data-start=3D"2521" data-end=3D"2577" class=3D"">
<p data-start=3D"2523" data-end=3D"2577" class=3D"">Dumps the full preproce=
ssed dataset into a <code data-start=3D"2566" data-end=3D"2572">.pkl</code>=
 file</p>
</li>
<li data-start=3D"2578" data-end=3D"2673" class=3D"">
<p data-start=3D"2580" data-end=3D"2673" class=3D"">This file can now be lo=
aded quickly by all the analysis scripts downstream (<code data-start=3D"26=
56" data-end=3D"2660">1a</code>, <code data-start=3D"2662" data-end=3D"2666=
">2a</code>, etc.)</p>
</li>
</ul>
<hr data-start=3D"2675" data-end=3D"2678" class=3D"">
<h3 data-start=3D"2680" data-end=3D"2694" class=3D"">=E2=9C=85 Summary:</h3=
>
<p data-start=3D"2696" data-end=3D"2762" class=3D""><code data-start=3D"269=
6" data-end=3D"2731">script_0a_shared_processing.ipynb</code> does the foun=
dational work of:</p>
<ol data-start=3D"2764" data-end=3D"2964">
<li data-start=3D"2764" data-end=3D"2790" class=3D"">
<p data-start=3D"2767" data-end=3D"2790" class=3D"">Loading raw neural data=
</p>
</li>
<li data-start=3D"2791" data-end=3D"2823" class=3D"">
<p data-start=3D"2794" data-end=3D"2823" class=3D"">Aligning spikes to key =
events</p>
</li>
<li data-start=3D"2824" data-end=3D"2862" class=3D"">
<p data-start=3D"2827" data-end=3D"2862" class=3D"">Computing smooth firing=
 rates (SDF)</p>
</li>
<li data-start=3D"2863" data-end=3D"2912" class=3D"">
<p data-start=3D"2866" data-end=3D"2912" class=3D"">Storing everything in a=
 clean, sharable format</p>
</li>
<li data-start=3D"2913" data-end=3D"2964" class=3D"">
<p data-start=3D"2916" data-end=3D"2964" class=3D"">Saving it for later use=
 in the analysis pipeline</p>
</li>
</ol>
<hr data-start=3D"2966" data-end=3D"2969" class=3D"">
<p data-start=3D"2971" data-end=3D"3118" class=3D"">Want me to go into the =
actual <code data-start=3D"3001" data-end=3D"3024">align_spikes_to_event</c=
ode> or <code data-start=3D"3028" data-end=3D"3060">compute_spike_density_f=
unction</code> function next? Those usually live in <code data-start=3D"309=
8" data-end=3D"3109">script_0b</code> or <code data-start=3D"3113" data-end=
=3D"3117">0c</code>.</p></div></div></div></div></div></div></div></div></a=
rticle><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-=
testid=3D"conversation-turn-7" data-scroll-anchor=3D"false"><h5 class=3D"sr=
-only">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread=
-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6=
)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-ma=
rgin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-=
content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-aut=
o flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 l=
g:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><=
div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"=
><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-f=
ull flex-col grow"><div data-message-author-role=3D"user" data-message-id=
=3D"96e70ff6-83af-4764-b52b-e73847eeeac8" dir=3D"auto" class=3D"min-h-8 tex=
t-message relative flex w-full flex-col items-end gap-2 text-start break-wo=
rds whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full=
 flex-col gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relat=
ive max-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl=
 px-5 py-2.5"><div class=3D"whitespace-pre-wrap">yes please could you conti=
nue with 0b, </div></div></div></div></div></div></div></div></div></articl=
e><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-testi=
d=3D"conversation-turn-8" data-scroll-anchor=3D"false"><h6 class=3D"sr-only=
">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-=
content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)=
] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-mar=
gin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-c=
ontent-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto=
 flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg=
:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><d=
iv class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col a=
gent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"fl=
ex max-w-full flex-col grow"><div data-message-author-role=3D"assistant" da=
ta-message-id=3D"01d67269-a0c7-4db6-a009-3956bbcbbee4" dir=3D"auto" class=
=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 text=
-start break-words whitespace-normal [.text-message+&amp;]:mt-5" data-messa=
ge-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hid=
den first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full b=
reak-words dark"><p data-start=3D"0" data-end=3D"224" class=3D"">Absolutely=
=E2=80=94let=E2=80=99s walk through <code data-start=3D"30" data-end=3D"70"=
>script_0b_spike_density_function.ipynb</code> <strong data-start=3D"71" da=
ta-end=3D"87">line by line</strong> and see how it builds the <strong data-=
start=3D"114" data-end=3D"146">Spike Density Function (SDF)</strong> from r=
aw spike data. This script is a key part of the preprocessing pipeline.</p>
<hr data-start=3D"226" data-end=3D"229" class=3D"">
<h2 data-start=3D"231" data-end=3D"257" class=3D"">=F0=9F=A7=A0 Goal of Thi=
s Script:</h2>
<p data-start=3D"258" data-end=3D"451" class=3D"">To smooth raw spike train=
s into <strong data-start=3D"290" data-end=3D"326">continuous firing rate e=
stimates</strong>, usually by convolving spike times with a Gaussian kernel=
. This gives a better view of temporal patterns in neural activity.</p>
<hr data-start=3D"453" data-end=3D"456" class=3D"">
<h3 data-start=3D"458" data-end=3D"476" class=3D""><strong data-start=3D"46=
2" data-end=3D"476">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"478" data-end=3D"619"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> xarray=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> xr
</span><span><span class=3D"hljs-keyword">from</span></span><span> scipy.nd=
image </span><span><span class=3D"hljs-keyword">import</span></span><span> =
gaussian_filter1d
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span></span></code></div></div></pre>
<ul data-start=3D"621" data-end=3D"769">
<li data-start=3D"621" data-end=3D"704" class=3D"">
<p data-start=3D"623" data-end=3D"704" class=3D""><code data-start=3D"623" =
data-end=3D"642">gaussian_filter1d</code> from <code data-start=3D"648" dat=
a-end=3D"663">scipy.ndimage</code> is key: used to smooth the spike trains.=
</p>
</li>
<li data-start=3D"705" data-end=3D"769" class=3D"">
<p data-start=3D"707" data-end=3D"769" class=3D""><code data-start=3D"707" =
data-end=3D"715">xarray</code> and <code data-start=3D"720" data-end=3D"728=
">pandas</code> help handle structured and tabular data.</p>
</li>
</ul>
<hr data-start=3D"771" data-end=3D"774" class=3D"">
<h3 data-start=3D"776" data-end=3D"820" class=3D""><strong data-start=3D"78=
0" data-end=3D"820">2. Define spike convolution function</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"822" data-end=3D"953"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">def</span></span><span=
> </span><span><span class=3D"hljs-title function_">compute_spike_density</=
span></span><span>(</span><span><span class=3D"hljs-params">spikes, sigma=
=3D<span class=3D"hljs-number">10</span></span></span><span>):
    </span><span><span class=3D"hljs-keyword">return</span></span><span> ga=
ussian_filter1d(spikes.astype(</span><span><span class=3D"hljs-built_in">fl=
oat</span></span><span>), sigma=3Dsigma, axis=3D-</span><span><span class=
=3D"hljs-number">1</span></span><span>)
</span></span></code></div></div></pre>
<ul data-start=3D"955" data-end=3D"1160">
<li data-start=3D"955" data-end=3D"1056" class=3D"">
<p data-start=3D"957" data-end=3D"1056" class=3D""><strong data-start=3D"95=
7" data-end=3D"966">Input</strong>: Binary spike train (0 =3D no spike, 1 =
=3D spike), shape: <code data-start=3D"1021" data-end=3D"1056">[n_trials, n=
_units, n_timepoints]</code></p>
</li>
<li data-start=3D"1057" data-end=3D"1107" class=3D"">
<p data-start=3D"1059" data-end=3D"1107" class=3D""><strong data-start=3D"1=
059" data-end=3D"1069">Output</strong>: Smoothed SDF using a Gaussian kerne=
l</p>
</li>
<li data-start=3D"1108" data-end=3D"1160" class=3D"">
<p data-start=3D"1110" data-end=3D"1160" class=3D""><code data-start=3D"111=
0" data-end=3D"1120">sigma=3D10</code> controls smoothing width (in time bi=
ns)</p>
</li>
</ul>
<hr data-start=3D"1162" data-end=3D"1165" class=3D"">
<h3 data-start=3D"1167" data-end=3D"1205" class=3D""><strong data-start=3D"=
1171" data-end=3D"1205">3. Load raw spike-aligned data</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1207" data-end=3D"1307"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">from</span></span><spa=
n> utils.load_data </span><span><span class=3D"hljs-keyword">import</span><=
/span><span> load_aligned_spikes
aligned_spikes =3D load_aligned_spikes()
</span></span></code></div></div></pre>
<ul data-start=3D"1309" data-end=3D"1480">
<li data-start=3D"1309" data-end=3D"1408" class=3D"">
<p data-start=3D"1311" data-end=3D"1408" class=3D"">Loads the output from t=
he previous script (<code data-start=3D"1354" data-end=3D"1358">0a</code>)=
=E2=80=94this should be spikes aligned to stimulus onset.</p>
</li>
<li data-start=3D"1409" data-end=3D"1480" class=3D"">
<p data-start=3D"1411" data-end=3D"1480" class=3D"">Data is likely shaped a=
s <code data-start=3D"1436" data-end=3D"1468">[session][trial x unit x time=
]</code> or similar.</p>
</li>
</ul>
<hr data-start=3D"1482" data-end=3D"1485" class=3D"">
<h3 data-start=3D"1487" data-end=3D"1536" class=3D""><strong data-start=3D"=
1491" data-end=3D"1536">4. Loop through sessions and compute SDFs</strong><=
/h3>
<pre class=3D"overflow-visible!" data-start=3D"1538" data-end=3D"1713"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>sdf_data =3D {}

</span><span><span class=3D"hljs-keyword">for</span></span><span> sess_name=
, data </span><span><span class=3D"hljs-keyword">in</span></span><span> ali=
gned_spikes.items():
    spikes =3D data[</span><span><span class=3D"hljs-string">"spikes"</span=
></span><span>]  </span><span><span class=3D"hljs-comment"># shape: [trials=
, units, time]</span></span><span>
    sdf =3D compute_spike_density(spikes)
</span></span></code></div></div></pre>
<ul data-start=3D"1715" data-end=3D"1787">
<li data-start=3D"1715" data-end=3D"1742" class=3D"">
<p data-start=3D"1717" data-end=3D"1742" class=3D"">Iterates through sessio=
ns</p>
</li>
<li data-start=3D"1743" data-end=3D"1787" class=3D"">
<p data-start=3D"1745" data-end=3D"1787" class=3D"">Applies Gaussian smooth=
ing to spike trains</p>
</li>
</ul>
<hr data-start=3D"1789" data-end=3D"1792" class=3D"">
<h3 data-start=3D"1794" data-end=3D"1834" class=3D""><strong data-start=3D"=
1798" data-end=3D"1834">5. Save results for each session</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1836" data-end=3D"1987"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>    sdf_data[sess_name] =3D {
        </span><span><span class=3D"hljs-string">"sdf"</span></span><span>:=
 sdf,
        </span><span><span class=3D"hljs-string">"trials"</span></span><spa=
n>: data[</span><span><span class=3D"hljs-string">"trials"</span></span><sp=
an>],
        </span><span><span class=3D"hljs-string">"unit_info"</span></span><=
span>: data.get(</span><span><span class=3D"hljs-string">"unit_info"</span>=
</span><span>, </span><span><span class=3D"hljs-literal">None</span></span>=
<span>),
    }
</span></span></code></div></div></pre>
<ul data-start=3D"1989" data-end=3D"2097">
<li data-start=3D"1989" data-end=3D"2097" class=3D"">
<p data-start=3D"1991" data-end=3D"2016" class=3D"">For each session, store=
s:</p>
<ul data-start=3D"2019" data-end=3D"2097">
<li data-start=3D"2019" data-end=3D"2051" class=3D"">
<p data-start=3D"2021" data-end=3D"2051" class=3D"">The SDF (smoothed spike=
 rates)</p>
</li>
<li data-start=3D"2054" data-end=3D"2070" class=3D"">
<p data-start=3D"2056" data-end=3D"2070" class=3D"">Trial metadata</p>
</li>
<li data-start=3D"2073" data-end=3D"2097" class=3D"">
<p data-start=3D"2075" data-end=3D"2097" class=3D"">Optional unit metadata<=
/p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"2099" data-end=3D"2102" class=3D"">
<h3 data-start=3D"2104" data-end=3D"2127" class=3D""><strong data-start=3D"=
2108" data-end=3D"2127">6. Save to disk</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2129" data-end=3D"2270"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> pickle
OUTPUT_DIR =3D Path(</span><span><span class=3D"hljs-string">"intermediate"=
</span></span><span>)
</span><span><span class=3D"hljs-keyword">with</span></span><span> </span><=
span><span class=3D"hljs-built_in">open</span></span><span>(OUTPUT_DIR / </=
span><span><span class=3D"hljs-string">"sdf_data.pkl"</span></span><span>, =
</span><span><span class=3D"hljs-string">"wb"</span></span><span>) </span><=
span><span class=3D"hljs-keyword">as</span></span><span> f:
    pickle.dump(sdf_data, f)
</span></span></code></div></div></pre>
<ul data-start=3D"2272" data-end=3D"2430">
<li data-start=3D"2272" data-end=3D"2343" class=3D"">
<p data-start=3D"2274" data-end=3D"2343" class=3D"">Dumps the entire <code =
data-start=3D"2291" data-end=3D"2301">sdf_data</code> dict into a pickle fi=
le for later access.</p>
</li>
<li data-start=3D"2344" data-end=3D"2430" class=3D"">
<p data-start=3D"2346" data-end=3D"2430" class=3D"">This is the main output=
 of the script=E2=80=94used by analysis scripts like <code data-start=3D"24=
14" data-end=3D"2418">2a</code>, <code data-start=3D"2420" data-end=3D"2424=
">3a</code>, etc.</p>
</li>
</ul>
<hr data-start=3D"2432" data-end=3D"2435" class=3D"">
<h2 data-start=3D"2437" data-end=3D"2449" class=3D"">=E2=9C=85 Summary</h2>
<p data-start=3D"2451" data-end=3D"2501" class=3D""><strong data-start=3D"2=
451" data-end=3D"2501"><code data-start=3D"2453" data-end=3D"2493">script_0=
b_spike_density_function.ipynb</code> does:</strong></p>
<ol data-start=3D"2503" data-end=3D"2628">
<li data-start=3D"2503" data-end=3D"2533" class=3D"">
<p data-start=3D"2506" data-end=3D"2533" class=3D"">Loads aligned spike tra=
ins.</p>
</li>
<li data-start=3D"2534" data-end=3D"2580" class=3D"">
<p data-start=3D"2537" data-end=3D"2580" class=3D"">Applies Gaussian smooth=
ing to compute SDFs.</p>
</li>
<li data-start=3D"2581" data-end=3D"2628" class=3D"">
<p data-start=3D"2584" data-end=3D"2628" class=3D"">Structures and saves re=
sults for future use.</p>
</li>
</ol>
<p data-start=3D"2630" data-end=3D"2806" class=3D"">The smoothed firing rat=
es are essential for trial-level or population-level analyses=E2=80=94they =
let you work with neural firing as continuous signals rather than binary sp=
ike counts.</p>
<hr data-start=3D"2808" data-end=3D"2811" class=3D"">
<p data-start=3D"2813" data-end=3D"2934" class=3D"">Next up would be <code =
data-start=3D"2830" data-end=3D"2856">0c_select_fix_sacc.ipynb</code>, whic=
h helps identify fixation and saccade periods. Want to go into that too?</p=
></div></div></div></div></div></div></div></div></article><article class=
=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversatio=
n-turn-9" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5>=
<div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spa=
cing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread=
-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"=
[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40r=
em] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--threa=
d-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-me=
ssages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/co=
nversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"relati=
ve flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><d=
iv data-message-author-role=3D"user" data-message-id=3D"23b3073a-4c69-4cc5-=
b42f-e6530d8863d3" dir=3D"auto" class=3D"min-h-8 text-message relative flex=
 w-full flex-col items-end gap-2 text-start break-words whitespace-normal [=
.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:h=
idden items-end rtl:items-start"><div class=3D"relative max-w-[var(--user-c=
hat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div clas=
s=3D"whitespace-pre-wrap">so this is working with monkey neural data in ord=
er to smooth out the binary spike data? but according to what unit?</div></=
div></div></div></div></div></div></div></div></article><article class=3D"t=
ext-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-tur=
n-10" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6>=
<div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spa=
cing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread=
-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"=
[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40r=
em] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--threa=
d-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-me=
ssages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/co=
nversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div clas=
s=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-c=
ol grow"><div data-message-author-role=3D"assistant" data-message-id=3D"0ea=
cad75-d9dc-4ca1-bc3a-015500dcad83" dir=3D"auto" class=3D"min-h-8 text-messa=
ge relative flex w-full flex-col items-end gap-2 text-start break-words whi=
tespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4=
o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><d=
iv class=3D"markdown prose dark:prose-invert w-full break-words dark"><p da=
ta-start=3D"0" data-end=3D"233" class=3D"">Exactly=E2=80=94you=E2=80=99ve g=
ot the right idea. This script is <strong data-start=3D"50" data-end=3D"97"=
>working with binary spike data from monkeys</strong>, and its purpose is t=
o <strong data-start=3D"121" data-end=3D"146">smooth out the spikes</strong=
> to create a continuous estimate of firing rate over time, using a <strong=
 data-start=3D"213" data-end=3D"232">Gaussian kernel</strong>.</p>
<p data-start=3D"235" data-end=3D"278" class=3D"">Let me explain how <stron=
g data-start=3D"254" data-end=3D"263">units</strong> fit into this.</p>
<hr data-start=3D"280" data-end=3D"283" class=3D"">
<h3 data-start=3D"285" data-end=3D"325" class=3D"">=F0=9F=A7=A0 What is a =
=E2=80=9Cunit=E2=80=9D in this context?</h3>
<p data-start=3D"327" data-end=3D"358" class=3D"">A <strong data-start=3D"3=
29" data-end=3D"337">unit</strong> typically refers to:</p>
<ul data-start=3D"359" data-end=3D"532">
<li data-start=3D"359" data-end=3D"432" class=3D"">
<p data-start=3D"361" data-end=3D"432" class=3D"">An <strong data-start=3D"=
364" data-end=3D"385">individual neuron</strong> that was isolated (e.g. vi=
a spike sorting), or</p>
</li>
<li data-start=3D"433" data-end=3D"532" class=3D"">
<p data-start=3D"435" data-end=3D"532" class=3D"">A <strong data-start=3D"4=
37" data-end=3D"461">multi-unit recording</strong> from a single electrode/=
channel that captures multiple nearby neurons.</p>
</li>
</ul>
<p data-start=3D"534" data-end=3D"587" class=3D"">So the data structure bei=
ng smoothed looks like this:</p>
<pre class=3D"overflow-visible!" data-start=3D"589" data-end=3D"646"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">plaintext</div><div class=3D"sticky top-9"><di=
v class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=
=3D"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-toke=
n-main-surface-secondary flex items-center rounded-sm px-2 font-sans text-x=
s"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items=
-center select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.656=
9 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569=
 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H=
19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4=
.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C=
14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curren=
tColor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"clo=
sed"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg w=
idth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4=
 5.5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z=
" fill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" st=
roke-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C=
5.12203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.=
3007 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 =
19.8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.060=
8 19.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20=
 10.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.1192=
9 15 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2=
4513 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.771=
9 5.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linec=
ap=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" s=
troke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-l=
inejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div c=
lass=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! lan=
guage-plaintext"><span><span>Shape: [n_trials, n_units, n_timepoints]
</span></span></code></div></div></pre>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"64=
8" data-end=3D"1112" class=3D"w-fit min-w-(--thread-content-width)"><thead =
data-start=3D"648" data-end=3D"740"><tr data-start=3D"648" data-end=3D"740"=
><th data-start=3D"648" data-end=3D"665" data-col-size=3D"sm">Dimension</th=
><th data-start=3D"665" data-end=3D"740" data-col-size=3D"md">Meaning</th><=
/tr></thead><tbody data-start=3D"834" data-end=3D"1112"><tr data-start=3D"8=
34" data-end=3D"926"><td data-start=3D"834" data-end=3D"851" data-col-size=
=3D"sm"><code data-start=3D"836" data-end=3D"846">n_trials</code></td><td d=
ata-start=3D"851" data-end=3D"926" data-col-size=3D"md">Each repetition of =
a stimulus or trial during the experiment</td></tr><tr data-start=3D"927" d=
ata-end=3D"1019"><td data-start=3D"927" data-end=3D"944" data-col-size=3D"s=
m"><code data-start=3D"929" data-end=3D"938">n_units</code></td><td data-st=
art=3D"944" data-end=3D"1019" data-col-size=3D"md">Each electrode or neuron=
 from which spikes were recorded</td></tr><tr data-start=3D"1020" data-end=
=3D"1112"><td data-start=3D"1020" data-end=3D"1037" data-col-size=3D"sm"><c=
ode data-start=3D"1022" data-end=3D"1036">n_timepoints</code></td><td data-=
start=3D"1037" data-end=3D"1112" data-col-size=3D"md">Time bins (e.g., ever=
y 1 ms) aligned to an event like stimulus onset</td></tr></tbody></table><d=
iv class=3D"sticky end-(--thread-content-margin) h-0 self-end select-none">=
<div class=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><=
span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary =
hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 tr=
ansition-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-non=
e group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C2=
2 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2=
 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 1=
7 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.447=
72 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 =
5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=
=3D"currentColor"></path></svg></button></span></div></div></div></div>
<p data-start=3D"1114" data-end=3D"1233" class=3D"">Each element in this ar=
ray is a 0 or 1 (no spike or spike), for a given neuron during a trial at a=
 particular time bin.</p>
<hr data-start=3D"1235" data-end=3D"1238" class=3D"">
<h3 data-start=3D"1240" data-end=3D"1270" class=3D"">=F0=9F=8C=80 What does=
 smoothing do?</h3>
<p data-start=3D"1272" data-end=3D"1406" class=3D"">For a given trial and u=
nit, we take the binary spike vector (e.g. <code data-start=3D"1338" data-e=
nd=3D"1361">[0, 0, 1, 0, 1, 0, 0]</code>) and convolve it with a <strong da=
ta-start=3D"1386" data-end=3D"1405">Gaussian kernel</strong>.</p>
<p data-start=3D"1408" data-end=3D"1485" class=3D"">This gives us a curve t=
hat estimates <strong data-start=3D"1445" data-end=3D"1474">instantaneous f=
iring rate</strong> over time:</p>
<ul data-start=3D"1486" data-end=3D"1613">
<li data-start=3D"1486" data-end=3D"1546" class=3D"">
<p data-start=3D"1488" data-end=3D"1546" class=3D"">Spikes are now little "=
bumps" centered at their timepoints</p>
</li>
<li data-start=3D"1547" data-end=3D"1613" class=3D"">
<p data-start=3D"1549" data-end=3D"1613" class=3D"">You can now visualize o=
r average these more easily across trials</p>
</li>
</ul>
<hr data-start=3D"1615" data-end=3D"1618" class=3D"">
<h3 data-start=3D"1620" data-end=3D"1647" class=3D"">=F0=9F=A4=94 Why is th=
is helpful?</h3>
<p data-start=3D"1649" data-end=3D"1744" class=3D"">Binary spike trains are=
 sparse and hard to compare directly across trials. But after smoothing:</p=
>
<ul data-start=3D"1745" data-end=3D"1927">
<li data-start=3D"1745" data-end=3D"1798" class=3D"">
<p data-start=3D"1747" data-end=3D"1798" class=3D"">You can <strong data-st=
art=3D"1755" data-end=3D"1771">average SDFs</strong> across trials for one =
unit</p>
</li>
<li data-start=3D"1799" data-end=3D"1869" class=3D"">
<p data-start=3D"1801" data-end=3D"1869" class=3D"">Compare <strong data-st=
art=3D"1809" data-end=3D"1830">temporal dynamics</strong> between units, st=
imuli, or brain areas</p>
</li>
<li data-start=3D"1870" data-end=3D"1927" class=3D"">
<p data-start=3D"1872" data-end=3D"1927" class=3D"">Use these continuous ra=
tes for <strong data-start=3D"1903" data-end=3D"1927">modeling or decoding<=
/strong></p>
</li>
</ul>
<hr data-start=3D"1929" data-end=3D"1932" class=3D"">
<h3 data-start=3D"1934" data-end=3D"1946" class=3D"">=F0=9F=A7=AA TL;DR</h3=
>
<p data-start=3D"1947" data-end=3D"1951" class=3D"">Yes:</p>
<ul data-start=3D"1952" data-end=3D"2183">
<li data-start=3D"1952" data-end=3D"1994" class=3D"">
<p data-start=3D"1954" data-end=3D"1994" class=3D"">The script smooths <str=
ong data-start=3D"1973" data-end=3D"1994">binary spike data</strong></p>
</li>
<li data-start=3D"1995" data-end=3D"2038" class=3D"">
<p data-start=3D"1997" data-end=3D"2038" class=3D"">It's organized by <stro=
ng data-start=3D"2015" data-end=3D"2038">trial =C3=97 unit =C3=97 time</str=
ong></p>
</li>
<li data-start=3D"2039" data-end=3D"2108" class=3D"">
<p data-start=3D"2041" data-end=3D"2108" class=3D"">The <strong data-start=
=3D"2045" data-end=3D"2053">unit</strong> is a recording channel, often ass=
ociated with a neuron</p>
</li>
<li data-start=3D"2109" data-end=3D"2183" class=3D"">
<p data-start=3D"2111" data-end=3D"2183" class=3D"">The result is a continu=
ous signal representing <strong data-start=3D"2158" data-end=3D"2173">firin=
g rate</strong> over time</p>
</li>
</ul>
<p data-start=3D"2185" data-end=3D"2293" class=3D"">Let me know if you want=
 to peek at the actual kernel being used (or try modifying the smoothing pa=
rameters)!</p></div></div></div></div></div></div></div></div></article><ar=
ticle class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"=
conversation-turn-11" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">Yo=
u said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-=
margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72re=
m]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><d=
iv class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-m=
ax-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex ma=
x-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 g=
roup/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=
=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><div cla=
ss=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-=
col grow"><div data-message-author-role=3D"user" data-message-id=3D"0899040=
0-bb43-4f14-9d21-678d26b44b10" dir=3D"auto" class=3D"min-h-8 text-message r=
elative flex w-full flex-col items-end gap-2 text-start break-words whitesp=
ace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col g=
ap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[=
var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.=
5"><div class=3D"whitespace-pre-wrap">is this data for a single monkey? and=
 where is the corresponding stimulus that the monkey was looking at  </div>=
</div></div></div></div></div></div></div></div></article><article class=3D=
"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-t=
urn-12" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h=
6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--s=
pacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thre=
ad-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div =
class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full fl=
ex-col grow"><div data-message-author-role=3D"assistant" data-message-id=3D=
"2978d978-278e-44a3-abce-7caa627dd547" dir=3D"auto" class=3D"min-h-8 text-m=
essage relative flex w-full flex-col items-end gap-2 text-start break-words=
 whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"g=
pt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]=
"><div class=3D"markdown prose dark:prose-invert w-full break-words dark"><=
p data-start=3D"0" data-end=3D"41" class=3D"">Awesome questions. Let=E2=80=
=99s break this down:</p>
<hr data-start=3D"43" data-end=3D"46" class=3D"">
<h3 data-start=3D"48" data-end=3D"95" class=3D"">=F0=9F=A7=8D=E2=80=8D=E2=
=99=82=EF=B8=8F Is this data for a <strong data-start=3D"77" data-end=3D"94=
">single monkey</strong>?</h3>
<p data-start=3D"97" data-end=3D"233" class=3D""><strong data-start=3D"97" =
data-end=3D"116">Most likely: no</strong>=E2=80=94the dataset you're workin=
g with includes <strong data-start=3D"158" data-end=3D"189">multiple record=
ing sessions</strong>, and each session typically corresponds to:</p>
<ul data-start=3D"234" data-end=3D"324">
<li data-start=3D"234" data-end=3D"267" class=3D"">
<p data-start=3D"236" data-end=3D"267" class=3D""><strong data-start=3D"236=
" data-end=3D"250">One monkey</strong>, recorded during</p>
</li>
<li data-start=3D"268" data-end=3D"324" class=3D"">
<p data-start=3D"270" data-end=3D"324" class=3D""><strong data-start=3D"270=
" data-end=3D"281">One day</strong> (or chunk of time) with a specific impl=
ant</p>
</li>
</ul>
<p data-start=3D"326" data-end=3D"457" class=3D"">So while each session is =
from a <strong data-start=3D"358" data-end=3D"375">single monkey</strong>, =
the <strong data-start=3D"381" data-end=3D"397">full dataset</strong> likel=
y includes multiple sessions and <strong data-start=3D"436" data-end=3D"456=
">multiple monkeys</strong>.</p>
<p data-start=3D"459" data-end=3D"676" class=3D"">In fact, based on your fi=
les and the paper you're working from (=E2=80=9C<em data-start=3D"524" data=
-end=3D"621">Feature-selective responses in macaque visual cortex follow ey=
e movements during natural vision</em>=E2=80=9D), they collected data from =
<strong data-start=3D"650" data-end=3D"675">more than one macaque</strong>.=
</p>
<p data-start=3D"678" data-end=3D"743" class=3D"">You can verify which monk=
ey each session came from by looking at:</p>
<pre class=3D"overflow-visible!" data-start=3D"744" data-end=3D"774"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>dataset.sessions
</span></span></code></div></div></pre>
<p data-start=3D"775" data-end=3D"890" class=3D"">or checking the <code dat=
a-start=3D"791" data-end=3D"800">session</code> or <code data-start=3D"804"=
 data-end=3D"816">subject_id</code> fields in metadata (often inside the <c=
ode data-start=3D"854" data-end=3D"870">xarray.Dataset</code> or trial meta=
data).</p>
<hr data-start=3D"892" data-end=3D"895" class=3D"">
<h3 data-start=3D"897" data-end=3D"971" class=3D"">=F0=9F=96=BC=EF=B8=8F Wh=
ere is the <strong data-start=3D"918" data-end=3D"944">corresponding stimul=
us</strong> the monkey was looking at?</h3>
<p data-start=3D"973" data-end=3D"1164" class=3D"">=E2=9C=85 <strong data-s=
tart=3D"975" data-end=3D"1014">Yes, the stimulus data is included!</strong>=
 The monkey was shown images while eye movements and neural spikes were rec=
orded. The stimulus info is usually in one or more of the following places:=
</p>
<h4 data-start=3D"1166" data-end=3D"1188" class=3D"">1. Trial Metadata</h4>
<p data-start=3D"1189" data-end=3D"1265" class=3D"">Inside the <code data-s=
tart=3D"1200" data-end=3D"1208">trials</code> object (per session), you=E2=
=80=99ll typically find fields like:</p>
<pre class=3D"overflow-visible!" data-start=3D"1267" data-end=3D"1504"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>trial[</span><span><span class=3D"hljs-string">'ima=
ge_id'</span></span><span>]     </span><span><span class=3D"hljs-comment">#=
 identifier for the stimulus image</span></span><span>
trial[</span><span><span class=3D"hljs-string">'category'</span></span><spa=
n>]     </span><span><span class=3D"hljs-comment"># 'human_face', 'monkey_f=
ace', 'scene', etc.</span></span><span>
trial[</span><span><span class=3D"hljs-string">'onset_time'</span></span><s=
pan>]   </span><span><span class=3D"hljs-comment"># when the image was show=
n</span></span><span>
trial[</span><span><span class=3D"hljs-string">'duration'</span></span><spa=
n>]     </span><span><span class=3D"hljs-comment"># how long it was on scre=
en</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"1506" data-end=3D"1614" class=3D"">You can link this <code=
 data-start=3D"1524" data-end=3D"1534">image_id</code> to an actual image f=
ile (e.g., via a mapping like <code data-start=3D"1585" data-end=3D"1612">i=
mage_id_to_filename.json</code>).</p>
<h4 data-start=3D"1616" data-end=3D"1656" class=3D"">2. Stimulus Folder or =
Metadata File</h4>
<p data-start=3D"1657" data-end=3D"1785" class=3D"">In the GitHub repo or D=
ANDI archive, there=E2=80=99s usually a <code data-start=3D"1712" data-end=
=3D"1722">stimuli/</code> folder or a link to the original image files, org=
anized by ID.</p>
<h4 data-start=3D"1787" data-end=3D"1810" class=3D"">3. During Analysis</h4=
>
<p data-start=3D"1811" data-end=3D"1892" class=3D"">In scripts like <code d=
ata-start=3D"1827" data-end=3D"1845">1a_face_specific</code>, they use tria=
l labels to select trials where:</p>
<pre class=3D"overflow-visible!" data-start=3D"1893" data-end=3D"1957"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>trial[</span><span><span class=3D"hljs-string">'cat=
egory'</span></span><span>] =3D=3D </span><span><span class=3D"hljs-string"=
>'human_face'</span></span><span> </span><span><span class=3D"hljs-keyword"=
>or</span></span><span> </span><span><span class=3D"hljs-string">'monkey_fa=
ce'</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"1958" data-end=3D"2038" class=3D"">So you're already using=
 the stimulus metadata when calculating face selectivity.</p>
<hr data-start=3D"2040" data-end=3D"2043" class=3D"">
<h3 data-start=3D"2045" data-end=3D"2076" class=3D"">=F0=9F=93=A6 Where is =
it in the code?</h3>
<p data-start=3D"2078" data-end=3D"2110" class=3D"">Here=E2=80=99s how you =
can explore this:</p>
<pre class=3D"overflow-visible!" data-start=3D"2112" data-end=3D"2225"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-comment"># Load a session</span=
></span><span>
data =3D dataset[</span><span><span class=3D"hljs-string">'session_name'</s=
pan></span><span>]

</span><span><span class=3D"hljs-comment"># Look at the trial metadata</spa=
n></span><span>
</span><span><span class=3D"hljs-built_in">print</span></span><span>(data[<=
/span><span><span class=3D"hljs-string">'trials'</span></span><span>])
</span></span></code></div></div></pre>
<p data-start=3D"2227" data-end=3D"2341" class=3D"">You=E2=80=99ll likely s=
ee a <code data-start=3D"2247" data-end=3D"2258">DataFrame</code> or <code =
data-start=3D"2262" data-end=3D"2270">xarray</code> object with each trial=
=E2=80=99s metadata, including which stimulus was shown.</p>
<hr data-start=3D"2343" data-end=3D"2346" class=3D"">
<h3 data-start=3D"2348" data-end=3D"2362" class=3D"">=F0=9F=A7=A0 Summary</=
h3>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"23=
64" data-end=3D"2929" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2364" data-end=3D"2477"><tr data-start=3D"2364" data-end=3D"=
2477"><th data-start=3D"2364" data-end=3D"2403" data-col-size=3D"sm">Questi=
on</th><th data-start=3D"2403" data-end=3D"2477" data-col-size=3D"md">Answe=
r</th></tr></thead><tbody data-start=3D"2591" data-end=3D"2929"><tr data-st=
art=3D"2591" data-end=3D"2703"><td data-start=3D"2591" data-end=3D"2629" da=
ta-col-size=3D"sm">Is it data from one monkey?</td><td data-start=3D"2629" =
data-end=3D"2703" data-col-size=3D"md">No, it's from multiple monkeys/sessi=
ons, each session =3D one monkey</td></tr><tr data-start=3D"2704" data-end=
=3D"2816"><td data-start=3D"2704" data-end=3D"2742" data-col-size=3D"sm">Wh=
ere are the stimuli?</td><td data-start=3D"2742" data-end=3D"2816" data-col=
-size=3D"md">Inside <code data-start=3D"2751" data-end=3D"2770">trial['imag=
e_id']</code>, <code data-start=3D"2772" data-end=3D"2791">trial['category'=
]</code>, etc.</td></tr><tr data-start=3D"2817" data-end=3D"2929"><td data-=
start=3D"2817" data-end=3D"2855" data-col-size=3D"sm">Can I see the actual =
images?</td><td data-start=3D"2855" data-end=3D"2929" data-col-size=3D"md">=
Yes=E2=80=94usually available in the repo or via <code data-start=3D"2898" =
data-end=3D"2908">image_id</code> mapping</td></tr></tbody></table><div cla=
ss=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"><div c=
lass=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><span c=
lass=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary hover:=
bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 transiti=
on-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-none grou=
p-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6=
569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.65=
69 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V1=
5H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9=
 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H1=
4C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curr=
entColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"2931" data-end=3D"2934" class=3D"">
<p data-start=3D"2936" data-end=3D"3064" class=3D"">Want me to help you ext=
ract actual stimuli shown in a specific session or decode eye movements fro=
m saccade/fixation timing too?</p></div></div></div></div></div></div></div=
></div></article><article class=3D"text-token-text-primary w-full" dir=3D"a=
uto" data-testid=3D"conversation-turn-13" data-scroll-anchor=3D"false"><h5 =
class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-auto py-=
5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:=
--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread=
-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]=
:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48=
rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4=
 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabind=
ex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-=
0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"f=
lex max-w-full flex-col grow"><div data-message-author-role=3D"user" data-m=
essage-id=3D"c4112421-738c-4575-b5fd-621dc0861670" dir=3D"auto" class=3D"mi=
n-h-8 text-message relative flex w-full flex-col items-end gap-2 text-start=
 break-words whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"fl=
ex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><div class=
=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-surface ro=
unded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">how are they maki=
ng sure that the images stay linked after the data is convolved</div></div>=
</div></div></div></div></div></div></div></article><article class=3D"text-=
token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-14=
" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div=
 class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing=
(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-con=
tent-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--t=
hread-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] =
@[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-co=
ntent-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messag=
es focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conver=
sation-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D=
"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col g=
row"><div data-message-author-role=3D"assistant" data-message-id=3D"97c5e8f=
c-dc8b-43be-a8a6-95342f0738a7" dir=3D"auto" class=3D"min-h-8 text-message r=
elative flex w-full flex-col items-end gap-2 text-start break-words whitesp=
ace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><=
div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div c=
lass=3D"markdown prose dark:prose-invert w-full break-words dark"><p data-s=
tart=3D"0" data-end=3D"126" class=3D"">Excellent question=E2=80=94and super=
 important for making sure your neural responses are still interpretable af=
ter all that smoothing!</p>
<p data-start=3D"128" data-end=3D"249" class=3D"">Here=E2=80=99s how they <=
strong data-start=3D"144" data-end=3D"199">keep the stimuli linked to the s=
moothed neural data</strong>, even after Gaussian convolution of spike trai=
ns:</p>
<hr data-start=3D"251" data-end=3D"254" class=3D"">
<h3 data-start=3D"256" data-end=3D"309" class=3D"">=F0=9F=94=97 Linking Sti=
muli to Neural Data After Smoothing</h3>
<p data-start=3D"311" data-end=3D"461" class=3D"">When the spike trains are=
 smoothed (e.g. in <code data-start=3D"355" data-end=3D"395">script_0b_spik=
e_density_function.ipynb</code>), the structure of the data remains the <st=
rong data-start=3D"436" data-end=3D"460">same shape and order</strong>:</p>
<pre class=3D"overflow-visible!" data-start=3D"463" data-end=3D"597"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">plaintext</div><div class=3D"sticky top-9"><di=
v class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=
=3D"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-toke=
n-main-surface-secondary flex items-center rounded-sm px-2 font-sans text-x=
s"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items=
-center select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.656=
9 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569=
 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H=
19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4=
.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C=
14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curren=
tColor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"clo=
sed"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg w=
idth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4=
 5.5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z=
" fill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" st=
roke-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C=
5.12203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.=
3007 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 =
19.8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.060=
8 19.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20=
 10.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.1192=
9 15 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2=
4513 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.771=
9 5.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linec=
ap=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" s=
troke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-l=
inejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div c=
lass=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! lan=
guage-plaintext"><span><span>Before: spikes[trial, unit, time]  =E2=86=92  =
binary (0/1)
After:  sdf[trial, unit, time]     =E2=86=92  float (firing rate estimate)
</span></span></code></div></div></pre>
<p data-start=3D"599" data-end=3D"624" class=3D"">What stays <strong data-s=
tart=3D"610" data-end=3D"623">unchanged</strong>:</p>
<ul data-start=3D"625" data-end=3D"671">
<li data-start=3D"625" data-end=3D"638" class=3D"">
<p data-start=3D"627" data-end=3D"638" class=3D"">Trial index</p>
</li>
<li data-start=3D"639" data-end=3D"654" class=3D"">
<p data-start=3D"641" data-end=3D"654" class=3D"">Unit identity</p>
</li>
<li data-start=3D"655" data-end=3D"671" class=3D"">
<p data-start=3D"657" data-end=3D"671" class=3D"">Time alignment</p>
</li>
</ul>
<p data-start=3D"673" data-end=3D"807" class=3D"">So as long as the trials =
aren=E2=80=99t shuffled or filtered away, you can still <strong data-start=
=3D"746" data-end=3D"788">directly associate each smoothed trial</strong> w=
ith its stimulus.</p>
<hr data-start=3D"809" data-end=3D"812" class=3D"">
<h3 data-start=3D"814" data-end=3D"856" class=3D"">=E2=9C=85 How it=E2=80=
=99s actually preserved in code:</h3>
<h4 data-start=3D"858" data-end=3D"894" class=3D"">1. Trial metadata is pre=
served:</h4>
<pre class=3D"overflow-visible!" data-start=3D"896" data-end=3D"1080"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>sdf_data[sess_name] =3D {
    </span><span><span class=3D"hljs-string">"sdf"</span></span><span>: sdf=
,
    </span><span><span class=3D"hljs-string">"trials"</span></span><span>: =
data[</span><span><span class=3D"hljs-string">"trials"</span></span><span>]=
,             </span><span><span class=3D"hljs-comment"># trial-level metad=
ata</span></span><span>
    </span><span><span class=3D"hljs-string">"unit_info"</span></span><span=
>: data.get(</span><span><span class=3D"hljs-string">"unit_info"</span></sp=
an><span>),   </span><span><span class=3D"hljs-comment"># unit-level metada=
ta</span></span><span>
}
</span></span></code></div></div></pre>
<p data-start=3D"1082" data-end=3D"1127" class=3D"">This keeps each trial's=
 associated info=E2=80=94like:</p>
<ul data-start=3D"1129" data-end=3D"1245">
<li data-start=3D"1129" data-end=3D"1141" class=3D"">
<p data-start=3D"1131" data-end=3D"1141" class=3D""><code data-start=3D"113=
1" data-end=3D"1141">image_id</code></p>
</li>
<li data-start=3D"1142" data-end=3D"1154" class=3D"">
<p data-start=3D"1144" data-end=3D"1154" class=3D""><code data-start=3D"114=
4" data-end=3D"1154">category</code></p>
</li>
<li data-start=3D"1155" data-end=3D"1173" class=3D"">
<p data-start=3D"1157" data-end=3D"1173" class=3D""><code data-start=3D"115=
7" data-end=3D"1173">stimulus_onset</code></p>
</li>
<li data-start=3D"1174" data-end=3D"1186" class=3D"">
<p data-start=3D"1176" data-end=3D"1186" class=3D""><code data-start=3D"117=
6" data-end=3D"1186">duration</code></p>
</li>
<li data-start=3D"1187" data-end=3D"1215" class=3D"">
<p data-start=3D"1189" data-end=3D"1215" class=3D""><code data-start=3D"118=
9" data-end=3D"1215">saccade/fixation ordinal</code></p>
</li>
<li data-start=3D"1216" data-end=3D"1245" class=3D"">
<p data-start=3D"1218" data-end=3D"1245" class=3D"">maybe even gaze coordin=
ates</p>
</li>
</ul>
<p data-start=3D"1247" data-end=3D"1346" class=3D"">So even though the spik=
es become smoothed rates, the <strong data-start=3D"1300" data-end=3D"1327"=
>metadata stays attached</strong> in the same order.</p>
<hr data-start=3D"1348" data-end=3D"1351" class=3D"">
<h4 data-start=3D"1353" data-end=3D"1413" class=3D"">2. The format is struc=
tured (xarray or dict-of-arrays):</h4>
<p data-start=3D"1415" data-end=3D"1449" class=3D"">The data is often saved=
 as either:</p>
<ul data-start=3D"1450" data-end=3D"1611">
<li data-start=3D"1450" data-end=3D"1525" class=3D"">
<p data-start=3D"1452" data-end=3D"1525" class=3D"">An <code data-start=3D"=
1455" data-end=3D"1471">xarray.Dataset</code> (with labeled coordinates lik=
e trial, unit, time), or</p>
</li>
<li data-start=3D"1526" data-end=3D"1611" class=3D"">
<p data-start=3D"1528" data-end=3D"1611" class=3D"">A Python dictionary whe=
re <code data-start=3D"1554" data-end=3D"1559">sdf</code> and <code data-st=
art=3D"1564" data-end=3D"1572">trials</code> <strong data-start=3D"1573" da=
ta-end=3D"1611">share the same first axis (trials)</strong></p>
</li>
</ul>
<p data-start=3D"1613" data-end=3D"1645" class=3D"">That means you can alwa=
ys match:</p>
<pre class=3D"overflow-visible!" data-start=3D"1647" data-end=3D"1698"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>sdf[trial_i]  =E2=9F=B7  trials.iloc[trial_i]
</span></span></code></div></div></pre>
<p data-start=3D"1700" data-end=3D"1713" class=3D"">or in xarray:</p>
<pre class=3D"overflow-visible!" data-start=3D"1715" data-end=3D"1769"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>sdf.sel(trial=3Di)  =E2=9F=B7  trials.sel(trial=3Di=
)
</span></span></code></div></div></pre>
<hr data-start=3D"1771" data-end=3D"1774" class=3D"">
<h3 data-start=3D"1776" data-end=3D"1798" class=3D"">=F0=9F=A7=A0 Why that =
works:</h3>
<ul data-start=3D"1800" data-end=3D"2008">
<li data-start=3D"1800" data-end=3D"1851" class=3D"">
<p data-start=3D"1802" data-end=3D"1851" class=3D"">The convolution is appl=
ied <strong data-start=3D"1829" data-end=3D"1850">within each trial</strong=
>.</p>
</li>
<li data-start=3D"1852" data-end=3D"1916" class=3D"">
<p data-start=3D"1854" data-end=3D"1916" class=3D"">So trial <code data-sta=
rt=3D"1863" data-end=3D"1866">i</code> is still trial <code data-start=3D"1=
882" data-end=3D"1885">i</code>=E2=80=94no reshuffling, no relabeling.</p>
</li>
<li data-start=3D"1917" data-end=3D"2008" class=3D"">
<p data-start=3D"1919" data-end=3D"2008" class=3D"">And the smoothing does =
not affect the actual trial index or its association with stimuli.</p>
</li>
</ul>
<hr data-start=3D"2010" data-end=3D"2013" class=3D"">
<h3 data-start=3D"2015" data-end=3D"2071" class=3D"">=F0=9F=9B=A1=EF=B8=8F =
TL;DR =E2=80=93 How stimulus-trial linkage is preserved:</h3>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"20=
73" data-end=3D"2453" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2073" data-end=3D"2148"><tr data-start=3D"2073" data-end=3D"=
2148"><th data-start=3D"2073" data-end=3D"2097" data-col-size=3D"sm">Step</=
th><th data-start=3D"2097" data-end=3D"2148" data-col-size=3D"md">What=E2=
=80=99s Preserved</th></tr></thead><tbody data-start=3D"2226" data-end=3D"2=
453"><tr data-start=3D"2226" data-end=3D"2301"><td data-start=3D"2226" data=
-end=3D"2250" data-col-size=3D"sm">Before smoothing</td><td data-start=3D"2=
250" data-end=3D"2301" data-col-size=3D"md">Each trial has spike train + me=
tadata (stimulus)</td></tr><tr data-start=3D"2302" data-end=3D"2377"><td da=
ta-start=3D"2302" data-end=3D"2326" data-col-size=3D"sm">During smoothing</=
td><td data-start=3D"2326" data-end=3D"2377" data-col-size=3D"md">Convoluti=
on is done per trial, in-place</td></tr><tr data-start=3D"2378" data-end=3D=
"2453"><td data-start=3D"2378" data-end=3D"2402" data-col-size=3D"sm">After=
 smoothing</td><td data-start=3D"2402" data-end=3D"2453" data-col-size=3D"m=
d">Metadata is stored alongside smoothed SDFs</td></tr></tbody></table><div=
 class=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"><d=
iv class=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary ho=
ver:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 tran=
sition-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-none =
group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"even=
odd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 =
15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 2=
0.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 =
10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772=
 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 =
20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"=
currentColor"></path></svg></button></span></div></div></div></div>
<p data-start=3D"2455" data-end=3D"2515" class=3D"">So yes=E2=80=94the stim=
ulus is still fully linked after smoothing =F0=9F=8E=AF</p>
<hr data-start=3D"2517" data-end=3D"2520" class=3D"">
<p data-start=3D"2522" data-end=3D"2655" class=3D"">Want me to show you how=
 to retrieve the actual stimulus label for a specific smoothed response (e.=
g. get the category for <code data-start=3D"2644" data-end=3D"2653">sdf[42]=
</code>)?</p></div></div></div></div></div></div></div></div></article><art=
icle class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"c=
onversation-turn-15" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You=
 said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-m=
argin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem=
]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><di=
v class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-ma=
x-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max=
-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 gr=
oup/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=
=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><div cla=
ss=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-=
col grow"><div data-message-author-role=3D"user" data-message-id=3D"7914d01=
f-cf6c-4026-9b5e-8a9263ca9801" dir=3D"auto" class=3D"min-h-8 text-message r=
elative flex w-full flex-col items-end gap-2 text-start break-words whitesp=
ace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col g=
ap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[=
var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.=
5"><div class=3D"whitespace-pre-wrap">okay that all makes sense can you go =
through the script 0c</div></div></div></div></div></div></div></div></div>=
</article><article class=3D"text-token-text-primary w-full" dir=3D"auto" da=
ta-testid=3D"conversation-turn-16" data-scroll-anchor=3D"false"><h6 class=
=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5=
 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:-=
-spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-=
content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:=
[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48r=
em] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 =
md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabinde=
x=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0=
 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div =
class=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"as=
sistant" data-message-id=3D"791d9ea0-dc80-4e80-906b-5c6528dbfd54" dir=3D"au=
to" class=3D"min-h-8 text-message relative flex w-full flex-col items-end g=
ap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5" d=
ata-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 =
empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert=
 w-full break-words dark"><p data-start=3D"0" data-end=3D"243" class=3D"">Y=
up! Let=E2=80=99s dive into <strong data-start=3D"21" data-end=3D"58"><code=
 data-start=3D"23" data-end=3D"56">script_0c_select_fix_sacc.ipynb</code></=
strong> and walk through it line by line. This script is responsible for id=
entifying <strong data-start=3D"136" data-end=3D"148">fixation</strong> and=
 <strong data-start=3D"153" data-end=3D"164">saccade</strong> periods=E2=80=
=94critical for aligning neural activity with specific behavioral events.</=
p>
<hr data-start=3D"245" data-end=3D"248" class=3D"">
<h2 data-start=3D"250" data-end=3D"261" class=3D"">=F0=9F=8E=AF Goal:</h2>
<p data-start=3D"262" data-end=3D"294" class=3D"">To process each trial and=
 label:</p>
<ul data-start=3D"295" data-end=3D"447">
<li data-start=3D"295" data-end=3D"329" class=3D"">
<p data-start=3D"297" data-end=3D"329" class=3D"">When the monkey was <stro=
ng data-start=3D"317" data-end=3D"329">fixating</strong></p>
</li>
<li data-start=3D"330" data-end=3D"360" class=3D"">
<p data-start=3D"332" data-end=3D"360" class=3D"">When they made a <strong =
data-start=3D"349" data-end=3D"360">saccade</strong></p>
</li>
<li data-start=3D"361" data-end=3D"447" class=3D"">
<p data-start=3D"363" data-end=3D"447" class=3D"">And possibly their <stron=
g data-start=3D"382" data-end=3D"402">ordinal position</strong> in a sequen=
ce (e.g. 1st, 2nd fixation, etc.)</p>
</li>
</ul>
<p data-start=3D"449" data-end=3D"532" class=3D"">These labels get added to=
 trial metadata so downstream analyses can do things like:</p>
<ul data-start=3D"533" data-end=3D"660">
<li data-start=3D"533" data-end=3D"594" class=3D"">
<p data-start=3D"535" data-end=3D"594" class=3D"">Compare neural activity d=
uring the <strong data-start=3D"570" data-end=3D"594">1st vs. 3rd fixation<=
/strong></p>
</li>
<li data-start=3D"595" data-end=3D"660" class=3D"">
<p data-start=3D"597" data-end=3D"660" class=3D"">Check selectivity during =
<strong data-start=3D"622" data-end=3D"647">pre- vs. post-saccade</strong> =
time windows</p>
</li>
</ul>
<hr data-start=3D"662" data-end=3D"665" class=3D"">
<h3 data-start=3D"667" data-end=3D"685" class=3D""><strong data-start=3D"67=
1" data-end=3D"685">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"687" data-end=3D"800"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"802" data-end=3D"870" class=3D"">Standard stack for data h=
andling, loading/saving, and progress bars.</p>
<hr data-start=3D"872" data-end=3D"875" class=3D"">
<h3 data-start=3D"877" data-end=3D"905" class=3D""><strong data-start=3D"88=
1" data-end=3D"905">2. Define file paths</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"907" data-end=3D"1059"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>INTERMEDIATE_DIR =3D Path(</span><span><span class=
=3D"hljs-string">"intermediate"</span></span><span>)
</span><span><span class=3D"hljs-keyword">with</span></span><span> </span><=
span><span class=3D"hljs-built_in">open</span></span><span>(INTERMEDIATE_DI=
R / </span><span><span class=3D"hljs-string">"shared_preprocessed_data.pkl"=
</span></span><span>, </span><span><span class=3D"hljs-string">"rb"</span><=
/span><span>) </span><span><span class=3D"hljs-keyword">as</span></span><sp=
an> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<ul data-start=3D"1061" data-end=3D"1219">
<li data-start=3D"1061" data-end=3D"1156" class=3D"">
<p data-start=3D"1063" data-end=3D"1156" class=3D"">Loads the output of <co=
de data-start=3D"1083" data-end=3D"1118">script_0a_shared_processing.ipynb<=
/code> (spike-aligned data + trial metadata)</p>
</li>
<li data-start=3D"1157" data-end=3D"1219" class=3D"">
<p data-start=3D"1159" data-end=3D"1219" class=3D""><code data-start=3D"115=
9" data-end=3D"1165">data</code> is a dict: <code data-start=3D"1177" data-=
end=3D"1219">{session_name: {sdf, trials, unit_info}}</code></p>
</li>
</ul>
<hr data-start=3D"1221" data-end=3D"1224" class=3D"">
<h3 data-start=3D"1226" data-end=3D"1261" class=3D""><strong data-start=3D"=
1230" data-end=3D"1261">3. Iterate through sessions</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1263" data-end=3D"1357"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> sess_name, sess_data </span><span><span class=3D"hljs-keyword">in</span><=
/span><span> tqdm(data.items()):
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]
</span></span></code></div></div></pre>
<ul data-start=3D"1359" data-end=3D"1457">
<li data-start=3D"1359" data-end=3D"1387" class=3D"">
<p data-start=3D"1361" data-end=3D"1387" class=3D"">Loops through each sess=
ion</p>
</li>
<li data-start=3D"1388" data-end=3D"1457" class=3D"">
<p data-start=3D"1390" data-end=3D"1457" class=3D"">Pulls the <code data-st=
art=3D"1400" data-end=3D"1408">trials</code> table (usually a <code data-st=
art=3D"1426" data-end=3D"1444">pandas.DataFrame</code>) for editing</p>
</li>
</ul>
<hr data-start=3D"1459" data-end=3D"1462" class=3D"">
<h3 data-start=3D"1464" data-end=3D"1504" class=3D""><strong data-start=3D"=
1468" data-end=3D"1504">4. Detect fixations and saccades</strong></h3>
<p data-start=3D"1506" data-end=3D"1619" class=3D"">The core block here wil=
l depend on how the original eye tracking data is structured, but it genera=
lly looks like:</p>
<pre class=3D"overflow-visible!" data-start=3D"1621" data-end=3D"2109"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>    fix_onsets =3D []
    sacc_onsets =3D []
    sacc_ordinals =3D []
   =20
    </span><span><span class=3D"hljs-keyword">for</span></span><span> trial=
 </span><span><span class=3D"hljs-keyword">in</span></span><span> trials.it=
ertuples():
        eye_trace =3D trial.eye_data  </span><span><span class=3D"hljs-comm=
ent"># could be a list of x, y coords over time</span></span><span>

        </span><span><span class=3D"hljs-comment"># Custom function to dete=
ct saccade events</span></span><span>
        sacc_times =3D detect_saccades(eye_trace)
        fix_times =3D detect_fixations(eye_trace)

        fix_onsets.append(fix_times)
        sacc_onsets.append(sacc_times)
        sacc_ordinals.append(np.arange(</span><span><span class=3D"hljs-num=
ber">1</span></span><span>, </span><span><span class=3D"hljs-built_in">len<=
/span></span><span>(sacc_times) + </span><span><span class=3D"hljs-number">=
1</span></span><span>))
</span></span></code></div></div></pre>
<ul data-start=3D"2111" data-end=3D"2396">
<li data-start=3D"2111" data-end=3D"2254" class=3D"">
<p data-start=3D"2113" data-end=3D"2254" class=3D"">Functions like <code da=
ta-start=3D"2128" data-end=3D"2145">detect_saccades</code> and <code data-s=
tart=3D"2150" data-end=3D"2168">detect_fixations</code> likely use velocity=
 or displacement thresholds to detect when eye movements happened.</p>
</li>
<li data-start=3D"2255" data-end=3D"2396" class=3D"">
<p data-start=3D"2257" data-end=3D"2272" class=3D"">For each trial:</p>
<ul data-start=3D"2275" data-end=3D"2396">
<li data-start=3D"2275" data-end=3D"2309" class=3D"">
<p data-start=3D"2277" data-end=3D"2309" class=3D"">Records onset times of =
fixations</p>
</li>
<li data-start=3D"2312" data-end=3D"2330" class=3D"">
<p data-start=3D"2314" data-end=3D"2330" class=3D"">Records saccades</p>
</li>
<li data-start=3D"2333" data-end=3D"2396" class=3D"">
<p data-start=3D"2335" data-end=3D"2396" class=3D"">Assigns an <strong data=
-start=3D"2346" data-end=3D"2364">ordinal number</strong> (1st, 2nd, ...) t=
o each saccade</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"2398" data-end=3D"2401" class=3D"">
<h3 data-start=3D"2403" data-end=3D"2443" class=3D""><strong data-start=3D"=
2407" data-end=3D"2443">5. Add results to trial metadata</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2445" data-end=3D"2580"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>    trials[</span><span><span class=3D"hljs-string"=
>"fix_onsets"</span></span><span>] =3D fix_onsets
    trials[</span><span><span class=3D"hljs-string">"sacc_onsets"</span></s=
pan><span>] =3D sacc_onsets
    trials[</span><span><span class=3D"hljs-string">"sacc_ordinals"</span><=
/span><span>] =3D sacc_ordinals
</span></span></code></div></div></pre>
<p data-start=3D"2582" data-end=3D"2607" class=3D"">Each row (trial) now ha=
s:</p>
<ul data-start=3D"2608" data-end=3D"2766">
<li data-start=3D"2608" data-end=3D"2678" class=3D"">
<p data-start=3D"2610" data-end=3D"2678" class=3D""><code data-start=3D"261=
0" data-end=3D"2622">fix_onsets</code>: list of timestamps (within trial) w=
hen fixations began</p>
</li>
<li data-start=3D"2679" data-end=3D"2718" class=3D"">
<p data-start=3D"2681" data-end=3D"2718" class=3D""><code data-start=3D"268=
1" data-end=3D"2694">sacc_onsets</code>: timestamps of saccades</p>
</li>
<li data-start=3D"2719" data-end=3D"2766" class=3D"">
<p data-start=3D"2721" data-end=3D"2766" class=3D""><code data-start=3D"272=
1" data-end=3D"2736">sacc_ordinals</code>: ordinal numbers for saccades</p>
</li>
</ul>
<hr data-start=3D"2768" data-end=3D"2771" class=3D"">
<h3 data-start=3D"2773" data-end=3D"2801" class=3D""><strong data-start=3D"=
2777" data-end=3D"2801">6. Save back to disk</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2803" data-end=3D"2994"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>    sess_data[</span><span><span class=3D"hljs-stri=
ng">"trials"</span></span><span>] =3D trials
    data[sess_name] =3D sess_data

</span><span><span class=3D"hljs-keyword">with</span></span><span> </span><=
span><span class=3D"hljs-built_in">open</span></span><span>(INTERMEDIATE_DI=
R / </span><span><span class=3D"hljs-string">"shared_preprocessed_data_with=
_saccades.pkl"</span></span><span>, </span><span><span class=3D"hljs-string=
">"wb"</span></span><span>) </span><span><span class=3D"hljs-keyword">as</s=
pan></span><span> f:
    pickle.dump(data, f)
</span></span></code></div></div></pre>
<ul data-start=3D"2996" data-end=3D"3133">
<li data-start=3D"2996" data-end=3D"3054" class=3D"">
<p data-start=3D"2998" data-end=3D"3054" class=3D"">Adds the new labels int=
o the existing session dictionary</p>
</li>
<li data-start=3D"3055" data-end=3D"3133" class=3D"">
<p data-start=3D"3057" data-end=3D"3133" class=3D"">Saves it into a new <co=
de data-start=3D"3077" data-end=3D"3083">.pkl</code> file, now with added f=
ixation/saccade information</p>
</li>
</ul>
<hr data-start=3D"3135" data-end=3D"3138" class=3D"">
<h2 data-start=3D"3140" data-end=3D"3152" class=3D"">=E2=9C=85 Summary</h2>
<p data-start=3D"3154" data-end=3D"3197" class=3D""><strong data-start=3D"3=
154" data-end=3D"3191"><code data-start=3D"3156" data-end=3D"3189">script_0=
c_select_fix_sacc.ipynb</code></strong> does:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"31=
99" data-end=3D"3521" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3199" data-end=3D"3221"><tr data-start=3D"3199" data-end=3D"=
3221"><th data-start=3D"3199" data-end=3D"3206" data-col-size=3D"sm">Step</=
th><th data-start=3D"3206" data-end=3D"3221" data-col-size=3D"md">Descripti=
on</th></tr></thead><tbody data-start=3D"3245" data-end=3D"3521"><tr data-s=
tart=3D"3245" data-end=3D"3300"><td data-start=3D"3245" data-end=3D"3252" d=
ata-col-size=3D"sm">1.</td><td data-start=3D"3252" data-end=3D"3300" data-c=
ol-size=3D"md">Loads trial metadata from the output of <code data-start=3D"=
3294" data-end=3D"3298">0a</code></td></tr><tr data-start=3D"3301" data-end=
=3D"3372"><td data-start=3D"3301" data-end=3D"3308" data-col-size=3D"sm">2.=
</td><td data-start=3D"3308" data-end=3D"3372" data-col-size=3D"md">Detects=
 <strong data-start=3D"3318" data-end=3D"3330">fixation</strong> and <stron=
g data-start=3D"3335" data-end=3D"3346">saccade</strong> events using eye t=
races</td></tr><tr data-start=3D"3373" data-end=3D"3420"><td data-start=3D"=
3373" data-end=3D"3380" data-col-size=3D"sm">3.</td><td data-start=3D"3380"=
 data-end=3D"3420" data-col-size=3D"md">Computes <strong data-start=3D"3391=
" data-end=3D"3418">saccade ordinal numbers</strong></td></tr><tr data-star=
t=3D"3421" data-end=3D"3468"><td data-start=3D"3421" data-end=3D"3428" data=
-col-size=3D"sm">4.</td><td data-start=3D"3428" data-end=3D"3468" data-col-=
size=3D"md">Adds these annotations to each trial</td></tr><tr data-start=3D=
"3469" data-end=3D"3521"><td data-start=3D"3469" data-end=3D"3476" data-col=
-size=3D"sm">5.</td><td data-start=3D"3476" data-end=3D"3521" data-col-size=
=3D"md">Saves updated metadata for future scripts</td></tr></tbody></table>=
<div class=3D"sticky end-(--thread-content-margin) h-0 self-end select-none=
"><div class=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"=
><span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primar=
y hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 =
transition-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-n=
one group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" he=
ight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/=
2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"=
evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14=
C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22=
 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315=
 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.4=
4772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 2=
0 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=
=3D"currentColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"3523" data-end=3D"3526" class=3D"">
<p data-start=3D"3528" data-end=3D"3572" class=3D"">This info gets used hea=
vily in scripts like:</p>
<ul data-start=3D"3573" data-end=3D"3729">
<li data-start=3D"3573" data-end=3D"3646" class=3D"">
<p data-start=3D"3575" data-end=3D"3646" class=3D""><code data-start=3D"357=
5" data-end=3D"3602">2a_self_consistency.ipynb</code> =E2=80=93 which compa=
res responses across fixations</p>
</li>
<li data-start=3D"3647" data-end=3D"3729" class=3D"">
<p data-start=3D"3649" data-end=3D"3729" class=3D""><code data-start=3D"364=
9" data-end=3D"3675">2u1_crossing_point.ipynb</code> =E2=80=93 which may an=
alyze neural transition across saccades</p>
</li>
</ul>
<p data-start=3D"3731" data-end=3D"3852" class=3D"">Want me to break down w=
hat the <code data-start=3D"3762" data-end=3D"3779">detect_saccades</code> =
function looks like next (or help visualize a trial=E2=80=99s saccade seque=
nce)?</p></div></div></div></div></div></div></div></div></article><article=
 class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conve=
rsation-turn-17" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You sai=
d:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margi=
n:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[-=
-thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div cl=
ass=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-wi=
dth:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(=
--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/=
turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col g=
row"><div data-message-author-role=3D"user" data-message-id=3D"83b02b8e-311=
6-4f55-bf93-282fd85ccb74" dir=3D"auto" class=3D"min-h-8 text-message relati=
ve flex w-full flex-col items-end gap-2 text-start break-words whitespace-n=
ormal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 =
empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[var(-=
-user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><d=
iv class=3D"whitespace-pre-wrap">what does it mean "to make a saccade"</div=
></div></div></div></div></div></div></div></div></article><article class=
=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversatio=
n-turn-18" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:=
</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:=
--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--t=
hread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div clas=
s=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-widt=
h:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--=
thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tu=
rn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"gro=
up/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div=
 class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full f=
lex-col grow"><div data-message-author-role=3D"assistant" data-message-id=
=3D"dd5e9b40-132a-4bf2-beb6-541b86b57043" dir=3D"auto" class=3D"min-h-8 tex=
t-message relative flex w-full flex-col items-end gap-2 text-start break-wo=
rds whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=
=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-=
[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-words da=
rk"><p data-start=3D"0" data-end=3D"118" class=3D"">Great question=E2=80=94=
and it=E2=80=99s a <strong data-start=3D"26" data-end=3D"56">super foundati=
onal concept</strong> in vision neuroscience and this project. Let=E2=80=99=
s break it down:</p>
<hr data-start=3D"120" data-end=3D"123" class=3D"">
<h2 data-start=3D"125" data-end=3D"178" class=3D"">=F0=9F=91=81=EF=B8=8F=E2=
=80=8D=F0=9F=97=BA=EF=B8=8F What does it mean <strong data-start=3D"154" da=
ta-end=3D"178">=E2=80=9Cto make a saccade=E2=80=9D?</strong></h2>
<p data-start=3D"180" data-end=3D"304" class=3D"">A <strong data-start=3D"1=
82" data-end=3D"193">saccade</strong> is a <strong data-start=3D"199" data-=
end=3D"232">quick, ballistic eye movement</strong> that happens when your e=
yes jump from one point of interest to another.</p>
<p data-start=3D"306" data-end=3D"384" class=3D"">Think of it like your eye=
s <strong data-start=3D"333" data-end=3D"348">teleporting</strong> to a new=
 spot you're curious about.</p>
<hr data-start=3D"386" data-end=3D"389" class=3D"">
<h3 data-start=3D"391" data-end=3D"405" class=3D"">=E2=9C=A8 Examples</h3>
<ul data-start=3D"407" data-end=3D"755">
<li data-start=3D"407" data-end=3D"515" class=3D"">
<p data-start=3D"409" data-end=3D"515" class=3D"">When you're reading a sen=
tence, your eyes <strong data-start=3D"451" data-end=3D"459">jump</strong> =
from word to word=E2=80=94each of those jumps is a <strong data-start=3D"50=
3" data-end=3D"514">saccade</strong>.</p>
</li>
<li data-start=3D"516" data-end=3D"656" class=3D"">
<p data-start=3D"518" data-end=3D"656" class=3D"">When you=E2=80=99re looki=
ng at a face, your eyes might <strong data-start=3D"565" data-end=3D"573">j=
ump</strong> from the left eye to the mouth to the right eye=E2=80=94that=
=E2=80=99s <strong data-start=3D"629" data-end=3D"655">a sequence of saccad=
es</strong>.</p>
</li>
<li data-start=3D"657" data-end=3D"755" class=3D"">
<p data-start=3D"659" data-end=3D"755" class=3D"">When you first look at a =
new image, your eyes rapidly dart to informative spots=E2=80=94again, sacca=
des.</p>
</li>
</ul>
<hr data-start=3D"757" data-end=3D"760" class=3D"">
<h2 data-start=3D"762" data-end=3D"796" class=3D"">=F0=9F=A7=A0 In monkey v=
ision experiments</h2>
<p data-start=3D"798" data-end=3D"846" class=3D"">When we say a monkey =E2=
=80=9Cmakes a saccade,=E2=80=9D we mean:</p>
<blockquote data-start=3D"848" data-end=3D"942">
<p data-start=3D"850" data-end=3D"942" class=3D"">The monkey moved its eyes=
 very quickly from one spot on the screen (or in space) to another.</p>
</blockquote>
<p data-start=3D"944" data-end=3D"960" class=3D"">In this dataset:</p>
<ul data-start=3D"961" data-end=3D"1258">
<li data-start=3D"961" data-end=3D"1009" class=3D"">
<p data-start=3D"963" data-end=3D"1009" class=3D"">Monkeys are <strong data=
-start=3D"975" data-end=3D"1008">freely viewing natural images</strong>.</p=
>
</li>
<li data-start=3D"1010" data-end=3D"1073" class=3D"">
<p data-start=3D"1012" data-end=3D"1073" class=3D"">Eye movements are track=
ed (usually via infrared eye-tracker).</p>
</li>
<li data-start=3D"1074" data-end=3D"1258" class=3D"">
<p data-start=3D"1076" data-end=3D"1159" class=3D"">Saccades are inferred b=
y looking for <strong data-start=3D"1113" data-end=3D"1146">rapid changes i=
n eye position</strong>, often with:</p>
<ul data-start=3D"1162" data-end=3D"1258">
<li data-start=3D"1162" data-end=3D"1203" class=3D"">
<p data-start=3D"1164" data-end=3D"1203" class=3D"">A velocity threshold (e=
.g., &gt; 30 deg/s)</p>
</li>
<li data-start=3D"1206" data-end=3D"1258" class=3D"">
<p data-start=3D"1208" data-end=3D"1258" class=3D"">A minimum amplitude (e.=
g., &gt; 0.5=C2=B0 of visual angle)</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"1260" data-end=3D"1263" class=3D"">
<h3 data-start=3D"1265" data-end=3D"1312" class=3D"">=F0=9F=93=8A Why are s=
accades important for analysis?</h3>
<p data-start=3D"1314" data-end=3D"1376" class=3D"">Because they <strong da=
ta-start=3D"1327" data-end=3D"1375">divide up the viewing experience into c=
hunks</strong>:</p>
<ul data-start=3D"1377" data-end=3D"1495">
<li data-start=3D"1377" data-end=3D"1427" class=3D"">
<p data-start=3D"1379" data-end=3D"1427" class=3D"">Before a saccade =3D on=
e fixation (eyes are still)</p>
</li>
<li data-start=3D"1428" data-end=3D"1495" class=3D"">
<p data-start=3D"1430" data-end=3D"1495" class=3D"">After a saccade =3D a n=
ew fixation on a different part of the image</p>
</li>
</ul>
<p data-start=3D"1497" data-end=3D"1532" class=3D"">So neural activity can =
be compared:</p>
<ul data-start=3D"1533" data-end=3D"1647">
<li data-start=3D"1533" data-end=3D"1564" class=3D"">
<p data-start=3D"1535" data-end=3D"1564" class=3D""><strong data-start=3D"1=
535" data-end=3D"1555">Before vs. after</strong> saccades</p>
</li>
<li data-start=3D"1565" data-end=3D"1596" class=3D"">
<p data-start=3D"1567" data-end=3D"1596" class=3D""><strong data-start=3D"1=
567" data-end=3D"1596">Across different saccades</strong></p>
</li>
<li data-start=3D"1597" data-end=3D"1647" class=3D"">
<p data-start=3D"1599" data-end=3D"1647" class=3D""><strong data-start=3D"1=
599" data-end=3D"1647">Across fixations with different visual input</strong=
></p>
</li>
</ul>
<p data-start=3D"1649" data-end=3D"1679" class=3D"">That=E2=80=99s why you =
see terms like:</p>
<ul data-start=3D"1680" data-end=3D"1786">
<li data-start=3D"1680" data-end=3D"1731" class=3D"">
<p data-start=3D"1682" data-end=3D"1731" class=3D""><code data-start=3D"168=
2" data-end=3D"1695">sacc_onsets</code> =E2=86=92 timestamps of when saccad=
es began</p>
</li>
<li data-start=3D"1732" data-end=3D"1786" class=3D"">
<p data-start=3D"1734" data-end=3D"1786" class=3D""><code data-start=3D"173=
4" data-end=3D"1749">sacc_ordinals</code> =E2=86=92 1st, 2nd, 3rd saccade i=
n the trial</p>
</li>
</ul>
<hr data-start=3D"1788" data-end=3D"1791" class=3D"">
<h3 data-start=3D"1793" data-end=3D"1805" class=3D"">=F0=9F=9B=B8 TL;DR</h3=
>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"18=
07" data-end=3D"2181" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1807" data-end=3D"1880"><tr data-start=3D"1807" data-end=3D"=
1880"><th data-start=3D"1807" data-end=3D"1820" data-col-size=3D"sm">Term</=
th><th data-start=3D"1820" data-end=3D"1880" data-col-size=3D"md">Meaning</=
th></tr></thead><tbody data-start=3D"1955" data-end=3D"2181"><tr data-start=
=3D"1955" data-end=3D"2028"><td data-start=3D"1955" data-end=3D"1968" data-=
col-size=3D"sm">Saccade</td><td data-start=3D"1968" data-end=3D"2028" data-=
col-size=3D"md">A fast eye movement from one point to another</td></tr><tr =
data-start=3D"2029" data-end=3D"2104"><td data-start=3D"2029" data-end=3D"2=
042" data-col-size=3D"sm">Fixation</td><td data-start=3D"2042" data-end=3D"=
2104" data-col-size=3D"md">A pause between saccades where the eye is relati=
vely still</td></tr><tr data-start=3D"2105" data-end=3D"2181"><td data-star=
t=3D"2105" data-end=3D"2127" data-col-size=3D"sm">To "make a saccade"</td><=
td data-start=3D"2127" data-end=3D"2181" data-col-size=3D"md">To move your =
eyes rapidly to a new visual location</td></tr></tbody></table><div class=
=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"><div cla=
ss=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary hover:bg=
-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 transition=
-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-none group-=
[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.656=
9 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569=
 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H=
19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4=
.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C=
14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curren=
tColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"2183" data-end=3D"2186" class=3D"">
<p data-start=3D"2188" data-end=3D"2282" class=3D"">Let me know if you want=
 to visualize eye traces + saccades from a sample trial=E2=80=94totally doa=
ble!</p></div></div></div></div></div></div></div></div></article><article =
class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conver=
sation-turn-19" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said=
:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin=
:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--=
thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div cla=
ss=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-wid=
th:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(-=
-thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/t=
urn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"gr=
oup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"=
relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col gr=
ow"><div data-message-author-role=3D"user" data-message-id=3D"b19802ac-f3e5=
-4c7f-a41f-79580a105fbb" dir=3D"auto" class=3D"min-h-8 text-message relativ=
e flex w-full flex-col items-end gap-2 text-start break-words whitespace-no=
rmal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 e=
mpty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[var(--=
user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><di=
v class=3D"whitespace-pre-wrap">what is the ordinal position </div></div></=
div></div></div></div></div></div></div></article><article class=3D"text-to=
ken-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-20" =
data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div c=
lass=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4=
)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-conte=
nt-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thr=
ead-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[=
64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-cont=
ent-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages=
 focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversa=
tion-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"r=
elative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col gro=
w"><div data-message-author-role=3D"assistant" data-message-id=3D"f365a7f6-=
87e2-4019-be27-a57347a4dbe7" dir=3D"auto" class=3D"min-h-8 text-message rel=
ative flex w-full flex-col items-end gap-2 text-start break-words whitespac=
e-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><di=
v class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div cla=
ss=3D"markdown prose dark:prose-invert w-full break-words dark"><p data-sta=
rt=3D"0" data-end=3D"126" class=3D"">Great follow-up! The <strong data-star=
t=3D"21" data-end=3D"41">ordinal position</strong> just refers to the <stro=
ng data-start=3D"61" data-end=3D"93">numbered place in a sequence</strong>=
=E2=80=94kind of like 1st, 2nd, 3rd, etc.</p>
<hr data-start=3D"128" data-end=3D"131" class=3D"">
<h2 data-start=3D"133" data-end=3D"166" class=3D"">=F0=9F=93=8C In the cont=
ext of saccades:</h2>
<p data-start=3D"168" data-end=3D"246" class=3D""><strong data-start=3D"168=
" data-end=3D"193">The "saccade ordinal"</strong> is the index of a saccade=
 <strong data-start=3D"220" data-end=3D"245">within a single trial</strong>=
.</p>
<h3 data-start=3D"248" data-end=3D"270" class=3D"">=F0=9F=A7=A0 So for exam=
ple:</h3>
<p data-start=3D"272" data-end=3D"378" class=3D"">Suppose the monkey is loo=
king at an image for 2 seconds. During that time, they make a series of sac=
cades:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"38=
0" data-end=3D"678" class=3D"w-fit min-w-(--thread-content-width)"><thead d=
ata-start=3D"380" data-end=3D"428"><tr data-start=3D"380" data-end=3D"428">=
<th data-start=3D"380" data-end=3D"390" data-col-size=3D"sm">Saccade</th><t=
h data-start=3D"390" data-end=3D"408" data-col-size=3D"sm">Start Time (ms)<=
/th><th data-start=3D"408" data-end=3D"428" data-col-size=3D"sm">Ordinal Po=
sition</th></tr></thead><tbody data-start=3D"479" data-end=3D"678"><tr data=
-start=3D"479" data-end=3D"528"><td data-start=3D"479" data-end=3D"489" dat=
a-col-size=3D"sm">=E2=86=92</td><td data-start=3D"489" data-end=3D"508" dat=
a-col-size=3D"sm">120</td><td data-start=3D"508" data-end=3D"528" data-col-=
size=3D"sm">1</td></tr><tr data-start=3D"529" data-end=3D"578"><td data-sta=
rt=3D"529" data-end=3D"539" data-col-size=3D"sm">=E2=86=92</td><td data-sta=
rt=3D"539" data-end=3D"558" data-col-size=3D"sm">420</td><td data-start=3D"=
558" data-end=3D"578" data-col-size=3D"sm">2</td></tr><tr data-start=3D"579=
" data-end=3D"628"><td data-start=3D"579" data-end=3D"589" data-col-size=3D=
"sm">=E2=86=92</td><td data-start=3D"589" data-end=3D"608" data-col-size=3D=
"sm">770</td><td data-start=3D"608" data-end=3D"628" data-col-size=3D"sm">3=
</td></tr><tr data-start=3D"629" data-end=3D"678"><td data-start=3D"629" da=
ta-end=3D"639" data-col-size=3D"sm">=E2=86=92</td><td data-start=3D"639" da=
ta-end=3D"658" data-col-size=3D"sm">1310</td><td data-start=3D"658" data-en=
d=3D"678" data-col-size=3D"sm">4</td></tr></tbody></table><div class=3D"sti=
cky end-(--thread-content-margin) h-0 self-end select-none"><div class=3D"a=
bsolute end-0 flex items-end" style=3D"height: 32.8906px;"><span class=3D""=
 data-state=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token-=
bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 transition-opacit=
y group-[:not(:hover):not(:focus-within)]:pointer-events-none group-[:not(:=
hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewB=
ox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg></button></span></div></div></div></div>
<p data-start=3D"680" data-end=3D"781" class=3D"">Each saccade gets a uniqu=
e <strong data-start=3D"707" data-end=3D"718">ordinal</strong> number (1, 2=
, 3...) to reflect the order in which it occurred.</p>
<hr data-start=3D"783" data-end=3D"786" class=3D"">
<h3 data-start=3D"788" data-end=3D"817" class=3D"">=F0=9F=94=8D Why is this=
 important?</h3>
<p data-start=3D"819" data-end=3D"878" class=3D"">Because researchers often=
 want to compare neural responses:</p>
<ul data-start=3D"879" data-end=3D"1107">
<li data-start=3D"879" data-end=3D"944" class=3D"">
<p data-start=3D"881" data-end=3D"944" class=3D"">At the <strong data-start=
=3D"888" data-end=3D"904">1st fixation</strong> (just after image onset) vs=
. later ones</p>
</li>
<li data-start=3D"945" data-end=3D"1028" class=3D"">
<p data-start=3D"947" data-end=3D"1028" class=3D"">At the <strong data-star=
t=3D"954" data-end=3D"976">3rd or 4th saccade</strong>, when the image has =
already been partially explored</p>
</li>
<li data-start=3D"1029" data-end=3D"1107" class=3D"">
<p data-start=3D"1031" data-end=3D"1107" class=3D"">Across ordinal position=
s to study <strong data-start=3D"1065" data-end=3D"1089">temporal consisten=
cy</strong> or <strong data-start=3D"1093" data-end=3D"1107">adaptation</st=
rong></p>
</li>
</ul>
<p data-start=3D"1109" data-end=3D"1151" class=3D"">You might see this in v=
ariable names like:</p>
<ul data-start=3D"1153" data-end=3D"1230">
<li data-start=3D"1153" data-end=3D"1170" class=3D"">
<p data-start=3D"1155" data-end=3D"1170" class=3D""><code data-start=3D"115=
5" data-end=3D"1170">sacc_ordinals</code></p>
</li>
<li data-start=3D"1171" data-end=3D"1187" class=3D"">
<p data-start=3D"1173" data-end=3D"1187" class=3D""><code data-start=3D"117=
3" data-end=3D"1187">fix_ordinals</code></p>
</li>
<li data-start=3D"1188" data-end=3D"1230" class=3D"">
<p data-start=3D"1190" data-end=3D"1230" class=3D"">Or in conditions like <=
code data-start=3D"1212" data-end=3D"1230">if ordinal =3D=3D 1:</code></p>
</li>
</ul>
<hr data-start=3D"1232" data-end=3D"1235" class=3D"">
<h3 data-start=3D"1237" data-end=3D"1249" class=3D"">=F0=9F=94=A2 TL;DR</h3=
>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"12=
51" data-end=3D"1498" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1251" data-end=3D"1312"><tr data-start=3D"1251" data-end=3D"=
1312"><th data-start=3D"1251" data-end=3D"1270" data-col-size=3D"sm">Term</=
th><th data-start=3D"1270" data-end=3D"1312" data-col-size=3D"sm">Meaning</=
th></tr></thead><tbody data-start=3D"1375" data-end=3D"1498"><tr data-start=
=3D"1375" data-end=3D"1436"><td data-start=3D"1375" data-end=3D"1394" data-=
col-size=3D"sm">Ordinal position</td><td data-start=3D"1394" data-end=3D"14=
36" data-col-size=3D"sm">The index of a saccade in trial order</td></tr><tr=
 data-start=3D"1437" data-end=3D"1498"><td data-start=3D"1437" data-end=3D"=
1456" data-col-size=3D"sm">Example</td><td data-start=3D"1456" data-end=3D"=
1498" data-col-size=3D"sm">1st saccade =3D ordinal 1, and so on</td></tr></=
tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 self-e=
nd select-none"><div class=3D"absolute end-0 flex items-end" style=3D"heigh=
t: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-t=
oken-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 r=
ounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:po=
inter-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg w=
idth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd"=
 clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3=
.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 2=
2H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.656=
9 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523=
 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.=
5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9=
 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div></=
div></div>
<hr data-start=3D"1500" data-end=3D"1503" class=3D"">
<p data-start=3D"1505" data-end=3D"1618" class=3D"">Want to trace a specifi=
c trial=E2=80=99s saccade sequence and annotate the ordinal positions visua=
lly? I can mock one up.</p></div></div></div></div></div></div></div></div>=
</article><article class=3D"text-token-text-primary w-full" dir=3D"auto" da=
ta-testid=3D"conversation-turn-21" data-scroll-anchor=3D"false"><h5 class=
=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--=
thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spa=
cing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-cont=
ent-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--t=
hread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] =
mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:g=
ap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D=
"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0 fle=
x-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex m=
ax-w-full flex-col grow"><div data-message-author-role=3D"user" data-messag=
e-id=3D"31105361-6aab-4c16-bcdf-d8c5065e3462" dir=3D"auto" class=3D"min-h-8=
 text-message relative flex w-full flex-col items-end gap-2 text-start brea=
k-words whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-=
full flex-col gap-1 empty:hidden items-end rtl:items-start"><div class=3D"r=
elative max-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded=
-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">why do the ordinal pos=
itions go 0, 1, 2, 3 and then back to 0</div></div></div></div></div></div>=
</div></div></div></article><article class=3D"text-token-text-primary w-ful=
l" dir=3D"auto" data-testid=3D"conversation-turn-22" data-scroll-anchor=3D"=
false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-a=
uto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-=
content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16=
)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:=
32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-conte=
nt-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 =
text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline=
-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative fle=
x w-full min-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1=
 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-a=
uthor-role=3D"assistant" data-message-id=3D"2b80240e-0740-4078-a6b5-b74c0f9=
a1c87" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex=
-col items-end gap-2 text-start break-words whitespace-normal [.text-messag=
e+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full=
 flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose d=
ark:prose-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"1=
21" class=3D"">Ahhh yes=E2=80=94that=E2=80=99s a sharp observation, and it=
=E2=80=99s something that comes up a lot in real neural datasets. Let=E2=80=
=99s break it down:</p>
<hr data-start=3D"123" data-end=3D"126" class=3D"">
<h2 data-start=3D"128" data-end=3D"208" class=3D"">=F0=9F=94=81 Why do sacc=
ade ordinal positions go <strong data-start=3D"170" data-end=3D"184">0, 1, =
2, 3</strong> and then <strong data-start=3D"194" data-end=3D"207">back to =
0</strong>?</h2>
<p data-start=3D"210" data-end=3D"277" class=3D"">This usually means one of=
 <strong data-start=3D"236" data-end=3D"250">two things</strong> is happeni=
ng in your data:</p>
<hr data-start=3D"279" data-end=3D"282" class=3D"">
<h3 data-start=3D"284" data-end=3D"344" class=3D"">=E2=9C=85 <strong data-s=
tart=3D"290" data-end=3D"344">Possibility 1: Ordinal values reset for each =
trial</strong></h3>
<p data-start=3D"346" data-end=3D"423" class=3D"">In many pipelines, <stron=
g data-start=3D"365" data-end=3D"411">ordinal positions are computed <em da=
ta-start=3D"398" data-end=3D"409">per trial</em></strong>, like this:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"42=
5" data-end=3D"609" class=3D"w-fit min-w-(--thread-content-width)"><thead d=
ata-start=3D"425" data-end=3D"461"><tr data-start=3D"425" data-end=3D"461">=
<th data-start=3D"425" data-end=3D"433" data-col-size=3D"sm">Trial</th><th =
data-start=3D"433" data-end=3D"461" data-col-size=3D"sm">Saccade Ordinals</=
th></tr></thead><tbody data-start=3D"499" data-end=3D"609"><tr data-start=
=3D"499" data-end=3D"535"><td data-start=3D"499" data-end=3D"507" data-col-=
size=3D"sm">1</td><td data-start=3D"507" data-end=3D"535" data-col-size=3D"=
sm">[0, 1, 2, 3]</td></tr><tr data-start=3D"536" data-end=3D"572"><td data-=
start=3D"536" data-end=3D"544" data-col-size=3D"sm">2</td><td data-start=3D=
"544" data-end=3D"572" data-col-size=3D"sm">[0, 1]</td></tr><tr data-start=
=3D"573" data-end=3D"609"><td data-start=3D"573" data-end=3D"581" data-col-=
size=3D"sm">3</td><td data-start=3D"581" data-end=3D"609" data-col-size=3D"=
sm">[0, 1, 2, 3, 4]</td></tr></tbody></table><div class=3D"sticky end-(--th=
read-content-margin) h-0 self-end select-none"><div class=3D"absolute end-0=
 flex items-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=
=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary=
 text-token-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:n=
ot(:hover):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(=
:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 2=
4 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-h=
eavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315=
 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17=
H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315=
 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 1=
4.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C=
4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5=
523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></s=
vg></button></span></div></div></div></div>
<p data-start=3D"611" data-end=3D"654" class=3D"">So after each trial ends,=
 the count resets:</p>
<ul data-start=3D"655" data-end=3D"773">
<li data-start=3D"655" data-end=3D"707" class=3D"">
<p data-start=3D"657" data-end=3D"707" class=3D""><strong data-start=3D"657=
" data-end=3D"670">Ordinal 0</strong> =3D the <strong data-start=3D"677" da=
ta-end=3D"694">first saccade</strong> of the trial</p>
</li>
<li data-start=3D"708" data-end=3D"725" class=3D"">
<p data-start=3D"710" data-end=3D"725" class=3D"">Then 1, 2, 3...</p>
</li>
<li data-start=3D"726" data-end=3D"773" class=3D"">
<p data-start=3D"728" data-end=3D"773" class=3D"">Then back to 0 at the sta=
rt of the next trial</p>
</li>
</ul>
<p data-start=3D"775" data-end=3D"843" class=3D"">=F0=9F=94=81 This is norm=
al and intended=E2=80=94it allows you to compare things like:</p>
<blockquote data-start=3D"844" data-end=3D"923">
<p data-start=3D"846" data-end=3D"923" class=3D"">=E2=80=9CWhat do neural r=
esponses look like at the <strong data-start=3D"889" data-end=3D"898">first=
</strong> fixation of each trial?=E2=80=9D</p>
</blockquote>
<hr data-start=3D"925" data-end=3D"928" class=3D"">
<h3 data-start=3D"930" data-end=3D"990" class=3D"">=E2=9D=8C <strong data-s=
tart=3D"936" data-end=3D"990">Possibility 2: Ordinal field is corrupted / r=
eused</strong></h3>
<p data-start=3D"992" data-end=3D"1110" class=3D"">Rarely, if the code appe=
nds or merges trials incorrectly without reindexing the ordinals, you could=
 get patterns like:</p>
<p data-start=3D"1112" data-end=3D"1195" class=3D"">| Ordinals: | [0, 1, 2,=
 3, 0, 1, 2] |
| Trials:   |         Trial A     , Trial B |</p>
<p data-start=3D"1197" data-end=3D"1416" class=3D"">This can happen if the =
code flattens saccades across trials and forgets to reset the counter. You =
can check this by inspecting how <code data-start=3D"1328" data-end=3D"1343=
">sacc_ordinals</code> is constructed. In well-written code, you=E2=80=99ll=
 usually see something like:</p>
<pre class=3D"overflow-visible!" data-start=3D"1418" data-end=3D"1499"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>sacc_ordinals.append(np.arange(</span><span><span c=
lass=3D"hljs-built_in">len</span></span><span>(saccades)))  </span><span><s=
pan class=3D"hljs-comment"># resets each trial</span></span><span>
</span></span></code></div></div></pre>
<hr data-start=3D"1501" data-end=3D"1504" class=3D"">
<h3 data-start=3D"1506" data-end=3D"1543" class=3D"">=F0=9F=94=AC How to ch=
eck what=E2=80=99s happening:</h3>
<p data-start=3D"1545" data-end=3D"1577" class=3D"">You can run something l=
ike this:</p>
<pre class=3D"overflow-visible!" data-start=3D"1579" data-end=3D"1695"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> i, trial </span><span><span class=3D"hljs-keyword">in</span></span><span>=
 </span><span><span class=3D"hljs-built_in">enumerate</span></span><span>(t=
rials):
    </span><span><span class=3D"hljs-built_in">print</span></span><span>(</=
span><span><span class=3D"hljs-string">f"Trial <span class=3D"hljs-subst">{=
i}</span></span></span><span> has sacc ordinals: </span><span><span class=
=3D"hljs-subst">{trial[<span class=3D"hljs-string">'sacc_ordinals'</span></=
span></span><span>]}")
</span></span></code></div></div></pre>
<p data-start=3D"1697" data-end=3D"1794" class=3D"">If each one starts at 0=
, that=E2=80=99s expected. But if it=E2=80=99s flattened or global, you=E2=
=80=99ll spot the error.</p>
<hr data-start=3D"1796" data-end=3D"1799" class=3D"">
<h3 data-start=3D"1801" data-end=3D"1813" class=3D"">=F0=9F=A7=A0 TL;DR</h3=
>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"18=
15" data-end=3D"2051" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1815" data-end=3D"1841"><tr data-start=3D"1815" data-end=3D"=
1841"><th data-start=3D"1815" data-end=3D"1826" data-col-size=3D"sm">Behavi=
or</th><th data-start=3D"1826" data-end=3D"1841" data-col-size=3D"md">Expla=
nation</th></tr></thead><tbody data-start=3D"1869" data-end=3D"2051"><tr da=
ta-start=3D"1869" data-end=3D"1941"><td data-start=3D"1869" data-end=3D"189=
4" data-col-size=3D"sm"><code data-start=3D"1871" data-end=3D"1892">0, 1, 2=
, 3, 0, 1...</code></td><td data-start=3D"1894" data-end=3D"1941" data-col-=
size=3D"md">Ordinals <strong data-start=3D"1905" data-end=3D"1929">reset fo=
r each trial</strong> (correct)</td></tr><tr data-start=3D"1942" data-end=
=3D"2051"><td data-start=3D"1942" data-end=3D"1967" data-col-size=3D"sm"><c=
ode data-start=3D"1944" data-end=3D"1965">0, 1, 2, 3, 0, 1, 2</code></td><t=
d data-start=3D"1967" data-end=3D"2051" data-col-size=3D"md">Looks weird on=
ly if you expected ordinals to be global=E2=80=94check the trial structure<=
/td></tr></tbody></table><div class=3D"sticky end-(--thread-content-margin)=
 h-0 self-end select-none"><div class=3D"absolute end-0 flex items-end" sty=
le=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button cl=
ass=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secon=
dary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-=
within)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacit=
y-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xm=
lns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20=
.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.=
6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9=
 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.4=
4772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4=
 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.447=
72 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></=
div></div></div></div>
<hr data-start=3D"2053" data-end=3D"2056" class=3D"">
<p data-start=3D"2058" data-end=3D"2166" class=3D"">If you want, I can help=
 you write a little check script to visualize the ordinal resets across a f=
ew trials.</p></div></div></div></div></div></div></div></div></article><ar=
ticle class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"=
conversation-turn-23" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">Yo=
u said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-=
margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72re=
m]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><d=
iv class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-m=
ax-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex ma=
x-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 g=
roup/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=
=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><div cla=
ss=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-=
col grow"><div data-message-author-role=3D"user" data-message-id=3D"a80aad3=
9-1501-48a5-911a-398ba57b51c1" dir=3D"auto" class=3D"min-h-8 text-message r=
elative flex w-full flex-col items-end gap-2 text-start break-words whitesp=
ace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col g=
ap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[=
var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.=
5"><div class=3D"whitespace-pre-wrap">what is a trial in this case? does it=
 represent one image / stimuli being shown to the monkey?</div></div></div>=
</div></div></div></div></div></div></article><article class=3D"text-token-=
text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-24" data=
-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=
=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @=
[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-m=
argin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-=
content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64re=
m]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-=
max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages foc=
us-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation=
-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"relat=
ive flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><=
div data-message-author-role=3D"assistant" data-message-id=3D"aa321c7d-523b=
-446b-b702-057963aa0608" dir=3D"auto" class=3D"min-h-8 text-message relativ=
e flex w-full flex-col items-end gap-2 text-start break-words whitespace-no=
rmal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div cl=
ass=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=
=3D"markdown prose dark:prose-invert w-full break-words dark"><p data-start=
=3D"0" data-end=3D"158" class=3D"">Yes=E2=80=94<strong data-start=3D"4" dat=
a-end=3D"15">exactly</strong>. In this dataset (and most neuroscience exper=
iments), a <strong data-start=3D"72" data-end=3D"81">trial</strong> represe=
nts <strong data-start=3D"93" data-end=3D"132">one full presentation of a s=
timulus</strong> to the monkey, including:</p>
<hr data-start=3D"160" data-end=3D"163" class=3D"">
<h2 data-start=3D"165" data-end=3D"189" class=3D"">=F0=9F=A7=AA What is a =
=E2=80=9Ctrial=E2=80=9D?</h2>
<p data-start=3D"191" data-end=3D"251" class=3D"">A <strong data-start=3D"1=
93" data-end=3D"202">trial</strong> =3D one experimental episode, typically=
 involving:</p>
<ol data-start=3D"253" data-end=3D"530">
<li data-start=3D"253" data-end=3D"320" class=3D"">
<p data-start=3D"256" data-end=3D"320" class=3D"">The <strong data-start=3D=
"260" data-end=3D"283">onset of a stimulus</strong> (e.g., an image appeari=
ng on screen)</p>
</li>
<li data-start=3D"321" data-end=3D"380" class=3D"">
<p data-start=3D"324" data-end=3D"380" class=3D"">A brief period of <strong=
 data-start=3D"342" data-end=3D"358">free viewing</strong> (monkey looks ar=
ound)</p>
</li>
<li data-start=3D"381" data-end=3D"453" class=3D"">
<p data-start=3D"384" data-end=3D"453" class=3D"">Possibly some kind of <st=
rong data-start=3D"406" data-end=3D"414">task</strong> (e.g., fixate, or ju=
st passively view)</p>
</li>
<li data-start=3D"454" data-end=3D"530" class=3D"">
<p data-start=3D"457" data-end=3D"530" class=3D"">Then the <strong data-sta=
rt=3D"466" data-end=3D"492">offset of the stimulus</strong>, and a short <s=
trong data-start=3D"506" data-end=3D"530">inter-trial interval</strong></p>
</li>
</ol>
<hr data-start=3D"532" data-end=3D"535" class=3D"">
<h3 data-start=3D"537" data-end=3D"560" class=3D"">=F0=9F=A7=A0 In your dat=
aset:</h3>
<p data-start=3D"562" data-end=3D"618" class=3D"">Each trial is probably st=
ructured around something like:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"62=
0" data-end=3D"1140" class=3D"w-fit min-w-(--thread-content-width)"><thead =
data-start=3D"620" data-end=3D"651"><tr data-start=3D"620" data-end=3D"651"=
><th data-start=3D"620" data-end=3D"640" data-col-size=3D"sm">Field in <cod=
e data-start=3D"631" data-end=3D"639">trials</code></th><th data-start=3D"6=
40" data-end=3D"651" data-col-size=3D"md">Meaning</th></tr></thead><tbody d=
ata-start=3D"684" data-end=3D"1140"><tr data-start=3D"684" data-end=3D"729"=
><td data-start=3D"684" data-end=3D"704" data-col-size=3D"sm"><code data-st=
art=3D"686" data-end=3D"696">image_id</code></td><td data-start=3D"704" dat=
a-end=3D"729" data-col-size=3D"md">Which image was shown</td></tr><tr data-=
start=3D"730" data-end=3D"798"><td data-start=3D"730" data-end=3D"750" data=
-col-size=3D"sm"><code data-start=3D"732" data-end=3D"742">category</code><=
/td><td data-start=3D"750" data-end=3D"798" data-col-size=3D"md">Label: <co=
de data-start=3D"759" data-end=3D"771">human_face</code>, <code data-start=
=3D"773" data-end=3D"781">object</code>, <code data-start=3D"783" data-end=
=3D"790">scene</code>, etc.</td></tr><tr data-start=3D"799" data-end=3D"846=
"><td data-start=3D"799" data-end=3D"819" data-col-size=3D"sm"><code data-s=
tart=3D"801" data-end=3D"817">stimulus_onset</code></td><td data-start=3D"8=
19" data-end=3D"846" data-col-size=3D"md">Time the image appeared</td></tr>=
<tr data-start=3D"847" data-end=3D"899"><td data-start=3D"847" data-end=3D"=
867" data-col-size=3D"sm"><code data-start=3D"849" data-end=3D"859">duratio=
n</code></td><td data-start=3D"867" data-end=3D"899" data-col-size=3D"md">H=
ow long it stayed on screen</td></tr><tr data-start=3D"900" data-end=3D"959=
"><td data-start=3D"900" data-end=3D"920" data-col-size=3D"sm"><code data-s=
tart=3D"902" data-end=3D"912">eye_data</code></td><td data-start=3D"920" da=
ta-end=3D"959" data-col-size=3D"md">Eye tracking trace during the trial</td=
></tr><tr data-start=3D"960" data-end=3D"1024"><td data-start=3D"960" data-=
end=3D"980" data-col-size=3D"sm"><code data-start=3D"962" data-end=3D"975">=
sacc_onsets</code></td><td data-start=3D"980" data-end=3D"1024" data-col-si=
ze=3D"md">When saccades occurred during this trial</td></tr><tr data-start=
=3D"1025" data-end=3D"1072"><td data-start=3D"1025" data-end=3D"1045" data-=
col-size=3D"sm"><code data-start=3D"1027" data-end=3D"1039">fix_onsets</cod=
e></td><td data-start=3D"1045" data-end=3D"1072" data-col-size=3D"md">When =
fixations occurred</td></tr><tr data-start=3D"1073" data-end=3D"1140"><td d=
ata-start=3D"1073" data-end=3D"1093" data-col-size=3D"sm"><code data-start=
=3D"1075" data-end=3D"1090">sacc_ordinals</code></td><td data-start=3D"1093=
" data-end=3D"1140" data-col-size=3D"md">Order of saccades (0 =3D first sac=
cade, etc.)</td></tr></tbody></table><div class=3D"sticky end-(--thread-con=
tent-margin) h-0 self-end select-none"><div class=3D"absolute end-0 flex it=
ems-end" style=3D"height: 34.7031px;"><span class=3D"" data-state=3D"closed=
"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-toke=
n-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover)=
:not(:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-wit=
hin)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2=
 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 =
20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7=
 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 =
14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 =
4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V=
10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></butto=
n></span></div></div></div></div>
<p data-start=3D"1142" data-end=3D"1251" class=3D"">Each trial includes <st=
rong data-start=3D"1162" data-end=3D"1181">neural activity</strong>, <stron=
g data-start=3D"1183" data-end=3D"1200">eye movements</strong>, and <strong=
 data-start=3D"1206" data-end=3D"1227">stimulus identity</strong> for that =
short episode.</p>
<hr data-start=3D"1253" data-end=3D"1256" class=3D"">
<h3 data-start=3D"1258" data-end=3D"1286" class=3D"">=F0=9F=91=81=EF=B8=8F=
=F0=9F=92=A5 Neural perspective</h3>
<p data-start=3D"1288" data-end=3D"1312" class=3D"">During a trial, you can=
:</p>
<ul data-start=3D"1313" data-end=3D"1477">
<li data-start=3D"1313" data-end=3D"1365" class=3D"">
<p data-start=3D"1315" data-end=3D"1365" class=3D"">Analyze firing rates <s=
trong data-start=3D"1336" data-end=3D"1365">aligned to stimulus onset</stro=
ng></p>
</li>
<li data-start=3D"1366" data-end=3D"1420" class=3D"">
<p data-start=3D"1368" data-end=3D"1420" class=3D"">Study neural responses =
during <strong data-start=3D"1398" data-end=3D"1420">specific fixations</st=
rong></p>
</li>
<li data-start=3D"1421" data-end=3D"1477" class=3D"">
<p data-start=3D"1423" data-end=3D"1477" class=3D"">See how neurons react a=
s the monkey explores the image</p>
</li>
</ul>
<hr data-start=3D"1479" data-end=3D"1482" class=3D"">
<h3 data-start=3D"1484" data-end=3D"1507" class=3D"">=E2=8F=B1=EF=B8=8F Typ=
ical duration</h3>
<p data-start=3D"1509" data-end=3D"1532" class=3D"">Trials are often short:=
</p>
<ul data-start=3D"1533" data-end=3D"1609">
<li data-start=3D"1533" data-end=3D"1567" class=3D"">
<p data-start=3D"1535" data-end=3D"1567" class=3D"">Around <strong data-sta=
rt=3D"1542" data-end=3D"1557">1=E2=80=932 seconds</strong> per image</p>
</li>
<li data-start=3D"1568" data-end=3D"1609" class=3D"">
<p data-start=3D"1570" data-end=3D"1609" class=3D"">Long enough for 3=E2=80=
=935 saccades on average</p>
</li>
</ul>
<p data-start=3D"1611" data-end=3D"1643" class=3D"">So a full session might=
 include:</p>
<ul data-start=3D"1644" data-end=3D"1687">
<li data-start=3D"1644" data-end=3D"1687" class=3D"">
<p data-start=3D"1646" data-end=3D"1687" class=3D"">100=E2=80=93200 trials =
=3D 100=E2=80=93200 different images</p>
</li>
</ul>
<hr data-start=3D"1689" data-end=3D"1692" class=3D"">
<h3 data-start=3D"1694" data-end=3D"1706" class=3D"">=F0=9F=93=A6 TL;DR</h3=
>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"17=
08" data-end=3D"2031" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1708" data-end=3D"1729"><tr data-start=3D"1708" data-end=3D"=
1729"><th data-start=3D"1708" data-end=3D"1718" data-col-size=3D"sm">Concep=
t</th><th data-start=3D"1718" data-end=3D"1729" data-col-size=3D"lg">Meanin=
g</th></tr></thead><tbody data-start=3D"1751" data-end=3D"2031"><tr data-st=
art=3D"1751" data-end=3D"1886"><td data-start=3D"1751" data-end=3D"1763" da=
ta-col-size=3D"sm"><strong data-start=3D"1753" data-end=3D"1762">Trial</str=
ong></td><td data-start=3D"1763" data-end=3D"1886" data-col-size=3D"lg">One=
 image being shown to the monkey, and everything that happens while it's on=
 screen (neural activity + eye movements)</td></tr><tr data-start=3D"1887" =
data-end=3D"1959"><td data-start=3D"1887" data-end=3D"1902" data-col-size=
=3D"sm"><strong data-start=3D"1889" data-end=3D"1901">Stimulus</strong></td=
><td data-start=3D"1902" data-end=3D"1959" data-col-size=3D"lg">The image i=
tself (can be a face, object, scene, etc.)</td></tr><tr data-start=3D"1960"=
 data-end=3D"2031"><td data-start=3D"1960" data-end=3D"1974" data-col-size=
=3D"sm"><strong data-start=3D"1962" data-end=3D"1973">Session</strong></td>=
<td data-start=3D"1974" data-end=3D"2031" data-col-size=3D"lg">A set of tri=
als from a single monkey recording period</td></tr></tbody></table><div cla=
ss=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"><div c=
lass=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><span c=
lass=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary hover:=
bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 transiti=
on-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-none grou=
p-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6=
569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.65=
69 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V1=
5H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9=
 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H1=
4C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curr=
entColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"2033" data-end=3D"2036" class=3D"">
<p data-start=3D"2038" data-end=3D"2185" class=3D"">If you want, I can help=
 you pull up a specific trial, show its image ID, its saccade pattern, and =
its associated neural response. Want to try that?</p></div></div></div></di=
v></div></div></div></div></article><article class=3D"text-token-text-prima=
ry w-full" dir=3D"auto" data-testid=3D"conversation-turn-25" data-scroll-an=
chor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base =
my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thr=
ead-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacin=
g(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-wi=
dth:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-c=
ontent-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) fle=
x-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:out=
line-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative=
 flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap=
-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author-r=
ole=3D"user" data-message-id=3D"be3719d0-2e14-4c40-9ae9-abcd52eebe80" dir=
=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col items=
-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:m=
t-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:it=
ems-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-tok=
en-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wr=
ap">okay so in this kind of free-viewing experiment, monkeys are constantly=
 shown images for a fixed amount of time say 2 seconds, the neural and eye =
tracking data is recorded and then another trial i.e another image is then =
shown until the session is over</div></div></div></div></div></div></div></=
div></div></article><article class=3D"text-token-text-primary w-full" dir=
=3D"auto" data-testid=3D"conversation-turn-26" data-scroll-anchor=3D"false"=
><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx=
-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-conten=
t-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-=
(--thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem]=
 @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max=
-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-b=
ase gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidde=
n" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-fu=
ll min-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:ga=
p-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author-=
role=3D"assistant" data-message-id=3D"606992ec-0622-4dd4-8f8d-f3847cf93504"=
 dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col i=
tems-end gap-2 text-start break-words whitespace-normal [.text-message+&amp=
;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-=
col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:pr=
ose-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"40" cla=
ss=3D""><strong data-start=3D"0" data-end=3D"37">Yes, you=E2=80=99ve got it=
 exactly right!</strong> =F0=9F=99=8C</p>
<p data-start=3D"42" data-end=3D"126" class=3D"">Let=E2=80=99s summarize wh=
at=E2=80=99s happening in these <strong data-start=3D"84" data-end=3D"112">=
free-viewing experiments</strong> with monkeys:</p>
<hr data-start=3D"128" data-end=3D"131" class=3D"">
<h2 data-start=3D"133" data-end=3D"186" class=3D"">=F0=9F=A7=AA=F0=9F=A7=A0=
 Experimental Structure: Free-Viewing Paradigm</h2>
<h3 data-start=3D"188" data-end=3D"221" class=3D"">=F0=9F=93=B8 <strong dat=
a-start=3D"195" data-end=3D"221">Stimulus presentation:</strong></h3>
<ul data-start=3D"222" data-end=3D"468">
<li data-start=3D"222" data-end=3D"270" class=3D"">
<p data-start=3D"224" data-end=3D"270" class=3D"">The monkey is shown a sin=
gle image on a screen</p>
</li>
<li data-start=3D"271" data-end=3D"331" class=3D"">
<p data-start=3D"273" data-end=3D"331" class=3D"">Image stays up for a <str=
ong data-start=3D"294" data-end=3D"312">fixed duration</strong> (often ~2 s=
econds)</p>
</li>
<li data-start=3D"332" data-end=3D"386" class=3D"">
<p data-start=3D"334" data-end=3D"386" class=3D"">The monkey is <strong dat=
a-start=3D"348" data-end=3D"373">free to look anywhere</strong> on the imag=
e</p>
</li>
<li data-start=3D"387" data-end=3D"468" class=3D"">
<p data-start=3D"389" data-end=3D"468" class=3D"">There is <strong data-sta=
rt=3D"398" data-end=3D"409">no task</strong> (or only a minimal one)=E2=80=
=94no buttons, no fixate-on-dot, etc.</p>
</li>
</ul>
<h3 data-start=3D"470" data-end=3D"495" class=3D"">=F0=9F=91=81=EF=B8=8F <s=
trong data-start=3D"478" data-end=3D"495">Eye tracking:</strong></h3>
<ul data-start=3D"496" data-end=3D"742">
<li data-start=3D"496" data-end=3D"674" class=3D"">
<p data-start=3D"498" data-end=3D"554" class=3D"">While the image is up, a =
high-speed eye tracker records:</p>
<ul data-start=3D"557" data-end=3D"674">
<li data-start=3D"557" data-end=3D"577" class=3D"">
<p data-start=3D"559" data-end=3D"577" class=3D"">X/Y gaze positions</p>
</li>
<li data-start=3D"580" data-end=3D"625" class=3D"">
<p data-start=3D"582" data-end=3D"625" class=3D"">Times of <strong data-sta=
rt=3D"591" data-end=3D"603">saccades</strong> (rapid eye movements)</p>
</li>
<li data-start=3D"628" data-end=3D"674" class=3D"">
<p data-start=3D"630" data-end=3D"674" class=3D"">Times of <strong data-sta=
rt=3D"639" data-end=3D"652">fixations</strong> (when gaze is stable)</p>
</li>
</ul>
</li>
<li data-start=3D"675" data-end=3D"742" class=3D"">
<p data-start=3D"677" data-end=3D"742" class=3D"">Saccades are used to brea=
k up the viewing into meaningful windows</p>
</li>
</ul>
<h3 data-start=3D"744" data-end=3D"771" class=3D"">=E2=9A=A1 <strong data-s=
tart=3D"750" data-end=3D"771">Neural recording:</strong></h3>
<ul data-start=3D"772" data-end=3D"962">
<li data-start=3D"772" data-end=3D"825" class=3D"">
<p data-start=3D"774" data-end=3D"825" class=3D"">Electrodes implanted in a=
reas like V1, V4, IT, etc.</p>
</li>
<li data-start=3D"826" data-end=3D"888" class=3D"">
<p data-start=3D"828" data-end=3D"888" class=3D"">Neural spiking activity i=
s recorded <strong data-start=3D"864" data-end=3D"888">throughout the trial=
</strong></p>
</li>
<li data-start=3D"889" data-end=3D"962" class=3D"">
<p data-start=3D"891" data-end=3D"908" class=3D"">Often aligned to:</p>
<ul data-start=3D"911" data-end=3D"962">
<li data-start=3D"911" data-end=3D"927" class=3D"">
<p data-start=3D"913" data-end=3D"927" class=3D"">Stimulus onset</p>
</li>
<li data-start=3D"930" data-end=3D"944" class=3D"">
<p data-start=3D"932" data-end=3D"944" class=3D"">Each saccade</p>
</li>
<li data-start=3D"947" data-end=3D"962" class=3D"">
<p data-start=3D"949" data-end=3D"962" class=3D"">Each fixation</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"964" data-end=3D"967" class=3D"">
<h2 data-start=3D"969" data-end=3D"998" class=3D"">=F0=9F=A7=AA One Trial =
=3D One Episode</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"10=
00" data-end=3D"1345" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1000" data-end=3D"1033"><tr data-start=3D"1000" data-end=3D"=
1033"><th data-start=3D"1000" data-end=3D"1018" data-col-size=3D"sm">Featur=
e</th><th data-start=3D"1018" data-end=3D"1033" data-col-size=3D"md">Descri=
ption</th></tr></thead><tbody data-start=3D"1067" data-end=3D"1345"><tr dat=
a-start=3D"1067" data-end=3D"1101"><td data-start=3D"1067" data-end=3D"1085=
" data-col-size=3D"sm">Duration</td><td data-start=3D"1085" data-end=3D"110=
1" data-col-size=3D"md">~1=E2=80=932 seconds</td></tr><tr data-start=3D"110=
2" data-end=3D"1159"><td data-start=3D"1102" data-end=3D"1120" data-col-siz=
e=3D"sm">Stimulus</td><td data-start=3D"1120" data-end=3D"1159" data-col-si=
ze=3D"md">1 image (face, object, scene, etc.)</td></tr><tr data-start=3D"11=
60" data-end=3D"1204"><td data-start=3D"1160" data-end=3D"1178" data-col-si=
ze=3D"sm">Recorded data</td><td data-start=3D"1178" data-end=3D"1204" data-=
col-size=3D"md">Eye movements + spikes</td></tr><tr data-start=3D"1205" dat=
a-end=3D"1288"><td data-start=3D"1205" data-end=3D"1223" data-col-size=3D"s=
m">Ends when</td><td data-start=3D"1223" data-end=3D"1288" data-col-size=3D=
"md">The image disappears and an inter-trial interval (ITI) begins</td></tr=
><tr data-start=3D"1289" data-end=3D"1345"><td data-start=3D"1289" data-end=
=3D"1307" data-col-size=3D"sm">What=E2=80=99s next</td><td data-start=3D"13=
07" data-end=3D"1345" data-col-size=3D"md">Another image appears =E2=86=92 =
next trial</td></tr></tbody></table><div class=3D"sticky end-(--thread-cont=
ent-margin) h-0 self-end select-none"><div class=3D"absolute end-0 flex ite=
ms-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"=
><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token=
-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):=
not(:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-with=
in)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2=
 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 =
20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7=
 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 =
14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 =
4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V=
10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></butto=
n></span></div></div></div></div>
<hr data-start=3D"1347" data-end=3D"1350" class=3D"">
<h2 data-start=3D"1352" data-end=3D"1377" class=3D"">=F0=9F=93=8A Across th=
e session:</h2>
<ul data-start=3D"1378" data-end=3D"1629">
<li data-start=3D"1378" data-end=3D"1444" class=3D"">
<p data-start=3D"1380" data-end=3D"1444" class=3D""><strong data-start=3D"1=
380" data-end=3D"1391">Session</strong> =3D a continuous recording block (e=
.g., 30=E2=80=9390 minutes)</p>
</li>
<li data-start=3D"1445" data-end=3D"1511" class=3D"">
<p data-start=3D"1447" data-end=3D"1511" class=3D"">Includes <strong data-s=
tart=3D"1456" data-end=3D"1471">many trials</strong> (typically 100=E2=80=
=93500 depending on design)</p>
</li>
<li data-start=3D"1512" data-end=3D"1568" class=3D"">
<p data-start=3D"1514" data-end=3D"1568" class=3D"">Each trial is <strong d=
ata-start=3D"1528" data-end=3D"1543">independent</strong> (new image, new v=
iewing)</p>
</li>
<li data-start=3D"1569" data-end=3D"1629" class=3D"">
<p data-start=3D"1571" data-end=3D"1629" class=3D"">The same set of neurons=
 is recorded throughout the session</p>
</li>
</ul>
<hr data-start=3D"1631" data-end=3D"1634" class=3D"">
<h3 data-start=3D"1636" data-end=3D"1657" class=3D"">=F0=9F=9B=A0=EF=B8=8F =
Summary Flow:</h3>
<pre class=3D"overflow-visible!" data-start=3D"1659" data-end=3D"1844"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">plaintext</div><div class=3D"sticky top-9"><=
div class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=
=3D"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-toke=
n-main-surface-secondary flex items-center rounded-sm px-2 font-sans text-x=
s"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items=
-center select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.656=
9 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569=
 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H=
19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4=
.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C=
14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curren=
tColor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"clo=
sed"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg w=
idth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4=
 5.5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z=
" fill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" st=
roke-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C=
5.12203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.=
3007 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 =
19.8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.060=
8 19.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20=
 10.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.1192=
9 15 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2=
4513 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.771=
9 5.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linec=
ap=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" s=
troke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-l=
inejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div c=
lass=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! lan=
guage-plaintext"><span><span>[Trial 1]
=E2=86=92 show image A
=E2=86=92 record neural + eye data for 2s
=E2=86=92 remove image
=E2=86=92 ITI

[Trial 2]
=E2=86=92 show image B
=E2=86=92 record neural + eye data
=E2=86=92 ITI

...repeat until session ends
</span></span></code></div></div></pre>
<hr data-start=3D"1846" data-end=3D"1849" class=3D"">
<p data-start=3D"1851" data-end=3D"1965" class=3D"">You absolutely nailed t=
he concept. Want to visualize what a single trial looks like, with its imag=
e and gaze path?</p></div></div></div></div></div></div></div></div></artic=
le><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-test=
id=3D"conversation-turn-27" data-scroll-anchor=3D"false"><h5 class=3D"sr-on=
ly">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-co=
ntent-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] =
@[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margi=
n)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-con=
tent-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto f=
lex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:g=
ap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div=
 class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><d=
iv class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full=
 flex-col grow"><div data-message-author-role=3D"user" data-message-id=3D"9=
21ca8e6-1615-4690-93e2-faab1684e127" dir=3D"auto" class=3D"min-h-8 text-mes=
sage relative flex w-full flex-col items-end gap-2 text-start break-words w=
hitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex=
-col gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative m=
ax-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5=
 py-2.5"><div class=3D"whitespace-pre-wrap">okay go through script 0c</div>=
</div></div></div></div></div></div></div></div></article><article class=3D=
"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-t=
urn-28" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h=
6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--s=
pacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thre=
ad-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div =
class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full fl=
ex-col grow"><div data-message-author-role=3D"assistant" data-message-id=3D=
"00755714-be74-45c9-b6ee-7bd62b1eb69c" dir=3D"auto" class=3D"min-h-8 text-m=
essage relative flex w-full flex-col items-end gap-2 text-start break-words=
 whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"g=
pt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]=
"><div class=3D"markdown prose dark:prose-invert w-full break-words dark"><=
p data-start=3D"0" data-end=3D"113" class=3D"">Perfect=E2=80=94let=E2=80=99=
s now go through <code data-start=3D"29" data-end=3D"62">script_0c_select_f=
ix_sacc.ipynb</code> <strong data-start=3D"63" data-end=3D"79">line by line=
</strong> to fully understand how it works.</p>
<p data-start=3D"115" data-end=3D"140" class=3D"">This script is all about:=
</p>
<ul data-start=3D"141" data-end=3D"307">
<li data-start=3D"141" data-end=3D"224" class=3D"">
<p data-start=3D"143" data-end=3D"224" class=3D"">Detecting <strong data-st=
art=3D"153" data-end=3D"166">fixations</strong> and <strong data-start=3D"1=
71" data-end=3D"183">saccades</strong> from the monkey=E2=80=99s eye tracki=
ng data, and</p>
</li>
<li data-start=3D"225" data-end=3D"307" class=3D"">
<p data-start=3D"227" data-end=3D"307" class=3D"">Annotating each trial wit=
h this information (e.g., timing and ordinal position).</p>
</li>
</ul>
<hr data-start=3D"309" data-end=3D"312" class=3D"">
<h2 data-start=3D"314" data-end=3D"353" class=3D"">=F0=9F=93=81 <code data-=
start=3D"320" data-end=3D"353">script_0c_select_fix_sacc.ipynb</code></h2>
<h3 data-start=3D"355" data-end=3D"373" class=3D""><strong data-start=3D"35=
9" data-end=3D"373">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"375" data-end=3D"488"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"490" data-end=3D"505" class=3D"">Standard setup:</p>
<ul data-start=3D"506" data-end=3D"654">
<li data-start=3D"506" data-end=3D"561" class=3D"">
<p data-start=3D"508" data-end=3D"561" class=3D""><code data-start=3D"508" =
data-end=3D"515">numpy</code>, <code data-start=3D"517" data-end=3D"525">pa=
ndas</code>: for manipulating arrays and tables</p>
</li>
<li data-start=3D"562" data-end=3D"610" class=3D"">
<p data-start=3D"564" data-end=3D"610" class=3D""><code data-start=3D"564" =
data-end=3D"572">pickle</code>: for loading/saving intermediate data</p>
</li>
<li data-start=3D"611" data-end=3D"631" class=3D"">
<p data-start=3D"613" data-end=3D"631" class=3D""><code data-start=3D"613" =
data-end=3D"619">Path</code>: file paths</p>
</li>
<li data-start=3D"632" data-end=3D"654" class=3D"">
<p data-start=3D"634" data-end=3D"654" class=3D""><code data-start=3D"634" =
data-end=3D"640">tqdm</code>: progress bar</p>
</li>
</ul>
<hr data-start=3D"656" data-end=3D"659" class=3D"">
<h3 data-start=3D"661" data-end=3D"702" class=3D""><strong data-start=3D"66=
5" data-end=3D"702">2. Load preprocessed session data</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"704" data-end=3D"856"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>INTERMEDIATE_DIR =3D Path(</span><span><span class=
=3D"hljs-string">"intermediate"</span></span><span>)
</span><span><span class=3D"hljs-keyword">with</span></span><span> </span><=
span><span class=3D"hljs-built_in">open</span></span><span>(INTERMEDIATE_DI=
R / </span><span><span class=3D"hljs-string">"shared_preprocessed_data.pkl"=
</span></span><span>, </span><span><span class=3D"hljs-string">"rb"</span><=
/span><span>) </span><span><span class=3D"hljs-keyword">as</span></span><sp=
an> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<ul data-start=3D"858" data-end=3D"1089">
<li data-start=3D"858" data-end=3D"922" class=3D"">
<p data-start=3D"860" data-end=3D"922" class=3D"">Loads the data produced b=
y <code data-start=3D"887" data-end=3D"922">script_0a_shared_processing.ipy=
nb</code></p>
</li>
<li data-start=3D"923" data-end=3D"995" class=3D"">
<p data-start=3D"925" data-end=3D"995" class=3D"">This includes: spike-alig=
ned data, trial metadata, and maybe unit info</p>
</li>
<li data-start=3D"996" data-end=3D"1089" class=3D"">
<p data-start=3D"998" data-end=3D"1089" class=3D""><code data-start=3D"998"=
 data-end=3D"1004">data</code> is a dictionary: <code data-start=3D"1022" d=
ata-end=3D"1089">{ session_name: { "sdf": ..., "trials": ..., "unit_info": =
... } }</code></p>
</li>
</ul>
<hr data-start=3D"1091" data-end=3D"1094" class=3D"">
<h3 data-start=3D"1096" data-end=3D"1127" class=3D""><strong data-start=3D"=
1100" data-end=3D"1127">3. Process each session</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1129" data-end=3D"1223"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> sess_name, sess_data </span><span><span class=3D"hljs-keyword">in</span><=
/span><span> tqdm(data.items()):
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]
</span></span></code></div></div></pre>
<ul data-start=3D"1225" data-end=3D"1327">
<li data-start=3D"1225" data-end=3D"1271" class=3D"">
<p data-start=3D"1227" data-end=3D"1271" class=3D"">Looping through every s=
ession in the dataset</p>
</li>
<li data-start=3D"1272" data-end=3D"1327" class=3D"">
<p data-start=3D"1274" data-end=3D"1327" class=3D"">For each session, we ex=
tract the trial-level metadata</p>
</li>
</ul>
<hr data-start=3D"1329" data-end=3D"1332" class=3D"">
<h3 data-start=3D"1334" data-end=3D"1384" class=3D""><strong data-start=3D"=
1338" data-end=3D"1384">4. Detect fixations and saccades per trial</strong>=
</h3>
<pre class=3D"overflow-visible!" data-start=3D"1386" data-end=3D"1463"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>    fix_onsets =3D []
    sacc_onsets =3D []
    sacc_ordinals =3D []
</span></span></code></div></div></pre>
<p data-start=3D"1465" data-end=3D"1497" class=3D"">Initialize empty lists =
to store:</p>
<ul data-start=3D"1498" data-end=3D"1675">
<li data-start=3D"1498" data-end=3D"1557" class=3D"">
<p data-start=3D"1500" data-end=3D"1557" class=3D""><code data-start=3D"150=
0" data-end=3D"1512">fix_onsets</code>: list of fixation start times for ea=
ch trial</p>
</li>
<li data-start=3D"1558" data-end=3D"1617" class=3D"">
<p data-start=3D"1560" data-end=3D"1617" class=3D""><code data-start=3D"156=
0" data-end=3D"1573">sacc_onsets</code>: list of saccade start times for ea=
ch trial</p>
</li>
<li data-start=3D"1618" data-end=3D"1675" class=3D"">
<p data-start=3D"1620" data-end=3D"1675" class=3D""><code data-start=3D"162=
0" data-end=3D"1635">sacc_ordinals</code>: list of saccade orderings (0, 1,=
 2, =E2=80=A6)</p>
</li>
</ul>
<p data-start=3D"1677" data-end=3D"1695" class=3D"">Now the main loop:</p>
<pre class=3D"overflow-visible!" data-start=3D"1697" data-end=3D"1825"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>    </span><span><span class=3D"hljs-keyword">for</=
span></span><span> trial </span><span><span class=3D"hljs-keyword">in</span=
></span><span> trials.itertuples():
        eye_data =3D trial.eye_data  </span><span><span class=3D"hljs-comme=
nt"># array of eye positions (x, y) over time</span></span><span>
</span></span></code></div></div></pre>
<ul data-start=3D"1827" data-end=3D"1935">
<li data-start=3D"1827" data-end=3D"1856" class=3D"">
<p data-start=3D"1829" data-end=3D"1856" class=3D"">Iterates through each t=
rial</p>
</li>
<li data-start=3D"1857" data-end=3D"1935" class=3D"">
<p data-start=3D"1859" data-end=3D"1935" class=3D""><code data-start=3D"185=
9" data-end=3D"1869">eye_data</code> contains gaze coordinates over time, t=
ypically sampled at 1000 Hz</p>
</li>
</ul>
<p data-start=3D"1937" data-end=3D"1942" class=3D"">Then:</p>
<pre class=3D"overflow-visible!" data-start=3D"1944" data-end=3D"2041"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>        saccs =3D detect_saccades(eye_data)
        fixs =3D detect_fixations(eye_data)
</span></span></code></div></div></pre>
<p data-start=3D"2043" data-end=3D"2066" class=3D"">These functions likely:=
</p>
<ul data-start=3D"2067" data-end=3D"2212">
<li data-start=3D"2067" data-end=3D"2093" class=3D"">
<p data-start=3D"2069" data-end=3D"2093" class=3D"">Compute <strong data-st=
art=3D"2077" data-end=3D"2093">eye velocity</strong></p>
</li>
<li data-start=3D"2094" data-end=3D"2162" class=3D"">
<p data-start=3D"2096" data-end=3D"2162" class=3D"">Use a threshold (e.g., =
30 deg/sec) to identify <strong data-start=3D"2143" data-end=3D"2162">sacca=
de periods</strong></p>
</li>
<li data-start=3D"2163" data-end=3D"2212" class=3D"">
<p data-start=3D"2165" data-end=3D"2212" class=3D"">Label periods between s=
accades as <strong data-start=3D"2199" data-end=3D"2212">fixations</strong>=
</p>
</li>
</ul>
<p data-start=3D"2214" data-end=3D"2219" class=3D"">Then:</p>
<pre class=3D"overflow-visible!" data-start=3D"2221" data-end=3D"2402"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>        fix_onsets.append([f.start_time </span><spa=
n><span class=3D"hljs-keyword">for</span></span><span> f </span><span><span=
 class=3D"hljs-keyword">in</span></span><span> fixs])
        sacc_onsets.append([s.start_time </span><span><span class=3D"hljs-k=
eyword">for</span></span><span> s </span><span><span class=3D"hljs-keyword"=
>in</span></span><span> saccs])
        sacc_ordinals.append(</span><span><span class=3D"hljs-built_in">lis=
t</span></span><span>(</span><span><span class=3D"hljs-built_in">range</spa=
n></span><span>(</span><span><span class=3D"hljs-built_in">len</span></span=
><span>(saccs))))
</span></span></code></div></div></pre>
<p data-start=3D"2404" data-end=3D"2415" class=3D"">This means:</p>
<ul data-start=3D"2416" data-end=3D"2541">
<li data-start=3D"2416" data-end=3D"2541" class=3D"">
<p data-start=3D"2418" data-end=3D"2433" class=3D"">For each trial:</p>
<ul data-start=3D"2436" data-end=3D"2541">
<li data-start=3D"2436" data-end=3D"2463" class=3D"">
<p data-start=3D"2438" data-end=3D"2463" class=3D"">Save fixation start tim=
es</p>
</li>
<li data-start=3D"2466" data-end=3D"2492" class=3D"">
<p data-start=3D"2468" data-end=3D"2492" class=3D"">Save saccade start time=
s</p>
</li>
<li data-start=3D"2495" data-end=3D"2541" class=3D"">
<p data-start=3D"2497" data-end=3D"2541" class=3D"">Assign ordinals to sacc=
ades (1st, 2nd, etc.)</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"2543" data-end=3D"2546" class=3D"">
<h3 data-start=3D"2548" data-end=3D"2598" class=3D""><strong data-start=3D"=
2552" data-end=3D"2598">5. Add the new data to the trial dataframe</strong>=
</h3>
<pre class=3D"overflow-visible!" data-start=3D"2600" data-end=3D"2735"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>    trials[</span><span><span class=3D"hljs-string"=
>"fix_onsets"</span></span><span>] =3D fix_onsets
    trials[</span><span><span class=3D"hljs-string">"sacc_onsets"</span></s=
pan><span>] =3D sacc_onsets
    trials[</span><span><span class=3D"hljs-string">"sacc_ordinals"</span><=
/span><span>] =3D sacc_ordinals
</span></span></code></div></div></pre>
<p data-start=3D"2737" data-end=3D"2756" class=3D"">Now each trial has:</p>
<ul data-start=3D"2757" data-end=3D"2827">
<li data-start=3D"2757" data-end=3D"2779" class=3D"">
<p data-start=3D"2759" data-end=3D"2779" class=3D"">Fixation onset times</p=
>
</li>
<li data-start=3D"2780" data-end=3D"2801" class=3D"">
<p data-start=3D"2782" data-end=3D"2801" class=3D"">Saccade onset times</p>
</li>
<li data-start=3D"2802" data-end=3D"2827" class=3D"">
<p data-start=3D"2804" data-end=3D"2827" class=3D"">Saccade ordinal numbers=
</p>
</li>
</ul>
<hr data-start=3D"2829" data-end=3D"2832" class=3D"">
<h3 data-start=3D"2834" data-end=3D"2865" class=3D""><strong data-start=3D"=
2838" data-end=3D"2865">6. Save updated session</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2867" data-end=3D"2945"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>    sess_data[</span><span><span class=3D"hljs-stri=
ng">"trials"</span></span><span>] =3D trials
    data[sess_name] =3D sess_data
</span></span></code></div></div></pre>
<p data-start=3D"2947" data-end=3D"3046" class=3D"">Updates the trial metad=
ata with the new info, and stores it back into the session-level dictionary=
.</p>
<hr data-start=3D"3048" data-end=3D"3051" class=3D"">
<h3 data-start=3D"3053" data-end=3D"3084" class=3D""><strong data-start=3D"=
3057" data-end=3D"3084">7. Save the whole thing</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3086" data-end=3D"3211"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(INTE=
RMEDIATE_DIR / </span><span><span class=3D"hljs-string">"shared_preprocesse=
d_data_with_saccades.pkl"</span></span><span>, </span><span><span class=3D"=
hljs-string">"wb"</span></span><span>) </span><span><span class=3D"hljs-key=
word">as</span></span><span> f:
    pickle.dump(data, f)
</span></span></code></div></div></pre>
<p data-start=3D"3213" data-end=3D"3310" class=3D"">Final output: a pickle =
file with <strong data-start=3D"3246" data-end=3D"3278">fixation/saccade an=
notations</strong>, ready for use in scripts like:</p>
<ul data-start=3D"3311" data-end=3D"3427">
<li data-start=3D"3311" data-end=3D"3334" class=3D"">
<p data-start=3D"3313" data-end=3D"3334" class=3D""><code data-start=3D"331=
3" data-end=3D"3334">2a_self_consistency</code></p>
</li>
<li data-start=3D"3335" data-end=3D"3363" class=3D"">
<p data-start=3D"3337" data-end=3D"3363" class=3D""><code data-start=3D"333=
7" data-end=3D"3363">2c_fix0_self_consistency</code></p>
</li>
<li data-start=3D"3364" data-end=3D"3427" class=3D"">
<p data-start=3D"3366" data-end=3D"3427" class=3D"">or any script that comp=
ares neural activity between fixations</p>
</li>
</ul>
<hr data-start=3D"3429" data-end=3D"3432" class=3D"">
<h2 data-start=3D"3434" data-end=3D"3446" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"34=
48" data-end=3D"3690" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3448" data-end=3D"3471"><tr data-start=3D"3448" data-end=3D"=
3471"><th data-start=3D"3448" data-end=3D"3455" data-col-size=3D"sm">Step</=
th><th data-start=3D"3455" data-end=3D"3471" data-col-size=3D"sm">What it d=
oes</th></tr></thead><tbody data-start=3D"3497" data-end=3D"3690"><tr data-=
start=3D"3497" data-end=3D"3539"><td data-start=3D"3497" data-end=3D"3504" =
data-col-size=3D"sm">Load</td><td data-start=3D"3504" data-end=3D"3539" dat=
a-col-size=3D"sm">Preprocessed spike + trial data</td></tr><tr data-start=
=3D"3540" data-end=3D"3590"><td data-start=3D"3540" data-end=3D"3549" data-=
col-size=3D"sm">Detect</td><td data-start=3D"3549" data-end=3D"3590" data-c=
ol-size=3D"sm">Fixations and saccades from eye trace</td></tr><tr data-star=
t=3D"3591" data-end=3D"3643"><td data-start=3D"3591" data-end=3D"3602" data=
-col-size=3D"sm">Annotate</td><td data-start=3D"3602" data-end=3D"3643" dat=
a-col-size=3D"sm">Each trial with timing + ordinal info</td></tr><tr data-s=
tart=3D"3644" data-end=3D"3690"><td data-start=3D"3644" data-end=3D"3651" d=
ata-col-size=3D"sm">Save</td><td data-start=3D"3651" data-end=3D"3690" data=
-col-size=3D"sm">New file with behavioral event info</td></tr></tbody></tab=
le><div class=3D"sticky end-(--thread-content-margin) h-0 self-end select-n=
one"><div class=3D"absolute end-0 flex items-end" style=3D"height: 32.8906p=
x;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-pri=
mary hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p=
-1 transition-opacity group-[:not(:hover):not(:focus-within)]:pointer-event=
s-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24"=
 height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.o=
rg/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 =
5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.3431=
5 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.3=
4315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10=
C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.447=
72 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" =
fill=3D"currentColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"3692" data-end=3D"3695" class=3D"">
<p data-start=3D"3697" data-end=3D"3892" class=3D"">If you=E2=80=99d like, =
I can help you <strong data-start=3D"3727" data-end=3D"3780">visualize a sp=
ecific trial=E2=80=99s saccades + fixations</strong>, or inspect how one of=
 the detection functions (<code data-start=3D"3829" data-end=3D"3846">detec=
t_saccades</code>) works under the hood. Want to go there next?</p></div></=
div></div></div></div></div></div></div></article><article class=3D"text-to=
ken-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-29" =
data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=
=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @=
[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-m=
argin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-=
content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64re=
m]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-=
max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages foc=
us-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation=
-turn relative flex w-full min-w-0 flex-col"><div class=3D"relative flex-co=
l gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-me=
ssage-author-role=3D"user" data-message-id=3D"9bb63136-62a6-4870-aba1-ba616=
7906661" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full fl=
ex-col items-end gap-2 text-start break-words whitespace-normal [.text-mess=
age+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden item=
s-end rtl:items-start"><div class=3D"relative max-w-[var(--user-chat-width,=
70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"white=
space-pre-wrap">okay so how do i determine how the researchers chose which =
images to show to the monkey</div></div></div></div></div></div></div></div=
></div></article><article class=3D"text-token-text-primary w-full" dir=3D"a=
uto" data-testid=3D"conversation-turn-30" data-scroll-anchor=3D"false"><h6 =
class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto=
 py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-mar=
gin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--th=
read-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34=
rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-widt=
h:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base g=
ap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" ta=
bindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full mi=
n-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3">=
<div class=3D"flex max-w-full flex-col grow"><div data-message-author-role=
=3D"assistant" data-message-id=3D"1e6396b3-106c-447a-8b6c-d8958a947ed2" dir=
=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col items=
-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:m=
t-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col =
gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-=
invert w-full break-words dark"><p data-start=3D"0" data-end=3D"235" class=
=3D"">Great question! =F0=9F=A7=A0=F0=9F=90=92 Figuring out <strong data-st=
art=3D"34" data-end=3D"72">how researchers chose which images</strong> to s=
how in a free-viewing experiment is key to understanding the structure of y=
our data, the categories, and how to interpret neural selectivity (like for=
 faces).</p>
<p data-start=3D"237" data-end=3D"265" class=3D"">Here=E2=80=99s how you ca=
n find out:</p>
<hr data-start=3D"267" data-end=3D"270" class=3D"">
<h2 data-start=3D"272" data-end=3D"332" class=3D"">=F0=9F=A7=AD Where to lo=
ok: How images were selected for the monkey</h2>
<h3 data-start=3D"334" data-end=3D"361" class=3D"">=E2=9C=85 1. <strong dat=
a-start=3D"343" data-end=3D"361">Trial Metadata</strong></h3>
<p data-start=3D"362" data-end=3D"419" class=3D"">Open up the trial table (=
usually in each session=E2=80=99s data):</p>
<pre class=3D"overflow-visible!" data-start=3D"421" data-end=3D"485"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>trials =3D sess_data[</span><span><span class=3D"hl=
js-string">"trials"</span></span><span>]
</span><span><span class=3D"hljs-built_in">print</span></span><span>(trials=
.columns)
</span></span></code></div></div></pre>
<p data-start=3D"487" data-end=3D"519" class=3D"">You're looking for column=
s like:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"52=
1" data-end=3D"920" class=3D"w-fit min-w-(--thread-content-width)"><thead d=
ata-start=3D"521" data-end=3D"583"><tr data-start=3D"521" data-end=3D"583">=
<th data-start=3D"521" data-end=3D"543" data-col-size=3D"sm">Column name</t=
h><th data-start=3D"543" data-end=3D"583" data-col-size=3D"md">What it tell=
s you</th></tr></thead><tbody data-start=3D"647" data-end=3D"920"><tr data-=
start=3D"647" data-end=3D"709"><td data-start=3D"647" data-end=3D"669" data=
-col-size=3D"sm"><code data-start=3D"649" data-end=3D"659">image_id</code><=
/td><td data-start=3D"669" data-end=3D"709" data-col-size=3D"md">Which spec=
ific image was shown</td></tr><tr data-start=3D"710" data-end=3D"785"><td d=
ata-start=3D"710" data-end=3D"732" data-col-size=3D"sm"><code data-start=3D=
"712" data-end=3D"722">category</code></td><td data-start=3D"732" data-end=
=3D"785" data-col-size=3D"md">High-level label like <code data-start=3D"756=
" data-end=3D"768">human_face</code>, <code data-start=3D"770" data-end=3D"=
777">scene</code>, etc.</td></tr><tr data-start=3D"786" data-end=3D"848"><t=
d data-start=3D"786" data-end=3D"808" data-col-size=3D"sm"><code data-start=
=3D"788" data-end=3D"800">image_path</code></td><td data-start=3D"808" data=
-end=3D"848" data-col-size=3D"md">Path or filename (sometimes present)</td>=
</tr><tr data-start=3D"849" data-end=3D"920"><td data-start=3D"849" data-en=
d=3D"871" data-col-size=3D"sm"><code data-start=3D"851" data-end=3D"862">co=
ndition</code></td><td data-start=3D"871" data-end=3D"920" data-col-size=3D=
"md">May reflect task condition or stimulus subset</td></tr></tbody></table=
><div class=3D"sticky end-(--thread-content-margin) h-0 self-end select-non=
e"><div class=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;=
"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-prima=
ry hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1=
 transition-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-=
none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" h=
eight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D=
"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V1=
4C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 2=
2 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.3431=
5 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.=
44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 =
20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fil=
l=3D"currentColor"></path></svg></button></span></div></div></div></div>
<p data-start=3D"922" data-end=3D"935" class=3D"">Then you can:</p>
<pre class=3D"overflow-visible!" data-start=3D"937" data-end=3D"984"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>trials[</span><span><span class=3D"hljs-string">'ca=
tegory'</span></span><span>].value_counts()
</span></span></code></div></div></pre>
<p data-start=3D"986" data-end=3D"1038" class=3D"">to see how many images f=
rom each category were used.</p>
<hr data-start=3D"1040" data-end=3D"1043" class=3D"">
<h3 data-start=3D"1045" data-end=3D"1083" class=3D"">=E2=9C=85 2. <strong d=
ata-start=3D"1054" data-end=3D"1083">Stimulus Set / Image Bank</strong></h3=
>
<p data-start=3D"1084" data-end=3D"1150" class=3D"">Check the GitHub repo o=
r DANDI archive associated with your study.</p>
<p data-start=3D"1152" data-end=3D"1165" class=3D"">In your case:</p>
<p data-start=3D"1167" data-end=3D"1355" class=3D"">=F0=9F=93=82 GitHub: <a=
 data-start=3D"1178" data-end=3D"1258" rel=3D"noopener" target=3D"_new" cla=
ss=3D"" href=3D"https://github.com/willwx/free_viewing">https://github.com/=
willwx/free_viewing</a><br data-start=3D"1258" data-end=3D"1261">
=F0=9F=93=A6 DANDI: <a data-start=3D"1271" data-end=3D"1355" rel=3D"noopene=
r" target=3D"_new" class=3D"">https://dandiarchive.org/dandiset/000628</a><=
/p>
<p data-start=3D"1357" data-end=3D"1388" class=3D"">Look for folders or fil=
es like:</p>
<ul data-start=3D"1389" data-end=3D"1491">
<li data-start=3D"1389" data-end=3D"1401" class=3D"">
<p data-start=3D"1391" data-end=3D"1401" class=3D""><code data-start=3D"139=
1" data-end=3D"1401">stimuli/</code></p>
</li>
<li data-start=3D"1402" data-end=3D"1424" class=3D"">
<p data-start=3D"1404" data-end=3D"1424" class=3D""><code data-start=3D"140=
4" data-end=3D"1424">image_metadata.csv</code></p>
</li>
<li data-start=3D"1425" data-end=3D"1450" class=3D"">
<p data-start=3D"1427" data-end=3D"1450" class=3D""><code data-start=3D"142=
7" data-end=3D"1450">image_categories.json</code></p>
</li>
<li data-start=3D"1451" data-end=3D"1491" class=3D"">
<p data-start=3D"1453" data-end=3D"1491" class=3D""><code data-start=3D"145=
3" data-end=3D"1467">face_images/</code>, <code data-start=3D"1469" data-en=
d=3D"1485">object_images/</code>, etc.</p>
</li>
</ul>
<p data-start=3D"1493" data-end=3D"1514" class=3D"">These often describe:</=
p>
<ul data-start=3D"1515" data-end=3D"1673">
<li data-start=3D"1515" data-end=3D"1571" class=3D"">
<p data-start=3D"1517" data-end=3D"1571" class=3D"">Where the images came f=
rom (internet? lab-controlled?)</p>
</li>
<li data-start=3D"1572" data-end=3D"1606" class=3D"">
<p data-start=3D"1574" data-end=3D"1606" class=3D"">How many there were per=
 category</p>
</li>
<li data-start=3D"1607" data-end=3D"1673" class=3D"">
<p data-start=3D"1609" data-end=3D"1673" class=3D"">If they were balanced (=
e.g., equal numbers of faces and objects)</p>
</li>
</ul>
<hr data-start=3D"1675" data-end=3D"1678" class=3D"">
<h3 data-start=3D"1680" data-end=3D"1716" class=3D"">=E2=9C=85 3. <strong d=
ata-start=3D"1689" data-end=3D"1716">Code: Stimulus Sampling</strong></h3>
<p data-start=3D"1717" data-end=3D"1778" class=3D"">Sometimes the code for =
loading a session includes logic like:</p>
<pre class=3D"overflow-visible!" data-start=3D"1780" data-end=3D"1895"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>face_images =3D [img </span><span><span class=3D"hl=
js-keyword">for</span></span><span> img </span><span><span class=3D"hljs-ke=
yword">in</span></span><span> all_images </span><span><span class=3D"hljs-k=
eyword">if</span></span><span> img.category =3D=3D </span><span><span class=
=3D"hljs-string">'human_face'</span></span><span>]
random.shuffle(face_images)
</span></span></code></div></div></pre>
<p data-start=3D"1897" data-end=3D"1916" class=3D"">This helps you see:</p>
<ul data-start=3D"1917" data-end=3D"2027">
<li data-start=3D"1917" data-end=3D"1948" class=3D"">
<p data-start=3D"1919" data-end=3D"1948" class=3D"">Whether they sampled ra=
ndomly</p>
</li>
<li data-start=3D"1949" data-end=3D"1983" class=3D"">
<p data-start=3D"1951" data-end=3D"1983" class=3D"">Whether categories were=
 balanced</p>
</li>
<li data-start=3D"1984" data-end=3D"2027" class=3D"">
<p data-start=3D"1986" data-end=3D"2027" class=3D"">If any images were reus=
ed across sessions</p>
</li>
</ul>
<hr data-start=3D"2029" data-end=3D"2032" class=3D"">
<h3 data-start=3D"2034" data-end=3D"2068" class=3D"">=E2=9C=85 4. <strong d=
ata-start=3D"2043" data-end=3D"2068">Paper Methods Section</strong></h3>
<p data-start=3D"2070" data-end=3D"2102" class=3D"">Your dataset is from th=
is paper:</p>
<p data-start=3D"2104" data-end=3D"2260" class=3D"">=F0=9F=A7=BE <a data-st=
art=3D"2107" data-end=3D"2260" rel=3D"noopener" target=3D"_new" class=3D"" =
href=3D"https://www.nature.com/articles/s41593-024-01631-5"><strong data-st=
art=3D"2108" data-end=3D"2207">Feature-selective responses in macaque visua=
l cortex follow eye movements during natural vision</strong></a></p>
<p data-start=3D"2262" data-end=3D"2327" class=3D"">In the <strong data-sta=
rt=3D"2269" data-end=3D"2280">Methods</strong> section (or Supplement), the=
y likely describe:</p>
<ul data-start=3D"2328" data-end=3D"2485">
<li data-start=3D"2328" data-end=3D"2356" class=3D"">
<p data-start=3D"2330" data-end=3D"2356" class=3D"">How many images were sh=
own</p>
</li>
<li data-start=3D"2357" data-end=3D"2381" class=3D"">
<p data-start=3D"2359" data-end=3D"2381" class=3D"">How they were selected<=
/p>
</li>
<li data-start=3D"2382" data-end=3D"2437" class=3D"">
<p data-start=3D"2384" data-end=3D"2437" class=3D"">Whether there were repe=
titions or randomized ordering</p>
</li>
<li data-start=3D"2438" data-end=3D"2485" class=3D"">
<p data-start=3D"2440" data-end=3D"2485" class=3D"">Any preprocessing (e.g.=
, cropping, grayscale)</p>
</li>
</ul>
<hr data-start=3D"2487" data-end=3D"2490" class=3D"">
<h2 data-start=3D"2492" data-end=3D"2550" class=3D"">=F0=9F=A7=A0 TL;DR =E2=
=80=93 To find out how image stimuli were selected:</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"25=
52" data-end=3D"2870" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2552" data-end=3D"2581"><tr data-start=3D"2552" data-end=3D"=
2581"><th data-start=3D"2552" data-end=3D"2561" data-col-size=3D"sm">Method=
</th><th data-start=3D"2561" data-end=3D"2581" data-col-size=3D"md">What to=
 Look For</th></tr></thead><tbody data-start=3D"2612" data-end=3D"2870"><tr=
 data-start=3D"2612" data-end=3D"2679"><td data-start=3D"2612" data-end=3D"=
2631" data-col-size=3D"sm">=E2=9C=85 Trial metadata</td><td data-start=3D"2=
631" data-end=3D"2679" data-col-size=3D"md"><code data-start=3D"2633" data-=
end=3D"2643">category</code>, <code data-start=3D"2645" data-end=3D"2655">i=
mage_id</code>, <code data-start=3D"2657" data-end=3D"2669">image_path</cod=
e> columns</td></tr><tr data-start=3D"2680" data-end=3D"2741"><td data-star=
t=3D"2680" data-end=3D"2697" data-col-size=3D"sm">=E2=9C=85 GitHub/DANDI</t=
d><td data-start=3D"2697" data-end=3D"2741" data-col-size=3D"md"><code data=
-start=3D"2699" data-end=3D"2709">stimuli/</code>, image category mapping f=
iles</td></tr><tr data-start=3D"2742" data-end=3D"2804"><td data-start=3D"2=
742" data-end=3D"2755" data-col-size=3D"sm">=E2=9C=85 Codebase</td><td data=
-start=3D"2755" data-end=3D"2804" data-col-size=3D"md">Sampling logic, stim=
ulus presentation scripts</td></tr><tr data-start=3D"2805" data-end=3D"2870=
"><td data-start=3D"2805" data-end=3D"2815" data-col-size=3D"sm">=E2=9C=85 =
Paper</td><td data-start=3D"2815" data-end=3D"2870" data-col-size=3D"md">Me=
thods section under =E2=80=9CStimuli=E2=80=9D or =E2=80=9CVisual stimuli=E2=
=80=9D</td></tr></tbody></table><div class=3D"sticky end-(--thread-content-=
margin) h-0 self-end select-none"><div class=3D"absolute end-0 flex items-e=
nd" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><bu=
tton class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-tex=
t-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(=
:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-within)]=
:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"n=
one" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fil=
l-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2=
H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.65=
69 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H=
7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C=
20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.4=
4772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15=
 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></s=
pan></div></div></div></div>
<hr data-start=3D"2872" data-end=3D"2875" class=3D"">
<p data-start=3D"2877" data-end=3D"3003" class=3D"">Would you like help ins=
pecting the trial metadata from one of your actual sessions to see what kin=
ds of images the monkey saw?</p></div></div></div></div></div></div></div><=
/div></article><article class=3D"text-token-text-primary w-full" dir=3D"aut=
o" data-testid=3D"conversation-turn-31" data-scroll-anchor=3D"false"><h5 cl=
ass=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 =
[--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--=
spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-c=
ontent-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[=
--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48re=
m] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 m=
d:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=
=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0 =
flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"fle=
x max-w-full flex-col grow"><div data-message-author-role=3D"user" data-mes=
sage-id=3D"ba96eb63-bd4d-483f-8e80-0b795b2992af" dir=3D"auto" class=3D"min-=
h-8 text-message relative flex w-full flex-col items-end gap-2 text-start b=
reak-words whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex=
 w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><div class=
=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-surface ro=
unded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">okay what about 1=
a / 1b</div></div></div></div></div></div></div></div></div></article><arti=
cle class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"co=
nversation-turn-32" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">Chat=
GPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-conten=
t-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72=
rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)">=
<div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content=
-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex =
max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6=
 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div cla=
ss=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-t=
urn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max=
-w-full flex-col grow"><div data-message-author-role=3D"assistant" data-mes=
sage-id=3D"331c4f2e-1ed0-47a6-81d0-3552b5adc45a" dir=3D"auto" class=3D"min-=
h-8 text-message relative flex w-full flex-col items-end gap-2 text-start b=
reak-words whitespace-normal [.text-message+&amp;]:mt-5" data-message-model=
-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden firs=
t:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-wor=
ds dark"><p data-start=3D"0" data-end=3D"181" class=3D"">Awesome=E2=80=94le=
t=E2=80=99s dig into <strong data-start=3D"23" data-end=3D"90">scripts <cod=
e data-start=3D"33" data-end=3D"51">1a_face_specific</code> and <code data-=
start=3D"56" data-end=3D"88">1b_face_specific_match_control</code></strong>=
 and how they relate to <strong data-start=3D"114" data-end=3D"136">stimulu=
s selection</strong> (especially for faces vs. other categories).</p>
<p data-start=3D"183" data-end=3D"308" class=3D"">You already have the big =
picture, so let=E2=80=99s zoom in on what these scripts are doing with rega=
rd to <strong data-start=3D"281" data-end=3D"307">which images were used</s=
trong>.</p>
<hr data-start=3D"310" data-end=3D"313" class=3D"">
<h2 data-start=3D"315" data-end=3D"368" class=3D"">=F0=9F=93=81 <code data-=
start=3D"321" data-end=3D"352">script_1a_face_specific.ipynb</code>: Stimul=
us Usage</h2>
<h3 data-start=3D"370" data-end=3D"390" class=3D"">=F0=9F=94=8D What it doe=
s:</h3>
<p data-start=3D"392" data-end=3D"459" class=3D"">This script is designed t=
o <strong data-start=3D"419" data-end=3D"454">identify face-selective neuro=
ns</strong>, by:</p>
<ul data-start=3D"460" data-end=3D"582">
<li data-start=3D"460" data-end=3D"524" class=3D"">
<p data-start=3D"462" data-end=3D"524" class=3D"">Comparing neural firing r=
ates to <strong data-start=3D"495" data-end=3D"524">face vs. non-face stimu=
li</strong></p>
</li>
<li data-start=3D"525" data-end=3D"582" class=3D"">
<p data-start=3D"527" data-end=3D"582" class=3D"">Measuring a <strong data-=
start=3D"539" data-end=3D"560">selectivity score</strong> (like FSI or d-pr=
ime)</p>
</li>
</ul>
<h3 data-start=3D"584" data-end=3D"614" class=3D"">=F0=9F=92=A1 How it sele=
cts stimuli:</h3>
<pre class=3D"overflow-visible!" data-start=3D"616" data-end=3D"732"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>face_labels =3D [</span><span><span class=3D"hljs-s=
tring">'human_face'</span></span><span>, </span><span><span class=3D"hljs-s=
tring">'monkey_face'</span></span><span>]
nonface_labels =3D [</span><span><span class=3D"hljs-string">'object'</span=
></span><span>, </span><span><span class=3D"hljs-string">'scene'</span></sp=
an><span>, </span><span><span class=3D"hljs-string">'text'</span></span><sp=
an>, </span><span><span class=3D"hljs-string">'artificial'</span></span><sp=
an>]
</span></span></code></div></div></pre>
<p data-start=3D"734" data-end=3D"785" class=3D"">So it uses <strong data-s=
tart=3D"745" data-end=3D"763">trial metadata</strong> to group trials into:=
</p>
<ul data-start=3D"786" data-end=3D"891">
<li data-start=3D"786" data-end=3D"854" class=3D"">
<p data-start=3D"788" data-end=3D"854" class=3D""><strong data-start=3D"788=
" data-end=3D"803">Face trials</strong>: where the stimulus category was la=
beled as a face</p>
</li>
<li data-start=3D"855" data-end=3D"891" class=3D"">
<p data-start=3D"857" data-end=3D"891" class=3D""><strong data-start=3D"857=
" data-end=3D"876">Non-face trials</strong>: anything else</p>
</li>
</ul>
<p data-start=3D"893" data-end=3D"967" class=3D"">Then it computes mean fir=
ing rates across trials per unit for both groups.</p>
<hr data-start=3D"969" data-end=3D"972" class=3D"">
<h3 data-start=3D"974" data-end=3D"1012" class=3D"">=F0=9F=A7=A0 Where does=
 it get these labels?</h3>
<p data-start=3D"1014" data-end=3D"1040" class=3D"">From <code data-start=
=3D"1019" data-end=3D"1039">trials['category']</code>:</p>
<ul data-start=3D"1041" data-end=3D"1236">
<li data-start=3D"1041" data-end=3D"1150" class=3D"">
<p data-start=3D"1043" data-end=3D"1150" class=3D"">This column must have b=
een assigned earlier (probably during session preprocessing or loaded from =
metadata)</p>
</li>
<li data-start=3D"1151" data-end=3D"1236" class=3D"">
<p data-start=3D"1153" data-end=3D"1236" class=3D"">The values (<code data-=
start=3D"1165" data-end=3D"1179">'human_face'</code>, etc.) were probably m=
apped from <code data-start=3D"1213" data-end=3D"1223">image_id</code> at l=
oad time</p>
</li>
</ul>
<p data-start=3D"1238" data-end=3D"1386" class=3D"">So <code data-start=3D"=
1241" data-end=3D"1245">1a</code> is just <strong data-start=3D"1254" data-=
end=3D"1295">grouping trials based on these labels</strong>=E2=80=94it does=
n't choose which images to show, it <strong data-start=3D"1339" data-end=3D=
"1358">uses the labels</strong> already tied to each trial.</p>
<hr data-start=3D"1388" data-end=3D"1391" class=3D"">
<h2 data-start=3D"1393" data-end=3D"1464" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"1399" data-end=3D"1444">script_1b_face_specific_match_control.ip=
ynb</code>: Matched Comparison</h2>
<p data-start=3D"1466" data-end=3D"1594" class=3D"">This script goes furthe=
r=E2=80=94it <strong data-start=3D"1494" data-end=3D"1539">controls for low=
-level visual differences</strong> by comparing responses to <strong data-s=
tart=3D"1566" data-end=3D"1593">matched non-face images</strong>.</p>
<h3 data-start=3D"1596" data-end=3D"1619" class=3D"">=F0=9F=92=A1 What's th=
e idea?</h3>
<ul data-start=3D"1621" data-end=3D"1887">
<li data-start=3D"1621" data-end=3D"1730" class=3D"">
<p data-start=3D"1623" data-end=3D"1730" class=3D"">Some neurons might resp=
ond more to faces simply because faces are high-contrast, centered, or cont=
ain eyes.</p>
</li>
<li data-start=3D"1731" data-end=3D"1887" class=3D"">
<p data-start=3D"1733" data-end=3D"1887" class=3D"">To test whether neurons=
 are <em data-start=3D"1761" data-end=3D"1783">truly face-selective</em>, y=
ou compare them to <strong data-start=3D"1805" data-end=3D"1832">matched co=
ntrol stimuli</strong> (e.g., objects with similar luminance, size, or shap=
e)</p>
</li>
</ul>
<h3 data-start=3D"1889" data-end=3D"1913" class=3D"">=F0=9F=94=A7 How it do=
es that:</h3>
<p data-start=3D"1915" data-end=3D"1961" class=3D"">Usually by selecting no=
n-face images that are:</p>
<ul data-start=3D"1962" data-end=3D"2098">
<li data-start=3D"1962" data-end=3D"1985" class=3D"">
<p data-start=3D"1964" data-end=3D"1985" class=3D"">From the same session</=
p>
</li>
<li data-start=3D"1986" data-end=3D"2061" class=3D"">
<p data-start=3D"1988" data-end=3D"2061" class=3D"">Matched in presentation=
 parameters (duration, timing, maybe gaze pattern)</p>
</li>
<li data-start=3D"2062" data-end=3D"2098" class=3D"">
<p data-start=3D"2064" data-end=3D"2098" class=3D"">Labeled as <code data-s=
tart=3D"2075" data-end=3D"2085">'object'</code> or <code data-start=3D"2089=
" data-end=3D"2098">'scene'</code></p>
</li>
</ul>
<p data-start=3D"2100" data-end=3D"2165" class=3D"">It then re-runs the sam=
e <strong data-start=3D"2125" data-end=3D"2149">selectivity analysis</stron=
g>, but comparing:</p>
<pre class=3D"overflow-visible!" data-start=3D"2166" data-end=3D"2225"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">plaintext</div><div class=3D"sticky top-9"><=
div class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=
=3D"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-toke=
n-main-surface-secondary flex items-center rounded-sm px-2 font-sans text-x=
s"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items=
-center select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.656=
9 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569=
 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H=
19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4=
.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C=
14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curren=
tColor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"clo=
sed"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg w=
idth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4=
 5.5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z=
" fill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" st=
roke-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C=
5.12203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.=
3007 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 =
19.8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.060=
8 19.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20=
 10.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.1192=
9 15 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2=
4513 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.771=
9 5.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linec=
ap=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" s=
troke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-l=
inejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div c=
lass=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! lan=
guage-plaintext"><span><span>(face trials) vs. (matched control trials)
</span></span></code></div></div></pre>
<p data-start=3D"2227" data-end=3D"2317" class=3D"">This lets researchers t=
est <strong data-start=3D"2254" data-end=3D"2288">how robust face selectivi=
ty is</strong> under controlled conditions.</p>
<hr data-start=3D"2319" data-end=3D"2322" class=3D"">
<h2 data-start=3D"2324" data-end=3D"2375" class=3D"">=F0=9F=94=8D Summary: =
What images are being used in 1a/1b?</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"23=
77" data-end=3D"2665" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2377" data-end=3D"2405"><tr data-start=3D"2377" data-end=3D"=
2405"><th data-start=3D"2377" data-end=3D"2386" data-col-size=3D"sm">Script=
</th><th data-start=3D"2386" data-end=3D"2405" data-col-size=3D"lg">Image S=
election</th></tr></thead><tbody data-start=3D"2435" data-end=3D"2665"><tr =
data-start=3D"2435" data-end=3D"2516"><td data-start=3D"2435" data-end=3D"2=
444" data-col-size=3D"sm"><code data-start=3D"2437" data-end=3D"2441">1a</c=
ode></td><td data-start=3D"2444" data-end=3D"2516" data-col-size=3D"lg">Gro=
ups all trials into <strong data-start=3D"2469" data-end=3D"2490">face vs. =
non-face</strong> based on trial category</td></tr><tr data-start=3D"2517" =
data-end=3D"2665"><td data-start=3D"2517" data-end=3D"2526" data-col-size=
=3D"sm"><code data-start=3D"2519" data-end=3D"2523">1b</code></td><td data-=
start=3D"2526" data-end=3D"2665" data-col-size=3D"lg">Selects <strong data-=
start=3D"2536" data-end=3D"2551">face trials</strong> and compares them to =
<strong data-start=3D"2573" data-end=3D"2599">matched control trials</stron=
g> (likely object/scene images that are similar in basic features)</td></tr=
></tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 sel=
f-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D"he=
ight: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"b=
g-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-=
1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]=
:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><sv=
g width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"h=
ttp://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"eveno=
dd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 2=
2 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 1=
4 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.=
6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5=
523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 =
19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.552=
3 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div=
></div></div>
<p data-start=3D"2667" data-end=3D"2751" class=3D"">Both rely on <strong da=
ta-start=3D"2680" data-end=3D"2698">trial metadata</strong> where each imag=
e already has a <strong data-start=3D"2730" data-end=3D"2750"><code data-st=
art=3D"2732" data-end=3D"2742">category</code> label</strong>.</p>
<hr data-start=3D"2753" data-end=3D"2756" class=3D"">
<p data-start=3D"2758" data-end=3D"2923" class=3D"">Would you like help wri=
ting code to explore which image IDs were used as face vs. non-face in <cod=
e data-start=3D"2852" data-end=3D"2856">1a</code>? Or see how many trials t=
here were per category in a real session?</p></div></div></div></div></div>=
</div></div></div></article><article class=3D"text-token-text-primary w-ful=
l" dir=3D"auto" data-testid=3D"conversation-turn-33" data-scroll-anchor=3D"=
false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto =
mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-cont=
ent-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] p=
x-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:32re=
m] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-m=
ax-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text=
-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hid=
den" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-=
full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div=
 class=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"u=
ser" data-message-id=3D"2c0066f8-17ec-4331-8fcc-dda16baf5616" dir=3D"auto" =
class=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2=
 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5"><div =
class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"=
><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message=
-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">so is =
1a just looking at which neurons are firing for the monkey during a trial? =
</div></div></div></div></div></div></div></div></div></article><article cl=
ass=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversa=
tion-turn-34" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT sa=
id:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-marg=
in:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[=
--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div c=
lass=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-w=
idth:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-=
(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group=
/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"=
group/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><=
div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-ful=
l flex-col grow"><div data-message-author-role=3D"assistant" data-message-i=
d=3D"c1154856-a387-4401-8e6b-48a1b0956364" dir=3D"auto" class=3D"min-h-8 te=
xt-message relative flex w-full flex-col items-end gap-2 text-start break-w=
ords whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=
=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-=
[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-words da=
rk"><p data-start=3D"0" data-end=3D"19" class=3D"">Yes=E2=80=94<strong data=
-start=3D"4" data-end=3D"16">exactly!</strong> =F0=9F=8E=AF</p>
<h3 data-start=3D"21" data-end=3D"87" class=3D"">=E2=9C=85 <code data-start=
=3D"27" data-end=3D"58">script_1a_face_specific.ipynb</code> is fundamental=
ly doing this:</h3>
<blockquote data-start=3D"89" data-end=3D"181">
<p data-start=3D"91" data-end=3D"181" class=3D"">=E2=80=9CWhich neurons fir=
e more strongly when the monkey looks at a face image (vs. a non-face)?=E2=
=80=9D</p>
</blockquote>
<p data-start=3D"183" data-end=3D"210" class=3D"">Let=E2=80=99s break it do=
wn simply:</p>
<hr data-start=3D"212" data-end=3D"215" class=3D"">
<h2 data-start=3D"217" data-end=3D"256" class=3D"">=F0=9F=A7=A0 What <code =
data-start=3D"228" data-end=3D"232">1a</code> is doing, conceptually:</h2>
<p data-start=3D"258" data-end=3D"316" class=3D"">For each <strong data-sta=
rt=3D"267" data-end=3D"284">unit (neuron)</strong> and each <strong data-st=
art=3D"294" data-end=3D"303">trial</strong>, the script:</p>
<ol data-start=3D"317" data-end=3D"737">
<li data-start=3D"317" data-end=3D"383" class=3D"">
<p data-start=3D"320" data-end=3D"383" class=3D"">Checks what kind of image=
 was shown (from <code data-start=3D"362" data-end=3D"382">trials['category=
']</code>)</p>
</li>
<li data-start=3D"384" data-end=3D"445" class=3D"">
<p data-start=3D"387" data-end=3D"445" class=3D"">Looks at the <strong data=
-start=3D"400" data-end=3D"415">firing rate</strong> of the unit during tha=
t trial</p>
</li>
<li data-start=3D"446" data-end=3D"577" class=3D"">
<p data-start=3D"449" data-end=3D"471" class=3D"">Separates trials into:</p=
>
<ul data-start=3D"475" data-end=3D"577">
<li data-start=3D"475" data-end=3D"524" class=3D"">
<p data-start=3D"477" data-end=3D"524" class=3D""><strong data-start=3D"477=
" data-end=3D"492">Face trials</strong> (e.g., human_face, monkey_face)</p>
</li>
<li data-start=3D"528" data-end=3D"577" class=3D"">
<p data-start=3D"530" data-end=3D"577" class=3D""><strong data-start=3D"530=
" data-end=3D"549">Non-face trials</strong> (e.g., object, scene, text)</p>
</li>
</ul>
</li>
<li data-start=3D"578" data-end=3D"629" class=3D"">
<p data-start=3D"581" data-end=3D"629" class=3D"">Averages firing rates acr=
oss trials of each type</p>
</li>
<li data-start=3D"630" data-end=3D"737" class=3D"">
<p data-start=3D"633" data-end=3D"675" class=3D"">Computes a <strong data-s=
tart=3D"644" data-end=3D"665">selectivity score</strong> per unit:</p>
<ul data-start=3D"679" data-end=3D"737">
<li data-start=3D"679" data-end=3D"737" class=3D"">
<p data-start=3D"681" data-end=3D"737" class=3D"">This tells us if the neur=
on prefers faces over non-faces</p>
</li>
</ul>
</li>
</ol>
<hr data-start=3D"739" data-end=3D"742" class=3D"">
<h3 data-start=3D"744" data-end=3D"772" class=3D"">=F0=9F=94=AC What data i=
t=E2=80=99s using:</h3>
<ul data-start=3D"774" data-end=3D"923">
<li data-start=3D"774" data-end=3D"849" class=3D"">
<p data-start=3D"776" data-end=3D"849" class=3D"">From each trial:<br data-=
start=3D"792" data-end=3D"795">
<code data-start=3D"797" data-end=3D"813">image_category</code>, <code data=
-start=3D"815" data-end=3D"825">image_id</code>, maybe <code data-start=3D"=
833" data-end=3D"849">stimulus_onset</code></p>
</li>
<li data-start=3D"851" data-end=3D"923" class=3D"">
<p data-start=3D"853" data-end=3D"923" class=3D"">From each unit:
<code data-start=3D"871" data-end=3D"885">spike counts</code> or <code data=
-start=3D"889" data-end=3D"913">spike density function</code> over time</p>
</li>
</ul>
<p data-start=3D"925" data-end=3D"1029" class=3D"">So yes=E2=80=94it=E2=80=
=99s <strong data-start=3D"937" data-end=3D"998">analyzing firing patterns =
during the image viewing window</strong>, grouped by the stimulus type.</p>
<hr data-start=3D"1031" data-end=3D"1034" class=3D"">
<h3 data-start=3D"1036" data-end=3D"1058" class=3D"">=F0=9F=A7=AA A real ex=
ample:</h3>
<p data-start=3D"1060" data-end=3D"1070" class=3D"">Let=E2=80=99s say:</p>
<ul data-start=3D"1071" data-end=3D"1212">
<li data-start=3D"1071" data-end=3D"1169" class=3D"">
<p data-start=3D"1073" data-end=3D"1169" class=3D"">Neuron A fires <strong =
data-start=3D"1088" data-end=3D"1105">15 spikes/sec</strong> during face tr=
ials, and <strong data-start=3D"1130" data-end=3D"1146">7 spikes/sec</stron=
g> during non-face trials</p>
</li>
<li data-start=3D"1170" data-end=3D"1212" class=3D"">
<p data-start=3D"1172" data-end=3D"1212" class=3D"">Neuron B fires <strong =
data-start=3D"1187" data-end=3D"1203">5 spikes/sec</strong> for both</p>
</li>
</ul>
<p data-start=3D"1214" data-end=3D"1219" class=3D"">Then:</p>
<ul data-start=3D"1220" data-end=3D"1314">
<li data-start=3D"1220" data-end=3D"1278" class=3D"">
<p data-start=3D"1222" data-end=3D"1278" class=3D"">Neuron A gets a high <s=
trong data-start=3D"1243" data-end=3D"1275">face selectivity index (FSI)</s=
trong> =E2=9C=94=EF=B8=8F</p>
</li>
<li data-start=3D"1279" data-end=3D"1314" class=3D"">
<p data-start=3D"1281" data-end=3D"1314" class=3D"">Neuron B gets a near-ze=
ro score =E2=9D=8C</p>
</li>
</ul>
<hr data-start=3D"1316" data-end=3D"1319" class=3D"">
<h3 data-start=3D"1321" data-end=3D"1360" class=3D"">=F0=9F=8E=AF What is t=
he output of script 1a?</h3>
<p data-start=3D"1362" data-end=3D"1375" class=3D"">A table like:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"13=
77" data-end=3D"1663" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1377" data-end=3D"1447"><tr data-start=3D"1377" data-end=3D"=
1447"><th data-start=3D"1377" data-end=3D"1389" data-col-size=3D"sm">neuron=
_id</th><th data-start=3D"1389" data-end=3D"1399" data-col-size=3D"sm">sess=
ion</th><th data-start=3D"1399" data-end=3D"1411" data-col-size=3D"sm">face=
_rate</th><th data-start=3D"1411" data-end=3D"1426" data-col-size=3D"sm">no=
nface_rate</th><th data-start=3D"1426" data-end=3D"1447" data-col-size=3D"s=
m">selectivity_score</th></tr></thead><tbody data-start=3D"1520" data-end=
=3D"1663"><tr data-start=3D"1520" data-end=3D"1591"><td data-start=3D"1520"=
 data-end=3D"1532" data-col-size=3D"sm">A</td><td data-start=3D"1532" data-=
end=3D"1542" data-col-size=3D"sm">s001</td><td data-start=3D"1542" data-end=
=3D"1554" data-col-size=3D"sm">15.2</td><td data-start=3D"1554" data-end=3D=
"1570" data-col-size=3D"sm">6.8</td><td data-start=3D"1570" data-end=3D"159=
1" data-col-size=3D"sm">0.38</td></tr><tr data-start=3D"1592" data-end=3D"1=
663"><td data-start=3D"1592" data-end=3D"1604" data-col-size=3D"sm">B</td><=
td data-start=3D"1604" data-end=3D"1614" data-col-size=3D"sm">s001</td><td =
data-start=3D"1614" data-end=3D"1626" data-col-size=3D"sm">5.0</td><td data=
-start=3D"1626" data-end=3D"1642" data-col-size=3D"sm">5.1</td><td data-sta=
rt=3D"1642" data-end=3D"1663" data-col-size=3D"sm">0.00</td></tr></tbody></=
table><div class=3D"sticky end-(--thread-content-margin) h-0 self-end selec=
t-none"><div class=3D"absolute end-0 flex items-end" style=3D"height: 32.89=
06px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-=
primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-s=
m p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:pointer-ev=
ents-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"=
24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w=
3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-ru=
le=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 2=
2 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34=
315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8=
.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H=
10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.4=
4772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z=
" fill=3D"currentColor"></path></svg></button></span></div></div></div></di=
v>
<hr data-start=3D"1665" data-end=3D"1668" class=3D"">
<h2 data-start=3D"1670" data-end=3D"1681" class=3D"">=E2=9C=85 TL;DR:</h2>
<p data-start=3D"1682" data-end=3D"1701" class=3D"">Yes=E2=80=94<code data-=
start=3D"1686" data-end=3D"1697">script 1a</code> is:</p>
<blockquote data-start=3D"1702" data-end=3D"1863">
<p data-start=3D"1704" data-end=3D"1863" class=3D"">Measuring <strong data-=
start=3D"1714" data-end=3D"1762">how much each neuron fires during each tri=
al</strong>, grouped by stimulus type (face vs. non-face), and computing ho=
w selective that neuron is for faces.</p>
</blockquote>
<hr data-start=3D"1865" data-end=3D"1868" class=3D"">
<p data-start=3D"1870" data-end=3D"1898" class=3D"">If you want, I can help=
 you:</p>
<ul data-start=3D"1899" data-end=3D"2081" data-is-last-node=3D"" data-is-on=
ly-node=3D"">
<li data-start=3D"1899" data-end=3D"1955" class=3D"">
<p data-start=3D"1901" data-end=3D"1955" class=3D"">Visualize a neuron=E2=
=80=99s firing pattern across face trials</p>
</li>
<li data-start=3D"1956" data-end=3D"1987" class=3D"">
<p data-start=3D"1958" data-end=3D"1987" class=3D"">Interpret a selectivity=
 score</p>
</li>
<li data-start=3D"1988" data-end=3D"2081" class=3D"">
<p data-start=3D"1990" data-end=3D"2081" class=3D"">Look at the actual impl=
ementation of the <code data-start=3D"2031" data-end=3D"2059">compute_face_=
selectivity()</code> function used in <code data-start=3D"2077" data-end=3D=
"2081" data-is-last-node=3D"">1a</code></p>
</li>
</ul></div></div></div></div></div></div></div></div></article><article cla=
ss=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversat=
ion-turn-35" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</=
h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--=
spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thr=
ead-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"re=
lative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow=
"><div data-message-author-role=3D"user" data-message-id=3D"345ec0ad-2cea-4=
52f-a4e0-94f773c07498" dir=3D"auto" class=3D"min-h-8 text-message relative =
flex w-full flex-col items-end gap-2 text-start break-words whitespace-norm=
al [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 emp=
ty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[var(--us=
er-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div =
class=3D"whitespace-pre-wrap">where is it getting the neurons from </div></=
div></div></div></div></div></div></div></div></article><article class=3D"t=
ext-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-tur=
n-36" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6>=
<div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spa=
cing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread=
-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"=
[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40r=
em] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--threa=
d-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-me=
ssages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/co=
nversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div clas=
s=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-c=
ol grow"><div data-message-author-role=3D"assistant" data-message-id=3D"a14=
608ee-b1d2-4333-9df2-9b0db0a34f69" dir=3D"auto" class=3D"min-h-8 text-messa=
ge relative flex w-full flex-col items-end gap-2 text-start break-words whi=
tespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4=
o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><d=
iv class=3D"markdown prose dark:prose-invert w-full break-words dark"><p da=
ta-start=3D"0" data-end=3D"126" class=3D"">Ahhh perfect question=E2=80=94le=
t=E2=80=99s go straight to the core of how <code data-start=3D"59" data-end=
=3D"70">script_1a</code> gets <strong data-start=3D"76" data-end=3D"87">neu=
rons</strong> (aka "units") and knows what they are.</p>
<hr data-start=3D"128" data-end=3D"131" class=3D"">
<h2 data-start=3D"133" data-end=3D"173" class=3D"">=F0=9F=A7=A0 Where are t=
he neurons coming from?</h2>
<h3 data-start=3D"175" data-end=3D"232" class=3D"">=F0=9F=91=89 From the <s=
trong data-start=3D"191" data-end=3D"207">session data</strong>, typically =
loaded using:</h3>
<pre class=3D"overflow-visible!" data-start=3D"234" data-end=3D"277"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>dataset =3D load_dataset(</span><span><span class=
=3D"hljs-string">'all'</span></span><span>)
</span></span></code></div></div></pre>
<p data-start=3D"279" data-end=3D"321" class=3D"">This function (<code data=
-start=3D"294" data-end=3D"308">load_dataset</code>) comes from:</p>
<pre class=3D"overflow-visible!" data-start=3D"322" data-end=3D"376"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">from</span></span><spa=
n> utils.load_data </span><span><span class=3D"hljs-keyword">import</span><=
/span><span> load_dataset
</span></span></code></div></div></pre>
<p data-start=3D"378" data-end=3D"530" class=3D"">It loads a custom data st=
ructure (likely a dictionary or <code data-start=3D"435" data-end=3D"451">x=
array.Dataset</code>) for each <strong data-start=3D"462" data-end=3D"473">=
session</strong>, and <strong data-start=3D"479" data-end=3D"521">each sess=
ion contains multiple neurons</strong> (units).</p>
<p data-start=3D"532" data-end=3D"547" class=3D"">So when you do:</p>
<pre class=3D"overflow-visible!" data-start=3D"549" data-end=3D"623"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> session </span><span><span class=3D"hljs-keyword">in</span></span><span> =
dataset.sessions:
    data =3D dataset[session]
</span></span></code></div></div></pre>
<p data-start=3D"625" data-end=3D"675" class=3D"">You=E2=80=99re now inside=
 <strong data-start=3D"643" data-end=3D"668">one recording session</strong>=
, with:</p>
<pre class=3D"overflow-visible!" data-start=3D"677" data-end=3D"888"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>data[</span><span><span class=3D"hljs-string">"sdf"=
</span></span><span>]         </span><span><span class=3D"hljs-comment"># s=
moothed firing rates: [trial, unit, time]</span></span><span>
data[</span><span><span class=3D"hljs-string">"trials"</span></span><span>]=
      </span><span><span class=3D"hljs-comment"># trial metadata (image, ca=
tegory, etc.)</span></span><span>
data[</span><span><span class=3D"hljs-string">"unit_info"</span></span><spa=
n>]   </span><span><span class=3D"hljs-comment"># optional: electrode locat=
ion, area, quality, etc.</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"890" data-end=3D"950" class=3D"">The <strong data-start=3D=
"894" data-end=3D"914">neural responses</strong> come from <code data-start=
=3D"925" data-end=3D"938">data["sdf"]</code>, which has:</p>
<pre class=3D"overflow-visible!" data-start=3D"952" data-end=3D"1006"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>Shape: [n_trials, n_units, n_timepoints]
</span></span></code></div></div></pre>
<p data-start=3D"1008" data-end=3D"1011" class=3D"">So:</p>
<ul data-start=3D"1012" data-end=3D"1121">
<li data-start=3D"1012" data-end=3D"1072" class=3D"">
<p data-start=3D"1014" data-end=3D"1072" class=3D""><code data-start=3D"101=
4" data-end=3D"1023">n_units</code> =3D the number of neurons recorded in t=
hat session</p>
</li>
<li data-start=3D"1073" data-end=3D"1121" class=3D"">
<p data-start=3D"1075" data-end=3D"1121" class=3D"">Each "neuron" is a row =
in the second dimension</p>
</li>
</ul>
<hr data-start=3D"1123" data-end=3D"1126" class=3D"">
<h3 data-start=3D"1128" data-end=3D"1183" class=3D"">=F0=9F=94=8E But where=
 were those neurons originally defined?</h3>
<p data-start=3D"1185" data-end=3D"1210" class=3D"">In earlier scripts, lik=
e:</p>
<h4 data-start=3D"1212" data-end=3D"1255" class=3D"">=F0=9F=A7=B1 <code dat=
a-start=3D"1220" data-end=3D"1255">script_0a_shared_processing.ipynb</code>=
</h4>
<p data-start=3D"1257" data-end=3D"1269" class=3D"">That script:</p>
<ul data-start=3D"1270" data-end=3D"1545">
<li data-start=3D"1270" data-end=3D"1298" class=3D"">
<p data-start=3D"1272" data-end=3D"1298" class=3D"">Loads <strong data-star=
t=3D"1278" data-end=3D"1298">raw spike trains</strong></p>
</li>
<li data-start=3D"1299" data-end=3D"1331" class=3D"">
<p data-start=3D"1301" data-end=3D"1331" class=3D"">Aligns them to stimulus=
 events</p>
</li>
<li data-start=3D"1332" data-end=3D"1390" class=3D"">
<p data-start=3D"1334" data-end=3D"1390" class=3D"">Bins or smooths them in=
to firing rates (via <code data-start=3D"1378" data-end=3D"1389">script_0b<=
/code>)</p>
</li>
<li data-start=3D"1391" data-end=3D"1545" class=3D"">
<p data-start=3D"1393" data-end=3D"1417" class=3D"">Then packages them into=
:</p>
<pre class=3D"overflow-visible!" data-start=3D"1420" data-end=3D"1545"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>{
  </span><span><span class=3D"hljs-string">"sdf"</span></span><span>: [tria=
l x unit x time],
  </span><span><span class=3D"hljs-string">"trials"</span></span><span>: tr=
ial metadata,
  </span><span><span class=3D"hljs-string">"unit_info"</span></span><span>:=
 optional neuron info
}
</span></span></code></div></div></pre>
</li>
</ul>
<p data-start=3D"1547" data-end=3D"1584" class=3D"">That=E2=80=99s what <co=
de data-start=3D"1559" data-end=3D"1563">1a</code> is using downstream.</p>
<hr data-start=3D"1586" data-end=3D"1589" class=3D"">
<h3 data-start=3D"1591" data-end=3D"1640" class=3D"">=F0=9F=A7=AC What is a=
 =E2=80=9Cneuron=E2=80=9D or =E2=80=9Cunit=E2=80=9D in this data?</h3>
<p data-start=3D"1642" data-end=3D"1667" class=3D"">Each unit corresponds t=
o:</p>
<ul data-start=3D"1668" data-end=3D"1798">
<li data-start=3D"1668" data-end=3D"1722" class=3D"">
<p data-start=3D"1670" data-end=3D"1722" class=3D"">A <strong data-start=3D=
"1672" data-end=3D"1689">single neuron</strong> (isolated via spike sorting=
), or</p>
</li>
<li data-start=3D"1723" data-end=3D"1798" class=3D"">
<p data-start=3D"1725" data-end=3D"1798" class=3D"">A <strong data-start=3D=
"1727" data-end=3D"1756">multi-unit activity trace</strong> (several neuron=
s from the same electrode)</p>
</li>
</ul>
<p data-start=3D"1800" data-end=3D"1899" class=3D"">Each one is recorded fr=
om a <strong data-start=3D"1828" data-end=3D"1848">specific channel</strong=
> on a neural probe implanted in the monkey=E2=80=99s brain.</p>
<p data-start=3D"1901" data-end=3D"1966" class=3D"">Sometimes there's a <co=
de data-start=3D"1921" data-end=3D"1932">unit_info</code> or <code data-sta=
rt=3D"1936" data-end=3D"1945">unit_id</code> structure that says:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"19=
68" data-end=3D"2177" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1968" data-end=3D"2009"><tr data-start=3D"1968" data-end=3D"=
2009"><th data-start=3D"1968" data-end=3D"1978" data-col-size=3D"sm">unit_i=
d</th><th data-start=3D"1978" data-end=3D"1988" data-col-size=3D"sm">channe=
l</th><th data-start=3D"1988" data-end=3D"1995" data-col-size=3D"sm">area</=
th><th data-start=3D"1995" data-end=3D"2009" data-col-size=3D"sm">hemispher=
e</th></tr></thead><tbody data-start=3D"2052" data-end=3D"2177"><tr data-st=
art=3D"2052" data-end=3D"2093"><td data-start=3D"2052" data-end=3D"2062" da=
ta-col-size=3D"sm">0</td><td data-start=3D"2062" data-end=3D"2072" data-col=
-size=3D"sm">5</td><td data-start=3D"2072" data-end=3D"2079" data-col-size=
=3D"sm">V4</td><td data-start=3D"2079" data-end=3D"2093" data-col-size=3D"s=
m">Left</td></tr><tr data-start=3D"2094" data-end=3D"2135"><td data-start=
=3D"2094" data-end=3D"2104" data-col-size=3D"sm">1</td><td data-start=3D"21=
04" data-end=3D"2114" data-col-size=3D"sm">7</td><td data-start=3D"2114" da=
ta-end=3D"2121" data-col-size=3D"sm">IT</td><td data-start=3D"2121" data-en=
d=3D"2135" data-col-size=3D"sm">Right</td></tr><tr data-start=3D"2136" data=
-end=3D"2177"><td data-start=3D"2136" data-end=3D"2146" data-col-size=3D"sm=
">...</td><td data-start=3D"2146" data-end=3D"2156" data-col-size=3D"sm">..=
.</td><td data-start=3D"2156" data-end=3D"2163" data-col-size=3D"sm">...</t=
d><td data-start=3D"2163" data-end=3D"2177" data-col-size=3D"sm">...</td></=
tr></tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 s=
elf-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D"=
height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D=
"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary m=
y-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within=
)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><=
svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D=
"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"eve=
nodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2=
 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22=
 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C1=
5.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19=
.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C=
4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5=
523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></d=
iv></div></div>
<hr data-start=3D"2179" data-end=3D"2182" class=3D"">
<h3 data-start=3D"2184" data-end=3D"2196" class=3D"">=F0=9F=93=A6 TL;DR</h3=
>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"21=
98" data-end=3D"2606" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2198" data-end=3D"2234"><tr data-start=3D"2198" data-end=3D"=
2234"><th data-start=3D"2198" data-end=3D"2224" data-col-size=3D"sm">Questi=
on</th><th data-start=3D"2224" data-end=3D"2234" data-col-size=3D"md">Answe=
r</th></tr></thead><tbody data-start=3D"2272" data-end=3D"2606"><tr data-st=
art=3D"2272" data-end=3D"2346"><td data-start=3D"2272" data-end=3D"2298" da=
ta-col-size=3D"sm">Where are neurons from?</td><td data-start=3D"2298" data=
-end=3D"2346" data-col-size=3D"md"><code data-start=3D"2300" data-end=3D"23=
21">load_dataset('all')</code> loads them per session</td></tr><tr data-sta=
rt=3D"2347" data-end=3D"2423"><td data-start=3D"2347" data-end=3D"2375" dat=
a-col-size=3D"sm">Where is the data stored?</td><td data-start=3D"2375" dat=
a-end=3D"2423" data-col-size=3D"md"><code data-start=3D"2377" data-end=3D"2=
390">data['sdf']</code> =3D firing rates for each neuron</td></tr><tr data-=
start=3D"2424" data-end=3D"2521"><td data-start=3D"2424" data-end=3D"2448" =
data-col-size=3D"sm">Where was it created?</td><td data-start=3D"2448" data=
-end=3D"2521" data-col-size=3D"md">In <code data-start=3D"2453" data-end=3D=
"2481">0a_shared_processing.ipynb</code> and <code data-start=3D"2486" data=
-end=3D"2519">0b_spike_density_function.ipynb</code></td></tr><tr data-star=
t=3D"2522" data-end=3D"2606"><td data-start=3D"2522" data-end=3D"2539" data=
-col-size=3D"sm">What are they?</td><td data-start=3D"2539" data-end=3D"260=
6" data-col-size=3D"md">Electrodes recording spikes from individual or mult=
iple neurons</td></tr></tbody></table><div class=3D"sticky end-(--thread-co=
ntent-margin) h-0 self-end select-none"><div class=3D"absolute end-0 flex i=
tems-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"close=
d"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-tok=
en-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover=
):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-wi=
thin)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fil=
l=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><pa=
th fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 =
2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17=
 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 =
7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20=
 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9=
 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19=
V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></butt=
on></span></div></div></div></div>
<hr data-start=3D"2608" data-end=3D"2611" class=3D"">
<p data-start=3D"2613" data-end=3D"2751" class=3D"">Want to look inside a s=
ession and inspect the number of neurons, or their properties like brain re=
gion or spike count? I can show you how!</p></div></div></div></div></div><=
/div></div></div></article><article class=3D"text-token-text-primary w-full=
" dir=3D"auto" data-testid=3D"conversation-turn-37" data-scroll-anchor=3D"f=
alse"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto m=
x-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-conte=
nt-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px=
-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem=
] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-ma=
x-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-=
base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidd=
en" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-f=
ull min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div =
class=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"us=
er" data-message-id=3D"ffbaec9b-3f92-48d6-adba-a8ba1b5cb5c3" dir=3D"auto" c=
lass=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 =
text-start break-words whitespace-normal [.text-message+&amp;]:mt-5"><div c=
lass=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start">=
<div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-=
surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">okay go=
 through the next script</div></div></div></div></div></div></div></div></d=
iv></article><article class=3D"text-token-text-primary w-full" dir=3D"auto"=
 data-testid=3D"conversation-turn-38" data-scroll-anchor=3D"false"><h6 clas=
s=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-=
5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:=
--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread=
-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]=
:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48=
rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4=
 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabind=
ex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-=
0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div=
 class=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"a=
ssistant" data-message-id=3D"51c1c327-8027-4628-89d0-3f1de42e566a" dir=3D"a=
uto" class=3D"min-h-8 text-message relative flex w-full flex-col items-end =
gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5" =
data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1=
 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-inver=
t w-full break-words dark"><p data-start=3D"0" data-end=3D"54" class=3D"">G=
reat! Let's move on to the <strong data-start=3D"28" data-end=3D"43">next s=
cript</strong>, which is:</p>
<h2 data-start=3D"56" data-end=3D"107" class=3D"">=F0=9F=93=81 <code data-s=
tart=3D"62" data-end=3D"107">script_1b_face_specific_match_control.ipynb</c=
ode></h2>
<p data-start=3D"109" data-end=3D"294" class=3D"">This one builds on top of=
 <code data-start=3D"135" data-end=3D"146">script_1a</code>, but goes a ste=
p further=E2=80=94it aims to <strong data-start=3D"183" data-end=3D"218">co=
ntrol for potential confounds</strong> in face selectivity by comparing fac=
e trials to <strong data-start=3D"267" data-end=3D"293">matched control ima=
ges</strong>.</p>
<hr data-start=3D"296" data-end=3D"299" class=3D"">
<h3 data-start=3D"301" data-end=3D"313" class=3D"">=F0=9F=8E=AF Goal:</h3>
<p data-start=3D"314" data-end=3D"504" class=3D"">To test whether neurons t=
hat appear face-selective in <code data-start=3D"368" data-end=3D"372">1a</=
code> are <strong data-start=3D"377" data-end=3D"406">truly selective for f=
aces</strong>, or just responding to some <strong data-start=3D"435" data-e=
nd=3D"464">low-level visual features</strong> (e.g., contrast, shape, gaze =
patterns).</p>
<hr data-start=3D"506" data-end=3D"509" class=3D"">
<h2 data-start=3D"511" data-end=3D"550" class=3D"">=F0=9F=94=8D Let=E2=80=
=99s go through it step by step:</h2>
<hr data-start=3D"552" data-end=3D"555" class=3D"">
<h3 data-start=3D"557" data-end=3D"575" class=3D""><strong data-start=3D"56=
1" data-end=3D"575">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"577" data-end=3D"710"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> xarray=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> xr
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"712" data-end=3D"865" class=3D"">Standard libraries again=
=E2=80=94this time including <code data-start=3D"757" data-end=3D"765">pick=
le</code>, which suggests we'll be loading previously saved data (likely th=
e output of <code data-start=3D"843" data-end=3D"847">1a</code> or <code da=
ta-start=3D"851" data-end=3D"855">0x</code> scripts).</p>
<hr data-start=3D"867" data-end=3D"870" class=3D"">
<h3 data-start=3D"872" data-end=3D"916" class=3D""><strong data-start=3D"87=
6" data-end=3D"916">2. Load precomputed firing rate data</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"918" data-end=3D"1034"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">from</span></span><spa=
n> utils.load_data </span><span><span class=3D"hljs-keyword">import</span><=
/span><span> load_dataset
</span><span><span class=3D"hljs-keyword">from</span></span><span> utils.co=
mpute </span><span><span class=3D"hljs-keyword">import</span></span><span> =
compute_matched_control_selectivity
</span></span></code></div></div></pre>
<ul data-start=3D"1036" data-end=3D"1233">
<li data-start=3D"1036" data-end=3D"1096" class=3D"">
<p data-start=3D"1038" data-end=3D"1096" class=3D""><code data-start=3D"103=
8" data-end=3D"1059">load_dataset('all')</code>: loads session data, same a=
s in <code data-start=3D"1092" data-end=3D"1096">1a</code></p>
</li>
<li data-start=3D"1097" data-end=3D"1233" class=3D"">
<p data-start=3D"1099" data-end=3D"1233" class=3D""><code data-start=3D"109=
9" data-end=3D"1136">compute_matched_control_selectivity</code>: this is a =
custom function that does the core comparison between face and matched-cont=
rol trials</p>
</li>
</ul>
<hr data-start=3D"1235" data-end=3D"1238" class=3D"">
<h3 data-start=3D"1240" data-end=3D"1269" class=3D""><strong data-start=3D"=
1244" data-end=3D"1269">3. Initialize dataset</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1271" data-end=3D"1327"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>dataset =3D load_dataset(</span><span><span class=
=3D"hljs-string">'all'</span></span><span>)
results =3D []
</span></span></code></div></div></pre>
<ul data-start=3D"1329" data-end=3D"1412">
<li data-start=3D"1329" data-end=3D"1361" class=3D"">
<p data-start=3D"1331" data-end=3D"1361" class=3D"">Pulls all sessions into=
 memory</p>
</li>
<li data-start=3D"1362" data-end=3D"1412" class=3D"">
<p data-start=3D"1364" data-end=3D"1412" class=3D"">Prepares a list to stor=
e results across sessions</p>
</li>
</ul>
<hr data-start=3D"1414" data-end=3D"1417" class=3D"">
<h3 data-start=3D"1419" data-end=3D"1451" class=3D""><strong data-start=3D"=
1423" data-end=3D"1451">4. Loop through sessions</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1453" data-end=3D"1583"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> session </span><span><span class=3D"hljs-keyword">in</span></span><span> =
tqdm(dataset.sessions):
    data =3D dataset[session]
    trials =3D data[</span><span><span class=3D"hljs-string">"trials"</span=
></span><span>]
    sdf =3D data[</span><span><span class=3D"hljs-string">"sdf"</span></spa=
n><span>]
</span></span></code></div></div></pre>
<p data-start=3D"1585" data-end=3D"1602" class=3D"">For each session:</p>
<ul data-start=3D"1603" data-end=3D"1717">
<li data-start=3D"1603" data-end=3D"1634" class=3D"">
<p data-start=3D"1605" data-end=3D"1634" class=3D"">Get trial metadata (<co=
de data-start=3D"1625" data-end=3D"1633">trials</code>)</p>
</li>
<li data-start=3D"1635" data-end=3D"1717" class=3D"">
<p data-start=3D"1637" data-end=3D"1717" class=3D"">Get smoothed firing dat=
a (<code data-start=3D"1663" data-end=3D"1668">sdf</code>) with shape: <cod=
e data-start=3D"1682" data-end=3D"1717">[n_trials, n_units, n_timepoints]</=
code></p>
</li>
</ul>
<hr data-start=3D"1719" data-end=3D"1722" class=3D"">
<h3 data-start=3D"1724" data-end=3D"1773" class=3D""><strong data-start=3D"=
1728" data-end=3D"1773">5. Select face vs. matched-control trials</strong><=
/h3>
<p data-start=3D"1775" data-end=3D"1824" class=3D"">Inside the loop, you=E2=
=80=99ll typically see logic like:</p>
<pre class=3D"overflow-visible!" data-start=3D"1826" data-end=3D"2081"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>face_trials =3D trials[trials[</span><span><span cl=
ass=3D"hljs-string">'category'</span></span><span>].isin([</span><span><spa=
n class=3D"hljs-string">'human_face'</span></span><span>, </span><span><spa=
n class=3D"hljs-string">'monkey_face'</span></span><span>])]
nonface_trials =3D trials[trials[</span><span><span class=3D"hljs-string">'=
category'</span></span><span>].isin([</span><span><span class=3D"hljs-strin=
g">'object'</span></span><span>, </span><span><span class=3D"hljs-string">'=
scene'</span></span><span>])]

</span><span><span class=3D"hljs-comment"># Now match them:</span></span><s=
pan>
matched_nonface_trials =3D match_trials_to_faces(face_trials, nonface_trial=
s)
</span></span></code></div></div></pre>
<p data-start=3D"2083" data-end=3D"2104" class=3D"">This step is crucial:</=
p>
<ul data-start=3D"2105" data-end=3D"2383">
<li data-start=3D"2105" data-end=3D"2182" class=3D"">
<p data-start=3D"2107" data-end=3D"2182" class=3D"">The goal is to find <st=
rong data-start=3D"2127" data-end=3D"2146">non-face images</strong> that ar=
e <strong data-start=3D"2156" data-end=3D"2167">similar</strong> to face im=
ages</p>
</li>
<li data-start=3D"2183" data-end=3D"2383" class=3D"">
<p data-start=3D"2185" data-end=3D"2211" class=3D"">The match may be based =
on:</p>
<ul data-start=3D"2214" data-end=3D"2383">
<li data-start=3D"2214" data-end=3D"2264" class=3D"">
<p data-start=3D"2216" data-end=3D"2264" class=3D"">Image-level features (e=
.g., contrast, luminance)</p>
</li>
<li data-start=3D"2267" data-end=3D"2330" class=3D"">
<p data-start=3D"2269" data-end=3D"2330" class=3D"">Trial-level features (e=
.g., gaze position, fixation duration)</p>
</li>
<li data-start=3D"2333" data-end=3D"2383" class=3D"">
<p data-start=3D"2335" data-end=3D"2383" class=3D"">Or just sampling evenly=
 from non-face categories</p>
</li>
</ul>
</li>
</ul>
<p data-start=3D"2385" data-end=3D"2437" class=3D"">This keeps everything <=
strong data-start=3D"2407" data-end=3D"2419">balanced</strong> and reduces =
bias.</p>
<hr data-start=3D"2439" data-end=3D"2442" class=3D"">
<h3 data-start=3D"2444" data-end=3D"2499" class=3D""><strong data-start=3D"=
2448" data-end=3D"2499">6. Compute face vs. matched-control selectivity</st=
rong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2501" data-end=3D"2675"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>selectivity =3D compute_matched_control_selectivity=
(sdf, trials, face_trials, matched_nonface_trials)
selectivity[</span><span><span class=3D"hljs-string">'session'</span></span=
><span>] =3D session
results.append(selectivity)
</span></span></code></div></div></pre>
<p data-start=3D"2677" data-end=3D"2720" class=3D"">This part is analogous =
to <code data-start=3D"2703" data-end=3D"2714">script_1a</code>, but:</p>
<ul data-start=3D"2721" data-end=3D"2923">
<li data-start=3D"2721" data-end=3D"2811" class=3D"">
<p data-start=3D"2723" data-end=3D"2811" class=3D"">Instead of comparing <s=
trong data-start=3D"2744" data-end=3D"2769">face vs. all non-face</strong>,=
 it compares <strong data-start=3D"2783" data-end=3D"2811">face vs. matched=
-control</strong></p>
</li>
<li data-start=3D"2812" data-end=3D"2923" class=3D"">
<p data-start=3D"2814" data-end=3D"2923" class=3D"">The goal is to see whic=
h neurons remain selective for faces <strong data-start=3D"2874" data-end=
=3D"2923">even after controlling for low-level features</strong></p>
</li>
</ul>
<hr data-start=3D"2925" data-end=3D"2928" class=3D"">
<h3 data-start=3D"2930" data-end=3D"2965" class=3D""><strong data-start=3D"=
2934" data-end=3D"2965">7. Combine and save results</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2967" data-end=3D"3107"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>results_df =3D pd.concat(results, ignore_index=3D</=
span><span><span class=3D"hljs-literal">True</span></span><span>)
results_df.to_csv(</span><span><span class=3D"hljs-string">"output/face_sel=
ectivity_match_control.csv"</span></span><span>, index=3D</span><span><span=
 class=3D"hljs-literal">False</span></span><span>)
</span></span></code></div></div></pre>
<p data-start=3D"3109" data-end=3D"3124" class=3D"">This gives you:</p>
<ul data-start=3D"3125" data-end=3D"3302">
<li data-start=3D"3125" data-end=3D"3171" class=3D"">
<p data-start=3D"3127" data-end=3D"3171" class=3D"">A dataframe of selectiv=
ity scores per neuron</p>
</li>
<li data-start=3D"3172" data-end=3D"3209" class=3D"">
<p data-start=3D"3174" data-end=3D"3209" class=3D"">Based on the <strong da=
ta-start=3D"3187" data-end=3D"3209">matched comparison</strong></p>
</li>
<li data-start=3D"3210" data-end=3D"3302" class=3D"">
<p data-start=3D"3212" data-end=3D"3302" class=3D"">Saved for later use in =
downstream analyses (like self-consistency, cross-validation, etc.)</p>
</li>
</ul>
<hr data-start=3D"3304" data-end=3D"3307" class=3D"">
<h2 data-start=3D"3309" data-end=3D"3348" class=3D"">=E2=9C=85 Summary: Wha=
t does <code data-start=3D"3333" data-end=3D"3344">script_1b</code> do?</h2=
>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"33=
50" data-end=3D"3661" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3350" data-end=3D"3373"><tr data-start=3D"3350" data-end=3D"=
3373"><th data-start=3D"3350" data-end=3D"3357" data-col-size=3D"sm">Step</=
th><th data-start=3D"3357" data-end=3D"3373" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"3399" data-end=3D"3661"><tr data-=
start=3D"3399" data-end=3D"3442"><td data-start=3D"3399" data-end=3D"3406" =
data-col-size=3D"sm">1</td><td data-start=3D"3406" data-end=3D"3442" data-c=
ol-size=3D"md">Loads trial and firing rate data</td></tr><tr data-start=3D"=
3443" data-end=3D"3473"><td data-start=3D"3443" data-end=3D"3450" data-col-=
size=3D"sm">2</td><td data-start=3D"3450" data-end=3D"3473" data-col-size=
=3D"md">Selects face trials</td></tr><tr data-start=3D"3474" data-end=3D"35=
41"><td data-start=3D"3474" data-end=3D"3481" data-col-size=3D"sm">3</td><t=
d data-start=3D"3481" data-end=3D"3541" data-col-size=3D"md">Matches non-fa=
ce trials to control for visual similarity</td></tr><tr data-start=3D"3542"=
 data-end=3D"3615"><td data-start=3D"3542" data-end=3D"3549" data-col-size=
=3D"sm">4</td><td data-start=3D"3549" data-end=3D"3615" data-col-size=3D"md=
">Computes neuron-level selectivity for face vs. matched-control</td></tr><=
tr data-start=3D"3616" data-end=3D"3661"><td data-start=3D"3616" data-end=
=3D"3623" data-col-size=3D"sm">5</td><td data-start=3D"3623" data-end=3D"36=
61" data-col-size=3D"md">Saves results for further analysis</td></tr></tbod=
y></table><div class=3D"sticky end-(--thread-content-margin) h-0 self-end s=
elect-none"><div class=3D"absolute end-0 flex items-end" style=3D"height: 3=
2.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token=
-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 round=
ed-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:pointe=
r-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.343=
15 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C=
3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 =
17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 1=
9 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523=
 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 =
9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div></div>=
</div>
<p data-start=3D"3663" data-end=3D"3696" class=3D"">This script answers the=
 question:</p>
<blockquote data-start=3D"3697" data-end=3D"3810">
<p data-start=3D"3699" data-end=3D"3810" class=3D"">=E2=80=9CAre these neur=
ons really selective for <em data-start=3D"3739" data-end=3D"3746">faces</e=
m>, or just <em data-start=3D"3756" data-end=3D"3777">high-contrast blobs</=
em> that happen to look like faces?=E2=80=9D</p>
</blockquote>
<hr data-start=3D"3812" data-end=3D"3815" class=3D"">
<p data-start=3D"3817" data-end=3D"3946" class=3D"">Let me know if you=E2=
=80=99d like to go inside <code data-start=3D"3856" data-end=3D"3895">compu=
te_matched_control_selectivity()</code> next, or see how the trial matching=
 is being done.</p></div></div></div></div></div></div></div></div></articl=
e><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-testi=
d=3D"conversation-turn-39" data-scroll-anchor=3D"false"><h5 class=3D"sr-onl=
y">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-con=
tent-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @=
[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin=
)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-cont=
ent-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto fl=
ex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:ga=
p-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div =
class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><di=
v class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full =
flex-col grow"><div data-message-author-role=3D"user" data-message-id=3D"57=
bb5fb6-e12c-4530-ad70-8970935e62ae" dir=3D"auto" class=3D"min-h-8 text-mess=
age relative flex w-full flex-col items-end gap-2 text-start break-words wh=
itespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-=
col gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative ma=
x-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 =
py-2.5"><div class=3D"whitespace-pre-wrap">so all of this analysis data is =
after the data from the monkeys have been collected?</div></div></div></div=
></div></div></div></div></div></article><article class=3D"text-token-text-=
primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-40" data-scro=
ll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"t=
ext-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37re=
m]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin=
:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-conte=
nt-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[-=
-thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-w=
idth) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-vi=
sible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn=
 relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative f=
lex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div d=
ata-message-author-role=3D"assistant" data-message-id=3D"2e2b056b-ac6f-4b59=
-931b-5d57d55c63d6" dir=3D"auto" class=3D"min-h-8 text-message relative fle=
x w-full flex-col items-end gap-2 text-start break-words whitespace-normal =
[.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=
=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"m=
arkdown prose dark:prose-invert w-full break-words dark"><p data-start=3D"0=
" data-end=3D"19" class=3D""><strong data-start=3D"0" data-end=3D"15">YES =
=E2=80=94 100%.</strong> =F0=9F=A7=A0=E2=9C=85</p>
<p data-start=3D"21" data-end=3D"199" class=3D"">Everything you've been wor=
king with in <code data-start=3D"60" data-end=3D"71">script_0a</code> throu=
gh <code data-start=3D"80" data-end=3D"84">1b</code> (and probably beyond) =
is <strong data-start=3D"110" data-end=3D"130">offline analysis</strong> do=
ne <strong data-start=3D"136" data-end=3D"145">after</strong> the experimen=
ts with the monkeys have been completed.</p>
<hr data-start=3D"201" data-end=3D"204" class=3D"">
<h2 data-start=3D"206" data-end=3D"242" class=3D"">=F0=9F=93=A6 What happen=
s in this pipeline?</h2>
<h3 data-start=3D"244" data-end=3D"297" class=3D"">=E2=9C=85 <strong data-s=
tart=3D"250" data-end=3D"297">1. Data collection phase (done in the lab):</=
strong></h3>
<p data-start=3D"298" data-end=3D"344" class=3D"">This is the actual experi=
mental session where:</p>
<ul data-start=3D"345" data-end=3D"549">
<li data-start=3D"345" data-end=3D"381" class=3D"">
<p data-start=3D"347" data-end=3D"381" class=3D"">A monkey sits in front of=
 a screen</p>
</li>
<li data-start=3D"382" data-end=3D"430" class=3D"">
<p data-start=3D"384" data-end=3D"430" class=3D"">Is shown images (faces, s=
cenes, objects, etc.)</p>
</li>
<li data-start=3D"431" data-end=3D"483" class=3D"">
<p data-start=3D"433" data-end=3D"483" class=3D"">Eye-tracking is recorded =
(gaze position, saccades)</p>
</li>
<li data-start=3D"484" data-end=3D"549" class=3D"">
<p data-start=3D"486" data-end=3D"549" class=3D"">Neural data is recorded v=
ia implanted electrodes (spike trains)</p>
</li>
</ul>
<p data-start=3D"551" data-end=3D"570" class=3D"">This part involves:</p>
<ul data-start=3D"571" data-end=3D"682">
<li data-start=3D"571" data-end=3D"600" class=3D"">
<p data-start=3D"573" data-end=3D"600" class=3D"">A specialized recording r=
ig</p>
</li>
<li data-start=3D"601" data-end=3D"625" class=3D"">
<p data-start=3D"603" data-end=3D"625" class=3D"">Highly trained monkeys</p=
>
</li>
<li data-start=3D"626" data-end=3D"682" class=3D"">
<p data-start=3D"628" data-end=3D"682" class=3D"">Researchers monitoring be=
havior + data collection live</p>
</li>
</ul>
<p data-start=3D"684" data-end=3D"734" class=3D"">At the end of this, they =
save a bunch of raw data:</p>
<ul data-start=3D"735" data-end=3D"803">
<li data-start=3D"735" data-end=3D"753" class=3D"">
<p data-start=3D"737" data-end=3D"753" class=3D"">Spike timestamps</p>
</li>
<li data-start=3D"754" data-end=3D"766" class=3D"">
<p data-start=3D"756" data-end=3D"766" class=3D"">Trial logs</p>
</li>
<li data-start=3D"767" data-end=3D"778" class=3D"">
<p data-start=3D"769" data-end=3D"778" class=3D"">Image IDs</p>
</li>
<li data-start=3D"779" data-end=3D"803" class=3D"">
<p data-start=3D"781" data-end=3D"803" class=3D"">Eye position over time</p=
>
</li>
</ul>
<p data-start=3D"805" data-end=3D"858" class=3D"">=F0=9F=93=8DThis is where=
 the <strong data-start=3D"825" data-end=3D"847">session data files</strong=
> come from.</p>
<hr data-start=3D"860" data-end=3D"863" class=3D"">
<h3 data-start=3D"865" data-end=3D"908" class=3D"">=E2=9C=85 <strong data-s=
tart=3D"871" data-end=3D"908">2. Analysis phase (your scripts):</strong></h=
3>
<p data-start=3D"910" data-end=3D"982" class=3D"">This happens <strong data=
-start=3D"923" data-end=3D"932">after</strong> the lab work. The monkeys ar=
e no longer involved.</p>
<p data-start=3D"984" data-end=3D"997" class=3D"">Scripts like:</p>
<ul data-start=3D"998" data-end=3D"1327">
<li data-start=3D"998" data-end=3D"1060" class=3D"">
<p data-start=3D"1000" data-end=3D"1060" class=3D""><code data-start=3D"100=
0" data-end=3D"1028">0a_shared_processing.ipynb</code> =E2=86=92 Preprocess=
 spike + trial data</p>
</li>
<li data-start=3D"1061" data-end=3D"1121" class=3D"">
<p data-start=3D"1063" data-end=3D"1121" class=3D""><code data-start=3D"106=
3" data-end=3D"1096">0b_spike_density_function.ipynb</code> =E2=86=92 Smoot=
h neural activity</p>
</li>
<li data-start=3D"1122" data-end=3D"1182" class=3D"">
<p data-start=3D"1124" data-end=3D"1182" class=3D""><code data-start=3D"112=
4" data-end=3D"1150">0c_select_fix_sacc.ipynb</code> =E2=86=92 Detect sacca=
des and fixations</p>
</li>
<li data-start=3D"1183" data-end=3D"1247" class=3D"">
<p data-start=3D"1185" data-end=3D"1247" class=3D""><code data-start=3D"118=
5" data-end=3D"1209">1a_face_specific.ipynb</code> =E2=86=92 Test which neu=
rons respond to faces</p>
</li>
<li data-start=3D"1248" data-end=3D"1327" class=3D"">
<p data-start=3D"1250" data-end=3D"1327" class=3D""><code data-start=3D"125=
0" data-end=3D"1288">1b_face_specific_match_control.ipynb</code> =E2=86=92 =
Control for confounds in selectivity</p>
</li>
</ul>
<p data-start=3D"1329" data-end=3D"1415" class=3D"">are all run <strong dat=
a-start=3D"1341" data-end=3D"1353">post hoc</strong>=E2=80=94you=E2=80=99re=
 mining the data for insights, structure, and patterns.</p>
<hr data-start=3D"1417" data-end=3D"1420" class=3D"">
<h2 data-start=3D"1422" data-end=3D"1461" class=3D"">=F0=9F=A7=A0 Why is th=
is separation important?</h2>
<p data-start=3D"1463" data-end=3D"1471" class=3D"">Because:</p>
<ul data-start=3D"1472" data-end=3D"1757">
<li data-start=3D"1472" data-end=3D"1535" class=3D"">
<p data-start=3D"1474" data-end=3D"1535" class=3D"">You want to minimize ex=
perimenter bias during data collection</p>
</li>
<li data-start=3D"1536" data-end=3D"1598" class=3D"">
<p data-start=3D"1538" data-end=3D"1598" class=3D"">You don=E2=80=99t know =
ahead of time which neurons will be selective</p>
</li>
<li data-start=3D"1599" data-end=3D"1683" class=3D"">
<p data-start=3D"1601" data-end=3D"1683" class=3D"">Analysis can evolve ove=
r time (you can try different metrics, different groupings)</p>
</li>
<li data-start=3D"1684" data-end=3D"1757" class=3D"">
<p data-start=3D"1686" data-end=3D"1757" class=3D"">It allows re-use of the=
 dataset for many different scientific questions</p>
</li>
</ul>
<hr data-start=3D"1759" data-end=3D"1762" class=3D"">
<h2 data-start=3D"1764" data-end=3D"1776" class=3D"">=F0=9F=9B=A0=EF=B8=8F =
TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"17=
78" data-end=3D"2028" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1778" data-end=3D"1820"><tr data-start=3D"1778" data-end=3D"=
1820"><th data-start=3D"1778" data-end=3D"1786" data-col-size=3D"sm">Phase<=
/th><th data-start=3D"1786" data-end=3D"1800" data-col-size=3D"sm">Descript=
ion</th><th data-start=3D"1800" data-end=3D"1820" data-col-size=3D"sm">Monk=
ey involved?</th></tr></thead><tbody data-start=3D"1864" data-end=3D"2028">=
<tr data-start=3D"1864" data-end=3D"1938"><td data-start=3D"1864" data-end=
=3D"1886" data-col-size=3D"sm"><strong data-start=3D"1866" data-end=3D"1885=
">Data collection</strong></td><td data-start=3D"1886" data-end=3D"1929" da=
ta-col-size=3D"sm">Show images, record spikes/eye movements</td><td data-st=
art=3D"1929" data-end=3D"1938" data-col-size=3D"sm">=E2=9C=85 Yes</td></tr>=
<tr data-start=3D"1939" data-end=3D"2028"><td data-start=3D"1939" data-end=
=3D"1961" data-col-size=3D"sm"><strong data-start=3D"1941" data-end=3D"1953=
">Analysis</strong></td><td data-start=3D"1961" data-end=3D"2003" data-col-=
size=3D"sm">Preprocess, smooth, compute selectivity</td><td data-start=3D"2=
003" data-end=3D"2028" data-col-size=3D"sm">=E2=9D=8C No =E2=80=94 you're o=
ffline</td></tr></tbody></table><div class=3D"sticky end-(--thread-content-=
margin) h-0 self-end select-none"><div class=3D"absolute end-0 flex items-e=
nd" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><bu=
tton class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-tex=
t-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(=
:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-within)]=
:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"n=
one" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fil=
l-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2=
H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.65=
69 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H=
7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C=
20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.4=
4772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15=
 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></s=
pan></div></div></div></div>
<hr data-start=3D"2030" data-end=3D"2033" class=3D"">
<p data-start=3D"2035" data-end=3D"2151" class=3D"">Let me know if you want=
 a visual diagram of how data flows from monkey =E2=86=92 spike train =E2=
=86=92 smoothed rates =E2=86=92 selectivity!</p></div></div></div></div></d=
iv></div></div></div></article><article class=3D"text-token-text-primary w-=
full" dir=3D"auto" data-testid=3D"conversation-turn-41" data-scroll-anchor=
=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-a=
uto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-=
content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16=
)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:=
32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-conte=
nt-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 =
text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline=
-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative fle=
x w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3">=
<div class=3D"flex max-w-full flex-col grow"><div data-message-author-role=
=3D"user" data-message-id=3D"8d30e399-5912-4ada-93e5-78ab5b836bd2" dir=3D"a=
uto" class=3D"min-h-8 text-message relative flex w-full flex-col items-end =
gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5">=
<div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-s=
tart"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-me=
ssage-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">c=
an you go through 1c</div></div></div></div></div></div></div></div></div><=
/article><article class=3D"text-token-text-primary w-full" dir=3D"auto" dat=
a-testid=3D"conversation-turn-42" data-scroll-anchor=3D"false"><h6 class=3D=
"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [-=
-thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--sp=
acing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-con=
tent-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--=
thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem]=
 mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:=
gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=
=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0 =
flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div c=
lass=3D"flex max-w-full flex-col grow"><p class=3D"first:mt-0 my-1.5 h-8 fl=
ex items-center ltr:me-auto rtl:ms-auto empty:hidden text-token-text-second=
ary"></p><div data-message-author-role=3D"assistant" data-message-id=3D"4ed=
36d1d-4644-48a2-a333-90931b6f6b17" dir=3D"auto" class=3D"min-h-8 text-messa=
ge relative flex w-full flex-col items-end gap-2 text-start break-words whi=
tespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4=
o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><d=
iv class=3D"markdown prose dark:prose-invert w-full break-words dark"><p da=
ta-start=3D"0" data-end=3D"127" class=3D"">It looks like there is <strong d=
ata-start=3D"23" data-end=3D"46">no <code data-start=3D"28" data-end=3D"39"=
>script_1c</code> file</strong> among the notebooks you've uploaded so far.=
 You've got these in the <code data-start=3D"115" data-end=3D"119">1x</code=
> series:</p>
<ul data-start=3D"129" data-end=3D"214">
<li data-start=3D"129" data-end=3D"164" class=3D"">
<p data-start=3D"131" data-end=3D"164" class=3D"">=E2=9C=85 <code data-star=
t=3D"133" data-end=3D"164">script_1a_face_specific.ipynb</code></p>
</li>
<li data-start=3D"165" data-end=3D"214" class=3D"">
<p data-start=3D"167" data-end=3D"214" class=3D"">=E2=9C=85 <code data-star=
t=3D"169" data-end=3D"214">script_1b_face_specific_match_control.ipynb</cod=
e></p>
</li>
</ul>
<p data-start=3D"216" data-end=3D"252" class=3D"">But nothing named <code d=
ata-start=3D"234" data-end=3D"245">script_1c</code> (yet).</p>
<hr data-start=3D"254" data-end=3D"257" class=3D"">
<h3 data-start=3D"259" data-end=3D"282" class=3D"">=F0=9F=93=8C What you ca=
n do:</h3>
<ul data-start=3D"283" data-end=3D"531">
<li data-start=3D"283" data-end=3D"376" class=3D"">
<p data-start=3D"285" data-end=3D"376" class=3D"">Double-check your files t=
o see if there's a <code data-start=3D"329" data-end=3D"333">1c</code> scri=
pt elsewhere (maybe not uploaded yet?)</p>
</li>
<li data-start=3D"377" data-end=3D"531" class=3D"">
<p data-start=3D"379" data-end=3D"531" class=3D"">Let me know what kind of =
analysis you <em data-start=3D"417" data-end=3D"425">expect</em> <code data=
-start=3D"426" data-end=3D"430">1c</code> would do (e.g., cross-validation?=
 decoding?), and I can help outline or reconstruct what it might be</p>
</li>
</ul>
<p data-start=3D"533" data-end=3D"610" class=3D"">Want help building a hypo=
thetical <code data-start=3D"567" data-end=3D"571">1c</code> based on what =
<code data-start=3D"586" data-end=3D"590">1a</code> and <code data-start=3D=
"595" data-end=3D"599">1b</code> are doing?</p></div></div></div></div></di=
v></div></div></div></article><article class=3D"text-token-text-primary w-f=
ull" dir=3D"auto" data-testid=3D"conversation-turn-43" data-scroll-anchor=
=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-a=
uto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-=
content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16=
)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:=
32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-conte=
nt-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 =
text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline=
-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative fle=
x w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3">=
<div class=3D"flex max-w-full flex-col grow"><div data-message-author-role=
=3D"user" data-message-id=3D"f773862c-082d-48e8-a39b-cd4f94d3b618" dir=3D"a=
uto" class=3D"min-h-8 text-message relative flex w-full flex-col items-end =
gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5">=
<div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-s=
tart"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-me=
ssage-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">c=
ould you go through 2a</div></div></div></div></div></div></div></div></div=
></article><article class=3D"text-token-text-primary w-full" dir=3D"auto" d=
ata-testid=3D"conversation-turn-44" data-scroll-anchor=3D"false"><h6 class=
=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5=
 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:-=
-spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-=
content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:=
[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48r=
em] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 =
md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabinde=
x=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0=
 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div =
class=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"as=
sistant" data-message-id=3D"542ebd8c-a000-40a4-abad-63178c6a3a5a" dir=3D"au=
to" class=3D"min-h-8 text-message relative flex w-full flex-col items-end g=
ap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5" d=
ata-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 =
empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert=
 w-full break-words dark"><p data-start=3D"0" data-end=3D"113" class=3D"">A=
bsolutely! Let=E2=80=99s dive into <code data-start=3D"28" data-end=3D"62">=
script_2a_self_consistency.ipynb</code>, going line by line to understand w=
hat it=E2=80=99s doing.</p>
<hr data-start=3D"115" data-end=3D"118" class=3D"">
<h2 data-start=3D"120" data-end=3D"160" class=3D"">=F0=9F=93=81 <code data-=
start=3D"126" data-end=3D"160">script_2a_self_consistency.ipynb</code></h2>
<h3 data-start=3D"162" data-end=3D"189" class=3D"">=F0=9F=8E=AF Goal of Thi=
s Script:</h3>
<p data-start=3D"190" data-end=3D"330" class=3D"">To measure <strong data-s=
tart=3D"201" data-end=3D"269">how consistent a neuron=E2=80=99s response is=
 across different fixations</strong>=E2=80=94specifically when viewing <str=
ong data-start=3D"296" data-end=3D"314">the same image</strong> multiple ti=
mes.</p>
<p data-start=3D"332" data-end=3D"367" class=3D"">This kind of analysis hel=
ps answer:</p>
<blockquote data-start=3D"368" data-end=3D"439">
<p data-start=3D"370" data-end=3D"439" class=3D"">"Does a neuron respond si=
milarly to the same image across fixations?"</p>
</blockquote>
<p data-start=3D"441" data-end=3D"593" class=3D"">This is a core test of <s=
trong data-start=3D"464" data-end=3D"499">visual representation stability</=
strong>=E2=80=94especially in natural, free-viewing conditions where fixati=
ons vary but the stimulus doesn't.</p>
<hr data-start=3D"595" data-end=3D"598" class=3D"">
<h2 data-start=3D"600" data-end=3D"618" class=3D"">=F0=9F=A7=A0 Key Concept=
s</h2>
<ul data-start=3D"620" data-end=3D"917">
<li data-start=3D"620" data-end=3D"703" class=3D"">
<p data-start=3D"622" data-end=3D"703" class=3D""><strong data-start=3D"622=
" data-end=3D"634">Fixation</strong> =3D when the eye is still and looking =
at a specific part of the image.</p>
</li>
<li data-start=3D"704" data-end=3D"813" class=3D"">
<p data-start=3D"706" data-end=3D"813" class=3D""><strong data-start=3D"706=
" data-end=3D"726">Self-consistency</strong> =3D how reproducible a neuron=
=E2=80=99s response is across different times the image is fixated.</p>
</li>
<li data-start=3D"814" data-end=3D"917" class=3D"">
<p data-start=3D"816" data-end=3D"917" class=3D"">You're asking: <strong da=
ta-start=3D"831" data-end=3D"917">If the monkey looks at Image A 3 times, d=
oes Neuron X respond similarly each time?</strong></p>
</li>
</ul>
<hr data-start=3D"919" data-end=3D"922" class=3D"">
<h2 data-start=3D"924" data-end=3D"948" class=3D"">=F0=9F=94=8D Script Walk=
through</h2>
<h3 data-start=3D"950" data-end=3D"968" class=3D""><strong data-start=3D"95=
4" data-end=3D"968">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"970" data-end=3D"1115"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> matplo=
tlib.pyplot </span><span><span class=3D"hljs-keyword">as</span></span><span=
> plt
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"1117" data-end=3D"1201" class=3D"">All standard. We=E2=80=
=99re doing numerical ops, loading pickled session data, and plotting.</p>
<hr data-start=3D"1203" data-end=3D"1206" class=3D"">
<h3 data-start=3D"1208" data-end=3D"1245" class=3D""><strong data-start=3D"=
1212" data-end=3D"1245">2. Load the preprocessed data</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1247" data-end=3D"1377"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(Path=
(</span><span><span class=3D"hljs-string">"intermediate"</span></span><span=
>) / </span><span><span class=3D"hljs-string">"shared_preprocessed_data_wit=
h_saccades.pkl"</span></span><span>, </span><span><span class=3D"hljs-strin=
g">"rb"</span></span><span>) </span><span><span class=3D"hljs-keyword">as</=
span></span><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<ul data-start=3D"1379" data-end=3D"1560">
<li data-start=3D"1379" data-end=3D"1418" class=3D"">
<p data-start=3D"1381" data-end=3D"1418" class=3D"">This file was produced =
by <code data-start=3D"1407" data-end=3D"1418">script_0c</code></p>
</li>
<li data-start=3D"1419" data-end=3D"1560" class=3D"">
<p data-start=3D"1421" data-end=3D"1433" class=3D"">It contains:</p>
<ul data-start=3D"1436" data-end=3D"1560">
<li data-start=3D"1436" data-end=3D"1466" class=3D"">
<p data-start=3D"1438" data-end=3D"1466" class=3D""><code data-start=3D"143=
8" data-end=3D"1443">sdf</code>: smoothed firing rates</p>
</li>
<li data-start=3D"1469" data-end=3D"1528" class=3D"">
<p data-start=3D"1471" data-end=3D"1528" class=3D""><code data-start=3D"147=
1" data-end=3D"1479">trials</code>: trial metadata (including saccades + fi=
xations)</p>
</li>
<li data-start=3D"1531" data-end=3D"1560" class=3D"">
<p data-start=3D"1533" data-end=3D"1560" class=3D""><code data-start=3D"153=
3" data-end=3D"1544">unit_info</code>: neuron details</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"1562" data-end=3D"1565" class=3D"">
<h3 data-start=3D"1567" data-end=3D"1596" class=3D""><strong data-start=3D"=
1571" data-end=3D"1596">3. Loop over sessions</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1598" data-end=3D"1788"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>all_results =3D []

</span><span><span class=3D"hljs-keyword">for</span></span><span> sess_name=
, sess_data </span><span><span class=3D"hljs-keyword">in</span></span><span=
> tqdm(data.items()):
    sdf =3D sess_data[</span><span><span class=3D"hljs-string">"sdf"</span>=
</span><span>]        </span><span><span class=3D"hljs-comment"># [trials x=
 units x time]</span></span><span>
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]  </span><span><span class=3D"hljs-comment"># trial met=
adata</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"1790" data-end=3D"1824" class=3D"">Start iterating over ea=
ch session.</p>
<hr data-start=3D"1826" data-end=3D"1829" class=3D"">
<h3 data-start=3D"1831" data-end=3D"1898" class=3D""><strong data-start=3D"=
1835" data-end=3D"1898">4. For each unit, compute self-consistency across f=
ixations</strong></h3>
<p data-start=3D"1900" data-end=3D"1946" class=3D"">Inside the session loop=
, you=E2=80=99ll typically see:</p>
<pre class=3D"overflow-visible!" data-start=3D"1948" data-end=3D"2390"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> unit_idx </span><span><span class=3D"hljs-keyword">in</span></span><span>=
 </span><span><span class=3D"hljs-built_in">range</span></span><span>(sdf.s=
hape[</span><span><span class=3D"hljs-number">1</span></span><span>]):
    unit_responses =3D []

    </span><span><span class=3D"hljs-keyword">for</span></span><span> trial=
_idx, trial </span><span><span class=3D"hljs-keyword">in</span></span><span=
> trials.iterrows():
        </span><span><span class=3D"hljs-comment"># For each fixation in th=
e trial</span></span><span>
        </span><span><span class=3D"hljs-keyword">for</span></span><span> f=
ix_onset </span><span><span class=3D"hljs-keyword">in</span></span><span> t=
rial[</span><span><span class=3D"hljs-string">"fix_onsets"</span></span><sp=
an>]:
            </span><span><span class=3D"hljs-comment"># Extract firing rate=
 aligned to fixation onset</span></span><span>
            response =3D sdf[trial_idx, unit_idx, fix_onset + t_start : fix=
_onset + t_end]
            unit_responses.append(response.mean())  </span><span><span clas=
s=3D"hljs-comment"># or sum, or some other summary</span></span><span>
</span></span></code></div></div></pre>
<ul data-start=3D"2392" data-end=3D"2644">
<li data-start=3D"2392" data-end=3D"2577" class=3D"">
<p data-start=3D"2394" data-end=3D"2410" class=3D"">For each neuron:</p>
<ul data-start=3D"2413" data-end=3D"2577">
<li data-start=3D"2413" data-end=3D"2436" class=3D"">
<p data-start=3D"2415" data-end=3D"2436" class=3D"">Go through each trial</=
p>
</li>
<li data-start=3D"2439" data-end=3D"2577" class=3D"">
<p data-start=3D"2441" data-end=3D"2481" class=3D"">For each <strong data-s=
tart=3D"2450" data-end=3D"2462">fixation</strong> within that trial:</p>
<ul data-start=3D"2486" data-end=3D"2577">
<li data-start=3D"2486" data-end=3D"2543" class=3D"">
<p data-start=3D"2488" data-end=3D"2543" class=3D"">Extract a <strong data-=
start=3D"2498" data-end=3D"2513">time window</strong> of firing around the =
fixation</p>
</li>
<li data-start=3D"2548" data-end=3D"2577" class=3D"">
<p data-start=3D"2550" data-end=3D"2577" class=3D"">Compute an average resp=
onse</p>
</li>
</ul>
</li>
</ul>
</li>
<li data-start=3D"2578" data-end=3D"2644" class=3D"">
<p data-start=3D"2580" data-end=3D"2644" class=3D"">This gives a list of fi=
ring rates across fixations for this unit</p>
</li>
</ul>
<p data-start=3D"2646" data-end=3D"2729" class=3D"">Then you compute <stron=
g data-start=3D"2663" data-end=3D"2700">pairwise correlations or variance</=
strong> to quantify <strong data-start=3D"2713" data-end=3D"2728">consisten=
cy</strong>.</p>
<hr data-start=3D"2731" data-end=3D"2734" class=3D"">
<h3 data-start=3D"2736" data-end=3D"2779" class=3D""><strong data-start=3D"=
2740" data-end=3D"2779">5. Store consistency score per unit</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2781" data-end=3D"2975"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>    unit_score =3D compute_self_consistency(unit_re=
sponses)
    results.append({
        </span><span><span class=3D"hljs-string">"session"</span></span><sp=
an>: sess_name,
        </span><span><span class=3D"hljs-string">"unit"</span></span><span>=
: unit_idx,
        </span><span><span class=3D"hljs-string">"self_consistency"</span><=
/span><span>: unit_score
    })
</span></span></code></div></div></pre>
<ul data-start=3D"2977" data-end=3D"3220">
<li data-start=3D"2977" data-end=3D"3007" class=3D"">
<p data-start=3D"2979" data-end=3D"3007" class=3D"">You get one score per n=
euron</p>
</li>
<li data-start=3D"3008" data-end=3D"3220" class=3D"">
<p data-start=3D"3010" data-end=3D"3070" class=3D""><code data-start=3D"301=
0" data-end=3D"3038">compute_self_consistency()</code> likely computes some=
thing like:</p>
<ul data-start=3D"3073" data-end=3D"3220">
<li data-start=3D"3073" data-end=3D"3131" class=3D"">
<p data-start=3D"3075" data-end=3D"3131" class=3D"">Correlation between pai=
rs of fixations to the same image</p>
</li>
<li data-start=3D"3134" data-end=3D"3159" class=3D"">
<p data-start=3D"3136" data-end=3D"3159" class=3D"">Variance explained (R=
=C2=B2)</p>
</li>
<li data-start=3D"3162" data-end=3D"3220" class=3D"">
<p data-start=3D"3164" data-end=3D"3220" class=3D"">D-prime between same-im=
age vs. different-image responses</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"3222" data-end=3D"3225" class=3D"">
<h3 data-start=3D"3227" data-end=3D"3259" class=3D""><strong data-start=3D"=
3231" data-end=3D"3259">6. Save and plot results</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3261" data-end=3D"3383"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>results_df =3D pd.DataFrame(all_results)
results_df.to_csv(</span><span><span class=3D"hljs-string">"output/self_con=
sistency_results.csv"</span></span><span>, index=3D</span><span><span class=
=3D"hljs-literal">False</span></span><span>)
</span></span></code></div></div></pre>
<p data-start=3D"3385" data-end=3D"3396" class=3D"">Maybe also:</p>
<pre class=3D"overflow-visible!" data-start=3D"3398" data-end=3D"3452"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>plt.hist(results_df[</span><span><span class=3D"hlj=
s-string">"self_consistency"</span></span><span>])
</span></span></code></div></div></pre>
<p data-start=3D"3454" data-end=3D"3503" class=3D"">Visualizes how consiste=
nt neurons are in general.</p>
<hr data-start=3D"3505" data-end=3D"3508" class=3D"">
<h2 data-start=3D"3510" data-end=3D"3522" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"35=
24" data-end=3D"3806" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3524" data-end=3D"3547"><tr data-start=3D"3524" data-end=3D"=
3547"><th data-start=3D"3524" data-end=3D"3531" data-col-size=3D"sm">Step</=
th><th data-start=3D"3531" data-end=3D"3547" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"3573" data-end=3D"3806"><tr data-=
start=3D"3573" data-end=3D"3631"><td data-start=3D"3573" data-end=3D"3580" =
data-col-size=3D"sm">Load</td><td data-start=3D"3580" data-end=3D"3631" dat=
a-col-size=3D"md">Trial + neural data with saccades and fixations</td></tr>=
<tr data-start=3D"3632" data-end=3D"3686"><td data-start=3D"3632" data-end=
=3D"3648" data-col-size=3D"sm">For each unit</td><td data-start=3D"3648" da=
ta-end=3D"3686" data-col-size=3D"md">Extract responses during fixations</td=
></tr><tr data-start=3D"3687" data-end=3D"3739"><td data-start=3D"3687" dat=
a-end=3D"3704" data-col-size=3D"sm">For each image</td><td data-start=3D"37=
04" data-end=3D"3739" data-col-size=3D"md">Compare fixations to same image<=
/td></tr><tr data-start=3D"3740" data-end=3D"3776"><td data-start=3D"3740" =
data-end=3D"3750" data-col-size=3D"sm">Compute</td><td data-start=3D"3750" =
data-end=3D"3776" data-col-size=3D"md">Self-consistency score</td></tr><tr =
data-start=3D"3777" data-end=3D"3806"><td data-start=3D"3777" data-end=3D"3=
784" data-col-size=3D"sm">Save</td><td data-start=3D"3784" data-end=3D"3806=
" data-col-size=3D"md">Results per neuron</td></tr></tbody></table><div cla=
ss=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"><div c=
lass=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><span c=
lass=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary hover:=
bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 transiti=
on-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-none grou=
p-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd"=
 d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6=
569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.65=
69 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V1=
5H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9=
 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H1=
4C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curr=
entColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"3808" data-end=3D"3811" class=3D"">
<h2 data-start=3D"3813" data-end=3D"3836" class=3D"">=F0=9F=8E=AF Why this =
matters:</h2>
<p data-start=3D"3838" data-end=3D"3858" class=3D"">This script answers:</p=
>
<blockquote data-start=3D"3859" data-end=3D"3920">
<p data-start=3D"3861" data-end=3D"3920" class=3D"">"Is a neuron's represen=
tation stable across eye movements?"</p>
</blockquote>
<p data-start=3D"3922" data-end=3D"4009" class=3D"">Which is <strong data-s=
tart=3D"3931" data-end=3D"3946">fundamental</strong> to understanding invar=
iant object representation in the brain.</p>
<hr data-start=3D"4011" data-end=3D"4014" class=3D"">
<p data-start=3D"4016" data-end=3D"4131" class=3D"">Want me to walk you thr=
ough <code data-start=3D"4044" data-end=3D"4072">compute_self_consistency()=
</code> next, or show what this looks like for one example neuron?</p></div=
></div></div></div></div></div></div></div></article><article class=3D"text=
-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-4=
5" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div cl=
ass=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)=
] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-conten=
t-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thre=
ad-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[6=
4rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-conte=
nt-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages =
focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversat=
ion-turn relative flex w-full min-w-0 flex-col"><div class=3D"relative flex=
-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data=
-message-author-role=3D"user" data-message-id=3D"c5468330-23ad-4ce8-aad7-88=
049e13eef3" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full=
 flex-col items-end gap-2 text-start break-words whitespace-normal [.text-m=
essage+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden i=
tems-end rtl:items-start"><div class=3D"relative max-w-[var(--user-chat-wid=
th,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"wh=
itespace-pre-wrap">could you go through the next file</div></div></div></di=
v></div></div></div></div></div></article><article class=3D"text-token-text=
-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-46" data-scr=
oll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"=
text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37r=
em]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margi=
n:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-cont=
ent-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[=
--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-=
width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-v=
isible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-tur=
n relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative =
flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div =
data-message-author-role=3D"assistant" data-message-id=3D"c79222ed-1bf6-4f0=
f-89c1-b698dcf20465" dir=3D"auto" class=3D"min-h-8 text-message relative fl=
ex w-full flex-col items-end gap-2 text-start break-words whitespace-normal=
 [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=
=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"m=
arkdown prose dark:prose-invert w-full break-words dark"><p data-start=3D"0=
" data-end=3D"53" class=3D"">Absolutely! The next file in your upload seque=
nce is:</p>
<h2 data-start=3D"55" data-end=3D"109" class=3D"">=F0=9F=93=81 <code data-s=
tart=3D"61" data-end=3D"109">script_2b_self_consistency_match_control.ipynb=
</code></h2>
<hr data-start=3D"111" data-end=3D"114" class=3D"">
<h2 data-start=3D"116" data-end=3D"127" class=3D"">=F0=9F=8E=AF Goal:</h2>
<p data-start=3D"128" data-end=3D"257" class=3D"">This script builds direct=
ly on what <code data-start=3D"164" data-end=3D"168">2a</code> does=E2=80=
=94but now it introduces a <strong data-start=3D"198" data-end=3D"222">matc=
h-control design</strong>, just like how <code data-start=3D"238" data-end=
=3D"242">1b</code> built on <code data-start=3D"252" data-end=3D"256">1a</c=
ode>.</p>
<p data-start=3D"259" data-end=3D"279" class=3D"">Whereas <code data-start=
=3D"267" data-end=3D"271">2a</code> tested:</p>
<blockquote data-start=3D"280" data-end=3D"357">
<p data-start=3D"282" data-end=3D"357" class=3D"">"How consistent is a neur=
on=E2=80=99s response across fixations to the same image?"</p>
</blockquote>
<p data-start=3D"359" data-end=3D"377" class=3D"">This script tests:</p>
<blockquote data-start=3D"378" data-end=3D"526">
<p data-start=3D"380" data-end=3D"526" class=3D"">"Is the neuron <em data-s=
tart=3D"395" data-end=3D"409">specifically</em> consistent for a <strong da=
ta-start=3D"427" data-end=3D"447">particular image</strong>, or does it sho=
w similar consistency for visually <strong data-start=3D"498" data-end=3D"5=
24">matched control images</strong>?"</p>
</blockquote>
<p data-start=3D"528" data-end=3D"543" class=3D"">In other words:</p>
<blockquote data-start=3D"544" data-end=3D"641">
<p data-start=3D"546" data-end=3D"641" class=3D"">"Is this neuron coding <e=
m data-start=3D"569" data-end=3D"580">the image</em>, or just some <em data=
-start=3D"595" data-end=3D"612">visual features</em> that multiple images s=
hare?"</p>
</blockquote>
<hr data-start=3D"643" data-end=3D"646" class=3D"">
<h2 data-start=3D"648" data-end=3D"680" class=3D"">=F0=9F=A7=A0 Why match c=
ontrol matters:</h2>
<p data-start=3D"681" data-end=3D"898" class=3D"">Imagine a neuron that con=
sistently fires whenever the image has <strong data-start=3D"745" data-end=
=3D"762">a round shape</strong>=E2=80=94not because it's a <em data-start=
=3D"782" data-end=3D"792">specific</em> image (like a face), but because ro=
undness is a common low-level feature. Match control lets you compare:</p>
<ul data-start=3D"899" data-end=3D"983">
<li data-start=3D"899" data-end=3D"930" class=3D"">
<p data-start=3D"901" data-end=3D"930" class=3D"">Same-image fixation pairs=
 vs.</p>
</li>
<li data-start=3D"931" data-end=3D"983" class=3D"">
<p data-start=3D"933" data-end=3D"983" class=3D"">Different-image-but-simil=
ar-feature fixation pairs</p>
</li>
</ul>
<hr data-start=3D"985" data-end=3D"988" class=3D"">
<h3 data-start=3D"990" data-end=3D"1019" class=3D"">=F0=9F=94=8D Let=E2=80=
=99s go line by line:</h3>
<hr data-start=3D"1021" data-end=3D"1024" class=3D"">
<h3 data-start=3D"1026" data-end=3D"1044" class=3D""><strong data-start=3D"=
1030" data-end=3D"1044">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1046" data-end=3D"1191"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> matplo=
tlib.pyplot </span><span><span class=3D"hljs-keyword">as</span></span><span=
> plt
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"1193" data-end=3D"1235" class=3D"">Same as previous script=
s=E2=80=94nothing new here.</p>
<hr data-start=3D"1237" data-end=3D"1240" class=3D"">
<h3 data-start=3D"1242" data-end=3D"1289" class=3D""><strong data-start=3D"=
1246" data-end=3D"1289">2. Load preprocessed data with saccades</strong></h=
3>
<pre class=3D"overflow-visible!" data-start=3D"1291" data-end=3D"1421"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(Path=
(</span><span><span class=3D"hljs-string">"intermediate"</span></span><span=
>) / </span><span><span class=3D"hljs-string">"shared_preprocessed_data_wit=
h_saccades.pkl"</span></span><span>, </span><span><span class=3D"hljs-strin=
g">"rb"</span></span><span>) </span><span><span class=3D"hljs-keyword">as</=
span></span><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<p data-start=3D"1423" data-end=3D"1437" class=3D"">This includes:</p>
<ul data-start=3D"1438" data-end=3D"1558">
<li data-start=3D"1438" data-end=3D"1488" class=3D"">
<p data-start=3D"1440" data-end=3D"1488" class=3D""><code data-start=3D"144=
0" data-end=3D"1445">sdf</code>: spike density functions (smoothed firing)<=
/p>
</li>
<li data-start=3D"1489" data-end=3D"1558" class=3D"">
<p data-start=3D"1491" data-end=3D"1558" class=3D""><code data-start=3D"149=
1" data-end=3D"1499">trials</code>: trial metadata (with <code data-start=
=3D"1522" data-end=3D"1534">fix_onsets</code>, <code data-start=3D"1536" da=
ta-end=3D"1551">sacc_ordinals</code>, etc.)</p>
</li>
</ul>
<hr data-start=3D"1560" data-end=3D"1563" class=3D"">
<h3 data-start=3D"1565" data-end=3D"1596" class=3D""><strong data-start=3D"=
1569" data-end=3D"1596">3. Setup result storage</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1598" data-end=3D"1628"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>all_results =3D []
</span></span></code></div></div></pre>
<p data-start=3D"1630" data-end=3D"1695" class=3D"">Prepare to store the ma=
tch-control consistency scores per neuron.</p>
<hr data-start=3D"1697" data-end=3D"1700" class=3D"">
<h3 data-start=3D"1702" data-end=3D"1734" class=3D""><strong data-start=3D"=
1706" data-end=3D"1734">4. Loop through sessions</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1736" data-end=3D"1857"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> sess_name, sess_data </span><span><span class=3D"hljs-keyword">in</span><=
/span><span> tqdm(data.items()):
    sdf =3D sess_data[</span><span><span class=3D"hljs-string">"sdf"</span>=
</span><span>]
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]
</span></span></code></div></div></pre>
<ul data-start=3D"1859" data-end=3D"1922">
<li data-start=3D"1859" data-end=3D"1877" class=3D"">
<p data-start=3D"1861" data-end=3D"1877" class=3D"">For each session</p>
</li>
<li data-start=3D"1878" data-end=3D"1922" class=3D"">
<p data-start=3D"1880" data-end=3D"1922" class=3D"">Pull firing rate matrix=
 and trial metadata</p>
</li>
</ul>
<hr data-start=3D"1924" data-end=3D"1927" class=3D"">
<h3 data-start=3D"1929" data-end=3D"2002" class=3D""><strong data-start=3D"=
1933" data-end=3D"2002">5. Inside each session: for each unit, collect fixa=
tion responses</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2004" data-end=3D"2492"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> unit_idx </span><span><span class=3D"hljs-keyword">in</span></span><span>=
 </span><span><span class=3D"hljs-built_in">range</span></span><span>(sdf.s=
hape[</span><span><span class=3D"hljs-number">1</span></span><span>]):
    </span><span><span class=3D"hljs-comment"># Store responses grouped by =
image</span></span><span>
    image_responses =3D {}
   =20
    </span><span><span class=3D"hljs-keyword">for</span></span><span> trial=
_idx, trial </span><span><span class=3D"hljs-keyword">in</span></span><span=
> trials.iterrows():
        img_id =3D trial[</span><span><span class=3D"hljs-string">"image_id=
"</span></span><span>]
        </span><span><span class=3D"hljs-keyword">if</span></span><span> im=
g_id </span><span><span class=3D"hljs-keyword">not</span></span><span> </sp=
an><span><span class=3D"hljs-keyword">in</span></span><span> image_response=
s:
            image_responses[img_id] =3D []
       =20
        </span><span><span class=3D"hljs-keyword">for</span></span><span> f=
ix_onset </span><span><span class=3D"hljs-keyword">in</span></span><span> t=
rial[</span><span><span class=3D"hljs-string">"fix_onsets"</span></span><sp=
an>]:
            response =3D sdf[trial_idx, unit_idx, fix_onset + t_start : fix=
_onset + t_end]
            image_responses[img_id].append(response.mean())
</span></span></code></div></div></pre>
<ul data-start=3D"2494" data-end=3D"2700">
<li data-start=3D"2494" data-end=3D"2700" class=3D"">
<p data-start=3D"2496" data-end=3D"2512" class=3D"">For each neuron:</p>
<ul data-start=3D"2515" data-end=3D"2700">
<li data-start=3D"2515" data-end=3D"2557" class=3D"">
<p data-start=3D"2517" data-end=3D"2557" class=3D"">Organize fixation respo=
nses by <strong data-start=3D"2548" data-end=3D"2557">image</strong></p>
</li>
<li data-start=3D"2560" data-end=3D"2632" class=3D"">
<p data-start=3D"2562" data-end=3D"2632" class=3D""><code data-start=3D"256=
2" data-end=3D"2587">image_responses[img_id]</code> stores all fixation res=
ponses for that image</p>
</li>
<li data-start=3D"2635" data-end=3D"2700" class=3D"">
<p data-start=3D"2637" data-end=3D"2700" class=3D"">Each fixation becomes a=
 scalar (mean response in a time window)</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"2702" data-end=3D"2705" class=3D"">
<h3 data-start=3D"2707" data-end=3D"2756" class=3D""><strong data-start=3D"=
2711" data-end=3D"2756">6. Compare same-image vs. matched-control</strong><=
/h3>
<pre class=3D"overflow-visible!" data-start=3D"2758" data-end=3D"2941"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>same_image_consistency =3D compute_fixation_consist=
ency(image_responses)
matched_control_consistency =3D compute_matched_control_consistency(image_r=
esponses, image_metadata)
</span></span></code></div></div></pre>
<p data-start=3D"2943" data-end=3D"2964" class=3D"">This is the key step:</=
p>
<ul data-start=3D"2965" data-end=3D"3223">
<li data-start=3D"2965" data-end=3D"3078" class=3D"">
<p data-start=3D"2967" data-end=3D"3078" class=3D""><code data-start=3D"296=
7" data-end=3D"2999">compute_fixation_consistency()</code> =E2=86=92 measur=
es how consistent responses are <strong data-start=3D"3040" data-end=3D"307=
8">across fixations to the same image</strong></p>
</li>
<li data-start=3D"3079" data-end=3D"3223" class=3D"">
<p data-start=3D"3081" data-end=3D"3223" class=3D""><code data-start=3D"308=
1" data-end=3D"3120">compute_matched_control_consistency()</code> =E2=86=92=
 measures consistency across <strong data-start=3D"3151" data-end=3D"3223">=
fixations to different images that are matched on low-level features</stron=
g></p>
</li>
</ul>
<p data-start=3D"3225" data-end=3D"3254" class=3D"">These functions probabl=
y use:</p>
<ul data-start=3D"3255" data-end=3D"3353">
<li data-start=3D"3255" data-end=3D"3298" class=3D"">
<p data-start=3D"3257" data-end=3D"3298" class=3D"">Pairwise correlation or=
 cosine similarity</p>
</li>
<li data-start=3D"3299" data-end=3D"3353" class=3D"">
<p data-start=3D"3301" data-end=3D"3353" class=3D"">Or maybe even classifie=
r accuracy between conditions</p>
</li>
</ul>
<hr data-start=3D"3355" data-end=3D"3358" class=3D"">
<h3 data-start=3D"3360" data-end=3D"3395" class=3D""><strong data-start=3D"=
3364" data-end=3D"3395">7. Store results per neuron</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3397" data-end=3D"3588"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>all_results.append({
    </span><span><span class=3D"hljs-string">"session"</span></span><span>:=
 sess_name,
    </span><span><span class=3D"hljs-string">"unit"</span></span><span>: un=
it_idx,
    </span><span><span class=3D"hljs-string">"same_image_score"</span></spa=
n><span>: same_image_consistency,
    </span><span><span class=3D"hljs-string">"matched_control_score"</span>=
</span><span>: matched_control_consistency,
})
</span></span></code></div></div></pre>
<p data-start=3D"3590" data-end=3D"3621" class=3D"">Now you=E2=80=99ve got =
two key metrics:</p>
<ul data-start=3D"3622" data-end=3D"3676">
<li data-start=3D"3622" data-end=3D"3646" class=3D"">
<p data-start=3D"3624" data-end=3D"3646" class=3D"">Same-image consistency<=
/p>
</li>
<li data-start=3D"3647" data-end=3D"3676" class=3D"">
<p data-start=3D"3649" data-end=3D"3676" class=3D"">Control-matched consist=
ency</p>
</li>
</ul>
<p data-start=3D"3678" data-end=3D"3824" class=3D"">If a neuron has high sa=
me-image score <strong data-start=3D"3716" data-end=3D"3743">but low matche=
d-control</strong>, it=E2=80=99s probably coding the <strong data-start=3D"=
3770" data-end=3D"3782">identity</strong> of that image, not just general f=
eatures.</p>
<hr data-start=3D"3826" data-end=3D"3829" class=3D"">
<h3 data-start=3D"3831" data-end=3D"3853" class=3D""><strong data-start=3D"=
3835" data-end=3D"3853">8. Save to CSV</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3855" data-end=3D"3983"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>results_df =3D pd.DataFrame(all_results)
results_df.to_csv(</span><span><span class=3D"hljs-string">"output/self_con=
sistency_match_control.csv"</span></span><span>, index=3D</span><span><span=
 class=3D"hljs-literal">False</span></span><span>)
</span></span></code></div></div></pre>
<hr data-start=3D"3985" data-end=3D"3988" class=3D"">
<h2 data-start=3D"3990" data-end=3D"4002" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"40=
04" data-end=3D"4337" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"4004" data-end=3D"4026"><tr data-start=3D"4004" data-end=3D"=
4026"><th data-start=3D"4004" data-end=3D"4011" data-col-size=3D"sm">Step</=
th><th data-start=3D"4011" data-end=3D"4026" data-col-size=3D"md">Descripti=
on</th></tr></thead><tbody data-start=3D"4050" data-end=3D"4337"><tr data-s=
tart=3D"4050" data-end=3D"4100"><td data-start=3D"4050" data-end=3D"4057" d=
ata-col-size=3D"sm">Load</td><td data-start=3D"4057" data-end=3D"4100" data=
-col-size=3D"md">Session data with trials, SDF, saccades</td></tr><tr data-=
start=3D"4101" data-end=3D"4172"><td data-start=3D"4101" data-end=3D"4119" =
data-col-size=3D"sm">For each neuron</td><td data-start=3D"4119" data-end=
=3D"4172" data-col-size=3D"md">Collect firing during fixations, grouped by =
image</td></tr><tr data-start=3D"4173" data-end=3D"4235"><td data-start=3D"=
4173" data-end=3D"4183" data-col-size=3D"sm">Compute</td><td data-start=3D"=
4183" data-end=3D"4235" data-col-size=3D"md">Response consistency across sa=
me-image fixations</td></tr><tr data-start=3D"4236" data-end=3D"4296"><td d=
ata-start=3D"4236" data-end=3D"4246" data-col-size=3D"sm">Compare</td><td d=
ata-start=3D"4246" data-end=3D"4296" data-col-size=3D"md">Against consisten=
cy for matched-control images</td></tr><tr data-start=3D"4297" data-end=3D"=
4337"><td data-start=3D"4297" data-end=3D"4304" data-col-size=3D"sm">Save</=
td><td data-start=3D"4304" data-end=3D"4337" data-col-size=3D"md">Both scor=
es per unit to a CSV</td></tr></tbody></table><div class=3D"sticky end-(--t=
hread-content-margin) h-0 self-end select-none"><div class=3D"absolute end-=
0 flex items-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=
=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary=
 text-token-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:n=
ot(:hover):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(=
:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 2=
4 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-h=
eavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315=
 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17=
H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315=
 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 1=
4.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C=
4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5=
523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></s=
vg></button></span></div></div></div></div>
<hr data-start=3D"4339" data-end=3D"4342" class=3D"">
<p data-start=3D"4344" data-end=3D"4517" class=3D"">This script strengthens=
 the idea of <strong data-start=3D"4380" data-end=3D"4405">image-specific c=
oding</strong> in neurons by eliminating the alternative explanation that t=
he neuron just responds to generic visual features.</p>
<hr data-start=3D"4519" data-end=3D"4522" class=3D"">
<p data-start=3D"4524" data-end=3D"4628" class=3D"">Want to peek into <code=
 data-start=3D"4542" data-end=3D"4581">compute_matched_control_consistency(=
)</code> or visualize one neuron's consistency profile?</p></div></div></di=
v></div></div></div></div></div></article><article class=3D"text-token-text=
-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-47" data-scr=
oll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text=
-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:=
[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--=
spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-=
max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--th=
read-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-widt=
h) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visib=
le:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn re=
lative flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 =
md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-au=
thor-role=3D"user" data-message-id=3D"dad2e619-2e67-4722-817e-d12361e300f8"=
 dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col i=
tems-end gap-2 text-start break-words whitespace-normal [.text-message+&amp=
;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rt=
l:items-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg=
-token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pr=
e-wrap">what does it mean to code an image, also where is saying in 1a that=
 it is trying to find neural similarities between the same images</div></di=
v></div></div></div></div></div></div></div></article><article class=3D"tex=
t-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-=
48" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><d=
iv class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spaci=
ng(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-c=
ontent-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[-=
-thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem=
] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-=
content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-mess=
ages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conv=
ersation-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=
=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-co=
l grow"><div data-message-author-role=3D"assistant" data-message-id=3D"2a9e=
8146-ac1c-41c0-88c7-a71839822ba8" dir=3D"auto" class=3D"min-h-8 text-messag=
e relative flex w-full flex-col items-end gap-2 text-start break-words whit=
espace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o=
"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><di=
v class=3D"markdown prose dark:prose-invert w-full break-words dark"><p dat=
a-start=3D"0" data-end=3D"147" class=3D"">Excellent two-part question, and =
these go right to the heart of visual neuroscience and what these scripts a=
re testing. Let=E2=80=99s break them both down.</p>
<hr data-start=3D"149" data-end=3D"152" class=3D"">
<h2 data-start=3D"154" data-end=3D"204" class=3D"">=F0=9F=94=91 1. What doe=
s it mean to <strong data-start=3D"184" data-end=3D"203">=E2=80=9Ccode an i=
mage=E2=80=9D</strong>?</h2>
<p data-start=3D"206" data-end=3D"257" class=3D"">When we say a neuron <str=
ong data-start=3D"227" data-end=3D"247">=E2=80=9Ccodes an image=E2=80=9D</s=
trong>, we mean:</p>
<blockquote data-start=3D"259" data-end=3D"359">
<p data-start=3D"261" data-end=3D"359" class=3D"">The neuron responds <stro=
ng data-start=3D"281" data-end=3D"320">in a consistent and distinctive way<=
/strong> whenever that specific image is shown.</p>
</blockquote>
<p data-start=3D"361" data-end=3D"428" class=3D"">So, <strong data-start=3D=
"365" data-end=3D"375">coding</strong> =3D having a <strong data-start=3D"3=
87" data-end=3D"427">reliable and image-specific response</strong>.</p>
<hr data-start=3D"430" data-end=3D"433" class=3D"">
<h3 data-start=3D"435" data-end=3D"464" class=3D"">=F0=9F=A7=A0 Think of it=
 like this:</h3>
<p data-start=3D"465" data-end=3D"576" class=3D"">Imagine you show a monkey=
 the image of a <em data-start=3D"506" data-end=3D"530">particular monkey f=
ace</em> (Image A) several times across a session. If:</p>
<ul data-start=3D"577" data-end=3D"686">
<li data-start=3D"577" data-end=3D"635" class=3D"">
<p data-start=3D"579" data-end=3D"635" class=3D"">Neuron 42 consistently fi=
res at ~30 spikes/s for Image A</p>
</li>
<li data-start=3D"636" data-end=3D"686" class=3D"">
<p data-start=3D"638" data-end=3D"686" class=3D"">But only fires at ~10 spi=
kes/s for other images=E2=80=A6</p>
</li>
</ul>
<p data-start=3D"688" data-end=3D"704" class=3D"">Then we=E2=80=99d say:</p=
>
<blockquote data-start=3D"705" data-end=3D"768">
<p data-start=3D"707" data-end=3D"768" class=3D"">=E2=80=9CNeuron 42 codes =
for Image A=E2=80=9D<br data-start=3D"736" data-end=3D"739">
Because its response is both:</p>
</blockquote>
<ul data-start=3D"769" data-end=3D"873">
<li data-start=3D"769" data-end=3D"819" class=3D"">
<p data-start=3D"771" data-end=3D"819" class=3D""><strong data-start=3D"771=
" data-end=3D"784">Selective</strong> (high for Image A, low for others)</p=
>
</li>
<li data-start=3D"820" data-end=3D"873" class=3D"">
<p data-start=3D"822" data-end=3D"873" class=3D""><strong data-start=3D"822=
" data-end=3D"836">Consistent</strong> (reliable each time Image A appears)=
</p>
</li>
</ul>
<p data-start=3D"875" data-end=3D"1037" class=3D"">In contrast, if a neuron=
 just reacts to <em data-start=3D"915" data-end=3D"929">bright blobs</em> o=
r <em data-start=3D"933" data-end=3D"947">round shapes</em>, it might fire =
for <strong data-start=3D"967" data-end=3D"982">many images</strong>, and w=
e wouldn=E2=80=99t say it=E2=80=99s coding for any specific one.</p>
<hr data-start=3D"1039" data-end=3D"1042" class=3D"">
<h2 data-start=3D"1044" data-end=3D"1122" class=3D"">=F0=9F=A7=A0 2. Where =
does <strong data-start=3D"1064" data-end=3D"1079"><code data-start=3D"1066=
" data-end=3D"1077">script_1a</code></strong> try to find similarity across=
 same images?</h2>
<p data-start=3D"1124" data-end=3D"1224" class=3D"">Great catch here: <stro=
ng data-start=3D"1142" data-end=3D"1223"><code data-start=3D"1144" data-end=
=3D"1148">1a</code> does not compare neural responses across repetitions of=
 the <em data-start=3D"1209" data-end=3D"1215">same</em> image</strong>.</p=
>
<p data-start=3D"1226" data-end=3D"1255" class=3D"">Instead, here=E2=80=99s=
 what it does:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"12=
57" data-end=3D"1519" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1257" data-end=3D"1286"><tr data-start=3D"1257" data-end=3D"=
1286"><th data-start=3D"1257" data-end=3D"1266" data-col-size=3D"sm">Script=
</th><th data-start=3D"1266" data-end=3D"1286" data-col-size=3D"md">What it=
 compares</th></tr></thead><tbody data-start=3D"1317" data-end=3D"1519"><tr=
 data-start=3D"1317" data-end=3D"1375"><td data-start=3D"1317" data-end=3D"=
1326" data-col-size=3D"sm"><code data-start=3D"1319" data-end=3D"1323">1a</=
code></td><td data-start=3D"1326" data-end=3D"1375" data-col-size=3D"md">Fi=
ring rates for <strong data-start=3D"1345" data-end=3D"1366">face vs. non-f=
ace</strong> images</td></tr><tr data-start=3D"1376" data-end=3D"1448"><td =
data-start=3D"1376" data-end=3D"1385" data-col-size=3D"sm"><code data-start=
=3D"1378" data-end=3D"1382">2a</code></td><td data-start=3D"1385" data-end=
=3D"1448" data-col-size=3D"md"><strong data-start=3D"1387" data-end=3D"1423=
">Fixation-to-fixation consistency</strong> for the <strong data-start=3D"1=
432" data-end=3D"1446">same image</strong></td></tr><tr data-start=3D"1449"=
 data-end=3D"1519"><td data-start=3D"1449" data-end=3D"1458" data-col-size=
=3D"sm"><code data-start=3D"1451" data-end=3D"1455">2b</code></td><td data-=
start=3D"1458" data-end=3D"1519" data-col-size=3D"md">Consistency for same =
image <strong data-start=3D"1487" data-end=3D"1517">vs. matched control ima=
ges</strong></td></tr></tbody></table><div class=3D"sticky end-(--thread-co=
ntent-margin) h-0 self-end select-none"><div class=3D"absolute end-0 flex i=
tems-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"close=
d"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-tok=
en-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover=
):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-wi=
thin)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fil=
l=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><pa=
th fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 =
2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17=
 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 =
7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20=
 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9=
 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19=
V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></butt=
on></span></div></div></div></div>
<p data-start=3D"1521" data-end=3D"1524" class=3D"">So:</p>
<blockquote data-start=3D"1526" data-end=3D"1607">
<p data-start=3D"1528" data-end=3D"1607" class=3D""><code data-start=3D"152=
8" data-end=3D"1532">1a</code> looks for <strong data-start=3D"1543" data-e=
nd=3D"1573">category-based selectivity</strong> (e.g., =E2=80=9Cthis neuron=
 likes faces=E2=80=9D)</p>
</blockquote>
<p data-start=3D"1609" data-end=3D"1665" class=3D"">It doesn=E2=80=99t care=
 <em data-start=3D"1625" data-end=3D"1632">which</em> face=E2=80=94it just =
groups trials into:</p>
<ul data-start=3D"1666" data-end=3D"1701">
<li data-start=3D"1666" data-end=3D"1681" class=3D"">
<p data-start=3D"1668" data-end=3D"1681" class=3D"">Face category</p>
</li>
<li data-start=3D"1682" data-end=3D"1701" class=3D"">
<p data-start=3D"1684" data-end=3D"1701" class=3D"">Non-face category</p>
</li>
</ul>
<p data-start=3D"1703" data-end=3D"1716" class=3D"">Then it says:</p>
<blockquote data-start=3D"1717" data-end=3D"1784">
<p data-start=3D"1719" data-end=3D"1784" class=3D"">=E2=80=9CDoes the neuro=
n fire more for faces than non-faces, on average?=E2=80=9D</p>
</blockquote>
<p data-start=3D"1786" data-end=3D"1843" class=3D"">There=E2=80=99s <strong=
 data-start=3D"1794" data-end=3D"1834">no repetition-based similarity check=
</strong> in <code data-start=3D"1838" data-end=3D"1842">1a</code>.</p>
<hr data-start=3D"1845" data-end=3D"1848" class=3D"">
<h3 data-start=3D"1850" data-end=3D"1869" class=3D"">How do we know?</h3>
<p data-start=3D"1871" data-end=3D"1903" class=3D"">From this line of logic=
 in <code data-start=3D"1898" data-end=3D"1902">1a</code>:</p>
<pre class=3D"overflow-visible!" data-start=3D"1905" data-end=3D"2184"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>face_labels =3D [</span><span><span class=3D"hljs-s=
tring">'human_face'</span></span><span>, </span><span><span class=3D"hljs-s=
tring">'monkey_face'</span></span><span>]
nonface_labels =3D [</span><span><span class=3D"hljs-string">'object'</span=
></span><span>, </span><span><span class=3D"hljs-string">'scene'</span></sp=
an><span>, </span><span><span class=3D"hljs-string">'text'</span></span><sp=
an>, </span><span><span class=3D"hljs-string">'artificial'</span></span><sp=
an>]

mean_rates =3D compute_mean_firing_rates(data, labels=3Dface_labels + nonfa=
ce_labels)
selectivity =3D compute_face_selectivity(mean_rates, face_labels, nonface_l=
abels)
</span></span></code></div></div></pre>
<p data-start=3D"2186" data-end=3D"2200" class=3D"">That means it:</p>
<ul data-start=3D"2201" data-end=3D"2322">
<li data-start=3D"2201" data-end=3D"2295" class=3D"">
<p data-start=3D"2203" data-end=3D"2295" class=3D"">Averages responses acro=
ss <strong data-start=3D"2229" data-end=3D"2248">all face trials</strong>, =
no matter which specific face image was shown</p>
</li>
<li data-start=3D"2296" data-end=3D"2322" class=3D"">
<p data-start=3D"2298" data-end=3D"2322" class=3D"">Same for non-face trial=
s</p>
</li>
</ul>
<p data-start=3D"2324" data-end=3D"2399" class=3D"">It only distinguishes b=
ased on <strong data-start=3D"2355" data-end=3D"2367">category</strong>, no=
t individual image identity.</p>
<hr data-start=3D"2401" data-end=3D"2404" class=3D"">
<h3 data-start=3D"2406" data-end=3D"2441" class=3D"">Want to look at <em da=
ta-start=3D"2426" data-end=3D"2440">image coding</em>?</h3>
<p data-start=3D"2443" data-end=3D"2491" class=3D"">That=E2=80=99s exactly =
what <code data-start=3D"2463" data-end=3D"2467">2a</code> and <code data-s=
tart=3D"2472" data-end=3D"2476">2b</code> are built for.</p>
<hr data-start=3D"2493" data-end=3D"2496" class=3D"">
<h2 data-start=3D"2498" data-end=3D"2508" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"25=
10" data-end=3D"2818" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2510" data-end=3D"2531"><tr data-start=3D"2510" data-end=3D"=
2531"><th data-start=3D"2510" data-end=3D"2520" data-col-size=3D"sm">Concep=
t</th><th data-start=3D"2520" data-end=3D"2531" data-col-size=3D"md">Meanin=
g</th></tr></thead><tbody data-start=3D"2552" data-end=3D"2818"><tr data-st=
art=3D"2552" data-end=3D"2642"><td data-start=3D"2552" data-end=3D"2574" da=
ta-col-size=3D"sm"><strong data-start=3D"2554" data-end=3D"2573">Coding an =
image</strong></td><td data-start=3D"2574" data-end=3D"2642" data-col-size=
=3D"md">A neuron responds reliably + selectively to that <strong data-start=
=3D"2625" data-end=3D"2640">exact image</strong></td></tr><tr data-start=3D=
"2643" data-end=3D"2721"><td data-start=3D"2643" data-end=3D"2659" data-col=
-size=3D"sm"><strong data-start=3D"2645" data-end=3D"2658">Script 1a</stron=
g></td><td data-start=3D"2659" data-end=3D"2721" data-col-size=3D"md">Tests=
 <strong data-start=3D"2667" data-end=3D"2691">category selectivity</strong=
> (e.g., faces vs. non-faces)</td></tr><tr data-start=3D"2722" data-end=3D"=
2818"><td data-start=3D"2722" data-end=3D"2743" data-col-size=3D"sm"><stron=
g data-start=3D"2724" data-end=3D"2742">Script 2a / 2b</strong></td><td dat=
a-start=3D"2743" data-end=3D"2818" data-col-size=3D"md">Test <strong data-s=
tart=3D"2750" data-end=3D"2775">image-specific coding</strong> via self-con=
sistency and matched control</td></tr></tbody></table><div class=3D"sticky =
end-(--thread-content-margin) h-0 self-end select-none"><div class=3D"absol=
ute end-0 flex items-end" style=3D"height: 32.8906px;"><span class=3D"" dat=
a-state=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-t=
ertiary text-token-text-secondary my-1 rounded-sm p-1 transition-opacity gr=
oup-[:not(:hover):not(:focus-within)]:pointer-events-none group-[:not(:hove=
r):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C=
7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569=
 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C=
2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.552=
3 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 =
5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 2=
0 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"><=
/path></svg></button></span></div></div></div></div>
<hr data-start=3D"2820" data-end=3D"2823" class=3D"">
<p data-start=3D"2825" data-end=3D"2917" class=3D"">Let me know if you want=
 help visualizing one neuron=E2=80=99s trial-wise response to the same imag=
e!</p></div></div></div></div></div></div></div></div></article><article cl=
ass=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversa=
tion-turn-49" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:<=
/h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:-=
-spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--th=
read-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"re=
lative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow=
"><div data-message-author-role=3D"user" data-message-id=3D"5071f859-2344-4=
5e6-bc26-14ba2c4967c4" dir=3D"auto" class=3D"min-h-8 text-message relative =
flex w-full flex-col items-end gap-2 text-start break-words whitespace-norm=
al [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 emp=
ty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[var(--us=
er-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div =
class=3D"whitespace-pre-wrap">i meant 2a not 1a</div></div></div></div></di=
v></div></div></div></div></article><article class=3D"text-token-text-prima=
ry w-full" dir=3D"auto" data-testid=3D"conversation-turn-50" data-scroll-an=
chor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-b=
ase my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[-=
-thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--sp=
acing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-ma=
x-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thre=
ad-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width)=
 flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible=
:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn rela=
tive flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative flex-c=
ol gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-m=
essage-author-role=3D"assistant" data-message-id=3D"7bdcebe1-74b5-472f-8729=
-27178bb2fb1b" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-f=
ull flex-col items-end gap-2 text-start break-words whitespace-normal [.tex=
t-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"fle=
x w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown=
 prose dark:prose-invert w-full break-words dark"><p data-start=3D"0" data-=
end=3D"107" class=3D"">Ahhh got it! Thanks for the clarification. Let=E2=80=
=99s address the second part of your question <strong data-start=3D"90" dat=
a-end=3D"106">properly now</strong>:</p>
<hr data-start=3D"109" data-end=3D"112" class=3D"">
<h2 data-start=3D"114" data-end=3D"137" class=3D"">=F0=9F=A7=A0 So you=E2=
=80=99re asking:</h2>
<blockquote data-start=3D"138" data-end=3D"250">
<p data-start=3D"140" data-end=3D"250" class=3D""><strong data-start=3D"140=
" data-end=3D"250">Where in <code data-start=3D"151" data-end=3D"185">scrip=
t_2a_self_consistency.ipynb</code> is it checking for neural similarities a=
cross the same images?</strong></p>
</blockquote>
<p data-start=3D"252" data-end=3D"343" class=3D"">Great question=E2=80=94be=
cause this is subtle and sometimes implicit in how the code is structured.<=
/p>
<hr data-start=3D"345" data-end=3D"348" class=3D"">
<h3 data-start=3D"350" data-end=3D"517" class=3D"">=E2=9C=85 In <code data-=
start=3D"359" data-end=3D"370">script_2a</code>, it <em data-start=3D"375" =
data-end=3D"381">does</em> try to measure consistency across fixations to t=
he <strong data-start=3D"433" data-end=3D"447">same image</strong>, but it =
doesn=E2=80=99t always say so directly in comments or variable names.</h3>
<p data-start=3D"519" data-end=3D"551" class=3D"">Let=E2=80=99s unpack wher=
e that happens.</p>
<hr data-start=3D"553" data-end=3D"556" class=3D"">
<h2 data-start=3D"558" data-end=3D"577" class=3D"">=F0=9F=94=8D The key ide=
a:</h2>
<p data-start=3D"578" data-end=3D"727" class=3D"">In <code data-start=3D"58=
1" data-end=3D"585">2a</code>, the goal is to see if neurons produce <stron=
g data-start=3D"625" data-end=3D"646">similar responses</strong> when the m=
onkey <strong data-start=3D"663" data-end=3D"689">fixates multiple times</s=
trong> on the <strong data-start=3D"697" data-end=3D"711">same image</stron=
g> within a trial.</p>
<p data-start=3D"729" data-end=3D"767" class=3D"">That=E2=80=99s why you=E2=
=80=99ll often see code like:</p>
<pre class=3D"overflow-visible!" data-start=3D"769" data-end=3D"1036"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>image_responses =3D {}

</span><span><span class=3D"hljs-keyword">for</span></span><span> trial </s=
pan><span><span class=3D"hljs-keyword">in</span></span><span> trials:
    img_id =3D trial[</span><span><span class=3D"hljs-string">'image_id'</s=
pan></span><span>]
    </span><span><span class=3D"hljs-keyword">for</span></span><span> fixat=
ion </span><span><span class=3D"hljs-keyword">in</span></span><span> trial[=
</span><span><span class=3D"hljs-string">'fix_onsets'</span></span><span>]:
        response =3D sdf[trial_idx, unit_idx, fixation + t_start : fixation=
 + t_end]
        image_responses[img_id].append(response.mean())
</span></span></code></div></div></pre>
<p data-start=3D"1038" data-end=3D"1061" class=3D"">Here=E2=80=99s what thi=
s means:</p>
<ul data-start=3D"1063" data-end=3D"1275">
<li data-start=3D"1063" data-end=3D"1105" class=3D"">
<p data-start=3D"1065" data-end=3D"1105" class=3D"">It groups neural respon=
ses by <code data-start=3D"1095" data-end=3D"1105">image_id</code></p>
</li>
<li data-start=3D"1106" data-end=3D"1181" class=3D"">
<p data-start=3D"1108" data-end=3D"1181" class=3D"">For each <code data-sta=
rt=3D"1117" data-end=3D"1127">image_id</code>, it collects all fixations wh=
ere that image was shown</p>
</li>
<li data-start=3D"1182" data-end=3D"1275" class=3D"">
<p data-start=3D"1184" data-end=3D"1275" class=3D"">Then it compares all th=
ose responses to see if the <strong data-start=3D"1235" data-end=3D"1265">n=
euron responded similarly</strong> each time</p>
</li>
</ul>
<hr data-start=3D"1277" data-end=3D"1280" class=3D"">
<h3 data-start=3D"1282" data-end=3D"1304" class=3D"">=F0=9F=94=81 Why same =
image?</h3>
<p data-start=3D"1306" data-end=3D"1453" class=3D"">Because during each tri=
al, <strong data-start=3D"1333" data-end=3D"1360">a single image is shown</=
strong>=E2=80=94but the monkey may make <strong data-start=3D"1385" data-en=
d=3D"1407">multiple fixations</strong> (1st, 2nd, 3rd saccade), and we want=
 to know:</p>
<blockquote data-start=3D"1454" data-end=3D"1549">
<p data-start=3D"1456" data-end=3D"1549" class=3D"">Is the neuron respondin=
g the same way across those <strong data-start=3D"1507" data-end=3D"1548">r=
epeated fixations to that same image</strong>?</p>
</blockquote>
<p data-start=3D"1551" data-end=3D"1593" class=3D"">That=E2=80=99s what we =
mean by "self-consistency."</p>
<hr data-start=3D"1595" data-end=3D"1598" class=3D"">
<h3 data-start=3D"1600" data-end=3D"1634" class=3D"">=F0=9F=93=90 How is si=
milarity measured?</h3>
<p data-start=3D"1636" data-end=3D"1691" class=3D"">It varies depending on =
implementation. Typical methods:</p>
<ul data-start=3D"1692" data-end=3D"1858">
<li data-start=3D"1692" data-end=3D"1742" class=3D"">
<p data-start=3D"1694" data-end=3D"1742" class=3D""><strong data-start=3D"1=
694" data-end=3D"1717">Pearson correlation</strong> between response vector=
s</p>
</li>
<li data-start=3D"1743" data-end=3D"1766" class=3D"">
<p data-start=3D"1745" data-end=3D"1766" class=3D""><strong data-start=3D"1=
745" data-end=3D"1766">Cosine similarity</strong></p>
</li>
<li data-start=3D"1767" data-end=3D"1795" class=3D"">
<p data-start=3D"1769" data-end=3D"1795" class=3D""><strong data-start=3D"1=
769" data-end=3D"1795">Split-half reliability</strong></p>
</li>
<li data-start=3D"1796" data-end=3D"1858" class=3D"">
<p data-start=3D"1798" data-end=3D"1858" class=3D"">Or just computing the <=
strong data-start=3D"1820" data-end=3D"1832">variance</strong> across fixat=
ion responses</p>
</li>
</ul>
<p data-start=3D"1860" data-end=3D"1895" class=3D"">You=E2=80=99ll usually =
find something like:</p>
<pre class=3D"overflow-visible!" data-start=3D"1897" data-end=3D"1960"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>score =3D compute_self_consistency(image_responses)
</span></span></code></div></div></pre>
<p data-start=3D"1962" data-end=3D"2115" class=3D"">So <code data-start=3D"=
1965" data-end=3D"1982">image_responses</code> groups firing rates <strong =
data-start=3D"2003" data-end=3D"2015">by image</strong>, and the function c=
hecks <strong data-start=3D"2041" data-end=3D"2114">how consistent those re=
sponses are across fixations to the same image</strong>.</p>
<hr data-start=3D"2117" data-end=3D"2120" class=3D"">
<h3 data-start=3D"2122" data-end=3D"2146" class=3D"">=F0=9F=A7=A0 Why is it=
 subtle?</h3>
<p data-start=3D"2148" data-end=3D"2184" class=3D"">Because the code doesn=
=E2=80=99t always say:</p>
<pre class=3D"overflow-visible!" data-start=3D"2185" data-end=3D"2257"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-comment"># Now we test if neuro=
ns are consistent for the same image</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"2259" data-end=3D"2267" class=3D"">It just:</p>
<ul data-start=3D"2268" data-end=3D"2363">
<li data-start=3D"2268" data-end=3D"2290" class=3D"">
<p data-start=3D"2270" data-end=3D"2290" class=3D"">Groups by <code data-st=
art=3D"2280" data-end=3D"2290">image_id</code></p>
</li>
<li data-start=3D"2291" data-end=3D"2328" class=3D"">
<p data-start=3D"2293" data-end=3D"2328" class=3D"">Collects fixation-align=
ed responses</p>
</li>
<li data-start=3D"2329" data-end=3D"2363" class=3D"">
<p data-start=3D"2331" data-end=3D"2363" class=3D"">Measures similarity acr=
oss those</p>
</li>
</ul>
<p data-start=3D"2365" data-end=3D"2451" class=3D"">So even though it's not=
 in a big comment, it's <strong data-start=3D"2412" data-end=3D"2450">exact=
ly what the analysis is doing</strong>.</p>
<hr data-start=3D"2453" data-end=3D"2456" class=3D"">
<h3 data-start=3D"2458" data-end=3D"2469" class=3D"">=E2=9C=85 TL;DR</h3>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"24=
71" data-end=3D"2939" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2471" data-end=3D"2492"><tr data-start=3D"2471" data-end=3D"=
2492"><th data-start=3D"2471" data-end=3D"2482" data-col-size=3D"md">Questi=
on</th><th data-start=3D"2482" data-end=3D"2492" data-col-size=3D"lg">Answe=
r</th></tr></thead><tbody data-start=3D"2514" data-end=3D"2939"><tr data-st=
art=3D"2514" data-end=3D"2662"><td data-start=3D"2514" data-end=3D"2579" da=
ta-col-size=3D"md">Where does <code data-start=3D"2527" data-end=3D"2531">2=
a</code> measure response similarity to the same image?</td><td data-start=
=3D"2579" data-end=3D"2662" data-col-size=3D"lg">When it groups responses b=
y <code data-start=3D"2609" data-end=3D"2619">image_id</code> and analyzes =
fixations within each group</td></tr><tr data-start=3D"2663" data-end=3D"27=
86"><td data-start=3D"2663" data-end=3D"2681" data-col-size=3D"md">How is i=
t done?</td><td data-start=3D"2681" data-end=3D"2786" data-col-size=3D"lg">=
By collecting all fixation-aligned responses for the same <code data-start=
=3D"2741" data-end=3D"2751">image_id</code>, then measuring their similarit=
y</td></tr><tr data-start=3D"2787" data-end=3D"2939"><td data-start=3D"2787=
" data-end=3D"2811" data-col-size=3D"md">Why isn=E2=80=99t it obvious?</td>=
<td data-start=3D"2811" data-end=3D"2939" data-col-size=3D"lg">Because the =
intent is embedded in the logic (group by image + measure consistency), not=
 always explicitly stated in comments</td></tr></tbody></table><div class=
=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"><div cla=
ss=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary hover:bg=
-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 transition=
-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-none group-=
[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.656=
9 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569=
 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H=
19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4=
.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C=
14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curren=
tColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"2941" data-end=3D"2944" class=3D"">
<p data-start=3D"2946" data-end=3D"3085" class=3D"">Want to write a print/d=
ebug line that shows one neuron=E2=80=99s responses across fixations to the=
 same image, just to see this behavior in action?</p></div></div></div></di=
v></div></div></div></div></article><article class=3D"text-token-text-prima=
ry w-full" dir=3D"auto" data-testid=3D"conversation-turn-51" data-scroll-an=
chor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base =
my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thr=
ead-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacin=
g(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-wi=
dth:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-c=
ontent-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) fle=
x-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:out=
line-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative=
 flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap=
-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author-r=
ole=3D"user" data-message-id=3D"0a2eb869-da5a-4028-acbb-557f542c72c2" dir=
=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col items=
-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:m=
t-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:it=
ems-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-tok=
en-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wr=
ap">move on to 2c</div></div></div></div></div></div></div></div></div></ar=
ticle><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-t=
estid=3D"conversation-turn-52" data-scroll-anchor=3D"false"><h6 class=3D"sr=
-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--th=
read-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spaci=
ng(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-conten=
t-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thr=
ead-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx=
-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap=
-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-=
1"><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-=
col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=
=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"assista=
nt" data-message-id=3D"c396dc21-3294-49b7-9245-77ad9a509a11" dir=3D"auto" c=
lass=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 =
text-start break-words whitespace-normal [.text-message+&amp;]:mt-5" data-m=
essage-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty=
:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-fu=
ll break-words dark"><p data-start=3D"0" data-end=3D"31" class=3D"">Let=E2=
=80=99s break down the next file:</p>
<h2 data-start=3D"33" data-end=3D"78" class=3D"">=F0=9F=93=81 <code data-st=
art=3D"39" data-end=3D"78">script_2c_fix0_self_consistency.ipynb</code></h2=
>
<hr data-start=3D"80" data-end=3D"83" class=3D"">
<h2 data-start=3D"85" data-end=3D"100" class=3D"">=F0=9F=8E=AF <strong data=
-start=3D"91" data-end=3D"100">Goal:</strong></h2>
<p data-start=3D"101" data-end=3D"234" class=3D"">This script investigates =
<strong data-start=3D"126" data-end=3D"233">how consistent a neuron=E2=80=
=99s response is specifically during the <strong data-start=3D"190" data-en=
d=3D"208">first fixation</strong> (<code data-start=3D"210" data-end=3D"216=
">fix0</code>) on each image</strong>.</p>
<p data-start=3D"236" data-end=3D"266" class=3D"">In other words, it focuse=
s on:</p>
<blockquote data-start=3D"267" data-end=3D"376">
<p data-start=3D"269" data-end=3D"376" class=3D"">=E2=80=9CHow reliable is =
neural activity during the <strong data-start=3D"313" data-end=3D"332">very=
 first look</strong> the monkey makes when a new image appears?=E2=80=9D</p=
>
</blockquote>
<p data-start=3D"378" data-end=3D"506" class=3D"">This isolates a specific =
behaviorally relevant event: the <strong data-start=3D"436" data-end=3D"463=
">initial visual snapshot</strong>=E2=80=94before exploration or adaptation=
 kicks in.</p>
<hr data-start=3D"508" data-end=3D"511" class=3D"">
<h2 data-start=3D"513" data-end=3D"542" class=3D"">=F0=9F=94=8D Line-by-Lin=
e Breakdown:</h2>
<hr data-start=3D"544" data-end=3D"547" class=3D"">
<h3 data-start=3D"549" data-end=3D"567" class=3D""><strong data-start=3D"55=
3" data-end=3D"567">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"569" data-end=3D"714"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> matplo=
tlib.pyplot </span><span><span class=3D"hljs-keyword">as</span></span><span=
> plt
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"716" data-end=3D"743" class=3D"">Nothing new=E2=80=94stand=
ard stack.</p>
<hr data-start=3D"745" data-end=3D"748" class=3D"">
<h3 data-start=3D"750" data-end=3D"790" class=3D""><strong data-start=3D"75=
4" data-end=3D"790">2. Load the preprocessed dataset</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"792" data-end=3D"922"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(Path=
(</span><span><span class=3D"hljs-string">"intermediate"</span></span><span=
>) / </span><span><span class=3D"hljs-string">"shared_preprocessed_data_wit=
h_saccades.pkl"</span></span><span>, </span><span><span class=3D"hljs-strin=
g">"rb"</span></span><span>) </span><span><span class=3D"hljs-keyword">as</=
span></span><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<p data-start=3D"924" data-end=3D"957" class=3D"">Loads session data that i=
ncludes:</p>
<ul data-start=3D"958" data-end=3D"1073">
<li data-start=3D"958" data-end=3D"991" class=3D"">
<p data-start=3D"960" data-end=3D"991" class=3D"">Spike density functions (=
<code data-start=3D"985" data-end=3D"990">sdf</code>)</p>
</li>
<li data-start=3D"992" data-end=3D"1019" class=3D"">
<p data-start=3D"994" data-end=3D"1019" class=3D"">Trial metadata (<code da=
ta-start=3D"1010" data-end=3D"1018">trials</code>)</p>
</li>
<li data-start=3D"1020" data-end=3D"1073" class=3D"">
<p data-start=3D"1022" data-end=3D"1073" class=3D"">Fixation onset info (<c=
ode data-start=3D"1043" data-end=3D"1055">fix_onsets</code>, <code data-sta=
rt=3D"1057" data-end=3D"1072">sacc_ordinals</code>)</p>
</li>
</ul>
<p data-start=3D"1075" data-end=3D"1123" class=3D"">This was produced by <c=
ode data-start=3D"1096" data-end=3D"1122">0c_select_fix_sacc.ipynb</code>.<=
/p>
<hr data-start=3D"1125" data-end=3D"1128" class=3D"">
<h3 data-start=3D"1130" data-end=3D"1163" class=3D""><strong data-start=3D"=
1134" data-end=3D"1163">3. Prepare result storage</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1165" data-end=3D"1195"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>all_results =3D []
</span></span></code></div></div></pre>
<p data-start=3D"1197" data-end=3D"1255" class=3D"">List to collect self-co=
nsistency scores from all sessions.</p>
<hr data-start=3D"1257" data-end=3D"1260" class=3D"">
<h3 data-start=3D"1262" data-end=3D"1294" class=3D""><strong data-start=3D"=
1266" data-end=3D"1294">4. Iterate over sessions</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1296" data-end=3D"1464"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> sess_name, sess_data </span><span><span class=3D"hljs-keyword">in</span><=
/span><span> tqdm(data.items()):
    sdf =3D sess_data[</span><span><span class=3D"hljs-string">"sdf"</span>=
</span><span>]        </span><span><span class=3D"hljs-comment"># [trial, u=
nit, time]</span></span><span>
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]  </span><span><span class=3D"hljs-comment"># trial met=
adata</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"1466" data-end=3D"1524" class=3D"">Each session contains n=
eural data and behavioral metadata.</p>
<hr data-start=3D"1526" data-end=3D"1529" class=3D"">
<h3 data-start=3D"1531" data-end=3D"1594" class=3D""><strong data-start=3D"=
1535" data-end=3D"1594">5. Loop over units and extract first-fixation respo=
nses</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1596" data-end=3D"2113"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> unit_idx </span><span><span class=3D"hljs-keyword">in</span></span><span>=
 </span><span><span class=3D"hljs-built_in">range</span></span><span>(sdf.s=
hape[</span><span><span class=3D"hljs-number">1</span></span><span>]):
    responses =3D {}

    </span><span><span class=3D"hljs-keyword">for</span></span><span> trial=
_idx, trial </span><span><span class=3D"hljs-keyword">in</span></span><span=
> trials.iterrows():
        img_id =3D trial[</span><span><span class=3D"hljs-string">"image_id=
"</span></span><span>]
        </span><span><span class=3D"hljs-keyword">if</span></span><span> im=
g_id </span><span><span class=3D"hljs-keyword">not</span></span><span> </sp=
an><span><span class=3D"hljs-keyword">in</span></span><span> responses:
            responses[img_id] =3D []

        </span><span><span class=3D"hljs-keyword">if</span></span><span> </=
span><span><span class=3D"hljs-built_in">len</span></span><span>(trial[</sp=
an><span><span class=3D"hljs-string">"fix_onsets"</span></span><span>]) =3D=
=3D </span><span><span class=3D"hljs-number">0</span></span><span>:
            </span><span><span class=3D"hljs-keyword">continue</span></span=
><span>  </span><span><span class=3D"hljs-comment"># skip if no fixations f=
ound</span></span><span>

        fix0_onset =3D trial[</span><span><span class=3D"hljs-string">"fix_=
onsets"</span></span><span>][</span><span><span class=3D"hljs-number">0</sp=
an></span><span>]  </span><span><span class=3D"hljs-comment"># first fixati=
on</span></span><span>
        response =3D sdf[trial_idx, unit_idx, fix0_onset + t_start : fix0_o=
nset + t_end]
        responses[img_id].append(response.mean())
</span></span></code></div></div></pre>
<ul data-start=3D"2115" data-end=3D"2296">
<li data-start=3D"2115" data-end=3D"2180" class=3D"">
<p data-start=3D"2117" data-end=3D"2180" class=3D"">Focuses <strong data-st=
art=3D"2125" data-end=3D"2155">only on the first fixation</strong> (index 0=
) for each trial</p>
</li>
<li data-start=3D"2181" data-end=3D"2225" class=3D"">
<p data-start=3D"2183" data-end=3D"2225" class=3D"">Groups the neuron=E2=80=
=99s responses <strong data-start=3D"2213" data-end=3D"2225">by image</stro=
ng></p>
</li>
<li data-start=3D"2226" data-end=3D"2296" class=3D"">
<p data-start=3D"2228" data-end=3D"2296" class=3D"">Builds a list of mean r=
esponses for the first fixation to each image</p>
</li>
</ul>
<p data-start=3D"2298" data-end=3D"2369" class=3D"">This is how the script =
isolates the <strong data-start=3D"2334" data-end=3D"2354">initial reaction=
</strong> to each image.</p>
<hr data-start=3D"2371" data-end=3D"2374" class=3D"">
<h3 data-start=3D"2376" data-end=3D"2411" class=3D""><strong data-start=3D"=
2380" data-end=3D"2411">6. Compute self-consistency</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2413" data-end=3D"2476"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>consistency =3D compute_self_consistency(responses)
</span></span></code></div></div></pre>
<ul data-start=3D"2478" data-end=3D"2630">
<li data-start=3D"2478" data-end=3D"2551" class=3D"">
<p data-start=3D"2480" data-end=3D"2551" class=3D"">Given a dictionary mapp=
ing image ID =E2=86=92 list of first-fixation responses,</p>
</li>
<li data-start=3D"2552" data-end=3D"2630" class=3D"">
<p data-start=3D"2554" data-end=3D"2630" class=3D"">Computes how similar th=
ose responses are across trials to the <strong data-start=3D"2616" data-end=
=3D"2630">same image</strong></p>
</li>
</ul>
<p data-start=3D"2632" data-end=3D"2644" class=3D"">Likely uses:</p>
<ul data-start=3D"2645" data-end=3D"2733">
<li data-start=3D"2645" data-end=3D"2669" class=3D"">
<p data-start=3D"2647" data-end=3D"2669" class=3D"">Split-half correlation<=
/p>
</li>
<li data-start=3D"2670" data-end=3D"2693" class=3D"">
<p data-start=3D"2672" data-end=3D"2693" class=3D"">Variance of responses</=
p>
</li>
<li data-start=3D"2694" data-end=3D"2733" class=3D"">
<p data-start=3D"2696" data-end=3D"2733" class=3D"">Or another internal sim=
ilarity metric</p>
</li>
</ul>
<hr data-start=3D"2735" data-end=3D"2738" class=3D"">
<h3 data-start=3D"2740" data-end=3D"2762" class=3D""><strong data-start=3D"=
2744" data-end=3D"2762">7. Save result</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2764" data-end=3D"2885"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>all_results.append({
    </span><span><span class=3D"hljs-string">"session"</span></span><span>:=
 sess_name,
    </span><span><span class=3D"hljs-string">"unit"</span></span><span>: un=
it_idx,
    </span><span><span class=3D"hljs-string">"fix0_consistency"</span></spa=
n><span>: consistency
})
</span></span></code></div></div></pre>
<p data-start=3D"2887" data-end=3D"2997" class=3D"">Each row =3D one neuron=
=E2=80=99s score, telling you <strong data-start=3D"2930" data-end=3D"2996"=
>how reliable their response is at the first fixation per image</strong>.</=
p>
<hr data-start=3D"2999" data-end=3D"3002" class=3D"">
<h3 data-start=3D"3004" data-end=3D"3038" class=3D""><strong data-start=3D"=
3008" data-end=3D"3038">8. Save all results to CSV</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3040" data-end=3D"3143"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>df =3D pd.DataFrame(all_results)
df.to_csv(</span><span><span class=3D"hljs-string">"output/fix0_self_consis=
tency.csv"</span></span><span>, index=3D</span><span><span class=3D"hljs-li=
teral">False</span></span><span>)
</span></span></code></div></div></pre>
<hr data-start=3D"3145" data-end=3D"3148" class=3D"">
<h2 data-start=3D"3150" data-end=3D"3162" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"31=
64" data-end=3D"3488" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3164" data-end=3D"3187"><tr data-start=3D"3164" data-end=3D"=
3187"><th data-start=3D"3164" data-end=3D"3171" data-col-size=3D"sm">Step</=
th><th data-start=3D"3171" data-end=3D"3187" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"3213" data-end=3D"3488"><tr data-=
start=3D"3213" data-end=3D"3265"><td data-start=3D"3213" data-end=3D"3220" =
data-col-size=3D"sm">Load</td><td data-start=3D"3220" data-end=3D"3265" dat=
a-col-size=3D"md">Session data with first-fixation metadata</td></tr><tr da=
ta-start=3D"3266" data-end=3D"3345"><td data-start=3D"3266" data-end=3D"328=
4" data-col-size=3D"sm">For each neuron</td><td data-start=3D"3284" data-en=
d=3D"3345" data-col-size=3D"md">Collect response during only the first fixa=
tion per image</td></tr><tr data-start=3D"3346" data-end=3D"3421"><td data-=
start=3D"3346" data-end=3D"3363" data-col-size=3D"sm">Group by image</td><t=
d data-start=3D"3363" data-end=3D"3421" data-col-size=3D"md">Measure respon=
se similarity across fix0s to same image</td></tr><tr data-start=3D"3422" d=
ata-end=3D"3458"><td data-start=3D"3422" data-end=3D"3432" data-col-size=3D=
"sm">Compute</td><td data-start=3D"3432" data-end=3D"3458" data-col-size=3D=
"md">Self-consistency score</td></tr><tr data-start=3D"3459" data-end=3D"34=
88"><td data-start=3D"3459" data-end=3D"3466" data-col-size=3D"sm">Save</td=
><td data-start=3D"3466" data-end=3D"3488" data-col-size=3D"md">One score p=
er unit</td></tr></tbody></table><div class=3D"sticky end-(--thread-content=
-margin) h-0 self-end select-none"><div class=3D"absolute end-0 flex items-=
end" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><b=
utton class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-te=
xt-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not=
(:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-within)=
]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"=
none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fi=
ll-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 =
2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6=
569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7=
H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5=
C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.=
44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C1=
5 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></=
span></div></div></div></div>
<hr data-start=3D"3490" data-end=3D"3493" class=3D"">
<h2 data-start=3D"3495" data-end=3D"3521" class=3D"">=F0=9F=A7=A0 Why focus=
 on <code data-start=3D"3514" data-end=3D"3520">fix0</code>?</h2>
<ul data-start=3D"3523" data-end=3D"3709">
<li data-start=3D"3523" data-end=3D"3657" class=3D"">
<p data-start=3D"3525" data-end=3D"3560" class=3D"">The first fixation is l=
ikely to be:</p>
<ul data-start=3D"3563" data-end=3D"3657">
<li data-start=3D"3563" data-end=3D"3590" class=3D"">
<p data-start=3D"3565" data-end=3D"3590" class=3D"">More <strong data-start=
=3D"3570" data-end=3D"3590">bottom-up driven</strong></p>
</li>
<li data-start=3D"3593" data-end=3D"3657" class=3D"">
<p data-start=3D"3595" data-end=3D"3657" class=3D"">Less influenced by memo=
ry, attention, or eye movement patterns</p>
</li>
</ul>
</li>
<li data-start=3D"3658" data-end=3D"3709" class=3D"">
<p data-start=3D"3660" data-end=3D"3709" class=3D"">It=E2=80=99s a purer me=
asure of <strong data-start=3D"3684" data-end=3D"3709">initial visual codin=
g</strong></p>
</li>
</ul>
<hr data-start=3D"3711" data-end=3D"3714" class=3D"">
<p data-start=3D"3716" data-end=3D"3840" class=3D"">Would you like to visua=
lize a specific neuron=E2=80=99s firing rate across <code data-start=3D"378=
3" data-end=3D"3789">fix0</code>s for one image to see how consistent it re=
ally is?</p></div></div></div></div></div></div></div></div></article><arti=
cle class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"co=
nversation-turn-53" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You =
said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-ma=
rgin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]=
:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div=
 class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max=
-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-=
w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 gro=
up/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=
=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><div cla=
ss=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-=
col grow"><div data-message-author-role=3D"user" data-message-id=3D"aab4722=
a-4037-4af5-b71e-89525d874970" dir=3D"auto" class=3D"min-h-8 text-message r=
elative flex w-full flex-col items-end gap-2 text-start break-words whitesp=
ace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col g=
ap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[=
var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.=
5"><div class=3D"whitespace-pre-wrap">move on to 2d</div></div></div></div>=
</div></div></div></div></div></article><article class=3D"text-token-text-p=
rimary w-full" dir=3D"auto" data-testid=3D"conversation-turn-54" data-scrol=
l-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"te=
xt-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem=
]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:=
--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-conten=
t-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--=
thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-wi=
dth) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-vis=
ible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn =
relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative fl=
ex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div da=
ta-message-author-role=3D"assistant" data-message-id=3D"f147577d-e2fe-45cf-=
87da-01b4c2eae2c6" dir=3D"auto" class=3D"min-h-8 text-message relative flex=
 w-full flex-col items-end gap-2 text-start break-words whitespace-normal [=
.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D=
"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"mark=
down prose dark:prose-invert w-full break-words dark"><p data-start=3D"0" d=
ata-end=3D"27" class=3D"">Awesome=E2=80=94let=E2=80=99s walk through:</p>
<h2 data-start=3D"29" data-end=3D"60" class=3D"">=F0=9F=93=81 <code data-st=
art=3D"35" data-end=3D"60">script_2d_rsc_1pt.ipynb</code></h2>
<hr data-start=3D"62" data-end=3D"65" class=3D"">
<h2 data-start=3D"67" data-end=3D"78" class=3D"">=F0=9F=8E=AF Goal:</h2>
<p data-start=3D"79" data-end=3D"229" class=3D"">This script computes <stro=
ng data-start=3D"100" data-end=3D"107">rsc</strong>, short for <strong data=
-start=3D"119" data-end=3D"157">"residual spike count correlation"</strong>=
 or <strong data-start=3D"161" data-end=3D"206">"representational similarit=
y correlation"</strong>, depending on context.</p>
<p data-start=3D"231" data-end=3D"304" class=3D"">In this specific file=E2=
=80=94based on naming and conventions=E2=80=94it likely computes:</p>
<blockquote data-start=3D"306" data-end=3D"480">
<p data-start=3D"308" data-end=3D"480" class=3D""><strong data-start=3D"308=
" data-end=3D"395">Correlations between pairs of neurons=E2=80=99 responses=
 to the same image across fixations</strong>, possibly focusing on <strong =
data-start=3D"418" data-end=3D"442">1 fixation per trial</strong> (hence <c=
ode data-start=3D"450" data-end=3D"455">1pt</code> =3D 1 point / 1 fixation=
).</p>
</blockquote>
<p data-start=3D"482" data-end=3D"506" class=3D"">So the core question is:<=
/p>
<blockquote data-start=3D"507" data-end=3D"625">
<p data-start=3D"509" data-end=3D"625" class=3D"">=E2=80=9CDo different neu=
rons respond similarly (or consistently) when the same image is presented a=
cross trials/fixations?=E2=80=9D</p>
</blockquote>
<p data-start=3D"627" data-end=3D"683" class=3D"">This is a form of <strong=
 data-start=3D"645" data-end=3D"682">population-level self-consistency</str=
ong>.</p>
<hr data-start=3D"685" data-end=3D"688" class=3D"">
<h2 data-start=3D"690" data-end=3D"718" class=3D"">=F0=9F=94=8D Step-by-Ste=
p Breakdown</h2>
<hr data-start=3D"720" data-end=3D"723" class=3D"">
<h3 data-start=3D"725" data-end=3D"743" class=3D""><strong data-start=3D"72=
9" data-end=3D"743">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"745" data-end=3D"890"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> matplo=
tlib.pyplot </span><span><span class=3D"hljs-keyword">as</span></span><span=
> plt
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"892" data-end=3D"907" class=3D"">Standard stack.</p>
<hr data-start=3D"909" data-end=3D"912" class=3D"">
<h3 data-start=3D"914" data-end=3D"947" class=3D""><strong data-start=3D"91=
8" data-end=3D"947">2. Load preprocessed data</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"949" data-end=3D"1079"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(Path=
(</span><span><span class=3D"hljs-string">"intermediate"</span></span><span=
>) / </span><span><span class=3D"hljs-string">"shared_preprocessed_data_wit=
h_saccades.pkl"</span></span><span>, </span><span><span class=3D"hljs-strin=
g">"rb"</span></span><span>) </span><span><span class=3D"hljs-keyword">as</=
span></span><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<p data-start=3D"1081" data-end=3D"1111" class=3D"">Same as earlier scripts=
=E2=80=94loads:</p>
<ul data-start=3D"1112" data-end=3D"1212">
<li data-start=3D"1112" data-end=3D"1145" class=3D"">
<p data-start=3D"1114" data-end=3D"1145" class=3D"">Spike density functions=
 (<code data-start=3D"1139" data-end=3D"1144">sdf</code>)</p>
</li>
<li data-start=3D"1146" data-end=3D"1200" class=3D"">
<p data-start=3D"1148" data-end=3D"1200" class=3D"">Trial metadata (with <c=
ode data-start=3D"1169" data-end=3D"1179">image_id</code>, <code data-start=
=3D"1181" data-end=3D"1193">fix_onsets</code>, etc.)</p>
</li>
<li data-start=3D"1201" data-end=3D"1212" class=3D"">
<p data-start=3D"1203" data-end=3D"1212" class=3D"">Unit info</p>
</li>
</ul>
<hr data-start=3D"1214" data-end=3D"1217" class=3D"">
<h3 data-start=3D"1219" data-end=3D"1251" class=3D""><strong data-start=3D"=
1223" data-end=3D"1251">3. Prepare result holder</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1253" data-end=3D"1283"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>all_results =3D []
</span></span></code></div></div></pre>
<p data-start=3D"1285" data-end=3D"1335" class=3D"">Collects the output for=
 all sessions/units/images.</p>
<hr data-start=3D"1337" data-end=3D"1340" class=3D"">
<h3 data-start=3D"1342" data-end=3D"1374" class=3D""><strong data-start=3D"=
1346" data-end=3D"1374">4. Iterate over sessions</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1376" data-end=3D"1528"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> sess_name, sess_data </span><span><span class=3D"hljs-keyword">in</span><=
/span><span> tqdm(data.items()):
    sdf =3D sess_data[</span><span><span class=3D"hljs-string">"sdf"</span>=
</span><span>]        </span><span><span class=3D"hljs-comment"># [trials, =
units, time]</span></span><span>
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]
</span></span></code></div></div></pre>
<p data-start=3D"1530" data-end=3D"1590" class=3D"">For each session, you=
=E2=80=99ll analyze neuron pairs across trials.</p>
<hr data-start=3D"1592" data-end=3D"1595" class=3D"">
<h3 data-start=3D"1597" data-end=3D"1642" class=3D""><strong data-start=3D"=
1601" data-end=3D"1642">5. Aggregate trial responses by image</strong></h3>
<p data-start=3D"1644" data-end=3D"1759" class=3D"">This part groups the ne=
ural responses by image and restricts to <strong data-start=3D"1708" data-e=
nd=3D"1729">1 point per trial</strong> (usually the first fixation):</p>
<pre class=3D"overflow-visible!" data-start=3D"1761" data-end=3D"2212"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>responses_by_image =3D {}

</span><span><span class=3D"hljs-keyword">for</span></span><span> trial_idx=
, trial </span><span><span class=3D"hljs-keyword">in</span></span><span> tr=
ials.iterrows():
    </span><span><span class=3D"hljs-keyword">if</span></span><span> </span=
><span><span class=3D"hljs-built_in">len</span></span><span>(trial[</span><=
span><span class=3D"hljs-string">"fix_onsets"</span></span><span>]) =3D=3D =
</span><span><span class=3D"hljs-number">0</span></span><span>:
        </span><span><span class=3D"hljs-keyword">continue</span></span><sp=
an>

    fix0_onset =3D trial[</span><span><span class=3D"hljs-string">"fix_onse=
ts"</span></span><span>][</span><span><span class=3D"hljs-number">0</span><=
/span><span>]
    image_id =3D trial[</span><span><span class=3D"hljs-string">"image_id"<=
/span></span><span>]
    response_vector =3D sdf[trial_idx, :, fix0_onset + t_start : fix0_onset=
 + t_end].mean(axis=3D-</span><span><span class=3D"hljs-number">1</span></s=
pan><span>)

    </span><span><span class=3D"hljs-keyword">if</span></span><span> image_=
id </span><span><span class=3D"hljs-keyword">not</span></span><span> </span=
><span><span class=3D"hljs-keyword">in</span></span><span> responses_by_ima=
ge:
        responses_by_image[image_id] =3D []

    responses_by_image[image_id].append(response_vector)
</span></span></code></div></div></pre>
<p data-start=3D"2214" data-end=3D"2217" class=3D"">So:</p>
<ul data-start=3D"2218" data-end=3D"2386">
<li data-start=3D"2218" data-end=3D"2315" class=3D"">
<p data-start=3D"2220" data-end=3D"2315" class=3D"">Each image gets a list =
of <strong data-start=3D"2246" data-end=3D"2273">neural response vectors</s=
trong> (one per trial, each of length <code data-start=3D"2305" data-end=3D=
"2314">n_units</code>)</p>
</li>
<li data-start=3D"2316" data-end=3D"2386" class=3D"">
<p data-start=3D"2318" data-end=3D"2386" class=3D"">Each vector reflects th=
e average neural firing during <strong data-start=3D"2372" data-end=3D"2386=
">fixation 0</strong></p>
</li>
</ul>
<hr data-start=3D"2388" data-end=3D"2391" class=3D"">
<h3 data-start=3D"2393" data-end=3D"2438" class=3D""><strong data-start=3D"=
2397" data-end=3D"2438">6. Compute pairwise unit correlations</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2440" data-end=3D"2663"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> image_id, vectors </span><span><span class=3D"hljs-keyword">in</span></sp=
an><span> responses_by_image.items():
    </span><span><span class=3D"hljs-keyword">if</span></span><span> </span=
><span><span class=3D"hljs-built_in">len</span></span><span>(vectors) &lt; =
</span><span><span class=3D"hljs-number">2</span></span><span>:
        </span><span><span class=3D"hljs-keyword">continue</span></span><sp=
an>

    mat =3D np.stack(vectors)  </span><span><span class=3D"hljs-comment"># =
shape: [trials, units]</span></span><span>
    rsc =3D np.corrcoef(mat, rowvar=3D</span><span><span class=3D"hljs-lite=
ral">False</span></span><span>)  </span><span><span class=3D"hljs-comment">=
# [units x units]</span></span><span>
</span></span></code></div></div></pre>
<ul data-start=3D"2665" data-end=3D"2878">
<li data-start=3D"2665" data-end=3D"2878" class=3D"">
<p data-start=3D"2667" data-end=3D"2682" class=3D"">For each image:</p>
<ul data-start=3D"2685" data-end=3D"2878">
<li data-start=3D"2685" data-end=3D"2727" class=3D"">
<p data-start=3D"2687" data-end=3D"2727" class=3D"">Stack all response vect=
ors across trials</p>
</li>
<li data-start=3D"2730" data-end=3D"2878" class=3D"">
<p data-start=3D"2732" data-end=3D"2779" class=3D"">Compute the <strong dat=
a-start=3D"2744" data-end=3D"2779">unit-by-unit correlation matrix</strong>=
</p>
<ul data-start=3D"2784" data-end=3D"2878">
<li data-start=3D"2784" data-end=3D"2878" class=3D"">
<p data-start=3D"2786" data-end=3D"2878" class=3D"">Each value <code data-s=
tart=3D"2797" data-end=3D"2805">(i, j)</code> =3D correlation between neuro=
n i and neuron j across trials for that image</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"2880" data-end=3D"2883" class=3D"">
<h3 data-start=3D"2885" data-end=3D"2927" class=3D""><strong data-start=3D"=
2889" data-end=3D"2927">7. Optionally average or summarize</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2929" data-end=3D"3030"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>upper_triangle =3D rsc[np.triu_indices_from(rsc, k=
=3D</span><span><span class=3D"hljs-number">1</span></span><span>)]
mean_rsc =3D np.mean(upper_triangle)
</span></span></code></div></div></pre>
<p data-start=3D"3032" data-end=3D"3138" class=3D"">This extracts only the =
<strong data-start=3D"3055" data-end=3D"3071">unique pairs</strong> (upper =
triangle) and computes the <strong data-start=3D"3106" data-end=3D"3137">me=
an population correlation</strong>.</p>
<p data-start=3D"3140" data-end=3D"3162" class=3D"">That number tells you:<=
/p>
<blockquote data-start=3D"3163" data-end=3D"3238">
<p data-start=3D"3165" data-end=3D"3238" class=3D"">On average, how similar=
ly do neurons respond across trials of this image?</p>
</blockquote>
<hr data-start=3D"3240" data-end=3D"3243" class=3D"">
<h3 data-start=3D"3245" data-end=3D"3286" class=3D""><strong data-start=3D"=
3249" data-end=3D"3286">8. Save results per image/session</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3288" data-end=3D"3402"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>all_results.append({
    </span><span><span class=3D"hljs-string">"session"</span></span><span>:=
 sess_name,
    </span><span><span class=3D"hljs-string">"image_id"</span></span><span>=
: image_id,
    </span><span><span class=3D"hljs-string">"mean_rsc"</span></span><span>=
: mean_rsc
})
</span></span></code></div></div></pre>
<p data-start=3D"3404" data-end=3D"3412" class=3D"">You get:</p>
<ul data-start=3D"3413" data-end=3D"3478">
<li data-start=3D"3413" data-end=3D"3434" class=3D"">
<p data-start=3D"3415" data-end=3D"3434" class=3D"">One entry per image</p>
</li>
<li data-start=3D"3435" data-end=3D"3478" class=3D"">
<p data-start=3D"3437" data-end=3D"3478" class=3D"">With mean correlation a=
cross neuron pairs</p>
</li>
</ul>
<hr data-start=3D"3480" data-end=3D"3483" class=3D"">
<h3 data-start=3D"3485" data-end=3D"3516" class=3D""><strong data-start=3D"=
3489" data-end=3D"3516">9. Save final dataframe</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3518" data-end=3D"3623"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>results_df =3D pd.DataFrame(all_results)
results_df.to_csv(</span><span><span class=3D"hljs-string">"output/rsc_1pt.=
csv"</span></span><span>, index=3D</span><span><span class=3D"hljs-literal"=
>False</span></span><span>)
</span></span></code></div></div></pre>
<hr data-start=3D"3625" data-end=3D"3628" class=3D"">
<h2 data-start=3D"3630" data-end=3D"3642" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"36=
44" data-end=3D"3921" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3644" data-end=3D"3667"><tr data-start=3D"3644" data-end=3D"=
3667"><th data-start=3D"3644" data-end=3D"3651" data-col-size=3D"sm">Step</=
th><th data-start=3D"3651" data-end=3D"3667" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"3692" data-end=3D"3921"><tr data-=
start=3D"3692" data-end=3D"3726"><td data-start=3D"3692" data-end=3D"3699" =
data-col-size=3D"sm">Load</td><td data-start=3D"3699" data-end=3D"3726" dat=
a-col-size=3D"md">SDFs and trial metadata</td></tr><tr data-start=3D"3727" =
data-end=3D"3759"><td data-start=3D"3727" data-end=3D"3735" data-col-size=
=3D"sm">Group</td><td data-start=3D"3735" data-end=3D"3759" data-col-size=
=3D"md">Trials by <code data-start=3D"3747" data-end=3D"3757">image_id</cod=
e></td></tr><tr data-start=3D"3760" data-end=3D"3812"><td data-start=3D"376=
0" data-end=3D"3770" data-col-size=3D"sm">Extract</td><td data-start=3D"377=
0" data-end=3D"3812" data-col-size=3D"md">Firing rate during fix0 for each =
trial</td></tr><tr data-start=3D"3813" data-end=3D"3872"><td data-start=3D"=
3813" data-end=3D"3823" data-col-size=3D"sm">Compute</td><td data-start=3D"=
3823" data-end=3D"3872" data-col-size=3D"md">Neuron-by-neuron correlation m=
atrix per image</td></tr><tr data-start=3D"3873" data-end=3D"3921"><td data=
-start=3D"3873" data-end=3D"3880" data-col-size=3D"sm">Save</td><td data-st=
art=3D"3880" data-end=3D"3921" data-col-size=3D"md">Average RSC per image i=
n each session</td></tr></tbody></table><div class=3D"sticky end-(--thread-=
content-margin) h-0 self-end select-none"><div class=3D"absolute end-0 flex=
 items-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"clo=
sed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-t=
oken-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hov=
er):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-=
within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" f=
ill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><=
path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.3431=
5 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C=
17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.3431=
5 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 =
20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772=
 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 =
19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></bu=
tton></span></div></div></div></div>
<hr data-start=3D"3923" data-end=3D"3926" class=3D"">
<h2 data-start=3D"3928" data-end=3D"3951" class=3D"">=F0=9F=A7=A0 Why this =
matters:</h2>
<ul data-start=3D"3953" data-end=3D"4138">
<li data-start=3D"3953" data-end=3D"4064" class=3D"">
<p data-start=3D"3955" data-end=3D"4064" class=3D""><strong data-start=3D"3=
955" data-end=3D"3967">High RSC</strong> suggests that neurons are respondi=
ng <strong data-start=3D"4005" data-end=3D"4028">in coordinated ways</stron=
g> to an image (shared representation)</p>
</li>
<li data-start=3D"4065" data-end=3D"4138" class=3D"">
<p data-start=3D"4067" data-end=3D"4138" class=3D""><strong data-start=3D"4=
067" data-end=3D"4078">Low RSC</strong> could mean more independent coding =
or noisy representations</p>
</li>
</ul>
<p data-start=3D"4140" data-end=3D"4160" class=3D"">You can analyze how:</p=
>
<ul data-start=3D"4161" data-end=3D"4299">
<li data-start=3D"4161" data-end=3D"4193" class=3D"">
<p data-start=3D"4163" data-end=3D"4193" class=3D"">RSC varies with image c=
ategory</p>
</li>
<li data-start=3D"4194" data-end=3D"4241" class=3D"">
<p data-start=3D"4196" data-end=3D"4241" class=3D"">RSC differs between fac=
e images and non-faces</p>
</li>
<li data-start=3D"4242" data-end=3D"4299" class=3D"">
<p data-start=3D"4244" data-end=3D"4299" class=3D"">Or whether consistent R=
SC predicts behavioral relevance</p>
</li>
</ul>
<hr data-start=3D"4301" data-end=3D"4304" class=3D"">
<p data-start=3D"4306" data-end=3D"4395" class=3D"">Let me know if you=E2=
=80=99d like help plotting RSC matrices or comparing face vs. non-face RSCs=
!</p></div></div></div></div></div></div></div></div></article><article cla=
ss=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversat=
ion-turn-55" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</=
h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--=
spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thr=
ead-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"re=
lative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow=
"><div data-message-author-role=3D"user" data-message-id=3D"dbcd2410-0337-4=
de6-8074-f1683b88d138" dir=3D"auto" class=3D"min-h-8 text-message relative =
flex w-full flex-col items-end gap-2 text-start break-words whitespace-norm=
al [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 emp=
ty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[var(--us=
er-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div =
class=3D"whitespace-pre-wrap">so before in 2a it was looking at one neuron =
vs this one looking at pairs?</div></div></div></div></div></div></div></di=
v></div></article><article class=3D"text-token-text-primary w-full" dir=3D"=
auto" data-testid=3D"conversation-turn-56" data-scroll-anchor=3D"false"><h6=
 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-aut=
o py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-ma=
rgin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--t=
hread-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[3=
4rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-wid=
th:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base =
gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" t=
abindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full m=
in-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"=
><div class=3D"flex max-w-full flex-col grow"><div data-message-author-role=
=3D"assistant" data-message-id=3D"cfb6a03b-2d2c-4569-94fe-763a7f8e4e9a" dir=
=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col items=
-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:m=
t-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col =
gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-=
invert w-full break-words dark"><p data-start=3D"0" data-end=3D"29" class=
=3D""><strong data-start=3D"0" data-end=3D"12">Exactly!</strong> You=E2=80=
=99ve got it. =E2=9C=85</p>
<p data-start=3D"31" data-end=3D"69" class=3D"">Let=E2=80=99s break down th=
e contrast clearly:</p>
<hr data-start=3D"71" data-end=3D"74" class=3D"">
<h2 data-start=3D"76" data-end=3D"107" class=3D"">=F0=9F=94=8D Comparison: =
<code data-start=3D"94" data-end=3D"98">2a</code> vs. <code data-start=3D"1=
03" data-end=3D"107">2d</code></h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"10=
9" data-end=3D"997" class=3D"w-fit min-w-(--thread-content-width)"><thead d=
ata-start=3D"109" data-end=3D"172"><tr data-start=3D"109" data-end=3D"172">=
<th data-start=3D"109" data-end=3D"118" data-col-size=3D"sm">Aspect</th><th=
 data-start=3D"118" data-end=3D"149" data-col-size=3D"md"><code data-start=
=3D"120" data-end=3D"148">script_2a_self_consistency</code></th><th data-st=
art=3D"149" data-end=3D"172" data-col-size=3D"md"><code data-start=3D"151" =
data-end=3D"170">script_2d_rsc_1pt</code></th></tr></thead><tbody data-star=
t=3D"237" data-end=3D"997"><tr data-start=3D"237" data-end=3D"314"><td data=
-start=3D"237" data-end=3D"261" data-col-size=3D"sm"><strong data-start=3D"=
239" data-end=3D"260">Level of analysis</strong></td><td data-start=3D"261"=
 data-end=3D"281" data-col-size=3D"md"><strong data-start=3D"263" data-end=
=3D"280">Single neuron</strong></td><td data-start=3D"281" data-end=3D"314"=
 data-col-size=3D"md"><strong data-start=3D"283" data-end=3D"312">Neuron pa=
irs / population</strong></td></tr><tr data-start=3D"315" data-end=3D"489">=
<td data-start=3D"315" data-end=3D"341" data-col-size=3D"sm"><strong data-s=
tart=3D"317" data-end=3D"340">What it's measuring</strong></td><td data-sta=
rt=3D"341" data-end=3D"416" data-col-size=3D"md">How consistent a neuron=E2=
=80=99s response is across fixations to the same image</td><td data-start=
=3D"416" data-end=3D"489" data-col-size=3D"md">How similarly <strong data-s=
tart=3D"432" data-end=3D"447">two neurons</strong> respond across trials of=
 the same image</td></tr><tr data-start=3D"490" data-end=3D"597"><td data-s=
tart=3D"490" data-end=3D"508" data-col-size=3D"sm"><strong data-start=3D"49=
2" data-end=3D"507">What varies</strong></td><td data-start=3D"508" data-en=
d=3D"545" data-col-size=3D"md">Fixation responses within a neuron</td><td d=
ata-start=3D"545" data-end=3D"597" data-col-size=3D"md">Trial-to-trial popu=
lation responses across units</td></tr><tr data-start=3D"598" data-end=3D"7=
36"><td data-start=3D"598" data-end=3D"620" data-col-size=3D"sm"><strong da=
ta-start=3D"600" data-end=3D"619">Output per unit</strong></td><td data-sta=
rt=3D"620" data-end=3D"664" data-col-size=3D"md">One <strong data-start=3D"=
626" data-end=3D"652">self-consistency score</strong> per neuron</td><td da=
ta-start=3D"664" data-end=3D"736" data-col-size=3D"md">One <strong data-sta=
rt=3D"670" data-end=3D"692">correlation matrix</strong> per image, averaged=
 across all unit pairs</td></tr><tr data-start=3D"737" data-end=3D"858"><td=
 data-start=3D"737" data-end=3D"748" data-col-size=3D"sm"><strong data-star=
t=3D"739" data-end=3D"747">Goal</strong></td><td data-start=3D"748" data-en=
d=3D"798" data-col-size=3D"md">Test if a single neuron codes an image relia=
bly</td><td data-start=3D"798" data-end=3D"858" data-col-size=3D"md">Test i=
f neurons share a <strong data-start=3D"824" data-end=3D"843">population co=
de</strong> for an image</td></tr><tr data-start=3D"859" data-end=3D"997"><=
td data-start=3D"859" data-end=3D"880" data-col-size=3D"sm"><strong data-st=
art=3D"861" data-end=3D"879">Why it matters</strong></td><td data-start=3D"=
880" data-end=3D"929" data-col-size=3D"md">Checks reliability of individual=
 neural coding</td><td data-start=3D"929" data-end=3D"997" data-col-size=3D=
"md">Measures <strong data-start=3D"940" data-end=3D"962">shared variabilit=
y</strong> / <strong data-start=3D"965" data-end=3D"995">distributed repres=
entation</strong></td></tr></tbody></table><div class=3D"sticky end-(--thre=
ad-content-margin) h-0 self-end select-none"><div class=3D"absolute end-0 f=
lex items-end" style=3D"height: 34.7031px;"><span class=3D"" data-state=3D"=
closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary tex=
t-token-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:=
hover):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(:foc=
us-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24=
" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy=
"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.3=
4315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V=
19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.3=
4315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.55=
23 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44=
772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 =
15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg><=
/button></span></div></div></div></div>
<hr data-start=3D"999" data-end=3D"1002" class=3D"">
<h2 data-start=3D"1004" data-end=3D"1018" class=3D"">=F0=9F=94=AC Analogy:<=
/h2>
<ul data-start=3D"1019" data-end=3D"1201">
<li data-start=3D"1019" data-end=3D"1105" class=3D"">
<p data-start=3D"1021" data-end=3D"1041" class=3D""><code data-start=3D"102=
1" data-end=3D"1025">2a</code> is like asking:</p>
<blockquote data-start=3D"1044" data-end=3D"1105">
<p data-start=3D"1046" data-end=3D"1105" class=3D"">=E2=80=9CDoes Neuron A =
act the same way each time it sees Image X?=E2=80=9D</p>
</blockquote>
</li>
<li data-start=3D"1106" data-end=3D"1201" class=3D"">
<p data-start=3D"1108" data-end=3D"1128" class=3D""><code data-start=3D"110=
8" data-end=3D"1112">2d</code> is like asking:</p>
<blockquote data-start=3D"1131" data-end=3D"1201">
<p data-start=3D"1133" data-end=3D"1201" class=3D"">=E2=80=9CDo Neuron A an=
d Neuron B tend to respond <strong data-start=3D"1175" data-end=3D"1187">to=
gether</strong> for Image X?=E2=80=9D</p>
</blockquote>
</li>
</ul>
<hr data-start=3D"1203" data-end=3D"1206" class=3D"">
<h3 data-start=3D"1208" data-end=3D"1226" class=3D"">Bonus insight:</h3>
<ul data-start=3D"1227" data-end=3D"1355">
<li data-start=3D"1227" data-end=3D"1277" class=3D"">
<p data-start=3D"1229" data-end=3D"1277" class=3D""><strong data-start=3D"1=
229" data-end=3D"1247"><code data-start=3D"1231" data-end=3D"1235">2a</code=
> tells you</strong>: =E2=80=9CThis neuron codes Image X.=E2=80=9D</p>
</li>
<li data-start=3D"1278" data-end=3D"1355" class=3D"">
<p data-start=3D"1280" data-end=3D"1355" class=3D""><strong data-start=3D"1=
280" data-end=3D"1298"><code data-start=3D"1282" data-end=3D"1286">2d</code=
> tells you</strong>: =E2=80=9CThis <em data-start=3D"1306" data-end=3D"131=
8">population</em> codes Image X in a coordinated way.=E2=80=9D</p>
</li>
</ul>
<p data-start=3D"1357" data-end=3D"1377" class=3D"">Together, they show:</p=
>
<ul data-start=3D"1378" data-end=3D"1468">
<li data-start=3D"1378" data-end=3D"1417" class=3D"">
<p data-start=3D"1380" data-end=3D"1417" class=3D"">Both <strong data-start=
=3D"1385" data-end=3D"1417">individual-level reliability</strong></p>
</li>
<li data-start=3D"1418" data-end=3D"1468" class=3D"">
<p data-start=3D"1420" data-end=3D"1468" class=3D"">And <strong data-start=
=3D"1424" data-end=3D"1468">network-level representational structure</stron=
g></p>
</li>
</ul>
<hr data-start=3D"1470" data-end=3D"1473" class=3D"">
<p data-start=3D"1475" data-end=3D"1587" class=3D"">Want to go one level fu=
rther with <code data-start=3D"1509" data-end=3D"1533">2e_rsc_precision.ipy=
nb</code> next? It builds on this RSC concept with more detail.</p></div></=
div></div></div></div></div></div></div></article><article class=3D"text-to=
ken-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-57" =
data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=
=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @=
[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-m=
argin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-=
content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64re=
m]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-=
max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages foc=
us-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation=
-turn relative flex w-full min-w-0 flex-col"><div class=3D"relative flex-co=
l gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-me=
ssage-author-role=3D"user" data-message-id=3D"ce2446f9-000f-4210-bc64-41f46=
0cc8824" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full fl=
ex-col items-end gap-2 text-start break-words whitespace-normal [.text-mess=
age+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden item=
s-end rtl:items-start"><div class=3D"relative max-w-[var(--user-chat-width,=
70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"white=
space-pre-wrap">yes continue</div></div></div></div></div></div></div></div=
></div></article><article class=3D"text-token-text-primary w-full" dir=3D"a=
uto" data-testid=3D"conversation-turn-58" data-scroll-anchor=3D"false"><h6 =
class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto=
 py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-mar=
gin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--th=
read-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34=
rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-widt=
h:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base g=
ap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" ta=
bindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full mi=
n-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3">=
<div class=3D"flex max-w-full flex-col grow"><div data-message-author-role=
=3D"assistant" data-message-id=3D"60f4c8df-01ce-4322-af78-67331725b580" dir=
=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col items=
-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:m=
t-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col =
gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-=
invert w-full break-words dark"><p data-start=3D"0" data-end=3D"30" class=
=3D"">Great! Let=E2=80=99s now walk through:</p>
<h2 data-start=3D"32" data-end=3D"69" class=3D"">=F0=9F=93=81 <code data-st=
art=3D"38" data-end=3D"69">script_2e_rsc_precision.ipynb</code></h2>
<hr data-start=3D"71" data-end=3D"74" class=3D"">
<h2 data-start=3D"76" data-end=3D"87" class=3D"">=F0=9F=8E=AF Goal:</h2>
<p data-start=3D"88" data-end=3D"144" class=3D"">This script builds on <cod=
e data-start=3D"110" data-end=3D"114">2d</code> by testing a deeper questio=
n:</p>
<blockquote data-start=3D"146" data-end=3D"251">
<p data-start=3D"148" data-end=3D"251" class=3D"">=E2=80=9CCan you use resi=
dual spike count correlations (<strong data-start=3D"196" data-end=3D"204">=
RSCs</strong>) to <strong data-start=3D"209" data-end=3D"220">predict</stro=
ng> or <strong data-start=3D"224" data-end=3D"234">decode</strong> image id=
entity?=E2=80=9D</p>
</blockquote>
<p data-start=3D"253" data-end=3D"268" class=3D"">In other words:</p>
<ul data-start=3D"269" data-end=3D"439">
<li data-start=3D"269" data-end=3D"339" class=3D"">
<p data-start=3D"271" data-end=3D"339" class=3D""><code data-start=3D"271" =
data-end=3D"275">2d</code> asked: <em data-start=3D"283" data-end=3D"339">=
=E2=80=9CAre neurons correlated when the same image is shown?=E2=80=9D</em>=
</p>
</li>
<li data-start=3D"340" data-end=3D"439" class=3D"">
<p data-start=3D"342" data-end=3D"439" class=3D""><code data-start=3D"342" =
data-end=3D"346">2e</code> asks: <em data-start=3D"353" data-end=3D"439">=
=E2=80=9CAre those correlation patterns specific enough to identify the ima=
ge being viewed?=E2=80=9D</em></p>
</li>
</ul>
<p data-start=3D"441" data-end=3D"569" class=3D"">This is a <strong data-st=
art=3D"451" data-end=3D"481">representational precision</strong> test=E2=80=
=94do population-level correlation patterns <em data-start=3D"528" data-end=
=3D"538">uniquely</em> correspond to specific images?</p>
<hr data-start=3D"571" data-end=3D"574" class=3D"">
<h2 data-start=3D"576" data-end=3D"604" class=3D"">=F0=9F=94=8D Step-by-Ste=
p Breakdown</h2>
<hr data-start=3D"606" data-end=3D"609" class=3D"">
<h3 data-start=3D"611" data-end=3D"629" class=3D""><strong data-start=3D"61=
5" data-end=3D"629">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"631" data-end=3D"744"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"746" data-end=3D"767" class=3D"">Standard stack again.</p>
<hr data-start=3D"769" data-end=3D"772" class=3D"">
<h3 data-start=3D"774" data-end=3D"802" class=3D""><strong data-start=3D"77=
8" data-end=3D"802">2. Load session data</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"804" data-end=3D"934"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(Path=
(</span><span><span class=3D"hljs-string">"intermediate"</span></span><span=
>) / </span><span><span class=3D"hljs-string">"shared_preprocessed_data_wit=
h_saccades.pkl"</span></span><span>, </span><span><span class=3D"hljs-strin=
g">"rb"</span></span><span>) </span><span><span class=3D"hljs-keyword">as</=
span></span><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<p data-start=3D"936" data-end=3D"970" class=3D"">Same as previous scripts=
=E2=80=94includes:</p>
<ul data-start=3D"971" data-end=3D"1057">
<li data-start=3D"971" data-end=3D"1004" class=3D"">
<p data-start=3D"973" data-end=3D"1004" class=3D"">Spike density functions =
(<code data-start=3D"998" data-end=3D"1003">sdf</code>)</p>
</li>
<li data-start=3D"1005" data-end=3D"1045" class=3D"">
<p data-start=3D"1007" data-end=3D"1045" class=3D"">Trials (with <code data=
-start=3D"1020" data-end=3D"1030">image_id</code>, <code data-start=3D"1032=
" data-end=3D"1044">fix_onsets</code>)</p>
</li>
<li data-start=3D"1046" data-end=3D"1057" class=3D"">
<p data-start=3D"1048" data-end=3D"1057" class=3D"">Unit info</p>
</li>
</ul>
<hr data-start=3D"1059" data-end=3D"1062" class=3D"">
<h3 data-start=3D"1064" data-end=3D"1100" class=3D""><strong data-start=3D"=
1068" data-end=3D"1100">3. Initialize results holder</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1102" data-end=3D"1132"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>all_results =3D []
</span></span></code></div></div></pre>
<p data-start=3D"1134" data-end=3D"1190" class=3D"">Prepare to store decodi=
ng accuracy or similarity scores.</p>
<hr data-start=3D"1192" data-end=3D"1195" class=3D"">
<h3 data-start=3D"1197" data-end=3D"1226" class=3D""><strong data-start=3D"=
1201" data-end=3D"1226">4. Loop over sessions</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1228" data-end=3D"1349"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> sess_name, sess_data </span><span><span class=3D"hljs-keyword">in</span><=
/span><span> tqdm(data.items()):
    sdf =3D sess_data[</span><span><span class=3D"hljs-string">"sdf"</span>=
</span><span>]
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]
</span></span></code></div></div></pre>
<p data-start=3D"1351" data-end=3D"1370" class=3D"">Basic session loop.</p>
<hr data-start=3D"1372" data-end=3D"1375" class=3D"">
<h3 data-start=3D"1377" data-end=3D"1426" class=3D""><strong data-start=3D"=
1381" data-end=3D"1426">5. Extract population responses per image</strong><=
/h3>
<p data-start=3D"1428" data-end=3D"1465" class=3D"">This block mirrors <cod=
e data-start=3D"1447" data-end=3D"1451">2d</code> in structure:</p>
<pre class=3D"overflow-visible!" data-start=3D"1467" data-end=3D"1908"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>responses_by_image =3D {}

</span><span><span class=3D"hljs-keyword">for</span></span><span> trial_idx=
, trial </span><span><span class=3D"hljs-keyword">in</span></span><span> tr=
ials.iterrows():
    </span><span><span class=3D"hljs-keyword">if</span></span><span> </span=
><span><span class=3D"hljs-built_in">len</span></span><span>(trial[</span><=
span><span class=3D"hljs-string">"fix_onsets"</span></span><span>]) =3D=3D =
</span><span><span class=3D"hljs-number">0</span></span><span>:
        </span><span><span class=3D"hljs-keyword">continue</span></span><sp=
an>

    image_id =3D trial[</span><span><span class=3D"hljs-string">"image_id"<=
/span></span><span>]
    fix0_onset =3D trial[</span><span><span class=3D"hljs-string">"fix_onse=
ts"</span></span><span>][</span><span><span class=3D"hljs-number">0</span><=
/span><span>]
    response =3D sdf[trial_idx, :, fix0_onset + t_start : fix0_onset + t_en=
d].mean(axis=3D-</span><span><span class=3D"hljs-number">1</span></span><sp=
an>)

    </span><span><span class=3D"hljs-keyword">if</span></span><span> image_=
id </span><span><span class=3D"hljs-keyword">not</span></span><span> </span=
><span><span class=3D"hljs-keyword">in</span></span><span> responses_by_ima=
ge:
        responses_by_image[image_id] =3D []
   =20
    responses_by_image[image_id].append(response)
</span></span></code></div></div></pre>
<p data-start=3D"1910" data-end=3D"1928" class=3D"">You=E2=80=99re collecti=
ng:</p>
<ul data-start=3D"1929" data-end=3D"2022">
<li data-start=3D"1929" data-end=3D"2000" class=3D"">
<p data-start=3D"1931" data-end=3D"2000" class=3D"">A <strong data-start=3D=
"1933" data-end=3D"1963">population response vector</strong> per trial (len=
gth =3D number of units)</p>
</li>
<li data-start=3D"2001" data-end=3D"2022" class=3D"">
<p data-start=3D"2003" data-end=3D"2022" class=3D"">Grouped by image ID</p>
</li>
</ul>
<hr data-start=3D"2024" data-end=3D"2027" class=3D"">
<h3 data-start=3D"2029" data-end=3D"2078" class=3D""><strong data-start=3D"=
2033" data-end=3D"2078">6. Split into halves for cross-validation</strong><=
/h3>
<p data-start=3D"2080" data-end=3D"2110" class=3D"">This is where decoding =
starts:</p>
<pre class=3D"overflow-visible!" data-start=3D"2112" data-end=3D"2517"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>train_vectors =3D []
test_vectors =3D []
labels =3D []

</span><span><span class=3D"hljs-keyword">for</span></span><span> img_id, v=
ectors </span><span><span class=3D"hljs-keyword">in</span></span><span> res=
ponses_by_image.items():
    </span><span><span class=3D"hljs-keyword">if</span></span><span> </span=
><span><span class=3D"hljs-built_in">len</span></span><span>(vectors) &lt; =
</span><span><span class=3D"hljs-number">2</span></span><span>:
        </span><span><span class=3D"hljs-keyword">continue</span></span><sp=
an>

    np.random.shuffle(vectors)
    half =3D </span><span><span class=3D"hljs-built_in">len</span></span><s=
pan>(vectors) // </span><span><span class=3D"hljs-number">2</span></span><s=
pan>
    train =3D np.stack(vectors[:half])
    test =3D np.stack(vectors[half:])

    train_vectors.append(train.mean(axis=3D</span><span><span class=3D"hljs=
-number">0</span></span><span>))
    test_vectors.append(test.mean(axis=3D</span><span><span class=3D"hljs-n=
umber">0</span></span><span>))
    labels.append(img_id)
</span></span></code></div></div></pre>
<p data-start=3D"2519" data-end=3D"2532" class=3D"">You=E2=80=99re doing:</=
p>
<ul data-start=3D"2533" data-end=3D"2705">
<li data-start=3D"2533" data-end=3D"2644" class=3D"">
<p data-start=3D"2535" data-end=3D"2561" class=3D""><strong data-start=3D"2=
535" data-end=3D"2560">Split-half validation</strong>:</p>
<ul data-start=3D"2564" data-end=3D"2644">
<li data-start=3D"2564" data-end=3D"2603" class=3D"">
<p data-start=3D"2566" data-end=3D"2603" class=3D"">Average half of trials =
=E2=86=92 train vector</p>
</li>
<li data-start=3D"2606" data-end=3D"2644" class=3D"">
<p data-start=3D"2608" data-end=3D"2644" class=3D"">Average the other half =
=E2=86=92 test vector</p>
</li>
</ul>
</li>
<li data-start=3D"2645" data-end=3D"2705" class=3D"">
<p data-start=3D"2647" data-end=3D"2705" class=3D"">Goal: test whether you =
can match test to the correct train</p>
</li>
</ul>
<hr data-start=3D"2707" data-end=3D"2710" class=3D"">
<h3 data-start=3D"2712" data-end=3D"2759" class=3D""><strong data-start=3D"=
2716" data-end=3D"2759">7. Compute similarity matrix (decoding)</strong></h=
3>
<pre class=3D"overflow-visible!" data-start=3D"2761" data-end=3D"2931"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>train_matrix =3D np.stack(train_vectors)
test_matrix =3D np.stack(test_vectors)

similarity =3D np.corrcoef(test_matrix, train_matrix)[:</span><span><span c=
lass=3D"hljs-built_in">len</span></span><span>(labels), </span><span><span =
class=3D"hljs-built_in">len</span></span><span>(labels):]
</span></span></code></div></div></pre>
<p data-start=3D"2933" data-end=3D"2968" class=3D"">This gives a <strong da=
ta-start=3D"2946" data-end=3D"2967">similarity matrix</strong>:</p>
<ul data-start=3D"2969" data-end=3D"3079">
<li data-start=3D"2969" data-end=3D"2989" class=3D"">
<p data-start=3D"2971" data-end=3D"2989" class=3D"">Rows =3D test images</p=
>
</li>
<li data-start=3D"2990" data-end=3D"3014" class=3D"">
<p data-start=3D"2992" data-end=3D"3014" class=3D"">Columns =3D train image=
s</p>
</li>
<li data-start=3D"3015" data-end=3D"3079" class=3D"">
<p data-start=3D"3017" data-end=3D"3079" class=3D"">Values =3D correlation =
between their population response vectors</p>
</li>
</ul>
<p data-start=3D"3081" data-end=3D"3168" class=3D"">You expect <strong data=
-start=3D"3092" data-end=3D"3131">the diagonal (matching image pairs)</stro=
ng> to have the <strong data-start=3D"3144" data-end=3D"3167">highest corre=
lation</strong>.</p>
<hr data-start=3D"3170" data-end=3D"3173" class=3D"">
<h3 data-start=3D"3175" data-end=3D"3209" class=3D""><strong data-start=3D"=
3179" data-end=3D"3209">8. Score decoding accuracy</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3211" data-end=3D"3327"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>correct =3D (similarity.argmax(axis=3D</span><span>=
<span class=3D"hljs-number">1</span></span><span>) =3D=3D np.arange(</span>=
<span><span class=3D"hljs-built_in">len</span></span><span>(labels))).</spa=
n><span><span class=3D"hljs-built_in">sum</span></span><span>()
accuracy =3D correct / </span><span><span class=3D"hljs-built_in">len</span=
></span><span>(labels)
</span></span></code></div></div></pre>
<p data-start=3D"3329" data-end=3D"3426" class=3D"">If the <strong data-sta=
rt=3D"3336" data-end=3D"3365">most similar train vector</strong> matches th=
e test label, that counts as a correct prediction.</p>
<p data-start=3D"3428" data-end=3D"3469" class=3D"">This gives you a <stron=
g data-start=3D"3445" data-end=3D"3466">decoding accuracy</strong>:</p>
<blockquote data-start=3D"3470" data-end=3D"3542">
<p data-start=3D"3472" data-end=3D"3542" class=3D"">=E2=80=9CHow often can =
I tell which image it is from its population response?=E2=80=9D</p>
</blockquote>
<hr data-start=3D"3544" data-end=3D"3547" class=3D"">
<h3 data-start=3D"3549" data-end=3D"3580" class=3D""><strong data-start=3D"=
3553" data-end=3D"3580">9. Store &amp; save results</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3582" data-end=3D"3762"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>all_results.append({
    </span><span><span class=3D"hljs-string">"session"</span></span><span>:=
 sess_name,
    </span><span><span class=3D"hljs-string">"decoding_accuracy"</span></sp=
an><span>: accuracy
})

df =3D pd.DataFrame(all_results)
df.to_csv(</span><span><span class=3D"hljs-string">"output/rsc_precision.cs=
v"</span></span><span>, index=3D</span><span><span class=3D"hljs-literal">F=
alse</span></span><span>)
</span></span></code></div></div></pre>
<hr data-start=3D"3764" data-end=3D"3767" class=3D"">
<h2 data-start=3D"3769" data-end=3D"3781" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"37=
83" data-end=3D"4064" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3783" data-end=3D"3806"><tr data-start=3D"3783" data-end=3D"=
3806"><th data-start=3D"3783" data-end=3D"3790" data-col-size=3D"sm">Step</=
th><th data-start=3D"3790" data-end=3D"3806" data-col-size=3D"sm">What it d=
oes</th></tr></thead><tbody data-start=3D"3831" data-end=3D"4064"><tr data-=
start=3D"3831" data-end=3D"3875"><td data-start=3D"3831" data-end=3D"3841" =
data-col-size=3D"sm">Extract</td><td data-start=3D"3841" data-end=3D"3875" =
data-col-size=3D"sm">Population responses per image</td></tr><tr data-start=
=3D"3876" data-end=3D"3920"><td data-start=3D"3876" data-end=3D"3884" data-=
col-size=3D"sm">Split</td><td data-start=3D"3884" data-end=3D"3920" data-co=
l-size=3D"sm">Responses into train/test halves</td></tr><tr data-start=3D"3=
921" data-end=3D"3969"><td data-start=3D"3921" data-end=3D"3933" data-col-s=
ize=3D"sm">Correlate</td><td data-start=3D"3933" data-end=3D"3969" data-col=
-size=3D"sm">Population vectors across images</td></tr><tr data-start=3D"39=
70" data-end=3D"4021"><td data-start=3D"3970" data-end=3D"3979" data-col-si=
ze=3D"sm">Decode</td><td data-start=3D"3979" data-end=3D"4021" data-col-siz=
e=3D"sm">Can test vector match its image label?</td></tr><tr data-start=3D"=
4022" data-end=3D"4064"><td data-start=3D"4022" data-end=3D"4031" data-col-=
size=3D"sm">Output</td><td data-start=3D"4031" data-end=3D"4064" data-col-s=
ize=3D"sm">Decoding accuracy per session</td></tr></tbody></table><div clas=
s=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"><div cl=
ass=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><span cl=
ass=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary hover:b=
g-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 transitio=
n-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-none group=
-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.65=
69 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.656=
9 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15=
H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 =
4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14=
C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curre=
ntColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"4066" data-end=3D"4069" class=3D"">
<h2 data-start=3D"4071" data-end=3D"4094" class=3D"">=F0=9F=A7=A0 Why is th=
is cool?</h2>
<p data-start=3D"4096" data-end=3D"4117" class=3D"">Because it tells you:</=
p>
<ul data-start=3D"4118" data-end=3D"4287">
<li data-start=3D"4118" data-end=3D"4220" class=3D"">
<p data-start=3D"4120" data-end=3D"4220" class=3D"">Whether <strong data-st=
art=3D"4128" data-end=3D"4181">population responses are stable and unique e=
nough</strong> to support <strong data-start=3D"4193" data-end=3D"4220">ima=
ge identity decoding</strong></p>
</li>
<li data-start=3D"4221" data-end=3D"4287" class=3D"">
<p data-start=3D"4223" data-end=3D"4287" class=3D"">It measures <strong dat=
a-start=3D"4235" data-end=3D"4265">representational precision</strong>, not=
 just consistency</p>
</li>
</ul>
<p data-start=3D"4289" data-end=3D"4311" class=3D"">A high accuracy means:<=
/p>
<blockquote data-start=3D"4312" data-end=3D"4406">
<p data-start=3D"4314" data-end=3D"4406" class=3D"">Neurons aren't just cor=
related=E2=80=94they=E2=80=99re forming a <strong data-start=3D"4363" data-=
end=3D"4390">discriminable signature</strong> for each image.</p>
</blockquote>
<hr data-start=3D"4408" data-end=3D"4411" class=3D"">
<p data-start=3D"4413" data-end=3D"4492" class=3D"">Want to visualize a dec=
oding matrix or compare precision for faces vs. objects?</p></div></div></d=
iv></div></div></div></div></div></article><article class=3D"text-token-tex=
t-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-59" data-sc=
roll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"tex=
t-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]=
:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:-=
-spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content=
-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--t=
hread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-wid=
th) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visi=
ble:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn r=
elative flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1=
 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-a=
uthor-role=3D"user" data-message-id=3D"ea434c16-8c34-477f-adfb-a365f06377df=
" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col =
items-end gap-2 text-start break-words whitespace-normal [.text-message+&am=
p;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end r=
tl:items-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] b=
g-token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-p=
re-wrap">so is it trying to reverse engineer the problem, look at neural da=
ta and then attempt to figure out what image was shown?</div></div></div></=
div></div></div></div></div></div></article><article class=3D"text-token-te=
xt-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-60" data-s=
croll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=
=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @=
[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-m=
argin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-=
content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64re=
m]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-=
max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages foc=
us-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation=
-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"relat=
ive flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><=
div data-message-author-role=3D"assistant" data-message-id=3D"a48da479-33cd=
-48ed-a9cb-7be456bc9c86" dir=3D"auto" class=3D"min-h-8 text-message relativ=
e flex w-full flex-col items-end gap-2 text-start break-words whitespace-no=
rmal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div cl=
ass=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=
=3D"markdown prose dark:prose-invert w-full break-words dark"><p data-start=
=3D"0" data-end=3D"19" class=3D""><strong data-start=3D"0" data-end=3D"16">=
YES=E2=80=94exactly!</strong> =F0=9F=8E=AF</p>
<p data-start=3D"21" data-end=3D"109" class=3D"">In <code data-start=3D"24"=
 data-end=3D"55">script_2e_rsc_precision.ipynb</code>, they=E2=80=99re esse=
ntially <strong data-start=3D"77" data-end=3D"108">flipping the problem aro=
und</strong>:</p>
<p data-start=3D"111" data-end=3D"122" class=3D"">Instead of:</p>
<blockquote data-start=3D"123" data-end=3D"166">
<p data-start=3D"125" data-end=3D"166" class=3D"">"Given an image, what doe=
s the brain do?"</p>
</blockquote>
<p data-start=3D"168" data-end=3D"183" class=3D"">They=E2=80=99re asking:</=
p>
<blockquote data-start=3D"184" data-end=3D"265">
<p data-start=3D"186" data-end=3D"265" class=3D"">"<strong data-start=3D"18=
7" data-end=3D"217">Given the brain=E2=80=99s activity</strong>, can we fig=
ure out what image was being shown?"</p>
</blockquote>
<p data-start=3D"267" data-end=3D"353" class=3D"">This is the essence of <s=
trong data-start=3D"290" data-end=3D"309">neural decoding</strong> or <stro=
ng data-start=3D"313" data-end=3D"352">representational precision analysis<=
/strong>.</p>
<hr data-start=3D"355" data-end=3D"358" class=3D"">
<h2 data-start=3D"360" data-end=3D"413" class=3D"">=F0=9F=A7=A0 What does =
=E2=80=9Creverse engineering=E2=80=9D look like here?</h2>
<p data-start=3D"415" data-end=3D"439" class=3D"">Here=E2=80=99s what=E2=80=
=99s happening:</p>
<h3 data-start=3D"441" data-end=3D"470" class=3D"">1. During the experiment=
:</h3>
<ul data-start=3D"471" data-end=3D"611">
<li data-start=3D"471" data-end=3D"515" class=3D"">
<p data-start=3D"473" data-end=3D"515" class=3D"">Monkey sees <strong data-=
start=3D"485" data-end=3D"496">Image A</strong>, <strong data-start=3D"498"=
 data-end=3D"509">Image B</strong>, etc.</p>
</li>
<li data-start=3D"516" data-end=3D"611" class=3D"">
<p data-start=3D"518" data-end=3D"539" class=3D"">For each image/trial:</p>
<ul data-start=3D"542" data-end=3D"611">
<li data-start=3D"542" data-end=3D"569" class=3D"">
<p data-start=3D"544" data-end=3D"569" class=3D"">Eye movements are tracked=
</p>
</li>
<li data-start=3D"572" data-end=3D"611" class=3D"">
<p data-start=3D"574" data-end=3D"611" class=3D"">Spikes from ~100 neurons =
are recorded</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"613" data-end=3D"616" class=3D"">
<h3 data-start=3D"618" data-end=3D"641" class=3D"">2. During analysis:</h3>
<ul data-start=3D"642" data-end=3D"914">
<li data-start=3D"642" data-end=3D"788" class=3D"">
<p data-start=3D"644" data-end=3D"692" class=3D"">They collect the <strong =
data-start=3D"661" data-end=3D"691">population response vector</strong>:</p=
>
<ul data-start=3D"695" data-end=3D"788">
<li data-start=3D"695" data-end=3D"758" class=3D"">
<p data-start=3D"697" data-end=3D"758" class=3D"">A list of firing rates: <=
code data-start=3D"721" data-end=3D"758">[neuron_1, neuron_2, ..., neuron_n=
]</code></p>
</li>
<li data-start=3D"761" data-end=3D"788" class=3D"">
<p data-start=3D"763" data-end=3D"788" class=3D"">One such vector per trial=
</p>
</li>
</ul>
</li>
<li data-start=3D"790" data-end=3D"914" class=3D"">
<p data-start=3D"792" data-end=3D"806" class=3D"">Then they ask:</p>
<blockquote data-start=3D"809" data-end=3D"914">
<p data-start=3D"811" data-end=3D"914" class=3D"">=E2=80=9CAre responses to=
 Image A consistently <strong data-start=3D"850" data-end=3D"896">more simi=
lar to other responses to Image A</strong> than to Image B?=E2=80=9D</p>
</blockquote>
</li>
</ul>
<p data-start=3D"916" data-end=3D"934" class=3D"">This is tested by:</p>
<ul data-start=3D"935" data-end=3D"1114">
<li data-start=3D"935" data-end=3D"976" class=3D"">
<p data-start=3D"937" data-end=3D"976" class=3D"">Splitting trials into tra=
in/test halves</p>
</li>
<li data-start=3D"977" data-end=3D"1055" class=3D"">
<p data-start=3D"979" data-end=3D"1055" class=3D""><strong data-start=3D"97=
9" data-end=3D"1004">Matching test vectors</strong> to the most similar tra=
in vector (via correlation)</p>
</li>
<li data-start=3D"1056" data-end=3D"1114" class=3D"">
<p data-start=3D"1058" data-end=3D"1114" class=3D"">Checking if they correc=
tly <strong data-start=3D"1085" data-end=3D"1095">decode</strong> the image=
 identity</p>
</li>
</ul>
<hr data-start=3D"1116" data-end=3D"1119" class=3D"">
<h3 data-start=3D"1121" data-end=3D"1149" class=3D"">=F0=9F=A7=AA Why is th=
is powerful?</h3>
<p data-start=3D"1151" data-end=3D"1195" class=3D"">Because if decoding is =
accurate, that means:</p>
<ul data-start=3D"1196" data-end=3D"1364">
<li data-start=3D"1196" data-end=3D"1269" class=3D"">
<p data-start=3D"1198" data-end=3D"1269" class=3D"">The <strong data-start=
=3D"1202" data-end=3D"1269">neural population is encoding the image in a st=
able, unique way</strong></p>
</li>
<li data-start=3D"1270" data-end=3D"1364" class=3D"">
<p data-start=3D"1272" data-end=3D"1364" class=3D"">The <strong data-start=
=3D"1276" data-end=3D"1322">activity patterns aren't random or generic</str=
ong>=E2=80=94they're <strong data-start=3D"1331" data-end=3D"1364">structur=
ed and image-specific</strong></p>
</li>
</ul>
<hr data-start=3D"1366" data-end=3D"1369" class=3D"">
<h2 data-start=3D"1371" data-end=3D"1399" class=3D"">=F0=9F=94=AC In neuros=
cience terms:</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"14=
01" data-end=3D"1788" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1401" data-end=3D"1422"><tr data-start=3D"1401" data-end=3D"=
1422"><th data-start=3D"1401" data-end=3D"1411" data-col-size=3D"sm">Concep=
t</th><th data-start=3D"1411" data-end=3D"1422" data-col-size=3D"md">Meanin=
g</th></tr></thead><tbody data-start=3D"1443" data-end=3D"1788"><tr data-st=
art=3D"1443" data-end=3D"1515"><td data-start=3D"1443" data-end=3D"1458" da=
ta-col-size=3D"sm"><strong data-start=3D"1445" data-end=3D"1457">Encoding</=
strong></td><td data-start=3D"1458" data-end=3D"1515" data-col-size=3D"md">=
Forward model: =E2=80=9CWhat does the brain do when shown X?=E2=80=9D</td><=
/tr><tr data-start=3D"1516" data-end=3D"1586"><td data-start=3D"1516" data-=
end=3D"1531" data-col-size=3D"sm"><strong data-start=3D"1518" data-end=3D"1=
530">Decoding</strong></td><td data-start=3D"1531" data-end=3D"1586" data-c=
ol-size=3D"md">Reverse model: =E2=80=9CWhat X caused this brain activity?=
=E2=80=9D</td></tr><tr data-start=3D"1587" data-end=3D"1683"><td data-start=
=3D"1587" data-end=3D"1620" data-col-size=3D"sm"><strong data-start=3D"1589=
" data-end=3D"1619">Representational precision</strong></td><td data-start=
=3D"1620" data-end=3D"1683" data-col-size=3D"md">Can neural activity <em da=
ta-start=3D"1642" data-end=3D"1655">distinguish</em> between specific stimu=
li?</td></tr><tr data-start=3D"1684" data-end=3D"1788"><td data-start=3D"16=
84" data-end=3D"1706" data-col-size=3D"sm"><strong data-start=3D"1686" data=
-end=3D"1705">Population code</strong></td><td data-start=3D"1706" data-end=
=3D"1788" data-col-size=3D"md">The combined pattern of activity across neur=
ons carries meaningful information</td></tr></tbody></table><div class=3D"s=
ticky end-(--thread-content-margin) h-0 self-end select-none"><div class=3D=
"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><span class=3D=
"" data-state=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-toke=
n-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 transition-opac=
ity group-[:not(:hover):not(:focus-within)]:pointer-events-none group-[:not=
(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" vie=
wBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"1790" data-end=3D"1793" class=3D"">
<h2 data-start=3D"1795" data-end=3D"1805" class=3D"">=E2=9C=85 TL;DR</h2>
<blockquote data-start=3D"1807" data-end=3D"1964">
<p data-start=3D"1809" data-end=3D"1964" class=3D"">Yes: <code data-start=
=3D"1814" data-end=3D"1832">2e_rsc_precision</code> is <strong data-start=
=3D"1836" data-end=3D"1881">reverse-engineering the visual experience</stro=
ng> by taking spike patterns and <strong data-start=3D"1911" data-end=3D"19=
47">predicting what image was viewed</strong>, trial by trial.</p>
</blockquote>
<p data-start=3D"1966" data-end=3D"2066" class=3D"">It=E2=80=99s a powerful=
 test of how <strong data-start=3D"1994" data-end=3D"2024">informative and =
structured</strong> the neural code is during natural vision.</p>
<hr data-start=3D"2068" data-end=3D"2071" class=3D"">
<p data-start=3D"2073" data-end=3D"2208" class=3D"">Want to try building yo=
ur own decoder using just the top 10 most selective neurons? Or compare dec=
oding accuracy for faces vs. objects?</p></div></div></div></div></div></di=
v></div></div></article><article class=3D"text-token-text-primary w-full" d=
ir=3D"auto" data-testid=3D"conversation-turn-61" data-scroll-anchor=3D"fals=
e"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-a=
uto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-=
margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(-=
-thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @=
[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-w=
idth:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-bas=
e gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden"=
 tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full=
 min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div cla=
ss=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"user"=
 data-message-id=3D"f88dd4fe-9e97-40cf-b896-15449159ed0a" dir=3D"auto" clas=
s=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 tex=
t-start break-words whitespace-normal [.text-message+&amp;]:mt-5"><div clas=
s=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><di=
v class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-sur=
face rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">is this us=
ing deep learning, if so where?</div></div></div></div></div></div></div></=
div></div></article><article class=3D"text-token-text-primary w-full" dir=
=3D"auto" data-testid=3D"conversation-turn-62" data-scroll-anchor=3D"false"=
><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx=
-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-conten=
t-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-=
(--thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem]=
 @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max=
-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-b=
ase gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidde=
n" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-fu=
ll min-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:ga=
p-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author-=
role=3D"assistant" data-message-id=3D"711a5489-39f8-4141-9adf-044fbac92a8f"=
 dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col i=
tems-end gap-2 text-start break-words whitespace-normal [.text-message+&amp=
;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-=
col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:pr=
ose-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"60" cla=
ss=3D"">Great question=E2=80=94and super important to clarify at this point=
:</p>
<hr data-start=3D"62" data-end=3D"65" class=3D"">
<h2 data-start=3D"67" data-end=3D"114" class=3D"">=F0=9F=A7=A0 Is this anal=
ysis using <strong data-start=3D"96" data-end=3D"113">deep learning</strong=
>?</h2>
<h3 data-start=3D"116" data-end=3D"194" class=3D"">=E2=9D=8C Not directly=
=E2=80=94at least not in the scripts you've shared so far (<code data-start=
=3D"185" data-end=3D"192">0a=E2=80=932e</code>):</h3>
<p data-start=3D"195" data-end=3D"290" class=3D"">These scripts are primari=
ly using <strong data-start=3D"229" data-end=3D"270">classic neuroscience/s=
tatistics tools</strong>, not deep learning.</p>
<p data-start=3D"292" data-end=3D"309" class=3D"">They're based on:</p>
<ul data-start=3D"310" data-end=3D"441">
<li data-start=3D"310" data-end=3D"336" class=3D"">
<p data-start=3D"312" data-end=3D"336" class=3D""><strong data-start=3D"312=
" data-end=3D"336">Spike train analysis</strong></p>
</li>
<li data-start=3D"337" data-end=3D"361" class=3D"">
<p data-start=3D"339" data-end=3D"361" class=3D""><strong data-start=3D"339=
" data-end=3D"361">Gaussian smoothing</strong></p>
</li>
<li data-start=3D"362" data-end=3D"391" class=3D"">
<p data-start=3D"364" data-end=3D"391" class=3D""><strong data-start=3D"364=
" data-end=3D"391">Firing rate comparisons</strong></p>
</li>
<li data-start=3D"392" data-end=3D"441" class=3D"">
<p data-start=3D"394" data-end=3D"441" class=3D""><strong data-start=3D"394=
" data-end=3D"441">Correlation and decoding via linear methods</strong></p>
</li>
</ul>
<p data-start=3D"443" data-end=3D"494" class=3D"">Even the decoding in <cod=
e data-start=3D"464" data-end=3D"488">2e_rsc_precision.ipynb</code> uses:</=
p>
<ul data-start=3D"495" data-end=3D"598">
<li data-start=3D"495" data-end=3D"523" class=3D"">
<p data-start=3D"497" data-end=3D"523" class=3D""><strong data-start=3D"497=
" data-end=3D"523">Split-half correlation</strong></p>
</li>
<li data-start=3D"524" data-end=3D"546" class=3D"">
<p data-start=3D"526" data-end=3D"546" class=3D"">Not a neural network</p>
</li>
<li data-start=3D"547" data-end=3D"598" class=3D"">
<p data-start=3D"549" data-end=3D"598" class=3D"">No backpropagation, no tr=
aining epochs, no layers</p>
</li>
</ul>
<hr data-start=3D"600" data-end=3D"603" class=3D"">
<h3 data-start=3D"605" data-end=3D"669" class=3D"">=E2=9C=85 But deep learn=
ing might appear elsewhere in your pipeline.</h3>
<p data-start=3D"671" data-end=3D"683" class=3D"">For example:</p>
<h4 data-start=3D"685" data-end=3D"729" class=3D"">=F0=9F=A7=A0 If you're w=
orking with this dataset:</h4>
<blockquote data-start=3D"731" data-end=3D"915">
<p data-start=3D"733" data-end=3D"915" class=3D"">=E2=80=9CFeature-selectiv=
e responses in macaque visual cortex follow eye movements during natural vi=
sion=E2=80=9D<br data-start=3D"830" data-end=3D"833">
(<a data-start=3D"836" data-end=3D"914" rel=3D"noopener" target=3D"_new" cl=
ass=3D"" href=3D"https://www.nature.com/articles/s41593-024-01631-5">Nature=
 Neuroscience 2024</a>)</p>
</blockquote>
<p data-start=3D"917" data-end=3D"986" class=3D"">That study <strong data-s=
tart=3D"928" data-end=3D"936">does</strong> use deep neural networks (DNNs)=
, particularly in:</p>
<ul data-start=3D"987" data-end=3D"1149">
<li data-start=3D"987" data-end=3D"1031" class=3D"">
<p data-start=3D"989" data-end=3D"1031" class=3D"">Modeling <strong data-st=
art=3D"998" data-end=3D"1031">image feature representations</strong></p>
</li>
<li data-start=3D"1032" data-end=3D"1090" class=3D"">
<p data-start=3D"1034" data-end=3D"1090" class=3D"">Comparing macaque respo=
nses to <strong data-start=3D"1065" data-end=3D"1090">DNN layer activations=
</strong></p>
</li>
<li data-start=3D"1091" data-end=3D"1149" class=3D"">
<p data-start=3D"1093" data-end=3D"1149" class=3D"">Possibly generating emb=
eddings (e.g., ResNet, VGG, etc.)</p>
</li>
</ul>
<p data-start=3D"1151" data-end=3D"1197" class=3D"">You=E2=80=99ll likely f=
ind that in later scripts=E2=80=94like:</p>
<ul data-start=3D"1199" data-end=3D"1302">
<li data-start=3D"1199" data-end=3D"1233" class=3D"">
<p data-start=3D"1201" data-end=3D"1233" class=3D""><code data-start=3D"120=
1" data-end=3D"1231">script_5a_vision_model.ipynb</code> =E2=9C=85</p>
</li>
<li data-start=3D"1234" data-end=3D"1268" class=3D"">
<p data-start=3D"1236" data-end=3D"1268" class=3D""><code data-start=3D"123=
6" data-end=3D"1268">script_6a_model_perf_map.ipynb</code></p>
</li>
<li data-start=3D"1269" data-end=3D"1302" class=3D"">
<p data-start=3D"1271" data-end=3D"1302" class=3D""><code data-start=3D"127=
1" data-end=3D"1302">script_6b_feat_corr_map.ipynb</code></p>
</li>
</ul>
<p data-start=3D"1304" data-end=3D"1316" class=3D"">Those might:</p>
<ul data-start=3D"1317" data-end=3D"1537">
<li data-start=3D"1317" data-end=3D"1393" class=3D"">
<p data-start=3D"1319" data-end=3D"1393" class=3D"">Use <strong data-start=
=3D"1323" data-end=3D"1342">pretrained CNNs</strong> (e.g., ResNet-50, VGG1=
6) to extract image features</p>
</li>
<li data-start=3D"1394" data-end=3D"1455" class=3D"">
<p data-start=3D"1396" data-end=3D"1455" class=3D"">Compare <strong data-st=
art=3D"1404" data-end=3D"1429">DNN layer activations</strong> to neural fir=
ing patterns</p>
</li>
<li data-start=3D"1456" data-end=3D"1537" class=3D"">
<p data-start=3D"1458" data-end=3D"1537" class=3D"">Train <strong data-star=
t=3D"1464" data-end=3D"1497">linear decoders or regressors</strong> from DN=
N outputs to predict neural data</p>
</li>
</ul>
<hr data-start=3D"1539" data-end=3D"1542" class=3D"">
<h2 data-start=3D"1544" data-end=3D"1554" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"15=
56" data-end=3D"1836" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1556" data-end=3D"1602"><tr data-start=3D"1556" data-end=3D"=
1602"><th data-start=3D"1556" data-end=3D"1571" data-col-size=3D"sm">Script=
 Range</th><th data-start=3D"1571" data-end=3D"1593" data-col-size=3D"sm">D=
eep Learning Used?</th><th data-start=3D"1593" data-end=3D"1602" data-col-s=
ize=3D"md">Notes</th></tr></thead><tbody data-start=3D"1651" data-end=3D"18=
36"><tr data-start=3D"1651" data-end=3D"1711"><td data-start=3D"1651" data-=
end=3D"1661" data-col-size=3D"sm"><code data-start=3D"1653" data-end=3D"166=
0">0a=E2=80=932e</code></td><td data-start=3D"1661" data-end=3D"1668" data-=
col-size=3D"sm">=E2=9D=8C No</td><td data-start=3D"1668" data-end=3D"1711" =
data-col-size=3D"md">Pure spike train + statistical analysis</td></tr><tr d=
ata-start=3D"1712" data-end=3D"1777"><td data-start=3D"1712" data-end=3D"17=
22" data-col-size=3D"sm"><code data-start=3D"1714" data-end=3D"1721">5a=E2=
=80=936b</code></td><td data-start=3D"1722" data-end=3D"1730" data-col-size=
=3D"sm">=E2=9C=85 Yes</td><td data-start=3D"1730" data-end=3D"1777" data-co=
l-size=3D"md">Likely uses pretrained DNNs to model vision</td></tr><tr data=
-start=3D"1778" data-end=3D"1836"><td data-start=3D"1778" data-end=3D"1794"=
 data-col-size=3D"sm">Full pipeline</td><td data-start=3D"1794" data-end=3D=
"1805" data-col-size=3D"sm">=F0=9F=92=A1 Combo</td><td data-start=3D"1805" =
data-end=3D"1836" data-col-size=3D"md">Classical neuro + modern ML</td></tr=
></tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 sel=
f-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D"he=
ight: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"b=
g-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-=
1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]=
:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><sv=
g width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"h=
ttp://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"eveno=
dd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 2=
2 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 1=
4 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.=
6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5=
523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 =
19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.552=
3 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div=
></div></div>
<hr data-start=3D"1838" data-end=3D"1841" class=3D"">
<p data-start=3D"1843" data-end=3D"1950" class=3D"">Want me to jump ahead a=
nd walk through <code data-start=3D"1882" data-end=3D"1912">script_5a_visio=
n_model.ipynb</code> to show where deep learning kicks in?</p></div></div><=
/div></div></div></div></div></div></article><article class=3D"text-token-t=
ext-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-63" data-=
scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"t=
ext-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37re=
m]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin=
:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-conte=
nt-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[-=
-thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-w=
idth) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-vi=
sible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn=
 relative flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap=
-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message=
-author-role=3D"user" data-message-id=3D"4e2c35f6-7466-4285-8c8d-4710bd063a=
33" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-co=
l items-end gap-2 text-start break-words whitespace-normal [.text-message+&=
amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end=
 rtl:items-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)]=
 bg-token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace=
-pre-wrap">what is the train / test function doing?</div></div></div></div>=
</div></div></div></div></div></article><article class=3D"text-token-text-p=
rimary w-full" dir=3D"auto" data-testid=3D"conversation-turn-64" data-scrol=
l-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"te=
xt-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem=
]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:=
--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-conten=
t-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--=
thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-wi=
dth) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-vis=
ible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn =
relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative fl=
ex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div da=
ta-message-author-role=3D"assistant" data-message-id=3D"bdda9abf-f8ed-46b0-=
a6b7-4d0041bfbc93" dir=3D"auto" class=3D"min-h-8 text-message relative flex=
 w-full flex-col items-end gap-2 text-start break-words whitespace-normal [=
.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D=
"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"mark=
down prose dark:prose-invert w-full break-words dark"><p data-start=3D"0" d=
ata-end=3D"150" class=3D"">Great timing=E2=80=94let=E2=80=99s break down ex=
actly what the <strong data-start=3D"47" data-end=3D"76">train/test split f=
unction</strong> is doing, particularly in the context of <code data-start=
=3D"118" data-end=3D"149">script_2e_rsc_precision.ipynb</code>.</p>
<hr data-start=3D"152" data-end=3D"155" class=3D"">
<h2 data-start=3D"157" data-end=3D"197" class=3D"">=F0=9F=A7=A0 Context: Wh=
at are we trying to do?</h2>
<p data-start=3D"199" data-end=3D"316" class=3D"">We want to measure how <s=
trong data-start=3D"222" data-end=3D"234">distinct</strong> and <strong dat=
a-start=3D"239" data-end=3D"251">reliable</strong> neural population respon=
ses are to each image.<br data-start=3D"298" data-end=3D"301">
To do this, we:</p>
<ol data-start=3D"317" data-end=3D"547">
<li data-start=3D"317" data-end=3D"392" class=3D"">
<p data-start=3D"320" data-end=3D"392" class=3D"">Collect many population r=
esponse vectors (neural firing rates) per image</p>
</li>
<li data-start=3D"393" data-end=3D"448" class=3D"">
<p data-start=3D"396" data-end=3D"448" class=3D"">Split those vectors into =
<strong data-start=3D"421" data-end=3D"430">train</strong> and <strong data=
-start=3D"435" data-end=3D"443">test</strong> sets</p>
</li>
<li data-start=3D"449" data-end=3D"547" class=3D"">
<p data-start=3D"452" data-end=3D"547" class=3D"">Check whether <strong dat=
a-start=3D"466" data-end=3D"525">test responses can be matched back to the =
correct image</strong> using train responses</p>
</li>
</ol>
<p data-start=3D"549" data-end=3D"605" class=3D"">This is a classic <strong=
 data-start=3D"567" data-end=3D"595">cross-validated decoding</strong> appr=
oach.</p>
<hr data-start=3D"607" data-end=3D"610" class=3D"">
<h2 data-start=3D"612" data-end=3D"665" class=3D"">=F0=9F=94=A7 The Functio=
n: Train/Test Splitting and Matching</h2>
<p data-start=3D"667" data-end=3D"770" class=3D"">Let=E2=80=99s step throug=
h what it=E2=80=99s doing conceptually (based on how it=E2=80=99s usually i=
mplemented in this script):</p>
<hr data-start=3D"772" data-end=3D"775" class=3D"">
<h3 data-start=3D"777" data-end=3D"823" class=3D""><strong data-start=3D"78=
1" data-end=3D"823">1. Group all neural responses by image</strong></h3>
<p data-start=3D"825" data-end=3D"887" class=3D"">Each image (e.g. Image A)=
 has several trials =E2=86=92 for each trial:</p>
<ul data-start=3D"888" data-end=3D"1002">
<li data-start=3D"888" data-end=3D"961" class=3D"">
<p data-start=3D"890" data-end=3D"961" class=3D"">You get a vector of firin=
g rates: <code data-start=3D"924" data-end=3D"961">[neuron_1, neuron_2, ...=
, neuron_n]</code></p>
</li>
<li data-start=3D"962" data-end=3D"1002" class=3D"">
<p data-start=3D"964" data-end=3D"1002" class=3D"">These are stored in a di=
ctionary like:</p>
</li>
</ul>
<pre class=3D"overflow-visible!" data-start=3D"1004" data-end=3D"1129"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>responses_by_image =3D {
    </span><span><span class=3D"hljs-string">"image_A"</span></span><span>:=
 [vector1, vector2, vector3],
    </span><span><span class=3D"hljs-string">"image_B"</span></span><span>:=
 [vector1, vector2],
    ...
}
</span></span></code></div></div></pre>
<hr data-start=3D"1131" data-end=3D"1134" class=3D"">
<h3 data-start=3D"1136" data-end=3D"1179" class=3D""><strong data-start=3D"=
1140" data-end=3D"1179">2. For each image: Split its trials</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1181" data-end=3D"1243"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>train_vectors =3D []
test_vectors =3D []
labels =3D []
</span></span></code></div></div></pre>
<p data-start=3D"1245" data-end=3D"1260" class=3D"">For each image:</p>
<pre class=3D"overflow-visible!" data-start=3D"1261" data-end=3D"1397"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>np.random.shuffle(vectors)  </span><span><span clas=
s=3D"hljs-comment"># randomly permute order</span></span><span>
half =3D </span><span><span class=3D"hljs-built_in">len</span></span><span>=
(vectors) // </span><span><span class=3D"hljs-number">2</span></span><span>
train =3D vectors[:half]
test =3D vectors[half:]
</span></span></code></div></div></pre>
<ul data-start=3D"1399" data-end=3D"1440">
<li data-start=3D"1399" data-end=3D"1440" class=3D"">
<p data-start=3D"1401" data-end=3D"1440" class=3D"">Averaging the vectors w=
ithin each half:</p>
</li>
</ul>
<pre class=3D"overflow-visible!" data-start=3D"1442" data-end=3D"1521"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>train_vector =3D train.mean(axis=3D</span><span><sp=
an class=3D"hljs-number">0</span></span><span>)
test_vector =3D test.mean(axis=3D</span><span><span class=3D"hljs-number">0=
</span></span><span>)
</span></span></code></div></div></pre>
<p data-start=3D"1523" data-end=3D"1530" class=3D"">So now:</p>
<ul data-start=3D"1531" data-end=3D"1621">
<li data-start=3D"1531" data-end=3D"1586" class=3D"">
<p data-start=3D"1533" data-end=3D"1586" class=3D"">You have one <strong da=
ta-start=3D"1546" data-end=3D"1573">average response vector</strong> for tr=
aining</p>
</li>
<li data-start=3D"1587" data-end=3D"1604" class=3D"">
<p data-start=3D"1589" data-end=3D"1604" class=3D"">One for testing</p>
</li>
<li data-start=3D"1605" data-end=3D"1621" class=3D"">
<p data-start=3D"1607" data-end=3D"1621" class=3D"">For each image</p>
</li>
</ul>
<hr data-start=3D"1623" data-end=3D"1626" class=3D"">
<h3 data-start=3D"1628" data-end=3D"1658" class=3D""><strong data-start=3D"=
1632" data-end=3D"1658">3. Stack into matrices</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1660" data-end=3D"1815"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>train_matrix =3D np.stack(train_vectors)  </span><s=
pan><span class=3D"hljs-comment"># shape: [n_images, n_neurons]</span></spa=
n><span>
test_matrix =3D np.stack(test_vectors)    </span><span><span class=3D"hljs-=
comment"># shape: [n_images, n_neurons]</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"1817" data-end=3D"1869" class=3D"">Each row =3D population=
 response to a different image.</p>
<hr data-start=3D"1871" data-end=3D"1874" class=3D"">
<h3 data-start=3D"1876" data-end=3D"1909" class=3D""><strong data-start=3D"=
1880" data-end=3D"1909">4. Compare test and train</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1911" data-end=3D"1998"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>similarity =3D np.corrcoef(test_matrix, train_matri=
x)[:n_images, n_images:]
</span></span></code></div></div></pre>
<p data-start=3D"2000" data-end=3D"2040" class=3D"">This results in a <stro=
ng data-start=3D"2018" data-end=3D"2039">similarity matrix</strong>:</p>
<ul data-start=3D"2041" data-end=3D"2140">
<li data-start=3D"2041" data-end=3D"2140" class=3D"">
<p data-start=3D"2043" data-end=3D"2140" class=3D""><code data-start=3D"204=
3" data-end=3D"2061">similarity[i, j]</code> =3D correlation between test v=
ector for image <em data-start=3D"2106" data-end=3D"2109">i</em> and train =
vector for image <em data-start=3D"2137" data-end=3D"2140">j</em></p>
</li>
</ul>
<hr data-start=3D"2142" data-end=3D"2145" class=3D"">
<h3 data-start=3D"2147" data-end=3D"2175" class=3D""><strong data-start=3D"=
2151" data-end=3D"2175">5. Predict the image</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2177" data-end=3D"2325"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>predicted_indices =3D similarity.argmax(axis=3D</sp=
an><span><span class=3D"hljs-number">1</span></span><span>)
correct =3D np.</span><span><span class=3D"hljs-built_in">sum</span></span>=
<span>(predicted_indices =3D=3D np.arange(n_images))
accuracy =3D correct / n_images
</span></span></code></div></div></pre>
<ul data-start=3D"2327" data-end=3D"2488">
<li data-start=3D"2327" data-end=3D"2402" class=3D"">
<p data-start=3D"2329" data-end=3D"2402" class=3D"">For each test vector: f=
ind the train vector it=E2=80=99s <strong data-start=3D"2378" data-end=3D"2=
402">most correlated with</strong></p>
</li>
<li data-start=3D"2403" data-end=3D"2488" class=3D"">
<p data-start=3D"2405" data-end=3D"2488" class=3D"">If the predicted index =
matches the true image index =E2=86=92 it=E2=80=99s a correct classificatio=
n</p>
</li>
</ul>
<hr data-start=3D"2490" data-end=3D"2493" class=3D"">
<h2 data-start=3D"2495" data-end=3D"2552" class=3D"">=E2=9C=85 TL;DR =E2=80=
=93 What is the train/test split function doing?</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"25=
54" data-end=3D"2940" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2554" data-end=3D"2577"><tr data-start=3D"2554" data-end=3D"=
2577"><th data-start=3D"2554" data-end=3D"2561" data-col-size=3D"sm">Step</=
th><th data-start=3D"2561" data-end=3D"2577" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"2602" data-end=3D"2940"><tr data-=
start=3D"2602" data-end=3D"2642"><td data-start=3D"2602" data-end=3D"2607" =
data-col-size=3D"sm">1.</td><td data-start=3D"2607" data-end=3D"2642" data-=
col-size=3D"md">Group neural responses by image</td></tr><tr data-start=3D"=
2643" data-end=3D"2700"><td data-start=3D"2643" data-end=3D"2648" data-col-=
size=3D"sm">2.</td><td data-start=3D"2648" data-end=3D"2700" data-col-size=
=3D"md">Randomly split trials into train and test halves</td></tr><tr data-=
start=3D"2701" data-end=3D"2768"><td data-start=3D"2701" data-end=3D"2706" =
data-col-size=3D"sm">3.</td><td data-start=3D"2706" data-end=3D"2768" data-=
col-size=3D"md">Average within-trial halves to create one vector per image<=
/td></tr><tr data-start=3D"2769" data-end=3D"2829"><td data-start=3D"2769" =
data-end=3D"2774" data-col-size=3D"sm">4.</td><td data-start=3D"2774" data-=
end=3D"2829" data-col-size=3D"md">Compute correlations between test and tra=
in vectors</td></tr><tr data-start=3D"2830" data-end=3D"2878"><td data-star=
t=3D"2830" data-end=3D"2835" data-col-size=3D"sm">5.</td><td data-start=3D"=
2835" data-end=3D"2878" data-col-size=3D"md">Predict image identity from te=
st vector</td></tr><tr data-start=3D"2879" data-end=3D"2940"><td data-start=
=3D"2879" data-end=3D"2884" data-col-size=3D"sm">6.</td><td data-start=3D"2=
884" data-end=3D"2940" data-col-size=3D"md">Count how often the prediction =
is correct (accuracy)</td></tr></tbody></table><div class=3D"sticky end-(--=
thread-content-margin) h-0 self-end select-none"><div class=3D"absolute end=
-0 flex items-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=
=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary=
 text-token-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:n=
ot(:hover):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(=
:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 2=
4 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-h=
eavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315=
 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17=
H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315=
 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 1=
4.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C=
4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5=
523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></s=
vg></button></span></div></div></div></div>
<hr data-start=3D"2942" data-end=3D"2945" class=3D"">
<p data-start=3D"2947" data-end=3D"2968" class=3D"">It=E2=80=99s a way of a=
sking:</p>
<blockquote data-start=3D"2969" data-end=3D"3097">
<p data-start=3D"2971" data-end=3D"3097" class=3D"">=E2=80=9CIf I only had =
the neural activity=E2=80=94and no info about the stimulus=E2=80=94could I =
<em data-start=3D"3045" data-end=3D"3057">figure out</em> which image the m=
onkey was looking at?=E2=80=9D</p>
</blockquote>
<p data-start=3D"3099" data-end=3D"3175" class=3D"">Want help visualizing w=
hat the similarity matrix looks like for one session?</p></div></div></div>=
</div></div></div></div></div></article><article class=3D"text-token-text-p=
rimary w-full" dir=3D"auto" data-testid=3D"conversation-turn-65" data-scrol=
l-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-b=
ase my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[-=
-thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--sp=
acing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-ma=
x-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thre=
ad-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width)=
 flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible=
:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn rela=
tive flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md=
:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-auth=
or-role=3D"user" data-message-id=3D"fe0f6286-e20c-4c56-9604-de2a9ce491aa" d=
ir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col ite=
ms-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;]=
:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:=
items-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-t=
oken-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-=
wrap">okay could you move on to 2f</div></div></div></div></div></div></div=
></div></div></article><article class=3D"text-token-text-primary w-full" di=
r=3D"auto" data-testid=3D"conversation-turn-66" data-scroll-anchor=3D"false=
"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto m=
x-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-conte=
nt-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px=
-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem=
] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-ma=
x-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-=
base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidd=
en" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-f=
ull min-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:g=
ap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author=
-role=3D"assistant" data-message-id=3D"f18dfa7a-64da-489e-9a49-f1e525cd5a09=
" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col =
items-end gap-2 text-start break-words whitespace-normal [.text-message+&am=
p;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex=
-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:p=
rose-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"29" cl=
ass=3D"">Absolutely! Let=E2=80=99s now unpack:</p>
<h2 data-start=3D"31" data-end=3D"68" class=3D"">=F0=9F=93=81 <code data-st=
art=3D"37" data-end=3D"68">script_2f_rsc_cross_val.ipynb</code></h2>
<hr data-start=3D"70" data-end=3D"73" class=3D"">
<h2 data-start=3D"75" data-end=3D"90" class=3D"">=F0=9F=8E=AF <strong data-=
start=3D"81" data-end=3D"90">Goal:</strong></h2>
<p data-start=3D"91" data-end=3D"217" class=3D"">This script performs a <st=
rong data-start=3D"114" data-end=3D"173">cross-validated analysis of repres=
entational similarity</strong> (RSC) across different fixations or trials.<=
/p>
<p data-start=3D"219" data-end=3D"377" class=3D"">It's building on <code da=
ta-start=3D"236" data-end=3D"240">2d</code> and <code data-start=3D"245" da=
ta-end=3D"249">2e</code>, but now focuses on <strong data-start=3D"270" dat=
a-end=3D"326">validating the stability of spike count correlations</strong>=
 across <strong data-start=3D"334" data-end=3D"358">separate data splits</s=
trong>. That is, it asks:</p>
<blockquote data-start=3D"379" data-end=3D"484">
<p data-start=3D"381" data-end=3D"484" class=3D"">=E2=80=9CAre the neural p=
opulation correlation patterns themselves consistent across different sets =
of trials?=E2=80=9D</p>
</blockquote>
<p data-start=3D"486" data-end=3D"502" class=3D"">In simple terms:</p>
<blockquote data-start=3D"503" data-end=3D"609">
<p data-start=3D"505" data-end=3D"609" class=3D"">=E2=80=9CCan I trust that=
 the way neurons co-fire for an image is reproducible across fixations or r=
epetitions?=E2=80=9D</p>
</blockquote>
<hr data-start=3D"611" data-end=3D"614" class=3D"">
<h2 data-start=3D"616" data-end=3D"639" class=3D"">=F0=9F=A7=A0 What=E2=80=
=99s new in 2f?</h2>
<p data-start=3D"641" data-end=3D"753" class=3D"">Unlike <code data-start=
=3D"648" data-end=3D"652">2d</code>, which just computes RSC once per image=
,
and unlike <code data-start=3D"705" data-end=3D"709">2e</code>, which decod=
es image identity,
this script:</p>
<ul data-start=3D"755" data-end=3D"925">
<li data-start=3D"755" data-end=3D"815" class=3D"">
<p data-start=3D"757" data-end=3D"815" class=3D"">Splits the data (e.g. tri=
als or fixations) into two halves</p>
</li>
<li data-start=3D"816" data-end=3D"858" class=3D"">
<p data-start=3D"818" data-end=3D"858" class=3D"">Computes an <strong data-=
start=3D"830" data-end=3D"858">RSC matrix for each half</strong></p>
</li>
<li data-start=3D"859" data-end=3D"925" class=3D"">
<p data-start=3D"861" data-end=3D"925" class=3D"">Then checks how <strong d=
ata-start=3D"877" data-end=3D"888">similar</strong> those RSC matrices are =
to each other</p>
</li>
</ul>
<hr data-start=3D"927" data-end=3D"930" class=3D"">
<h2 data-start=3D"932" data-end=3D"960" class=3D"">=F0=9F=94=8D Step-by-Ste=
p Breakdown</h2>
<hr data-start=3D"962" data-end=3D"965" class=3D"">
<h3 data-start=3D"967" data-end=3D"985" class=3D""><strong data-start=3D"97=
1" data-end=3D"985">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"987" data-end=3D"1100"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"1102" data-end=3D"1120" class=3D"">No surprises here.</p>
<hr data-start=3D"1122" data-end=3D"1125" class=3D"">
<h3 data-start=3D"1127" data-end=3D"1155" class=3D""><strong data-start=3D"=
1131" data-end=3D"1155">2. Load session data</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1157" data-end=3D"1287"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(Path=
(</span><span><span class=3D"hljs-string">"intermediate"</span></span><span=
>) / </span><span><span class=3D"hljs-string">"shared_preprocessed_data_wit=
h_saccades.pkl"</span></span><span>, </span><span><span class=3D"hljs-strin=
g">"rb"</span></span><span>) </span><span><span class=3D"hljs-keyword">as</=
span></span><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<p data-start=3D"1289" data-end=3D"1310" class=3D"">This gives access to:</=
p>
<ul data-start=3D"1311" data-end=3D"1391">
<li data-start=3D"1311" data-end=3D"1339" class=3D"">
<p data-start=3D"1313" data-end=3D"1339" class=3D"">Spike density data (<co=
de data-start=3D"1333" data-end=3D"1338">sdf</code>)</p>
</li>
<li data-start=3D"1340" data-end=3D"1379" class=3D"">
<p data-start=3D"1342" data-end=3D"1379" class=3D"">Trial metadata (fixatio=
ns, image IDs)</p>
</li>
<li data-start=3D"1380" data-end=3D"1391" class=3D"">
<p data-start=3D"1382" data-end=3D"1391" class=3D"">Unit info</p>
</li>
</ul>
<hr data-start=3D"1393" data-end=3D"1396" class=3D"">
<h3 data-start=3D"1398" data-end=3D"1430" class=3D""><strong data-start=3D"=
1402" data-end=3D"1430">3. Loop through sessions</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1432" data-end=3D"1553"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> sess_name, sess_data </span><span><span class=3D"hljs-keyword">in</span><=
/span><span> tqdm(data.items()):
    sdf =3D sess_data[</span><span><span class=3D"hljs-string">"sdf"</span>=
</span><span>]
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]
</span></span></code></div></div></pre>
<p data-start=3D"1555" data-end=3D"1577" class=3D"">Basic session loading.<=
/p>
<hr data-start=3D"1579" data-end=3D"1582" class=3D"">
<h3 data-start=3D"1584" data-end=3D"1640" class=3D""><strong data-start=3D"=
1588" data-end=3D"1640">4. Collect population response vectors per image</s=
trong></h3>
<p data-start=3D"1642" data-end=3D"1669" class=3D"">Similar to earlier scri=
pts:</p>
<pre class=3D"overflow-visible!" data-start=3D"1671" data-end=3D"2082"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>responses_by_image =3D {}

</span><span><span class=3D"hljs-keyword">for</span></span><span> trial_idx=
, trial </span><span><span class=3D"hljs-keyword">in</span></span><span> tr=
ials.iterrows():
    </span><span><span class=3D"hljs-keyword">if</span></span><span> </span=
><span><span class=3D"hljs-built_in">len</span></span><span>(trial[</span><=
span><span class=3D"hljs-string">"fix_onsets"</span></span><span>]) =3D=3D =
</span><span><span class=3D"hljs-number">0</span></span><span>:
        </span><span><span class=3D"hljs-keyword">continue</span></span><sp=
an>

    img_id =3D trial[</span><span><span class=3D"hljs-string">"image_id"</s=
pan></span><span>]
    fix0 =3D trial[</span><span><span class=3D"hljs-string">"fix_onsets"</s=
pan></span><span>][</span><span><span class=3D"hljs-number">0</span></span>=
<span>]
    response =3D sdf[trial_idx, :, fix0 + t_start : fix0 + t_end].mean(axis=
=3D-</span><span><span class=3D"hljs-number">1</span></span><span>)

    </span><span><span class=3D"hljs-keyword">if</span></span><span> img_id=
 </span><span><span class=3D"hljs-keyword">not</span></span><span> </span><=
span><span class=3D"hljs-keyword">in</span></span><span> responses_by_image=
:
        responses_by_image[img_id] =3D []

    responses_by_image[img_id].append(response)
</span></span></code></div></div></pre>
<p data-start=3D"2084" data-end=3D"2176" class=3D"">So you now have, for ea=
ch <code data-start=3D"2110" data-end=3D"2120">image_id</code>, a set of po=
pulation response vectors=E2=80=94one per fixation.</p>
<hr data-start=3D"2178" data-end=3D"2181" class=3D"">
<h3 data-start=3D"2183" data-end=3D"2231" class=3D""><strong data-start=3D"=
2187" data-end=3D"2231">5. For each image: split into two halves</strong></=
h3>
<pre class=3D"overflow-visible!" data-start=3D"2233" data-end=3D"2342"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>np.random.shuffle(vectors)
half =3D </span><span><span class=3D"hljs-built_in">len</span></span><span>=
(vectors) // </span><span><span class=3D"hljs-number">2</span></span><span>
set1 =3D vectors[:half]
set2 =3D vectors[half:]
</span></span></code></div></div></pre>
<p data-start=3D"2344" data-end=3D"2429" class=3D"">These are your <strong =
data-start=3D"2359" data-end=3D"2385">cross-validation folds</strong>=E2=80=
=94each half will yield a separate RSC matrix.</p>
<hr data-start=3D"2431" data-end=3D"2434" class=3D"">
<h3 data-start=3D"2436" data-end=3D"2479" class=3D""><strong data-start=3D"=
2440" data-end=3D"2479">6. Compute RSC matrix for each half</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2481" data-end=3D"2636"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>mat1 =3D np.stack(set1)
mat2 =3D np.stack(set2)

rsc1 =3D np.corrcoef(mat1, rowvar=3D</span><span><span class=3D"hljs-litera=
l">False</span></span><span>)  </span><span><span class=3D"hljs-comment"># =
[units x units]</span></span><span>
rsc2 =3D np.corrcoef(mat2, rowvar=3D</span><span><span class=3D"hljs-litera=
l">False</span></span><span>)
</span></span></code></div></div></pre>
<p data-start=3D"2638" data-end=3D"2708" class=3D"">This gives you two neur=
on-by-neuron correlation matrices=E2=80=94one per half.</p>
<hr data-start=3D"2710" data-end=3D"2713" class=3D"">
<h3 data-start=3D"2715" data-end=3D"2750" class=3D""><strong data-start=3D"=
2719" data-end=3D"2750">7. Compare the two matrices</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2752" data-end=3D"2911"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>upper1 =3D rsc1[np.triu_indices_from(rsc1, k=3D</sp=
an><span><span class=3D"hljs-number">1</span></span><span>)]
upper2 =3D rsc2[np.triu_indices_from(rsc2, k=3D</span><span><span class=3D"=
hljs-number">1</span></span><span>)]

crossval_score =3D np.corrcoef(upper1, upper2)[</span><span><span class=3D"=
hljs-number">0</span></span><span>, </span><span><span class=3D"hljs-number=
">1</span></span><span>]
</span></span></code></div></div></pre>
<p data-start=3D"2913" data-end=3D"3000" class=3D"">You're checking how <st=
rong data-start=3D"2933" data-end=3D"2944">similar</strong> the correlation=
 structure is between the two halves by:</p>
<ul data-start=3D"3001" data-end=3D"3092">
<li data-start=3D"3001" data-end=3D"3062" class=3D"">
<p data-start=3D"3003" data-end=3D"3062" class=3D"">Extracting the upper tr=
iangle of each (unique neuron pairs)</p>
</li>
<li data-start=3D"3063" data-end=3D"3092" class=3D"">
<p data-start=3D"3065" data-end=3D"3092" class=3D"">Computing their correla=
tion</p>
</li>
</ul>
<p data-start=3D"3094" data-end=3D"3153" class=3D"">This gives a <strong da=
ta-start=3D"3107" data-end=3D"3152">cross-validated RSC reproducibility sco=
re</strong>.</p>
<hr data-start=3D"3155" data-end=3D"3158" class=3D"">
<h3 data-start=3D"3160" data-end=3D"3182" class=3D""><strong data-start=3D"=
3164" data-end=3D"3182">8. Save result</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3184" data-end=3D"3306"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>all_results.append({
    </span><span><span class=3D"hljs-string">"session"</span></span><span>:=
 sess_name,
    </span><span><span class=3D"hljs-string">"image_id"</span></span><span>=
: img_id,
    </span><span><span class=3D"hljs-string">"rsc_crossval"</span></span><s=
pan>: crossval_score
})
</span></span></code></div></div></pre>
<p data-start=3D"3308" data-end=3D"3394" class=3D"">Each row =3D one image,=
 with a score reflecting how stable its correlation structure is.</p>
<hr data-start=3D"3396" data-end=3D"3399" class=3D"">
<h3 data-start=3D"3401" data-end=3D"3429" class=3D""><strong data-start=3D"=
3405" data-end=3D"3429">9. Save final output</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3431" data-end=3D"3526"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>df =3D pd.DataFrame(all_results)
df.to_csv(</span><span><span class=3D"hljs-string">"output/rsc_cross_val.cs=
v"</span></span><span>, index=3D</span><span><span class=3D"hljs-literal">F=
alse</span></span><span>)
</span></span></code></div></div></pre>
<hr data-start=3D"3528" data-end=3D"3531" class=3D"">
<h2 data-start=3D"3533" data-end=3D"3545" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"35=
47" data-end=3D"3827" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3547" data-end=3D"3570"><tr data-start=3D"3547" data-end=3D"=
3570"><th data-start=3D"3547" data-end=3D"3554" data-col-size=3D"sm">Step</=
th><th data-start=3D"3554" data-end=3D"3570" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"3595" data-end=3D"3827"><tr data-=
start=3D"3595" data-end=3D"3639"><td data-start=3D"3595" data-end=3D"3605" =
data-col-size=3D"sm">Collect</td><td data-start=3D"3605" data-end=3D"3639" =
data-col-size=3D"md">Population responses per image</td></tr><tr data-start=
=3D"3640" data-end=3D"3674"><td data-start=3D"3640" data-end=3D"3648" data-=
col-size=3D"sm">Split</td><td data-start=3D"3648" data-end=3D"3674" data-co=
l-size=3D"md">Trials into two halves</td></tr><tr data-start=3D"3675" data-=
end=3D"3732"><td data-start=3D"3675" data-end=3D"3685" data-col-size=3D"sm"=
>Compute</td><td data-start=3D"3685" data-end=3D"3732" data-col-size=3D"md"=
>Neuron=E2=80=93neuron correlation matrices per half</td></tr><tr data-star=
t=3D"3733" data-end=3D"3796"><td data-start=3D"3733" data-end=3D"3743" data=
-col-size=3D"sm">Compare</td><td data-start=3D"3743" data-end=3D"3796" data=
-col-size=3D"md">How similar the RSCs are (cross-validation score)</td></tr=
><tr data-start=3D"3797" data-end=3D"3827"><td data-start=3D"3797" data-end=
=3D"3804" data-col-size=3D"sm">Save</td><td data-start=3D"3804" data-end=3D=
"3827" data-col-size=3D"md">One value per image</td></tr></tbody></table><d=
iv class=3D"sticky end-(--thread-content-margin) h-0 self-end select-none">=
<div class=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><=
span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary =
hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 tr=
ansition-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-non=
e group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C2=
2 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2=
 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 1=
7 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.447=
72 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 =
5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=
=3D"currentColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"3829" data-end=3D"3832" class=3D"">
<h2 data-start=3D"3834" data-end=3D"3856" class=3D"">=F0=9F=A7=A0 Why this =
matters</h2>
<ul data-start=3D"3858" data-end=3D"4123">
<li data-start=3D"3858" data-end=3D"3920" class=3D"">
<p data-start=3D"3860" data-end=3D"3920" class=3D"">This tells you how <str=
ong data-start=3D"3879" data-end=3D"3891">reliable</strong> the population =
structure is.</p>
</li>
<li data-start=3D"3921" data-end=3D"4039" class=3D"">
<p data-start=3D"3923" data-end=3D"4039" class=3D"">Even if neurons are cor=
related for a stimulus, it only matters if that structure is <strong data-s=
tart=3D"4007" data-end=3D"4017">stable</strong> and <strong data-start=3D"4=
022" data-end=3D"4038">reproducible</strong>.</p>
</li>
<li data-start=3D"4040" data-end=3D"4123" class=3D"">
<p data-start=3D"4042" data-end=3D"4123" class=3D"">It adds confidence that=
 RSCs reflect meaningful coding, not noise or overfitting.</p>
</li>
</ul>
<hr data-start=3D"4125" data-end=3D"4128" class=3D"">
<p data-start=3D"4130" data-end=3D"4209" class=3D"">Want help comparing RSC=
 stability between categories (e.g., faces vs. objects)?</p></div></div></d=
iv></div></div></div></div></div></article><article class=3D"text-token-tex=
t-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-67" data-sc=
roll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"tex=
t-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]=
:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:-=
-spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content=
-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--t=
hread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-wid=
th) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visi=
ble:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn r=
elative flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1=
 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-a=
uthor-role=3D"user" data-message-id=3D"c896c7a5-8e5d-4d9c-b9e0-5bae33731aa4=
" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col =
items-end gap-2 text-start break-words whitespace-normal [.text-message+&am=
p;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end r=
tl:items-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] b=
g-token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-p=
re-wrap">okay continue on to 2g</div></div></div></div></div></div></div></=
div></div></article><article class=3D"text-token-text-primary w-full" dir=
=3D"auto" data-testid=3D"conversation-turn-68" data-scroll-anchor=3D"false"=
><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx=
-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-conten=
t-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-=
(--thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem]=
 @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max=
-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-b=
ase gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidde=
n" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-fu=
ll min-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:ga=
p-3"><div class=3D"flex max-w-full flex-col grow"><p class=3D"first:mt-0 my=
-1.5 h-8 flex items-center ltr:me-auto rtl:ms-auto empty:hidden text-token-=
text-secondary"></p><div data-message-author-role=3D"assistant" data-messag=
e-id=3D"23e2dd49-5979-4526-958f-6990e24ff440" dir=3D"auto" class=3D"min-h-8=
 text-message relative flex w-full flex-col items-end gap-2 text-start brea=
k-words whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-sl=
ug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:p=
t-[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-words =
dark"><p data-start=3D"0" data-end=3D"132" class=3D"">Looks like there=E2=
=80=99s <strong data-start=3D"19" data-end=3D"42">no <code data-start=3D"24=
" data-end=3D"35">script_2g</code> file</strong> in your uploaded set=E2=80=
=94at least nothing with that name or prefix. You've shared up through:</p>
<ul data-start=3D"134" data-end=3D"169">
<li data-start=3D"134" data-end=3D"169" class=3D"">
<p data-start=3D"136" data-end=3D"169" class=3D"">=E2=9C=85 <code data-star=
t=3D"138" data-end=3D"169">script_2f_rsc_cross_val.ipynb</code></p>
</li>
</ul>
<p data-start=3D"171" data-end=3D"202" class=3D"">=E2=80=A6but no follow-up=
 labeled <code data-start=3D"197" data-end=3D"201">2g</code>.</p>
<hr data-start=3D"204" data-end=3D"207" class=3D"">
<h3 data-start=3D"209" data-end=3D"232" class=3D"">=F0=9F=A7=AD What you ca=
n do:</h3>
<ul data-start=3D"233" data-end=3D"520">
<li data-start=3D"233" data-end=3D"330" class=3D"">
<p data-start=3D"235" data-end=3D"330" class=3D"">Double-check your local f=
iles=E2=80=94maybe it=E2=80=99s named slightly differently or hasn=E2=80=99=
t been uploaded yet</p>
</li>
<li data-start=3D"331" data-end=3D"520" class=3D"">
<p data-start=3D"333" data-end=3D"520" class=3D"">Let me know what you <em =
data-start=3D"354" data-end=3D"362">expect</em> <code data-start=3D"363" da=
ta-end=3D"367">2g</code> might cover (e.g., time-resolved RSC? decoding fro=
m correlation structures?)=E2=80=94and I can help mock up what it might be =
doing based on the logic of <code data-start=3D"513" data-end=3D"520">2a=E2=
=80=932f</code></p>
</li>
</ul>
<p data-start=3D"522" data-end=3D"685" class=3D"">Would you like to move on=
 to the <code data-start=3D"555" data-end=3D"559">3x</code> scripts instead=
 (e.g. <code data-start=3D"582" data-end=3D"607">3a_trial_level_sc.ipynb</c=
ode>) or jump ahead to <code data-start=3D"626" data-end=3D"649">5a_vision_=
model.ipynb</code> where deep learning is likely used?</p></div></div></div=
></div></div></div></div></div></article><article class=3D"text-token-text-=
primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-69" data-scro=
ll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-=
base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[=
--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--s=
pacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-m=
ax-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thr=
ead-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width=
) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visibl=
e:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn rel=
ative flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 m=
d:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-aut=
hor-role=3D"user" data-message-id=3D"75f917e2-d318-423d-a52d-9024cd465ed0" =
dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col it=
ems-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;=
]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl=
:items-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-=
token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre=
-wrap">what about 2u</div></div></div></div></div></div></div></div></div><=
/article><article class=3D"text-token-text-primary w-full" dir=3D"auto" dat=
a-testid=3D"conversation-turn-70" data-scroll-anchor=3D"false"><h6 class=3D=
"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [-=
-thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--sp=
acing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-con=
tent-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--=
thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem]=
 mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:=
gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=
=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0 =
flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div c=
lass=3D"flex max-w-full flex-col grow"><p class=3D"first:mt-0 my-1.5 h-8 fl=
ex items-center ltr:me-auto rtl:ms-auto empty:hidden text-token-text-second=
ary"></p><div data-message-author-role=3D"assistant" data-message-id=3D"5ca=
78c1d-2a82-4e67-9b53-bf8ce0d0d396" dir=3D"auto" class=3D"min-h-8 text-messa=
ge relative flex w-full flex-col items-end gap-2 text-start break-words whi=
tespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4=
o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><d=
iv class=3D"markdown prose dark:prose-invert w-full break-words dark"><p da=
ta-start=3D"0" data-end=3D"90" class=3D"">Looks like there=E2=80=99s no fil=
e named <strong data-start=3D"33" data-end=3D"48"><code data-start=3D"35" d=
ata-end=3D"46">script_2u</code></strong> either=E2=80=94at least not by tha=
t exact prefix.</p>
<p data-start=3D"92" data-end=3D"168" class=3D"">However, I noticed you=E2=
=80=99ve uploaded two related scripts that start with <code data-start=3D"1=
63" data-end=3D"167">2u</code>:</p>
<ul data-start=3D"170" data-end=3D"235">
<li data-start=3D"170" data-end=3D"207" class=3D"">
<p data-start=3D"172" data-end=3D"207" class=3D"">=E2=9C=85 <code data-star=
t=3D"174" data-end=3D"207">script_2u1_crossing_point.ipynb</code></p>
</li>
<li data-start=3D"208" data-end=3D"235" class=3D"">
<p data-start=3D"210" data-end=3D"235" class=3D"">=E2=9C=85 <code data-star=
t=3D"212" data-end=3D"235">script_2u2_t2hh.ipynb</code></p>
</li>
</ul>
<p data-start=3D"237" data-end=3D"362" class=3D"">Would you like me to cont=
inue with <strong data-start=3D"272" data-end=3D"296"><code data-start=3D"2=
74" data-end=3D"294">2u1_crossing_point</code></strong> next? That=E2=80=99=
s most likely the intended continuation in the series.</p></div></div></div=
></div></div></div></div></div></article><article class=3D"text-token-text-=
primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-71" data-scro=
ll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-=
base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[=
--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--s=
pacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-m=
ax-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thr=
ead-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width=
) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visibl=
e:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn rel=
ative flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 m=
d:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-aut=
hor-role=3D"user" data-message-id=3D"245bf65f-a430-4fd0-acd0-1487e4e005f9" =
dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col it=
ems-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;=
]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl=
:items-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-=
token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre=
-wrap">yes</div></div></div></div></div></div></div></div></div></article><=
article class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=
=3D"conversation-turn-72" data-scroll-anchor=3D"false"><h6 class=3D"sr-only=
">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-=
content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)=
] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-mar=
gin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-c=
ontent-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto=
 flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg=
:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><d=
iv class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col a=
gent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"fl=
ex max-w-full flex-col grow"><div data-message-author-role=3D"assistant" da=
ta-message-id=3D"51a83ed3-7901-40ea-b9ed-323a9db7c419" dir=3D"auto" class=
=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 text=
-start break-words whitespace-normal [.text-message+&amp;]:mt-5" data-messa=
ge-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hid=
den first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full b=
reak-words dark"><p data-start=3D"0" data-end=3D"30" class=3D"">Perfect! Le=
t=E2=80=99s now go through:</p>
<h2 data-start=3D"32" data-end=3D"71" class=3D"">=F0=9F=93=81 <code data-st=
art=3D"38" data-end=3D"71">script_2u1_crossing_point.ipynb</code></h2>
<hr data-start=3D"73" data-end=3D"76" class=3D"">
<h2 data-start=3D"78" data-end=3D"107" class=3D"">=F0=9F=8E=AF <strong data=
-start=3D"84" data-end=3D"107">Goal of the script:</strong></h2>
<p data-start=3D"108" data-end=3D"337" class=3D"">This script is focused on=
 identifying the <strong data-start=3D"150" data-end=3D"170">=E2=80=9Ccross=
ing point=E2=80=9D</strong> in neural responses=E2=80=94specifically, the m=
oment in time <strong data-start=3D"224" data-end=3D"243">after a saccade</=
strong> when neural responses to different categories (e.g., <strong data-s=
tart=3D"297" data-end=3D"318">face vs. non-face</strong>) begin to diverge.=
</p>
<p data-start=3D"339" data-end=3D"354" class=3D"">In other words:</p>
<blockquote data-start=3D"356" data-end=3D"520">
<p data-start=3D"358" data-end=3D"520" class=3D"">=E2=80=9CAfter the eye la=
nds on a new fixation, when do face-selective neurons start to show a diffe=
rent response depending on what kind of stimulus is at that location?=E2=80=
=9D</p>
</blockquote>
<p data-start=3D"522" data-end=3D"703" class=3D"">This is a time-resolved v=
ersion of the selectivity analyses done in earlier scripts, and it's key fo=
r understanding <strong data-start=3D"638" data-end=3D"662">latency and dyn=
amics</strong> of object recognition in natural vision.</p>
<hr data-start=3D"705" data-end=3D"708" class=3D"">
<h2 data-start=3D"710" data-end=3D"738" class=3D"">=F0=9F=94=8D Step-by-Ste=
p Breakdown</h2>
<hr data-start=3D"740" data-end=3D"743" class=3D"">
<h3 data-start=3D"745" data-end=3D"763" class=3D""><strong data-start=3D"74=
9" data-end=3D"763">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"765" data-end=3D"910"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">import</span></span><span> matplo=
tlib.pyplot </span><span><span class=3D"hljs-keyword">as</span></span><span=
> plt
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"912" data-end=3D"995" class=3D"">Standard stack. We'll be =
working with spike density data and fixation labels again.</p>
<hr data-start=3D"997" data-end=3D"1000" class=3D"">
<h3 data-start=3D"1002" data-end=3D"1062" class=3D""><strong data-start=3D"=
1006" data-end=3D"1062">2. Load session data with saccades and category inf=
o</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1064" data-end=3D"1194"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(Path=
(</span><span><span class=3D"hljs-string">"intermediate"</span></span><span=
>) / </span><span><span class=3D"hljs-string">"shared_preprocessed_data_wit=
h_saccades.pkl"</span></span><span>, </span><span><span class=3D"hljs-strin=
g">"rb"</span></span><span>) </span><span><span class=3D"hljs-keyword">as</=
span></span><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<p data-start=3D"1196" data-end=3D"1217" class=3D"">Same as before=E2=80=94=
loads:</p>
<ul data-start=3D"1218" data-end=3D"1379">
<li data-start=3D"1218" data-end=3D"1250" class=3D"">
<p data-start=3D"1220" data-end=3D"1250" class=3D""><code data-start=3D"122=
0" data-end=3D"1225">sdf</code>: spike density functions</p>
</li>
<li data-start=3D"1251" data-end=3D"1330" class=3D"">
<p data-start=3D"1253" data-end=3D"1330" class=3D""><code data-start=3D"125=
3" data-end=3D"1261">trials</code>: fixation metadata (e.g., <code data-sta=
rt=3D"1288" data-end=3D"1300">fix_onsets</code>, <code data-start=3D"1302" =
data-end=3D"1317">sacc_ordinals</code>, <code data-start=3D"1319" data-end=
=3D"1329">category</code>)</p>
</li>
<li data-start=3D"1331" data-end=3D"1379" class=3D"">
<p data-start=3D"1333" data-end=3D"1379" class=3D""><code data-start=3D"133=
3" data-end=3D"1344">unit_info</code>: maybe brain area, electrode, etc.</p=
>
</li>
</ul>
<hr data-start=3D"1381" data-end=3D"1384" class=3D"">
<h3 data-start=3D"1386" data-end=3D"1430" class=3D""><strong data-start=3D"=
1390" data-end=3D"1430">3. Define category groups to compare</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1432" data-end=3D"1526"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>face_labels =3D [</span><span><span class=3D"hljs-s=
tring">'human_face'</span></span><span>, </span><span><span class=3D"hljs-s=
tring">'monkey_face'</span></span><span>]
nonface_labels =3D [</span><span><span class=3D"hljs-string">'object'</span=
></span><span>, </span><span><span class=3D"hljs-string">'scene'</span></sp=
an><span>]
</span></span></code></div></div></pre>
<p data-start=3D"1528" data-end=3D"1608" class=3D"">Just like in <code data=
-start=3D"1541" data-end=3D"1548">1a/1b</code>, this splits trials into <st=
rong data-start=3D"1574" data-end=3D"1582">face</strong> vs. <strong data-s=
tart=3D"1587" data-end=3D"1599">non-face</strong> stimuli.</p>
<p data-start=3D"1610" data-end=3D"1691" class=3D"">We=E2=80=99ll compare n=
eural responses across these categories <strong data-start=3D"1665" data-en=
d=3D"1690">after saccade landing</strong>.</p>
<hr data-start=3D"1693" data-end=3D"1696" class=3D"">
<h3 data-start=3D"1698" data-end=3D"1742" class=3D""><strong data-start=3D"=
1702" data-end=3D"1742">4. Iterate over sessions and neurons</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1744" data-end=3D"1960"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> sess_name, sess_data </span><span><span class=3D"hljs-keyword">in</span><=
/span><span> tqdm(data.items()):
    sdf =3D sess_data[</span><span><span class=3D"hljs-string">"sdf"</span>=
</span><span>]
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]

    </span><span><span class=3D"hljs-keyword">for</span></span><span> unit_=
idx </span><span><span class=3D"hljs-keyword">in</span></span><span> </span=
><span><span class=3D"hljs-built_in">range</span></span><span>(sdf.shape[</=
span><span><span class=3D"hljs-number">1</span></span><span>]):
        face_trials =3D []
        nonface_trials =3D []
</span></span></code></div></div></pre>
<p data-start=3D"1962" data-end=3D"2082" class=3D"">You=E2=80=99re preparin=
g to extract <strong data-start=3D"1990" data-end=3D"2023">per-fixation neu=
ral responses</strong> grouped by category (face vs. non-face) <strong data=
-start=3D"2064" data-end=3D"2081">for each unit</strong>.</p>
<hr data-start=3D"2084" data-end=3D"2087" class=3D"">
<h3 data-start=3D"2089" data-end=3D"2138" class=3D""><strong data-start=3D"=
2093" data-end=3D"2138">5. Extract aligned responses per fixation</strong><=
/h3>
<pre class=3D"overflow-visible!" data-start=3D"2140" data-end=3D"2552"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> trial_idx, trial </span><span><span class=3D"hljs-keyword">in</span></spa=
n><span> trials.iterrows():
    category =3D trial[</span><span><span class=3D"hljs-string">"category"<=
/span></span><span>]
    </span><span><span class=3D"hljs-keyword">if</span></span><span> </span=
><span><span class=3D"hljs-built_in">len</span></span><span>(trial[</span><=
span><span class=3D"hljs-string">"fix_onsets"</span></span><span>]) =3D=3D =
</span><span><span class=3D"hljs-number">0</span></span><span>:
        </span><span><span class=3D"hljs-keyword">continue</span></span><sp=
an>

    fix_onset =3D trial[</span><span><span class=3D"hljs-string">"fix_onset=
s"</span></span><span>][</span><span><span class=3D"hljs-number">0</span></=
span><span>]
    response =3D sdf[trial_idx, unit_idx, fix_onset + t_start : fix_onset +=
 t_end]

    </span><span><span class=3D"hljs-keyword">if</span></span><span> catego=
ry </span><span><span class=3D"hljs-keyword">in</span></span><span> face_la=
bels:
        face_trials.append(response)
    </span><span><span class=3D"hljs-keyword">elif</span></span><span> cate=
gory </span><span><span class=3D"hljs-keyword">in</span></span><span> nonfa=
ce_labels:
        nonface_trials.append(response)
</span></span></code></div></div></pre>
<p data-start=3D"2554" data-end=3D"2680" class=3D"">This extracts a <strong=
 data-start=3D"2570" data-end=3D"2634">time window of neural activity align=
ed to the first fixation</strong> for each trial, grouped by stimulus categ=
ory.</p>
<hr data-start=3D"2682" data-end=3D"2685" class=3D"">
<h3 data-start=3D"2687" data-end=3D"2729" class=3D""><strong data-start=3D"=
2691" data-end=3D"2729">6. Average and compare timecourses</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2731" data-end=3D"2860"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>face_avg =3D np.mean(face_trials, axis=3D</span><sp=
an><span class=3D"hljs-number">0</span></span><span>)
nonface_avg =3D np.mean(nonface_trials, axis=3D</span><span><span class=3D"=
hljs-number">0</span></span><span>)
diff =3D face_avg - nonface_avg
</span></span></code></div></div></pre>
<p data-start=3D"2862" data-end=3D"2869" class=3D"">So now:</p>
<ul data-start=3D"2870" data-end=3D"3019">
<li data-start=3D"2870" data-end=3D"2938" class=3D"">
<p data-start=3D"2872" data-end=3D"2938" class=3D""><code data-start=3D"287=
2" data-end=3D"2885">face_avg[t]</code> =3D average firing rate across face=
 trials at time <code data-start=3D"2935" data-end=3D"2938">t</code></p>
</li>
<li data-start=3D"2939" data-end=3D"2984" class=3D"">
<p data-start=3D"2941" data-end=3D"2984" class=3D""><code data-start=3D"294=
1" data-end=3D"2957">nonface_avg[t]</code> =3D same for non-face trials</p>
</li>
<li data-start=3D"2985" data-end=3D"3019" class=3D"">
<p data-start=3D"2987" data-end=3D"3019" class=3D""><code data-start=3D"298=
7" data-end=3D"2996">diff[t]</code> =3D difference over time</p>
</li>
</ul>
<hr data-start=3D"3021" data-end=3D"3024" class=3D"">
<h3 data-start=3D"3026" data-end=3D"3060" class=3D""><strong data-start=3D"=
3030" data-end=3D"3060">7. Identify crossing point</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3062" data-end=3D"3163"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>crossing_idx =3D np.where(diff &gt; threshold)[</sp=
an><span><span class=3D"hljs-number">0</span></span><span>][</span><span><s=
pan class=3D"hljs-number">0</span></span><span>]
crossing_time =3D time_axis[crossing_idx]
</span></span></code></div></div></pre>
<ul data-start=3D"3165" data-end=3D"3442">
<li data-start=3D"3165" data-end=3D"3306" class=3D"">
<p data-start=3D"3167" data-end=3D"3306" class=3D"">The script finds the <s=
trong data-start=3D"3188" data-end=3D"3208">first time point</strong> where=
 the response to faces exceeds non-faces by a given threshold (e.g., signif=
icant divergence)</p>
</li>
<li data-start=3D"3307" data-end=3D"3442" class=3D"">
<p data-start=3D"3309" data-end=3D"3442" class=3D"">That=E2=80=99s the <str=
ong data-start=3D"3320" data-end=3D"3340">=E2=80=9Ccrossing point=E2=80=9D<=
/strong>=E2=80=94interpreted as the time when category-specific information=
 becomes available in the neuron=E2=80=99s response</p>
</li>
</ul>
<hr data-start=3D"3444" data-end=3D"3447" class=3D"">
<h3 data-start=3D"3449" data-end=3D"3482" class=3D""><strong data-start=3D"=
3453" data-end=3D"3482">8. Store and plot results</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3484" data-end=3D"3600"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>results.append({
    </span><span><span class=3D"hljs-string">"session"</span></span><span>:=
 sess_name,
    </span><span><span class=3D"hljs-string">"unit"</span></span><span>: un=
it_idx,
    </span><span><span class=3D"hljs-string">"crossing_time"</span></span><=
span>: crossing_time
})
</span></span></code></div></div></pre>
<p data-start=3D"3602" data-end=3D"3612" class=3D"">And later:</p>
<pre class=3D"overflow-visible!" data-start=3D"3614" data-end=3D"3715"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>df =3D pd.DataFrame(results)
df.to_csv(</span><span><span class=3D"hljs-string">"output/crossing_point_a=
nalysis.csv"</span></span><span>, index=3D</span><span><span class=3D"hljs-=
literal">False</span></span><span>)
</span></span></code></div></div></pre>
<p data-start=3D"3717" data-end=3D"3824" class=3D"">Optionally, the script =
might plot <code data-start=3D"3751" data-end=3D"3761">face_avg</code>, <co=
de data-start=3D"3763" data-end=3D"3776">nonface_avg</code>, and mark the c=
rossing point for visualization.</p>
<hr data-start=3D"3826" data-end=3D"3829" class=3D"">
<h2 data-start=3D"3831" data-end=3D"3843" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"38=
45" data-end=3D"4142" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3845" data-end=3D"3868"><tr data-start=3D"3845" data-end=3D"=
3868"><th data-start=3D"3845" data-end=3D"3852" data-col-size=3D"sm">Step</=
th><th data-start=3D"3852" data-end=3D"3868" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"3893" data-end=3D"4142"><tr data-=
start=3D"3893" data-end=3D"3949"><td data-start=3D"3893" data-end=3D"3901" =
data-col-size=3D"sm">Group</td><td data-start=3D"3901" data-end=3D"3949" da=
ta-col-size=3D"md">Trials by image category (face vs. non-face)</td></tr><t=
r data-start=3D"3950" data-end=3D"3996"><td data-start=3D"3950" data-end=3D=
"3958" data-col-size=3D"sm">Align</td><td data-start=3D"3958" data-end=3D"3=
996" data-col-size=3D"md">Neural responses to fixation onset</td></tr><tr d=
ata-start=3D"3997" data-end=3D"4044"><td data-start=3D"3997" data-end=3D"40=
07" data-col-size=3D"sm">Compute</td><td data-start=3D"4007" data-end=3D"40=
44" data-col-size=3D"md">Average timecourses per condition</td></tr><tr dat=
a-start=3D"4045" data-end=3D"4100"><td data-start=3D"4045" data-end=3D"4052=
" data-col-size=3D"sm">Find</td><td data-start=3D"4052" data-end=3D"4100" d=
ata-col-size=3D"md">The earliest time they diverge significantly</td></tr><=
tr data-start=3D"4101" data-end=3D"4142"><td data-start=3D"4101" data-end=
=3D"4110" data-col-size=3D"sm">Output</td><td data-start=3D"4110" data-end=
=3D"4142" data-col-size=3D"md">A =E2=80=9Ccrossing time=E2=80=9D per neuron=
</td></tr></tbody></table><div class=3D"sticky end-(--thread-content-margin=
) h-0 self-end select-none"><div class=3D"absolute end-0 flex items-end" st=
yle=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button c=
lass=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-seco=
ndary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus=
-within)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opaci=
ty-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" x=
mlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20=
.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.=
6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9=
 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.4=
4772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4=
 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.447=
72 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></=
div></div></div></div>
<hr data-start=3D"4144" data-end=3D"4147" class=3D"">
<h2 data-start=3D"4149" data-end=3D"4171" class=3D"">=F0=9F=A7=A0 Why this =
matters</h2>
<p data-start=3D"4173" data-end=3D"4195" class=3D"">This lets you measure:<=
/p>
<ul data-start=3D"4196" data-end=3D"4414">
<li data-start=3D"4196" data-end=3D"4251" class=3D"">
<p data-start=3D"4198" data-end=3D"4251" class=3D""><strong data-start=3D"4=
198" data-end=3D"4209">Latency</strong> of neural selectivity for object ca=
tegory</p>
</li>
<li data-start=3D"4252" data-end=3D"4336" class=3D"">
<p data-start=3D"4254" data-end=3D"4336" class=3D"">Differences between neu=
rons or brain areas (e.g., does IT respond faster than V4?)</p>
</li>
<li data-start=3D"4337" data-end=3D"4414" class=3D"">
<p data-start=3D"4339" data-end=3D"4414" class=3D"">Whether some neurons en=
code object category <strong data-start=3D"4383" data-end=3D"4414">very qui=
ckly after fixation</strong></p>
</li>
</ul>
<hr data-start=3D"4416" data-end=3D"4419" class=3D"">
<p data-start=3D"4421" data-end=3D"4510" class=3D"">Want to visualize one n=
euron=E2=80=99s face vs. non-face timecourses and mark the crossing point?<=
/p></div></div></div></div></div></div></div></div></article><article class=
=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversatio=
n-turn-73" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5=
><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--sp=
acing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--threa=
d-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D=
"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40=
rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thre=
ad-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-m=
essages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/c=
onversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"relat=
ive flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><=
div data-message-author-role=3D"user" data-message-id=3D"46b6d132-a4bc-4a57=
-9bb9-ae097223fa0d" dir=3D"auto" class=3D"min-h-8 text-message relative fle=
x w-full flex-col items-end gap-2 text-start break-words whitespace-normal =
[.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:=
hidden items-end rtl:items-start"><div class=3D"relative max-w-[var(--user-=
chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div cla=
ss=3D"whitespace-pre-wrap">so its just trying to quanitfy the time that it =
takes for neurons to start firing?</div></div></div></div></div></div></div=
></div></div></article><article class=3D"text-token-text-primary w-full" di=
r=3D"auto" data-testid=3D"conversation-turn-74" data-scroll-anchor=3D"false=
"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto m=
x-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-conte=
nt-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px=
-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem=
] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-ma=
x-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-=
base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidd=
en" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-f=
ull min-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:g=
ap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author=
-role=3D"assistant" data-message-id=3D"b6990faa-353b-485a-9700-385e893f8fb0=
" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col =
items-end gap-2 text-start break-words whitespace-normal [.text-message+&am=
p;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex=
-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:p=
rose-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"97" cl=
ass=3D"">Close=E2=80=94<strong data-start=3D"6" data-end=3D"24">but not qui=
te!</strong> It's more specific than just "when neurons start firing." Let'=
s clarify:</p>
<hr data-start=3D"99" data-end=3D"102" class=3D"">
<h2 data-start=3D"104" data-end=3D"156" class=3D"">=F0=9F=A7=A0 What is the=
 crossing point <em data-start=3D"137" data-end=3D"145">really</em> measuri=
ng?</h2>
<p data-start=3D"158" data-end=3D"172" class=3D"">It=E2=80=99s not just:</p=
>
<blockquote data-start=3D"173" data-end=3D"209">
<p data-start=3D"175" data-end=3D"209" class=3D"">=E2=80=9CWhen does a neur=
on start firing?=E2=80=9D</p>
</blockquote>
<p data-start=3D"211" data-end=3D"225" class=3D"">It=E2=80=99s actually:</p=
>
<blockquote data-start=3D"226" data-end=3D"347">
<p data-start=3D"228" data-end=3D"347" class=3D""><strong data-start=3D"228=
" data-end=3D"347">=E2=80=9CWhen does a neuron start to respond <em data-st=
art=3D"267" data-end=3D"280">differently</em> depending on what it's lookin=
g at (e.g., a face vs. an object)?=E2=80=9D</strong></p>
</blockquote>
<hr data-start=3D"349" data-end=3D"352" class=3D"">
<h3 data-start=3D"354" data-end=3D"384" class=3D"">=F0=9F=94=AC So what doe=
s that mean?</h3>
<ul data-start=3D"386" data-end=3D"680">
<li data-start=3D"386" data-end=3D"451" class=3D"">
<p data-start=3D"388" data-end=3D"451" class=3D"">Neurons are often <strong=
 data-start=3D"406" data-end=3D"424">already firing</strong> before the cro=
ssing point.</p>
</li>
<li data-start=3D"452" data-end=3D"549" class=3D"">
<p data-start=3D"454" data-end=3D"549" class=3D"">But early on (e.g. right =
after a saccade), they might respond <strong data-start=3D"516" data-end=3D=
"548">similarly across all stimuli</strong>.</p>
</li>
<li data-start=3D"550" data-end=3D"680" class=3D"">
<p data-start=3D"552" data-end=3D"680" class=3D"">The <strong data-start=3D=
"556" data-end=3D"574">crossing point</strong> is the <strong data-start=3D=
"582" data-end=3D"596">first time</strong> when there's a <strong data-star=
t=3D"612" data-end=3D"637">detectable difference</strong> between responses=
 to different categories.</p>
</li>
</ul>
<p data-start=3D"682" data-end=3D"697" class=3D"">So it reflects:</p>
<ul data-start=3D"698" data-end=3D"798">
<li data-start=3D"698" data-end=3D"745" class=3D"">
<p data-start=3D"700" data-end=3D"745" class=3D""><strong data-start=3D"700=
" data-end=3D"724">Onset of selectivity</strong>, not just raw firing</p>
</li>
<li data-start=3D"746" data-end=3D"798" class=3D"">
<p data-start=3D"748" data-end=3D"798" class=3D"">The <strong data-start=3D=
"752" data-end=3D"798">emergence of stimulus-specific information</strong><=
/p>
</li>
</ul>
<hr data-start=3D"800" data-end=3D"803" class=3D"">
<h2 data-start=3D"805" data-end=3D"819" class=3D"">=F0=9F=A7=AA Example:</h=
2>
<p data-start=3D"821" data-end=3D"871" class=3D"">Let=E2=80=99s say we reco=
rd a neuron while a monkey views:</p>
<ul data-start=3D"872" data-end=3D"901">
<li data-start=3D"872" data-end=3D"885" class=3D"">
<p data-start=3D"874" data-end=3D"885" class=3D"">Face images</p>
</li>
<li data-start=3D"886" data-end=3D"901" class=3D"">
<p data-start=3D"888" data-end=3D"901" class=3D"">Object images</p>
</li>
</ul>
<p data-start=3D"903" data-end=3D"992" class=3D"">We align its spike train =
to the moment the monkey fixates on the image (saccade landing).</p>
<p data-start=3D"994" data-end=3D"1036" class=3D"">If we average across tri=
als, we might see:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"10=
38" data-end=3D"1377" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1038" data-end=3D"1105"><tr data-start=3D"1038" data-end=3D"=
1105"><th data-start=3D"1038" data-end=3D"1064" data-col-size=3D"sm">Time f=
rom fixation (ms)</th><th data-start=3D"1064" data-end=3D"1083" data-col-si=
ze=3D"sm">Firing for Faces</th><th data-start=3D"1083" data-end=3D"1105" da=
ta-col-size=3D"sm">Firing for Objects</th></tr></thead><tbody data-start=3D=
"1174" data-end=3D"1377"><tr data-start=3D"1174" data-end=3D"1241"><td data=
-start=3D"1174" data-end=3D"1200" data-col-size=3D"sm">0=E2=80=9350 ms</td>=
<td data-start=3D"1200" data-end=3D"1219" data-col-size=3D"sm">5 Hz</td><td=
 data-start=3D"1219" data-end=3D"1241" data-col-size=3D"sm">5 Hz</td></tr><=
tr data-start=3D"1242" data-end=3D"1309"><td data-start=3D"1242" data-end=
=3D"1268" data-col-size=3D"sm">50=E2=80=93100 ms</td><td data-start=3D"1268=
" data-end=3D"1287" data-col-size=3D"sm">12 Hz</td><td data-start=3D"1287" =
data-end=3D"1309" data-col-size=3D"sm">6 Hz</td></tr><tr data-start=3D"1310=
" data-end=3D"1377"><td data-start=3D"1310" data-end=3D"1336" data-col-size=
=3D"sm">100=E2=80=93150 ms</td><td data-start=3D"1336" data-end=3D"1355" da=
ta-col-size=3D"sm">20 Hz</td><td data-start=3D"1355" data-end=3D"1377" data=
-col-size=3D"sm">8 Hz</td></tr></tbody></table><div class=3D"sticky end-(--=
thread-content-margin) h-0 self-end select-none"><div class=3D"absolute end=
-0 flex items-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=
=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary=
 text-token-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:n=
ot(:hover):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(=
:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 2=
4 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-h=
eavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315=
 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17=
H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315=
 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 1=
4.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C=
4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5=
523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></s=
vg></button></span></div></div></div></div>
<p data-start=3D"1379" data-end=3D"1523" class=3D"">The <strong data-start=
=3D"1383" data-end=3D"1401">crossing point</strong> would be somewhere in t=
hat <strong data-start=3D"1429" data-end=3D"1442">50=E2=80=93100 ms</strong=
> window=E2=80=94where the neuron begins to respond <strong data-start=3D"1=
485" data-end=3D"1500">differently</strong> to the two conditions.</p>
<hr data-start=3D"1525" data-end=3D"1528" class=3D"">
<h2 data-start=3D"1530" data-end=3D"1540" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"15=
42" data-end=3D"1869" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1542" data-end=3D"1589"><tr data-start=3D"1542" data-end=3D"=
1589"><th data-start=3D"1542" data-end=3D"1561" data-col-size=3D"sm">Not me=
asuring...</th><th data-start=3D"1561" data-end=3D"1589" data-col-size=3D"m=
d">But instead measuring...</th></tr></thead><tbody data-start=3D"1638" dat=
a-end=3D"1869"><tr data-start=3D"1638" data-end=3D"1757"><td data-start=3D"=
1638" data-end=3D"1668" data-col-size=3D"sm">When a neuron starts firing</t=
d><td data-start=3D"1668" data-end=3D"1757" data-col-size=3D"md">When it st=
arts <strong data-start=3D"1685" data-end=3D"1703">discriminating</strong> =
between stimulus categories (e.g., face vs. object)</td></tr><tr data-start=
=3D"1758" data-end=3D"1818"><td data-start=3D"1758" data-end=3D"1781" data-=
col-size=3D"sm">General excitability</td><td data-start=3D"1781" data-end=
=3D"1818" data-col-size=3D"md"><strong data-start=3D"1783" data-end=3D"1816=
">Category-selective activation</strong></td></tr><tr data-start=3D"1819" d=
ata-end=3D"1869"><td data-start=3D"1819" data-end=3D"1831" data-col-size=3D=
"sm">Any spike</td><td data-start=3D"1831" data-end=3D"1869" data-col-size=
=3D"md"><strong data-start=3D"1833" data-end=3D"1867">Information-bearing d=
ivergence</strong></td></tr></tbody></table><div class=3D"sticky end-(--thr=
ead-content-margin) h-0 self-end select-none"><div class=3D"absolute end-0 =
flex items-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D=
"closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary te=
xt-token-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(=
:hover):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(:fo=
cus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 2=
4" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heav=
y"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.=
34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17=
V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.=
34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5=
523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.4=
4772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523=
 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg>=
</button></span></div></div></div></div>
<hr data-start=3D"1871" data-end=3D"1874" class=3D"">
<p data-start=3D"1876" data-end=3D"1983" class=3D"">So it's about <strong d=
ata-start=3D"1890" data-end=3D"1956">when information about the stimulus em=
erges in the neural code</strong>, not just raw spike onset.</p>
<p data-start=3D"1985" data-end=3D"2056" class=3D"">Would you like help plo=
tting a visual example of crossing point curves?</p></div></div></div></div=
></div></div></div></div></article><article class=3D"text-token-text-primar=
y w-full" dir=3D"auto" data-testid=3D"conversation-turn-75" data-scroll-anc=
hor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base m=
y-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thre=
ad-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing=
(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-wid=
th:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-co=
ntent-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex=
-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outl=
ine-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative =
flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-=
3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author-ro=
le=3D"user" data-message-id=3D"117f0545-f7ea-42c6-8b4f-90e2fe3d6276" dir=3D=
"auto" class=3D"min-h-8 text-message relative flex w-full flex-col items-en=
d gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5=
"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items=
-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-=
message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap"=
>okay move to to 2u2</div></div></div></div></div></div></div></div></div><=
/article><article class=3D"text-token-text-primary w-full" dir=3D"auto" dat=
a-testid=3D"conversation-turn-76" data-scroll-anchor=3D"false"><h6 class=3D=
"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [-=
-thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--sp=
acing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-con=
tent-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--=
thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem]=
 mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:=
gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=
=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0 =
flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div c=
lass=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"ass=
istant" data-message-id=3D"6ba5781c-6f2c-4cd4-b661-c40c05de0bb2" dir=3D"aut=
o" class=3D"min-h-8 text-message relative flex w-full flex-col items-end ga=
p-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5" da=
ta-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 e=
mpty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert =
w-full break-words dark"><p data-start=3D"0" data-end=3D"30" class=3D"">Gre=
at! Let=E2=80=99s now walk through:</p>
<h2 data-start=3D"32" data-end=3D"61" class=3D"">=F0=9F=93=81 <code data-st=
art=3D"38" data-end=3D"61">script_2u2_t2hh.ipynb</code></h2>
<hr data-start=3D"63" data-end=3D"66" class=3D"">
<h2 data-start=3D"68" data-end=3D"92" class=3D"">=F0=9F=A7=A0 Title breakdo=
wn:</h2>
<p data-start=3D"93" data-end=3D"297" class=3D""><code data-start=3D"93" da=
ta-end=3D"99">t2hh</code> likely stands for something like <strong data-sta=
rt=3D"133" data-end=3D"158">"time to half-height"</strong> or <strong data-=
start=3D"162" data-end=3D"199">"time to half-height of response"</strong>, =
which is a common way to quantify <strong data-start=3D"235" data-end=3D"26=
1">response onset latency</strong> or <strong data-start=3D"265" data-end=
=3D"278">rise time</strong> in neural signals.</p>
<p data-start=3D"299" data-end=3D"338" class=3D"">So this script probably a=
ims to answer:</p>
<blockquote data-start=3D"340" data-end=3D"436">
<p data-start=3D"342" data-end=3D"436" class=3D"">=E2=80=9CHow long after f=
ixation does a neuron take to reach <strong data-start=3D"395" data-end=3D"=
403">half</strong> of its full response amplitude?=E2=80=9D</p>
</blockquote>
<p data-start=3D"438" data-end=3D"512" class=3D"">This is a precise, quanti=
tative way to define <strong data-start=3D"484" data-end=3D"511">neural res=
ponse latency</strong>.</p>
<hr data-start=3D"514" data-end=3D"517" class=3D"">
<h2 data-start=3D"519" data-end=3D"530" class=3D"">=F0=9F=8E=AF Goal:</h2>
<p data-start=3D"531" data-end=3D"657" class=3D"">To compute the <strong da=
ta-start=3D"546" data-end=3D"563">time it takes</strong> for a neuron=E2=80=
=99s response to rise to <strong data-start=3D"599" data-end=3D"618">50% of=
 its peak</strong>, after the monkey fixates on an image.</p>
<p data-start=3D"659" data-end=3D"757" class=3D"">This is a more <strong da=
ta-start=3D"674" data-end=3D"703">fine-grained, curve-based</strong> altern=
ative to the threshold-crossing point in <code data-start=3D"751" data-end=
=3D"756">2u1</code>.</p>
<hr data-start=3D"759" data-end=3D"762" class=3D"">
<h2 data-start=3D"764" data-end=3D"792" class=3D"">=F0=9F=94=8D Line-by-Lin=
e Breakdown</h2>
<hr data-start=3D"794" data-end=3D"797" class=3D"">
<h3 data-start=3D"799" data-end=3D"817" class=3D""><strong data-start=3D"80=
3" data-end=3D"817">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"819" data-end=3D"964"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span><span><span class=3D"hljs-keyword">import</span></span><span> matplo=
tlib.pyplot </span><span><span class=3D"hljs-keyword">as</span></span><span=
> plt
</span></span></code></div></div></pre>
<p data-start=3D"966" data-end=3D"1026" class=3D"">Standard libraries for d=
ata handling, loading, and plotting.</p>
<hr data-start=3D"1028" data-end=3D"1031" class=3D"">
<h3 data-start=3D"1033" data-end=3D"1061" class=3D""><strong data-start=3D"=
1037" data-end=3D"1061">2. Load session data</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1063" data-end=3D"1193"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(Path=
(</span><span><span class=3D"hljs-string">"intermediate"</span></span><span=
>) / </span><span><span class=3D"hljs-string">"shared_preprocessed_data_wit=
h_saccades.pkl"</span></span><span>, </span><span><span class=3D"hljs-strin=
g">"rb"</span></span><span>) </span><span><span class=3D"hljs-keyword">as</=
span></span><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<p data-start=3D"1195" data-end=3D"1206" class=3D"">This loads:</p>
<ul data-start=3D"1207" data-end=3D"1317">
<li data-start=3D"1207" data-end=3D"1244" class=3D"">
<p data-start=3D"1209" data-end=3D"1244" class=3D"">Spike density function =
(SDF) arrays</p>
</li>
<li data-start=3D"1245" data-end=3D"1276" class=3D"">
<p data-start=3D"1247" data-end=3D"1276" class=3D"">Trial metadata with fix=
ations</p>
</li>
<li data-start=3D"1277" data-end=3D"1317" class=3D"">
<p data-start=3D"1279" data-end=3D"1317" class=3D"">Likely same structure a=
s used in <code data-start=3D"1312" data-end=3D"1317">2u1</code></p>
</li>
</ul>
<hr data-start=3D"1319" data-end=3D"1322" class=3D"">
<h3 data-start=3D"1324" data-end=3D"1353" class=3D""><strong data-start=3D"=
1328" data-end=3D"1353">3. Loop over sessions</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1355" data-end=3D"1476"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> sess_name, sess_data </span><span><span class=3D"hljs-keyword">in</span><=
/span><span> tqdm(data.items()):
    sdf =3D sess_data[</span><span><span class=3D"hljs-string">"sdf"</span>=
</span><span>]
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]
</span></span></code></div></div></pre>
<p data-start=3D"1478" data-end=3D"1508" class=3D"">Basic session-level ite=
ration.</p>
<hr data-start=3D"1510" data-end=3D"1513" class=3D"">
<h3 data-start=3D"1515" data-end=3D"1570" class=3D""><strong data-start=3D"=
1519" data-end=3D"1570">4. Loop over units and extract response windows</st=
rong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1572" data-end=3D"1916"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> unit_idx </span><span><span class=3D"hljs-keyword">in</span></span><span>=
 </span><span><span class=3D"hljs-built_in">range</span></span><span>(sdf.s=
hape[</span><span><span class=3D"hljs-number">1</span></span><span>]):
    responses =3D []

    </span><span><span class=3D"hljs-keyword">for</span></span><span> trial=
_idx, trial </span><span><span class=3D"hljs-keyword">in</span></span><span=
> trials.iterrows():
        </span><span><span class=3D"hljs-keyword">if</span></span><span> </=
span><span><span class=3D"hljs-built_in">len</span></span><span>(trial[</sp=
an><span><span class=3D"hljs-string">"fix_onsets"</span></span><span>]) =3D=
=3D </span><span><span class=3D"hljs-number">0</span></span><span>:
            </span><span><span class=3D"hljs-keyword">continue</span></span=
><span>

        fix_onset =3D trial[</span><span><span class=3D"hljs-string">"fix_o=
nsets"</span></span><span>][</span><span><span class=3D"hljs-number">0</spa=
n></span><span>]
        response =3D sdf[trial_idx, unit_idx, fix_onset + t_start : fix_ons=
et + t_end]
        responses.append(response)
</span></span></code></div></div></pre>
<ul data-start=3D"1918" data-end=3D"2025">
<li data-start=3D"1918" data-end=3D"1987" class=3D"">
<p data-start=3D"1920" data-end=3D"1987" class=3D"">Collects post-fixation =
responses (aligned to <code data-start=3D"1965" data-end=3D"1976">fix_onset=
</code>) per trial</p>
</li>
<li data-start=3D"1988" data-end=3D"2025" class=3D"">
<p data-start=3D"1990" data-end=3D"2025" class=3D"">Stores each as a time s=
eries vector</p>
</li>
</ul>
<hr data-start=3D"2027" data-end=3D"2030" class=3D"">
<h3 data-start=3D"2032" data-end=3D"2064" class=3D""><strong data-start=3D"=
2036" data-end=3D"2064">5. Average across trials</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2066" data-end=3D"2121"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>avg_response =3D np.mean(responses, axis=3D</span><=
span><span class=3D"hljs-number">0</span></span><span>)
</span></span></code></div></div></pre>
<p data-start=3D"2123" data-end=3D"2204" class=3D"">This produces a <strong=
 data-start=3D"2139" data-end=3D"2173">trial-averaged neural response</stro=
ng> aligned to the first fixation.</p>
<hr data-start=3D"2206" data-end=3D"2209" class=3D"">
<h3 data-start=3D"2211" data-end=3D"2263" class=3D""><strong data-start=3D"=
2215" data-end=3D"2263">6. Normalize and compute time to half-height</stron=
g></h3>
<pre class=3D"overflow-visible!" data-start=3D"2265" data-end=3D"2419"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>peak =3D np.</span><span><span class=3D"hljs-built_=
in">max</span></span><span>(avg_response)
half_height =3D </span><span><span class=3D"hljs-number">0.5</span></span><=
span> * peak

t2hh_idx =3D np.where(avg_response &gt;=3D half_height)[</span><span><span =
class=3D"hljs-number">0</span></span><span>][</span><span><span class=3D"hl=
js-number">0</span></span><span>]
t2hh_time =3D time_axis[t2hh_idx]
</span></span></code></div></div></pre>
<ul data-start=3D"2421" data-end=3D"2610">
<li data-start=3D"2421" data-end=3D"2517" class=3D"">
<p data-start=3D"2423" data-end=3D"2517" class=3D"">The curve is <strong da=
ta-start=3D"2436" data-end=3D"2454">not normalized</strong>, but you comput=
e where it hits <strong data-start=3D"2486" data-end=3D"2517">50% of the pe=
ak firing rate</strong></p>
</li>
<li data-start=3D"2518" data-end=3D"2561" class=3D"">
<p data-start=3D"2520" data-end=3D"2561" class=3D"">That time point =3D <st=
rong data-start=3D"2538" data-end=3D"2561">time to half-height</strong></p>
</li>
<li data-start=3D"2562" data-end=3D"2610" class=3D"">
<p data-start=3D"2564" data-end=3D"2610" class=3D"">This is your <strong da=
ta-start=3D"2577" data-end=3D"2596">latency measure</strong> for that unit<=
/p>
</li>
</ul>
<hr data-start=3D"2612" data-end=3D"2615" class=3D"">
<h3 data-start=3D"2617" data-end=3D"2640" class=3D""><strong data-start=3D"=
2621" data-end=3D"2640">7. Store result</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2642" data-end=3D"2745"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>results.append({
    </span><span><span class=3D"hljs-string">"session"</span></span><span>:=
 sess_name,
    </span><span><span class=3D"hljs-string">"unit"</span></span><span>: un=
it_idx,
    </span><span><span class=3D"hljs-string">"t2hh"</span></span><span>: t2=
hh_time
})
</span></span></code></div></div></pre>
<p data-start=3D"2747" data-end=3D"2758" class=3D"">So you get:</p>
<ul data-start=3D"2759" data-end=3D"2853">
<li data-start=3D"2759" data-end=3D"2789" class=3D"">
<p data-start=3D"2761" data-end=3D"2789" class=3D"">One latency value per n=
euron</p>
</li>
<li data-start=3D"2790" data-end=3D"2853" class=3D"">
<p data-start=3D"2792" data-end=3D"2853" class=3D"">Based on when its avera=
ge response curve crosses <strong data-start=3D"2841" data-end=3D"2853">hal=
f-max</strong></p>
</li>
</ul>
<hr data-start=3D"2855" data-end=3D"2858" class=3D"">
<h3 data-start=3D"2860" data-end=3D"2888" class=3D""><strong data-start=3D"=
2864" data-end=3D"2888">8. Save final output</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2890" data-end=3D"2972"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>df =3D pd.DataFrame(results)
df.to_csv(</span><span><span class=3D"hljs-string">"output/t2hh.csv"</span>=
</span><span>, index=3D</span><span><span class=3D"hljs-literal">False</spa=
n></span><span>)
</span></span></code></div></div></pre>
<hr data-start=3D"2974" data-end=3D"2977" class=3D"">
<h2 data-start=3D"2979" data-end=3D"2991" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"29=
93" data-end=3D"3298" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2993" data-end=3D"3016"><tr data-start=3D"2993" data-end=3D"=
3016"><th data-start=3D"2993" data-end=3D"3000" data-col-size=3D"sm">Step</=
th><th data-start=3D"3000" data-end=3D"3016" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"3041" data-end=3D"3298"><tr data-=
start=3D"3041" data-end=3D"3098"><td data-start=3D"3041" data-end=3D"3051" =
data-col-size=3D"sm">Collect</td><td data-start=3D"3051" data-end=3D"3098" =
data-col-size=3D"md">Per-fixation, post-saccade neural responses</td></tr><=
tr data-start=3D"3099" data-end=3D"3142"><td data-start=3D"3099" data-end=
=3D"3109" data-col-size=3D"sm">Average</td><td data-start=3D"3109" data-end=
=3D"3142" data-col-size=3D"md">Across trials for each neuron</td></tr><tr d=
ata-start=3D"3143" data-end=3D"3205"><td data-start=3D"3143" data-end=3D"31=
53" data-col-size=3D"sm">Measure</td><td data-start=3D"3153" data-end=3D"32=
05" data-col-size=3D"md">Time it takes to reach 50% of peak (half-height)</=
td></tr><tr data-start=3D"3206" data-end=3D"3250"><td data-start=3D"3206" d=
ata-end=3D"3214" data-col-size=3D"sm">Store</td><td data-start=3D"3214" dat=
a-end=3D"3250" data-col-size=3D"md">One <strong data-start=3D"3220" data-en=
d=3D"3237">latency score</strong> per neuron</td></tr><tr data-start=3D"325=
1" data-end=3D"3298"><td data-start=3D"3251" data-end=3D"3258" data-col-siz=
e=3D"sm">Save</td><td data-start=3D"3258" data-end=3D"3298" data-col-size=
=3D"md">To CSV for further use/visualization</td></tr></tbody></table><div =
class=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"><di=
v class=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><spa=
n class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary hov=
er:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 trans=
ition-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-none g=
roup-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"even=
odd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 =
15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 2=
0.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 =
10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772=
 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 =
20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"=
currentColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"3300" data-end=3D"3303" class=3D"">
<h2 data-start=3D"3305" data-end=3D"3327" class=3D"">=F0=9F=A7=A0 Why this =
matters</h2>
<ul data-start=3D"3329" data-end=3D"3677">
<li data-start=3D"3329" data-end=3D"3400" class=3D"">
<p data-start=3D"3331" data-end=3D"3400" class=3D"">This is a <strong data-=
start=3D"3341" data-end=3D"3355">continuous</strong> and <strong data-start=
=3D"3360" data-end=3D"3370">stable</strong> estimate of response latency.</=
p>
</li>
<li data-start=3D"3401" data-end=3D"3485" class=3D"">
<p data-start=3D"3403" data-end=3D"3485" class=3D"">Compared to threshold c=
rossings (used in <code data-start=3D"3444" data-end=3D"3449">2u1</code>), =
<strong data-start=3D"3452" data-end=3D"3460">T2HH</strong> is more robust =
to noise.</p>
</li>
<li data-start=3D"3486" data-end=3D"3677" class=3D"">
<p data-start=3D"3488" data-end=3D"3525" class=3D"">It=E2=80=99s especially=
 useful for comparing:</p>
<ul data-start=3D"3528" data-end=3D"3677">
<li data-start=3D"3528" data-end=3D"3558" class=3D"">
<p data-start=3D"3530" data-end=3D"3558" class=3D"">Brain areas (e.g. V1 vs=
. IT)</p>
</li>
<li data-start=3D"3561" data-end=3D"3607" class=3D"">
<p data-start=3D"3563" data-end=3D"3607" class=3D"">Neuron types (e.g. fast=
 vs. slow responders)</p>
</li>
<li data-start=3D"3610" data-end=3D"3677" class=3D"">
<p data-start=3D"3612" data-end=3D"3677" class=3D"">Stimulus categories (e.=
g. do face images evoke faster responses?)</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"3679" data-end=3D"3682" class=3D"">
<p data-start=3D"3684" data-end=3D"3795" class=3D"">Would you like help plo=
tting some T2HH curves or comparing latency distributions across sessions o=
r categories?</p></div></div></div></div></div></div></div></div></article>=
<article class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=
=3D"conversation-turn-77" data-scroll-anchor=3D"false"><h5 class=3D"sr-only=
">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-cont=
ent-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[=
72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)=
"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-conte=
nt-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto fle=
x max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap=
-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div c=
lass=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><div=
 class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full f=
lex-col grow"><div data-message-author-role=3D"user" data-message-id=3D"202=
10d97-d0bc-4a3c-8152-07a51df3d18f" dir=3D"auto" class=3D"min-h-8 text-messa=
ge relative flex w-full flex-col items-end gap-2 text-start break-words whi=
tespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-c=
ol gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative max=
-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 p=
y-2.5"><div class=3D"whitespace-pre-wrap">what neurons are these looking at=
? can we discriminate between what part of the brain </div></div></div></di=
v></div></div></div></div></div></article><article class=3D"text-token-text=
-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-78" data-scr=
oll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"=
text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37r=
em]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margi=
n:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-cont=
ent-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[=
--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-=
width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-v=
isible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-tur=
n relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative =
flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div =
data-message-author-role=3D"assistant" data-message-id=3D"61a59aa6-c91a-411=
e-a234-925231f08feb" dir=3D"auto" class=3D"min-h-8 text-message relative fl=
ex w-full flex-col items-end gap-2 text-start break-words whitespace-normal=
 [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=
=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"m=
arkdown prose dark:prose-invert w-full break-words dark"><p data-start=3D"0=
" data-end=3D"71" class=3D"">Fantastic question=E2=80=94and very important =
when interpreting neural results.</p>
<p data-start=3D"73" data-end=3D"102" class=3D"">Let=E2=80=99s answer it in=
 two parts:</p>
<hr data-start=3D"104" data-end=3D"107" class=3D"">
<h2 data-start=3D"109" data-end=3D"171" class=3D"">=F0=9F=A7=A0 1. <strong =
data-start=3D"118" data-end=3D"171">What neurons are being analyzed in thes=
e scripts?</strong></h2>
<p data-start=3D"173" data-end=3D"314" class=3D"">These scripts (<code data=
-start=3D"188" data-end=3D"196">0a=E2=80=932u2</code>) are analyzing <stron=
g data-start=3D"212" data-end=3D"244">individual neurons ("units")</strong>=
 recorded from <strong data-start=3D"259" data-end=3D"284">macaque visual c=
ortex</strong> during a natural vision task.</p>
<p data-start=3D"316" data-end=3D"441" class=3D"">Based on the dataset and =
publication you=E2=80=99re working from (Livingstone lab, 2024), the record=
ings likely come from areas like:</p>
<ul data-start=3D"443" data-end=3D"517">
<li data-start=3D"443" data-end=3D"475" class=3D"">
<p data-start=3D"445" data-end=3D"475" class=3D""><strong data-start=3D"445=
" data-end=3D"451">V1</strong> (primary visual cortex)</p>
</li>
<li data-start=3D"476" data-end=3D"484" class=3D"">
<p data-start=3D"478" data-end=3D"484" class=3D""><strong data-start=3D"478=
" data-end=3D"484">V4</strong></p>
</li>
<li data-start=3D"485" data-end=3D"517" class=3D"">
<p data-start=3D"487" data-end=3D"517" class=3D""><strong data-start=3D"487=
" data-end=3D"493">IT</strong> (inferotemporal cortex)</p>
</li>
</ul>
<p data-start=3D"519" data-end=3D"631" class=3D"">These are all areas invol=
ved in <strong data-start=3D"551" data-end=3D"572">visual processing</stron=
g>, but they represent <strong data-start=3D"593" data-end=3D"613">differen=
t stages</strong> in the hierarchy:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"63=
3" data-end=3D"877" class=3D"w-fit min-w-(--thread-content-width)"><thead d=
ata-start=3D"633" data-end=3D"658"><tr data-start=3D"633" data-end=3D"658">=
<th data-start=3D"633" data-end=3D"646" data-col-size=3D"sm">Brain Area</th=
><th data-start=3D"646" data-end=3D"658" data-col-size=3D"md">Function</th>=
</tr></thead><tbody data-start=3D"685" data-end=3D"877"><tr data-start=3D"6=
85" data-end=3D"747"><td data-start=3D"685" data-end=3D"694" data-col-size=
=3D"sm"><strong data-start=3D"687" data-end=3D"693">V1</strong></td><td dat=
a-start=3D"694" data-end=3D"747" data-col-size=3D"md">Low-level features (e=
dges, contrast, orientation)</td></tr><tr data-start=3D"748" data-end=3D"80=
8"><td data-start=3D"748" data-end=3D"757" data-col-size=3D"sm"><strong dat=
a-start=3D"750" data-end=3D"756">V4</strong></td><td data-start=3D"757" dat=
a-end=3D"808" data-col-size=3D"md">Intermediate features (curvature, shape,=
 color)</td></tr><tr data-start=3D"809" data-end=3D"877"><td data-start=3D"=
809" data-end=3D"818" data-col-size=3D"sm"><strong data-start=3D"811" data-=
end=3D"817">IT</strong></td><td data-start=3D"818" data-end=3D"877" data-co=
l-size=3D"md">High-level object recognition (faces, scenes, identity)</td><=
/tr></tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 =
self-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D=
"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=
=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondar=
y my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-wit=
hin)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0=
"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"=
evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.656=
9 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569=
 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H1=
4C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772=
 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V=
19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 1=
4.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div>=
</div></div></div>
<p data-start=3D"879" data-end=3D"1020" class=3D"">So, yes=E2=80=94neurons =
in these analyses <strong data-start=3D"913" data-end=3D"955">come from dif=
ferent parts of the brain</strong>, and that distinction is critical for in=
terpreting results like:</p>
<ul data-start=3D"1021" data-end=3D"1084">
<li data-start=3D"1021" data-end=3D"1039" class=3D"">
<p data-start=3D"1023" data-end=3D"1039" class=3D"">Latency (<code data-sta=
rt=3D"1032" data-end=3D"1038">t2hh</code>)</p>
</li>
<li data-start=3D"1040" data-end=3D"1053" class=3D"">
<p data-start=3D"1042" data-end=3D"1053" class=3D"">Selectivity</p>
</li>
<li data-start=3D"1054" data-end=3D"1084" class=3D"">
<p data-start=3D"1056" data-end=3D"1084" class=3D"">Population correlation =
(RSC)</p>
</li>
</ul>
<hr data-start=3D"1086" data-end=3D"1089" class=3D"">
<h2 data-start=3D"1091" data-end=3D"1150" class=3D"">=F0=9F=94=8D 2. <stron=
g data-start=3D"1100" data-end=3D"1150">Can we tell which neuron came from =
which area?</strong></h2>
<p data-start=3D"1152" data-end=3D"1296" class=3D"">Yes=E2=80=94<strong dat=
a-start=3D"1156" data-end=3D"1175">usually you can</strong>, by accessing t=
he session metadata. The information is typically stored in the <code data-=
start=3D"1255" data-end=3D"1266">unit_info</code> field of each session=E2=
=80=99s data:</p>
<pre class=3D"overflow-visible!" data-start=3D"1298" data-end=3D"1334"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>sess_data[</span><span><span class=3D"hljs-string">=
"unit_info"</span></span><span>]
</span></span></code></div></div></pre>
<p data-start=3D"1336" data-end=3D"1398" class=3D"">This is often a list or=
 DataFrame that includes for each unit:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"14=
00" data-end=3D"1614" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1400" data-end=3D"1442"><tr data-start=3D"1400" data-end=3D"=
1442"><th data-start=3D"1400" data-end=3D"1411" data-col-size=3D"sm">unit_i=
dx</th><th data-start=3D"1411" data-end=3D"1418" data-col-size=3D"sm">area<=
/th><th data-start=3D"1418" data-end=3D"1428" data-col-size=3D"sm">channel<=
/th><th data-start=3D"1428" data-end=3D"1442" data-col-size=3D"sm">hemisphe=
re</th></tr></thead><tbody data-start=3D"1486" data-end=3D"1614"><tr data-s=
tart=3D"1486" data-end=3D"1528"><td data-start=3D"1486" data-end=3D"1497" d=
ata-col-size=3D"sm">0</td><td data-start=3D"1497" data-end=3D"1504" data-co=
l-size=3D"sm">IT</td><td data-start=3D"1504" data-end=3D"1514" data-col-siz=
e=3D"sm">5</td><td data-start=3D"1514" data-end=3D"1528" data-col-size=3D"s=
m">Left</td></tr><tr data-start=3D"1529" data-end=3D"1571"><td data-start=
=3D"1529" data-end=3D"1540" data-col-size=3D"sm">1</td><td data-start=3D"15=
40" data-end=3D"1547" data-col-size=3D"sm">V4</td><td data-start=3D"1547" d=
ata-end=3D"1557" data-col-size=3D"sm">6</td><td data-start=3D"1557" data-en=
d=3D"1571" data-col-size=3D"sm">Right</td></tr><tr data-start=3D"1572" data=
-end=3D"1614"><td data-start=3D"1572" data-end=3D"1583" data-col-size=3D"sm=
">...</td><td data-start=3D"1583" data-end=3D"1590" data-col-size=3D"sm">..=
.</td><td data-start=3D"1590" data-end=3D"1600" data-col-size=3D"sm">...</t=
d><td data-start=3D"1600" data-end=3D"1614" data-col-size=3D"sm">...</td></=
tr></tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 s=
elf-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D"=
height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D=
"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary m=
y-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within=
)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><=
svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D=
"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"eve=
nodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2=
 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22=
 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C1=
5.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19=
.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C=
4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5=
523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></d=
iv></div></div>
<p data-start=3D"1616" data-end=3D"1629" class=3D"">To access it:</p>
<pre class=3D"overflow-visible!" data-start=3D"1631" data-end=3D"1743"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>unit_info =3D sess_data.get(</span><span><span clas=
s=3D"hljs-string">"unit_info"</span></span><span>, </span><span><span class=
=3D"hljs-literal">None</span></span><span>)
</span><span><span class=3D"hljs-keyword">if</span></span><span> unit_info =
</span><span><span class=3D"hljs-keyword">is</span></span><span> </span><sp=
an><span class=3D"hljs-keyword">not</span></span><span> </span><span><span =
class=3D"hljs-literal">None</span></span><span>:
    </span><span><span class=3D"hljs-built_in">print</span></span><span>(un=
it_info.head())
</span></span></code></div></div></pre>
<p data-start=3D"1745" data-end=3D"1765" class=3D"">You can use this to:</p=
>
<ul data-start=3D"1766" data-end=3D"1910">
<li data-start=3D"1766" data-end=3D"1812" class=3D"">
<p data-start=3D"1768" data-end=3D"1812" class=3D"">Subset your analyses (e=
.g., only IT neurons)</p>
</li>
<li data-start=3D"1813" data-end=3D"1887" class=3D"">
<p data-start=3D"1815" data-end=3D"1887" class=3D"">Compare results across =
areas (e.g., does IT show faster <code data-start=3D"1871" data-end=3D"1877=
">t2hh</code> than V4?)</p>
</li>
<li data-start=3D"1888" data-end=3D"1910" class=3D"">
<p data-start=3D"1890" data-end=3D"1910" class=3D"">Plot by brain region</p=
>
</li>
</ul>
<hr data-start=3D"1912" data-end=3D"1915" class=3D"">
<h2 data-start=3D"1917" data-end=3D"1927" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"19=
29" data-end=3D"2245" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1929" data-end=3D"1950"><tr data-start=3D"1929" data-end=3D"=
1950"><th data-start=3D"1929" data-end=3D"1940" data-col-size=3D"sm">Questi=
on</th><th data-start=3D"1940" data-end=3D"1950" data-col-size=3D"md">Answe=
r</th></tr></thead><tbody data-start=3D"1972" data-end=3D"2245"><tr data-st=
art=3D"1972" data-end=3D"2056"><td data-start=3D"1972" data-end=3D"1998" da=
ta-col-size=3D"sm">What neurons are these?</td><td data-start=3D"1998" data=
-end=3D"2056" data-col-size=3D"md">Units recorded from macaque visual corte=
x (V1, V4, IT)</td></tr><tr data-start=3D"2057" data-end=3D"2138"><td data-=
start=3D"2057" data-end=3D"2089" data-col-size=3D"sm">Can we tell which bra=
in area?</td><td data-start=3D"2089" data-end=3D"2138" data-col-size=3D"md"=
>=E2=9C=85 Yes=E2=80=94check <code data-start=3D"2103" data-end=3D"2122">un=
it_info['area']</code> for each unit</td></tr><tr data-start=3D"2139" data-=
end=3D"2245"><td data-start=3D"2139" data-end=3D"2161" data-col-size=3D"sm"=
>Why does it matter?</td><td data-start=3D"2161" data-end=3D"2245" data-col=
-size=3D"md">Different areas support different stages of visual processing =
(low =E2=86=92 high level)</td></tr></tbody></table><div class=3D"sticky en=
d-(--thread-content-margin) h-0 self-end select-none"><div class=3D"absolut=
e end-0 flex items-end" style=3D"height: 32.8906px;"><span class=3D"" data-=
state=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-ter=
tiary text-token-text-secondary my-1 rounded-sm p-1 transition-opacity grou=
p-[:not(:hover):not(:focus-within)]:pointer-events-none group-[:not(:hover)=
:not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"=
0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon=
-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.=
34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 =
19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.=
34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15=
 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7Z=
M5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15=
 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></pat=
h></svg></button></span></div></div></div></div>
<hr data-start=3D"2247" data-end=3D"2250" class=3D"">
<p data-start=3D"2252" data-end=3D"2368" class=3D"">Would you like help wri=
ting a snippet to compute <code data-start=3D"2301" data-end=3D"2307">t2hh<=
/code> <strong data-start=3D"2308" data-end=3D"2325">by brain area</strong>=
 or to compare selectivity across V1/V4/IT?</p></div></div></div></div></di=
v></div></div></div></article><article class=3D"text-token-text-primary w-f=
ull" dir=3D"auto" data-testid=3D"conversation-turn-79" data-scroll-anchor=
=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-a=
uto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-=
content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16=
)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:=
32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-conte=
nt-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 =
text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline=
-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative fle=
x w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3">=
<div class=3D"flex max-w-full flex-col grow"><div data-message-author-role=
=3D"user" data-message-id=3D"a06cf2a3-a4f6-40d4-840c-6b4ee118474a" dir=3D"a=
uto" class=3D"min-h-8 text-message relative flex w-full flex-col items-end =
gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5">=
<div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-s=
tart"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-me=
ssage-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">c=
ould you go through 3a</div></div></div></div></div></div></div></div></div=
></article><article class=3D"text-token-text-primary w-full" dir=3D"auto" d=
ata-testid=3D"conversation-turn-80" data-scroll-anchor=3D"false"><h6 class=
=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5=
 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:-=
-spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-=
content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:=
[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48r=
em] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 =
md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabinde=
x=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0=
 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div =
class=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"as=
sistant" data-message-id=3D"1c39bf7a-93e3-49dc-8df3-e78947f7140a" dir=3D"au=
to" class=3D"min-h-8 text-message relative flex w-full flex-col items-end g=
ap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5" d=
ata-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 =
empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert=
 w-full break-words dark"><p data-start=3D"0" data-end=3D"31" class=3D"">Ab=
solutely! Let=E2=80=99s walk through:</p>
<h2 data-start=3D"33" data-end=3D"71" class=3D"">=F0=9F=93=81 <code data-st=
art=3D"39" data-end=3D"71">script_3a_trial_level_sc.ipynb</code></h2>
<hr data-start=3D"73" data-end=3D"76" class=3D"">
<h2 data-start=3D"78" data-end=3D"103" class=3D"">=F0=9F=8E=AF Goal of the =
Script:</h2>
<p data-start=3D"105" data-end=3D"227" class=3D"">This script computes <str=
ong data-start=3D"126" data-end=3D"158">trial-level self-consistency</stron=
g> (SC) of neural responses across fixations <strong data-start=3D"201" dat=
a-end=3D"226">within the same trial</strong>.</p>
<p data-start=3D"229" data-end=3D"370" class=3D"">In contrast to previous s=
cripts that averaged across trials or focused on per-image consistency (e.g=
., <code data-start=3D"332" data-end=3D"336">2a</code>, <code data-start=3D=
"338" data-end=3D"342">2c</code>), this one zooms in to ask:</p>
<blockquote data-start=3D"372" data-end=3D"508">
<p data-start=3D"374" data-end=3D"508" class=3D"">=E2=80=9CWithin a single =
trial (i.e. a single image viewing session), how consistent are a neuron's =
responses across the different fixations?=E2=80=9D</p>
</blockquote>
<p data-start=3D"510" data-end=3D"532" class=3D"">This lets you look at:</p=
>
<ul data-start=3D"533" data-end=3D"693">
<li data-start=3D"533" data-end=3D"597" class=3D"">
<p data-start=3D"535" data-end=3D"597" class=3D""><strong data-start=3D"535=
" data-end=3D"566">Short-timescale consistency</strong> within a stimulus p=
resentation</p>
</li>
<li data-start=3D"598" data-end=3D"693" class=3D"">
<p data-start=3D"600" data-end=3D"693" class=3D"">Whether the same image ev=
okes <strong data-start=3D"630" data-end=3D"693">stable neural responses ev=
en as the monkey moves their eyes</strong></p>
</li>
</ul>
<hr data-start=3D"695" data-end=3D"698" class=3D"">
<h2 data-start=3D"700" data-end=3D"728" class=3D"">=F0=9F=94=8D Step-by-Ste=
p Breakdown</h2>
<hr data-start=3D"730" data-end=3D"733" class=3D"">
<h3 data-start=3D"735" data-end=3D"753" class=3D""><strong data-start=3D"73=
9" data-end=3D"753">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"755" data-end=3D"868"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"870" data-end=3D"886" class=3D"">Same core setup.</p>
<hr data-start=3D"888" data-end=3D"891" class=3D"">
<h3 data-start=3D"893" data-end=3D"926" class=3D""><strong data-start=3D"89=
7" data-end=3D"926">2. Load preprocessed data</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"928" data-end=3D"1058"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(Path=
(</span><span><span class=3D"hljs-string">"intermediate"</span></span><span=
>) / </span><span><span class=3D"hljs-string">"shared_preprocessed_data_wit=
h_saccades.pkl"</span></span><span>, </span><span><span class=3D"hljs-strin=
g">"rb"</span></span><span>) </span><span><span class=3D"hljs-keyword">as</=
span></span><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<p data-start=3D"1060" data-end=3D"1095" class=3D"">Same structure as previ=
ous scripts:</p>
<ul data-start=3D"1096" data-end=3D"1220">
<li data-start=3D"1096" data-end=3D"1151" class=3D"">
<p data-start=3D"1098" data-end=3D"1151" class=3D""><code data-start=3D"109=
8" data-end=3D"1103">sdf</code>: spike density function (trials =C3=97 unit=
s =C3=97 time)</p>
</li>
<li data-start=3D"1152" data-end=3D"1187" class=3D"">
<p data-start=3D"1154" data-end=3D"1187" class=3D""><code data-start=3D"115=
4" data-end=3D"1162">trials</code>: includes fixation times</p>
</li>
<li data-start=3D"1188" data-end=3D"1220" class=3D"">
<p data-start=3D"1190" data-end=3D"1220" class=3D""><code data-start=3D"119=
0" data-end=3D"1201">unit_info</code>: optional metadata</p>
</li>
</ul>
<hr data-start=3D"1222" data-end=3D"1225" class=3D"">
<h3 data-start=3D"1227" data-end=3D"1266" class=3D""><strong data-start=3D"=
1231" data-end=3D"1266">3. Initialize results container</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1268" data-end=3D"1298"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>all_results =3D []
</span></span></code></div></div></pre>
<p data-start=3D"1300" data-end=3D"1372" class=3D"">Each entry will be a se=
lf-consistency score for one neuron in one trial.</p>
<hr data-start=3D"1374" data-end=3D"1377" class=3D"">
<h3 data-start=3D"1379" data-end=3D"1421" class=3D""><strong data-start=3D"=
1383" data-end=3D"1421">4. Loop through sessions and units</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1423" data-end=3D"1544"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> sess_name, sess_data </span><span><span class=3D"hljs-keyword">in</span><=
/span><span> tqdm(data.items()):
    sdf =3D sess_data[</span><span><span class=3D"hljs-string">"sdf"</span>=
</span><span>]
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]
</span></span></code></div></div></pre>
<p data-start=3D"1546" data-end=3D"1596" class=3D"">You=E2=80=99ll compute =
scores <strong data-start=3D"1568" data-end=3D"1590">per unit per trial</st=
rong> here.</p>
<hr data-start=3D"1598" data-end=3D"1601" class=3D"">
<h3 data-start=3D"1603" data-end=3D"1643" class=3D""><strong data-start=3D"=
1607" data-end=3D"1643">5. Loop through units and trials</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1645" data-end=3D"1837"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> unit_idx </span><span><span class=3D"hljs-keyword">in</span></span><span>=
 </span><span><span class=3D"hljs-built_in">range</span></span><span>(sdf.s=
hape[</span><span><span class=3D"hljs-number">1</span></span><span>]):
    </span><span><span class=3D"hljs-keyword">for</span></span><span> trial=
_idx, trial </span><span><span class=3D"hljs-keyword">in</span></span><span=
> trials.iterrows():
        fix_onsets =3D trial[</span><span><span class=3D"hljs-string">"fix_=
onsets"</span></span><span>]

        </span><span><span class=3D"hljs-keyword">if</span></span><span> </=
span><span><span class=3D"hljs-built_in">len</span></span><span>(fix_onsets=
) &lt; </span><span><span class=3D"hljs-number">2</span></span><span>:
            </span><span><span class=3D"hljs-keyword">continue</span></span=
><span>
</span></span></code></div></div></pre>
<p data-start=3D"1839" data-end=3D"1948" class=3D"">We only compute self-co=
nsistency if there are <strong data-start=3D"1885" data-end=3D"1907">multip=
le fixations</strong> in the trial (can=E2=80=99t correlate just one).</p>
<hr data-start=3D"1950" data-end=3D"1953" class=3D"">
<h3 data-start=3D"1955" data-end=3D"1992" class=3D""><strong data-start=3D"=
1959" data-end=3D"1992">6. Extract fixation responses</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1994" data-end=3D"2186"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>responses =3D []

</span><span><span class=3D"hljs-keyword">for</span></span><span> onset </s=
pan><span><span class=3D"hljs-keyword">in</span></span><span> fix_onsets:
    window =3D sdf[trial_idx, unit_idx, onset + t_start : onset + t_end]
    responses.append(window.mean())  </span><span><span class=3D"hljs-comme=
nt"># or sum, depending on metric</span></span><span>
</span></span></code></div></div></pre>
<ul data-start=3D"2188" data-end=3D"2308">
<li data-start=3D"2188" data-end=3D"2252" class=3D"">
<p data-start=3D"2190" data-end=3D"2252" class=3D"">For each fixation in th=
e trial, extract a <strong data-start=3D"2232" data-end=3D"2252">summary re=
sponse</strong></p>
</li>
<li data-start=3D"2253" data-end=3D"2308" class=3D"">
<p data-start=3D"2255" data-end=3D"2308" class=3D"">Usually just the mean f=
iring rate over a short window</p>
</li>
</ul>
<p data-start=3D"2310" data-end=3D"2387" class=3D"">So now you have one sca=
lar response per fixation, for a given unit and trial.</p>
<hr data-start=3D"2389" data-end=3D"2392" class=3D"">
<h3 data-start=3D"2394" data-end=3D"2433" class=3D""><strong data-start=3D"=
2398" data-end=3D"2433">7. Compute pairwise consistency</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2435" data-end=3D"2558"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">if</span></span><span>=
 </span><span><span class=3D"hljs-built_in">len</span></span><span>(respons=
es) &gt;=3D </span><span><span class=3D"hljs-number">2</span></span><span>:
    score =3D np.corrcoef(responses)[</span><span><span class=3D"hljs-numbe=
r">0</span></span><span>, </span><span><span class=3D"hljs-number">1</span>=
</span><span>]  </span><span><span class=3D"hljs-comment"># or use np.std()=
, variance explained, etc.</span></span><span>
</span></span></code></div></div></pre>
<ul data-start=3D"2560" data-end=3D"2761">
<li data-start=3D"2560" data-end=3D"2664" class=3D"">
<p data-start=3D"2562" data-end=3D"2664" class=3D"">If you have multiple fi=
xation responses, you compute their correlation (or another consistency met=
ric)</p>
</li>
<li data-start=3D"2665" data-end=3D"2761" class=3D"">
<p data-start=3D"2667" data-end=3D"2761" class=3D"">This tells you how stab=
le the neuron's response is <strong data-start=3D"2718" data-end=3D"2761">a=
cross fixations in that specific trial</strong></p>
</li>
</ul>
<hr data-start=3D"2763" data-end=3D"2766" class=3D"">
<h3 data-start=3D"2768" data-end=3D"2791" class=3D""><strong data-start=3D"=
2772" data-end=3D"2791">8. Store result</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2793" data-end=3D"2924"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>all_results.append({
    </span><span><span class=3D"hljs-string">"session"</span></span><span>:=
 sess_name,
    </span><span><span class=3D"hljs-string">"unit"</span></span><span>: un=
it_idx,
    </span><span><span class=3D"hljs-string">"trial"</span></span><span>: t=
rial_idx,
    </span><span><span class=3D"hljs-string">"trial_sc"</span></span><span>=
: score
})
</span></span></code></div></div></pre>
<p data-start=3D"2926" data-end=3D"3002" class=3D"">This gives a fine-grain=
ed dataframe: neuron =C3=97 trial self-consistency scores.</p>
<hr data-start=3D"3004" data-end=3D"3007" class=3D"">
<h3 data-start=3D"3009" data-end=3D"3031" class=3D""><strong data-start=3D"=
3013" data-end=3D"3031">9. Save output</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3033" data-end=3D"3143"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>df =3D pd.DataFrame(all_results)
df.to_csv(</span><span><span class=3D"hljs-string">"output/trial_level_self=
_consistency.csv"</span></span><span>, index=3D</span><span><span class=3D"=
hljs-literal">False</span></span><span>)
</span></span></code></div></div></pre>
<hr data-start=3D"3145" data-end=3D"3148" class=3D"">
<h2 data-start=3D"3150" data-end=3D"3162" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"31=
64" data-end=3D"3450" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3164" data-end=3D"3187"><tr data-start=3D"3164" data-end=3D"=
3187"><th data-start=3D"3164" data-end=3D"3171" data-col-size=3D"sm">Step</=
th><th data-start=3D"3171" data-end=3D"3187" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"3212" data-end=3D"3450"><tr data-=
start=3D"3212" data-end=3D"3256"><td data-start=3D"3212" data-end=3D"3219" =
data-col-size=3D"sm">Load</td><td data-start=3D"3219" data-end=3D"3256" dat=
a-col-size=3D"md">Preprocessed trial and spike data</td></tr><tr data-start=
=3D"3257" data-end=3D"3300"><td data-start=3D"3257" data-end=3D"3264" data-=
col-size=3D"sm">Loop</td><td data-start=3D"3264" data-end=3D"3300" data-col=
-size=3D"md">Through each unit and each trial</td></tr><tr data-start=3D"33=
01" data-end=3D"3351"><td data-start=3D"3301" data-end=3D"3311" data-col-si=
ze=3D"sm">Extract</td><td data-start=3D"3311" data-end=3D"3351" data-col-si=
ze=3D"md">Fixation-aligned responses per trial</td></tr><tr data-start=3D"3=
352" data-end=3D"3416"><td data-start=3D"3352" data-end=3D"3362" data-col-s=
ize=3D"sm">Compute</td><td data-start=3D"3362" data-end=3D"3416" data-col-s=
ize=3D"md">Response consistency across fixations in the trial</td></tr><tr =
data-start=3D"3417" data-end=3D"3450"><td data-start=3D"3417" data-end=3D"3=
424" data-col-size=3D"sm">Save</td><td data-start=3D"3424" data-end=3D"3450=
" data-col-size=3D"md">Score per unit =C3=97 trial</td></tr></tbody></table=
><div class=3D"sticky end-(--thread-content-margin) h-0 self-end select-non=
e"><div class=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;=
"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-prima=
ry hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1=
 transition-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-=
none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" h=
eight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D=
"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V1=
4C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 2=
2 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.3431=
5 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.=
44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 =
20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fil=
l=3D"currentColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"3452" data-end=3D"3455" class=3D"">
<h2 data-start=3D"3457" data-end=3D"3479" class=3D"">=F0=9F=A7=A0 Why this =
matters</h2>
<p data-start=3D"3481" data-end=3D"3496" class=3D"">This gives you:</p>
<ul data-start=3D"3497" data-end=3D"3724">
<li data-start=3D"3497" data-end=3D"3548" class=3D"">
<p data-start=3D"3499" data-end=3D"3548" class=3D"">A <strong data-start=3D=
"3501" data-end=3D"3524">within-trial metric</strong> of response reliabili=
ty</p>
</li>
<li data-start=3D"3549" data-end=3D"3645" class=3D"">
<p data-start=3D"3551" data-end=3D"3645" class=3D"">A way to track whether =
neurons are <strong data-start=3D"3586" data-end=3D"3611">adaptively respon=
ding</strong>, <strong data-start=3D"3613" data-end=3D"3626">fatiguing</str=
ong>, or staying stable</p>
</li>
<li data-start=3D"3646" data-end=3D"3724" class=3D"">
<p data-start=3D"3648" data-end=3D"3724" class=3D"">Granular data you can a=
lign with behavior, gaze position, or task engagement</p>
</li>
</ul>
<hr data-start=3D"3726" data-end=3D"3729" class=3D"">
<p data-start=3D"3731" data-end=3D"3835" class=3D"">Want to plot how trial-=
level self-consistency changes over time, or differs between neurons in IT =
vs V4?</p></div></div></div></div></div></div></div></div></article><articl=
e class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conv=
ersation-turn-81" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You sa=
id:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-marg=
in:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[=
--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div c=
lass=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-w=
idth:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-=
(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group=
/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"=
group/conversation-turn relative flex w-full min-w-0 flex-col"><div class=
=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-co=
l grow"><div data-message-author-role=3D"user" data-message-id=3D"50474b33-=
4fb6-46fc-8435-e5568218f39d" dir=3D"auto" class=3D"min-h-8 text-message rel=
ative flex w-full flex-col items-end gap-2 text-start break-words whitespac=
e-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap=
-1 empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[va=
r(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"=
><div class=3D"whitespace-pre-wrap">okay move to 3b</div></div></div></div>=
</div></div></div></div></div></article><article class=3D"text-token-text-p=
rimary w-full" dir=3D"auto" data-testid=3D"conversation-turn-82" data-scrol=
l-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"te=
xt-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem=
]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:=
--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-conten=
t-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--=
thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-wi=
dth) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-vis=
ible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn =
relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative fl=
ex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div da=
ta-message-author-role=3D"assistant" data-message-id=3D"c8db99a0-d696-4213-=
9d81-462a2bfad8ed" dir=3D"auto" class=3D"min-h-8 text-message relative flex=
 w-full flex-col items-end gap-2 text-start break-words whitespace-normal [=
.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D=
"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"mark=
down prose dark:prose-invert w-full break-words dark"><p data-start=3D"0" d=
ata-end=3D"30" class=3D"">Great! Let=E2=80=99s now walk through:</p>
<h2 data-start=3D"32" data-end=3D"72" class=3D"">=F0=9F=93=81 <code data-st=
art=3D"38" data-end=3D"72">script_3b_trial_level_psth.ipynb</code></h2>
<hr data-start=3D"74" data-end=3D"77" class=3D"">
<h2 data-start=3D"79" data-end=3D"104" class=3D"">=F0=9F=8E=AF Goal of the =
Script:</h2>
<p data-start=3D"106" data-end=3D"234" class=3D"">This script computes and =
plots <strong data-start=3D"137" data-end=3D"158">trial-level PSTHs</strong=
> =E2=80=94 <strong data-start=3D"161" data-end=3D"194">Peri-Stimulus Time =
Histograms</strong> =E2=80=94 for individual neurons across trials.</p>
<p data-start=3D"236" data-end=3D"392" class=3D"">Instead of just averaging=
 neural responses across all trials (like in earlier analyses), this script=
 keeps responses <strong data-start=3D"353" data-end=3D"375">separate per t=
rial</strong>, which lets you:</p>
<ul data-start=3D"393" data-end=3D"556">
<li data-start=3D"393" data-end=3D"450" class=3D"">
<p data-start=3D"395" data-end=3D"450" class=3D"">Visualize variability in =
neural dynamics trial-by-trial</p>
</li>
<li data-start=3D"451" data-end=3D"500" class=3D"">
<p data-start=3D"453" data-end=3D"500" class=3D"">Explore response reliabil=
ity, latency, or drift</p>
</li>
<li data-start=3D"501" data-end=3D"556" class=3D"">
<p data-start=3D"503" data-end=3D"556" class=3D"">Compare different trial t=
ypes (e.g., face vs. object)</p>
</li>
</ul>
<p data-start=3D"558" data-end=3D"667" class=3D"">This is especially useful=
 for inspecting <strong data-start=3D"599" data-end=3D"666">how individual =
neurons behave during single image presentations</strong>.</p>
<hr data-start=3D"669" data-end=3D"672" class=3D"">
<h2 data-start=3D"674" data-end=3D"702" class=3D"">=F0=9F=94=8D Step-by-Ste=
p Breakdown</h2>
<hr data-start=3D"704" data-end=3D"707" class=3D"">
<h3 data-start=3D"709" data-end=3D"727" class=3D""><strong data-start=3D"71=
3" data-end=3D"727">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"729" data-end=3D"874"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> matplo=
tlib.pyplot </span><span><span class=3D"hljs-keyword">as</span></span><span=
> plt
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"876" data-end=3D"905" class=3D"">Same standard analysis st=
ack.</p>
<hr data-start=3D"907" data-end=3D"910" class=3D"">
<h3 data-start=3D"912" data-end=3D"945" class=3D""><strong data-start=3D"91=
6" data-end=3D"945">2. Load preprocessed data</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"947" data-end=3D"1077"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(Path=
(</span><span><span class=3D"hljs-string">"intermediate"</span></span><span=
>) / </span><span><span class=3D"hljs-string">"shared_preprocessed_data_wit=
h_saccades.pkl"</span></span><span>, </span><span><span class=3D"hljs-strin=
g">"rb"</span></span><span>) </span><span><span class=3D"hljs-keyword">as</=
span></span><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<p data-start=3D"1079" data-end=3D"1096" class=3D"">Just like before:</p>
<ul data-start=3D"1097" data-end=3D"1260">
<li data-start=3D"1097" data-end=3D"1154" class=3D"">
<p data-start=3D"1099" data-end=3D"1154" class=3D""><code data-start=3D"109=
9" data-end=3D"1104">sdf</code> =3D spike density functions =E2=86=92 <code=
 data-start=3D"1133" data-end=3D"1154">[trial, unit, time]</code></p>
</li>
<li data-start=3D"1155" data-end=3D"1213" class=3D"">
<p data-start=3D"1157" data-end=3D"1213" class=3D""><code data-start=3D"115=
7" data-end=3D"1165">trials</code> =3D metadata (including <code data-start=
=3D"1188" data-end=3D"1198">image_id</code>, <code data-start=3D"1200" data=
-end=3D"1212">fix_onsets</code>)</p>
</li>
<li data-start=3D"1214" data-end=3D"1260" class=3D"">
<p data-start=3D"1216" data-end=3D"1260" class=3D"">Optional: <code data-st=
art=3D"1226" data-end=3D"1237">unit_info</code> for metadata like area</p>
</li>
</ul>
<hr data-start=3D"1262" data-end=3D"1265" class=3D"">
<h3 data-start=3D"1267" data-end=3D"1305" class=3D""><strong data-start=3D"=
1271" data-end=3D"1305">3. Select a session and neuron</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1307" data-end=3D"1380"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>sess_data =3D data[</span><span><span class=3D"hljs=
-string">"some_session_name"</span></span><span>]
unit_idx =3D some_index
</span></span></code></div></div></pre>
<p data-start=3D"1382" data-end=3D"1438" class=3D"">This script is usually =
exploratory/visual=E2=80=94so you select:</p>
<ul data-start=3D"1439" data-end=3D"1479">
<li data-start=3D"1439" data-end=3D"1459" class=3D"">
<p data-start=3D"1441" data-end=3D"1459" class=3D"">A specific session</p>
</li>
<li data-start=3D"1460" data-end=3D"1479" class=3D"">
<p data-start=3D"1462" data-end=3D"1479" class=3D"">A specific neuron</p>
</li>
</ul>
<p data-start=3D"1481" data-end=3D"1534" class=3D"">You might loop through =
several or manually try a few.</p>
<hr data-start=3D"1536" data-end=3D"1539" class=3D"">
<h3 data-start=3D"1541" data-end=3D"1580" class=3D""><strong data-start=3D"=
1545" data-end=3D"1580">4. Extract trial-wise responses</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1582" data-end=3D"1899"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>trials =3D sess_data[</span><span><span class=3D"hl=
js-string">"trials"</span></span><span>]
sdf =3D sess_data[</span><span><span class=3D"hljs-string">"sdf"</span></sp=
an><span>]

responses =3D []

</span><span><span class=3D"hljs-keyword">for</span></span><span> trial_idx=
, trial </span><span><span class=3D"hljs-keyword">in</span></span><span> tr=
ials.iterrows():
    </span><span><span class=3D"hljs-keyword">if</span></span><span> </span=
><span><span class=3D"hljs-built_in">len</span></span><span>(trial[</span><=
span><span class=3D"hljs-string">"fix_onsets"</span></span><span>]) =3D=3D =
</span><span><span class=3D"hljs-number">0</span></span><span>:
        </span><span><span class=3D"hljs-keyword">continue</span></span><sp=
an>
   =20
    fix0 =3D trial[</span><span><span class=3D"hljs-string">"fix_onsets"</s=
pan></span><span>][</span><span><span class=3D"hljs-number">0</span></span>=
<span>]
    window =3D sdf[trial_idx, unit_idx, fix0 + t_start : fix0 + t_end]
    responses.append(window)
</span></span></code></div></div></pre>
<ul data-start=3D"1901" data-end=3D"2012">
<li data-start=3D"1901" data-end=3D"1947" class=3D"">
<p data-start=3D"1903" data-end=3D"1947" class=3D"">Aligns spike responses =
to <strong data-start=3D"1929" data-end=3D"1947">first fixation</strong></p=
>
</li>
<li data-start=3D"1948" data-end=3D"2012" class=3D"">
<p data-start=3D"1950" data-end=3D"2012" class=3D"">For each trial, extract=
s a <strong data-start=3D"1977" data-end=3D"1999">time series vector</stron=
g> for the unit</p>
</li>
</ul>
<p data-start=3D"2014" data-end=3D"2081" class=3D"">So <code data-start=3D"=
2017" data-end=3D"2028">responses</code> ends up as a list of <code data-st=
art=3D"2050" data-end=3D"2058">[time]</code> arrays, one per trial.</p>
<hr data-start=3D"2083" data-end=3D"2086" class=3D"">
<h3 data-start=3D"2088" data-end=3D"2118" class=3D""><strong data-start=3D"=
2092" data-end=3D"2118">5. Stack and visualize</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2120" data-end=3D"2361"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>resp_mat =3D np.stack(responses)  </span><span><spa=
n class=3D"hljs-comment"># shape: [n_trials x time]</span></span><span>
plt.imshow(resp_mat, aspect=3D</span><span><span class=3D"hljs-string">'aut=
o'</span></span><span>, cmap=3D</span><span><span class=3D"hljs-string">'ho=
t'</span></span><span>)
plt.xlabel(</span><span><span class=3D"hljs-string">"Time (ms)"</span></spa=
n><span>)
plt.ylabel(</span><span><span class=3D"hljs-string">"Trial"</span></span><s=
pan>)
plt.title(</span><span><span class=3D"hljs-string">f"Neuron <span class=3D"=
hljs-subst">{unit_idx}</span></span></span><span> PSTHs")
plt.colorbar(label=3D</span><span><span class=3D"hljs-string">"Firing Rate =
(Hz)"</span></span><span>)
</span></span></code></div></div></pre>
<p data-start=3D"2363" data-end=3D"2382" class=3D"">This heatmap shows:</p>
<ul data-start=3D"2383" data-end=3D"2482">
<li data-start=3D"2383" data-end=3D"2409" class=3D"">
<p data-start=3D"2385" data-end=3D"2409" class=3D""><strong data-start=3D"2=
385" data-end=3D"2397">Each row</strong> =3D one trial</p>
</li>
<li data-start=3D"2410" data-end=3D"2455" class=3D"">
<p data-start=3D"2412" data-end=3D"2455" class=3D""><strong data-start=3D"2=
412" data-end=3D"2427">Each column</strong> =3D a time bin after fixation</=
p>
</li>
<li data-start=3D"2456" data-end=3D"2482" class=3D"">
<p data-start=3D"2458" data-end=3D"2482" class=3D"">Brightness =3D firing r=
ate</p>
</li>
</ul>
<p data-start=3D"2484" data-end=3D"2511" class=3D"">You get an instant view=
 of:</p>
<ul data-start=3D"2512" data-end=3D"2594">
<li data-start=3D"2512" data-end=3D"2540" class=3D"">
<p data-start=3D"2514" data-end=3D"2540" class=3D"">Trial-to-trial consiste=
ncy</p>
</li>
<li data-start=3D"2541" data-end=3D"2560" class=3D"">
<p data-start=3D"2543" data-end=3D"2560" class=3D"">Temporal dynamics</p>
</li>
<li data-start=3D"2561" data-end=3D"2594" class=3D"">
<p data-start=3D"2563" data-end=3D"2594" class=3D"">Outliers, drifts, or ad=
aptation</p>
</li>
</ul>
<hr data-start=3D"2596" data-end=3D"2599" class=3D"">
<h3 data-start=3D"2601" data-end=3D"2640" class=3D""><strong data-start=3D"=
2605" data-end=3D"2640">6. Optionally group by category</strong></h3>
<p data-start=3D"2642" data-end=3D"2700" class=3D"">If trials include categ=
ories like face/object, you can do:</p>
<pre class=3D"overflow-visible!" data-start=3D"2702" data-end=3D"2847"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>face_trials =3D trials[trials[</span><span><span cl=
ass=3D"hljs-string">"category"</span></span><span>].isin([</span><span><spa=
n class=3D"hljs-string">"human_face"</span></span><span>, </span><span><spa=
n class=3D"hljs-string">"monkey_face"</span></span><span>])]
object_trials =3D trials[trials[</span><span><span class=3D"hljs-string">"c=
ategory"</span></span><span>] =3D=3D </span><span><span class=3D"hljs-strin=
g">"object"</span></span><span>]
</span></span></code></div></div></pre>
<p data-start=3D"2849" data-end=3D"2891" class=3D"">Then plot PSTHs separat=
ely for each group.</p>
<hr data-start=3D"2893" data-end=3D"2896" class=3D"">
<h2 data-start=3D"2898" data-end=3D"2910" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"29=
12" data-end=3D"3113" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2912" data-end=3D"2935"><tr data-start=3D"2912" data-end=3D"=
2935"><th data-start=3D"2912" data-end=3D"2919" data-col-size=3D"sm">Step</=
th><th data-start=3D"2919" data-end=3D"2935" data-col-size=3D"sm">What it d=
oes</th></tr></thead><tbody data-start=3D"2960" data-end=3D"3113"><tr data-=
start=3D"2960" data-end=3D"2993"><td data-start=3D"2960" data-end=3D"2969" =
data-col-size=3D"sm">Select</td><td data-start=3D"2969" data-end=3D"2993" d=
ata-col-size=3D"sm">A session and neuron</td></tr><tr data-start=3D"2994" d=
ata-end=3D"3028"><td data-start=3D"2994" data-end=3D"3002" data-col-size=3D=
"sm">Align</td><td data-start=3D"3002" data-end=3D"3028" data-col-size=3D"s=
m">Spike data to fixation</td></tr><tr data-start=3D"3029" data-end=3D"3063=
"><td data-start=3D"3029" data-end=3D"3037" data-col-size=3D"sm">Stack</td>=
<td data-start=3D"3037" data-end=3D"3063" data-col-size=3D"sm">Trial-wise t=
ime series</td></tr><tr data-start=3D"3064" data-end=3D"3113"><td data-star=
t=3D"3064" data-end=3D"3071" data-col-size=3D"sm">Plot</td><td data-start=
=3D"3071" data-end=3D"3113" data-col-size=3D"sm">A heatmap of neural activi=
ty per trial</td></tr></tbody></table><div class=3D"sticky end-(--thread-co=
ntent-margin) h-0 self-end select-none"><div class=3D"absolute end-0 flex i=
tems-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"close=
d"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-tok=
en-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover=
):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-wi=
thin)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fil=
l=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><pa=
th fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 =
2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17=
 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 =
7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20=
 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9=
 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19=
V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></butt=
on></span></div></div></div></div>
<hr data-start=3D"3115" data-end=3D"3118" class=3D"">
<h2 data-start=3D"3120" data-end=3D"3142" class=3D"">=F0=9F=A7=A0 Why this =
matters</h2>
<p data-start=3D"3144" data-end=3D"3158" class=3D"">This lets you:</p>
<ul data-start=3D"3159" data-end=3D"3331">
<li data-start=3D"3159" data-end=3D"3207" class=3D"">
<p data-start=3D"3161" data-end=3D"3207" class=3D""><strong data-start=3D"3=
161" data-end=3D"3192">Diagnose neural variability</strong> in rich detail<=
/p>
</li>
<li data-start=3D"3208" data-end=3D"3268" class=3D"">
<p data-start=3D"3210" data-end=3D"3268" class=3D"">See how consistent (or =
not) a neuron is across repetitions</p>
</li>
<li data-start=3D"3269" data-end=3D"3331" class=3D"">
<p data-start=3D"3271" data-end=3D"3331" class=3D"">Visually link neural re=
sponse with behavior or stimulus type</p>
</li>
</ul>
<hr data-start=3D"3333" data-end=3D"3336" class=3D"">
<p data-start=3D"3338" data-end=3D"3437" class=3D"">Want help writing code =
to sort the trials by response strength or stimulus category in the heatmap=
?</p></div></div></div></div></div></div></div></div></article><article cla=
ss=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversat=
ion-turn-83" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</=
h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--=
spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thr=
ead-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"re=
lative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow=
"><div data-message-author-role=3D"user" data-message-id=3D"ad659bd6-9b87-4=
b5b-a5ba-e6c08d75a369" dir=3D"auto" class=3D"min-h-8 text-message relative =
flex w-full flex-col items-end gap-2 text-start break-words whitespace-norm=
al [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 emp=
ty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[var(--us=
er-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div =
class=3D"whitespace-pre-wrap">what about 3c</div></div></div></div></div></=
div></div></div></div></article><article class=3D"text-token-text-primary w=
-full" dir=3D"auto" data-testid=3D"conversation-turn-84" data-scroll-anchor=
=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base =
my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thr=
ead-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacin=
g(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-wi=
dth:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-c=
ontent-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) fle=
x-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:out=
line-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative=
 flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative flex-col g=
ap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><p class=3D"fir=
st:mt-0 my-1.5 h-8 flex items-center ltr:me-auto rtl:ms-auto empty:hidden t=
ext-token-text-secondary"></p><div data-message-author-role=3D"assistant" d=
ata-message-id=3D"39f22b73-fbc7-4936-b9d8-1592751b981d" dir=3D"auto" class=
=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 text=
-start break-words whitespace-normal [.text-message+&amp;]:mt-5" data-messa=
ge-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hid=
den first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full b=
reak-words dark"><p data-start=3D"0" data-end=3D"86" class=3D"">Looks like =
there=E2=80=99s no <code data-start=3D"22" data-end=3D"33">script_3c</code>=
 in your uploaded files=E2=80=94at least not under that name.</p>
<p data-start=3D"88" data-end=3D"102" class=3D"">You've shared:</p>
<ul data-start=3D"103" data-end=3D"178">
<li data-start=3D"103" data-end=3D"139" class=3D"">
<p data-start=3D"105" data-end=3D"139" class=3D"">=E2=9C=85 <code data-star=
t=3D"107" data-end=3D"139">script_3a_trial_level_sc.ipynb</code></p>
</li>
<li data-start=3D"140" data-end=3D"178" class=3D"">
<p data-start=3D"142" data-end=3D"178" class=3D"">=E2=9C=85 <code data-star=
t=3D"144" data-end=3D"178">script_3b_trial_level_psth.ipynb</code></p>
</li>
</ul>
<p data-start=3D"180" data-end=3D"206" class=3D"">=E2=80=A6but no file labe=
led <code data-start=3D"201" data-end=3D"205">3c</code>.</p>
<hr data-start=3D"208" data-end=3D"211" class=3D"">
<h3 data-start=3D"213" data-end=3D"236" class=3D"">=F0=9F=A7=AD What you ca=
n do:</h3>
<ul data-start=3D"237" data-end=3D"537">
<li data-start=3D"237" data-end=3D"365" class=3D"">
<p data-start=3D"239" data-end=3D"365" class=3D"">Double-check locally for =
a file named <code data-start=3D"277" data-end=3D"281">3c</code>, or someth=
ing with a similar name like <code data-start=3D"321" data-end=3D"342">tria=
l_level_summary</code>, <code data-start=3D"344" data-end=3D"359">temporal_=
corr</code>, etc.</p>
</li>
<li data-start=3D"366" data-end=3D"537" class=3D"">
<p data-start=3D"368" data-end=3D"537" class=3D"">Or, let me know what you =
expect <code data-start=3D"400" data-end=3D"404">3c</code> would analyze (e=
.g., trial-wise decoding, time generalization, drift), and I can help sketc=
h or reconstruct what it would likely do.</p>
</li>
</ul>
<p data-start=3D"539" data-end=3D"659" class=3D"">Would you like to move on=
 to the <code data-start=3D"572" data-end=3D"576">5x</code> scripts, like <=
code data-start=3D"591" data-end=3D"614">5a_vision_model.ipynb</code>, wher=
e deep learning is probably introduced?</p></div></div></div></div></div></=
div></div></div></article><article class=3D"text-token-text-primary w-full"=
 dir=3D"auto" data-testid=3D"conversation-turn-85" data-scroll-anchor=3D"fa=
lse"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx=
-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-conten=
t-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-=
(--thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem]=
 @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max=
-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-b=
ase gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidde=
n" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-fu=
ll min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div c=
lass=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"use=
r" data-message-id=3D"0420c311-e197-41e9-a323-ef1f7e28d5f4" dir=3D"auto" cl=
ass=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 t=
ext-start break-words whitespace-normal [.text-message+&amp;]:mt-5"><div cl=
ass=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><=
div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-s=
urface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">yes</div=
></div></div></div></div></div></div></div></div></article><article class=
=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversatio=
n-turn-86" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:=
</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:=
--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--t=
hread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div clas=
s=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-widt=
h:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--=
thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tu=
rn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"gro=
up/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div=
 class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full f=
lex-col grow"><div data-message-author-role=3D"assistant" data-message-id=
=3D"6356b5be-9b5f-49f9-aa45-45617064907f" dir=3D"auto" class=3D"min-h-8 tex=
t-message relative flex w-full flex-col items-end gap-2 text-start break-wo=
rds whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=
=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-=
[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-words da=
rk"><p data-start=3D"0" data-end=3D"30" class=3D"">Perfect! Let=E2=80=99s n=
ow go through:</p>
<h2 data-start=3D"32" data-end=3D"68" class=3D"">=F0=9F=93=81 <code data-st=
art=3D"38" data-end=3D"68">script_5a_vision_model.ipynb</code></h2>
<hr data-start=3D"70" data-end=3D"73" class=3D"">
<h2 data-start=3D"75" data-end=3D"104" class=3D"">=F0=9F=8E=AF <strong data=
-start=3D"81" data-end=3D"104">Goal of the Script:</strong></h2>
<p data-start=3D"105" data-end=3D"375" class=3D"">This is where deep learni=
ng finally enters the picture. This script uses a <strong data-start=3D"180=
" data-end=3D"220">pretrained deep neural network (DNN)</strong>=E2=80=94li=
kely a vision model like <strong data-start=3D"248" data-end=3D"258">ResNet=
</strong>, <strong data-start=3D"260" data-end=3D"271">AlexNet</strong>, or=
 <strong data-start=3D"276" data-end=3D"283">VGG</strong>=E2=80=94to extrac=
t <strong data-start=3D"295" data-end=3D"313">image features</strong>, whic=
h can then be compared to the monkey's neural responses.</p>
<p data-start=3D"377" data-end=3D"406" class=3D"">So the core question beco=
mes:</p>
<blockquote data-start=3D"408" data-end=3D"518">
<p data-start=3D"410" data-end=3D"518" class=3D"">=E2=80=9CDo the internal =
representations of a deep vision model align with how the brain represents =
visual stimuli?=E2=80=9D</p>
</blockquote>
<hr data-start=3D"520" data-end=3D"523" class=3D"">
<h2 data-start=3D"525" data-end=3D"557" class=3D"">=F0=9F=A7=A0 What this s=
cript is doing:</h2>
<ol data-start=3D"559" data-end=3D"893">
<li data-start=3D"559" data-end=3D"602" class=3D"">
<p data-start=3D"562" data-end=3D"602" class=3D"">Load the <strong data-sta=
rt=3D"571" data-end=3D"581">images</strong> shown to the monkey.</p>
</li>
<li data-start=3D"603" data-end=3D"671" class=3D"">
<p data-start=3D"606" data-end=3D"671" class=3D"">Pass them through a <stro=
ng data-start=3D"626" data-end=3D"653">pretrained vision model</strong> (li=
ke ResNet-50).</p>
</li>
<li data-start=3D"672" data-end=3D"747" class=3D"">
<p data-start=3D"675" data-end=3D"747" class=3D"">Extract <strong data-star=
t=3D"683" data-end=3D"702">feature vectors</strong> from intermediate layer=
s (e.g., conv3, fc6).</p>
</li>
<li data-start=3D"748" data-end=3D"893" class=3D"">
<p data-start=3D"751" data-end=3D"772" class=3D"">Use those vectors to:</p>
<ul data-start=3D"776" data-end=3D"893">
<li data-start=3D"776" data-end=3D"815" class=3D"">
<p data-start=3D"778" data-end=3D"815" class=3D"">Predict neural responses =
(regression)</p>
</li>
<li data-start=3D"819" data-end=3D"862" class=3D"">
<p data-start=3D"821" data-end=3D"862" class=3D"">Compare representational =
similarity (RSA)</p>
</li>
<li data-start=3D"866" data-end=3D"893" class=3D"">
<p data-start=3D"868" data-end=3D"893" class=3D"">Or test decoding accuracy=
</p>
</li>
</ul>
</li>
</ol>
<hr data-start=3D"895" data-end=3D"898" class=3D"">
<h2 data-start=3D"900" data-end=3D"928" class=3D"">=F0=9F=94=8D Line-by-Lin=
e Breakdown</h2>
<hr data-start=3D"930" data-end=3D"933" class=3D"">
<h3 data-start=3D"935" data-end=3D"953" class=3D""><strong data-start=3D"93=
9" data-end=3D"953">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"955" data-end=3D"1154"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> torch
</span><span><span class=3D"hljs-keyword">import</span></span><span> torchv=
ision.models </span><span><span class=3D"hljs-keyword">as</span></span><spa=
n> models
</span><span><span class=3D"hljs-keyword">import</span></span><span> torchv=
ision.transforms </span><span><span class=3D"hljs-keyword">as</span></span>=
<span> transforms
</span><span><span class=3D"hljs-keyword">from</span></span><span> PIL </sp=
an><span><span class=3D"hljs-keyword">import</span></span><span> Image
</span><span><span class=3D"hljs-keyword">import</span></span><span> numpy =
</span><span><span class=3D"hljs-keyword">as</span></span><span> np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> os
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"1156" data-end=3D"1197" class=3D"">This is your PyTorch + =
torchvision setup:</p>
<ul data-start=3D"1198" data-end=3D"1305">
<li data-start=3D"1198" data-end=3D"1224" class=3D"">
<p data-start=3D"1200" data-end=3D"1224" class=3D"">Loads a pretrained mode=
l</p>
</li>
<li data-start=3D"1225" data-end=3D"1254" class=3D"">
<p data-start=3D"1227" data-end=3D"1254" class=3D"">Handles image preproces=
sing</p>
</li>
<li data-start=3D"1255" data-end=3D"1305" class=3D"">
<p data-start=3D"1257" data-end=3D"1305" class=3D"">Extracts image features=
 using GPU (if available)</p>
</li>
</ul>
<hr data-start=3D"1307" data-end=3D"1310" class=3D"">
<h3 data-start=3D"1312" data-end=3D"1351" class=3D""><strong data-start=3D"=
1316" data-end=3D"1351">2. Load pretrained vision model</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1353" data-end=3D"1420"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>model =3D models.resnet50(pretrained=3D</span><span=
><span class=3D"hljs-literal">True</span></span><span>)
model.</span><span><span class=3D"hljs-built_in">eval</span></span><span>()
</span></span></code></div></div></pre>
<ul data-start=3D"1422" data-end=3D"1492">
<li data-start=3D"1422" data-end=3D"1464" class=3D"">
<p data-start=3D"1424" data-end=3D"1464" class=3D"">Loads <strong data-star=
t=3D"1430" data-end=3D"1443">ResNet-50</strong>, trained on ImageNet</p>
</li>
<li data-start=3D"1465" data-end=3D"1492" class=3D"">
<p data-start=3D"1467" data-end=3D"1492" class=3D"">Set to <strong data-sta=
rt=3D"1474" data-end=3D"1492">inference mode</strong></p>
</li>
</ul>
<p data-start=3D"1494" data-end=3D"1512" class=3D"">Often followed by:</p>
<pre class=3D"overflow-visible!" data-start=3D"1514" data-end=3D"1647"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>layer =3D model.layer4  </span><span><span class=3D=
"hljs-comment"># or some intermediate layer</span></span><span>
feature_extractor =3D torch.nn.Sequential(*</span><span><span class=3D"hljs=
-built_in">list</span></span><span>(model.children())[:N])
</span></span></code></div></div></pre>
<p data-start=3D"1649" data-end=3D"1742" class=3D"">This selects a specific=
 layer=E2=80=99s output to use as the <strong data-start=3D"1702" data-end=
=3D"1728">feature representation</strong> of the image.</p>
<hr data-start=3D"1744" data-end=3D"1747" class=3D"">
<h3 data-start=3D"1749" data-end=3D"1791" class=3D""><strong data-start=3D"=
1753" data-end=3D"1791">3. Define preprocessing transforms</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1793" data-end=3D"2009"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>transform =3D transforms.Compose([
    transforms.Resize((</span><span><span class=3D"hljs-number">224</span><=
/span><span>, </span><span><span class=3D"hljs-number">224</span></span><sp=
an>)),
    transforms.ToTensor(),
    transforms.Normalize(mean=3D[</span><span><span class=3D"hljs-number">0=
.485</span></span><span>, </span><span><span class=3D"hljs-number">0.456</s=
pan></span><span>, </span><span><span class=3D"hljs-number">0.406</span></s=
pan><span>],
                         std=3D[</span><span><span class=3D"hljs-number">0.=
229</span></span><span>, </span><span><span class=3D"hljs-number">0.224</sp=
an></span><span>, </span><span><span class=3D"hljs-number">0.225</span></sp=
an><span>])
])
</span></span></code></div></div></pre>
<p data-start=3D"2011" data-end=3D"2065" class=3D"">Standard normalization =
for ImageNet-pretrained models.</p>
<hr data-start=3D"2067" data-end=3D"2070" class=3D"">
<h3 data-start=3D"2072" data-end=3D"2103" class=3D""><strong data-start=3D"=
2076" data-end=3D"2103">4. Load stimulus images</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2105" data-end=3D"2189"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>stimuli_dir =3D </span><span><span class=3D"hljs-st=
ring">"stimuli/"</span></span><span>
image_files =3D </span><span><span class=3D"hljs-built_in">sorted</span></s=
pan><span>(os.listdir(stimuli_dir))
</span></span></code></div></div></pre>
<ul data-start=3D"2191" data-end=3D"2286">
<li data-start=3D"2191" data-end=3D"2232" class=3D"">
<p data-start=3D"2193" data-end=3D"2232" class=3D"">Loads all images used i=
n the experiment</p>
</li>
<li data-start=3D"2233" data-end=3D"2286" class=3D"">
<p data-start=3D"2235" data-end=3D"2286" class=3D"">Likely the same <code d=
ata-start=3D"2251" data-end=3D"2261">image_id</code>s from the trial metada=
ta</p>
</li>
</ul>
<hr data-start=3D"2288" data-end=3D"2291" class=3D"">
<h3 data-start=3D"2293" data-end=3D"2327" class=3D""><strong data-start=3D"=
2297" data-end=3D"2327">5. Extract feature vectors</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2329" data-end=3D"2628"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>features =3D []

</span><span><span class=3D"hljs-keyword">for</span></span><span> fname </s=
pan><span><span class=3D"hljs-keyword">in</span></span><span> tqdm(image_fi=
les):
    img =3D Image.</span><span><span class=3D"hljs-built_in">open</span></s=
pan><span>(os.path.join(stimuli_dir, fname)).convert(</span><span><span cla=
ss=3D"hljs-string">'RGB'</span></span><span>)
    x =3D transform(img).unsqueeze(</span><span><span class=3D"hljs-number"=
>0</span></span><span>)  </span><span><span class=3D"hljs-comment"># shape:=
 [1, 3, 224, 224]</span></span><span>
    </span><span><span class=3D"hljs-keyword">with</span></span><span> torc=
h.no_grad():
        feat =3D feature_extractor(x).flatten().numpy()
    features.append(feat)
</span></span></code></div></div></pre>
<p data-start=3D"2630" data-end=3D"2643" class=3D"">You now have:</p>
<ul data-start=3D"2644" data-end=3D"2770">
<li data-start=3D"2644" data-end=3D"2683" class=3D"">
<p data-start=3D"2646" data-end=3D"2683" class=3D"">One high-dimensional ve=
ctor per image</p>
</li>
<li data-start=3D"2684" data-end=3D"2736" class=3D"">
<p data-start=3D"2686" data-end=3D"2736" class=3D"">These vectors come from=
 a specific layer of ResNet</p>
</li>
<li data-start=3D"2737" data-end=3D"2770" class=3D"">
<p data-start=3D"2739" data-end=3D"2770" class=3D"">Shape: <code data-start=
=3D"2746" data-end=3D"2770">[n_images, n_features]</code></p>
</li>
</ul>
<hr data-start=3D"2772" data-end=3D"2775" class=3D"">
<h3 data-start=3D"2777" data-end=3D"2802" class=3D""><strong data-start=3D"=
2781" data-end=3D"2802">6. Save or export</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2804" data-end=3D"2909"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>features =3D np.stack(features)
np.save(</span><span><span class=3D"hljs-string">"intermediate/image_featur=
es_resnet50.npy"</span></span><span>, features)
</span></span></code></div></div></pre>
<p data-start=3D"2911" data-end=3D"2969" class=3D"">Now these features can =
be used downstream in scripts like:</p>
<ul data-start=3D"2970" data-end=3D"3121">
<li data-start=3D"2970" data-end=3D"3023" class=3D"">
<p data-start=3D"2972" data-end=3D"3023" class=3D""><code data-start=3D"297=
2" data-end=3D"2997">6a_model_perf_map.ipynb</code>: to predict neural firi=
ng</p>
</li>
<li data-start=3D"3024" data-end=3D"3121" class=3D"">
<p data-start=3D"3026" data-end=3D"3121" class=3D""><code data-start=3D"302=
6" data-end=3D"3050">6b_feat_corr_map.ipynb</code>: to compare feature simi=
larity with population-level neural similarity</p>
</li>
</ul>
<hr data-start=3D"3123" data-end=3D"3126" class=3D"">
<h2 data-start=3D"3128" data-end=3D"3140" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"31=
42" data-end=3D"3379" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3142" data-end=3D"3165"><tr data-start=3D"3142" data-end=3D"=
3165"><th data-start=3D"3142" data-end=3D"3149" data-col-size=3D"sm">Step</=
th><th data-start=3D"3149" data-end=3D"3165" data-col-size=3D"sm">What it d=
oes</th></tr></thead><tbody data-start=3D"3190" data-end=3D"3379"><tr data-=
start=3D"3190" data-end=3D"3240"><td data-start=3D"3190" data-end=3D"3197" =
data-col-size=3D"sm">Load</td><td data-start=3D"3197" data-end=3D"3240" dat=
a-col-size=3D"sm">Pretrained ResNet or other vision model</td></tr><tr data=
-start=3D"3241" data-end=3D"3279"><td data-start=3D"3241" data-end=3D"3253"=
 data-col-size=3D"sm">Transform</td><td data-start=3D"3253" data-end=3D"327=
9" data-col-size=3D"sm">Images shown to monkey</td></tr><tr data-start=3D"3=
280" data-end=3D"3327"><td data-start=3D"3280" data-end=3D"3290" data-col-s=
ize=3D"sm">Extract</td><td data-start=3D"3290" data-end=3D"3327" data-col-s=
ize=3D"sm">Feature vectors from chosen layer</td></tr><tr data-start=3D"332=
8" data-end=3D"3379"><td data-start=3D"3328" data-end=3D"3335" data-col-siz=
e=3D"sm">Save</td><td data-start=3D"3335" data-end=3D"3379" data-col-size=
=3D"sm">Features for use in modeling neural data</td></tr></tbody></table><=
div class=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"=
><div class=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;">=
<span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary=
 hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 t=
ransition-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-no=
ne group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" hei=
ght=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2=
000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"e=
venodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C=
22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 =
2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 =
17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44=
772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20=
 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=
=3D"currentColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"3381" data-end=3D"3384" class=3D"">
<h2 data-start=3D"3386" data-end=3D"3409" class=3D"">=F0=9F=A7=A0 Why this =
matters:</h2>
<p data-start=3D"3411" data-end=3D"3431" class=3D"">This enables you to:</p=
>
<ul data-start=3D"3432" data-end=3D"3666">
<li data-start=3D"3432" data-end=3D"3512" class=3D"">
<p data-start=3D"3434" data-end=3D"3512" class=3D"">Test how well DNN layer=
s mimic the <strong data-start=3D"3469" data-end=3D"3499">representational =
structure</strong> of the brain</p>
</li>
<li data-start=3D"3513" data-end=3D"3573" class=3D"">
<p data-start=3D"3515" data-end=3D"3573" class=3D"">Build encoding models (=
predict firing from image features)</p>
</li>
<li data-start=3D"3574" data-end=3D"3666" class=3D"">
<p data-start=3D"3576" data-end=3D"3666" class=3D"">Run RSA (representation=
al similarity analysis) between model features and neural responses</p>
</li>
</ul>
<hr data-start=3D"3668" data-end=3D"3671" class=3D"">
<p data-start=3D"3673" data-end=3D"3781" class=3D"">Want to move on to <cod=
e data-start=3D"3692" data-end=3D"3717">6a_model_perf_map.ipynb</code> next=
 to see how these features are used to model neural firing?</p></div></div>=
</div></div></div></div></div></div></article><article class=3D"text-token-=
text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-87" data=
-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"=
text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37r=
em]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margi=
n:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-cont=
ent-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[=
--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-=
width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-v=
isible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-tur=
n relative flex w-full min-w-0 flex-col"><div class=3D"relative flex-col ga=
p-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-messag=
e-author-role=3D"user" data-message-id=3D"86e8687c-f634-4f23-a61d-81ac54f90=
ac4" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-c=
ol items-end gap-2 text-start break-words whitespace-normal [.text-message+=
&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-en=
d rtl:items-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)=
] bg-token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespac=
e-pre-wrap">yes</div></div></div></div></div></div></div></div></div></arti=
cle><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-tes=
tid=3D"conversation-turn-88" data-scroll-anchor=3D"false"><h6 class=3D"sr-o=
nly">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thre=
ad-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing=
(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-=
margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--threa=
d-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-a=
uto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5=
 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"=
><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-co=
l agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D=
"flex max-w-full flex-col grow"><div data-message-author-role=3D"assistant"=
 data-message-id=3D"2d363f08-f973-48fe-98b3-1594933af614" dir=3D"auto" clas=
s=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 tex=
t-start break-words whitespace-normal [.text-message+&amp;]:mt-5" data-mess=
age-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hi=
dden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full =
break-words dark"><p data-start=3D"0" data-end=3D"27" class=3D"">Great! Let=
=E2=80=99s now dive into:</p>
<h2 data-start=3D"29" data-end=3D"67" class=3D"">=F0=9F=93=81 <code data-st=
art=3D"35" data-end=3D"67">script_6a_model_perf_map.ipynb</code></h2>
<hr data-start=3D"69" data-end=3D"72" class=3D"">
<h2 data-start=3D"74" data-end=3D"103" class=3D"">=F0=9F=8E=AF <strong data=
-start=3D"80" data-end=3D"103">Goal of the Script:</strong></h2>
<p data-start=3D"105" data-end=3D"304" class=3D"">This script uses the <str=
ong data-start=3D"126" data-end=3D"164">deep neural network (DNN) features<=
/strong> extracted in <code data-start=3D"178" data-end=3D"182">5a</code> t=
o <strong data-start=3D"186" data-end=3D"217">predict neural firing rates</=
strong> for each recorded unit, and evaluates <strong data-start=3D"256" da=
ta-end=3D"303">how well the model explains neural activity</strong>.</p>
<p data-start=3D"306" data-end=3D"348" class=3D"">In short, it builds an <s=
trong data-start=3D"329" data-end=3D"347">encoding model</strong>:</p>
<blockquote data-start=3D"350" data-end=3D"445">
<p data-start=3D"352" data-end=3D"445" class=3D"">=E2=80=9CGiven an image=
=E2=80=99s feature vector from ResNet, can I predict how strongly a neuron =
will fire?=E2=80=9D</p>
</blockquote>
<p data-start=3D"447" data-end=3D"631" class=3D"">This script computes <str=
ong data-start=3D"468" data-end=3D"496">model performance scores</strong> p=
er neuron, which are used to create a <strong data-start=3D"536" data-end=
=3D"561">model performance map</strong>=E2=80=94showing how well different =
brain areas or neurons align with the DNN.</p>
<hr data-start=3D"633" data-end=3D"636" class=3D"">
<h2 data-start=3D"638" data-end=3D"666" class=3D"">=F0=9F=94=8D Step-by-Ste=
p Breakdown</h2>
<hr data-start=3D"668" data-end=3D"671" class=3D"">
<h3 data-start=3D"673" data-end=3D"691" class=3D""><strong data-start=3D"67=
7" data-end=3D"691">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"693" data-end=3D"872"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> sklearn.=
linear_model </span><span><span class=3D"hljs-keyword">import</span></span>=
<span> Ridge
</span><span><span class=3D"hljs-keyword">from</span></span><span> sklearn.=
model_selection </span><span><span class=3D"hljs-keyword">import</span></sp=
an><span> cross_val_score
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"874" data-end=3D"885" class=3D"">Key points:</p>
<ul data-start=3D"886" data-end=3D"1015">
<li data-start=3D"886" data-end=3D"965" class=3D"">
<p data-start=3D"888" data-end=3D"965" class=3D"">Uses <strong data-start=
=3D"893" data-end=3D"913">Ridge regression</strong> (a regularized linear m=
odel) to prevent overfitting</p>
</li>
<li data-start=3D"966" data-end=3D"1015" class=3D"">
<p data-start=3D"968" data-end=3D"1015" class=3D"">Evaluates performance wi=
th <strong data-start=3D"995" data-end=3D"1015">cross-validation</strong></=
p>
</li>
</ul>
<hr data-start=3D"1017" data-end=3D"1020" class=3D"">
<h3 data-start=3D"1022" data-end=3D"1068" class=3D""><strong data-start=3D"=
1026" data-end=3D"1068">2. Load image features and neural data</strong></h3=
>
<pre class=3D"overflow-visible!" data-start=3D"1070" data-end=3D"1253"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>features =3D np.load(</span><span><span class=3D"hl=
js-string">"intermediate/image_features_resnet50.npy"</span></span><span>)
</span><span><span class=3D"hljs-keyword">with</span></span><span> </span><=
span><span class=3D"hljs-built_in">open</span></span><span>(</span><span><s=
pan class=3D"hljs-string">"intermediate/shared_preprocessed_data_with_sacca=
des.pkl"</span></span><span>, </span><span><span class=3D"hljs-string">"rb"=
</span></span><span>) </span><span><span class=3D"hljs-keyword">as</span></=
span><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<p data-start=3D"1255" data-end=3D"1271" class=3D"">So you now have:</p>
<ul data-start=3D"1272" data-end=3D"1393">
<li data-start=3D"1272" data-end=3D"1322" class=3D"">
<p data-start=3D"1274" data-end=3D"1322" class=3D""><code data-start=3D"127=
4" data-end=3D"1284">features</code>: <code data-start=3D"1286" data-end=3D=
"1310">[n_images, n_features]</code> from ResNet</p>
</li>
<li data-start=3D"1323" data-end=3D"1393" class=3D"">
<p data-start=3D"1325" data-end=3D"1393" class=3D""><code data-start=3D"132=
5" data-end=3D"1331">data</code>: trial-level SDFs and trial metadata, incl=
uding neuron firing</p>
</li>
</ul>
<hr data-start=3D"1395" data-end=3D"1398" class=3D"">
<h3 data-start=3D"1400" data-end=3D"1443" class=3D""><strong data-start=3D"=
1404" data-end=3D"1443">3. Build per-neuron encoding models</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1445" data-end=3D"1580"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>results =3D []

</span><span><span class=3D"hljs-keyword">for</span></span><span> sess_name=
, sess_data </span><span><span class=3D"hljs-keyword">in</span></span><span=
> tqdm(data.items()):
    sdf =3D sess_data[</span><span><span class=3D"hljs-string">"sdf"</span>=
</span><span>]
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]
</span></span></code></div></div></pre>
<p data-start=3D"1582" data-end=3D"1613" class=3D"">This loops over session=
s. Then:</p>
<pre class=3D"overflow-visible!" data-start=3D"1615" data-end=3D"1992"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> unit_idx </span><span><span class=3D"hljs-keyword">in</span></span><span>=
 </span><span><span class=3D"hljs-built_in">range</span></span><span>(sdf.s=
hape[</span><span><span class=3D"hljs-number">1</span></span><span>]):
    responses =3D []
    used_features =3D []

    </span><span><span class=3D"hljs-keyword">for</span></span><span> trial=
_idx, trial </span><span><span class=3D"hljs-keyword">in</span></span><span=
> trials.iterrows():
        image_id =3D trial[</span><span><span class=3D"hljs-string">"image_=
id"</span></span><span>]
        fix0 =3D trial[</span><span><span class=3D"hljs-string">"fix_onsets=
"</span></span><span>][</span><span><span class=3D"hljs-number">0</span></s=
pan><span>]
        firing =3D sdf[trial_idx, unit_idx, fix0 + t_start : fix0 + t_end].=
mean()
        responses.append(firing)
        used_features.append(features[image_id])
</span></span></code></div></div></pre>
<p data-start=3D"1994" data-end=3D"2010" class=3D"">You=E2=80=99re matching=
:</p>
<ul data-start=3D"2011" data-end=3D"2104">
<li data-start=3D"2011" data-end=3D"2053" class=3D"">
<p data-start=3D"2013" data-end=3D"2053" class=3D"">A <strong data-start=3D=
"2015" data-end=3D"2030">firing rate</strong> for a unit during fix0</p>
</li>
<li data-start=3D"2054" data-end=3D"2104" class=3D"">
<p data-start=3D"2056" data-end=3D"2104" class=3D"">With the <strong data-s=
tart=3D"2065" data-end=3D"2089">image feature vector</strong> for that tria=
l</p>
</li>
</ul>
<p data-start=3D"2106" data-end=3D"2119" class=3D"">You now have:</p>
<ul data-start=3D"2120" data-end=3D"2165">
<li data-start=3D"2120" data-end=3D"2143" class=3D"">
<p data-start=3D"2122" data-end=3D"2143" class=3D""><code data-start=3D"212=
2" data-end=3D"2125">X</code> =3D ResNet features</p>
</li>
<li data-start=3D"2144" data-end=3D"2165" class=3D"">
<p data-start=3D"2146" data-end=3D"2165" class=3D""><code data-start=3D"214=
6" data-end=3D"2149">y</code> =3D neural firing</p>
</li>
</ul>
<hr data-start=3D"2167" data-end=3D"2170" class=3D"">
<h3 data-start=3D"2172" data-end=3D"2226" class=3D""><strong data-start=3D"=
2176" data-end=3D"2226">4. Train and evaluate a Ridge regression model</str=
ong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2228" data-end=3D"2355"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>X =3D np.stack(used_features)
y =3D np.array(responses)

score =3D cross_val_score(Ridge(alpha=3D</span><span><span class=3D"hljs-nu=
mber">1.0</span></span><span>), X, y, cv=3D</span><span><span class=3D"hljs=
-number">5</span></span><span>).mean()
</span></span></code></div></div></pre>
<p data-start=3D"2357" data-end=3D"2417" class=3D"">This gives you a <stron=
g data-start=3D"2374" data-end=3D"2402">cross-validated R=C2=B2 score</stro=
ng> for that unit:</p>
<ul data-start=3D"2418" data-end=3D"2501">
<li data-start=3D"2418" data-end=3D"2452" class=3D"">
<p data-start=3D"2420" data-end=3D"2452" class=3D"">Higher score =3D better=
 prediction</p>
</li>
<li data-start=3D"2453" data-end=3D"2501" class=3D"">
<p data-start=3D"2455" data-end=3D"2501" class=3D"">Lower/negative score =
=3D poor fit or overfitting</p>
</li>
</ul>
<hr data-start=3D"2503" data-end=3D"2506" class=3D"">
<h3 data-start=3D"2508" data-end=3D"2550" class=3D""><strong data-start=3D"=
2512" data-end=3D"2550">5. Save model performance per unit</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2552" data-end=3D"2649"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>results.append({
    </span><span><span class=3D"hljs-string">"session"</span></span><span>:=
 sess_name,
    </span><span><span class=3D"hljs-string">"unit"</span></span><span>: un=
it_idx,
    </span><span><span class=3D"hljs-string">"r2"</span></span><span>: scor=
e
})
</span></span></code></div></div></pre>
<p data-start=3D"2651" data-end=3D"2682" class=3D"">You=E2=80=99ll get a fu=
ll DataFrame of:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"26=
83" data-end=3D"2808" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2683" data-end=3D"2706"><tr data-start=3D"2683" data-end=3D"=
2706"><th data-start=3D"2683" data-end=3D"2693" data-col-size=3D"sm">sessio=
n</th><th data-start=3D"2693" data-end=3D"2700" data-col-size=3D"sm">unit</=
th><th data-start=3D"2700" data-end=3D"2706" data-col-size=3D"sm">r2</th></=
tr></thead><tbody data-start=3D"2731" data-end=3D"2808"><tr data-start=3D"2=
731" data-end=3D"2756"><td data-start=3D"2731" data-end=3D"2741" data-col-s=
ize=3D"sm">s001</td><td data-start=3D"2741" data-end=3D"2748" data-col-size=
=3D"sm">0</td><td data-start=3D"2748" data-end=3D"2756" data-col-size=3D"sm=
">0.41</td></tr><tr data-start=3D"2757" data-end=3D"2783"><td data-start=3D=
"2757" data-end=3D"2767" data-col-size=3D"sm">s001</td><td data-start=3D"27=
67" data-end=3D"2774" data-col-size=3D"sm">1</td><td data-start=3D"2774" da=
ta-end=3D"2783" data-col-size=3D"sm">-0.02</td></tr><tr data-start=3D"2784"=
 data-end=3D"2808"><td data-start=3D"2784" data-end=3D"2794" data-col-size=
=3D"sm">...</td><td data-start=3D"2794" data-end=3D"2801" data-col-size=3D"=
sm">...</td><td data-start=3D"2801" data-end=3D"2808" data-col-size=3D"sm">=
...</td></tr></tbody></table><div class=3D"sticky end-(--thread-content-mar=
gin) h-0 self-end select-none"><div class=3D"absolute end-0 flex items-end"=
 style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><butto=
n class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-s=
econdary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:fo=
cus-within)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:op=
acity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none=
" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-r=
ule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19=
C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 =
15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5=
ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 =
4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.4477=
2 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.=
44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span=
></div></div></div></div>
<hr data-start=3D"2810" data-end=3D"2813" class=3D"">
<h3 data-start=3D"2815" data-end=3D"2839" class=3D""><strong data-start=3D"=
2819" data-end=3D"2839">6. Save and plot</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2841" data-end=3D"2933"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>df =3D pd.DataFrame(results)
df.to_csv(</span><span><span class=3D"hljs-string">"output/model_perf_map.c=
sv"</span></span><span>, index=3D</span><span><span class=3D"hljs-literal">=
False</span></span><span>)
</span></span></code></div></div></pre>
<p data-start=3D"2935" data-end=3D"2967" class=3D"">This dataset can now be=
 used to:</p>
<ul data-start=3D"2968" data-end=3D"3095">
<li data-start=3D"2968" data-end=3D"2992" class=3D"">
<p data-start=3D"2970" data-end=3D"2992" class=3D"">Plot R=C2=B2 per brain =
area</p>
</li>
<li data-start=3D"2993" data-end=3D"3032" class=3D"">
<p data-start=3D"2995" data-end=3D"3032" class=3D"">Visualize top model-pre=
dictable units</p>
</li>
<li data-start=3D"3033" data-end=3D"3095" class=3D"">
<p data-start=3D"3035" data-end=3D"3095" class=3D"">Compare across DNN laye=
rs (if you run this for other layers)</p>
</li>
</ul>
<hr data-start=3D"3097" data-end=3D"3100" class=3D"">
<h2 data-start=3D"3102" data-end=3D"3114" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"31=
16" data-end=3D"3414" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3116" data-end=3D"3139"><tr data-start=3D"3116" data-end=3D"=
3139"><th data-start=3D"3116" data-end=3D"3123" data-col-size=3D"sm">Step</=
th><th data-start=3D"3123" data-end=3D"3139" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"3164" data-end=3D"3414"><tr data-=
start=3D"3164" data-end=3D"3211"><td data-start=3D"3164" data-end=3D"3171" =
data-col-size=3D"sm">Load</td><td data-start=3D"3171" data-end=3D"3211" dat=
a-col-size=3D"md">ResNet features + neural firing data</td></tr><tr data-st=
art=3D"3212" data-end=3D"3261"><td data-start=3D"3212" data-end=3D"3220" da=
ta-col-size=3D"sm">Match</td><td data-start=3D"3220" data-end=3D"3261" data=
-col-size=3D"md">Image features to each trial=E2=80=99s firing</td></tr><tr=
 data-start=3D"3262" data-end=3D"3297"><td data-start=3D"3262" data-end=3D"=
3268" data-col-size=3D"sm">Fit</td><td data-start=3D"3268" data-end=3D"3297=
" data-col-size=3D"md">Ridge regression per unit</td></tr><tr data-start=3D=
"3298" data-end=3D"3341"><td data-start=3D"3298" data-end=3D"3306" data-col=
-size=3D"sm">Score</td><td data-start=3D"3306" data-end=3D"3341" data-col-s=
ize=3D"md">R=C2=B2 with 5-fold cross-validation</td></tr><tr data-start=3D"=
3342" data-end=3D"3414"><td data-start=3D"3342" data-end=3D"3349" data-col-=
size=3D"sm">Save</td><td data-start=3D"3349" data-end=3D"3414" data-col-siz=
e=3D"md">Performance map: how well each unit is predicted by the model</td>=
</tr></tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0=
 self-end select-none"><div class=3D"absolute end-0 flex items-end" style=
=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button clas=
s=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-seconda=
ry my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-wi=
thin)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-=
0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmln=
s=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D=
"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.65=
69 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.656=
9 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H=
14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.4477=
2 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10=
V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 =
14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div=
></div></div></div>
<hr data-start=3D"3416" data-end=3D"3419" class=3D"">
<h2 data-start=3D"3421" data-end=3D"3444" class=3D"">=F0=9F=A7=A0 Why this =
matters:</h2>
<p data-start=3D"3446" data-end=3D"3461" class=3D"">This tells you:</p>
<ul data-start=3D"3462" data-end=3D"3643">
<li data-start=3D"3462" data-end=3D"3524" class=3D"">
<p data-start=3D"3464" data-end=3D"3524" class=3D"">Which neurons are <stro=
ng data-start=3D"3482" data-end=3D"3497">predictable</strong> from visual m=
odel features</p>
</li>
<li data-start=3D"3525" data-end=3D"3575" class=3D"">
<p data-start=3D"3527" data-end=3D"3575" class=3D"">Which <strong data-star=
t=3D"3533" data-end=3D"3554">brain areas align</strong> best with DNN layer=
s</p>
</li>
<li data-start=3D"3576" data-end=3D"3643" class=3D"">
<p data-start=3D"3578" data-end=3D"3643" class=3D"">How similar DNN vision =
models are to <strong data-start=3D"3615" data-end=3D"3643">biological visu=
al cortex</strong></p>
</li>
</ul>
<hr data-start=3D"3645" data-end=3D"3648" class=3D"">
<p data-start=3D"3650" data-end=3D"3777" class=3D"">Want to go into <code d=
ata-start=3D"3666" data-end=3D"3690">6b_feat_corr_map.ipynb</code> next to =
see how they compare <strong data-start=3D"3720" data-end=3D"3752">feature =
similarity structure</strong> between model and brain?</p></div></div></div=
></div></div></div></div></div></article><article class=3D"text-token-text-=
primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-89" data-scro=
ll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-=
base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[=
--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--s=
pacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-m=
ax-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thr=
ead-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width=
) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visibl=
e:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn rel=
ative flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 m=
d:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-aut=
hor-role=3D"user" data-message-id=3D"4a8e08dd-db90-4f78-85ba-4894f921cc0d" =
dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col it=
ems-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;=
]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl=
:items-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-=
token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre=
-wrap">yes could you move on to 6b</div></div></div></div></div></div></div=
></div></div></article><article class=3D"text-token-text-primary w-full" di=
r=3D"auto" data-testid=3D"conversation-turn-90" data-scroll-anchor=3D"false=
"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto m=
x-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-conte=
nt-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px=
-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem=
] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-ma=
x-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-=
base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidd=
en" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-f=
ull min-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:g=
ap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author=
-role=3D"assistant" data-message-id=3D"87636c6d-eafc-48e7-8206-068f1c1681c5=
" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col =
items-end gap-2 text-start break-words whitespace-normal [.text-message+&am=
p;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex=
-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:p=
rose-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"35" cl=
ass=3D"">Absolutely! Let=E2=80=99s now walk through:</p>
<h2 data-start=3D"37" data-end=3D"74" class=3D"">=F0=9F=93=81 <code data-st=
art=3D"43" data-end=3D"74">script_6b_feat_corr_map.ipynb</code></h2>
<hr data-start=3D"76" data-end=3D"79" class=3D"">
<h2 data-start=3D"81" data-end=3D"110" class=3D"">=F0=9F=8E=AF <strong data=
-start=3D"87" data-end=3D"110">Goal of the Script:</strong></h2>
<p data-start=3D"112" data-end=3D"183" class=3D"">This script computes and =
compares <strong data-start=3D"146" data-end=3D"174">feature correlation ma=
ps</strong> between:</p>
<ul data-start=3D"185" data-end=3D"308">
<li data-start=3D"185" data-end=3D"241" class=3D"">
<p data-start=3D"187" data-end=3D"241" class=3D"">The <strong data-start=3D=
"191" data-end=3D"220">deep neural network (DNN)</strong> features (from <c=
ode data-start=3D"236" data-end=3D"240">5a</code>)</p>
</li>
<li data-start=3D"242" data-end=3D"308" class=3D"">
<p data-start=3D"244" data-end=3D"308" class=3D"">The <strong data-start=3D=
"248" data-end=3D"279">neural population responses</strong> (from the monke=
y recordings)</p>
</li>
</ul>
<p data-start=3D"310" data-end=3D"372" class=3D"">It=E2=80=99s a type of <s=
trong data-start=3D"325" data-end=3D"371">Representational Similarity Analy=
sis (RSA)</strong>:</p>
<blockquote data-start=3D"373" data-end=3D"484">
<p data-start=3D"375" data-end=3D"484" class=3D"">=E2=80=9CDo the patterns =
of similarity between image representations in the DNN look like the patter=
ns in the brain?=E2=80=9D</p>
</blockquote>
<hr data-start=3D"486" data-end=3D"489" class=3D"">
<h2 data-start=3D"491" data-end=3D"510" class=3D"">=F0=9F=A7=A0 Key Questio=
n:</h2>
<blockquote data-start=3D"511" data-end=3D"586">
<p data-start=3D"513" data-end=3D"586" class=3D"">=E2=80=9CIf the DNN says =
Image A and B are similar, does the brain say the same?=E2=80=9D</p>
</blockquote>
<p data-start=3D"588" data-end=3D"653" class=3D"">This goes beyond predicti=
ng firing rates (like in <code data-start=3D"638" data-end=3D"642">6a</code=
>). It asks:</p>
<ul data-start=3D"654" data-end=3D"767">
<li data-start=3D"654" data-end=3D"713" class=3D"">
<p data-start=3D"656" data-end=3D"713" class=3D"">How do <strong data-start=
=3D"663" data-end=3D"704">internal structures of representation</strong> co=
mpare?</p>
</li>
<li data-start=3D"714" data-end=3D"767" class=3D"">
<p data-start=3D"716" data-end=3D"767" class=3D"">How similar are the <stro=
ng data-start=3D"736" data-end=3D"766">geometry of feature spaces</strong>?=
</p>
</li>
</ul>
<hr data-start=3D"769" data-end=3D"772" class=3D"">
<h2 data-start=3D"774" data-end=3D"802" class=3D"">=F0=9F=94=8D Step-by-Ste=
p Breakdown</h2>
<hr data-start=3D"804" data-end=3D"807" class=3D"">
<h3 data-start=3D"809" data-end=3D"827" class=3D""><strong data-start=3D"81=
3" data-end=3D"827">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"829" data-end=3D"942"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"944" data-end=3D"962" class=3D"">No surprises here.</p>
<hr data-start=3D"964" data-end=3D"967" class=3D"">
<h3 data-start=3D"969" data-end=3D"1013" class=3D""><strong data-start=3D"9=
73" data-end=3D"1013">2. Load DNN features and neural data</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1015" data-end=3D"1198"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>features =3D np.load(</span><span><span class=3D"hl=
js-string">"intermediate/image_features_resnet50.npy"</span></span><span>)
</span><span><span class=3D"hljs-keyword">with</span></span><span> </span><=
span><span class=3D"hljs-built_in">open</span></span><span>(</span><span><s=
pan class=3D"hljs-string">"intermediate/shared_preprocessed_data_with_sacca=
des.pkl"</span></span><span>, </span><span><span class=3D"hljs-string">"rb"=
</span></span><span>) </span><span><span class=3D"hljs-keyword">as</span></=
span><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<p data-start=3D"1200" data-end=3D"1213" class=3D"">You now have:</p>
<ul data-start=3D"1214" data-end=3D"1320">
<li data-start=3D"1214" data-end=3D"1263" class=3D"">
<p data-start=3D"1216" data-end=3D"1263" class=3D""><code data-start=3D"121=
6" data-end=3D"1226">features</code>: DNN feature vectors (one per image)</=
p>
</li>
<li data-start=3D"1264" data-end=3D"1320" class=3D"">
<p data-start=3D"1266" data-end=3D"1320" class=3D""><code data-start=3D"126=
6" data-end=3D"1272">data</code>: SDFs and trial metadata (aligned to fixat=
ions)</p>
</li>
</ul>
<hr data-start=3D"1322" data-end=3D"1325" class=3D"">
<h3 data-start=3D"1327" data-end=3D"1376" class=3D""><strong data-start=3D"=
1331" data-end=3D"1376">3. Compute model feature similarity (DNN)</strong><=
/h3>
<pre class=3D"overflow-visible!" data-start=3D"1378" data-end=3D"1426"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>model_corr =3D np.corrcoef(features)
</span></span></code></div></div></pre>
<p data-start=3D"1428" data-end=3D"1476" class=3D"">This gives you a <code =
data-start=3D"1445" data-end=3D"1468">[n_images x n_images]</code> matrix:<=
/p>
<ul data-start=3D"1477" data-end=3D"1623">
<li data-start=3D"1477" data-end=3D"1560" class=3D"">
<p data-start=3D"1479" data-end=3D"1560" class=3D""><code data-start=3D"147=
9" data-end=3D"1497">model_corr[i, j]</code> =3D how similar Image i and Im=
age j are in the DNN feature space</p>
</li>
<li data-start=3D"1561" data-end=3D"1623" class=3D"">
<p data-start=3D"1563" data-end=3D"1623" class=3D"">High correlation =E2=86=
=92 the model thinks they=E2=80=99re visually similar</p>
</li>
</ul>
<hr data-start=3D"1625" data-end=3D"1628" class=3D"">
<h3 data-start=3D"1630" data-end=3D"1694" class=3D""><strong data-start=3D"=
1634" data-end=3D"1694">4. Loop over sessions to compute neural correlation=
 maps</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1696" data-end=3D"1817"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> sess_name, sess_data </span><span><span class=3D"hljs-keyword">in</span><=
/span><span> tqdm(data.items()):
    sdf =3D sess_data[</span><span><span class=3D"hljs-string">"sdf"</span>=
</span><span>]
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]
</span></span></code></div></div></pre>
<p data-start=3D"1819" data-end=3D"1909" class=3D"">You=E2=80=99re going to=
 build a <code data-start=3D"1843" data-end=3D"1866">[n_images x n_images]<=
/code> correlation matrix for the <strong data-start=3D"1894" data-end=3D"1=
903">brain</strong>, too.</p>
<hr data-start=3D"1911" data-end=3D"1914" class=3D"">
<h3 data-start=3D"1916" data-end=3D"1970" class=3D""><strong data-start=3D"=
1920" data-end=3D"1970">5. Compute neural population vectors per image</str=
ong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1972" data-end=3D"2300"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>neural_vectors =3D {}

</span><span><span class=3D"hljs-keyword">for</span></span><span> trial_idx=
, trial </span><span><span class=3D"hljs-keyword">in</span></span><span> tr=
ials.iterrows():
    img_id =3D trial[</span><span><span class=3D"hljs-string">"image_id"</s=
pan></span><span>]
    fix0 =3D trial[</span><span><span class=3D"hljs-string">"fix_onsets"</s=
pan></span><span>][</span><span><span class=3D"hljs-number">0</span></span>=
<span>]
    vec =3D sdf[trial_idx, :, fix0 + t_start : fix0 + t_end].mean(axis=3D-<=
/span><span><span class=3D"hljs-number">1</span></span><span>)

    </span><span><span class=3D"hljs-keyword">if</span></span><span> img_id=
 </span><span><span class=3D"hljs-keyword">not</span></span><span> </span><=
span><span class=3D"hljs-keyword">in</span></span><span> neural_vectors:
        neural_vectors[img_id] =3D []
    neural_vectors[img_id].append(vec)
</span></span></code></div></div></pre>
<ul data-start=3D"2302" data-end=3D"2429">
<li data-start=3D"2302" data-end=3D"2363" class=3D"">
<p data-start=3D"2304" data-end=3D"2363" class=3D"">For each image, you col=
lect <strong data-start=3D"2332" data-end=3D"2363">population response vect=
ors</strong></p>
</li>
<li data-start=3D"2364" data-end=3D"2429" class=3D"">
<p data-start=3D"2366" data-end=3D"2429" class=3D"">These are <code data-st=
art=3D"2376" data-end=3D"2387">[n_units]</code> vectors averaged over the f=
ixation window</p>
</li>
</ul>
<hr data-start=3D"2431" data-end=3D"2434" class=3D"">
<h3 data-start=3D"2436" data-end=3D"2468" class=3D""><strong data-start=3D"=
2440" data-end=3D"2468">6. Average across trials</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2470" data-end=3D"2588"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>avg_vectors =3D {
    img_id: np.mean(vectors, axis=3D</span><span><span class=3D"hljs-number=
">0</span></span><span>)
    </span><span><span class=3D"hljs-keyword">for</span></span><span> img_i=
d, vectors </span><span><span class=3D"hljs-keyword">in</span></span><span>=
 neural_vectors.items()
}
</span></span></code></div></div></pre>
<p data-start=3D"2590" data-end=3D"2655" class=3D"">So now you have one <st=
rong data-start=3D"2610" data-end=3D"2655">mean population response vector =
per image</strong></p>
<hr data-start=3D"2657" data-end=3D"2660" class=3D"">
<h3 data-start=3D"2662" data-end=3D"2703" class=3D""><strong data-start=3D"=
2666" data-end=3D"2703">7. Build neural similarity matrix</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2705" data-end=3D"2839"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>brain_mat =3D np.stack([avg_vectors[img_id] </span>=
<span><span class=3D"hljs-keyword">for</span></span><span> img_id </span><s=
pan><span class=3D"hljs-keyword">in</span></span><span> </span><span><span =
class=3D"hljs-built_in">sorted</span></span><span>(avg_vectors.keys())])
brain_corr =3D np.corrcoef(brain_mat)
</span></span></code></div></div></pre>
<p data-start=3D"2841" data-end=3D"2856" class=3D"">This gives you:</p>
<ul data-start=3D"2857" data-end=3D"2941">
<li data-start=3D"2857" data-end=3D"2941" class=3D"">
<p data-start=3D"2859" data-end=3D"2941" class=3D"">A <code data-start=3D"2=
861" data-end=3D"2884">[n_images x n_images]</code> matrix of how similar b=
rain responses are between images</p>
</li>
</ul>
<hr data-start=3D"2943" data-end=3D"2946" class=3D"">
<h3 data-start=3D"2948" data-end=3D"3004" class=3D""><strong data-start=3D"=
2952" data-end=3D"3004">8. Compare brain and model similarity structures</s=
trong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3006" data-end=3D"3190"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>upper_idx =3D np.triu_indices_from(brain_corr, k=3D=
</span><span><span class=3D"hljs-number">1</span></span><span>)

brain_vals =3D brain_corr[upper_idx]
model_vals =3D model_corr[upper_idx]

corr =3D np.corrcoef(brain_vals, model_vals)[</span><span><span class=3D"hl=
js-number">0</span></span><span>, </span><span><span class=3D"hljs-number">=
1</span></span><span>]
</span></span></code></div></div></pre>
<ul data-start=3D"3192" data-end=3D"3404">
<li data-start=3D"3192" data-end=3D"3251" class=3D"">
<p data-start=3D"3194" data-end=3D"3251" class=3D"">Extract only the <stron=
g data-start=3D"3211" data-end=3D"3229">upper triangle</strong> (non-redund=
ant pairs)</p>
</li>
<li data-start=3D"3252" data-end=3D"3310" class=3D"">
<p data-start=3D"3254" data-end=3D"3310" class=3D"">Compare the correlation=
 structures across the two spaces</p>
</li>
<li data-start=3D"3311" data-end=3D"3404" class=3D"">
<p data-start=3D"3313" data-end=3D"3404" class=3D"">Result: a <strong data-=
start=3D"3323" data-end=3D"3346">single scalar score</strong> =3D how well =
the DNN feature similarity matches the brain=E2=80=99s</p>
</li>
</ul>
<hr data-start=3D"3406" data-end=3D"3409" class=3D"">
<h3 data-start=3D"3411" data-end=3D"3434" class=3D""><strong data-start=3D"=
3415" data-end=3D"3434">9. Save results</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3436" data-end=3D"3595"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>results.append({
    </span><span><span class=3D"hljs-string">"session"</span></span><span>:=
 sess_name,
    </span><span><span class=3D"hljs-string">"rsa_corr"</span></span><span>=
: corr
})

df =3D pd.DataFrame(results)
df.to_csv(</span><span><span class=3D"hljs-string">"output/feat_corr_map.cs=
v"</span></span><span>, index=3D</span><span><span class=3D"hljs-literal">F=
alse</span></span><span>)
</span></span></code></div></div></pre>
<hr data-start=3D"3597" data-end=3D"3600" class=3D"">
<h2 data-start=3D"3602" data-end=3D"3614" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"36=
16" data-end=3D"3941" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3616" data-end=3D"3639"><tr data-start=3D"3616" data-end=3D"=
3639"><th data-start=3D"3616" data-end=3D"3623" data-col-size=3D"sm">Step</=
th><th data-start=3D"3623" data-end=3D"3639" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"3664" data-end=3D"3941"><tr data-=
start=3D"3664" data-end=3D"3728"><td data-start=3D"3664" data-end=3D"3674" =
data-col-size=3D"sm">Compute</td><td data-start=3D"3674" data-end=3D"3728" =
data-col-size=3D"md">Similarity matrix between image pairs in DNN space</td=
></tr><tr data-start=3D"3729" data-end=3D"3805"><td data-start=3D"3729" dat=
a-end=3D"3739" data-col-size=3D"sm">Compute</td><td data-start=3D"3739" dat=
a-end=3D"3805" data-col-size=3D"md">Similarity matrix in brain space (neura=
l population responses)</td></tr><tr data-start=3D"3806" data-end=3D"3858">=
<td data-start=3D"3806" data-end=3D"3816" data-col-size=3D"sm">Compare</td>=
<td data-start=3D"3816" data-end=3D"3858" data-col-size=3D"md">These matric=
es using correlation (RSA)</td></tr><tr data-start=3D"3859" data-end=3D"394=
1"><td data-start=3D"3859" data-end=3D"3868" data-col-size=3D"sm">Output</t=
d><td data-start=3D"3868" data-end=3D"3941" data-col-size=3D"md">A per-sess=
ion score of how well model geometry matches brain geometry</td></tr></tbod=
y></table><div class=3D"sticky end-(--thread-content-margin) h-0 self-end s=
elect-none"><div class=3D"absolute end-0 flex items-end" style=3D"height: 3=
2.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token=
-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 round=
ed-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:pointe=
r-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.343=
15 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C=
3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 =
17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 1=
9 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523=
 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 =
9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div></div>=
</div>
<hr data-start=3D"3943" data-end=3D"3946" class=3D"">
<h2 data-start=3D"3948" data-end=3D"3971" class=3D"">=F0=9F=A7=A0 Why this =
matters:</h2>
<p data-start=3D"3973" data-end=3D"3988" class=3D"">This tells you:</p>
<ul data-start=3D"3989" data-end=3D"4198">
<li data-start=3D"3989" data-end=3D"4065" class=3D"">
<p data-start=3D"3991" data-end=3D"4065" class=3D"">How aligned the <strong=
 data-start=3D"4007" data-end=3D"4020">structure</strong> of representation=
 is between brain and model</p>
</li>
<li data-start=3D"4066" data-end=3D"4141" class=3D"">
<p data-start=3D"4068" data-end=3D"4141" class=3D"">Whether neurons are org=
anized in a way that resembles deep network layers</p>
</li>
<li data-start=3D"4142" data-end=3D"4198" class=3D"">
<p data-start=3D"4144" data-end=3D"4198" class=3D"">If <strong data-start=
=3D"4147" data-end=3D"4156">faces</strong> and <strong data-start=3D"4161" =
data-end=3D"4172">objects</strong> cluster similarly in both</p>
</li>
</ul>
<hr data-start=3D"4200" data-end=3D"4203" class=3D"">
<p data-start=3D"4205" data-end=3D"4303" class=3D"">Would you like to move =
into <code data-start=3D"4233" data-end=3D"4260">6u1_rf_gaussian_fit.ipynb<=
/code> next, where they analyze receptive fields?</p></div></div></div></di=
v></div></div></div></div></article><article class=3D"text-token-text-prima=
ry w-full" dir=3D"auto" data-testid=3D"conversation-turn-91" data-scroll-an=
chor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base =
my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thr=
ead-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacin=
g(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-wi=
dth:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-c=
ontent-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) fle=
x-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:out=
line-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative=
 flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap=
-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author-r=
ole=3D"user" data-message-id=3D"46ea4238-b4c7-46e4-830f-aff5fd92bd50" dir=
=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col items=
-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:m=
t-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:it=
ems-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-tok=
en-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wr=
ap">yes</div></div></div></div></div></div></div></div></div></article><art=
icle class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"c=
onversation-turn-92" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">Cha=
tGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-conte=
nt-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[7=
2rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"=
><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-conten=
t-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex=
 max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-=
6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div cl=
ass=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-=
turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex ma=
x-w-full flex-col grow"><div data-message-author-role=3D"assistant" data-me=
ssage-id=3D"11721f02-bc71-4e98-8cfa-ce6791bd1dce" dir=3D"auto" class=3D"min=
-h-8 text-message relative flex w-full flex-col items-end gap-2 text-start =
break-words whitespace-normal [.text-message+&amp;]:mt-5" data-message-mode=
l-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden fir=
st:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-wo=
rds dark"><p data-start=3D"0" data-end=3D"27" class=3D"">Awesome=E2=80=94le=
t=E2=80=99s walk through:</p>
<h2 data-start=3D"29" data-end=3D"69" class=3D"">=F0=9F=93=81 <code data-st=
art=3D"35" data-end=3D"69">script_6u1_rf_gaussian_fit.ipynb</code></h2>
<hr data-start=3D"71" data-end=3D"74" class=3D"">
<h2 data-start=3D"76" data-end=3D"105" class=3D"">=F0=9F=8E=AF <strong data=
-start=3D"82" data-end=3D"105">Goal of the Script:</strong></h2>
<p data-start=3D"107" data-end=3D"247" class=3D"">This script estimates the=
 <strong data-start=3D"133" data-end=3D"165">spatial receptive field (RF)</=
strong> of each neuron by fitting a <strong data-start=3D"194" data-end=3D"=
209">2D Gaussian</strong> to its responses across visual space.</p>
<p data-start=3D"249" data-end=3D"266" class=3D"">In simpler terms:</p>
<blockquote data-start=3D"268" data-end=3D"331">
<p data-start=3D"270" data-end=3D"331" class=3D"">=E2=80=9CWhere on the scr=
een does each neuron respond most strongly?=E2=80=9D</p>
</blockquote>
<p data-start=3D"333" data-end=3D"375" class=3D"">By modeling this with a G=
aussian, you get:</p>
<ul data-start=3D"376" data-end=3D"495">
<li data-start=3D"376" data-end=3D"404" class=3D"">
<p data-start=3D"378" data-end=3D"404" class=3D""><strong data-start=3D"378=
" data-end=3D"397">Center location</strong> (x, y)</p>
</li>
<li data-start=3D"405" data-end=3D"445" class=3D"">
<p data-start=3D"407" data-end=3D"445" class=3D""><strong data-start=3D"407=
" data-end=3D"415">Size</strong> (spread / standard deviation)</p>
</li>
<li data-start=3D"446" data-end=3D"495" class=3D"">
<p data-start=3D"448" data-end=3D"495" class=3D""><strong data-start=3D"448=
" data-end=3D"457">Shape</strong> (circular vs elliptical, if extended)</p>
</li>
</ul>
<p data-start=3D"497" data-end=3D"609" class=3D"">This helps build a <stron=
g data-start=3D"516" data-end=3D"535">retinotopic map</strong>=E2=80=94a ke=
y step in understanding how vision is spatially encoded in the brain.</p>
<hr data-start=3D"611" data-end=3D"614" class=3D"">
<h2 data-start=3D"616" data-end=3D"652" class=3D"">=F0=9F=A7=A0 What=E2=80=
=99s a receptive field (RF)?</h2>
<p data-start=3D"654" data-end=3D"766" class=3D"">A <strong data-start=3D"6=
56" data-end=3D"675">receptive field</strong> is the specific region of the=
 visual field where a stimulus causes a response in a neuron.</p>
<hr data-start=3D"768" data-end=3D"771" class=3D"">
<h2 data-start=3D"773" data-end=3D"801" class=3D"">=F0=9F=94=8D Step-by-Ste=
p Breakdown</h2>
<hr data-start=3D"803" data-end=3D"806" class=3D"">
<h3 data-start=3D"808" data-end=3D"826" class=3D""><strong data-start=3D"81=
2" data-end=3D"826">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"828" data-end=3D"978"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span><span><span class=3D"hljs-keyword">from</span></span><span> scipy.op=
timize </span><span><span class=3D"hljs-keyword">import</span></span><span>=
 curve_fit
</span></span></code></div></div></pre>
<p data-start=3D"980" data-end=3D"1051" class=3D"">Adds <code data-start=3D=
"985" data-end=3D"996">curve_fit</code> from SciPy, which is used for fitti=
ng the 2D Gaussian.</p>
<hr data-start=3D"1053" data-end=3D"1056" class=3D"">
<h3 data-start=3D"1058" data-end=3D"1091" class=3D""><strong data-start=3D"=
1062" data-end=3D"1091">2. Load preprocessed data</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1093" data-end=3D"1223"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(Path=
(</span><span><span class=3D"hljs-string">"intermediate"</span></span><span=
>) / </span><span><span class=3D"hljs-string">"shared_preprocessed_data_wit=
h_saccades.pkl"</span></span><span>, </span><span><span class=3D"hljs-strin=
g">"rb"</span></span><span>) </span><span><span class=3D"hljs-keyword">as</=
span></span><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<p data-start=3D"1225" data-end=3D"1234" class=3D"">Includes:</p>
<ul data-start=3D"1235" data-end=3D"1324">
<li data-start=3D"1235" data-end=3D"1260" class=3D"">
<p data-start=3D"1237" data-end=3D"1260" class=3D"">Spike density functions=
</p>
</li>
<li data-start=3D"1261" data-end=3D"1295" class=3D"">
<p data-start=3D"1263" data-end=3D"1295" class=3D"">Trial metadata with <co=
de data-start=3D"1283" data-end=3D"1295">fix_onsets</code></p>
</li>
<li data-start=3D"1296" data-end=3D"1324" class=3D"">
<p data-start=3D"1298" data-end=3D"1324" class=3D"">Eye positions per fixat=
ion</p>
</li>
</ul>
<hr data-start=3D"1326" data-end=3D"1329" class=3D"">
<h3 data-start=3D"1331" data-end=3D"1369" class=3D""><strong data-start=3D"=
1335" data-end=3D"1369">3. Define 2D Gaussian function</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1371" data-end=3D"1551"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">def</span></span><span=
> </span><span><span class=3D"hljs-title function_">gaussian_2d</span></spa=
n><span>(</span><span><span class=3D"hljs-params">coords, x0, y0, sigma, am=
plitude, baseline</span></span><span>):
    x, y =3D coords
    </span><span><span class=3D"hljs-keyword">return</span></span><span> ba=
seline + amplitude * np.exp(-((x - x0)**</span><span><span class=3D"hljs-nu=
mber">2</span></span><span> + (y - y0)**</span><span><span class=3D"hljs-nu=
mber">2</span></span><span>) / (</span><span><span class=3D"hljs-number">2<=
/span></span><span> * sigma**</span><span><span class=3D"hljs-number">2</sp=
an></span><span>))
</span></span></code></div></div></pre>
<p data-start=3D"1553" data-end=3D"1606" class=3D"">This is the <strong dat=
a-start=3D"1565" data-end=3D"1574">model</strong> you=E2=80=99ll fit to neu=
ral responses:</p>
<ul data-start=3D"1607" data-end=3D"1693">
<li data-start=3D"1607" data-end=3D"1631" class=3D"">
<p data-start=3D"1609" data-end=3D"1631" class=3D"">Centered at <code data-=
start=3D"1621" data-end=3D"1631">(x0, y0)</code></p>
</li>
<li data-start=3D"1632" data-end=3D"1653" class=3D"">
<p data-start=3D"1634" data-end=3D"1653" class=3D"">With spread <code data-=
start=3D"1646" data-end=3D"1653">sigma</code></p>
</li>
<li data-start=3D"1654" data-end=3D"1693" class=3D"">
<p data-start=3D"1656" data-end=3D"1693" class=3D"">Max response =3D <code =
data-start=3D"1671" data-end=3D"1693">amplitude + baseline</code></p>
</li>
</ul>
<hr data-start=3D"1695" data-end=3D"1698" class=3D"">
<h3 data-start=3D"1700" data-end=3D"1739" class=3D""><strong data-start=3D"=
1704" data-end=3D"1739">4. Loop over sessions and units</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1741" data-end=3D"1862"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> sess_name, sess_data </span><span><span class=3D"hljs-keyword">in</span><=
/span><span> tqdm(data.items()):
    sdf =3D sess_data[</span><span><span class=3D"hljs-string">"sdf"</span>=
</span><span>]
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]
</span></span></code></div></div></pre>
<p data-start=3D"1864" data-end=3D"1883" class=3D"">Session-level loop.</p>
<hr data-start=3D"1885" data-end=3D"1888" class=3D"">
<h3 data-start=3D"1890" data-end=3D"1937" class=3D""><strong data-start=3D"=
1894" data-end=3D"1937">5. Collect responses and gaze positions</strong></h=
3>
<pre class=3D"overflow-visible!" data-start=3D"1939" data-end=3D"2349"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> unit_idx </span><span><span class=3D"hljs-keyword">in</span></span><span>=
 </span><span><span class=3D"hljs-built_in">range</span></span><span>(sdf.s=
hape[</span><span><span class=3D"hljs-number">1</span></span><span>]):
    responses =3D []
    gaze_x =3D []
    gaze_y =3D []

    </span><span><span class=3D"hljs-keyword">for</span></span><span> trial=
_idx, trial </span><span><span class=3D"hljs-keyword">in</span></span><span=
> trials.iterrows():
        </span><span><span class=3D"hljs-keyword">for</span></span><span> f=
ix_onset, (x, y) </span><span><span class=3D"hljs-keyword">in</span></span>=
<span> </span><span><span class=3D"hljs-built_in">zip</span></span><span>(t=
rial[</span><span><span class=3D"hljs-string">"fix_onsets"</span></span><sp=
an>], trial[</span><span><span class=3D"hljs-string">"fix_xy"</span></span>=
<span>]):
            resp =3D sdf[trial_idx, unit_idx, fix_onset + t_start : fix_ons=
et + t_end].mean()
            responses.append(resp)
            gaze_x.append(x)
            gaze_y.append(y)
</span></span></code></div></div></pre>
<p data-start=3D"2351" data-end=3D"2354" class=3D"">So:</p>
<ul data-start=3D"2355" data-end=3D"2498">
<li data-start=3D"2355" data-end=3D"2498" class=3D"">
<p data-start=3D"2357" data-end=3D"2375" class=3D"">For each fixation:</p>
<ul data-start=3D"2378" data-end=3D"2498">
<li data-start=3D"2378" data-end=3D"2440" class=3D"">
<p data-start=3D"2380" data-end=3D"2440" class=3D"">Get average neural resp=
onse in a short window after fixation</p>
</li>
<li data-start=3D"2443" data-end=3D"2498" class=3D"">
<p data-start=3D"2445" data-end=3D"2498" class=3D"">Record where on the scr=
een the eye was looking (x, y)</p>
</li>
</ul>
</li>
</ul>
<p data-start=3D"2500" data-end=3D"2516" class=3D"">You end up with:</p>
<ul data-start=3D"2517" data-end=3D"2579">
<li data-start=3D"2517" data-end=3D"2538" class=3D"">
<p data-start=3D"2519" data-end=3D"2538" class=3D"">A list of responses</p>
</li>
<li data-start=3D"2539" data-end=3D"2579" class=3D"">
<p data-start=3D"2541" data-end=3D"2579" class=3D"">A list of corresponding=
 gaze positions</p>
</li>
</ul>
<hr data-start=3D"2581" data-end=3D"2584" class=3D"">
<h3 data-start=3D"2586" data-end=3D"2625" class=3D""><strong data-start=3D"=
2590" data-end=3D"2625">6. Fit 2D Gaussian to responses</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2627" data-end=3D"2829"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>coords =3D (np.array(gaze_x), np.array(gaze_y))
initial_guess =3D (</span><span><span class=3D"hljs-number">0</span></span>=
<span>, </span><span><span class=3D"hljs-number">0</span></span><span>, </s=
pan><span><span class=3D"hljs-number">1</span></span><span>, </span><span><=
span class=3D"hljs-number">1</span></span><span>, </span><span><span class=
=3D"hljs-number">0</span></span><span>)  </span><span><span class=3D"hljs-c=
omment"># x0, y0, sigma, amplitude, baseline</span></span><span>

params, _ =3D curve_fit(gaussian_2d, coords, responses, p0=3Dinitial_guess)
</span></span></code></div></div></pre>
<p data-start=3D"2831" data-end=3D"2920" class=3D"">This finds the best-fit=
ting 2D Gaussian that predicts firing rate based on gaze position.</p>
<p data-start=3D"2922" data-end=3D"2930" class=3D"">Outputs:</p>
<ul data-start=3D"2931" data-end=3D"3006">
<li data-start=3D"2931" data-end=3D"2954" class=3D"">
<p data-start=3D"2933" data-end=3D"2954" class=3D""><code data-start=3D"293=
3" data-end=3D"2937">x0</code>, <code data-start=3D"2939" data-end=3D"2943"=
>y0</code>: RF center</p>
</li>
<li data-start=3D"2955" data-end=3D"2973" class=3D"">
<p data-start=3D"2957" data-end=3D"2973" class=3D""><code data-start=3D"295=
7" data-end=3D"2964">sigma</code>: RF size</p>
</li>
<li data-start=3D"2974" data-end=3D"3006" class=3D"">
<p data-start=3D"2976" data-end=3D"3006" class=3D""><code data-start=3D"297=
6" data-end=3D"2987">amplitude</code>, <code data-start=3D"2989" data-end=
=3D"2999">baseline</code>: shape</p>
</li>
</ul>
<hr data-start=3D"3008" data-end=3D"3011" class=3D"">
<h3 data-start=3D"3013" data-end=3D"3043" class=3D""><strong data-start=3D"=
3017" data-end=3D"3043">7. Save fit parameters</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3045" data-end=3D"3246"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>results.append({
    </span><span><span class=3D"hljs-string">"session"</span></span><span>:=
 sess_name,
    </span><span><span class=3D"hljs-string">"unit"</span></span><span>: un=
it_idx,
    </span><span><span class=3D"hljs-string">"x0"</span></span><span>: para=
ms[</span><span><span class=3D"hljs-number">0</span></span><span>],
    </span><span><span class=3D"hljs-string">"y0"</span></span><span>: para=
ms[</span><span><span class=3D"hljs-number">1</span></span><span>],
    </span><span><span class=3D"hljs-string">"sigma"</span></span><span>: p=
arams[</span><span><span class=3D"hljs-number">2</span></span><span>],
    </span><span><span class=3D"hljs-string">"amplitude"</span></span><span=
>: params[</span><span><span class=3D"hljs-number">3</span></span><span>],
    </span><span><span class=3D"hljs-string">"baseline"</span></span><span>=
: params[</span><span><span class=3D"hljs-number">4</span></span><span>]
})
</span></span></code></div></div></pre>
<hr data-start=3D"3248" data-end=3D"3251" class=3D"">
<h3 data-start=3D"3253" data-end=3D"3279" class=3D""><strong data-start=3D"=
3257" data-end=3D"3279">8. Save all to CSV</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3281" data-end=3D"3375"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>df =3D pd.DataFrame(results)
df.to_csv(</span><span><span class=3D"hljs-string">"output/rf_gaussian_fits=
.csv"</span></span><span>, index=3D</span><span><span class=3D"hljs-literal=
">False</span></span><span>)
</span></span></code></div></div></pre>
<hr data-start=3D"3377" data-end=3D"3380" class=3D"">
<h2 data-start=3D"3382" data-end=3D"3394" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"33=
96" data-end=3D"3649" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3396" data-end=3D"3419"><tr data-start=3D"3396" data-end=3D"=
3419"><th data-start=3D"3396" data-end=3D"3403" data-col-size=3D"sm">Step</=
th><th data-start=3D"3403" data-end=3D"3419" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"3444" data-end=3D"3649"><tr data-=
start=3D"3444" data-end=3D"3497"><td data-start=3D"3444" data-end=3D"3454" =
data-col-size=3D"sm">Collect</td><td data-start=3D"3454" data-end=3D"3497" =
data-col-size=3D"md">Fixation positions and neural responses</td></tr><tr d=
ata-start=3D"3498" data-end=3D"3550"><td data-start=3D"3498" data-end=3D"35=
04" data-col-size=3D"sm">Fit</td><td data-start=3D"3504" data-end=3D"3550" =
data-col-size=3D"md">2D Gaussian to model receptive field shape</td></tr><t=
r data-start=3D"3551" data-end=3D"3599"><td data-start=3D"3551" data-end=3D=
"3561" data-col-size=3D"sm">Extract</td><td data-start=3D"3561" data-end=3D=
"3599" data-col-size=3D"md">RF center and size for each neuron</td></tr><tr=
 data-start=3D"3600" data-end=3D"3649"><td data-start=3D"3600" data-end=3D"=
3607" data-col-size=3D"sm">Save</td><td data-start=3D"3607" data-end=3D"364=
9" data-col-size=3D"md">A map of RFs across sessions and units</td></tr></t=
body></table><div class=3D"sticky end-(--thread-content-margin) h-0 self-en=
d select-none"><div class=3D"absolute end-0 flex items-end" style=3D"height=
: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-to=
ken-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 ro=
unded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:poi=
nter-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg wi=
dth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http:=
//www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" =
clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.=
34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22=
H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569=
 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 =
4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5=
523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 =
14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div></d=
iv></div>
<hr data-start=3D"3651" data-end=3D"3654" class=3D"">
<h2 data-start=3D"3656" data-end=3D"3679" class=3D"">=F0=9F=A7=A0 Why this =
matters:</h2>
<ul data-start=3D"3681" data-end=3D"3882">
<li data-start=3D"3681" data-end=3D"3733" class=3D"">
<p data-start=3D"3683" data-end=3D"3733" class=3D"">Builds a <strong data-s=
tart=3D"3692" data-end=3D"3711">retinotopic map</strong> of neuron preferen=
ces</p>
</li>
<li data-start=3D"3734" data-end=3D"3816" class=3D"">
<p data-start=3D"3736" data-end=3D"3816" class=3D"">Essential for analyzing=
 spatial precision, overlap, and gaze-dependent responses</p>
</li>
<li data-start=3D"3817" data-end=3D"3882" class=3D"">
<p data-start=3D"3819" data-end=3D"3882" class=3D"">Can be compared to DNN =
unit RFs (in visualizations or modeling)</p>
</li>
</ul>
<hr data-start=3D"3884" data-end=3D"3887" class=3D"">
<p data-start=3D"3889" data-end=3D"4047" class=3D"">Would you like to follo=
w up with <code data-start=3D"3922" data-end=3D"3955">6u2_rf_cons_via_gauss=
_fit.ipynb</code>, which likely uses these fits to assess consistency or si=
milarity of RFs across conditions?</p></div></div></div></div></div></div><=
/div></div></article><article class=3D"text-token-text-primary w-full" dir=
=3D"auto" data-testid=3D"conversation-turn-93" data-scroll-anchor=3D"false"=
><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-aut=
o py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-ma=
rgin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--t=
hread-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[3=
4rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-wid=
th:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base =
gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" t=
abindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full m=
in-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=
=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"user" d=
ata-message-id=3D"17faad88-7a5c-4676-9a15-4b75aec1a183" dir=3D"auto" class=
=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 text=
-start break-words whitespace-normal [.text-message+&amp;]:mt-5"><div class=
=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><div=
 class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-surf=
ace rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">yes</div></=
div></div></div></div></div></div></div></div></article><article class=3D"t=
ext-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-tur=
n-94" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6>=
<div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spa=
cing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread=
-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"=
[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40r=
em] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--threa=
d-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-me=
ssages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/co=
nversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div clas=
s=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-c=
ol grow"><div data-message-author-role=3D"assistant" data-message-id=3D"5a7=
4acb4-1100-41b3-ae41-47c24987be48" dir=3D"auto" class=3D"min-h-8 text-messa=
ge relative flex w-full flex-col items-end gap-2 text-start break-words whi=
tespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4=
o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><d=
iv class=3D"markdown prose dark:prose-invert w-full break-words dark"><p da=
ta-start=3D"0" data-end=3D"25" class=3D"">Awesome=E2=80=94let=E2=80=99s mov=
e on to:</p>
<h2 data-start=3D"27" data-end=3D"73" class=3D"">=F0=9F=93=81 <code data-st=
art=3D"33" data-end=3D"73">script_6u2_rf_cons_via_gauss_fit.ipynb</code></h=
2>
<hr data-start=3D"75" data-end=3D"78" class=3D"">
<h2 data-start=3D"80" data-end=3D"109" class=3D"">=F0=9F=8E=AF <strong data=
-start=3D"86" data-end=3D"109">Goal of the Script:</strong></h2>
<p data-start=3D"111" data-end=3D"280" class=3D"">This script builds on <co=
de data-start=3D"133" data-end=3D"160">6u1_rf_gaussian_fit.ipynb</code> by =
using the <strong data-start=3D"174" data-end=3D"216">fitted receptive fiel=
d (RF) parameters</strong> to evaluate <strong data-start=3D"229" data-end=
=3D"244">consistency</strong> or <strong data-start=3D"248" data-end=3D"261=
">alignment</strong> across conditions.</p>
<p data-start=3D"282" data-end=3D"307" class=3D"">Most likely, it=E2=80=99s=
 asking:</p>
<blockquote data-start=3D"309" data-end=3D"418">
<p data-start=3D"311" data-end=3D"418" class=3D"">=E2=80=9CAre the estimate=
d receptive fields for each neuron <strong data-start=3D"363" data-end=3D"4=
16">reliable across fixations, trials, or image types</strong>?=E2=80=9D</p=
>
</blockquote>
<p data-start=3D"420" data-end=3D"435" class=3D"">In other words:</p>
<ul data-start=3D"436" data-end=3D"622">
<li data-start=3D"436" data-end=3D"563" class=3D"">
<p data-start=3D"438" data-end=3D"563" class=3D"">If I estimate a neuron=E2=
=80=99s RF using one subset of the data, do I get the <strong data-start=3D=
"509" data-end=3D"534">same center and shape</strong> as I do from another =
subset?</p>
</li>
<li data-start=3D"564" data-end=3D"622" class=3D"">
<p data-start=3D"566" data-end=3D"622" class=3D"">Do RFs shift when looking=
 at different image categories?</p>
</li>
</ul>
<hr data-start=3D"624" data-end=3D"627" class=3D"">
<h2 data-start=3D"629" data-end=3D"647" class=3D"">=F0=9F=A7=A0 Big Picture=
:</h2>
<p data-start=3D"648" data-end=3D"717" class=3D"">It=E2=80=99s about <stron=
g data-start=3D"659" data-end=3D"673">validating</strong> or <strong data-s=
tart=3D"677" data-end=3D"690">comparing</strong> receptive field estimates:=
</p>
<ul data-start=3D"718" data-end=3D"858">
<li data-start=3D"718" data-end=3D"759" class=3D"">
<p data-start=3D"720" data-end=3D"759" class=3D"">Across <strong data-start=
=3D"727" data-end=3D"737">splits</strong> (e.g., half the data)</p>
</li>
<li data-start=3D"760" data-end=3D"807" class=3D"">
<p data-start=3D"762" data-end=3D"807" class=3D"">Across <strong data-start=
=3D"769" data-end=3D"783">conditions</strong> (e.g., face vs. object)</p>
</li>
<li data-start=3D"808" data-end=3D"858" class=3D"">
<p data-start=3D"810" data-end=3D"858" class=3D"">Across <strong data-start=
=3D"817" data-end=3D"825">time</strong> (e.g., early vs. late fixations)</p=
>
</li>
</ul>
<hr data-start=3D"860" data-end=3D"863" class=3D"">
<h2 data-start=3D"865" data-end=3D"893" class=3D"">=F0=9F=94=8D Step-by-Ste=
p Breakdown</h2>
<hr data-start=3D"895" data-end=3D"898" class=3D"">
<h3 data-start=3D"900" data-end=3D"918" class=3D""><strong data-start=3D"90=
4" data-end=3D"918">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"920" data-end=3D"1070"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span><span><span class=3D"hljs-keyword">from</span></span><span> scipy.op=
timize </span><span><span class=3D"hljs-keyword">import</span></span><span>=
 curve_fit
</span></span></code></div></div></pre>
<p data-start=3D"1072" data-end=3D"1160" class=3D"">Same as <code data-star=
t=3D"1080" data-end=3D"1085">6u1</code>=E2=80=94you=E2=80=99ll be fitting 2=
D Gaussians again, possibly on <strong data-start=3D"1136" data-end=3D"1147=
">subsets</strong> of the data.</p>
<hr data-start=3D"1162" data-end=3D"1165" class=3D"">
<h3 data-start=3D"1167" data-end=3D"1215" class=3D""><strong data-start=3D"=
1171" data-end=3D"1215">2. Load shared preprocessed session data</strong></=
h3>
<pre class=3D"overflow-visible!" data-start=3D"1217" data-end=3D"1347"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(Path=
(</span><span><span class=3D"hljs-string">"intermediate"</span></span><span=
>) / </span><span><span class=3D"hljs-string">"shared_preprocessed_data_wit=
h_saccades.pkl"</span></span><span>, </span><span><span class=3D"hljs-strin=
g">"rb"</span></span><span>) </span><span><span class=3D"hljs-keyword">as</=
span></span><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<p data-start=3D"1349" data-end=3D"1379" class=3D"">Standard session + tria=
l data.</p>
<hr data-start=3D"1381" data-end=3D"1384" class=3D"">
<h3 data-start=3D"1386" data-end=3D"1425" class=3D""><strong data-start=3D"=
1390" data-end=3D"1425">3. Define the 2D Gaussian again</strong></h3>
<p data-start=3D"1427" data-end=3D"1453" class=3D"">Same function as in <co=
de data-start=3D"1447" data-end=3D"1452">6u1</code>:</p>
<pre class=3D"overflow-visible!" data-start=3D"1455" data-end=3D"1635"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">def</span></span><span=
> </span><span><span class=3D"hljs-title function_">gaussian_2d</span></spa=
n><span>(</span><span><span class=3D"hljs-params">coords, x0, y0, sigma, am=
plitude, baseline</span></span><span>):
    x, y =3D coords
    </span><span><span class=3D"hljs-keyword">return</span></span><span> ba=
seline + amplitude * np.exp(-((x - x0)**</span><span><span class=3D"hljs-nu=
mber">2</span></span><span> + (y - y0)**</span><span><span class=3D"hljs-nu=
mber">2</span></span><span>) / (</span><span><span class=3D"hljs-number">2<=
/span></span><span> * sigma**</span><span><span class=3D"hljs-number">2</sp=
an></span><span>))
</span></span></code></div></div></pre>
<hr data-start=3D"1637" data-end=3D"1640" class=3D"">
<h3 data-start=3D"1642" data-end=3D"1684" class=3D""><strong data-start=3D"=
1646" data-end=3D"1684">4. Loop through sessions and units</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1686" data-end=3D"1807"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> sess_name, sess_data </span><span><span class=3D"hljs-keyword">in</span><=
/span><span> tqdm(data.items()):
    sdf =3D sess_data[</span><span><span class=3D"hljs-string">"sdf"</span>=
</span><span>]
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]
</span></span></code></div></div></pre>
<p data-start=3D"1809" data-end=3D"1858" class=3D"">Start looping over sess=
ions and recorded neurons.</p>
<hr data-start=3D"1860" data-end=3D"1863" class=3D"">
<h3 data-start=3D"1865" data-end=3D"1917" class=3D""><strong data-start=3D"=
1869" data-end=3D"1917">5. Collect gaze + response pairs, then split</stron=
g></h3>
<pre class=3D"overflow-visible!" data-start=3D"1919" data-end=3D"2398"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>responses_A, coords_A =3D [], []
responses_B, coords_B =3D [], []

</span><span><span class=3D"hljs-keyword">for</span></span><span> trial_idx=
, trial </span><span><span class=3D"hljs-keyword">in</span></span><span> tr=
ials.iterrows():
    </span><span><span class=3D"hljs-keyword">for</span></span><span> i, (o=
nset, (x, y)) </span><span><span class=3D"hljs-keyword">in</span></span><sp=
an> </span><span><span class=3D"hljs-built_in">enumerate</span></span><span=
>(</span><span><span class=3D"hljs-built_in">zip</span></span><span>(trial[=
</span><span><span class=3D"hljs-string">"fix_onsets"</span></span><span>],=
 trial[</span><span><span class=3D"hljs-string">"fix_xy"</span></span><span=
>])):
        response =3D sdf[trial_idx, unit_idx, onset + t_start : onset + t_e=
nd].mean()

        </span><span><span class=3D"hljs-keyword">if</span></span><span> i =
% </span><span><span class=3D"hljs-number">2</span></span><span> =3D=3D </s=
pan><span><span class=3D"hljs-number">0</span></span><span>:
            responses_A.append(response)
            coords_A.append((x, y))
        </span><span><span class=3D"hljs-keyword">else</span></span><span>:
            responses_B.append(response)
            coords_B.append((x, y))
</span></span></code></div></div></pre>
<p data-start=3D"2400" data-end=3D"2445" class=3D"">You=E2=80=99re <strong =
data-start=3D"2407" data-end=3D"2444">splitting fixations into two sets</st=
rong>:</p>
<ul data-start=3D"2446" data-end=3D"2510">
<li data-start=3D"2446" data-end=3D"2478" class=3D"">
<p data-start=3D"2448" data-end=3D"2478" class=3D"">Set A: even-numbered fi=
xations</p>
</li>
<li data-start=3D"2479" data-end=3D"2510" class=3D"">
<p data-start=3D"2481" data-end=3D"2510" class=3D"">Set B: odd-numbered fix=
ations</p>
</li>
</ul>
<p data-start=3D"2512" data-end=3D"2564" class=3D"">Goal: Fit RFs <strong d=
ata-start=3D"2526" data-end=3D"2543">independently</strong> on each and com=
pare.</p>
<hr data-start=3D"2566" data-end=3D"2569" class=3D"">
<h3 data-start=3D"2571" data-end=3D"2607" class=3D""><strong data-start=3D"=
2575" data-end=3D"2607">6. Fit Gaussians to each set</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2609" data-end=3D"2772"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>params_A, _ =3D curve_fit(gaussian_2d, </span><span=
><span class=3D"hljs-built_in">zip</span></span><span>(*coords_A), response=
s_A, p0=3Dinit)
params_B, _ =3D curve_fit(gaussian_2d, </span><span><span class=3D"hljs-bui=
lt_in">zip</span></span><span>(*coords_B), responses_B, p0=3Dinit)
</span></span></code></div></div></pre>
<p data-start=3D"2774" data-end=3D"2806" class=3D"">This gives two separate=
 RF fits:</p>
<ul data-start=3D"2807" data-end=3D"2860">
<li data-start=3D"2807" data-end=3D"2833" class=3D"">
<p data-start=3D"2809" data-end=3D"2833" class=3D"">One from set A fixation=
s</p>
</li>
<li data-start=3D"2834" data-end=3D"2860" class=3D"">
<p data-start=3D"2836" data-end=3D"2860" class=3D"">One from set B fixation=
s</p>
</li>
</ul>
<hr data-start=3D"2862" data-end=3D"2865" class=3D"">
<h3 data-start=3D"2867" data-end=3D"2905" class=3D""><strong data-start=3D"=
2871" data-end=3D"2905">7. Compare RFs between A and B</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2907" data-end=3D"3054"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>center_dist =3D np.sqrt((params_A[</span><span><spa=
n class=3D"hljs-number">0</span></span><span>] - params_B[</span><span><spa=
n class=3D"hljs-number">0</span></span><span>])**</span><span><span class=
=3D"hljs-number">2</span></span><span> + (params_A[</span><span><span class=
=3D"hljs-number">1</span></span><span>] - params_B[</span><span><span class=
=3D"hljs-number">1</span></span><span>])**</span><span><span class=3D"hljs-=
number">2</span></span><span>)
sigma_diff =3D np.</span><span><span class=3D"hljs-built_in">abs</span></sp=
an><span>(params_A[</span><span><span class=3D"hljs-number">2</span></span>=
<span>] - params_B[</span><span><span class=3D"hljs-number">2</span></span>=
<span>])
</span></span></code></div></div></pre>
<ul data-start=3D"3056" data-end=3D"3140">
<li data-start=3D"3056" data-end=3D"3101" class=3D"">
<p data-start=3D"3058" data-end=3D"3101" class=3D""><code data-start=3D"305=
8" data-end=3D"3071">center_dist</code> =3D distance between RF centers</p>
</li>
<li data-start=3D"3102" data-end=3D"3140" class=3D"">
<p data-start=3D"3104" data-end=3D"3140" class=3D""><code data-start=3D"310=
4" data-end=3D"3116">sigma_diff</code> =3D difference in RF size</p>
</li>
</ul>
<p data-start=3D"3142" data-end=3D"3194" class=3D"">These are metrics of <s=
trong data-start=3D"3163" data-end=3D"3194">receptive field consistency</st=
rong></p>
<hr data-start=3D"3196" data-end=3D"3199" class=3D"">
<h3 data-start=3D"3201" data-end=3D"3224" class=3D""><strong data-start=3D"=
3205" data-end=3D"3224">8. Save results</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3226" data-end=3D"3378"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>results.append({
    </span><span><span class=3D"hljs-string">"session"</span></span><span>:=
 sess_name,
    </span><span><span class=3D"hljs-string">"unit"</span></span><span>: un=
it_idx,
    </span><span><span class=3D"hljs-string">"center_distance"</span></span=
><span>: center_dist,
    </span><span><span class=3D"hljs-string">"sigma_difference"</span></spa=
n><span>: sigma_diff
})
</span></span></code></div></div></pre>
<hr data-start=3D"3380" data-end=3D"3383" class=3D"">
<h3 data-start=3D"3385" data-end=3D"3407" class=3D""><strong data-start=3D"=
3389" data-end=3D"3407">9. Save to CSV</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3409" data-end=3D"3507"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>df =3D pd.DataFrame(results)
df.to_csv(</span><span><span class=3D"hljs-string">"output/rf_consistency_g=
auss.csv"</span></span><span>, index=3D</span><span><span class=3D"hljs-lit=
eral">False</span></span><span>)
</span></span></code></div></div></pre>
<hr data-start=3D"3509" data-end=3D"3512" class=3D"">
<h2 data-start=3D"3514" data-end=3D"3526" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"35=
28" data-end=3D"3772" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3528" data-end=3D"3551"><tr data-start=3D"3528" data-end=3D"=
3551"><th data-start=3D"3528" data-end=3D"3535" data-col-size=3D"sm">Step</=
th><th data-start=3D"3535" data-end=3D"3551" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"3576" data-end=3D"3772"><tr data-=
start=3D"3576" data-end=3D"3617"><td data-start=3D"3576" data-end=3D"3584" =
data-col-size=3D"sm">Split</td><td data-start=3D"3584" data-end=3D"3617" da=
ta-col-size=3D"md">Fixations into two sets (A/B)</td></tr><tr data-start=3D=
"3618" data-end=3D"3661"><td data-start=3D"3618" data-end=3D"3624" data-col=
-size=3D"sm">Fit</td><td data-start=3D"3624" data-end=3D"3661" data-col-siz=
e=3D"md">Independent 2D Gaussians for each</td></tr><tr data-start=3D"3662"=
 data-end=3D"3709"><td data-start=3D"3662" data-end=3D"3672" data-col-size=
=3D"sm">Compare</td><td data-start=3D"3672" data-end=3D"3709" data-col-size=
=3D"md">RF centers + sizes between splits</td></tr><tr data-start=3D"3710" =
data-end=3D"3772"><td data-start=3D"3710" data-end=3D"3717" data-col-size=
=3D"sm">Save</td><td data-start=3D"3717" data-end=3D"3772" data-col-size=3D=
"md">Consistency metrics (distance, difference) per unit</td></tr></tbody><=
/table><div class=3D"sticky end-(--thread-content-margin) h-0 self-end sele=
ct-none"><div class=3D"absolute end-0 flex items-end" style=3D"height: 32.8=
906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg=
-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-=
sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:pointer-e=
vents-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D=
"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.=
w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-r=
ule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 =
22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.3=
4315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 =
8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4=
H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.=
44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5=
Z" fill=3D"currentColor"></path></svg></button></span></div></div></div></d=
iv>
<hr data-start=3D"3774" data-end=3D"3777" class=3D"">
<h2 data-start=3D"3779" data-end=3D"3802" class=3D"">=F0=9F=A7=A0 Why this =
matters:</h2>
<p data-start=3D"3804" data-end=3D"3819" class=3D"">This tells you:</p>
<ul data-start=3D"3820" data-end=3D"3989">
<li data-start=3D"3820" data-end=3D"3859" class=3D"">
<p data-start=3D"3822" data-end=3D"3859" class=3D"">Whether your RF fits ar=
e <strong data-start=3D"3847" data-end=3D"3859">reliable</strong></p>
</li>
<li data-start=3D"3860" data-end=3D"3918" class=3D"">
<p data-start=3D"3862" data-end=3D"3918" class=3D"">Whether RFs <strong dat=
a-start=3D"3874" data-end=3D"3892">shift or drift</strong> across viewing c=
onditions</p>
</li>
<li data-start=3D"3919" data-end=3D"3989" class=3D"">
<p data-start=3D"3921" data-end=3D"3989" class=3D"">If neurons maintain a <=
strong data-start=3D"3943" data-end=3D"3967">fixed spatial tuning</strong> =
during natural vision</p>
</li>
</ul>
<p data-start=3D"3991" data-end=3D"4029" class=3D"">It=E2=80=99s especially=
 useful if you want to:</p>
<ul data-start=3D"4030" data-end=3D"4155">
<li data-start=3D"4030" data-end=3D"4055" class=3D"">
<p data-start=3D"4032" data-end=3D"4055" class=3D"">Filter out unstable RFs=
</p>
</li>
<li data-start=3D"4056" data-end=3D"4099" class=3D"">
<p data-start=3D"4058" data-end=3D"4099" class=3D"">Quantify adaptation or =
attentional shifts</p>
</li>
<li data-start=3D"4100" data-end=3D"4155" class=3D"">
<p data-start=3D"4102" data-end=3D"4155" class=3D"">Compare RFs between cat=
egories (e.g. face vs. object)</p>
</li>
</ul>
<hr data-start=3D"4157" data-end=3D"4160" class=3D"">
<p data-start=3D"4162" data-end=3D"4324" class=3D"">Would you like to jump =
into the final section, <code data-start=3D"4209" data-end=3D"4237">7a_mas_=
match_control.ipynb</code>, next? It likely builds on earlier face/object c=
ontrast with another matching control.</p></div></div></div></div></div></d=
iv></div></div></article><article class=3D"text-token-text-primary w-full" =
dir=3D"auto" data-testid=3D"conversation-turn-95" data-scroll-anchor=3D"fal=
se"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-=
auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content=
-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(=
--thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem] =
@[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-=
width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-ba=
se gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden=
" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-ful=
l min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div cl=
ass=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"user=
" data-message-id=3D"40fa0f81-7fde-4935-87df-35db3352aaf1" dir=3D"auto" cla=
ss=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 te=
xt-start break-words whitespace-normal [.text-message+&amp;]:mt-5"><div cla=
ss=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><d=
iv class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-su=
rface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">yes</div>=
</div></div></div></div></div></div></div></div></article><article class=3D=
"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-t=
urn-96" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h=
6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--s=
pacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thre=
ad-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div =
class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full fl=
ex-col grow"><div data-message-author-role=3D"assistant" data-message-id=3D=
"36b75e3b-49a4-49d4-854b-eeb24f3a55cd" dir=3D"auto" class=3D"min-h-8 text-m=
essage relative flex w-full flex-col items-end gap-2 text-start break-words=
 whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"g=
pt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]=
"><div class=3D"markdown prose dark:prose-invert w-full break-words dark"><=
p data-start=3D"0" data-end=3D"49" class=3D"">Awesome=E2=80=94let=E2=80=99s=
 finish this arc by walking through:</p>
<h2 data-start=3D"51" data-end=3D"92" class=3D"">=F0=9F=93=81 <code data-st=
art=3D"57" data-end=3D"92">script_7a_mas_match_control.ipynb</code></h2>
<hr data-start=3D"94" data-end=3D"97" class=3D"">
<h2 data-start=3D"99" data-end=3D"128" class=3D"">=F0=9F=8E=AF <strong data=
-start=3D"105" data-end=3D"128">Goal of the Script:</strong></h2>
<p data-start=3D"130" data-end=3D"341" class=3D"">This script is likely the=
 culmination of the earlier <em data-start=3D"183" data-end=3D"201">face-se=
lectivity</em> and <em data-start=3D"206" data-end=3D"221">match-control</e=
m> analyses (from <code data-start=3D"237" data-end=3D"241">1a</code>, <cod=
e data-start=3D"243" data-end=3D"247">1b</code>, etc.), but applied at a br=
oader or population level using <strong data-start=3D"307" data-end=3D"314"=
>MAS</strong> =E2=80=94 which likely stands for:</p>
<blockquote data-start=3D"343" data-end=3D"420">
<p data-start=3D"345" data-end=3D"420" class=3D""><strong data-start=3D"345=
" data-end=3D"378">Matched Attention Selectivity</strong> (or possibly <str=
ong data-start=3D"392" data-end=3D"419">Match-Aware Selectivity</strong>)</=
p>
</blockquote>
<p data-start=3D"422" data-end=3D"449" class=3D"">This script probably test=
s:</p>
<blockquote data-start=3D"451" data-end=3D"576">
<p data-start=3D"453" data-end=3D"576" class=3D"">=E2=80=9CAre neural respo=
nses to faces still selective after controlling for gaze behavior, image co=
ntent, and fixational factors?=E2=80=9D</p>
</blockquote>
<p data-start=3D"578" data-end=3D"593" class=3D"">In other words:</p>
<blockquote data-start=3D"594" data-end=3D"701">
<p data-start=3D"596" data-end=3D"701" class=3D"">=E2=80=9CIs face selectiv=
ity <em data-start=3D"617" data-end=3D"625">really</em> about faces=E2=80=
=94or could it just be due to attention or eye movement patterns?=E2=80=9D<=
/p>
</blockquote>
<hr data-start=3D"703" data-end=3D"706" class=3D"">
<h2 data-start=3D"708" data-end=3D"726" class=3D"">=F0=9F=A7=A0 Big Picture=
:</h2>
<ul data-start=3D"727" data-end=3D"1004">
<li data-start=3D"727" data-end=3D"798" class=3D"">
<p data-start=3D"729" data-end=3D"798" class=3D"">Think of this as a <stron=
g data-start=3D"748" data-end=3D"771">final reality check</strong> on face-=
selective neurons.</p>
</li>
<li data-start=3D"799" data-end=3D"1004" class=3D"">
<p data-start=3D"801" data-end=3D"925" class=3D"">It uses <strong data-star=
t=3D"809" data-end=3D"835">matched control trials</strong> to test whether =
selectivity is still meaningful <strong data-start=3D"884" data-end=3D"919"=
>after controlling for confounds</strong> like:</p>
<ul data-start=3D"928" data-end=3D"1004">
<li data-start=3D"928" data-end=3D"947" class=3D"">
<p data-start=3D"930" data-end=3D"947" class=3D"">Fixation location</p>
</li>
<li data-start=3D"950" data-end=3D"965" class=3D"">
<p data-start=3D"952" data-end=3D"965" class=3D"">Saccade order</p>
</li>
<li data-start=3D"968" data-end=3D"984" class=3D"">
<p data-start=3D"970" data-end=3D"984" class=3D"">Image salience</p>
</li>
<li data-start=3D"987" data-end=3D"1004" class=3D"">
<p data-start=3D"989" data-end=3D"1004" class=3D"">Trial structure</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"1006" data-end=3D"1009" class=3D"">
<h2 data-start=3D"1011" data-end=3D"1039" class=3D"">=F0=9F=94=8D Step-by-S=
tep Breakdown</h2>
<hr data-start=3D"1041" data-end=3D"1044" class=3D"">
<h3 data-start=3D"1046" data-end=3D"1064" class=3D""><strong data-start=3D"=
1050" data-end=3D"1064">1. Imports</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1066" data-end=3D"1179"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span></span></code></div></div></pre>
<p data-start=3D"1181" data-end=3D"1200" class=3D"">Standard libraries.</p>
<hr data-start=3D"1202" data-end=3D"1205" class=3D"">
<h3 data-start=3D"1207" data-end=3D"1227" class=3D""><strong data-start=3D"=
1211" data-end=3D"1227">2. Load data</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1229" data-end=3D"1359"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(Path=
(</span><span><span class=3D"hljs-string">"intermediate"</span></span><span=
>) / </span><span><span class=3D"hljs-string">"shared_preprocessed_data_wit=
h_saccades.pkl"</span></span><span>, </span><span><span class=3D"hljs-strin=
g">"rb"</span></span><span>) </span><span><span class=3D"hljs-keyword">as</=
span></span><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<p data-start=3D"1361" data-end=3D"1375" class=3D"">This contains:</p>
<ul data-start=3D"1376" data-end=3D"1499">
<li data-start=3D"1376" data-end=3D"1408" class=3D"">
<p data-start=3D"1378" data-end=3D"1408" class=3D""><code data-start=3D"137=
8" data-end=3D"1383">sdf</code>: spike density functions</p>
</li>
<li data-start=3D"1409" data-end=3D"1459" class=3D"">
<p data-start=3D"1411" data-end=3D"1459" class=3D""><code data-start=3D"141=
1" data-end=3D"1419">trials</code>: with image category, fixation metadata<=
/p>
</li>
<li data-start=3D"1460" data-end=3D"1499" class=3D"">
<p data-start=3D"1462" data-end=3D"1499" class=3D"">Previously preprocessed=
 using <code data-start=3D"1492" data-end=3D"1499">0a=E2=80=930c</code></p>
</li>
</ul>
<hr data-start=3D"1501" data-end=3D"1504" class=3D"">
<h3 data-start=3D"1506" data-end=3D"1551" class=3D""><strong data-start=3D"=
1510" data-end=3D"1551">3. Define face and control categories</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1553" data-end=3D"1647"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>face_labels =3D [</span><span><span class=3D"hljs-s=
tring">'human_face'</span></span><span>, </span><span><span class=3D"hljs-s=
tring">'monkey_face'</span></span><span>]
nonface_labels =3D [</span><span><span class=3D"hljs-string">'object'</span=
></span><span>, </span><span><span class=3D"hljs-string">'scene'</span></sp=
an><span>]
</span></span></code></div></div></pre>
<p data-start=3D"1649" data-end=3D"1680" class=3D"">Same as before=E2=80=94=
two core groups:</p>
<ul data-start=3D"1681" data-end=3D"1769">
<li data-start=3D"1681" data-end=3D"1728" class=3D"">
<p data-start=3D"1683" data-end=3D"1728" class=3D""><strong data-start=3D"1=
683" data-end=3D"1692">Faces</strong>: what we=E2=80=99re testing for selec=
tivity</p>
</li>
<li data-start=3D"1729" data-end=3D"1769" class=3D"">
<p data-start=3D"1731" data-end=3D"1769" class=3D""><strong data-start=3D"1=
731" data-end=3D"1744">Non-faces</strong>: used as matched control</p>
</li>
</ul>
<hr data-start=3D"1771" data-end=3D"1774" class=3D"">
<h3 data-start=3D"1776" data-end=3D"1818" class=3D""><strong data-start=3D"=
1780" data-end=3D"1818">4. Loop through sessions and units</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1820" data-end=3D"2042"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> sess_name, sess_data </span><span><span class=3D"hljs-keyword">in</span><=
/span><span> tqdm(data.items()):
    sdf =3D sess_data[</span><span><span class=3D"hljs-string">"sdf"</span>=
</span><span>]
    trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"<=
/span></span><span>]

    </span><span><span class=3D"hljs-keyword">for</span></span><span> unit_=
idx </span><span><span class=3D"hljs-keyword">in</span></span><span> </span=
><span><span class=3D"hljs-built_in">range</span></span><span>(sdf.shape[</=
span><span><span class=3D"hljs-number">1</span></span><span>]):
        face_responses =3D []
        matched_responses =3D []
</span></span></code></div></div></pre>
<p data-start=3D"2044" data-end=3D"2120" class=3D"">Per-unit loop to extrac=
t trial-level activity, categorized by stimulus type.</p>
<hr data-start=3D"2122" data-end=3D"2125" class=3D"">
<h3 data-start=3D"2127" data-end=3D"2175" class=3D""><strong data-start=3D"=
2131" data-end=3D"2175">5. For each trial: extract fix0 response</strong></=
h3>
<pre class=3D"overflow-visible!" data-start=3D"2177" data-end=3D"2622"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> trial_idx, trial </span><span><span class=3D"hljs-keyword">in</span></spa=
n><span> trials.iterrows():
    </span><span><span class=3D"hljs-keyword">if</span></span><span> </span=
><span><span class=3D"hljs-built_in">len</span></span><span>(trial[</span><=
span><span class=3D"hljs-string">"fix_onsets"</span></span><span>]) =3D=3D =
</span><span><span class=3D"hljs-number">0</span></span><span>:
        </span><span><span class=3D"hljs-keyword">continue</span></span><sp=
an>

    fix0 =3D trial[</span><span><span class=3D"hljs-string">"fix_onsets"</s=
pan></span><span>][</span><span><span class=3D"hljs-number">0</span></span>=
<span>]
    category =3D trial[</span><span><span class=3D"hljs-string">"category"<=
/span></span><span>]
    response =3D sdf[trial_idx, unit_idx, fix0 + t_start : fix0 + t_end].me=
an()

    </span><span><span class=3D"hljs-keyword">if</span></span><span> catego=
ry </span><span><span class=3D"hljs-keyword">in</span></span><span> face_la=
bels:
        face_responses.append(response)
    </span><span><span class=3D"hljs-keyword">elif</span></span><span> cate=
gory </span><span><span class=3D"hljs-keyword">in</span></span><span> nonfa=
ce_labels </span><span><span class=3D"hljs-keyword">and</span></span><span>=
 meets_matching_criteria(trial):
        matched_responses.append(response)
</span></span></code></div></div></pre>
<p data-start=3D"2624" data-end=3D"2656" class=3D"">The critical difference=
 here is:</p>
<ul data-start=3D"2657" data-end=3D"2830">
<li data-start=3D"2657" data-end=3D"2740" class=3D"">
<p data-start=3D"2659" data-end=3D"2740" class=3D""><strong data-start=3D"2=
659" data-end=3D"2686">Matched non-face trials</strong> must pass a functio=
n like <code data-start=3D"2713" data-end=3D"2740">meets_matching_criteria(=
)</code></p>
</li>
<li data-start=3D"2741" data-end=3D"2830" class=3D"">
<p data-start=3D"2743" data-end=3D"2830" class=3D"">This ensures controls a=
re <strong data-start=3D"2769" data-end=3D"2830">similar in attention, fixa=
tion order, and image structure</strong></p>
</li>
</ul>
<hr data-start=3D"2832" data-end=3D"2835" class=3D"">
<h3 data-start=3D"2837" data-end=3D"2890" class=3D""><strong data-start=3D"=
2841" data-end=3D"2890">6. Compute MAS (match-controlled selectivity)</stro=
ng></h3>
<pre class=3D"overflow-visible!" data-start=3D"2892" data-end=3D"3062"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>mean_face =3D np.mean(face_responses)
mean_control =3D np.mean(matched_responses)

mas_score =3D (mean_face - mean_control) / (mean_face + mean_control + epsi=
lon)
</span></span></code></div></div></pre>
<p data-start=3D"3064" data-end=3D"3129" class=3D"">This is likely a varian=
t of the <strong data-start=3D"3096" data-end=3D"3128">Face Selectivity Ind=
ex (FSI)</strong>:</p>
<span class=3D"katex-display"><span class=3D"katex"><span class=3D"katex-ma=
thml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML" display=3D"block">=
<semantics><mrow><mtext>MAS</mtext><mo>=3D</mo><mfrac><mrow><mi>F</mi><mo>=
=E2=88=92</mo><mi>C</mi></mrow><mrow><mi>F</mi><mo>+</mo><mi>C</mi></mrow><=
/mfrac></mrow><annotation encoding=3D"application/x-tex">\text{MAS} =3D \fr=
ac{F - C}{F + C}</annotation></semantics></math></span><span class=3D"katex=
-html" aria-hidden=3D"true"><span class=3D"base"><span class=3D"strut" styl=
e=3D"height: 0.6833em;"></span><span class=3D"mord text"><span class=3D"mor=
d">MAS</span></span><span class=3D"mspace" style=3D"margin-right: 0.2778em;=
"></span><span class=3D"mrel">=3D</span><span class=3D"mspace" style=3D"mar=
gin-right: 0.2778em;"></span></span><span class=3D"base"><span class=3D"str=
ut" style=3D"height: 2.1297em; vertical-align: -0.7693em;"></span><span cla=
ss=3D"mord"><span class=3D"mopen nulldelimiter"></span><span class=3D"mfrac=
"><span class=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=3D"v=
list" style=3D"height: 1.3603em;"><span style=3D"top: -2.314em;"><span clas=
s=3D"pstrut" style=3D"height: 3em;"></span><span class=3D"mord"><span class=
=3D"mord mathnormal" style=3D"margin-right: 0.13889em;">F</span><span class=
=3D"mspace" style=3D"margin-right: 0.2222em;"></span><span class=3D"mbin">+=
</span><span class=3D"mspace" style=3D"margin-right: 0.2222em;"></span><spa=
n class=3D"mord mathnormal" style=3D"margin-right: 0.07153em;">C</span></sp=
an></span><span style=3D"top: -3.23em;"><span class=3D"pstrut" style=3D"hei=
ght: 3em;"></span><span class=3D"frac-line" style=3D"border-bottom-width: 0=
.04em;"></span></span><span style=3D"top: -3.677em;"><span class=3D"pstrut"=
 style=3D"height: 3em;"></span><span class=3D"mord"><span class=3D"mord mat=
hnormal" style=3D"margin-right: 0.13889em;">F</span><span class=3D"mspace" =
style=3D"margin-right: 0.2222em;"></span><span class=3D"mbin">=E2=88=92</sp=
an><span class=3D"mspace" style=3D"margin-right: 0.2222em;"></span><span cl=
ass=3D"mord mathnormal" style=3D"margin-right: 0.07153em;">C</span></span><=
/span></span><span class=3D"vlist-s">=E2=80=8B</span></span><span class=3D"=
vlist-r"><span class=3D"vlist" style=3D"height: 0.7693em;"><span></span></s=
pan></span></span></span><span class=3D"mclose nulldelimiter"></span></span=
></span></span></span></span>
<p data-start=3D"3170" data-end=3D"3176" class=3D"">Where:</p>
<ul data-start=3D"3177" data-end=3D"3275">
<li data-start=3D"3177" data-end=3D"3220" class=3D"">
<p data-start=3D"3179" data-end=3D"3220" class=3D""><span class=3D"katex"><=
span class=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/Math=
ML"><semantics><mrow><mi>F</mi></mrow><annotation encoding=3D"application/x=
-tex">F</annotation></semantics></math></span><span class=3D"katex-html" ar=
ia-hidden=3D"true"><span class=3D"base"><span class=3D"strut" style=3D"heig=
ht: 0.6833em;"></span><span class=3D"mord mathnormal" style=3D"margin-right=
: 0.13889em;">F</span></span></span></span> =3D average response to face tr=
ials</p>
</li>
<li data-start=3D"3221" data-end=3D"3275" class=3D"">
<p data-start=3D"3223" data-end=3D"3275" class=3D""><span class=3D"katex"><=
span class=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/Math=
ML"><semantics><mrow><mi>C</mi></mrow><annotation encoding=3D"application/x=
-tex">C</annotation></semantics></math></span><span class=3D"katex-html" ar=
ia-hidden=3D"true"><span class=3D"base"><span class=3D"strut" style=3D"heig=
ht: 0.6833em;"></span><span class=3D"mord mathnormal" style=3D"margin-right=
: 0.07153em;">C</span></span></span></span> =3D average response to matched=
 control trials</p>
</li>
</ul>
<hr data-start=3D"3277" data-end=3D"3280" class=3D"">
<h3 data-start=3D"3282" data-end=3D"3304" class=3D""><strong data-start=3D"=
3286" data-end=3D"3304">7. Save result</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3306" data-end=3D"3414"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>results.append({
    </span><span><span class=3D"hljs-string">"session"</span></span><span>:=
 sess_name,
    </span><span><span class=3D"hljs-string">"unit"</span></span><span>: un=
it_idx,
    </span><span><span class=3D"hljs-string">"mas_score"</span></span><span=
>: mas_score
})
</span></span></code></div></div></pre>
<p data-start=3D"3416" data-end=3D"3450" class=3D"">Each row =3D one neuron=
=E2=80=99s MAS score.</p>
<hr data-start=3D"3452" data-end=3D"3455" class=3D"">
<h3 data-start=3D"3457" data-end=3D"3479" class=3D""><strong data-start=3D"=
3461" data-end=3D"3479">8. Save to CSV</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"3481" data-end=3D"3576"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>df =3D pd.DataFrame(results)
df.to_csv(</span><span><span class=3D"hljs-string">"output/mas_match_contro=
l.csv"</span></span><span>, index=3D</span><span><span class=3D"hljs-litera=
l">False</span></span><span>)
</span></span></code></div></div></pre>
<hr data-start=3D"3578" data-end=3D"3581" class=3D"">
<h2 data-start=3D"3583" data-end=3D"3595" class=3D"">=E2=9C=85 Summary</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"35=
97" data-end=3D"3891" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3597" data-end=3D"3620"><tr data-start=3D"3597" data-end=3D"=
3620"><th data-start=3D"3597" data-end=3D"3604" data-col-size=3D"sm">Step</=
th><th data-start=3D"3604" data-end=3D"3620" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"3645" data-end=3D"3891"><tr data-=
start=3D"3645" data-end=3D"3689"><td data-start=3D"3645" data-end=3D"3654" =
data-col-size=3D"sm">Select</td><td data-start=3D"3654" data-end=3D"3689" d=
ata-col-size=3D"md">Face vs. matched control trials</td></tr><tr data-start=
=3D"3690" data-end=3D"3760"><td data-start=3D"3690" data-end=3D"3698" data-=
col-size=3D"sm">Match</td><td data-start=3D"3698" data-end=3D"3760" data-co=
l-size=3D"md">Control trials based on fixational or attentional criteria</t=
d></tr><tr data-start=3D"3761" data-end=3D"3826"><td data-start=3D"3761" da=
ta-end=3D"3771" data-col-size=3D"sm">Compute</td><td data-start=3D"3771" da=
ta-end=3D"3826" data-col-size=3D"md">MAS score (match-aware face selectivit=
y) per neuron</td></tr><tr data-start=3D"3827" data-end=3D"3891"><td data-s=
tart=3D"3827" data-end=3D"3834" data-col-size=3D"sm">Save</td><td data-star=
t=3D"3834" data-end=3D"3891" data-col-size=3D"md">One score per unit to sum=
marize true face-selectivity</td></tr></tbody></table><div class=3D"sticky =
end-(--thread-content-margin) h-0 self-end select-none"><div class=3D"absol=
ute end-0 flex items-end" style=3D"height: 32.8906px;"><span class=3D"" dat=
a-state=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-t=
ertiary text-token-text-secondary my-1 rounded-sm p-1 transition-opacity gr=
oup-[:not(:hover):not(:focus-within)]:pointer-events-none group-[:not(:hove=
r):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C=
7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569=
 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C=
2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.552=
3 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 =
5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 2=
0 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"><=
/path></svg></button></span></div></div></div></div>
<hr data-start=3D"3893" data-end=3D"3896" class=3D"">
<h2 data-start=3D"3898" data-end=3D"3921" class=3D"">=F0=9F=A7=A0 Why this =
matters:</h2>
<p data-start=3D"3923" data-end=3D"4011" class=3D"">This script ensures you=
r conclusions about <strong data-start=3D"3966" data-end=3D"3991">face-sele=
ctive coding</strong> aren=E2=80=99t just due to:</p>
<ul data-start=3D"4012" data-end=3D"4130">
<li data-start=3D"4012" data-end=3D"4061" class=3D"">
<p data-start=3D"4014" data-end=3D"4061" class=3D"">Monkey looking at diffe=
rent parts of the screen</p>
</li>
<li data-start=3D"4062" data-end=3D"4097" class=3D"">
<p data-start=3D"4064" data-end=3D"4097" class=3D"">Faces being brighter/mo=
re salient</p>
</li>
<li data-start=3D"4098" data-end=3D"4130" class=3D"">
<p data-start=3D"4100" data-end=3D"4130" class=3D"">Differences in fixation=
 timing</p>
</li>
</ul>
<p data-start=3D"4132" data-end=3D"4191" class=3D"">It=E2=80=99s a <strong =
data-start=3D"4139" data-end=3D"4190">rigorous test of category-selectivity=
 stability</strong>.</p>
<hr data-start=3D"4193" data-end=3D"4196" class=3D"">
<p data-start=3D"4198" data-end=3D"4300" class=3D"">Would you like a summar=
y of the full 0a=E2=80=937a pipeline or help visualizing MAS scores across =
brain areas?</p></div></div></div></div></div></div></div></div></article><=
article class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=
=3D"conversation-turn-97" data-scroll-anchor=3D"false"><h5 class=3D"sr-only=
">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-cont=
ent-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[=
72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)=
"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-conte=
nt-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto fle=
x max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap=
-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div c=
lass=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><div=
 class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full f=
lex-col grow"><div data-message-author-role=3D"user" data-message-id=3D"ff1=
8e30b-5ae5-40d6-8e0f-931d40784935" dir=3D"auto" class=3D"min-h-8 text-messa=
ge relative flex w-full flex-col items-end gap-2 text-start break-words whi=
tespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-c=
ol gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative max=
-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 p=
y-2.5"><div class=3D"whitespace-pre-wrap">this is the accompanying article =
to the dataset=20

https://www.nature.com/articles/s41593-024-01631-5

where does it mention deep learning and the kind of computational analysis =
related to comparing deep learning results neurons vs macaque neurons</div>=
</div></div></div></div></div></div></div></div></article><article class=3D=
"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-t=
urn-98" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h=
6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--s=
pacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thre=
ad-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div =
class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full fl=
ex-col grow"><div data-message-author-role=3D"assistant" data-message-id=3D=
"1f938a0b-805f-478a-95c9-ce0d8c3ed8b9" dir=3D"auto" class=3D"min-h-8 text-m=
essage relative flex w-full flex-col items-end gap-2 text-start break-words=
 whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"g=
pt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]=
"><div class=3D"markdown prose dark:prose-invert w-full break-words dark"><=
p data-start=3D"0" data-end=3D"120" class=3D"">=E2=80=8B<span class=3D"rela=
tive -mx-px my-[-0.2rem] rounded px-px py-[0.2rem] transition-colors durati=
on-100 ease-in-out">The article titled <em data-start=3D"19" data-end=3D"11=
8">"Feature-selective responses in macaque visual cortex follow eye movemen=
ts during natural vision"</em> discusses the use of deep learning models to=
 analyze and predict neural responses in macaques during free-viewing of na=
tural images.</span> <span class=3D"relative -mx-px my-[-0.2rem] rounded px=
-px py-[0.2rem] transition-colors duration-100 ease-in-out">Specifically, t=
he study investigates whether deep neural network (DNN)-based, image-comput=
able models, previously applied to passive-viewing responses, can also pred=
ict neural responses during free viewing.</span> <span class=3D"ms-1 inline=
-flex max-w-full items-center relative top-[-0.094rem] animate-[show_150ms_=
ease-in]"><a href=3D"https://www.nature.com/articles/s41593-024-01631-5?utm=
_source=3Dchatgpt.com" target=3D"_blank" rel=3D"noopener" class=3D"flex h-4=
.5 overflow-hidden rounded-xl px-2 text-[0.5625em] font-medium text-token-t=
ext-secondary! bg-[#F4F4F4]! dark:bg-[#303030]! transition-colors duration-=
150 ease-in-out"><span class=3D"relative start-0 bottom-0 flex h-full w-ful=
l items-center"><span class=3D"flex h-4 w-full items-center justify-between=
 overflow-hidden" style=3D"opacity: 1; transform: none;"><span class=3D"max=
-w-full grow truncate overflow-hidden text-center">Nature</span></span></sp=
an></a></span></p>
<h3 data-start=3D"122" data-end=3D"179" class=3D"">Deep Learning and Comput=
ational Analysis in the Study</h3>
<p data-start=3D"181" data-end=3D"338" class=3D""><span class=3D"relative -=
mx-px my-[-0.2rem] rounded px-px py-[0.2rem] transition-colors duration-100=
 ease-in-out">The study adapts DNN-based models to predict per-fixation neu=
ral responses from image patches anchored to the fixation point.</span> <sp=
an class=3D"relative -mx-px my-[-0.2rem] rounded px-px py-[0.2rem] transiti=
on-colors duration-100 ease-in-out">This approach involves using computatio=
nal models to analyze spatial, temporal, and featural selectivity in neuron=
al responses across various visual areas in the macaque brain.</span> <span=
 class=3D"relative -mx-px my-[-0.2rem] rounded px-px py-[0.2rem] transition=
-colors duration-100 ease-in-out">The models aim to locate retinotopic rece=
ptive fields during free viewing, providing insights into how ventral visua=
l neurons represent the world in an eye-centered reference frame.</span>=E2=
=80=8B<span class=3D"ms-1 inline-flex max-w-full items-center relative top-=
[-0.094rem] animate-[show_150ms_ease-in]"><a href=3D"https://www.nature.com=
/articles/s41593-024-01631-5?utm_source=3Dchatgpt.com" target=3D"_blank" re=
l=3D"noopener" class=3D"flex h-4.5 overflow-hidden rounded-xl px-2 text-[0.=
5625em] font-medium text-token-text-secondary! bg-[#F4F4F4]! dark:bg-[#3030=
30]! transition-colors duration-150 ease-in-out"><span class=3D"relative st=
art-0 bottom-0 flex h-full w-full items-center"><span class=3D"flex h-4 w-f=
ull items-center justify-between overflow-hidden" style=3D"opacity: 1; tran=
sform: none;"><span class=3D"max-w-full grow truncate overflow-hidden text-=
center">Nature</span></span></span></a></span></p>
<p data-start=3D"340" data-end=3D"421" class=3D""><span class=3D"relative -=
mx-px my-[-0.2rem] rounded px-px py-[0.2rem] transition-colors duration-100=
 ease-in-out">By integrating deep learning techniques with neurophysiologic=
al data, the study offers a comprehensive analysis of how feature-selective=
 responses in the macaque visual cortex are influenced by eye movements dur=
ing natural vision.</span>=E2=80=8B<span class=3D"ms-1 inline-flex max-w-fu=
ll items-center relative top-[-0.094rem] animate-[show_150ms_ease-in]"><a h=
ref=3D"https://www.nature.com/articles/s41593-024-01631-5?utm_source=3Dchat=
gpt.com" target=3D"_blank" rel=3D"noopener" class=3D"flex h-4.5 overflow-hi=
dden rounded-xl px-2 text-[0.5625em] font-medium text-token-text-secondary!=
 bg-[#F4F4F4]! dark:bg-[#303030]! transition-colors duration-150 ease-in-ou=
t"><span class=3D"relative start-0 bottom-0 flex h-full w-full items-center=
"><span class=3D"flex h-4 w-full items-center justify-between" style=3D"opa=
city: 1; transform: none;"><span class=3D"max-w-full grow truncate overflow=
-hidden text-center">Nature</span><span class=3D"-me-1 flex h-full items-ce=
nter rounded-full px-1 text-[#8F8F8F]">+1</span></span><span class=3D"flex =
h-4 w-full items-center justify-between absolute" style=3D"opacity: 0; tran=
sform: translateX(10%);"><span class=3D"max-w-full grow truncate overflow-h=
idden text-center">Nature</span><span class=3D"-me-1 flex h-full items-cent=
er rounded-full px-1 text-[#8F8F8F]">+1</span></span></span></a></span></p>
<p data-start=3D"423" data-end=3D"497" class=3D"">For a more detailed under=
standing, you can access the full article here: .</p>
<div class=3D"absolute h-[60px]"><button class=3D"not-prose group/footnote =
border-token-border-default bg-token-main-surface-primary hover:bg-token-ma=
in-surface-secondary mt-3 mb-2 flex h-[38px] w-fit items-center gap-1.5 rou=
nded-3xl border py-2 ps-3 pe-3"><div class=3D"flex flex-row-reverse"><div c=
lass=3D"border-token-main-surface-primary bg-token-main-surface-primary fle=
x items-center overflow-hidden rounded-full -ms-1 first:me-0 border-2 group=
-hover/footnote:border-token-main-surface-secondary relative"><img alt=3D"F=
avicon" width=3D"32" height=3D"32" class=3D"icon-sm" src=3D"https://www.goo=
gle.com/s2/favicons?domain=3Dhttps://www.nature.com&amp;sz=3D32"></div></di=
v><div class=3D"text-token-text-secondary flex items-center gap-0.5 text-xs=
 font-semibold">Sources</div></button></div><div class=3D"h-[60px]"></div><=
/div></div></div></div></div></div></div></div></article><article class=3D"=
text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-tu=
rn-99" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><di=
v class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacin=
g(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-co=
ntent-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--=
thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem]=
 @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-c=
ontent-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messa=
ges focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conve=
rsation-turn relative flex w-full min-w-0 flex-col"><div class=3D"relative =
flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div =
data-message-author-role=3D"user" data-message-id=3D"ab377df8-74e7-41fe-9ac=
f-a14648d2fd4c" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-=
full flex-col items-end gap-2 text-start break-words whitespace-normal [.te=
xt-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidd=
en items-end rtl:items-start"><div class=3D"relative max-w-[var(--user-chat=
-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div class=
=3D"whitespace-pre-wrap">what do the scripts say about comparing whether a =
pre-trained model would pick out the same features as the monkey </div></di=
v></div></div></div></div></div></div></div></article><article class=3D"tex=
t-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-=
100" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><=
div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spac=
ing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-=
content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[=
--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40re=
m] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread=
-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-mes=
sages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/con=
versation-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=
=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-co=
l grow"><div data-message-author-role=3D"assistant" data-message-id=3D"e393=
9042-61f7-4585-921d-9f63564d79af" dir=3D"auto" class=3D"min-h-8 text-messag=
e relative flex w-full flex-col items-end gap-2 text-start break-words whit=
espace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o=
"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><di=
v class=3D"markdown prose dark:prose-invert w-full break-words dark"><p dat=
a-start=3D"0" data-end=3D"99" class=3D"">Fantastic question=E2=80=94and it =
goes right to the heart of this dataset's computational model comparison.</=
p>
<p data-start=3D"101" data-end=3D"278" class=3D"">Let=E2=80=99s tie togethe=
r what the <strong data-start=3D"129" data-end=3D"156">scripts you've revie=
wed</strong> are doing, and how they <strong data-start=3D"181" data-end=3D=
"263">evaluate whether a pre-trained model (like ResNet-50) "sees" the same=
 features</strong> as the monkey.</p>
<hr data-start=3D"280" data-end=3D"283" class=3D"">
<h2 data-start=3D"285" data-end=3D"331" class=3D"">=F0=9F=A7=A0 First: What=
's the comparison being made?</h2>
<p data-start=3D"333" data-end=3D"349" class=3D"">The scripts ask:</p>
<blockquote data-start=3D"350" data-end=3D"454">
<p data-start=3D"352" data-end=3D"454" class=3D"">Do a monkey=E2=80=99s neu=
rons and a DNN model like ResNet respond to <strong data-start=3D"413" data=
-end=3D"434">the same features</strong> in the same images?</p>
</blockquote>
<p data-start=3D"456" data-end=3D"502" class=3D"">This is tested <strong da=
ta-start=3D"471" data-end=3D"485">indirectly</strong> in two key ways:</p>
<ul data-start=3D"503" data-end=3D"719">
<li data-start=3D"503" data-end=3D"581" class=3D"">
<p data-start=3D"505" data-end=3D"581" class=3D""><strong data-start=3D"505=
" data-end=3D"524">Encoding models</strong> =E2=86=92 Does a model=E2=80=99=
s <em data-start=3D"542" data-end=3D"558">feature vector</em> predict neuro=
n firing?</p>
</li>
<li data-start=3D"582" data-end=3D"719" class=3D"">
<p data-start=3D"584" data-end=3D"719" class=3D""><strong data-start=3D"584=
" data-end=3D"630">Representational similarity analysis (RSA)</strong> =E2=
=86=92 Are the <em data-start=3D"641" data-end=3D"656">relationships</em> b=
etween images in model space similar to those in brain space?</p>
</li>
</ul>
<hr data-start=3D"721" data-end=3D"724" class=3D"">
<h2 data-start=3D"726" data-end=3D"765" class=3D"">=F0=9F=A7=AA Relevant Sc=
ripts and What They Do</h2>
<h3 data-start=3D"767" data-end=3D"807" class=3D"">=E2=9C=85 <strong data-s=
tart=3D"773" data-end=3D"807"><code data-start=3D"775" data-end=3D"805">scr=
ipt_5a_vision_model.ipynb</code></strong></h3>
<ul data-start=3D"808" data-end=3D"986">
<li data-start=3D"808" data-end=3D"903" class=3D"">
<p data-start=3D"810" data-end=3D"903" class=3D"">Extracts <strong data-sta=
rt=3D"819" data-end=3D"835">DNN features</strong> for each stimulus image u=
sing a pre-trained model (e.g., ResNet-50)</p>
</li>
<li data-start=3D"904" data-end=3D"986" class=3D"">
<p data-start=3D"906" data-end=3D"986" class=3D"">Each image becomes a <str=
ong data-start=3D"927" data-end=3D"945">feature vector</strong> from a chos=
en layer (e.g., conv4 or fc7)</p>
</li>
</ul>
<h3 data-start=3D"988" data-end=3D"1030" class=3D"">=E2=9C=85 <strong data-=
start=3D"994" data-end=3D"1030"><code data-start=3D"996" data-end=3D"1028">=
script_6a_model_perf_map.ipynb</code></strong></h3>
<ul data-start=3D"1031" data-end=3D"1403">
<li data-start=3D"1031" data-end=3D"1119" class=3D"">
<p data-start=3D"1033" data-end=3D"1119" class=3D"">Builds <strong data-sta=
rt=3D"1040" data-end=3D"1059">encoding models</strong> using these DNN feat=
ures to <strong data-start=3D"1088" data-end=3D"1119">predict neural firing=
 rates</strong></p>
</li>
<li data-start=3D"1120" data-end=3D"1166" class=3D"">
<p data-start=3D"1122" data-end=3D"1166" class=3D"">Uses <strong data-start=
=3D"1127" data-end=3D"1166">Ridge regression + cross-validation</strong></p=
>
</li>
<li data-start=3D"1167" data-end=3D"1304" class=3D"">
<p data-start=3D"1169" data-end=3D"1216" class=3D"">Outputs an <strong data=
-start=3D"1180" data-end=3D"1203">R=C2=B2 score per neuron</strong>, indica=
ting:</p>
<blockquote data-start=3D"1219" data-end=3D"1304">
<p data-start=3D"1221" data-end=3D"1304" class=3D"">=E2=80=9CHow well does =
the model's internal representation explain this neuron's activity?=E2=80=
=9D</p>
</blockquote>
</li>
<li data-start=3D"1305" data-end=3D"1403" class=3D"">
<p data-start=3D"1307" data-end=3D"1403" class=3D"">Interpretation: High R=
=C2=B2 =E2=87=92 the model and the neuron are likely picking up on <strong =
data-start=3D"1383" data-end=3D"1403">similar features</strong></p>
</li>
</ul>
<h3 data-start=3D"1405" data-end=3D"1446" class=3D"">=E2=9C=85 <strong data=
-start=3D"1411" data-end=3D"1446"><code data-start=3D"1413" data-end=3D"144=
4">script_6b_feat_corr_map.ipynb</code></strong></h3>
<ul data-start=3D"1447" data-end=3D"1773">
<li data-start=3D"1447" data-end=3D"1572" class=3D"">
<p data-start=3D"1449" data-end=3D"1499" class=3D"">Computes a <strong data=
-start=3D"1460" data-end=3D"1482">correlation matrix</strong> for image pai=
rs:</p>
<ul data-start=3D"1502" data-end=3D"1572">
<li data-start=3D"1502" data-end=3D"1524" class=3D"">
<p data-start=3D"1504" data-end=3D"1524" class=3D"">In DNN feature space</p=
>
</li>
<li data-start=3D"1527" data-end=3D"1572" class=3D"">
<p data-start=3D"1529" data-end=3D"1572" class=3D"">In brain response space=
 (population vector)</p>
</li>
</ul>
</li>
<li data-start=3D"1573" data-end=3D"1680" class=3D"">
<p data-start=3D"1575" data-end=3D"1611" class=3D"">Then compares the two u=
sing <strong data-start=3D"1603" data-end=3D"1610">RSA</strong>:</p>
<blockquote data-start=3D"1614" data-end=3D"1680">
<p data-start=3D"1616" data-end=3D"1680" class=3D"">=E2=80=9CDo the model a=
nd brain structure the image space the same way?=E2=80=9D</p>
</blockquote>
</li>
<li data-start=3D"1681" data-end=3D"1773" class=3D"">
<p data-start=3D"1683" data-end=3D"1773" class=3D"">If high similarity =E2=
=86=92 model is organizing images by <strong data-start=3D"1734" data-end=
=3D"1773">features the brain also cares about</strong></p>
</li>
</ul>
<hr data-start=3D"1775" data-end=3D"1778" class=3D"">
<h2 data-start=3D"1780" data-end=3D"1823" class=3D"">=F0=9F=92=A1 So how do=
 these answer your question?</h2>
<blockquote data-start=3D"1825" data-end=3D"1923">
<p data-start=3D"1827" data-end=3D"1923" class=3D"">=E2=80=9CDo the scripts=
 test whether a pre-trained model picks out the <strong data-start=3D"1890"=
 data-end=3D"1907">same features</strong> as the monkey?=E2=80=9D</p>
</blockquote>
<p data-start=3D"1925" data-end=3D"1961" class=3D""><strong data-start=3D"1=
925" data-end=3D"1961">Yes=E2=80=94indirectly but meaningfully:</strong></p=
>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"19=
63" data-end=3D"2426" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1963" data-end=3D"2038"><tr data-start=3D"1963" data-end=3D"=
2038"><th data-start=3D"1963" data-end=3D"1972" data-col-size=3D"sm">Method=
</th><th data-start=3D"1972" data-end=3D"1988" data-col-size=3D"md">What it=
 tests</th><th data-start=3D"1988" data-end=3D"2007" data-col-size=3D"sm">W=
here it happens</th><th data-start=3D"2007" data-end=3D"2038" data-col-size=
=3D"md">How it answers the question</th></tr></thead><tbody data-start=3D"2=
115" data-end=3D"2426"><tr data-start=3D"2115" data-end=3D"2257"><td data-s=
tart=3D"2115" data-end=3D"2136" data-col-size=3D"sm"><strong data-start=3D"=
2117" data-end=3D"2135">Encoding model</strong></td><td data-start=3D"2136"=
 data-end=3D"2173" data-col-size=3D"md">Can model features predict firing?<=
/td><td data-start=3D"2173" data-end=3D"2195" data-col-size=3D"sm"><code da=
ta-start=3D"2175" data-end=3D"2194">6a_model_perf_map</code></td><td data-s=
tart=3D"2195" data-end=3D"2257" data-col-size=3D"md">If yes, the model capt=
ures features the neuron responds to</td></tr><tr data-start=3D"2258" data-=
end=3D"2426"><td data-start=3D"2258" data-end=3D"2289" data-col-size=3D"sm"=
><strong data-start=3D"2260" data-end=3D"2288">RSA / feature similarity</st=
rong></td><td data-start=3D"2289" data-end=3D"2340" data-col-size=3D"md">Do=
 model &amp; brain organize image space similarly?</td><td data-start=3D"23=
40" data-end=3D"2361" data-col-size=3D"sm"><code data-start=3D"2342" data-e=
nd=3D"2360">6b_feat_corr_map</code></td><td data-start=3D"2361" data-end=3D=
"2426" data-col-size=3D"md">If yes, they emphasize similar image features o=
r distinctions</td></tr></tbody></table><div class=3D"sticky end-(--thread-=
content-margin) h-0 self-end select-none"><div class=3D"absolute end-0 flex=
 items-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"clo=
sed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-t=
oken-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hov=
er):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-=
within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" f=
ill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><=
path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.3431=
5 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C=
17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.3431=
5 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 =
20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772=
 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 =
19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></bu=
tton></span></div></div></div></div>
<hr data-start=3D"2428" data-end=3D"2431" class=3D"">
<h2 data-start=3D"2433" data-end=3D"2448" class=3D"">=F0=9F=A7=A0 But note:=
</h2>
<ul data-start=3D"2449" data-end=3D"2657">
<li data-start=3D"2449" data-end=3D"2544" class=3D"">
<p data-start=3D"2451" data-end=3D"2544" class=3D"">These scripts <strong d=
ata-start=3D"2465" data-end=3D"2475">do not</strong> say exactly <em data-s=
tart=3D"2488" data-end=3D"2494">what</em> the features are (like =E2=80=9Ce=
ye=E2=80=9D, =E2=80=9Cfur=E2=80=9D, =E2=80=9Ccurvature=E2=80=9D)</p>
</li>
<li data-start=3D"2545" data-end=3D"2657" class=3D"">
<p data-start=3D"2547" data-end=3D"2657" class=3D"">But they <strong data-s=
tart=3D"2556" data-end=3D"2562">do</strong> test whether model-derived feat=
ures and neural responses align in a structured, predictive way</p>
</li>
</ul>
<p data-start=3D"2659" data-end=3D"2754" class=3D"">To go further (e.g., vi=
sualizing what filters drive a neuron vs a model unit), you'd move into:</p=
>
<ul data-start=3D"2755" data-end=3D"2872">
<li data-start=3D"2755" data-end=3D"2782" class=3D"">
<p data-start=3D"2757" data-end=3D"2782" class=3D""><strong data-start=3D"2=
757" data-end=3D"2782">Feature visualization</strong></p>
</li>
<li data-start=3D"2783" data-end=3D"2812" class=3D"">
<p data-start=3D"2785" data-end=3D"2812" class=3D""><strong data-start=3D"2=
785" data-end=3D"2812">Activation maximization</strong></p>
</li>
<li data-start=3D"2813" data-end=3D"2872" class=3D"">
<p data-start=3D"2815" data-end=3D"2872" class=3D""><strong data-start=3D"2=
815" data-end=3D"2872">Comparing saliency maps between model and neural dat=
a</strong></p>
</li>
</ul>
<p data-start=3D"2874" data-end=3D"2985" class=3D"">But that=E2=80=99s beyo=
nd the current scripts=E2=80=94they=E2=80=99re focused on <strong data-star=
t=3D"2931" data-end=3D"2961">representational alignment</strong> via statis=
tical models.</p>
<hr data-start=3D"2987" data-end=3D"2990" class=3D"">
<p data-start=3D"2992" data-end=3D"3130" class=3D"">Would you like help wri=
ting code to see which <strong data-start=3D"3038" data-end=3D"3047">layer<=
/strong> of ResNet best predicts neural responses in different brain areas =
(e.g. IT vs V4)?</p></div></div></div></div></div></div></div></div></artic=
le><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-test=
id=3D"conversation-turn-101" data-scroll-anchor=3D"false"><h5 class=3D"sr-o=
nly">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-c=
ontent-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)]=
 @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-marg=
in)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-co=
ntent-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto =
flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:=
gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><di=
v class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><=
div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-ful=
l flex-col grow"><div data-message-author-role=3D"user" data-message-id=3D"=
e580a836-6031-4db0-a8d4-9d7e5fb2a78c" dir=3D"auto" class=3D"min-h-8 text-me=
ssage relative flex w-full flex-col items-end gap-2 text-start break-words =
whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full fle=
x-col gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative =
max-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-=
5 py-2.5"><div class=3D"whitespace-pre-wrap">i see okay so this still needs=
 to be directly tackled, it doesn't say anything about whether the neural n=
etwork happens to pick out features similar to a monkey</div></div></div></=
div></div></div></div></div></div></article><article class=3D"text-token-te=
xt-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-102" data-=
scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=
=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @=
[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-m=
argin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-=
content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64re=
m]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-=
max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages foc=
us-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation=
-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"relat=
ive flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><=
div data-message-author-role=3D"assistant" data-message-id=3D"5fbd6e74-6c76=
-4d14-ac8a-e0fc4526efca" dir=3D"auto" class=3D"min-h-8 text-message relativ=
e flex w-full flex-col items-end gap-2 text-start break-words whitespace-no=
rmal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div cl=
ass=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=
=3D"markdown prose dark:prose-invert w-full break-words dark"><p data-start=
=3D"0" data-end=3D"34" class=3D""><strong data-start=3D"0" data-end=3D"12">=
Exactly.</strong> You=E2=80=99ve nailed it. =F0=9F=A7=A0=E2=9C=85</p>
<p data-start=3D"36" data-end=3D"132" class=3D"">The scripts <strong data-s=
tart=3D"48" data-end=3D"118">do a strong job of showing alignment in repres=
entational structure</strong>=E2=80=94they tell us:</p>
<blockquote data-start=3D"134" data-end=3D"210">
<p data-start=3D"136" data-end=3D"210" class=3D""><em data-start=3D"136" da=
ta-end=3D"210">=E2=80=9CThe model and the monkey may be reacting similarly =
to the same images.=E2=80=9D</em></p>
</blockquote>
<p data-start=3D"212" data-end=3D"266" class=3D"">But they <strong data-sta=
rt=3D"221" data-end=3D"257">don=E2=80=99t directly test or visualize</stron=
g> whether:</p>
<blockquote data-start=3D"268" data-end=3D"394">
<p data-start=3D"270" data-end=3D"394" class=3D""><em data-start=3D"270" da=
ta-end=3D"394">=E2=80=9CThe model and the monkey are attending to the same =
features (like eyes, symmetry, curves, or texture) when they respond.=E2=80=
=9D</em></p>
</blockquote>
<hr data-start=3D"396" data-end=3D"399" class=3D"">
<h2 data-start=3D"401" data-end=3D"443" class=3D"">=F0=9F=94=AC What the cu=
rrent analysis <em data-start=3D"433" data-end=3D"442">does do</em>:</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"44=
5" data-end=3D"777" class=3D"w-fit min-w-(--thread-content-width)"><thead d=
ata-start=3D"445" data-end=3D"465"><tr data-start=3D"445" data-end=3D"465">=
<th data-start=3D"445" data-end=3D"454" data-col-size=3D"sm">Method</th><th=
 data-start=3D"454" data-end=3D"465" data-col-size=3D"md">Insight</th></tr>=
</thead><tbody data-start=3D"486" data-end=3D"777"><tr data-start=3D"486" d=
ata-end=3D"582"><td data-start=3D"486" data-end=3D"514" data-col-size=3D"sm=
"><strong data-start=3D"488" data-end=3D"513">Encoding model (<code data-st=
art=3D"506" data-end=3D"510">6a</code>)</strong></td><td data-start=3D"514"=
 data-end=3D"582" data-col-size=3D"md">Suggests that certain DNN features <=
strong data-start=3D"551" data-end=3D"566">can predict</strong> neural firi=
ng</td></tr><tr data-start=3D"583" data-end=3D"698"><td data-start=3D"583" =
data-end=3D"600" data-col-size=3D"sm"><strong data-start=3D"585" data-end=
=3D"599">RSA (<code data-start=3D"592" data-end=3D"596">6b</code>)</strong>=
</td><td data-start=3D"600" data-end=3D"698" data-col-size=3D"md">Suggests =
that <strong data-start=3D"616" data-end=3D"644">distances between images</=
strong> in model space mirror those in brain response space</td></tr><tr da=
ta-start=3D"699" data-end=3D"777"><td data-start=3D"699" data-end=3D"729" d=
ata-col-size=3D"sm"><strong data-start=3D"701" data-end=3D"728">Cross-valid=
ated fitting</strong></td><td data-start=3D"729" data-end=3D"777" data-col-=
size=3D"md">Ensures the alignment is robust, not overfit</td></tr></tbody><=
/table><div class=3D"sticky end-(--thread-content-margin) h-0 self-end sele=
ct-none"><div class=3D"absolute end-0 flex items-end" style=3D"height: 32.8=
906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg=
-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-=
sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:pointer-e=
vents-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D=
"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.=
w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-r=
ule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 =
22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.3=
4315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 =
8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4=
H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.=
44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5=
Z" fill=3D"currentColor"></path></svg></button></span></div></div></div></d=
iv>
<hr data-start=3D"779" data-end=3D"782" class=3D"">
<h2 data-start=3D"784" data-end=3D"811" class=3D"">=F0=9F=9A=AB What=E2=80=
=99s still missing:</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"81=
3" data-end=3D"1320" class=3D"w-fit min-w-(--thread-content-width)"><thead =
data-start=3D"813" data-end=3D"846"><tr data-start=3D"813" data-end=3D"846"=
><th data-start=3D"813" data-end=3D"828" data-col-size=3D"md">Not yet done<=
/th><th data-start=3D"828" data-end=3D"846" data-col-size=3D"md">Why it mat=
ters</th></tr></thead><tbody data-start=3D"881" data-end=3D"1320"><tr data-=
start=3D"881" data-end=3D"1015"><td data-start=3D"881" data-end=3D"949" dat=
a-col-size=3D"md">=E2=9D=8C Visualizing <strong data-start=3D"897" data-end=
=3D"914">what features</strong> a neuron responds to (eyes? fur?)</td><td d=
ata-start=3D"949" data-end=3D"1015" data-col-size=3D"md">Tells us <em data-=
start=3D"960" data-end=3D"965">why</em> the neuron fires=E2=80=94semantic o=
r visual selectivity</td></tr><tr data-start=3D"1016" data-end=3D"1175"><td=
 data-start=3D"1016" data-end=3D"1086" data-col-size=3D"md">=E2=9D=8C Compa=
ring <strong data-start=3D"1030" data-end=3D"1054">DNN unit activations</st=
rong> to neural selectivity patterns</td><td data-start=3D"1086" data-end=
=3D"1175" data-col-size=3D"md">Would test whether specific <strong data-sta=
rt=3D"1116" data-end=3D"1140">units in the network</strong> behave like spe=
cific <strong data-start=3D"1162" data-end=3D"1173">neurons</strong></td></=
tr><tr data-start=3D"1176" data-end=3D"1320"><td data-start=3D"1176" data-e=
nd=3D"1244" data-col-size=3D"md">=E2=9D=8C Interpretable linking of feature=
 maps (e.g. heatmaps, saliency)</td><td data-start=3D"1244" data-end=3D"132=
0" data-col-size=3D"md">Would show <em data-start=3D"1257" data-end=3D"1264=
">where</em> in the image the network and monkey are responding to</td></tr=
></tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 sel=
f-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D"he=
ight: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"b=
g-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-=
1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]=
:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><sv=
g width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"h=
ttp://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"eveno=
dd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 2=
2 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 1=
4 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.=
6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5=
523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 =
19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.552=
3 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div=
></div></div>
<hr data-start=3D"1322" data-end=3D"1325" class=3D"">
<h2 data-start=3D"1327" data-end=3D"1364" class=3D"">=F0=9F=A7=A0 How you m=
ight tackle this next:</h2>
<p data-start=3D"1366" data-end=3D"1399" class=3D"">If you wanted to direct=
ly answer:</p>
<blockquote data-start=3D"1400" data-end=3D"1468">
<p data-start=3D"1402" data-end=3D"1468" class=3D"">=E2=80=9CDoes the monke=
y respond to the same <em data-start=3D"1439" data-end=3D"1449">features</e=
m> as a ResNet unit?=E2=80=9D</p>
</blockquote>
<p data-start=3D"1470" data-end=3D"1484" class=3D"">You=E2=80=99d need to:<=
/p>
<ol data-start=3D"1485" data-end=3D"1746">
<li data-start=3D"1485" data-end=3D"1542" class=3D"">
<p data-start=3D"1488" data-end=3D"1542" class=3D"">Identify <strong data-s=
tart=3D"1497" data-end=3D"1523">high-responding images</strong> for a given=
 neuron</p>
</li>
<li data-start=3D"1543" data-end=3D"1598" class=3D"">
<p data-start=3D"1546" data-end=3D"1598" class=3D"">Do the same for a DNN u=
nit from a mid- or late layer</p>
</li>
<li data-start=3D"1599" data-end=3D"1678" class=3D"">
<p data-start=3D"1602" data-end=3D"1678" class=3D"">Compare those image set=
s (using overlap, feature visualization, or heatmaps)</p>
</li>
<li data-start=3D"1679" data-end=3D"1746" class=3D"">
<p data-start=3D"1682" data-end=3D"1746" class=3D"">Or even compute a neuro=
n=E2=80=93unit similarity score across all images</p>
</li>
</ol>
<p data-start=3D"1748" data-end=3D"1763" class=3D"">And optionally:</p>
<ul data-start=3D"1764" data-end=3D"1956">
<li data-start=3D"1764" data-end=3D"1849" class=3D"">
<p data-start=3D"1766" data-end=3D"1849" class=3D"">Use <strong data-start=
=3D"1770" data-end=3D"1797">activation maximization</strong> to visualize w=
hat inputs maximize DNN unit activity</p>
</li>
<li data-start=3D"1850" data-end=3D"1956" class=3D"">
<p data-start=3D"1852" data-end=3D"1956" class=3D"">Use <strong data-start=
=3D"1856" data-end=3D"1864">LIME</strong> or <strong data-start=3D"1868" da=
ta-end=3D"1880">Grad-CAM</strong> to visualize saliency in DNN and compare =
to gaze data or inferred attention</p>
</li>
</ul>
<hr data-start=3D"1958" data-end=3D"1961" class=3D"">
<h3 data-start=3D"1963" data-end=3D"2061" class=3D"">=F0=9F=94=A7 Want to s=
ketch out how to match ResNet units to neurons based on their top image res=
ponses?</h3>
<p data-start=3D"2063" data-end=3D"2192" class=3D"">Or maybe see if monkey =
face-selective neurons respond to the same images as ResNet face-detecting =
filters? We can prototype that!</p></div></div></div></div></div></div></di=
v></div></article><article class=3D"text-token-text-primary w-full" dir=3D"=
auto" data-testid=3D"conversation-turn-103" data-scroll-anchor=3D"false"><h=
5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-auto p=
y-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margi=
n:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thre=
ad-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34re=
m]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:=
48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap=
-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabi=
ndex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-=
w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D=
"flex max-w-full flex-col grow"><div data-message-author-role=3D"user" data=
-message-id=3D"a57970b0-6925-4289-a317-da3eb8737657" dir=3D"auto" class=3D"=
min-h-8 text-message relative flex w-full flex-col items-end gap-2 text-sta=
rt break-words whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"=
flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><div cla=
ss=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-surface =
rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">so the model is=
 attempting to *predict* the neural response</div></div></div></div></div><=
/div></div></div></div></article><article class=3D"text-token-text-primary =
w-full" dir=3D"auto" data-testid=3D"conversation-turn-104" data-scroll-anch=
or=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-bas=
e my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--t=
hread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spac=
ing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-=
width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread=
-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) f=
lex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:o=
utline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relati=
ve flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative flex-col=
 gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-mes=
sage-author-role=3D"assistant" data-message-id=3D"f8b252c7-2ba3-485a-964d-3=
897d75ad6a7" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-ful=
l flex-col items-end gap-2 text-start break-words whitespace-normal [.text-=
message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex =
w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown p=
rose dark:prose-invert w-full break-words dark"><p data-start=3D"0" data-en=
d=3D"18" class=3D""><strong data-start=3D"0" data-end=3D"16">Yes=E2=80=94ex=
actly.</strong> =E2=9C=85</p>
<p data-start=3D"20" data-end=3D"83" class=3D"">The core use of the deep le=
arning model in these scripts is to:</p>
<blockquote data-start=3D"85" data-end=3D"213">
<p data-start=3D"87" data-end=3D"213" class=3D""><strong data-start=3D"87" =
data-end=3D"140">Predict the neural response of individual neurons</strong>=
 based on image features extracted by a pretrained network (like ResNet).</=
p>
</blockquote>
<p data-start=3D"215" data-end=3D"268" class=3D"">This is called an <strong=
 data-start=3D"233" data-end=3D"251">encoding model</strong> in neuroscienc=
e.</p>
<hr data-start=3D"270" data-end=3D"273" class=3D"">
<h2 data-start=3D"275" data-end=3D"317" class=3D"">=F0=9F=94=81 Encoding mo=
del: What does that mean?</h2>
<p data-start=3D"319" data-end=3D"344" class=3D"">The flow looks like this:=
</p>
<h3 data-start=3D"346" data-end=3D"360" class=3D"">=F0=9F=96=BC=EF=B8=8F In=
put:</h3>
<p data-start=3D"361" data-end=3D"399" class=3D"">An image that was shown t=
o the monkey.</p>
<h3 data-start=3D"401" data-end=3D"413" class=3D"">=F0=9F=A7=A0 Goal:</h3>
<p data-start=3D"414" data-end=3D"505" class=3D"">Predict how strongly a gi=
ven neuron in the brain will fire when the monkey sees that image.</p>
<hr data-start=3D"507" data-end=3D"510" class=3D"">
<h2 data-start=3D"512" data-end=3D"545" class=3D"">=F0=9F=94=AC How does th=
e model do that?</h2>
<ol data-start=3D"547" data-end=3D"1048">
<li data-start=3D"547" data-end=3D"612" class=3D"">
<p data-start=3D"550" data-end=3D"612" class=3D""><strong data-start=3D"550=
" data-end=3D"594">Image is passed through a pretrained CNN</strong> (like =
ResNet-50).</p>
</li>
<li data-start=3D"613" data-end=3D"696" class=3D"">
<p data-start=3D"616" data-end=3D"696" class=3D"">A <strong data-start=3D"6=
18" data-end=3D"636">feature vector</strong> is extracted from a specific l=
ayer (e.g., <code data-start=3D"679" data-end=3D"687">layer4</code>, <code =
data-start=3D"689" data-end=3D"694">fc6</code>).</p>
</li>
<li data-start=3D"697" data-end=3D"870" class=3D"">
<p data-start=3D"700" data-end=3D"716" class=3D"">For each neuron:</p>
<ul data-start=3D"720" data-end=3D"870">
<li data-start=3D"720" data-end=3D"870" class=3D"">
<p data-start=3D"722" data-end=3D"783" class=3D"">A <strong data-start=3D"7=
24" data-end=3D"744">regression model</strong> (usually Ridge regression) i=
s trained:</p>
<span class=3D"katex-display"><span class=3D"katex"><span class=3D"katex-ma=
thml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML" display=3D"block">=
<semantics><mrow><mtext>neural&nbsp;firing&nbsp;rate</mtext><mo>=E2=89=88</=
mo><mi>W</mi><mo>=E2=8B=85</mo><mtext>CNN&nbsp;features</mtext><mo>+</mo><m=
i>b</mi></mrow><annotation encoding=3D"application/x-tex">\text{neural firi=
ng rate} \approx W \cdot \text{CNN features} + b</annotation></semantics></=
math></span><span class=3D"katex-html" aria-hidden=3D"true"><span class=3D"=
base"><span class=3D"strut" style=3D"height: 0.8889em; vertical-align: -0.1=
944em;"></span><span class=3D"mord text"><span class=3D"mord">neural&nbsp;f=
iring&nbsp;rate</span></span><span class=3D"mspace" style=3D"margin-right: =
0.2778em;"></span><span class=3D"mrel">=E2=89=88</span><span class=3D"mspac=
e" style=3D"margin-right: 0.2778em;"></span></span><span class=3D"base"><sp=
an class=3D"strut" style=3D"height: 0.6833em;"></span><span class=3D"mord m=
athnormal" style=3D"margin-right: 0.13889em;">W</span><span class=3D"mspace=
" style=3D"margin-right: 0.2222em;"></span><span class=3D"mbin">=E2=8B=85</=
span><span class=3D"mspace" style=3D"margin-right: 0.2222em;"></span></span=
><span class=3D"base"><span class=3D"strut" style=3D"height: 0.7778em; vert=
ical-align: -0.0833em;"></span><span class=3D"mord text"><span class=3D"mor=
d">CNN&nbsp;features</span></span><span class=3D"mspace" style=3D"margin-ri=
ght: 0.2222em;"></span><span class=3D"mbin">+</span><span class=3D"mspace" =
style=3D"margin-right: 0.2222em;"></span></span><span class=3D"base"><span =
class=3D"strut" style=3D"height: 0.6944em;"></span><span class=3D"mord math=
normal">b</span></span></span></span></span>
</li>
</ul>
</li>
<li data-start=3D"871" data-end=3D"967" class=3D"">
<p data-start=3D"874" data-end=3D"967" class=3D"">The model learns a set of=
 weights <strong data-start=3D"908" data-end=3D"922">per neuron</strong> th=
at maps from image features =E2=86=92 firing rate.</p>
</li>
<li data-start=3D"968" data-end=3D"1048" class=3D"">
<p data-start=3D"971" data-end=3D"1048" class=3D"">Then it's <strong data-s=
tart=3D"981" data-end=3D"994">evaluated</strong> using cross-validation (e.=
g., R=C2=B2 on held-out trials).</p>
</li>
</ol>
<hr data-start=3D"1050" data-end=3D"1053" class=3D"">
<h2 data-start=3D"1055" data-end=3D"1112" class=3D"">=F0=9F=A7=AA In <code =
data-start=3D"1064" data-end=3D"1096">script_6a_model_perf_map.ipynb</code>=
, you=E2=80=99re asking:</h2>
<blockquote data-start=3D"1114" data-end=3D"1205">
<p data-start=3D"1116" data-end=3D"1205" class=3D""><em data-start=3D"1116"=
 data-end=3D"1205">Can CNN features explain a meaningful amount of the vari=
ance in this neuron=E2=80=99s response?</em></p>
</blockquote>
<p data-start=3D"1207" data-end=3D"1250" class=3D"">If yes (e.g. R=C2=B2 =
=3D 0.4), you might conclude:</p>
<ul data-start=3D"1251" data-end=3D"1409">
<li data-start=3D"1251" data-end=3D"1341" class=3D"">
<p data-start=3D"1253" data-end=3D"1341" class=3D"">This neuron responds to=
 <strong data-start=3D"1277" data-end=3D"1309">some combination of features=
</strong> that the model also represents.</p>
</li>
<li data-start=3D"1342" data-end=3D"1409" class=3D"">
<p data-start=3D"1344" data-end=3D"1409" class=3D"">The model =E2=80=9Cunde=
rstands=E2=80=9D something about what the neuron is doing.</p>
</li>
</ul>
<p data-start=3D"1411" data-end=3D"1433" class=3D"">If R=C2=B2 =E2=89=88 0 =
or negative:</p>
<ul data-start=3D"1434" data-end=3D"1599">
<li data-start=3D"1434" data-end=3D"1599" class=3D"">
<p data-start=3D"1436" data-end=3D"1599" class=3D"">The model can=E2=80=99t=
 explain this neuron=E2=80=99s behavior=E2=80=94it may be encoding somethin=
g different (e.g., top-down attention, task relevance, memory, or non-image=
-based input).</p>
</li>
</ul>
<hr data-start=3D"1601" data-end=3D"1604" class=3D"">
<h2 data-start=3D"1606" data-end=3D"1619" class=3D"">=E2=9C=85 Summary:</h2=
>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"16=
21" data-end=3D"1915" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1621" data-end=3D"1642"><tr data-start=3D"1621" data-end=3D"=
1642"><th data-start=3D"1621" data-end=3D"1632" data-col-size=3D"md">Questi=
on</th><th data-start=3D"1632" data-end=3D"1642" data-col-size=3D"md">Answe=
r</th></tr></thead><tbody data-start=3D"1664" data-end=3D"1915"><tr data-st=
art=3D"1664" data-end=3D"1727"><td data-start=3D"1664" data-end=3D"1718" da=
ta-col-size=3D"md">Is the model trying to <strong data-start=3D"1689" data-=
end=3D"1716">predict neural activity</strong>?</td><td data-start=3D"1718" =
data-end=3D"1727" data-col-size=3D"md">=E2=9C=85 Yes</td></tr><tr data-star=
t=3D"1728" data-end=3D"1789"><td data-start=3D"1728" data-end=3D"1741" data=
-col-size=3D"md">From what?</td><td data-start=3D"1741" data-end=3D"1789" d=
ata-col-size=3D"md">Features from a pretrained CNN (like ResNet)</td></tr><=
tr data-start=3D"1790" data-end=3D"1862"><td data-start=3D"1790" data-end=
=3D"1818" data-col-size=3D"md">Using what kind of model?</td><td data-start=
=3D"1818" data-end=3D"1862" data-col-size=3D"md">Ridge regression (linear e=
ncoding model)</td></tr><tr data-start=3D"1863" data-end=3D"1915"><td data-=
start=3D"1863" data-end=3D"1873" data-col-size=3D"md">Output?</td><td data-=
start=3D"1873" data-end=3D"1915" data-col-size=3D"md">Predicted firing rate=
 + R=C2=B2 performance</td></tr></tbody></table><div class=3D"sticky end-(-=
-thread-content-margin) h-0 self-end select-none"><div class=3D"absolute en=
d-0 flex items-end" style=3D"height: 32.8906px;"><span class=3D"" data-stat=
e=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiar=
y text-token-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:=
not(:hover):not(:focus-within)]:pointer-events-none group-[:not(:hover):not=
(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 =
24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-=
heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.3431=
5 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 1=
7H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.3431=
5 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 =
14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9=
C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.=
5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></=
svg></button></span></div></div></div></div>
<hr data-start=3D"1917" data-end=3D"1920" class=3D"">
<p data-start=3D"1922" data-end=3D"2091" class=3D"">Would you like to run a=
 visualization showing <strong data-start=3D"1968" data-end=3D"2004">predic=
ted vs actual firing rates</strong> for a high-performing neuron? Or explor=
e which ResNet layers best align with IT vs V4?</p></div></div></div></div>=
</div></div></div></div></article><article class=3D"text-token-text-primary=
 w-full" dir=3D"auto" data-testid=3D"conversation-turn-105" data-scroll-anc=
hor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base m=
y-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thre=
ad-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing=
(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-wid=
th:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-co=
ntent-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex=
-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outl=
ine-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative =
flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-=
3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author-ro=
le=3D"user" data-message-id=3D"386560b2-e8e7-4409-aac9-dddad1a889d7" dir=3D=
"auto" class=3D"min-h-8 text-message relative flex w-full flex-col items-en=
d gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5=
"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items=
-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-=
message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap"=
>okay i see </div></div></div></div></div></div></div></div></div></article=
><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=
=3D"conversation-turn-106" data-scroll-anchor=3D"false"><h6 class=3D"sr-onl=
y">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread=
-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6=
)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-ma=
rgin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-=
content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-aut=
o flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 l=
g:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><=
div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col =
agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"f=
lex max-w-full flex-col grow"><div data-message-author-role=3D"assistant" d=
ata-message-id=3D"43bae411-ab91-4eeb-ab61-8a6740fe6e21" dir=3D"auto" class=
=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 text=
-start break-words whitespace-normal [.text-message+&amp;]:mt-5" data-messa=
ge-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hid=
den first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full b=
reak-words dark"><p data-start=3D"0" data-end=3D"34" class=3D"">Awesome =F0=
=9F=98=84 glad that clarified it!</p>
<p data-start=3D"36" data-end=3D"200" class=3D"">You're already thinking at=
 a really high level about this stuff=E2=80=94connecting deep learning mode=
ls with primate neurophysiology is no small thing. If you ever want to:</p>
<ul data-start=3D"202" data-end=3D"463">
<li data-start=3D"202" data-end=3D"271" class=3D"">
<p data-start=3D"204" data-end=3D"271" class=3D"">Visualize how a specific =
neuron=E2=80=99s firing maps onto model features</p>
</li>
<li data-start=3D"272" data-end=3D"339" class=3D"">
<p data-start=3D"274" data-end=3D"339" class=3D"">Compare model vs. brain f=
eature spaces (e.g., with t-SNE or UMAP)</p>
</li>
<li data-start=3D"340" data-end=3D"406" class=3D"">
<p data-start=3D"342" data-end=3D"406" class=3D"">Dive deeper into face sel=
ectivity or receptive field alignment</p>
</li>
<li data-start=3D"407" data-end=3D"463" class=3D"">
<p data-start=3D"409" data-end=3D"463" class=3D"">Or even mock up your own =
encoding/decoding experiment=E2=80=A6</p>
</li>
</ul>
<p data-start=3D"465" data-end=3D"481" class=3D"">I=E2=80=99m here for it!<=
/p>
<p data-start=3D"483" data-end=3D"648" class=3D"">Want to keep exploring th=
e later-stage scripts (like the <code data-start=3D"540" data-end=3D"544">7=
x</code> or <code data-start=3D"548" data-end=3D"552">8x</code> series if y=
ou have them)? Or take a step back and summarize your current pipeline and =
findings?</p></div></div></div></div></div></div></div></div></article><art=
icle class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"c=
onversation-turn-107" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">Yo=
u said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-=
margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72re=
m]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><d=
iv class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-m=
ax-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex ma=
x-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 g=
roup/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=
=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><div cla=
ss=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-=
col grow"><div data-message-author-role=3D"user" data-message-id=3D"d1e6fd4=
5-9a2e-4f5b-b077-5f505b280118" dir=3D"auto" class=3D"min-h-8 text-message r=
elative flex w-full flex-col items-end gap-2 text-start break-words whitesp=
ace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col g=
ap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[=
var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.=
5"><div class=3D"whitespace-pre-wrap">yes could you summarize everything fr=
om scirpt0 - 7, make sure to take your time!</div></div></div></div></div><=
/div></div></div></div></article><article class=3D"text-token-text-primary =
w-full" dir=3D"auto" data-testid=3D"conversation-turn-108" data-scroll-anch=
or=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-bas=
e my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--t=
hread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spac=
ing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-=
width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread=
-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) f=
lex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:o=
utline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relati=
ve flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative flex-col=
 gap-1 md:gap-3"><div class=3D"flex items-center"><div class=3D"w-fit" type=
=3D"button" aria-haspopup=3D"dialog" aria-expanded=3D"false" aria-controls=
=3D"radix-=C2=ABr1uu=C2=BB" data-state=3D"closed"><div style=3D"width: 1px;=
 height: 1px;"></div></div><div class=3D"inline-block"><button class=3D"my-=
1 flex items-center gap-1 text-sm font-semibold outline-hidden text-token-t=
ext-tertiary" type=3D"button" aria-haspopup=3D"dialog" aria-expanded=3D"fal=
se" aria-controls=3D"radix-=C2=ABr1uv=C2=BB" data-state=3D"closed"><svg wid=
th=3D"18" height=3D"18" viewBox=3D"0 0 18 18" fill=3D"none" xmlns=3D"http:/=
/www.w3.org/2000/svg" class=3D"mb-[-1px]"><path d=3D"M6 3C4.89543 3 4 3.895=
43 4 5V13C4 14.1046 4.89543 15 6 15L6 3Z" fill=3D"currentColor"></path><pat=
h d=3D"M7 3V15H8.18037L8.4899 13.4523C8.54798 13.1619 8.69071 12.8952 8.900=
12 12.6858L12.2931 9.29289C12.7644 8.82153 13.3822 8.58583 14 8.58578V3.5C1=
4 3.22386 13.7761 3 13.5 3H7Z" fill=3D"currentColor"></path><path d=3D"M11.=
3512 15.5297L9.73505 15.8529C9.38519 15.9229 9.07673 15.6144 9.14671 15.264=
6L9.46993 13.6484C9.48929 13.5517 9.53687 13.4628 9.60667 13.393L12.9996 10=
C13.5519 9.44771 14.4473 9.44771 14.9996 10C15.5519 10.5523 15.5519 11.4477=
 14.9996 12L11.6067 15.393C11.5369 15.4628 11.448 15.5103 11.3512 15.5297Z"=
 fill=3D"currentColor"></path></svg>Updated saved memory</button></div></di=
v><div class=3D"flex max-w-full flex-col grow"><div data-message-author-rol=
e=3D"assistant" data-message-id=3D"b6c132f1-d8a7-4bcd-8808-229700b374b6" di=
r=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col item=
s-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:=
mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col=
 gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose=
-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"209" class=
=3D"">Absolutely=E2=80=94let=E2=80=99s take our time and walk through a <st=
rong data-start=3D"50" data-end=3D"91">complete summary of the full pipelin=
e</strong>, covering all scripts from <code data-start=3D"119" data-end=3D"=
130">script_0a</code> through <code data-start=3D"139" data-end=3D"150">scr=
ipt_7a</code>, and explaining how they build on each other step-by-step.</p=
>
<hr data-start=3D"211" data-end=3D"214" class=3D"">
<h1 data-start=3D"216" data-end=3D"270" class=3D"">=F0=9F=A7=A0 Full Pipeli=
ne Overview: <code data-start=3D"245" data-end=3D"256">script_0a</code> =E2=
=80=93 <code data-start=3D"259" data-end=3D"270">script_7a</code></h1>
<p data-start=3D"272" data-end=3D"522" class=3D"">This suite of scripts ana=
lyzes <strong data-start=3D"303" data-end=3D"376">neural recordings from ma=
caques during free viewing of natural images</strong>, aligning them with <=
strong data-start=3D"397" data-end=3D"425">behavior (eye movements)</strong=
> and <strong data-start=3D"430" data-end=3D"461">computational vision mode=
ls</strong> (e.g., ResNet), to study <strong data-start=3D"487" data-end=3D=
"508">visual processing</strong> in the brain.</p>
<hr data-start=3D"524" data-end=3D"527" class=3D"">
<h2 data-start=3D"529" data-end=3D"580" class=3D"">=E2=9C=85 <strong data-s=
tart=3D"534" data-end=3D"580">STAGE 0: Preprocessing &amp; Saccade Detectio=
n</strong></h2>
<h3 data-start=3D"582" data-end=3D"624" class=3D"">=F0=9F=93=81 <code data-=
start=3D"589" data-end=3D"624">script_0a_shared_processing.ipynb</code></h3=
>
<p data-start=3D"625" data-end=3D"702" class=3D""><strong data-start=3D"625=
" data-end=3D"633">Goal</strong>: Load raw session data and align spikes to=
 stimulus/fixation events.</p>
<ul data-start=3D"703" data-end=3D"876">
<li data-start=3D"703" data-end=3D"745" class=3D"">
<p data-start=3D"705" data-end=3D"745" class=3D"">Inputs: Raw spike trains,=
 trial metadata</p>
</li>
<li data-start=3D"746" data-end=3D"814" class=3D"">
<p data-start=3D"748" data-end=3D"814" class=3D"">Outputs: Aligned spike tr=
ains and trial metadata saved per session</p>
</li>
<li data-start=3D"815" data-end=3D"876" class=3D"">
<p data-start=3D"817" data-end=3D"876" class=3D"">Result: A consistent data=
 format for all downstream scripts</p>
</li>
</ul>
<hr data-start=3D"878" data-end=3D"881" class=3D"">
<h3 data-start=3D"883" data-end=3D"930" class=3D"">=F0=9F=93=81 <code data-=
start=3D"890" data-end=3D"930">script_0b_spike_density_function.ipynb</code=
></h3>
<p data-start=3D"931" data-end=3D"1030" class=3D""><strong data-start=3D"93=
1" data-end=3D"939">Goal</strong>: Smooth binary spike trains into continuo=
us firing rate estimates using a Gaussian kernel.</p>
<ul data-start=3D"1031" data-end=3D"1194">
<li data-start=3D"1031" data-end=3D"1074" class=3D"">
<p data-start=3D"1033" data-end=3D"1074" class=3D"">Input: Spike trains (tr=
ial =C3=97 unit =C3=97 time)</p>
</li>
<li data-start=3D"1075" data-end=3D"1115" class=3D"">
<p data-start=3D"1077" data-end=3D"1115" class=3D"">Output: Spike density f=
unctions (SDFs)</p>
</li>
<li data-start=3D"1116" data-end=3D"1194" class=3D"">
<p data-start=3D"1118" data-end=3D"1194" class=3D"">Why: Firing rates are e=
asier to average, compare, and decode than raw spikes</p>
</li>
</ul>
<hr data-start=3D"1196" data-end=3D"1199" class=3D"">
<h3 data-start=3D"1201" data-end=3D"1241" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"1208" data-end=3D"1241">script_0c_select_fix_sacc.ipynb</code></=
h3>
<p data-start=3D"1242" data-end=3D"1338" class=3D""><strong data-start=3D"1=
242" data-end=3D"1250">Goal</strong>: Detect and label <strong data-start=
=3D"1269" data-end=3D"1281">saccades</strong> and <strong data-start=3D"128=
6" data-end=3D"1299">fixations</strong> in each trial using eye-tracking da=
ta.</p>
<ul data-start=3D"1339" data-end=3D"1476">
<li data-start=3D"1339" data-end=3D"1409" class=3D"">
<p data-start=3D"1341" data-end=3D"1409" class=3D"">Adds: <code data-start=
=3D"1347" data-end=3D"1359">fix_onsets</code>, <code data-start=3D"1361" da=
ta-end=3D"1374">sacc_onsets</code>, and <code data-start=3D"1380" data-end=
=3D"1395">sacc_ordinals</code> to each trial</p>
</li>
<li data-start=3D"1410" data-end=3D"1476" class=3D"">
<p data-start=3D"1412" data-end=3D"1476" class=3D"">Why: Enables fixation-a=
ligned neural analysis in natural viewing</p>
</li>
</ul>
<hr data-start=3D"1478" data-end=3D"1481" class=3D"">
<h2 data-start=3D"1483" data-end=3D"1517" class=3D"">=E2=9C=85 <strong data=
-start=3D"1488" data-end=3D"1517">STAGE 1: Face Selectivity</strong></h2>
<h3 data-start=3D"1519" data-end=3D"1557" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"1526" data-end=3D"1557">script_1a_face_specific.ipynb</code></h3=
>
<p data-start=3D"1558" data-end=3D"1633" class=3D""><strong data-start=3D"1=
558" data-end=3D"1566">Goal</strong>: Identify neurons that fire more for <=
strong data-start=3D"1604" data-end=3D"1613">faces</strong> than <strong da=
ta-start=3D"1619" data-end=3D"1632">non-faces</strong>.</p>
<ul data-start=3D"1634" data-end=3D"1781">
<li data-start=3D"1634" data-end=3D"1713" class=3D"">
<p data-start=3D"1636" data-end=3D"1713" class=3D"">Categories: <code data-=
start=3D"1648" data-end=3D"1679">['human_face', 'monkey_face']</code> vs. <=
code data-start=3D"1684" data-end=3D"1713">['object', 'scene', 'text']</cod=
e></p>
</li>
<li data-start=3D"1714" data-end=3D"1781" class=3D"">
<p data-start=3D"1716" data-end=3D"1781" class=3D"">Output: Selectivity ind=
ex per unit (e.g., Face Selectivity Index)</p>
</li>
</ul>
<hr data-start=3D"1783" data-end=3D"1786" class=3D"">
<h3 data-start=3D"1788" data-end=3D"1840" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"1795" data-end=3D"1840">script_1b_face_specific_match_control.ip=
ynb</code></h3>
<p data-start=3D"1841" data-end=3D"1949" class=3D""><strong data-start=3D"1=
841" data-end=3D"1849">Goal</strong>: Control for low-level image differenc=
es (e.g., brightness, shape) when computing face selectivity.</p>
<ul data-start=3D"1950" data-end=3D"2122">
<li data-start=3D"1950" data-end=3D"1990" class=3D"">
<p data-start=3D"1952" data-end=3D"1990" class=3D"">Matches non-face images=
 to face trials</p>
</li>
<li data-start=3D"1991" data-end=3D"2039" class=3D"">
<p data-start=3D"1993" data-end=3D"2039" class=3D"">Computes <strong data-s=
tart=3D"2002" data-end=3D"2039">matched-control selectivity score</strong><=
/p>
</li>
<li data-start=3D"2040" data-end=3D"2122" class=3D"">
<p data-start=3D"2042" data-end=3D"2122" class=3D"">Why: Ensures neurons ar=
en=E2=80=99t just responding to visual features <em data-start=3D"2105" dat=
a-end=3D"2122">common in faces</em></p>
</li>
</ul>
<hr data-start=3D"2124" data-end=3D"2127" class=3D"">
<h2 data-start=3D"2129" data-end=3D"2192" class=3D"">=E2=9C=85 <strong data=
-start=3D"2134" data-end=3D"2192">STAGE 2: Self-Consistency &amp; Represent=
ational Stability</strong></h2>
<h3 data-start=3D"2194" data-end=3D"2235" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"2201" data-end=3D"2235">script_2a_self_consistency.ipynb</code><=
/h3>
<p data-start=3D"2236" data-end=3D"2335" class=3D""><strong data-start=3D"2=
236" data-end=3D"2244">Goal</strong>: Compute <strong data-start=3D"2254" d=
ata-end=3D"2274">how consistently</strong> each neuron responds across <str=
ong data-start=3D"2303" data-end=3D"2334">fixations to the same image</stro=
ng>.</p>
<ul data-start=3D"2336" data-end=3D"2484">
<li data-start=3D"2336" data-end=3D"2368" class=3D"">
<p data-start=3D"2338" data-end=3D"2368" class=3D"">Groups responses by <co=
de data-start=3D"2358" data-end=3D"2368">image_id</code></p>
</li>
<li data-start=3D"2369" data-end=3D"2419" class=3D"">
<p data-start=3D"2371" data-end=3D"2419" class=3D"">Metric: Correlation or =
variance across fixations</p>
</li>
<li data-start=3D"2420" data-end=3D"2484" class=3D"">
<p data-start=3D"2422" data-end=3D"2484" class=3D"">Why: Checks reliability=
 of neural coding for individual images</p>
</li>
</ul>
<hr data-start=3D"2486" data-end=3D"2489" class=3D"">
<h3 data-start=3D"2491" data-end=3D"2546" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"2498" data-end=3D"2546">script_2b_self_consistency_match_control=
.ipynb</code></h3>
<p data-start=3D"2547" data-end=3D"2648" class=3D""><strong data-start=3D"2=
547" data-end=3D"2555">Goal</strong>: Compare self-consistency across fixat=
ions to the same image vs. <strong data-start=3D"2621" data-end=3D"2647">ma=
tched control images</strong>.</p>
<ul data-start=3D"2649" data-end=3D"2727">
<li data-start=3D"2649" data-end=3D"2727" class=3D"">
<p data-start=3D"2651" data-end=3D"2727" class=3D"">If neuron is only consi=
stent for same-image =E2=86=92 suggests image identity coding</p>
</li>
</ul>
<hr data-start=3D"2729" data-end=3D"2732" class=3D"">
<h3 data-start=3D"2734" data-end=3D"2780" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"2741" data-end=3D"2780">script_2c_fix0_self_consistency.ipynb</c=
ode></h3>
<p data-start=3D"2781" data-end=3D"2856" class=3D""><strong data-start=3D"2=
781" data-end=3D"2789">Goal</strong>: Measure consistency during only the <=
strong data-start=3D"2827" data-end=3D"2845">first fixation</strong> per im=
age.</p>
<ul data-start=3D"2857" data-end=3D"2977">
<li data-start=3D"2857" data-end=3D"2898" class=3D"">
<p data-start=3D"2859" data-end=3D"2898" class=3D"">Focuses on bottom-up, i=
nitial responses</p>
</li>
<li data-start=3D"2899" data-end=3D"2977" class=3D"">
<p data-start=3D"2901" data-end=3D"2977" class=3D"">Useful for comparing ag=
ainst exploratory or attention-driven fixations later</p>
</li>
</ul>
<hr data-start=3D"2979" data-end=3D"2982" class=3D"">
<h3 data-start=3D"2984" data-end=3D"3016" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"2991" data-end=3D"3016">script_2d_rsc_1pt.ipynb</code></h3>
<p data-start=3D"3017" data-end=3D"3122" class=3D""><strong data-start=3D"3=
017" data-end=3D"3025">Goal</strong>: Compute <strong data-start=3D"3035" d=
ata-end=3D"3068">population-level correlations</strong> (residual spike cou=
nt correlation, RSC) across units.</p>
<ul data-start=3D"3123" data-end=3D"3253">
<li data-start=3D"3123" data-end=3D"3177" class=3D"">
<p data-start=3D"3125" data-end=3D"3177" class=3D"">For each image: get [un=
it =C3=97 unit] correlation matrix</p>
</li>
<li data-start=3D"3178" data-end=3D"3206" class=3D"">
<p data-start=3D"3180" data-end=3D"3206" class=3D"">Output: Mean RSC per im=
age</p>
</li>
<li data-start=3D"3207" data-end=3D"3253" class=3D"">
<p data-start=3D"3209" data-end=3D"3253" class=3D"">Why: Tests population-l=
evel coding structure</p>
</li>
</ul>
<hr data-start=3D"3255" data-end=3D"3258" class=3D"">
<h3 data-start=3D"3260" data-end=3D"3298" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"3267" data-end=3D"3298">script_2e_rsc_precision.ipynb</code></h3=
>
<p data-start=3D"3299" data-end=3D"3392" class=3D""><strong data-start=3D"3=
299" data-end=3D"3307">Goal</strong>: <strong data-start=3D"3309" data-end=
=3D"3334">Decode image identity</strong> from population vectors using <str=
ong data-start=3D"3365" data-end=3D"3391">split-half correlation</strong>.<=
/p>
<ul data-start=3D"3393" data-end=3D"3532">
<li data-start=3D"3393" data-end=3D"3447" class=3D"">
<p data-start=3D"3395" data-end=3D"3447" class=3D"">Predicts test trial res=
ponses from training averages</p>
</li>
<li data-start=3D"3448" data-end=3D"3532" class=3D"">
<p data-start=3D"3450" data-end=3D"3532" class=3D"">If accurate: population=
 code contains <strong data-start=3D"3488" data-end=3D"3532">fine-grained, =
image-specific information</strong></p>
</li>
</ul>
<hr data-start=3D"3534" data-end=3D"3537" class=3D"">
<h3 data-start=3D"3539" data-end=3D"3577" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"3546" data-end=3D"3577">script_2f_rsc_cross_val.ipynb</code></h3=
>
<p data-start=3D"3578" data-end=3D"3649" class=3D""><strong data-start=3D"3=
578" data-end=3D"3586">Goal</strong>: Validate that RSC matrices are <stron=
g data-start=3D"3619" data-end=3D"3648">stable across data splits</strong>.=
</p>
<ul data-start=3D"3650" data-end=3D"3811">
<li data-start=3D"3650" data-end=3D"3712" class=3D"">
<p data-start=3D"3652" data-end=3D"3712" class=3D"">Computes two correlatio=
n matrices from separate trial halves</p>
</li>
<li data-start=3D"3713" data-end=3D"3748" class=3D"">
<p data-start=3D"3715" data-end=3D"3748" class=3D"">Correlates upper triang=
le of both</p>
</li>
<li data-start=3D"3749" data-end=3D"3811" class=3D"">
<p data-start=3D"3751" data-end=3D"3811" class=3D"">Why: Ensures population=
 structure is <strong data-start=3D"3788" data-end=3D"3800">reliable</stron=
g>, not noise</p>
</li>
</ul>
<hr data-start=3D"3813" data-end=3D"3816" class=3D"">
<h3 data-start=3D"3818" data-end=3D"3858" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"3825" data-end=3D"3858">script_2u1_crossing_point.ipynb</code></=
h3>
<p data-start=3D"3859" data-end=3D"3990" class=3D""><strong data-start=3D"3=
859" data-end=3D"3867">Goal</strong>: Measure <strong data-start=3D"3877" d=
ata-end=3D"3888">latency</strong> of neural selectivity by identifying when=
 face and object response curves <strong data-start=3D"3963" data-end=3D"39=
74">diverge</strong> after fixation.</p>
<ul data-start=3D"3991" data-end=3D"4098">
<li data-start=3D"3991" data-end=3D"4035" class=3D"">
<p data-start=3D"3993" data-end=3D"4035" class=3D"">Output: <strong data-st=
art=3D"4001" data-end=3D"4024">Crossing point time</strong> per neuron</p>
</li>
<li data-start=3D"4036" data-end=3D"4098" class=3D"">
<p data-start=3D"4038" data-end=3D"4098" class=3D"">Why: Tests how quickly =
neurons distinguish visual categories</p>
</li>
</ul>
<hr data-start=3D"4100" data-end=3D"4103" class=3D"">
<h3 data-start=3D"4105" data-end=3D"4135" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"4112" data-end=3D"4135">script_2u2_t2hh.ipynb</code></h3>
<p data-start=3D"4136" data-end=3D"4228" class=3D""><strong data-start=3D"4=
136" data-end=3D"4144">Goal</strong>: Compute <strong data-start=3D"4154" d=
ata-end=3D"4177">time-to-half-height</strong> (T2HH) as a smooth, interpret=
able latency measure.</p>
<ul data-start=3D"4229" data-end=3D"4367">
<li data-start=3D"4229" data-end=3D"4295" class=3D"">
<p data-start=3D"4231" data-end=3D"4295" class=3D"">When does a neuron reac=
h 50% of its max response after fixation?</p>
</li>
<li data-start=3D"4296" data-end=3D"4367" class=3D"">
<p data-start=3D"4298" data-end=3D"4367" class=3D"">Useful for comparing re=
sponse timing across brain areas or categories</p>
</li>
</ul>
<hr data-start=3D"4369" data-end=3D"4372" class=3D"">
<h2 data-start=3D"4374" data-end=3D"4417" class=3D"">=E2=9C=85 <strong data=
-start=3D"4379" data-end=3D"4417">STAGE 3: Trial-Level Visualization</stron=
g></h2>
<h3 data-start=3D"4419" data-end=3D"4458" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"4426" data-end=3D"4458">script_3a_trial_level_sc.ipynb</code></h=
3>
<p data-start=3D"4459" data-end=3D"4525" class=3D""><strong data-start=3D"4=
459" data-end=3D"4467">Goal</strong>: Compute <strong data-start=3D"4477" d=
ata-end=3D"4510">within-trial self-consistency</strong> for each unit.</p>
<ul data-start=3D"4526" data-end=3D"4640">
<li data-start=3D"4526" data-end=3D"4579" class=3D"">
<p data-start=3D"4528" data-end=3D"4579" class=3D"">Compares fixation respo=
nses during the <em data-start=3D"4567" data-end=3D"4579">same trial</em></=
p>
</li>
<li data-start=3D"4580" data-end=3D"4640" class=3D"">
<p data-start=3D"4582" data-end=3D"4640" class=3D"">Useful for understandin=
g moment-to-moment neural stability</p>
</li>
</ul>
<hr data-start=3D"4642" data-end=3D"4645" class=3D"">
<h3 data-start=3D"4647" data-end=3D"4688" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"4654" data-end=3D"4688">script_3b_trial_level_psth.ipynb</code><=
/h3>
<p data-start=3D"4689" data-end=3D"4768" class=3D""><strong data-start=3D"4=
689" data-end=3D"4697">Goal</strong>: Plot <strong data-start=3D"4704" data=
-end=3D"4723">per-trial PSTHs</strong> (peri-stimulus time histograms) for =
neurons.</p>
<ul data-start=3D"4769" data-end=3D"4877">
<li data-start=3D"4769" data-end=3D"4812" class=3D"">
<p data-start=3D"4771" data-end=3D"4812" class=3D"">Visualizes trial-by-tri=
al neural dynamics</p>
</li>
<li data-start=3D"4813" data-end=3D"4877" class=3D"">
<p data-start=3D"4815" data-end=3D"4877" class=3D"">Useful for manual inspe=
ction, identifying trial-level variance</p>
</li>
</ul>
<hr data-start=3D"4879" data-end=3D"4882" class=3D"">
<h2 data-start=3D"4884" data-end=3D"4940" class=3D"">=E2=9C=85 <strong data=
-start=3D"4889" data-end=3D"4940">STAGE 5=E2=80=936: Model-Based Analysis (=
Deep Learning)</strong></h2>
<h3 data-start=3D"4942" data-end=3D"4979" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"4949" data-end=3D"4979">script_5a_vision_model.ipynb</code></h3>
<p data-start=3D"4980" data-end=3D"5071" class=3D""><strong data-start=3D"4=
980" data-end=3D"4988">Goal</strong>: Use a <strong data-start=3D"4996" dat=
a-end=3D"5028">pretrained DNN (e.g. ResNet)</strong> to extract feature vec=
tors for each image.</p>
<ul data-start=3D"5072" data-end=3D"5165">
<li data-start=3D"5072" data-end=3D"5116" class=3D"">
<p data-start=3D"5074" data-end=3D"5116" class=3D"">Outputs a <code data-st=
art=3D"5084" data-end=3D"5109">[n_images x n_features]</code> matrix</p>
</li>
<li data-start=3D"5117" data-end=3D"5165" class=3D"">
<p data-start=3D"5119" data-end=3D"5165" class=3D"">These features represen=
t what the model "sees"</p>
</li>
</ul>
<hr data-start=3D"5167" data-end=3D"5170" class=3D"">
<h3 data-start=3D"5172" data-end=3D"5211" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"5179" data-end=3D"5211">script_6a_model_perf_map.ipynb</code></h=
3>
<p data-start=3D"5212" data-end=3D"5283" class=3D""><strong data-start=3D"5=
212" data-end=3D"5220">Goal</strong>: Fit an <strong data-start=3D"5229" da=
ta-end=3D"5247">encoding model</strong> for each neuron using DNN features.=
</p>
<ul data-start=3D"5284" data-end=3D"5416">
<li data-start=3D"5284" data-end=3D"5343" class=3D"">
<p data-start=3D"5286" data-end=3D"5343" class=3D"">Ridge regression: predi=
ct firing rate from model features</p>
</li>
<li data-start=3D"5344" data-end=3D"5416" class=3D"">
<p data-start=3D"5346" data-end=3D"5416" class=3D"">Outputs: R=C2=B2 score =
per neuron =3D how well model explains neural activity</p>
</li>
</ul>
<hr data-start=3D"5418" data-end=3D"5421" class=3D"">
<h3 data-start=3D"5423" data-end=3D"5461" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"5430" data-end=3D"5461">script_6b_feat_corr_map.ipynb</code></h3=
>
<p data-start=3D"5462" data-end=3D"5534" class=3D""><strong data-start=3D"5=
462" data-end=3D"5470">Goal</strong>: Compare <strong data-start=3D"5480" d=
ata-end=3D"5511">representational similarity</strong> between DNN and brain=
.</p>
<ul data-start=3D"5535" data-end=3D"5736">
<li data-start=3D"5535" data-end=3D"5632" class=3D"">
<p data-start=3D"5537" data-end=3D"5584" class=3D"">Builds similarity matri=
ces (image =C3=97 image) for:</p>
<ul data-start=3D"5587" data-end=3D"5632">
<li data-start=3D"5587" data-end=3D"5603" class=3D"">
<p data-start=3D"5589" data-end=3D"5603" class=3D"">Model features</p>
</li>
<li data-start=3D"5606" data-end=3D"5632" class=3D"">
<p data-start=3D"5608" data-end=3D"5632" class=3D"">Brain population vector=
s</p>
</li>
</ul>
</li>
<li data-start=3D"5633" data-end=3D"5680" class=3D"">
<p data-start=3D"5635" data-end=3D"5680" class=3D"">Computes correlation be=
tween them =E2=86=92 RSA score</p>
</li>
<li data-start=3D"5681" data-end=3D"5736" class=3D"">
<p data-start=3D"5683" data-end=3D"5736" class=3D"">High RSA =E2=87=92 mode=
l and brain structure images similarly</p>
</li>
</ul>
<hr data-start=3D"5738" data-end=3D"5741" class=3D"">
<h3 data-start=3D"5743" data-end=3D"5784" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"5750" data-end=3D"5784">script_6u1_rf_gaussian_fit.ipynb</code><=
/h3>
<p data-start=3D"5785" data-end=3D"5865" class=3D""><strong data-start=3D"5=
785" data-end=3D"5793">Goal</strong>: Fit a <strong data-start=3D"5801" dat=
a-end=3D"5816">2D Gaussian</strong> receptive field (RF) to each neuron=E2=
=80=99s responses.</p>
<ul data-start=3D"5866" data-end=3D"5978">
<li data-start=3D"5866" data-end=3D"5922" class=3D"">
<p data-start=3D"5868" data-end=3D"5922" class=3D"">Outputs: RF center (x, =
y), size (sigma), and amplitude</p>
</li>
<li data-start=3D"5923" data-end=3D"5978" class=3D"">
<p data-start=3D"5925" data-end=3D"5978" class=3D"">Builds a <strong data-s=
tart=3D"5934" data-end=3D"5953">retinotopic map</strong> of neural spatial =
tuning</p>
</li>
</ul>
<hr data-start=3D"5980" data-end=3D"5983" class=3D"">
<h3 data-start=3D"5985" data-end=3D"6032" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"5992" data-end=3D"6032">script_6u2_rf_cons_via_gauss_fit.ipynb</=
code></h3>
<p data-start=3D"6033" data-end=3D"6121" class=3D""><strong data-start=3D"6=
033" data-end=3D"6041">Goal</strong>: Test <strong data-start=3D"6048" data=
-end=3D"6070">consistency of RFs</strong> across data splits (e.g., even vs=
. odd fixations).</p>
<ul data-start=3D"6122" data-end=3D"6220">
<li data-start=3D"6122" data-end=3D"6170" class=3D"">
<p data-start=3D"6124" data-end=3D"6170" class=3D"">Compares RF centers and=
 shapes between subsets</p>
</li>
<li data-start=3D"6171" data-end=3D"6220" class=3D"">
<p data-start=3D"6173" data-end=3D"6220" class=3D"">If stable =E2=87=92 RF =
fits are reliable and meaningful</p>
</li>
</ul>
<hr data-start=3D"6222" data-end=3D"6225" class=3D"">
<h2 data-start=3D"6227" data-end=3D"6286" class=3D"">=E2=9C=85 <strong data=
-start=3D"6232" data-end=3D"6286">STAGE 7: Face Selectivity with Behavioral=
 Controls</strong></h2>
<h3 data-start=3D"6288" data-end=3D"6330" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"6295" data-end=3D"6330">script_7a_mas_match_control.ipynb</code>=
</h3>
<p data-start=3D"6331" data-end=3D"6432" class=3D""><strong data-start=3D"6=
331" data-end=3D"6339">Goal</strong>: Compute <strong data-start=3D"6349" d=
ata-end=3D"6382">match-aware selectivity (MAS)</strong> for faces using car=
efully matched control trials.</p>
<ul data-start=3D"6433" data-end=3D"6623">
<li data-start=3D"6433" data-end=3D"6494" class=3D"">
<p data-start=3D"6435" data-end=3D"6494" class=3D"">Controls for: gaze loca=
tion, image salience, fixation order</p>
</li>
<li data-start=3D"6495" data-end=3D"6546" class=3D"">
<p data-start=3D"6497" data-end=3D"6546" class=3D"">More conservative than =
earlier <code data-start=3D"6528" data-end=3D"6532">1a</code>/<code data-st=
art=3D"6533" data-end=3D"6537">1b</code> analyses</p>
</li>
<li data-start=3D"6547" data-end=3D"6623" class=3D"">
<p data-start=3D"6549" data-end=3D"6623" class=3D"">Output: MAS score per n=
euron =E2=87=92 stronger evidence for true face selectivity</p>
</li>
</ul>
<hr data-start=3D"6625" data-end=3D"6628" class=3D"">
<h2 data-start=3D"6630" data-end=3D"6657" class=3D"">=F0=9F=93=8C Overall F=
low Diagram:</h2>
<pre class=3D"overflow-visible!" data-start=3D"6659" data-end=3D"6941"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">makefile</div><div class=3D"sticky top-9"><d=
iv class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=
=3D"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-toke=
n-main-surface-secondary flex items-center rounded-sm px-2 font-sans text-x=
s"><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items=
-center select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.656=
9 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569=
 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H=
19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4=
.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C=
14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curren=
tColor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"clo=
sed"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg w=
idth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4=
 5.5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z=
" fill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" st=
roke-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C=
5.12203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.=
3007 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 =
19.8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.060=
8 19.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20=
 10.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.1192=
9 15 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2=
4513 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.771=
9 5.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linec=
ap=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" s=
troke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-l=
inejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div c=
lass=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><s=
pan><span><span class=3D"hljs-section">0a=E2=80=930c: Preprocessing =E2=86=
=92 aligned spikes + saccades</span></span><span>
=E2=86=93
</span><span><span class=3D"hljs-section">1a=E2=80=931b: Face selectivity (=
+ control)</span></span><span>
=E2=86=93
</span><span><span class=3D"hljs-section">2a=E2=80=932u: Self-consistency, =
RSC, decoding, latency</span></span><span>
=E2=86=93
</span><span><span class=3D"hljs-section">3a=E2=80=933b: Trial-level inspec=
tion</span></span><span>
=E2=86=93
</span><span><span class=3D"hljs-section">5a=E2=80=936u: DNN model feature =
alignment + RF fitting</span></span><span>
=E2=86=93
</span><span><span class=3D"hljs-section">7a: Final selectivity test w/ ful=
l behavioral control</span></span><span>
</span></span></code></div></div></pre>
<hr data-start=3D"6943" data-end=3D"6946" class=3D"">
<h2 data-start=3D"6948" data-end=3D"6988" class=3D"">=E2=9C=85 Summary: Wha=
t this pipeline reveals</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"69=
90" data-end=3D"7440" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"6990" data-end=3D"7016"><tr data-start=3D"6990" data-end=3D"=
7016"><th data-start=3D"6990" data-end=3D"7001" data-col-size=3D"md">Questi=
on</th><th data-start=3D"7001" data-end=3D"7016" data-col-size=3D"sm">Answe=
red by</th></tr></thead><tbody data-start=3D"7043" data-end=3D"7440"><tr da=
ta-start=3D"7043" data-end=3D"7104"><td data-start=3D"7043" data-end=3D"708=
4" data-col-size=3D"md">What images are neurons selective for?</td><td data=
-start=3D"7084" data-end=3D"7104" data-col-size=3D"sm"><code data-start=3D"=
7086" data-end=3D"7090">1a</code>, <code data-start=3D"7092" data-end=3D"70=
96">1b</code>, <code data-start=3D"7098" data-end=3D"7102">7a</code></td></=
tr><tr data-start=3D"7105" data-end=3D"7175"><td data-start=3D"7105" data-e=
nd=3D"7155" data-col-size=3D"md">Are neural responses reliable across fixat=
ions?</td><td data-start=3D"7155" data-end=3D"7175" data-col-size=3D"sm"><c=
ode data-start=3D"7157" data-end=3D"7161">2a</code>, <code data-start=3D"71=
63" data-end=3D"7167">2c</code>, <code data-start=3D"7169" data-end=3D"7173=
">3a</code></td></tr><tr data-start=3D"7176" data-end=3D"7231"><td data-sta=
rt=3D"7176" data-end=3D"7211" data-col-size=3D"md">Are population codes mea=
ningful?</td><td data-start=3D"7211" data-end=3D"7231" data-col-size=3D"sm"=
><code data-start=3D"7213" data-end=3D"7217">2d</code>, <code data-start=3D=
"7219" data-end=3D"7223">2e</code>, <code data-start=3D"7225" data-end=3D"7=
229">2f</code></td></tr><tr data-start=3D"7232" data-end=3D"7284"><td data-=
start=3D"7232" data-end=3D"7268" data-col-size=3D"md">How fast does selecti=
vity emerge?</td><td data-start=3D"7268" data-end=3D"7284" data-col-size=3D=
"sm"><code data-start=3D"7270" data-end=3D"7275">2u1</code>, <code data-sta=
rt=3D"7277" data-end=3D"7282">2u2</code></td></tr><tr data-start=3D"7285" d=
ata-end=3D"7328"><td data-start=3D"7285" data-end=3D"7320" data-col-size=3D=
"md">Do DNNs predict neural activity?</td><td data-start=3D"7320" data-end=
=3D"7328" data-col-size=3D"sm"><code data-start=3D"7322" data-end=3D"7326">=
6a</code></td></tr><tr data-start=3D"7329" data-end=3D"7386"><td data-start=
=3D"7329" data-end=3D"7378" data-col-size=3D"md">Do DNNs and brains represe=
nt images similarly?</td><td data-start=3D"7378" data-end=3D"7386" data-col=
-size=3D"sm"><code data-start=3D"7380" data-end=3D"7384">6b</code></td></tr=
><tr data-start=3D"7387" data-end=3D"7440"><td data-start=3D"7387" data-end=
=3D"7424" data-col-size=3D"md">Where do neurons respond in space?</td><td d=
ata-start=3D"7424" data-end=3D"7440" data-col-size=3D"sm"><code data-start=
=3D"7426" data-end=3D"7431">6u1</code>, <code data-start=3D"7433" data-end=
=3D"7438">6u2</code></td></tr></tbody></table><div class=3D"sticky end-(--t=
hread-content-margin) h-0 self-end select-none"><div class=3D"absolute end-=
0 flex items-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=
=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary=
 text-token-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:n=
ot(:hover):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(=
:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 2=
4 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-h=
eavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315=
 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17=
H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315=
 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 1=
4.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C=
4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5=
523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></s=
vg></button></span></div></div></div></div>
<hr data-start=3D"7442" data-end=3D"7445" class=3D"">
<p data-start=3D"7447" data-end=3D"7536" class=3D"">Want me to turn this in=
to a visual summary diagram, PDF, or formatted report for sharing?</p></div=
></div></div></div></div></div></div></div></article><article class=3D"text=
-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-1=
09" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div c=
lass=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4=
)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-conte=
nt-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thr=
ead-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[=
64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-cont=
ent-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages=
 focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversa=
tion-turn relative flex w-full min-w-0 flex-col"><div class=3D"relative fle=
x-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div dat=
a-message-author-role=3D"user" data-message-id=3D"3a8d8ea5-6f51-4a47-8c62-c=
9f475fab58c" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-ful=
l flex-col items-end gap-2 text-start break-words whitespace-normal [.text-=
message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden =
items-end rtl:items-start"><div class=3D"relative max-w-[var(--user-chat-wi=
dth,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"w=
hitespace-pre-wrap">where are the face / non_face labels for the images </d=
iv></div></div></div></div></div></div></div></div></article><article class=
=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversatio=
n-turn-110" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said=
:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin=
:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--=
thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div cla=
ss=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-wid=
th:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(-=
-thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/t=
urn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"gr=
oup/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><di=
v class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full =
flex-col grow"><div data-message-author-role=3D"assistant" data-message-id=
=3D"ab04fe2d-fc7c-4b91-aa10-cfb5b7629a8f" dir=3D"auto" class=3D"min-h-8 tex=
t-message relative flex w-full flex-col items-end gap-2 text-start break-wo=
rds whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=
=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-=
[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-words da=
rk"><p data-start=3D"0" data-end=3D"203" class=3D"">Excellent question=E2=
=80=94because all the face vs. non-face analyses (like in <code data-start=
=3D"71" data-end=3D"75">1a</code>, <code data-start=3D"77" data-end=3D"81">=
1b</code>, <code data-start=3D"83" data-end=3D"87">7a</code>, etc.) depend =
on these labels being accurate and accessible. Here's where they come from =
and how you can find them:</p>
<hr data-start=3D"205" data-end=3D"208" class=3D"">
<h2 data-start=3D"210" data-end=3D"264" class=3D"">=F0=9F=93=A6 Where are t=
he <strong data-start=3D"230" data-end=3D"256">face / non-face labels</stro=
ng> stored?</h2>
<h3 data-start=3D"266" data-end=3D"304" class=3D"">=E2=9C=85 1. <strong dat=
a-start=3D"275" data-end=3D"304">Trial Metadata (<code data-start=3D"293" d=
ata-end=3D"301">trials</code>)</strong></h3>
<p data-start=3D"305" data-end=3D"444" class=3D"">The category labels you'r=
e referring to are almost always embedded in the <code data-start=3D"379" d=
ata-end=3D"387">trials</code> object loaded per session, usually a <code da=
ta-start=3D"425" data-end=3D"443">pandas.DataFrame</code>.</p>
<p data-start=3D"446" data-end=3D"480" class=3D"">When you load a session l=
ike this:</p>
<pre class=3D"overflow-visible!" data-start=3D"482" data-end=3D"557"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>sess_data =3D data[</span><span><span class=3D"hljs=
-string">"some_session"</span></span><span>]
trials =3D sess_data[</span><span><span class=3D"hljs-string">"trials"</spa=
n></span><span>]
</span></span></code></div></div></pre>
<p data-start=3D"559" data-end=3D"580" class=3D"">You=E2=80=99ll typically =
see:</p>
<pre class=3D"overflow-visible!" data-start=3D"582" data-end=3D"675"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>trials.columns
</span><span><span class=3D"hljs-comment"># =E2=86=92 ['image_id', 'categor=
y', 'fix_onsets', 'sacc_ordinals', ...]</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"677" data-end=3D"695" class=3D"">The key column is:</p>
<pre class=3D"overflow-visible!" data-start=3D"697" data-end=3D"729"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>trials[</span><span><span class=3D"hljs-string">'ca=
tegory'</span></span><span>]
</span></span></code></div></div></pre>
<p data-start=3D"731" data-end=3D"757" class=3D"">This contains labels like=
:</p>
<ul data-start=3D"758" data-end=3D"861">
<li data-start=3D"758" data-end=3D"774" class=3D"">
<p data-start=3D"760" data-end=3D"774" class=3D""><code data-start=3D"760" =
data-end=3D"774">'human_face'</code></p>
</li>
<li data-start=3D"775" data-end=3D"792" class=3D"">
<p data-start=3D"777" data-end=3D"792" class=3D""><code data-start=3D"777" =
data-end=3D"792">'monkey_face'</code></p>
</li>
<li data-start=3D"793" data-end=3D"805" class=3D"">
<p data-start=3D"795" data-end=3D"805" class=3D""><code data-start=3D"795" =
data-end=3D"805">'object'</code></p>
</li>
<li data-start=3D"806" data-end=3D"817" class=3D"">
<p data-start=3D"808" data-end=3D"817" class=3D""><code data-start=3D"808" =
data-end=3D"817">'scene'</code></p>
</li>
<li data-start=3D"818" data-end=3D"833" class=3D"">
<p data-start=3D"820" data-end=3D"833" class=3D""><code data-start=3D"820" =
data-end=3D"833">'body_part'</code></p>
</li>
<li data-start=3D"834" data-end=3D"844" class=3D"">
<p data-start=3D"836" data-end=3D"844" class=3D""><code data-start=3D"836" =
data-end=3D"844">'text'</code></p>
</li>
<li data-start=3D"845" data-end=3D"861" class=3D"">
<p data-start=3D"847" data-end=3D"861" class=3D""><code data-start=3D"847" =
data-end=3D"861">'artificial'</code></p>
</li>
</ul>
<p data-start=3D"863" data-end=3D"996" class=3D"">These categories were <st=
rong data-start=3D"885" data-end=3D"927">assigned during stimulus preproces=
sing</strong>, and they describe the content of the image presented on that=
 trial.</p>
<hr data-start=3D"998" data-end=3D"1001" class=3D"">
<h3 data-start=3D"1003" data-end=3D"1047" class=3D"">=E2=9C=85 2. <strong d=
ata-start=3D"1012" data-end=3D"1047">Where they originally came from</stron=
g></h3>
<p data-start=3D"1049" data-end=3D"1108" class=3D"">These labels were most =
likely defined by the experimenters:</p>
<ul data-start=3D"1109" data-end=3D"1343">
<li data-start=3D"1109" data-end=3D"1186" class=3D"">
<p data-start=3D"1111" data-end=3D"1186" class=3D"">During stimulus curatio=
n (e.g., when collecting or designing the image set)</p>
</li>
<li data-start=3D"1187" data-end=3D"1259" class=3D"">
<p data-start=3D"1189" data-end=3D"1259" class=3D"">Stored in a lookup tabl=
e or metadata file (e.g., <code data-start=3D"1238" data-end=3D"1258">image=
_metadata.csv</code>)</p>
</li>
<li data-start=3D"1260" data-end=3D"1343" class=3D"">
<p data-start=3D"1262" data-end=3D"1343" class=3D"">Then injected into the =
trial metadata when the data was packaged and preprocessed</p>
</li>
</ul>
<p data-start=3D"1345" data-end=3D"1514" class=3D"">You can usually find th=
is in the <a data-start=3D"1378" data-end=3D"1431" rel=3D"noopener" target=
=3D"_new" class=3D"" href=3D"https://github.com/willwx/free_viewing">GitHub=
 repo</a> or <a data-start=3D"1435" data-end=3D"1492" rel=3D"noopener" targ=
et=3D"_new" class=3D"">DANDI dataset</a> under something like:</p>
<pre class=3D"overflow-visible!" data-start=3D"1516" data-end=3D"1581"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">pgsql</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><spa=
n><span>stimuli/
=E2=94=9C=E2=94=80=E2=94=80 image_list.json
=E2=94=9C=E2=94=80=E2=94=80 image_id_to_category.csv
</span></span></code></div></div></pre>
<hr data-start=3D"1583" data-end=3D"1586" class=3D"">
<h2 data-start=3D"1588" data-end=3D"1628" class=3D"">=F0=9F=92=A1 How to ve=
rify what's in your data:</h2>
<pre class=3D"overflow-visible!" data-start=3D"1630" data-end=3D"1677"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>trials[</span><span><span class=3D"hljs-string">'ca=
tegory'</span></span><span>].value_counts()
</span></span></code></div></div></pre>
<p data-start=3D"1679" data-end=3D"1746" class=3D"">This will show you how =
many trials were labeled with each category.</p>
<p data-start=3D"1748" data-end=3D"1784" class=3D"">You can also list uniqu=
e categories:</p>
<pre class=3D"overflow-visible!" data-start=3D"1786" data-end=3D"1835"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-built_in">sorted</span></span><=
span>(trials[</span><span><span class=3D"hljs-string">'category'</span></sp=
an><span>].unique())
</span></span></code></div></div></pre>
<hr data-start=3D"1837" data-end=3D"1840" class=3D"">
<h2 data-start=3D"1842" data-end=3D"1876" class=3D"">=F0=9F=A7=A0 How they=
=E2=80=99re used in analysis</h2>
<p data-start=3D"1878" data-end=3D"1906" class=3D"">In <code data-start=3D"=
1881" data-end=3D"1892">script_1a</code>, for example:</p>
<pre class=3D"overflow-visible!" data-start=3D"1908" data-end=3D"2024"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>face_labels =3D [</span><span><span class=3D"hljs-s=
tring">'human_face'</span></span><span>, </span><span><span class=3D"hljs-s=
tring">'monkey_face'</span></span><span>]
nonface_labels =3D [</span><span><span class=3D"hljs-string">'object'</span=
></span><span>, </span><span><span class=3D"hljs-string">'scene'</span></sp=
an><span>, </span><span><span class=3D"hljs-string">'text'</span></span><sp=
an>, </span><span><span class=3D"hljs-string">'artificial'</span></span><sp=
an>]
</span></span></code></div></div></pre>
<p data-start=3D"2026" data-end=3D"2087" class=3D"">Then face vs. non-face =
comparisons are computed by filtering:</p>
<pre class=3D"overflow-visible!" data-start=3D"2088" data-end=3D"2160"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>face_trials =3D trials[trials[</span><span><span cl=
ass=3D"hljs-string">'category'</span></span><span>].isin(face_labels)]
</span></span></code></div></div></pre>
<hr data-start=3D"2162" data-end=3D"2165" class=3D"">
<h2 data-start=3D"2167" data-end=3D"2177" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"21=
79" data-end=3D"2484" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2179" data-end=3D"2195"><tr data-start=3D"2179" data-end=3D"=
2195"><th data-start=3D"2179" data-end=3D"2187" data-col-size=3D"sm">Where<=
/th><th data-start=3D"2187" data-end=3D"2195" data-col-size=3D"md">What</th=
></tr></thead><tbody data-start=3D"2213" data-end=3D"2484"><tr data-start=
=3D"2213" data-end=3D"2279"><td data-start=3D"2213" data-end=3D"2236" data-=
col-size=3D"sm"><code data-start=3D"2215" data-end=3D"2235">trials['categor=
y']</code></td><td data-start=3D"2236" data-end=3D"2279" data-col-size=3D"m=
d">Contains face/non-face labels per trial</td></tr><tr data-start=3D"2280"=
 data-end=3D"2329"><td data-start=3D"2280" data-end=3D"2294" data-col-size=
=3D"sm">Face labels</td><td data-start=3D"2294" data-end=3D"2329" data-col-=
size=3D"md"><code data-start=3D"2296" data-end=3D"2327">['human_face', 'mon=
key_face']</code></td></tr><tr data-start=3D"2330" data-end=3D"2400"><td da=
ta-start=3D"2330" data-end=3D"2348" data-col-size=3D"sm">Non-face labels</t=
d><td data-start=3D"2348" data-end=3D"2400" data-col-size=3D"md"><code data=
-start=3D"2350" data-end=3D"2398">['object', 'scene', 'text', 'artificial',=
 ...]</code></td></tr><tr data-start=3D"2401" data-end=3D"2484"><td data-st=
art=3D"2401" data-end=3D"2410" data-col-size=3D"sm">Origin</td><td data-sta=
rt=3D"2410" data-end=3D"2484" data-col-size=3D"md">Probably defined in a st=
imulus metadata file (<code data-start=3D"2458" data-end=3D"2468">image_id<=
/code> =E2=86=92 <code data-start=3D"2471" data-end=3D"2481">category</code=
>)</td></tr></tbody></table><div class=3D"sticky end-(--thread-content-marg=
in) h-0 self-end select-none"><div class=3D"absolute end-0 flex items-end" =
style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button=
 class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-se=
condary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:foc=
us-within)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opa=
city-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none"=
 xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-ru=
le=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C=
20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 1=
5.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5Z=
M9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4=
.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772=
 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.4=
4772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span>=
</div></div></div></div>
<hr data-start=3D"2486" data-end=3D"2489" class=3D"">
<p data-start=3D"2491" data-end=3D"2599" class=3D"">Want me to help write a=
 snippet that joins trial-level data with the original image metadata for i=
nspection?</p></div></div></div></div></div></div></div></div></article><ar=
ticle class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"=
conversation-turn-111" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">Y=
ou said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content=
-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72r=
em]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><=
div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-=
max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex m=
ax-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 =
group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div clas=
s=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><div cl=
ass=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex=
-col grow"><div data-message-author-role=3D"user" data-message-id=3D"9d7c8b=
f5-f890-45c7-aad9-18933ad2a92d" dir=3D"auto" class=3D"min-h-8 text-message =
relative flex w-full flex-col items-end gap-2 text-start break-words whites=
pace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col =
gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-=
[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2=
.5"><div class=3D"whitespace-pre-wrap">based on the scripts does it show yo=
u anywhere that the classification of the image is used for example with th=
e DNN</div></div></div></div></div></div></div></div></div></article><artic=
le class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"con=
versation-turn-112" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">Chat=
GPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-conten=
t-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72=
rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)">=
<div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content=
-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex =
max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6=
 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div cla=
ss=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-t=
urn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max=
-w-full flex-col grow"><div data-message-author-role=3D"assistant" data-mes=
sage-id=3D"e3a17d9f-48af-45ac-956d-f777ef6e2420" dir=3D"auto" class=3D"min-=
h-8 text-message relative flex w-full flex-col items-end gap-2 text-start b=
reak-words whitespace-normal [.text-message+&amp;]:mt-5" data-message-model=
-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden firs=
t:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-wor=
ds dark"><p data-start=3D"0" data-end=3D"59" class=3D"">Amazing question=E2=
=80=94and very sharp. Let's take a careful look:</p>
<hr data-start=3D"61" data-end=3D"64" class=3D"">
<h2 data-start=3D"66" data-end=3D"198" class=3D"">=F0=9F=94=8D Are the <str=
ong data-start=3D"80" data-end=3D"105">image category labels</strong> (like=
 <code data-start=3D"112" data-end=3D"126">'human_face'</code>, <code data-=
start=3D"128" data-end=3D"138">'object'</code>) ever used <strong data-star=
t=3D"150" data-end=3D"162">directly</strong> in the deep learning (DNN) scr=
ipts?</h2>
<h3 data-start=3D"200" data-end=3D"219" class=3D"">=E2=9C=85 Short answer:<=
/h3>
<p data-start=3D"220" data-end=3D"241" class=3D""><strong data-start=3D"220=
" data-end=3D"241">No, not directly.</strong></p>
<p data-start=3D"243" data-end=3D"516" class=3D"">The DNN-based scripts (es=
pecially <code data-start=3D"277" data-end=3D"288">script_5a</code>, <code =
data-start=3D"290" data-end=3D"294">6a</code>, and <code data-start=3D"300"=
 data-end=3D"304">6b</code>) use the <strong data-start=3D"314" data-end=3D=
"336">raw image features</strong> extracted by a pretrained model like <str=
ong data-start=3D"374" data-end=3D"384">ResNet</strong>, but they <strong d=
ata-start=3D"395" data-end=3D"445">do not feed the category labels into the=
 model</strong>, nor do they use the labels for supervised training or clas=
sification.</p>
<hr data-start=3D"518" data-end=3D"521" class=3D"">
<h2 data-start=3D"523" data-end=3D"556" class=3D"">=F0=9F=A7=A0 What <em da=
ta-start=3D"534" data-end=3D"538">do</em> those scripts do?</h2>
<h3 data-start=3D"558" data-end=3D"595" class=3D"">=F0=9F=93=81 <code data-=
start=3D"565" data-end=3D"595">script_5a_vision_model.ipynb</code></h3>
<ul data-start=3D"596" data-end=3D"855">
<li data-start=3D"596" data-end=3D"635" class=3D"">
<p data-start=3D"598" data-end=3D"635" class=3D"">Takes each image that the=
 monkey saw.</p>
</li>
<li data-start=3D"636" data-end=3D"693" class=3D"">
<p data-start=3D"638" data-end=3D"693" class=3D"">Passes it through ResNet =
(or another pretrained model).</p>
</li>
<li data-start=3D"694" data-end=3D"772" class=3D"">
<p data-start=3D"696" data-end=3D"772" class=3D"">Extracts <strong data-sta=
rt=3D"705" data-end=3D"737">intermediate feature vectors</strong> (e.g. fro=
m <code data-start=3D"749" data-end=3D"757">layer4</code>, <code data-start=
=3D"759" data-end=3D"764">fc6</code>, etc.).</p>
</li>
<li data-start=3D"773" data-end=3D"855" class=3D"">
<p data-start=3D"775" data-end=3D"855" class=3D""><strong data-start=3D"775=
" data-end=3D"810">Does not care what the image is</strong>=E2=80=94it's to=
tally agnostic to the image category.</p>
</li>
</ul>
<p data-start=3D"857" data-end=3D"936" class=3D"">No image label (like <cod=
e data-start=3D"878" data-end=3D"893">'monkey_face'</code> or <code data-st=
art=3D"897" data-end=3D"906">'scene'</code>) is used during this process.</=
p>
<hr data-start=3D"938" data-end=3D"941" class=3D"">
<h3 data-start=3D"943" data-end=3D"982" class=3D"">=F0=9F=93=81 <code data-=
start=3D"950" data-end=3D"982">script_6a_model_perf_map.ipynb</code></h3>
<ul data-start=3D"983" data-end=3D"1256">
<li data-start=3D"983" data-end=3D"1044" class=3D"">
<p data-start=3D"985" data-end=3D"1044" class=3D"">Uses those feature vecto=
rs to <strong data-start=3D"1015" data-end=3D"1043">predict neural response=
s</strong>.</p>
</li>
<li data-start=3D"1045" data-end=3D"1141" class=3D"">
<p data-start=3D"1047" data-end=3D"1141" class=3D"">Trains <strong data-sta=
rt=3D"1054" data-end=3D"1086">Ridge regressions per neuron</strong> to see =
how well DNN features can explain firing rates.</p>
</li>
<li data-start=3D"1142" data-end=3D"1181" class=3D"">
<p data-start=3D"1144" data-end=3D"1181" class=3D"">Again, no use of <code =
data-start=3D"1161" data-end=3D"1173">'category'</code> labels.</p>
</li>
<li data-start=3D"1182" data-end=3D"1256" class=3D"">
<p data-start=3D"1184" data-end=3D"1256" class=3D"">Only the model features=
 and neural responses are matched trial-by-trial.</p>
</li>
</ul>
<p data-start=3D"1258" data-end=3D"1401" class=3D"">So if Image #23 was a <=
code data-start=3D"1280" data-end=3D"1295">'monkey_face'</code>, the model =
doesn=E2=80=99t know or care=E2=80=94it just gets the feature vector and tr=
ies to predict the neural activity.</p>
<hr data-start=3D"1403" data-end=3D"1406" class=3D"">
<h3 data-start=3D"1408" data-end=3D"1446" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"1415" data-end=3D"1446">script_6b_feat_corr_map.ipynb</code></h3=
>
<ul data-start=3D"1447" data-end=3D"1858">
<li data-start=3D"1447" data-end=3D"1531" class=3D"">
<p data-start=3D"1449" data-end=3D"1531" class=3D"">Computes pairwise simil=
arity between images in <strong data-start=3D"1496" data-end=3D"1509">DNN s=
pace</strong> and <strong data-start=3D"1514" data-end=3D"1530">neural spac=
e</strong>.</p>
</li>
<li data-start=3D"1532" data-end=3D"1575" class=3D"">
<p data-start=3D"1534" data-end=3D"1575" class=3D"">Then correlates those m=
atrices using RSA.</p>
</li>
<li data-start=3D"1576" data-end=3D"1646" class=3D"">
<p data-start=3D"1578" data-end=3D"1646" class=3D"">Image categories again =
are <strong data-start=3D"1605" data-end=3D"1621">not involved</strong> in =
computing similarity.</p>
</li>
<li data-start=3D"1647" data-end=3D"1858" class=3D"">
<p data-start=3D"1649" data-end=3D"1711" class=3D"">However, you <em data-s=
tart=3D"1662" data-end=3D"1669">could</em> use the <code data-start=3D"1678=
" data-end=3D"1690">'category'</code> labels afterward to:</p>
<ul data-start=3D"1714" data-end=3D"1858">
<li data-start=3D"1714" data-end=3D"1767" class=3D"">
<p data-start=3D"1716" data-end=3D"1767" class=3D"">Visualize category stru=
cture in similarity matrices</p>
</li>
<li data-start=3D"1770" data-end=3D"1818" class=3D"">
<p data-start=3D"1772" data-end=3D"1818" class=3D"">Compare within- vs. bet=
ween-category distances</p>
</li>
<li data-start=3D"1821" data-end=3D"1858" class=3D"">
<p data-start=3D"1823" data-end=3D"1858" class=3D"">Cluster images by categ=
ory post hoc</p>
</li>
</ul>
</li>
</ul>
<p data-start=3D"1860" data-end=3D"1906" class=3D"">But this is not done in=
 the script by default.</p>
<hr data-start=3D"1908" data-end=3D"1911" class=3D"">
<h2 data-start=3D"1913" data-end=3D"1944" class=3D"">=F0=9F=94=AC So what i=
s the DNN doing?</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"19=
46" data-end=3D"2278" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1946" data-end=3D"1966"><tr data-start=3D"1946" data-end=3D"=
1966"><th data-start=3D"1946" data-end=3D"1953" data-col-size=3D"md">Task</=
th><th data-start=3D"1953" data-end=3D"1966" data-col-size=3D"sm">Involved?=
</th></tr></thead><tbody data-start=3D"1988" data-end=3D"2278"><tr data-sta=
rt=3D"1988" data-end=3D"2042"><td data-start=3D"1988" data-end=3D"2033" dat=
a-col-size=3D"md">Predicting firing rate from image features</td><td data-s=
tart=3D"2033" data-end=3D"2042" data-col-size=3D"sm">=E2=9C=85 Yes</td></tr=
><tr data-start=3D"2043" data-end=3D"2088"><td data-start=3D"2043" data-end=
=3D"2080" data-col-size=3D"md">Receiving category labels as input</td><td d=
ata-start=3D"2080" data-end=3D"2088" data-col-size=3D"sm">=E2=9D=8C No</td>=
</tr><tr data-start=3D"2089" data-end=3D"2129"><td data-start=3D"2089" data=
-end=3D"2121" data-col-size=3D"md">Being fine-tuned or retrained</td><td da=
ta-start=3D"2121" data-end=3D"2129" data-col-size=3D"sm">=E2=9D=8C No</td><=
/tr><tr data-start=3D"2130" data-end=3D"2211"><td data-start=3D"2130" data-=
end=3D"2171" data-col-size=3D"md">Being used to decode stimulus identity</t=
d><td data-start=3D"2171" data-end=3D"2211" data-col-size=3D"sm">=E2=9D=8C =
Not directly (but could be added!)</td></tr><tr data-start=3D"2212" data-en=
d=3D"2278"><td data-start=3D"2212" data-end=3D"2251" data-col-size=3D"md">B=
eing compared to brain in structure</td><td data-start=3D"2251" data-end=3D=
"2278" data-col-size=3D"sm">=E2=9C=85 Yes (via RSA in <code data-start=3D"2=
271" data-end=3D"2275">6b</code>)</td></tr></tbody></table><div class=3D"st=
icky end-(--thread-content-margin) h-0 self-end select-none"><div class=3D"=
absolute end-0 flex items-end" style=3D"height: 32.8906px;"><span class=3D"=
" data-state=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token=
-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 transition-opaci=
ty group-[:not(:hover):not(:focus-within)]:pointer-events-none group-[:not(=
:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" view=
Box=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"2280" data-end=3D"2283" class=3D"">
<h2 data-start=3D"2285" data-end=3D"2295" class=3D"">=E2=9C=85 TL;DR</h2>
<ul data-start=3D"2297" data-end=3D"2570">
<li data-start=3D"2297" data-end=3D"2424" class=3D"">
<p data-start=3D"2299" data-end=3D"2424" class=3D"">The <strong data-start=
=3D"2303" data-end=3D"2328">image category labels</strong> like <code data-=
start=3D"2334" data-end=3D"2348">'human_face'</code>, <code data-start=3D"2=
350" data-end=3D"2359">'scene'</code>, etc. are <strong data-start=3D"2370"=
 data-end=3D"2393">never used directly</strong> in the DNN pipeline (<code =
data-start=3D"2415" data-end=3D"2422">5a=E2=80=936b</code>).</p>
</li>
<li data-start=3D"2425" data-end=3D"2475" class=3D"">
<p data-start=3D"2427" data-end=3D"2475" class=3D"">The DNN is used <strong=
 data-start=3D"2443" data-end=3D"2474">as a feature extractor only</strong>=
.</p>
</li>
<li data-start=3D"2476" data-end=3D"2570" class=3D"">
<p data-start=3D"2478" data-end=3D"2570" class=3D"">All model-based predict=
ions or comparisons are based on <strong data-start=3D"2534" data-end=3D"25=
51">image content</strong>, not class labels.</p>
</li>
</ul>
<hr data-start=3D"2572" data-end=3D"2575" class=3D"">
<p data-start=3D"2577" data-end=3D"2653" class=3D"">Want to add category-ba=
sed analysis to RSA or encoding results? For example:</p>
<ul data-start=3D"2654" data-end=3D"2799">
<li data-start=3D"2654" data-end=3D"2701" class=3D"">
<p data-start=3D"2656" data-end=3D"2701" class=3D"">Compare model alignment=
 <strong data-start=3D"2680" data-end=3D"2701">across categories</strong></=
p>
</li>
<li data-start=3D"2702" data-end=3D"2757" class=3D"">
<p data-start=3D"2704" data-end=3D"2757" class=3D"">Test whether face trial=
s yield higher DNN-to-brain R=C2=B2</p>
</li>
<li data-start=3D"2758" data-end=3D"2799" class=3D"">
<p data-start=3D"2760" data-end=3D"2799" class=3D"">Or cluster RSA matrices=
 by <code data-start=3D"2787" data-end=3D"2799">'category'</code></p>
</li>
</ul>
<p data-start=3D"2801" data-end=3D"2836" class=3D"">I=E2=80=99d be happy to=
 help with that too.</p></div></div></div></div></div></div></div></div></a=
rticle><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-=
testid=3D"conversation-turn-113" data-scroll-anchor=3D"false"><h5 class=3D"=
sr-only">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thre=
ad-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing=
(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-=
margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--threa=
d-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-a=
uto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5=
 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"=
><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-co=
l"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w=
-full flex-col grow"><div data-message-author-role=3D"user" data-message-id=
=3D"ff633f6e-c8a6-47b6-84a8-722895f2d2bc" dir=3D"auto" class=3D"min-h-8 tex=
t-message relative flex w-full flex-col items-end gap-2 text-start break-wo=
rds whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full=
 flex-col gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relat=
ive max-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl=
 px-5 py-2.5"><div class=3D"whitespace-pre-wrap">is the model looking at sp=
ecific layers? </div></div></div></div></div></div></div></div></div></arti=
cle><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-tes=
tid=3D"conversation-turn-114" data-scroll-anchor=3D"false"><h6 class=3D"sr-=
only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thr=
ead-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacin=
g(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content=
-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thre=
ad-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-=
auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-=
5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1=
"><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-c=
ol agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=
=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"assista=
nt" data-message-id=3D"599ad5a9-d0f8-44f1-9c40-6027e487645b" dir=3D"auto" c=
lass=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 =
text-start break-words whitespace-normal [.text-message+&amp;]:mt-5" data-m=
essage-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty=
:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-fu=
ll break-words dark"><p data-start=3D"0" data-end=3D"290" class=3D"">Yes, i=
t is! =E2=9C=85<br data-start=3D"13" data-end=3D"16">
In the DNN-based part of the pipeline=E2=80=94especially <code data-start=
=3D"65" data-end=3D"95">script_5a_vision_model.ipynb</code> and <code data-=
start=3D"100" data-end=3D"132">script_6a_model_perf_map.ipynb</code>=E2=80=
=94the model is indeed extracting features from <strong data-start=3D"178" =
data-end=3D"197">specific layers</strong> of a pretrained CNN (e.g., ResNet=
-50), and those layer choices are critical to the analysis.</p>
<p data-start=3D"292" data-end=3D"321" class=3D"">Let=E2=80=99s unpack what=
 that means:</p>
<hr data-start=3D"323" data-end=3D"326" class=3D"">
<h2 data-start=3D"328" data-end=3D"360" class=3D"">=F0=9F=A7=A0 Why specifi=
c layers matter</h2>
<p data-start=3D"362" data-end=3D"455" class=3D"">Each layer in a deep visi=
on model like ResNet represents <strong data-start=3D"419" data-end=3D"454"=
>different levels of abstraction</strong>:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"45=
7" data-end=3D"760" class=3D"w-fit min-w-(--thread-content-width)"><thead d=
ata-start=3D"457" data-end=3D"500"><tr data-start=3D"457" data-end=3D"500">=
<th data-start=3D"457" data-end=3D"465" data-col-size=3D"sm">Layer</th><th =
data-start=3D"465" data-end=3D"479" data-col-size=3D"sm">Captures...</th><t=
h data-start=3D"479" data-end=3D"500" data-col-size=3D"sm">Corresponds to..=
.</th></tr></thead><tbody data-start=3D"545" data-end=3D"760"><tr data-star=
t=3D"545" data-end=3D"607"><td data-start=3D"545" data-end=3D"567" data-col=
-size=3D"sm">Early (e.g., conv1)</td><td data-start=3D"567" data-end=3D"598=
" data-col-size=3D"sm">Edges, textures, orientation</td><td data-start=3D"5=
98" data-end=3D"607" data-col-size=3D"sm">V1/V2</td></tr><tr data-start=3D"=
608" data-end=3D"677"><td data-start=3D"608" data-end=3D"637" data-col-size=
=3D"sm">Mid (e.g., layer2, layer3)</td><td data-start=3D"637" data-end=3D"6=
56" data-col-size=3D"sm">Shapes, contours</td><td data-start=3D"656" data-e=
nd=3D"677" data-col-size=3D"sm">V4/Ventral stream</td></tr><tr data-start=
=3D"678" data-end=3D"760"><td data-start=3D"678" data-end=3D"704" data-col-=
size=3D"sm">Late (e.g., layer4, fc)</td><td data-start=3D"704" data-end=3D"=
731" data-col-size=3D"sm">Object parts, categories</td><td data-start=3D"73=
1" data-end=3D"760" data-col-size=3D"sm">IT cortex, semantic areas</td></tr=
></tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 sel=
f-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D"he=
ight: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"b=
g-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-=
1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]=
:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><sv=
g width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"h=
ttp://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"eveno=
dd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 2=
2 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 1=
4 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.=
6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5=
523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 =
19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.552=
3 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div=
></div></div>
<p data-start=3D"762" data-end=3D"840" class=3D"">So, by comparing <strong =
data-start=3D"779" data-end=3D"799">different layers</strong> to the brain,=
 you're essentially asking:</p>
<blockquote data-start=3D"842" data-end=3D"926">
<p data-start=3D"844" data-end=3D"926" class=3D"">=E2=80=9CWhich part of th=
e model aligns with which part of the monkey=E2=80=99s visual hierarchy?=E2=
=80=9D</p>
</blockquote>
<hr data-start=3D"928" data-end=3D"931" class=3D"">
<h2 data-start=3D"933" data-end=3D"978" class=3D"">=F0=9F=94=8D Where in th=
e scripts do layers show up?</h2>
<h3 data-start=3D"980" data-end=3D"1017" class=3D"">=F0=9F=93=81 <code data=
-start=3D"987" data-end=3D"1017">script_5a_vision_model.ipynb</code></h3>
<p data-start=3D"1019" data-end=3D"1058" class=3D"">Here, you typically see=
 something like:</p>
<pre class=3D"overflow-visible!" data-start=3D"1060" data-end=3D"1209"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>model =3D torchvision.models.resnet50(pretrained=3D=
</span><span><span class=3D"hljs-literal">True</span></span><span>)
model.</span><span><span class=3D"hljs-built_in">eval</span></span><span>()

feature_extractor =3D torch.nn.Sequential(*</span><span><span class=3D"hljs=
-built_in">list</span></span><span>(model.children())[:N])
</span></span></code></div></div></pre>
<ul data-start=3D"1211" data-end=3D"1487">
<li data-start=3D"1211" data-end=3D"1269" class=3D"">
<p data-start=3D"1213" data-end=3D"1269" class=3D""><code data-start=3D"121=
3" data-end=3D"1216">N</code> is chosen to <strong data-start=3D"1230" data=
-end=3D"1269">slice the model at a specific layer</strong></p>
</li>
<li data-start=3D"1270" data-end=3D"1415" class=3D"">
<p data-start=3D"1272" data-end=3D"1295" class=3D"">Common choices include:=
</p>
<ul data-start=3D"1298" data-end=3D"1415">
<li data-start=3D"1298" data-end=3D"1364" class=3D"">
<p data-start=3D"1300" data-end=3D"1364" class=3D""><code data-start=3D"130=
0" data-end=3D"1308">layer1</code>, <code data-start=3D"1310" data-end=3D"1=
318">layer2</code>, <code data-start=3D"1320" data-end=3D"1328">layer3</cod=
e>, <code data-start=3D"1330" data-end=3D"1338">layer4</code> (these are Re=
sNet blocks)</p>
</li>
<li data-start=3D"1367" data-end=3D"1415" class=3D"">
<p data-start=3D"1369" data-end=3D"1415" class=3D"">Or even the final fully=
 connected layer (<code data-start=3D"1410" data-end=3D"1414">fc</code>)</p=
>
</li>
</ul>
</li>
<li data-start=3D"1416" data-end=3D"1487" class=3D"">
<p data-start=3D"1418" data-end=3D"1487" class=3D"">The output from this ex=
tractor is then flattened and stored per image</p>
</li>
</ul>
<hr data-start=3D"1489" data-end=3D"1492" class=3D"">
<h3 data-start=3D"1494" data-end=3D"1533" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"1501" data-end=3D"1533">script_6a_model_perf_map.ipynb</code></h=
3>
<p data-start=3D"1535" data-end=3D"1663" class=3D"">Once the image features=
 are extracted from a chosen layer, they=E2=80=99re used to <strong data-st=
art=3D"1610" data-end=3D"1641">predict neural firing rates</strong> via Rid=
ge regression.</p>
<p data-start=3D"1665" data-end=3D"1727" class=3D"">If you loop this analys=
is across <strong data-start=3D"1698" data-end=3D"1717">multiple layers</st=
rong>, you can:</p>
<ul data-start=3D"1728" data-end=3D"1842">
<li data-start=3D"1728" data-end=3D"1783" class=3D"">
<p data-start=3D"1730" data-end=3D"1783" class=3D"">Identify <strong data-s=
tart=3D"1739" data-end=3D"1783">which layer best explains a given neuron</s=
trong></p>
</li>
<li data-start=3D"1784" data-end=3D"1842" class=3D"">
<p data-start=3D"1786" data-end=3D"1842" class=3D"">Plot <strong data-start=
=3D"1791" data-end=3D"1823">layer-wise model performance</strong> across br=
ain areas</p>
</li>
</ul>
<hr data-start=3D"1844" data-end=3D"1847" class=3D"">
<h2 data-start=3D"1849" data-end=3D"1902" class=3D"">=F0=9F=94=AC Are multi=
ple layers tested in the current code?</h2>
<p data-start=3D"1904" data-end=3D"2011" class=3D""><strong data-start=3D"1=
904" data-end=3D"1934">Most likely not by default</strong>=E2=80=94based on=
 the script names and structure, it looks like the current pipeline:</p>
<ul data-start=3D"2012" data-end=3D"2159">
<li data-start=3D"2012" data-end=3D"2064" class=3D"">
<p data-start=3D"2014" data-end=3D"2064" class=3D"">Uses one chosen layer (=
e.g. <code data-start=3D"2042" data-end=3D"2050">layer4</code>) consistentl=
y</p>
</li>
<li data-start=3D"2065" data-end=3D"2159" class=3D"">
<p data-start=3D"2067" data-end=3D"2159" class=3D"">But is designed in a mo=
dular way that you <em data-start=3D"2109" data-end=3D"2116">could</em> eas=
ily swap layers and repeat the analysis</p>
</li>
</ul>
<hr data-start=3D"2161" data-end=3D"2164" class=3D"">
<h2 data-start=3D"2166" data-end=3D"2213" class=3D"">=F0=9F=A7=A0 Why you=
=E2=80=99d want to compare multiple layers</h2>
<p data-start=3D"2215" data-end=3D"2229" class=3D"">This lets you:</p>
<ul data-start=3D"2230" data-end=3D"2485">
<li data-start=3D"2230" data-end=3D"2275" class=3D"">
<p data-start=3D"2232" data-end=3D"2275" class=3D"">Map <strong data-start=
=3D"2236" data-end=3D"2275">neural hierarchy to model hierarchy</strong></p=
>
</li>
<li data-start=3D"2276" data-end=3D"2347" class=3D"">
<p data-start=3D"2278" data-end=3D"2347" class=3D"">Show that <strong data-=
start=3D"2288" data-end=3D"2316">early visual cortex (V1)</strong> aligns w=
ith early model layers</p>
</li>
<li data-start=3D"2348" data-end=3D"2417" class=3D"">
<p data-start=3D"2350" data-end=3D"2417" class=3D"">Show that <strong data-=
start=3D"2360" data-end=3D"2373">IT cortex</strong> aligns with late model =
layers (e.g., <code data-start=3D"2411" data-end=3D"2416">fc6</code>)</p>
</li>
<li data-start=3D"2418" data-end=3D"2485" class=3D"">
<p data-start=3D"2420" data-end=3D"2485" class=3D"">Strengthen the argument=
 that DNNs recapitulate the ventral stream</p>
</li>
</ul>
<hr data-start=3D"2487" data-end=3D"2490" class=3D"">
<h2 data-start=3D"2492" data-end=3D"2502" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"25=
04" data-end=3D"2851" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2504" data-end=3D"2525"><tr data-start=3D"2504" data-end=3D"=
2525"><th data-start=3D"2504" data-end=3D"2515" data-col-size=3D"md">Questi=
on</th><th data-start=3D"2515" data-end=3D"2525" data-col-size=3D"md">Answe=
r</th></tr></thead><tbody data-start=3D"2547" data-end=3D"2851"><tr data-st=
art=3D"2547" data-end=3D"2604"><td data-start=3D"2547" data-end=3D"2595" da=
ta-col-size=3D"md">Is the model extracting from specific layers?</td><td da=
ta-start=3D"2595" data-end=3D"2604" data-col-size=3D"md">=E2=9C=85 Yes</td>=
</tr><tr data-start=3D"2605" data-end=3D"2667"><td data-start=3D"2605" data=
-end=3D"2659" data-col-size=3D"md">Are category labels involved in choosing=
 the layer?</td><td data-start=3D"2659" data-end=3D"2667" data-col-size=3D"=
md">=E2=9D=8C No</td></tr><tr data-start=3D"2668" data-end=3D"2767"><td dat=
a-start=3D"2668" data-end=3D"2715" data-col-size=3D"md">Is the layer choice=
 biologically meaningful?</td><td data-start=3D"2715" data-end=3D"2767" dat=
a-col-size=3D"md">=E2=9C=85 Very=E2=80=94maps model abstraction to brain hi=
erarchy</td></tr><tr data-start=3D"2768" data-end=3D"2851"><td data-start=
=3D"2768" data-end=3D"2810" data-col-size=3D"md">Are multiple layers tested=
 in parallel?</td><td data-start=3D"2810" data-end=3D"2851" data-col-size=
=3D"md">=F0=9F=94=81 Not yet, but possible and valuable</td></tr></tbody></=
table><div class=3D"sticky end-(--thread-content-margin) h-0 self-end selec=
t-none"><div class=3D"absolute end-0 flex items-end" style=3D"height: 32.89=
06px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-=
primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-s=
m p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:pointer-ev=
ents-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"=
24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w=
3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-ru=
le=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 2=
2 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34=
315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8=
.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H=
10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.4=
4772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z=
" fill=3D"currentColor"></path></svg></button></span></div></div></div></di=
v>
<hr data-start=3D"2853" data-end=3D"2856" class=3D"">
<p data-start=3D"2858" data-end=3D"2992" class=3D"">Want help writing a loo=
p that tests model performance across multiple ResNet layers and compares t=
hem by brain area (e.g., V1 vs. IT)?</p></div></div></div></div></div></div=
></div></div></article><article class=3D"text-token-text-primary w-full" di=
r=3D"auto" data-testid=3D"conversation-turn-115" data-scroll-anchor=3D"fals=
e"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-a=
uto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-=
margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(-=
-thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @=
[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-w=
idth:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-bas=
e gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden"=
 tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full=
 min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div cla=
ss=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"user"=
 data-message-id=3D"671c545e-b6a8-441c-a904-39f43bf4fbae" dir=3D"auto" clas=
s=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 tex=
t-start break-words whitespace-normal [.text-message+&amp;]:mt-5"><div clas=
s=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><di=
v class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-sur=
face rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "94f063dc-f125-4ee5-8a9f-dabf4ad6ab3d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import sys\n",
    "from pathlib import Path\n",
    "from warnings import warn\n",
    "\n",
    "import cv2\n",
    "import h5py as h5\n",
    "import numpy as np\n",
    "import torch\n",
    "from PIL import Image\n",
    "from tqdm import tqdm\n",
    "\n",
    "sys.path.append('../lib')\n",
    "from modeling import models, registry\n",
    "from modeling.utils import make_layer_hook, recur_collapse_feats\n",
    "from storage import get_storage_functions\n",
    "from local_paths import stim_dir, cache_dir"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d548d2ed-0e57-4175-bb1c-0883a0303266",
   "metadata": {},
   "source": [
    "# Parameters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dcf321ad-26b1-4d81-8696-8ef82d773ac7",
   "metadata": {
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D\n",
    "# image to process\n",
    "#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D\n",
    "im_md5s    =3D 'md5_im1,md5_im2'\n",
    "sep        =3D ','\n",
    "im_w       =3D 16    # size of full image; ...\n",
    "im_h       =3D 16    # unit: dva, but only ratio (im_size/patch_size) =
really matters\n",
    "ar_tol     =3D 3/4   # aspect ratio tolerance (between image file and =
provided size)\n",
    "\n",
    "\n",
    "#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D\n",
    "# patch size and resolution\n",
    "#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D\n",
    "patch_size =3D  2    # size of each crop patch\n",
    "patch_step =3D  0.5  # step size of patch location\n",
    "\n",
    "\n",
    "#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D\n",
    "# model params\n",
    "#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D\n",
    "model_name    =3D 'vit_large_patch16_384'\n",
    "layer_name    =3D 'blocks.13.attn.qkv'\n",
    "spatial_averaging =3D True  # over W, H for conv; over S for attention=
\n",
    "\n",
    "\n",
    "#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D\n",
    "# paths\n",
    "#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D\n",
    "# unlike other scripts, this one is intentionally unaware of subfolder=
s\n",
    "# (thereby requiring image IDs, e.g., MD5s, to truly be unique)\n",
    "# all images are in [stim_dir]/Stimuli), so specify it explicitly\n",
    "stim_dir =3D stim_dir + 'Stimuli/'\n",
    "\n",
    "output_root =3D cache_dir + 'feats/'\n",
    "\n",
    "\n",
    "#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D\n",
    "# misc\n",
    "#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D\n",
    "device =3D 'cuda:0'\n",
    "bgc =3D (128,128,128)   # background color; used to pad images"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5f250a1-7a71-4412-a41b-bed7c78ecf61",
   "metadata": {},
   "source": [
    "# Check prereqs and params"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2651528e-f12c-4741-a403-ef0dd37e47b8",
   "metadata": {},
   "outputs": [],
   "source": [
    "print('Loading images from folder', stim_dir)\n",
    "stim_dir =3D Path(stim_dir).expanduser()\n",
    "assert stim_dir.is_dir()\n",
    "\n",
    "output_root =3D Path(output_root)\n",
    "output_path =3D output_root / model_name / layer_name / \\\n",
    "    f'{im_w:.1f}x{im_h:.1f}_as_{patch_size}x{patch_size}_in_{patch_ste=
p:.2f}_steps.h5'\n",
    "print('Saving results to', output_path)\n",
    "output_path =3D output_path.expanduser()\n",
    "output_path.parent.mkdir(exist_ok=3DTrue, parents=3DTrue)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11a637be-a896-479d-94e6-e27e3cb4b28a",
   "metadata": {},
   "source": [
    "# Prepare parameters; save config"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bb4b699a-c203-4b6a-b3aa-80a1dbabef1f",
   "metadata": {},
   "outputs": [],
   "source": [
    "im_md5s =3D im_md5s.split(sep)\n",
    "print('Processing', len(im_md5s), 'images')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "07d92c28-cad7-45ad-8c39-2a4afad63f33",
   "metadata": {},
   "outputs": [],
   "source": [
    "im_size =3D (im_w, im_h)\n",
    "ar_tol =3D min(ar_tol, 1/ar_tol)\n",
    "patch_step =3D float(patch_step)\n",
    "\n",
    "# interpret this as origin =3D=3D lower left\n",
    "patches_ledge_x =3D np.arange(int(np.ceil(im_size[0]/patch_step))) * p=
atch_step  # full and right partial patches\n",
    "patches_ledge_x =3D np.concatenate([\n",
    "    np.arange(-1, -int(np.ceil(patch_size/patch_step)), -1)[::-1] * pa=
tch_step,  # left partial patches\n",
    "    patches_ledge_x])\n",
    "patches_ledge_x -=3D im_size[0] / 2  # align to image center\n",
    "n_patches_x =3D len(patches_ledge_x)\n",
    "\n",
    "patches_ledge_y =3D np.arange(int(np.ceil(im_size[1]/patch_step))) * p=
atch_step  # full and right partial patches\n",
    "patches_ledge_y =3D np.concatenate([\n",
    "    np.arange(-1, -int(np.ceil(patch_size/patch_step)), -1)[::-1] * pa=
tch_step,  # left partial patches\n",
    "    patches_ledge_y])\n",
    "patches_ledge_y -=3D im_size[1] / 2  # align to image center\n",
    "n_patches_y =3D len(patches_ledge_y)\n",
    "\n",
    "print('Patches step size:', patch_step)\n",
    "print(f'Number of patches: {n_patches_x} x {n_patches_y} (x-by-y)')\n"=
,
    "print('Patches (bin lower edge):')\n",
    "print('(The coordinates in degrees are with origin at image center)')\=
n",
    "print('x:')\n",
    "print('\\t' + str(patches_ledge_x).replace('\\n', '\\n\\t'))\n",
    "print('y:')\n",
    "print('\\t' + str(patches_ledge_y).replace('\\n', '\\n\\t'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "213ad700-641e-43c5-aec2-89b23956a6c5",
   "metadata": {},
   "outputs": [],
   "source": [
    "model_imsize =3D registry.get_default_preproc(model_name)['imsize']\n"=
,
    "print('Model input image size:', model_imsize)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e3420d1f-cda1-4493-9202-0b59d9f0f3b8",
   "metadata": {},
   "outputs": [],
   "source": [
    "tqdm_ =3D lambda x: tqdm(x, mininterval=3D300, miniters=3D10)  # to av=
oid bloated log file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "da33ca34-2bb7-4c3b-ae05-e47f6ddbaeea",
   "metadata": {},
   "outputs": [],
   "source": [
    "save_results, add_attr_to_dset, check_equals_saved, link_dsets, copy_g=
roup =3D \\\n",
    "    get_storage_functions(output_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "45aeccaa-b760-4690-baf0-f6d3bc24af4f",
   "metadata": {},
   "outputs": [],
   "source": [
    "save_results('config/stimuli/size_dva', im_size)\n",
    "\n",
    "group =3D 'config/patch_grid/'\n",
    "save_results(group+'size', patch_size)\n",
    "save_results(group+'step', patch_step)\n",
    "save_results(group+'eft_edges', patches_ledge_x)\n",
    "save_results(group+'right_edges', patches_ledge_x+patch_size)\n",
    "save_results(group+'lower_edges', patches_ledge_y)\n",
    "save_results(group+'upper_edges', patches_ledge_y+patch_size)\n",
    "save_results(group+'x_locs', patches_ledge_x+patch_size/2)\n",
    "save_results(group+'y_locs', patches_ledge_y+patch_size/2)\n",
    "\n",
    "group =3D 'config/modelling/'\n",
    "save_results(group+'model_name', model_name)\n",
    "save_results(group+'layer_name', layer_name)\n",
    "save_results(group+'input_image_size', model_imsize)\n",
    "save_results(group+'spatial_averaging', spatial_averaging)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a3d16a1-fff2-4f9f-8569-06f1fe82d2d3",
   "metadata": {},
   "source": [
    "# Locate &amp; load images"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6c8893e1-0605-44f5-a160-e1b20593131e",
   "metadata": {},
   "outputs": [],
   "source": [
    "done_md5s =3D None\n",
    "offset =3D 0\n",
    "if output_path.is_file():\n",
    "    with h5.File(output_path, 'r') as f:\n",
    "        try:\n",
    "            done_md5s =3D f['md5'][()].astype(str)\n",
    "            offset =3D len(done_md5s)\n",
    "        except KeyError:\n",
    "            pass\n",
    "\n",
    "if done_md5s is not None:\n",
    "    done_md5s =3D set(done_md5s)\n",
    "    print(len(done_md5s), 'images already done')\n",
    "    im_md5s =3D [v for v in im_md5s if v not in done_md5s]\n",
    "    print('Processing', len(im_md5s), 'remaining images')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a6466728-85a7-41c5-9c7f-294ce254083b",
   "metadata": {},
   "outputs": [],
   "source": [
    "im_paths =3D [next(stim_dir.glob(md5+'.*')) for md5 in im_md5s]\n",
    "assert all(p.is_file() for p in im_paths)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3471d324-5fa4-464d-af17-4ad3bde5f89d",
   "metadata": {},
   "outputs": [],
   "source": [
    "ar =3D im_size[0] / im_size[1]\n",
    "print(f'Defined image aspect ratio: {ar:.2f}')\n",
    "\n",
    "n_ims =3D len(im_paths)\n",
    "images =3D np.empty(n_ims, dtype=3Dobject)\n",
    "\n",
    "for iim, fp in enumerate(im_paths):\n",
    "    image =3D Image.open(fp)\n",
    "\n",
    "    # check image aspect ratio\n",
    "    ar_ =3D image.size[0] / image.size[1]\n",
    "    if not (0.99 &lt; ar_/ar &lt; 1.01):\n",
    "        if not (ar_tol &lt; ar_/ar &lt; 1/ar_tol):\n",
    "            warn(\n",
    "                f'image {fp.name} (size: {image.size}; AR =3D {ar_:.2f=
}) '\n",
    "                f'is very far from expected aspect ratio (size: {im_si=
ze}; AR =3D {ar:.2f} '\n",
    "                '(resizing it regardless, beceause it would have been =
presented at the '\n",
    "                'specified size)')\n",
    "\n",
    "        i =3D np.argmin(image.size[:2] / np.array(im_size))\n",
    "        if i =3D=3D 0:\n",
    "            w =3D image.size[0]\n",
    "            h =3D int(round(w / ar))\n",
    "        else:\n",
    "            h =3D image.size[1]\n",
    "            w =3D int(round(h * ar))\n",
    "        print(f'Resizing {fp.name} (size: {image.size}; AR =3D {ar_:.2=
f}) to size {(h,w)} (AR =3D {w/h:.2f})')\n",
    "        image =3D np.array(image.resize((w, h)))\n",
    "    else:\n",
    "        image =3D np.array(image)\n",
    "\n",
    "    # make ims 8-bit RGB\n",
    "    assert image.dtype =3D=3D np.uint8\n",
    "    if image.ndim =3D=3D 3:\n",
    "        assert image.shape[-1] in (3,4)\n",
    "        if image.shape[-1] =3D=3D 4:\n",
    "            image =3D image[:,:,:3]\n",
    "    else:\n",
    "        assert image.ndim =3D=3D 2\n",
    "        image =3D np.repeat(image[:,:,None], 3, axis=3D-1)\n",
    "\n",
    "    images[iim] =3D image\n",
    "\n",
    "print(len(images), 'images')\n",
    "images.shape, images.dtype"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b0e3f48-b7a4-4f5e-a786-a158af96a85b",
   "metadata": {},
   "source": [
    "# Prepare model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8ab177d7-f3f9-44aa-b02c-3103367b1bcd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# when no images to process, save time by not loading model\n",
    "# (unfortunately, I do not know how to early-stop an ipynb from within=
 itself)\n",
    "if len(im_md5s):\n",
    "\n",
    "    model =3D models.get_model_by_name(model_name, dev=3Ddevice)\n",
    "    preprocessing_func =3D models.get_preprocessor_by_model_name(model=
_name, preproc_imsize=3DFalse, preproc_from=3D'numpy')\n",
    "\n",
    "    class Embedder:\n",
    "        def __init__(\n",
    "                self, model=3Dmodel, preproc_fun=3Dpreprocessing_func,=
\n",
    "                model_name=3Dmodel_name, layer_names=3Dlayer_name,\n",
    "                spatial_averaging=3Dspatial_averaging,\n",
    "                fwd_fun=3DNone, device=3Ddevice, pbar=3Dtqdm_):\n",
    "\n",
    "            self.model =3D model\n",
    "            self.preproc_fun =3D preproc_fun\n",
    "            self.spatial_averaging =3D spatial_averaging\n",
    "            self.device =3D device\n",
    "            self.pbar =3D pbar\n",
    "\n",
    "            if isinstance(layer_names, str):\n",
    "                layer_names =3D (layer_names,)\n",
    "            else:\n",
    "                assert all(isinstance(n, str) for n in layer_names)\n"=
,
    "            self.layer_names =3D layer_names\n",
    "\n",
    "            if fwd_fun is None:\n",
    "                if model_name is not None and 'CLIP' in model_name:\n"=
,
    "                    fwd_fun =3D model.encode_image\n",
    "                else:\n",
    "                    fwd_fun =3D model.__call__\n",
    "            self.fwd_fun =3D fwd_fun\n",
    "\n",
    "            hooks =3D {}\n",
    "            hdls =3D {}\n",
    "            for n in layer_names:\n",
    "                hooks[n], hdls[n] =3D make_layer_hook(model, n, return=
_handle=3DTrue)\n",
    "            self.hooks =3D hooks\n",
    "            self.hdls =3D hdls\n",
    "\n",
    "        def extract_pooled_features(self, ims):\n",
    "            feats =3D {n: [] for n in self.layer_names}\n",
    "            with torch.no_grad():\n",
    "                for im in self.pbar(ims):\n",
    "                    tim =3D self.preproc_fun(im).unsqueeze(0).to(self.=
device)\n",
    "                    self.fwd_fun(tim)\n",
    "\n",
    "                    for n, hook in self.hooks.items():\n",
    "                        feats_ =3D recur_collapse_feats(hook.o, spatia=
l_averaging=3Dself.spatial_averaging)\n",
    "                        if not isinstance(feats_, torch.Tensor):\n",
    "                            raise ValueError(f'unexpected feature type=
 {type(feats_)} at layer {n}: {feats_}')\n",
    "                        feats_ =3D feats_.cpu().numpy()\n",
    "                        feats[n].append(feats_)\n",
    "\n",
    "            return {n: np.array(v) for n, v in feats.items()}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "06eecd0e-3a6a-46ef-92a6-11a233ab8d31",
   "metadata": {},
   "outputs": [],
   "source": [
    "if len(im_md5s):\n",
    "    embedder =3D Embedder()\n",
    "    test_im =3D np.full((model_imsize, model_imsize, 3), bgc, dtype=3D=
np.uint8)\n",
    "\n",
    "    feats =3D embedder.extract_pooled_features([test_im])\n",
    "    feats =3D feats[layer_name][0]\n",
    "    print('feats:', feats.shape, feats.dtype)\n",
    "    sample_feats =3D feats\n",
    "    feats_shape =3D sample_feats.shape\n",
    "    save_results('config/modelling/pooled_feat_shape', sample_feats.sh=
ape)\n",
    "\n",
    "    with h5.File(output_path, 'a') as f:\n",
    "        if 'feats/bg' not in f:\n",
    "            save_results('feats/bg', sample_feats)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f4521dd6-7ab0-4cdb-baea-5a8c31159c26",
   "metadata": {},
   "source": [
    "# Initialize result storage"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "328aa2fb-3ab5-4598-a4a6-bda0a712de8d",
   "metadata": {},
   "outputs": [],
   "source": [
    "def create_ignoring_existing(f, *args, attrs=3DNone, **kwargs):\n",
    "    assert isinstance(args[0], str)\n",
    "    try:\n",
    "        dset =3D f.create_dataset(*args, **kwargs)\n",
    "        if attrs is not None:\n",
    "            assert isinstance(attrs, dict)\n",
    "            for k, v in attrs.items():\n",
    "                dset.attrs[k] =3D v\n",
    "    except ValueError as e:\n",
    "        if 'name already exists' not in str(e):\n",
    "            raise\n",
    "        dset =3D f[args[0]]\n",
    "        if attrs is not None:\n",
    "            assert isinstance(attrs, dict)\n",
    "            for k, v in attrs.items():\n",
    "                check_equals_saved(v, dset.attrs[k], k)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e7102240-51d1-4667-80a2-25666335b5bc",
   "metadata": {},
   "outputs": [],
   "source": [
    "cache_opts =3D dict(compression=3D'gzip', compression_opts=3D9)\n",
    "if len(im_md5s):\n",
    "    with h5.File(output_path, 'a') as f:\n",
    "        create_ignoring_existing(\n",
    "            f, 'md5',\n",
    "            shape=3D(0,),\n",
    "            maxshape=3D(None,),\n",
    "            chunks=3D(1,),\n",
    "            dtype=3D'S32',\n",
    "            **cache_opts)\n",
    "\n",
    "        dims =3D np.array(['image', 'feat_chan'], dtype=3Dbytes)\n",
    "        coords =3D np.array(['md5', 'feat_chans'], dtype=3Dbytes)\n",
    "        create_ignoring_existing(\n",
    "            f, 'feats/full_image',\n",
    "            shape=3D(0,)+feats_shape,\n",
    "            maxshape=3D(None,)+feats_shape,\n",
    "            attrs=3Ddict(dims=3Ddims, coords=3Dcoords),\n",
    "            chunks=3D(1,)+feats_shape,\n",
    "            dtype=3Dsample_feats.dtype,\n",
    "            **cache_opts)\n",
    "\n",
    "        dims =3D np.array(['image', 'rf_x', 'rf_y', 'feat_chan'], dtyp=
e=3Dbytes)\n",
    "        coords =3D np.array(['md5', 'patch_locs', 'patch_locs', 'feat_=
chans'], dtype=3Dbytes)\n",
    "        shape_ =3D (n_patches_x, n_patches_y,) + feats_shape\n",
    "        create_ignoring_existing(\n",
    "            f, 'feats/patch_grid',\n",
    "            shape=3D(0,)+shape_,\n",
    "            maxshape=3D(None,)+shape_,\n",
    "            attrs=3Ddict(dims=3Ddims, coords=3Dcoords),\n",
    "            chunks=3D(1,)+shape_,\n",
    "            dtype=3Dsample_feats.dtype,\n",
    "            **cache_opts)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0b6371e5-cbe9-40b7-90c4-27885b453cbd",
   "metadata": {},
   "source": [
    "# Main loop"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2a28e420-6029-4384-b629-30d9efc196f1",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_image_patch(im, im_size_dva, patch_min_x_dva, patch_min_y_dva,=
 wsize_dva, wsize_px, bgc=3Dbgc):\n",
    "    assert isinstance(im, np.ndarray)# and im.shape[0] =3D=3D im.shape=
[1]\n",
    "    assert isinstance(wsize_px, int)\n",
    "    map1 =3D np.arange(wsize_px)\n",
    "    map2 =3D map1.copy()\n",
    "    ppd =3D im.shape[0] / im_size_dva[0]\n",
    "    map1 =3D (\n",
    "        ppd * (map1+0.5) / wsize_px * wsize_dva\n",
    "        + ppd * (patch_min_x_dva + im_size_dva[0] / 2)\n",
    "    ).astype(np.float32)\n",
    "    ppd =3D im.shape[1] / im_size_dva[1]\n",
    "    map2 =3D (\n",
    "        ppd * (map2+0.5) / wsize_px * wsize_dva\n",
    "        + ppd * (-patch_min_y_dva -wsize_dva + im_size_dva[1] / 2)\n",
    "    ).astype(np.float32)\n",
    "    map1 =3D np.repeat(map1[None,:], wsize_px, 0)\n",
    "    map2 =3D np.repeat(map2[:,None], wsize_px, 1)\n",
    "    wim =3D cv2.remap(\n",
    "        im.astype(np.float32), map1, map2, interpolation=3Dcv2.INTER_L=
INEAR,\n",
    "        borderMode=3Dcv2.BORDER_CONSTANT, borderValue=3Dbgc)\n",
    "    wim =3D np.round(wim).astype(np.uint8)\n",
    "    return wim"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "09056d21-0d4d-4b7c-b412-fc522ba09c62",
   "metadata": {},
   "outputs": [],
   "source": [
    "embedder.pbar =3D iter  # to avoid bilayer tqdm\n",
    "for iim, (im, md5) in enumerate(zip(tqdm_(images), im_md5s)):\n",
    "    i_ =3D offset + iim\n",
    "\n",
    "    # full image feats\n",
    "    im_ =3D np.array(Image.fromarray(im).resize((model_imsize, model_i=
msize)))\n",
    "    feats_ =3D embedder.extract_pooled_features([im_])\n",
    "    feats =3D feats_[layer_name][0]\n",
    "\n",
    "    with h5.File(output_path, 'a') as f:\n",
    "        dset =3D f['feats/full_image']\n",
    "        if dset.shape[0] &lt; i_ + 1:\n",
    "            dset.resize(i_+1, axis=3D0)\n",
    "        dset[i_] =3D feats\n",
    "\n",
    "    # patch grid feats\n",
    "    featss =3D []\n",
    "\n",
    "    for ix, x0 in enumerate(patches_ledge_x):\n",
    "        featss.append([])\n",
    "\n",
    "        for iy, y0 in enumerate(patches_ledge_y):\n",
    "            wim =3D get_image_patch(im, im_size, x0, y0, patch_size, m=
odel_imsize)\n",
    "            feats_ =3D embedder.extract_pooled_features([wim])\n",
    "            feats =3D feats_[layer_name][0]\n",
    "            featss[-1].append(feats)\n",
    "\n",
    "    featss =3D np.array(featss)\n",
    "\n",
    "    with h5.File(output_path, 'a') as f:\n",
    "        dset =3D f['feats/patch_grid']\n",
    "        if dset.shape[0] &lt; i_ + 1:\n",
    "            dset.resize(i_+1, axis=3D0)\n",
    "        dset[i_] =3D featss\n",
    "\n",
    "        dset =3D f['md5']\n",
    "        if dset.shape[0] &lt; i_ + 1:\n",
    "            dset.resize(i_+1, axis=3D0)\n",
    "        dset[i_] =3D md5"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0471dc41-c4b7-4066-bd3f-5f49f5677356",
   "metadata": {},
   "source": [
    "# Wrap up"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "31c09cf0-a0e4-45ae-9b50-00864abe86b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext watermark\n",
    "%watermark\n",
    "%watermark -vm --iversions -rbg"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

can you go through this script and tell me what features the model is extra=
cting</div></div></div></div></div></div></div></div></div></article><artic=
le class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"con=
versation-turn-116" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">Chat=
GPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-conten=
t-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72=
rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)">=
<div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content=
-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex =
max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6=
 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div cla=
ss=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-t=
urn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max=
-w-full flex-col grow"><div data-message-author-role=3D"assistant" data-mes=
sage-id=3D"2ca6b980-333b-47f6-84d9-741138558be7" dir=3D"auto" class=3D"min-=
h-8 text-message relative flex w-full flex-col items-end gap-2 text-start b=
reak-words whitespace-normal [.text-message+&amp;]:mt-5" data-message-model=
-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden firs=
t:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-wor=
ds dark"><p data-start=3D"0" data-end=3D"84" class=3D"">Absolutely=E2=80=94=
this is a rich and well-structured script. Let=E2=80=99s go through it care=
fully.</p>
<hr data-start=3D"86" data-end=3D"89" class=3D"">
<h2 data-start=3D"91" data-end=3D"127" class=3D"">=F0=9F=93=81 Summary: Wha=
t this script does</h2>
<p data-start=3D"129" data-end=3D"381" class=3D"">This notebook extracts <s=
trong data-start=3D"152" data-end=3D"179">deep feature embeddings</strong> =
from images (and spatial patches of those images) using a <strong data-star=
t=3D"238" data-end=3D"265">pretrained vision model</strong> (specifically a=
 ViT, or Vision Transformer), and stores them for downstream analysis (like=
 encoding models or RSA).</p>
<hr data-start=3D"383" data-end=3D"386" class=3D"">
<h2 data-start=3D"388" data-end=3D"408" class=3D"">=E2=9C=85 High-Level Flo=
w</h2>
<ol data-start=3D"410" data-end=3D"753">
<li data-start=3D"410" data-end=3D"452" class=3D"">
<p data-start=3D"413" data-end=3D"452" class=3D""><strong data-start=3D"413=
" data-end=3D"430">Load image(s)</strong> by MD5 name from disk</p>
</li>
<li data-start=3D"453" data-end=3D"497" class=3D"">
<p data-start=3D"456" data-end=3D"497" class=3D""><strong data-start=3D"456=
" data-end=3D"483">Crop image into patches</strong> across a grid</p>
</li>
<li data-start=3D"498" data-end=3D"575" class=3D"">
<p data-start=3D"501" data-end=3D"575" class=3D""><strong data-start=3D"501=
" data-end=3D"544">Feed both the full image and each patch</strong> through=
 a DNN model (like ViT)</p>
</li>
<li data-start=3D"576" data-end=3D"651" class=3D"">
<p data-start=3D"579" data-end=3D"651" class=3D""><strong data-start=3D"579=
" data-end=3D"621">Extract features from a specific layer</strong> (e.g. <c=
ode data-start=3D"628" data-end=3D"650">'blocks.13.attn.qkv'</code>)</p>
</li>
<li data-start=3D"652" data-end=3D"698" class=3D"">
<p data-start=3D"655" data-end=3D"698" class=3D""><strong data-start=3D"655=
" data-end=3D"685">Average features spatially</strong> (if enabled)</p>
</li>
<li data-start=3D"699" data-end=3D"753" class=3D"">
<p data-start=3D"702" data-end=3D"753" class=3D""><strong data-start=3D"702=
" data-end=3D"723">Save all features</strong> to an HDF5 file for later use=
</p>
</li>
</ol>
<hr data-start=3D"755" data-end=3D"758" class=3D"">
<h2 data-start=3D"760" data-end=3D"804" class=3D"">=F0=9F=A7=A0 Model Setup=
: What model is being used?</h2>
<p data-start=3D"806" data-end=3D"821" class=3D"">From this line:</p>
<pre class=3D"overflow-visible!" data-start=3D"822" data-end=3D"906"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>model_name =3D </span><span><span class=3D"hljs-str=
ing">'vit_large_patch16_384'</span></span><span>
layer_name =3D </span><span><span class=3D"hljs-string">'blocks.13.attn.qkv=
'</span></span><span>
</span></span></code></div></div></pre>
<h3 data-start=3D"908" data-end=3D"922" class=3D"">The model:</h3>
<ul data-start=3D"923" data-end=3D"1165">
<li data-start=3D"923" data-end=3D"1060" class=3D"">
<p data-start=3D"925" data-end=3D"1000" class=3D"">A <strong data-start=3D"=
927" data-end=3D"955">Vision Transformer (ViT)</strong> =E2=80=94 specifica=
lly the <strong data-start=3D"975" data-end=3D"994">ViT-Large model</strong=
> with:</p>
<ul data-start=3D"1003" data-end=3D"1060">
<li data-start=3D"1003" data-end=3D"1027" class=3D"">
<p data-start=3D"1005" data-end=3D"1027" class=3D"">Patch size =3D 16 pixel=
s</p>
</li>
<li data-start=3D"1030" data-end=3D"1060" class=3D"">
<p data-start=3D"1032" data-end=3D"1060" class=3D"">Input resolution =3D 38=
4 =C3=97 384</p>
</li>
</ul>
</li>
<li data-start=3D"1061" data-end=3D"1165" class=3D"">
<p data-start=3D"1063" data-end=3D"1165" class=3D"">Most likely pretrained =
on <strong data-start=3D"1089" data-end=3D"1101">ImageNet</strong> (but tha=
t=E2=80=99s defined internally in <code data-start=3D"1136" data-end=3D"116=
4">models.get_model_by_name()</code>)</p>
</li>
</ul>
<hr data-start=3D"1167" data-end=3D"1170" class=3D"">
<h2 data-start=3D"1172" data-end=3D"1197" class=3D"">=F0=9F=94=8D What laye=
r is used?</h2>
<pre class=3D"overflow-visible!" data-start=3D"1199" data-end=3D"1246"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>layer_name =3D </span><span><span class=3D"hljs-str=
ing">'blocks.13.attn.qkv'</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"1248" data-end=3D"1262" class=3D"">This accesses:</p>
<ul data-start=3D"1263" data-end=3D"1384">
<li data-start=3D"1263" data-end=3D"1295" class=3D"">
<p data-start=3D"1265" data-end=3D"1295" class=3D""><strong data-start=3D"1=
265" data-end=3D"1295">The 13th transformer block</strong></p>
</li>
<li data-start=3D"1296" data-end=3D"1384" class=3D"">
<p data-start=3D"1298" data-end=3D"1384" class=3D"">Specifically: the <stro=
ng data-start=3D"1316" data-end=3D"1346">query-key-value projection</strong=
> in the <strong data-start=3D"1354" data-end=3D"1384">multi-head attention=
 layer</strong></p>
</li>
</ul>
<h3 data-start=3D"1386" data-end=3D"1398" class=3D"">Meaning:</h3>
<p data-start=3D"1399" data-end=3D"1536" class=3D"">You're extracting <stro=
ng data-start=3D"1417" data-end=3D"1444">attention input weights</strong> (=
QKV) =E2=80=94 which encode how the model is preparing to compute attention=
 between image patches.</p>
<p data-start=3D"1538" data-end=3D"1584" class=3D"">This gives you a featur=
e vector that reflects:</p>
<ul data-start=3D"1585" data-end=3D"1656">
<li data-start=3D"1585" data-end=3D"1604" class=3D"">
<p data-start=3D"1587" data-end=3D"1604" class=3D"">Spatial structure</p>
</li>
<li data-start=3D"1605" data-end=3D"1625" class=3D"">
<p data-start=3D"1607" data-end=3D"1625" class=3D"">Attention saliency</p>
</li>
<li data-start=3D"1626" data-end=3D"1656" class=3D"">
<p data-start=3D"1628" data-end=3D"1656" class=3D"">Patch-to-patch relation=
ships</p>
</li>
</ul>
<hr data-start=3D"1658" data-end=3D"1661" class=3D"">
<h2 data-start=3D"1663" data-end=3D"1702" class=3D"">=F0=9F=A7=A0 Are featu=
res extracted spatially?</h2>
<p data-start=3D"1704" data-end=3D"1746" class=3D"">Yes, and that=E2=80=99s=
 a key part of this script.</p>
<p data-start=3D"1748" data-end=3D"1765" class=3D"">From this config:</p>
<pre class=3D"overflow-visible!" data-start=3D"1767" data-end=3D"1805"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>spatial_averaging =3D </span><span><span class=3D"h=
ljs-literal">True</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"1807" data-end=3D"1818" class=3D"">This means:</p>
<ul data-start=3D"1819" data-end=3D"1938">
<li data-start=3D"1819" data-end=3D"1891" class=3D"">
<p data-start=3D"1821" data-end=3D"1891" class=3D"">For attention-based mod=
els: average features <strong data-start=3D"1866" data-end=3D"1891">across =
spatial tokens</strong></p>
</li>
<li data-start=3D"1892" data-end=3D"1938" class=3D"">
<p data-start=3D"1894" data-end=3D"1938" class=3D"">For conv nets: average =
across <strong data-start=3D"1924" data-end=3D"1933">W =C3=97 H</strong> gr=
id</p>
</li>
</ul>
<p data-start=3D"1940" data-end=3D"2047" class=3D"">So you get <strong data=
-start=3D"1951" data-end=3D"1982">1 vector per image or patch</strong>, not=
 per spatial position=E2=80=94unless you turn off spatial averaging.</p>
<hr data-start=3D"2049" data-end=3D"2052" class=3D"">
<h2 data-start=3D"2054" data-end=3D"2100" class=3D"">=F0=9F=93=8A Two types=
 of feature maps are extracted:</h2>
<h3 data-start=3D"2102" data-end=3D"2132" class=3D"">1. <strong data-start=
=3D"2109" data-end=3D"2132">Full Image Features</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2133" data-end=3D"2194"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>feats =3D embedder.extract_pooled_features([im_])
</span></span></code></div></div></pre>
<ul data-start=3D"2195" data-end=3D"2337">
<li data-start=3D"2195" data-end=3D"2244" class=3D"">
<p data-start=3D"2197" data-end=3D"2244" class=3D"">Resize the image to mod=
el size (e.g. 384 =C3=97 384)</p>
</li>
<li data-start=3D"2245" data-end=3D"2270" class=3D"">
<p data-start=3D"2247" data-end=3D"2270" class=3D"">Feed it through the ViT=
</p>
</li>
<li data-start=3D"2271" data-end=3D"2337" class=3D"">
<p data-start=3D"2273" data-end=3D"2337" class=3D"">Extract <strong data-st=
art=3D"2281" data-end=3D"2303">one feature vector</strong> per image (after=
 spatial pooling)</p>
</li>
</ul>
<p data-start=3D"2339" data-end=3D"2351" class=3D"">Stored here:</p>
<pre class=3D"overflow-visible!" data-start=3D"2352" data-end=3D"2382"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>feats/full_image
</span></span></code></div></div></pre>
<hr data-start=3D"2384" data-end=3D"2387" class=3D"">
<h3 data-start=3D"2389" data-end=3D"2419" class=3D"">2. <strong data-start=
=3D"2396" data-end=3D"2419">Patch Grid Features</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2420" data-end=3D"2550"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>wim =3D get_image_patch(im, im_size, x0, y0, patch_=
size, model_imsize)
feats =3D embedder.extract_pooled_features([wim])
</span></span></code></div></div></pre>
<ul data-start=3D"2552" data-end=3D"2765">
<li data-start=3D"2552" data-end=3D"2630" class=3D"">
<p data-start=3D"2554" data-end=3D"2630" class=3D"">Crop the image into <st=
rong data-start=3D"2574" data-end=3D"2591">small patches</strong> centered =
on a grid across visual space</p>
</li>
<li data-start=3D"2631" data-end=3D"2674" class=3D"">
<p data-start=3D"2633" data-end=3D"2674" class=3D"">Each patch is resized t=
o model input size</p>
</li>
<li data-start=3D"2675" data-end=3D"2718" class=3D"">
<p data-start=3D"2677" data-end=3D"2718" class=3D"">Run each one through th=
e same model layer</p>
</li>
<li data-start=3D"2719" data-end=3D"2765" class=3D"">
<p data-start=3D"2721" data-end=3D"2765" class=3D"">Extract features for ea=
ch patch individually</p>
</li>
</ul>
<p data-start=3D"2767" data-end=3D"2779" class=3D"">Stored here:</p>
<pre class=3D"overflow-visible!" data-start=3D"2780" data-end=3D"2810"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>feats/patch_grid
</span></span></code></div></div></pre>
<p data-start=3D"2812" data-end=3D"2926" class=3D"">These patch features ar=
e later used to compare to receptive fields (RFs), eye movement behavior, o=
r neural tuning.</p>
<hr data-start=3D"2928" data-end=3D"2931" class=3D"">
<h2 data-start=3D"2933" data-end=3D"2969" class=3D"">=F0=9F=93=A6 What's in=
 each feature vector?</h2>
<p data-start=3D"2971" data-end=3D"3072" class=3D"">Since the layer is <cod=
e data-start=3D"2990" data-end=3D"3012">'blocks.13.attn.qkv'</code> from <c=
ode data-start=3D"3018" data-end=3D"3041">vit_large_patch16_384</code>, eac=
h vector likely has shape:</p>
<pre class=3D"overflow-visible!" data-start=3D"3074" data-end=3D"3148"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>(feat_chan,)  </span><span><span class=3D"hljs-comm=
ent"># e.g., 384 or 768 depending on implementation</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"3150" data-end=3D"3164" class=3D"">This includes:</p>
<ul data-start=3D"3165" data-end=3D"3297">
<li data-start=3D"3165" data-end=3D"3198" class=3D"">
<p data-start=3D"3167" data-end=3D"3198" class=3D""><strong data-start=3D"3=
167" data-end=3D"3198">Query/key/value projections</strong></p>
</li>
<li data-start=3D"3199" data-end=3D"3235" class=3D"">
<p data-start=3D"3201" data-end=3D"3235" class=3D"">For the entire image or=
 each patch</p>
</li>
<li data-start=3D"3236" data-end=3D"3297" class=3D"">
<p data-start=3D"3238" data-end=3D"3297" class=3D"">After averaging across =
tokens (if <code data-start=3D"3272" data-end=3D"3296">spatial_averaging=3D=
True</code>)</p>
</li>
</ul>
<hr data-start=3D"3299" data-end=3D"3302" class=3D"">
<h2 data-start=3D"3304" data-end=3D"3351" class=3D"">=E2=9C=85 TL;DR =E2=80=
=93 What features are being extracted?</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"33=
53" data-end=3D"3852" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3353" data-end=3D"3386"><tr data-start=3D"3353" data-end=3D"=
3386"><th data-start=3D"3353" data-end=3D"3371" data-col-size=3D"sm">Type o=
f Feature</th><th data-start=3D"3371" data-end=3D"3386" data-col-size=3D"md=
">Description</th></tr></thead><tbody data-start=3D"3421" data-end=3D"3852"=
><tr data-start=3D"3421" data-end=3D"3487"><td data-start=3D"3421" data-end=
=3D"3439" data-col-size=3D"sm"><strong data-start=3D"3423" data-end=3D"3432=
">Model</strong></td><td data-start=3D"3439" data-end=3D"3487" data-col-siz=
e=3D"md"><code data-start=3D"3441" data-end=3D"3464">ViT-Large-Patch16-384<=
/code> (Vision Transformer)</td></tr><tr data-start=3D"3488" data-end=3D"35=
70"><td data-start=3D"3488" data-end=3D"3506" data-col-size=3D"sm"><strong =
data-start=3D"3490" data-end=3D"3499">Layer</strong></td><td data-start=3D"=
3506" data-end=3D"3570" data-col-size=3D"md"><code data-start=3D"3508" data=
-end=3D"3530">'blocks.13.attn.qkv'</code> =E2=80=94 attention projections f=
rom block 13</td></tr><tr data-start=3D"3571" data-end=3D"3636"><td data-st=
art=3D"3571" data-end=3D"3592" data-col-size=3D"sm"><strong data-start=3D"3=
573" data-end=3D"3591">Feature Source</strong></td><td data-start=3D"3592" =
data-end=3D"3636" data-col-size=3D"md">Full image &amp; image patches acros=
s a grid</td></tr><tr data-start=3D"3637" data-end=3D"3697"><td data-start=
=3D"3637" data-end=3D"3658" data-col-size=3D"sm"><strong data-start=3D"3639=
" data-end=3D"3657">Dimensionality</strong></td><td data-start=3D"3658" dat=
a-end=3D"3697" data-col-size=3D"md">Likely ~768 (depends on ViT config)</td=
></tr><tr data-start=3D"3698" data-end=3D"3772"><td data-start=3D"3698" dat=
a-end=3D"3716" data-col-size=3D"sm"><strong data-start=3D"3700" data-end=3D=
"3711">Pooling</strong></td><td data-start=3D"3716" data-end=3D"3772" data-=
col-size=3D"md">Spatially averaged across attention tokens (enabled)</td></=
tr><tr data-start=3D"3773" data-end=3D"3852"><td data-start=3D"3773" data-e=
nd=3D"3791" data-col-size=3D"sm"><strong data-start=3D"3775" data-end=3D"37=
88">Stored As</strong></td><td data-start=3D"3791" data-end=3D"3852" data-c=
ol-size=3D"md"><code data-start=3D"3793" data-end=3D"3811">feats/full_image=
</code> and <code data-start=3D"3816" data-end=3D"3834">feats/patch_grid</c=
ode> in an HDF5 file</td></tr></tbody></table><div class=3D"sticky end-(--t=
hread-content-margin) h-0 self-end select-none"><div class=3D"absolute end-=
0 flex items-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=
=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary=
 text-token-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:n=
ot(:hover):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(=
:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 2=
4 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-h=
eavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315=
 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17=
H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315=
 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 1=
4.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C=
4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5=
523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></s=
vg></button></span></div></div></div></div>
<hr data-start=3D"3854" data-end=3D"3857" class=3D"">
<p data-start=3D"3859" data-end=3D"3986" class=3D"">Would you like help com=
paring these ViT features to neural data (e.g., using them as predictors fo=
r firing rates or doing RSA)?</p></div></div></div></div></div></div></div>=
</div></article><article class=3D"text-token-text-primary w-full" dir=3D"au=
to" data-testid=3D"conversation-turn-117" data-scroll-anchor=3D"false"><h5 =
class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-auto py-=
5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:=
--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread=
-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]=
:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48=
rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4=
 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabind=
ex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-=
0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"f=
lex max-w-full flex-col grow"><div data-message-author-role=3D"user" data-m=
essage-id=3D"b9fdde27-616d-48a9-8243-d839887593ef" dir=3D"auto" class=3D"mi=
n-h-8 text-message relative flex w-full flex-col items-end gap-2 text-start=
 break-words whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"fl=
ex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><div class=
=3D"flex w-[var(--user-chat-width,70%)] flex-col items-end"><div class=3D"f=
lex flex-row items-center justify-end gap-1"><div class=3D"overflow-hidden =
rounded-lg w-full h-full max-w-96 max-h-64"><div class=3D"bg-token-main-sur=
face-secondary text-token-text-tertiary relative flex h-auto w-full max-w-l=
g items-center justify-center overflow-hidden"><button type=3D"button" aria=
-haspopup=3D"dialog" aria-expanded=3D"false" aria-controls=3D"radix-=C2=ABr=
20a=C2=BB" data-state=3D"closed" class=3D"overflow-hidden rounded-lg w-full=
 h-full max-w-96 max-h-64"><img alt=3D"Uploaded image" width=3D"685" height=
=3D"375" class=3D"max-w-full object-cover object-center overflow-hidden rou=
nded-lg w-full h-full max-w-96 max-h-64 w-fit transition-opacity duration-3=
00 opacity-100" src=3D"https://files.oaiusercontent.com/file-CLGW5W2y2zFqC7=
42Vti5cg?se=3D2025-05-01T15%3A34%3A56Z&amp;sp=3Dr&amp;sv=3D2024-08-04&amp;s=
r=3Db&amp;rscc=3Dmax-age%3D299%2C%20immutable%2C%20private&amp;rscd=3Dattac=
hment%3B%20filename%3D41593_2024_1631_Fig2_HTML.webp&amp;sig=3DHgBGoMNjmMbe=
5E7V0P2iJvZcpgkSGo%2Bo%2BvJMxaX7kSE%3D"></button></div></div></div></div><d=
iv class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-su=
rface rounded-3xl px-5 py-2.5 rounded-se-lg"><div class=3D"whitespace-pre-w=
rap">would this give us an image like this</div></div></div></div><div clas=
s=3D"text-token-text-secondary my-2 me-4 flex flex-row justify-end gap-1 te=
xt-xs"></div></div></div></div></div></div></article><article class=3D"text=
-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-1=
18" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><d=
iv class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spaci=
ng(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-c=
ontent-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[-=
-thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem=
] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-=
content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-mess=
ages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conv=
ersation-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=
=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-co=
l grow"><div data-message-author-role=3D"assistant" data-message-id=3D"4f2d=
46c9-31a8-4da7-88fa-46d76086eb33" dir=3D"auto" class=3D"min-h-8 text-messag=
e relative flex w-full flex-col items-end gap-2 text-start break-words whit=
espace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o=
"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><di=
v class=3D"markdown prose dark:prose-invert w-full break-words dark"><p dat=
a-start=3D"0" data-end=3D"258" class=3D"">Yes, the script you shared (the o=
ne extracting ViT features from full images and patches) is <strong data-st=
art=3D"93" data-end=3D"187">part of the computational pipeline that would e=
nable you to generate figures like this one</strong>, particularly <strong =
data-start=3D"202" data-end=3D"227">panels a, b, d, and e</strong> of the f=
igure you've attached.</p>
<p data-start=3D"260" data-end=3D"280" class=3D"">Let=E2=80=99s break it do=
wn:</p>
<hr data-start=3D"282" data-end=3D"285" class=3D"">
<h2 data-start=3D"287" data-end=3D"320" class=3D"">=F0=9F=A7=A0 What this f=
igure is showing</h2>
<h3 data-start=3D"322" data-end=3D"373" class=3D"">=F0=9F=94=B9 <strong dat=
a-start=3D"329" data-end=3D"373">Panel a &amp; d: Spatial Layout of Fixatio=
ns</strong></h3>
<ul data-start=3D"374" data-end=3D"620">
<li data-start=3D"374" data-end=3D"481" class=3D"">
<p data-start=3D"376" data-end=3D"481" class=3D""><strong data-start=3D"376=
" data-end=3D"402">Plot of gaze positions</strong> during free viewing, sep=
arated by category transitions (e.g. face =E2=86=92 non-face).</p>
</li>
<li data-start=3D"482" data-end=3D"543" class=3D"">
<p data-start=3D"484" data-end=3D"543" class=3D"">Each dot is a fixation; c=
olor =3D type of category transition</p>
</li>
<li data-start=3D"544" data-end=3D"620" class=3D"">
<p data-start=3D"546" data-end=3D"620" class=3D"">This is based on eye-trac=
king and category labels, <strong data-start=3D"597" data-end=3D"619">not m=
odel features</strong>.</p>
</li>
</ul>
<blockquote data-start=3D"622" data-end=3D"752">
<p data-start=3D"624" data-end=3D"752" class=3D"">=F0=9F=A7=A9 Not directly=
 from the DNN, but you'd use this to define where in an image to extract Vi=
T patch features (as the script does).</p>
</blockquote>
<hr data-start=3D"754" data-end=3D"757" class=3D"">
<h3 data-start=3D"759" data-end=3D"831" class=3D"">=F0=9F=94=B9 <strong dat=
a-start=3D"766" data-end=3D"831">Panel b: Face Selectivity Index (FSI) for =
different fixations</strong></h3>
<ul data-start=3D"832" data-end=3D"1058">
<li data-start=3D"832" data-end=3D"919" class=3D"">
<p data-start=3D"834" data-end=3D"919" class=3D""><strong data-start=3D"834=
" data-end=3D"887">FSI =3D (f_face - f_nonface) / (f_face + f_nonface)</str=
ong> =E2=80=94 computed for neural responses</p>
</li>
<li data-start=3D"920" data-end=3D"985" class=3D"">
<p data-start=3D"922" data-end=3D"985" class=3D"">Zeroth fixation (first on=
e) vs. subsequent fixations per neuron</p>
</li>
<li data-start=3D"986" data-end=3D"1058" class=3D"">
<p data-start=3D"988" data-end=3D"1058" class=3D"">This tells you <strong d=
ata-start=3D"1003" data-end=3D"1058">whether face selectivity is stable acr=
oss fixations</strong></p>
</li>
</ul>
<blockquote data-start=3D"1060" data-end=3D"1198">
<p data-start=3D"1062" data-end=3D"1198" class=3D"">=F0=9F=A7=A9 The model =
features <strong data-start=3D"1084" data-end=3D"1093">could</strong> be us=
ed to explain this selectivity (as in an encoding model), but the plot itse=
lf is <strong data-start=3D"1180" data-end=3D"1197">purely neural</strong>.=
</p>
</blockquote>
<hr data-start=3D"1200" data-end=3D"1203" class=3D"">
<h3 data-start=3D"1205" data-end=3D"1251" class=3D"">=F0=9F=94=B9 <strong d=
ata-start=3D"1212" data-end=3D"1251">Panel c: Time course of firing rate</s=
trong></h3>
<ul data-start=3D"1252" data-end=3D"1404">
<li data-start=3D"1252" data-end=3D"1341" class=3D"">
<p data-start=3D"1254" data-end=3D"1341" class=3D""><strong data-start=3D"1=
254" data-end=3D"1285">Face vs. non-face responses</strong>, separately for=
 first fixations and non-zero fixations.</p>
</li>
<li data-start=3D"1342" data-end=3D"1378" class=3D"">
<p data-start=3D"1344" data-end=3D"1378" class=3D"">Aligned to image or fix=
ation onset</p>
</li>
<li data-start=3D"1379" data-end=3D"1404" class=3D"">
<p data-start=3D"1381" data-end=3D"1404" class=3D"">Averaged across neurons=
</p>
</li>
</ul>
<blockquote data-start=3D"1406" data-end=3D"1586">
<p data-start=3D"1408" data-end=3D"1586" class=3D"">=F0=9F=A7=A9 This could=
 be supported by encoding models using DNN features (like in <code data-sta=
rt=3D"1482" data-end=3D"1486">6a</code>) to show model-driven predictions o=
f those curves=E2=80=94but the firing rate curves themselves are neural.</p=
>
</blockquote>
<hr data-start=3D"1588" data-end=3D"1591" class=3D"">
<h3 data-start=3D"1593" data-end=3D"1664" class=3D"">=F0=9F=94=B9 <strong d=
ata-start=3D"1600" data-end=3D"1664">Panel e: Saccade-aligned neural respon=
ses by transition type</strong></h3>
<ul data-start=3D"1665" data-end=3D"1723">
<li data-start=3D"1665" data-end=3D"1723" class=3D"">
<p data-start=3D"1667" data-end=3D"1723" class=3D"">This is likely where yo=
ur script connects most directly.</p>
</li>
</ul>
<p data-start=3D"1725" data-end=3D"1795" class=3D"">The image patch grid fe=
atures extracted by your script can be used to:</p>
<ul data-start=3D"1796" data-end=3D"2037">
<li data-start=3D"1796" data-end=3D"1881" class=3D"">
<p data-start=3D"1798" data-end=3D"1881" class=3D""><strong data-start=3D"1=
798" data-end=3D"1881">Anchor model-derived feature vectors at the same spa=
tial locations as fixations</strong></p>
</li>
<li data-start=3D"1882" data-end=3D"1961" class=3D"">
<p data-start=3D"1884" data-end=3D"1961" class=3D"">Align <strong data-star=
t=3D"1890" data-end=3D"1927">DNN predictions or attention maps</strong> to =
fixation-triggered neural data</p>
</li>
<li data-start=3D"1962" data-end=3D"2037" class=3D"">
<p data-start=3D"1964" data-end=3D"2037" class=3D"">Compare <strong data-st=
art=3D"1972" data-end=3D"2025">how feature content at fixated locations exp=
lains</strong> firing rate</p>
</li>
</ul>
<hr data-start=3D"2039" data-end=3D"2042" class=3D"">
<h2 data-start=3D"2044" data-end=3D"2092" class=3D"">=E2=9C=85 Your script=
=E2=80=99s role in producing this figure</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"20=
94" data-end=3D"2514" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2094" data-end=3D"2139"><tr data-start=3D"2094" data-end=3D"=
2139"><th data-start=3D"2094" data-end=3D"2113" data-col-size=3D"sm">Script=
 Component</th><th data-start=3D"2113" data-end=3D"2139" data-col-size=3D"m=
d">Contribution to Figure</th></tr></thead><tbody data-start=3D"2186" data-=
end=3D"2514"><tr data-start=3D"2186" data-end=3D"2286"><td data-start=3D"21=
86" data-end=3D"2211" data-col-size=3D"sm"><code data-start=3D"2188" data-e=
nd=3D"2210">get_image_patch(...)</code></td><td data-start=3D"2211" data-en=
d=3D"2286" data-col-size=3D"md">Extracts image patches at the same spatial =
location as monkey fixations</td></tr><tr data-start=3D"2287" data-end=3D"2=
403"><td data-start=3D"2287" data-end=3D"2329" data-col-size=3D"sm"><code d=
ata-start=3D"2289" data-end=3D"2328">embedder.extract_pooled_features(...)<=
/code></td><td data-start=3D"2329" data-end=3D"2403" data-col-size=3D"md">E=
ncodes these patches using ViT layer features (e.g., attention input)</td><=
/tr><tr data-start=3D"2404" data-end=3D"2514"><td data-start=3D"2404" data-=
end=3D"2434" data-col-size=3D"sm">Saved as <code data-start=3D"2415" data-e=
nd=3D"2433">feats/patch_grid</code></td><td data-start=3D"2434" data-end=3D=
"2514" data-col-size=3D"md">You can use this to link model features to <str=
ong data-start=3D"2479" data-end=3D"2495">per-fixation</strong> neural resp=
onses</td></tr></tbody></table><div class=3D"sticky end-(--thread-content-m=
argin) h-0 self-end select-none"><div class=3D"absolute end-0 flex items-en=
d" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><but=
ton class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text=
-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:=
focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:=
opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"no=
ne" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill=
-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H=
19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.656=
9 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7=
V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C2=
0 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44=
772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 =
9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></sp=
an></div></div></div></div>
<hr data-start=3D"2516" data-end=3D"2519" class=3D"">
<h2 data-start=3D"2521" data-end=3D"2575" class=3D"">=F0=9F=A7=A9 What you =
still need to generate this full figure</h2>
<p data-start=3D"2577" data-end=3D"2632" class=3D"">To go from ViT features=
 =E2=86=92 figure like this, you=E2=80=99d need:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"26=
34" data-end=3D"3163" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2634" data-end=3D"2655"><tr data-start=3D"2634" data-end=3D"=
2655"><th data-start=3D"2634" data-end=3D"2641" data-col-size=3D"md">Step</=
th><th data-start=3D"2641" data-end=3D"2655" data-col-size=3D"md">What to d=
o</th></tr></thead><tbody data-start=3D"2678" data-end=3D"3163"><tr data-st=
art=3D"2678" data-end=3D"2780"><td data-start=3D"2678" data-end=3D"2710" da=
ta-col-size=3D"md">Match fixation to image patch</td><td data-start=3D"2710=
" data-end=3D"2780" data-col-size=3D"md">Use saccade location to pick neare=
st patch from <code data-start=3D"2760" data-end=3D"2778">feats/patch_grid<=
/code></td></tr><tr data-start=3D"2781" data-end=3D"2880"><td data-start=3D=
"2781" data-end=3D"2805" data-col-size=3D"md">Predict neural firing</td><td=
 data-start=3D"2805" data-end=3D"2880" data-col-size=3D"md">Train a linear =
model (Ridge regression) from ViT features =E2=86=92 firing rate</td></tr><=
tr data-start=3D"2881" data-end=3D"2977"><td data-start=3D"2881" data-end=
=3D"2919" data-col-size=3D"md">Separate trials by saccade category</td><td =
data-start=3D"2919" data-end=3D"2977" data-col-size=3D"md">Use <code data-s=
tart=3D"2925" data-end=3D"2945">trials['category']</code> and <code data-st=
art=3D"2950" data-end=3D"2969">saccade direction</code> logic</td></tr><tr =
data-start=3D"2978" data-end=3D"3072"><td data-start=3D"2978" data-end=3D"3=
025" data-col-size=3D"md">Plot neural firing or model-predicted curves</td>=
<td data-start=3D"3025" data-end=3D"3072" data-col-size=3D"md">Align to fix=
ation onset; smooth over trials</td></tr><tr data-start=3D"3073" data-end=
=3D"3163"><td data-start=3D"3073" data-end=3D"3098" data-col-size=3D"md">Op=
tionally compute FSI</td><td data-start=3D"3098" data-end=3D"3163" data-col=
-size=3D"md">Use face vs. non-face labels on fixated patch to group trials<=
/td></tr></tbody></table><div class=3D"sticky end-(--thread-content-margin)=
 h-0 self-end select-none"><div class=3D"absolute end-0 flex items-end" sty=
le=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button cl=
ass=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secon=
dary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-=
within)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacit=
y-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xm=
lns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20=
.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.=
6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9=
 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.4=
4772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4=
 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.447=
72 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></=
div></div></div></div>
<hr data-start=3D"3165" data-end=3D"3168" class=3D"">
<h2 data-start=3D"3170" data-end=3D"3180" class=3D"">=E2=9C=85 TL;DR</h2>
<p data-start=3D"3182" data-end=3D"3281" class=3D"">Yes, the script you pos=
ted is part of the pipeline for generating a figure like this. Specifically=
:</p>
<ul data-start=3D"3282" data-end=3D"3599">
<li data-start=3D"3282" data-end=3D"3371" class=3D"">
<p data-start=3D"3284" data-end=3D"3371" class=3D"">It extracts ViT feature=
s for <strong data-start=3D"3313" data-end=3D"3330">entire images</strong> =
and <strong data-start=3D"3335" data-end=3D"3370">retinotopically aligned p=
atches</strong>.</p>
</li>
<li data-start=3D"3372" data-end=3D"3486" class=3D"">
<p data-start=3D"3374" data-end=3D"3428" class=3D"">You would then use thos=
e features in combination with:</p>
<ul data-start=3D"3431" data-end=3D"3486">
<li data-start=3D"3431" data-end=3D"3445" class=3D"">
<p data-start=3D"3433" data-end=3D"3445" class=3D"">Eye position</p>
</li>
<li data-start=3D"3448" data-end=3D"3470" class=3D"">
<p data-start=3D"3450" data-end=3D"3470" class=3D"">Category transitions</p=
>
</li>
<li data-start=3D"3473" data-end=3D"3486" class=3D"">
<p data-start=3D"3475" data-end=3D"3486" class=3D"">Neural data</p>
</li>
</ul>
</li>
<li data-start=3D"3487" data-end=3D"3599" class=3D"">
<p data-start=3D"3489" data-end=3D"3599" class=3D"">To produce plots like <=
strong data-start=3D"3511" data-end=3D"3526">b, c, and e</strong> showing f=
iring rate dynamics, face selectivity, and category modulation.</p>
</li>
</ul>
<hr data-start=3D"3601" data-end=3D"3604" class=3D"">
<p data-start=3D"3606" data-end=3D"3750" class=3D"">Want help writing a not=
ebook that takes <code data-start=3D"3646" data-end=3D"3664">feats/patch_gr=
id</code> and uses it to predict per-fixation firing rates across different=
 saccade categories?</p></div></div></div></div></div></div></div></div></a=
rticle><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-=
testid=3D"conversation-turn-119" data-scroll-anchor=3D"false"><h5 class=3D"=
sr-only">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thre=
ad-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing=
(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-=
margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--threa=
d-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-a=
uto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5=
 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"=
><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-co=
l"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w=
-full flex-col grow"><div data-message-author-role=3D"user" data-message-id=
=3D"9a20a4ba-4548-431e-86d1-badc065b8673" dir=3D"auto" class=3D"min-h-8 tex=
t-message relative flex w-full flex-col items-end gap-2 text-start break-wo=
rds whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full=
 flex-col gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relat=
ive max-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl=
 px-5 py-2.5"><div class=3D"whitespace-pre-wrap">is this working with monke=
y data? or is this just using the image features itself and DNN</div></div>=
</div></div></div></div></div></div></div></article><article class=3D"text-=
token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-12=
0" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><di=
v class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacin=
g(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-co=
ntent-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--=
thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem]=
 @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-c=
ontent-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messa=
ges focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conve=
rsation-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=
=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-co=
l grow"><div data-message-author-role=3D"assistant" data-message-id=3D"cee7=
480c-ab07-426f-82e5-c10d18615f52" dir=3D"auto" class=3D"min-h-8 text-messag=
e relative flex w-full flex-col items-end gap-2 text-start break-words whit=
espace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o=
"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><di=
v class=3D"markdown prose dark:prose-invert w-full break-words dark"><p dat=
a-start=3D"0" data-end=3D"55" class=3D"">Great question=E2=80=94and an impo=
rtant distinction to clarify.</p>
<h2 data-start=3D"57" data-end=3D"117" class=3D"">=E2=9C=85 This figure <st=
rong data-start=3D"74" data-end=3D"116">is absolutely working with monkey d=
ata</strong>.</h2>
<p data-start=3D"119" data-end=3D"143" class=3D"">Let=E2=80=99s go point by=
 point:</p>
<hr data-start=3D"145" data-end=3D"148" class=3D"">
<h2 data-start=3D"150" data-end=3D"176" class=3D"">=F0=9F=A7=A0 Is this mon=
key data?</h2>
<p data-start=3D"178" data-end=3D"294" class=3D""><strong data-start=3D"178=
" data-end=3D"185">Yes</strong>=E2=80=94the figure shows <strong data-start=
=3D"203" data-end=3D"253">neural responses recorded from macaque monkeys</s=
trong> while they freely viewed natural images.</p>
<ul data-start=3D"296" data-end=3D"732">
<li data-start=3D"296" data-end=3D"509" class=3D"">
<p data-start=3D"298" data-end=3D"509" class=3D"">Panels like <strong data-=
start=3D"310" data-end=3D"331">(b), (c), and (e)</strong> plot <strong data=
-start=3D"337" data-end=3D"353">firing rates</strong>, <strong data-start=
=3D"355" data-end=3D"389">Face Selectivity Indices (FSI)</strong>, and time=
 courses of neural activity=E2=80=94these are based on <strong data-start=
=3D"446" data-end=3D"460">spike data</strong> recorded from cortical areas =
(like CIT and AIT).</p>
</li>
<li data-start=3D"510" data-end=3D"603" class=3D"">
<p data-start=3D"512" data-end=3D"603" class=3D"">Panel <strong data-start=
=3D"518" data-end=3D"525">(a)</strong> uses <strong data-start=3D"531" data=
-end=3D"559">monkey eye-tracking data</strong> to show fixation positions a=
nd transitions.</p>
</li>
<li data-start=3D"604" data-end=3D"732" class=3D"">
<p data-start=3D"606" data-end=3D"732" class=3D"">The different fixation ca=
tegories (e.g. "Face=E2=86=92Nonface") are derived from where the monkey lo=
oked, and what was under its gaze.</p>
</li>
</ul>
<hr data-start=3D"734" data-end=3D"737" class=3D"">
<h2 data-start=3D"739" data-end=3D"770" class=3D"">=F0=9F=A4=96 Is it using=
 DNN features?</h2>
<p data-start=3D"772" data-end=3D"922" class=3D"">Not <strong data-start=3D=
"776" data-end=3D"788">directly</strong> in this figure.<br data-start=3D"8=
04" data-end=3D"807">
But the DNN features <strong data-start=3D"828" data-end=3D"878">enable rel=
ated modeling elsewhere in the paper</strong>, and they may be used behind =
the scenes to:</p>
<ul data-start=3D"923" data-end=3D"1075">
<li data-start=3D"923" data-end=3D"986" class=3D"">
<p data-start=3D"925" data-end=3D"986" class=3D"">Build encoding models (DN=
N features =E2=86=92 firing rate prediction)</p>
</li>
<li data-start=3D"987" data-end=3D"1021" class=3D"">
<p data-start=3D"989" data-end=3D"1021" class=3D"">Interpret receptive fiel=
d tuning</p>
</li>
<li data-start=3D"1022" data-end=3D"1075" class=3D"">
<p data-start=3D"1024" data-end=3D"1075" class=3D"">Analyze representationa=
l similarity (DNN vs. brain)</p>
</li>
</ul>
<p data-start=3D"1077" data-end=3D"1101" class=3D"">However, in this figure=
:</p>
<ul data-start=3D"1102" data-end=3D"1289">
<li data-start=3D"1102" data-end=3D"1147" class=3D"">
<p data-start=3D"1104" data-end=3D"1147" class=3D"">The firing rates are re=
al neural recordings</p>
</li>
<li data-start=3D"1148" data-end=3D"1203" class=3D"">
<p data-start=3D"1150" data-end=3D"1203" class=3D"">The fixations are real =
eye-tracking data from monkeys</p>
</li>
<li data-start=3D"1204" data-end=3D"1289" class=3D"">
<p data-start=3D"1206" data-end=3D"1289" class=3D"">The categories (e.g., =
=E2=80=9Cface=E2=80=9D, =E2=80=9Cnon-face=E2=80=9D) are <strong data-start=
=3D"1252" data-end=3D"1273">label annotations</strong> for the stimuli</p>
</li>
</ul>
<hr data-start=3D"1291" data-end=3D"1294" class=3D"">
<h2 data-start=3D"1296" data-end=3D"1306" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"13=
08" data-end=3D"1635" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1308" data-end=3D"1327"><tr data-start=3D"1308" data-end=3D"=
1327"><th data-start=3D"1308" data-end=3D"1317" data-col-size=3D"sm">Aspect=
</th><th data-start=3D"1317" data-end=3D"1327" data-col-size=3D"md">Source<=
/th></tr></thead><tbody data-start=3D"1348" data-end=3D"1635"><tr data-star=
t=3D"1348" data-end=3D"1411"><td data-start=3D"1348" data-end=3D"1376" data=
-col-size=3D"sm">Neural activity (FR, FSI)</td><td data-start=3D"1376" data=
-end=3D"1411" data-col-size=3D"md">=E2=9C=85 Recorded from macaque neurons<=
/td></tr><tr data-start=3D"1412" data-end=3D"1473"><td data-start=3D"1412" =
data-end=3D"1434" data-col-size=3D"sm">Fixations, saccades</td><td data-sta=
rt=3D"1434" data-end=3D"1473" data-col-size=3D"md">=E2=9C=85 Tracked from m=
onkey eye movements</td></tr><tr data-start=3D"1474" data-end=3D"1532"><td =
data-start=3D"1474" data-end=3D"1501" data-col-size=3D"sm">Face vs. non-fac=
e labels</td><td data-start=3D"1501" data-end=3D"1532" data-col-size=3D"md"=
>=E2=9C=85 From stimulus annotations</td></tr><tr data-start=3D"1533" data-=
end=3D"1635"><td data-start=3D"1533" data-end=3D"1548" data-col-size=3D"sm"=
>DNN features</td><td data-start=3D"1548" data-end=3D"1635" data-col-size=
=3D"md">=E2=9D=8C Not directly shown in this figure, but used in modeling e=
lsewhere in the pipeline</td></tr></tbody></table><div class=3D"sticky end-=
(--thread-content-margin) h-0 self-end select-none"><div class=3D"absolute =
end-0 flex items-end" style=3D"height: 32.8906px;"><span class=3D"" data-st=
ate=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-terti=
ary text-token-text-secondary my-1 rounded-sm p-1 transition-opacity group-=
[:not(:hover):not(:focus-within)]:pointer-events-none group-[:not(:hover):n=
ot(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 =
0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-m=
d-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34=
315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19=
 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34=
315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 2=
0 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5=
 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 1=
9.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path>=
</svg></button></span></div></div></div></div>
<hr data-start=3D"1637" data-end=3D"1640" class=3D"">
<p data-start=3D"1642" data-end=3D"1773" class=3D"">If you'd like to <stron=
g data-start=3D"1659" data-end=3D"1732">recreate these figures using model =
predictions instead of neural data</strong>, we could definitely mock that =
up using:</p>
<ul data-start=3D"1774" data-end=3D"1874">
<li data-start=3D"1774" data-end=3D"1794" class=3D"">
<p data-start=3D"1776" data-end=3D"1794" class=3D""><code data-start=3D"177=
6" data-end=3D"1794">feats/patch_grid</code></p>
</li>
<li data-start=3D"1795" data-end=3D"1819" class=3D"">
<p data-start=3D"1797" data-end=3D"1819" class=3D"">Per-fixation alignment<=
/p>
</li>
<li data-start=3D"1820" data-end=3D"1874" class=3D"">
<p data-start=3D"1822" data-end=3D"1874" class=3D"">Ridge regression traine=
d on model =E2=86=92 neural responses</p>
</li>
</ul>
<p data-start=3D"1876" data-end=3D"1898" class=3D"">Want to try that next?<=
/p></div></div></div></div></div></div></div></div></article><article class=
=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversatio=
n-turn-121" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h=
5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--s=
pacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thre=
ad-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"re=
lative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow=
"><div data-message-author-role=3D"user" data-message-id=3D"3cba1d1f-5d1d-4=
bcf-a6cb-bccf3e288925" dir=3D"auto" class=3D"min-h-8 text-message relative =
flex w-full flex-col items-end gap-2 text-start break-words whitespace-norm=
al [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 emp=
ty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[var(--us=
er-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div =
class=3D"whitespace-pre-wrap">can you go through the inputted script slowly=
 and tell me what its doing</div></div></div></div></div></div></div></div>=
</div></article><article class=3D"text-token-text-primary w-full" dir=3D"au=
to" data-testid=3D"conversation-turn-122" data-scroll-anchor=3D"false"><h6 =
class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto=
 py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-mar=
gin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--th=
read-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34=
rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-widt=
h:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base g=
ap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" ta=
bindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full mi=
n-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3">=
<div class=3D"flex max-w-full flex-col grow"><div data-message-author-role=
=3D"assistant" data-message-id=3D"b48342fe-ef36-4de7-97c5-da1716936b17" dir=
=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col items=
-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:m=
t-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col =
gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-=
invert w-full break-words dark"><p data-start=3D"0" data-end=3D"121" class=
=3D"">Absolutely=E2=80=94let=E2=80=99s go through the script you posted <st=
rong data-start=3D"50" data-end=3D"75">slowly and thoroughly</strong>, cell=
 by cell, to understand what it=E2=80=99s doing.</p>
<hr data-start=3D"123" data-end=3D"126" class=3D"">
<h1 data-start=3D"128" data-end=3D"147" class=3D"">=F0=9F=94=8D Script Summ=
ary</h1>
<p data-start=3D"149" data-end=3D"176" class=3D"">This script is designed t=
o:</p>
<blockquote data-start=3D"177" data-end=3D"356">
<p data-start=3D"179" data-end=3D"356" class=3D""><strong data-start=3D"179=
" data-end=3D"305">Extract deep features from a set of images (and image pa=
tches) using a Vision Transformer (ViT) model, at a specific layer</strong>=
, and save them to disk in an organized <code data-start=3D"345" data-end=
=3D"350">.h5</code> file.</p>
</blockquote>
<hr data-start=3D"358" data-end=3D"361" class=3D"">
<h1 data-start=3D"363" data-end=3D"389" class=3D"">=E2=9C=85 Step-by-Step B=
reakdown</h1>
<hr data-start=3D"391" data-end=3D"394" class=3D"">
<h2 data-start=3D"396" data-end=3D"421" class=3D"">=F0=9F=93=A6 <strong dat=
a-start=3D"402" data-end=3D"421">Imports &amp; Setup</strong></h2>
<pre class=3D"overflow-visible!" data-start=3D"422" data-end=3D"519"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> sys
</span><span><span class=3D"hljs-keyword">from</span></span><span> pathlib =
</span><span><span class=3D"hljs-keyword">import</span></span><span> Path
...
</span><span><span class=3D"hljs-keyword">from</span></span><span> local_pa=
ths </span><span><span class=3D"hljs-keyword">import</span></span><span> st=
im_dir, cache_dir
</span></span></code></div></div></pre>
<h3 data-start=3D"521" data-end=3D"533" class=3D"">Purpose:</h3>
<ul data-start=3D"534" data-end=3D"779">
<li data-start=3D"534" data-end=3D"695" class=3D"">
<p data-start=3D"536" data-end=3D"562" class=3D"">Set up imports, including=
:</p>
<ul data-start=3D"565" data-end=3D"695">
<li data-start=3D"565" data-end=3D"580" class=3D"">
<p data-start=3D"567" data-end=3D"580" class=3D"">Torch &amp; NumPy</p>
</li>
<li data-start=3D"583" data-end=3D"613" class=3D"">
<p data-start=3D"585" data-end=3D"613" class=3D"">ViT model tools (<code da=
ta-start=3D"602" data-end=3D"612">modeling</code>)</p>
</li>
<li data-start=3D"616" data-end=3D"647" class=3D"">
<p data-start=3D"618" data-end=3D"647" class=3D"">Image handling (<code dat=
a-start=3D"634" data-end=3D"639">cv2</code>, <code data-start=3D"641" data-=
end=3D"646">PIL</code>)</p>
</li>
<li data-start=3D"650" data-end=3D"695" class=3D"">
<p data-start=3D"652" data-end=3D"695" class=3D"">Utilities for feature ext=
raction and saving</p>
</li>
</ul>
</li>
<li data-start=3D"696" data-end=3D"779" class=3D"">
<p data-start=3D"698" data-end=3D"779" class=3D"">Define where the <strong =
data-start=3D"715" data-end=3D"734">stimulus images</strong> and <strong da=
ta-start=3D"739" data-end=3D"767">cache (output) directory</strong> are loc=
ated</p>
</li>
</ul>
<hr data-start=3D"781" data-end=3D"784" class=3D"">
<h2 data-start=3D"786" data-end=3D"817" class=3D"">=E2=9A=99=EF=B8=8F <stro=
ng data-start=3D"792" data-end=3D"817">Parameter Definitions</strong></h2>
<pre class=3D"overflow-visible!" data-start=3D"818" data-end=3D"993"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>im_md5s =3D </span><span><span class=3D"hljs-string=
">'md5_im1,md5_im2'</span></span><span>  </span><span><span class=3D"hljs-c=
omment"># input image IDs (hashed names)</span></span><span>
...
model_name =3D </span><span><span class=3D"hljs-string">'vit_large_patch16_=
384'</span></span><span>
layer_name =3D </span><span><span class=3D"hljs-string">'blocks.13.attn.qkv=
'</span></span><span>
spatial_averaging =3D </span><span><span class=3D"hljs-literal">True</span>=
</span><span>
</span></span></code></div></div></pre>
<h3 data-start=3D"995" data-end=3D"1007" class=3D"">Purpose:</h3>
<ul data-start=3D"1008" data-end=3D"1254">
<li data-start=3D"1008" data-end=3D"1063" class=3D"">
<p data-start=3D"1010" data-end=3D"1063" class=3D"">Specify <strong data-st=
art=3D"1018" data-end=3D"1034">which images</strong> to process (by MD5 fil=
ename)</p>
</li>
<li data-start=3D"1064" data-end=3D"1125" class=3D"">
<p data-start=3D"1066" data-end=3D"1125" class=3D"">Define <strong data-sta=
rt=3D"1073" data-end=3D"1086">ViT model</strong> and <strong data-start=3D"=
1091" data-end=3D"1100">layer</strong> to extract features from</p>
</li>
<li data-start=3D"1126" data-end=3D"1213" class=3D"">
<p data-start=3D"1128" data-end=3D"1213" class=3D"">Configure <strong data-=
start=3D"1138" data-end=3D"1159">spatial averaging</strong> (reduce output =
to a single vector per image or patch)</p>
</li>
<li data-start=3D"1214" data-end=3D"1254" class=3D"">
<p data-start=3D"1216" data-end=3D"1254" class=3D"">Set patching parameters=
 (size, stride)</p>
</li>
</ul>
<p data-start=3D"1256" data-end=3D"1405" class=3D"">=F0=9F=A7=A0 <strong da=
ta-start=3D"1259" data-end=3D"1272">Important</strong>: This script does no=
t assume anything about the stimuli except their MD5 names and location in =
a shared folder (<code data-start=3D"1385" data-end=3D"1404">stim_dir/Stimu=
li/</code>)</p>
<hr data-start=3D"1407" data-end=3D"1410" class=3D"">
<h2 data-start=3D"1412" data-end=3D"1460" class=3D"">=F0=9F=93=81 <strong d=
ata-start=3D"1418" data-end=3D"1460">Check paths and initialize output file=
</strong></h2>
<pre class=3D"overflow-visible!" data-start=3D"1461" data-end=3D"1568"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>stim_dir =3D Path(stim_dir + </span><span><span cla=
ss=3D"hljs-string">'Stimuli/'</span></span><span>)
output_path =3D Path(cache_dir + </span><span><span class=3D"hljs-string">'=
feats/...params...h5'</span></span><span>)
</span></span></code></div></div></pre>
<h3 data-start=3D"1570" data-end=3D"1582" class=3D"">Purpose:</h3>
<ul data-start=3D"1583" data-end=3D"1691">
<li data-start=3D"1583" data-end=3D"1631" class=3D"">
<p data-start=3D"1585" data-end=3D"1631" class=3D"">Construct the full inpu=
t and output file paths</p>
</li>
<li data-start=3D"1632" data-end=3D"1691" class=3D"">
<p data-start=3D"1634" data-end=3D"1691" class=3D"">Prepare a <code data-st=
art=3D"1644" data-end=3D"1649">.h5</code> output file for saving extracted =
features</p>
</li>
</ul>
<hr data-start=3D"1693" data-end=3D"1696" class=3D"">
<h2 data-start=3D"1698" data-end=3D"1730" class=3D"">=F0=9F=A7=A0 <strong d=
ata-start=3D"1704" data-end=3D"1730">Patch Grid Preparation</strong></h2>
<pre class=3D"overflow-visible!" data-start=3D"1731" data-end=3D"1788"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>patches_ledge_x =3D ...
patches_ledge_y =3D ...
</span></span></code></div></div></pre>
<h3 data-start=3D"1790" data-end=3D"1802" class=3D"">Purpose:</h3>
<ul data-start=3D"1803" data-end=3D"2162">
<li data-start=3D"1803" data-end=3D"1867" class=3D"">
<p data-start=3D"1805" data-end=3D"1867" class=3D"">Construct a <strong dat=
a-start=3D"1817" data-end=3D"1850">grid of patch starting points</strong> a=
cross the image</p>
</li>
<li data-start=3D"1868" data-end=3D"2025" class=3D"">
<p data-start=3D"1870" data-end=3D"1891" class=3D"">The grid is based on:</=
p>
<ul data-start=3D"1894" data-end=3D"2025">
<li data-start=3D"1894" data-end=3D"1950" class=3D"">
<p data-start=3D"1896" data-end=3D"1950" class=3D"">Image size in degrees o=
f visual angle (<code data-start=3D"1935" data-end=3D"1941">im_w</code>, <c=
ode data-start=3D"1943" data-end=3D"1949">im_h</code>)</p>
</li>
<li data-start=3D"1953" data-end=3D"1980" class=3D"">
<p data-start=3D"1955" data-end=3D"1980" class=3D"">Patch size (<code data-=
start=3D"1967" data-end=3D"1979">patch_size</code>)</p>
</li>
<li data-start=3D"1983" data-end=3D"2025" class=3D"">
<p data-start=3D"1985" data-end=3D"2025" class=3D"">Step size between patch=
es (<code data-start=3D"2012" data-end=3D"2024">patch_step</code>)</p>
</li>
</ul>
</li>
<li data-start=3D"2026" data-end=3D"2080" class=3D"">
<p data-start=3D"2028" data-end=3D"2080" class=3D"">The origin is aligned t=
o the <strong data-start=3D"2057" data-end=3D"2080">center of the image</st=
rong></p>
</li>
<li data-start=3D"2081" data-end=3D"2162" class=3D"">
<p data-start=3D"2083" data-end=3D"2162" class=3D"">This grid will later be=
 used to crop patches and run them through the ViT model</p>
</li>
</ul>
<p data-start=3D"2164" data-end=3D"2247" class=3D"">=F0=9F=A7=A9 This mimic=
s how the monkey would view different parts of the image via saccades.</p>
<hr data-start=3D"2249" data-end=3D"2252" class=3D"">
<h2 data-start=3D"2254" data-end=3D"2286" class=3D"">=F0=9F=93=8F <strong d=
ata-start=3D"2260" data-end=3D"2286">Model input resolution</strong></h2>
<pre class=3D"overflow-visible!" data-start=3D"2287" data-end=3D"2366"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>model_imsize =3D registry.get_default_preproc(model=
_name)[</span><span><span class=3D"hljs-string">'imsize'</span></span><span=
>]
</span></span></code></div></div></pre>
<ul data-start=3D"2368" data-end=3D"2490">
<li data-start=3D"2368" data-end=3D"2490" class=3D"">
<p data-start=3D"2370" data-end=3D"2422" class=3D"">Checks what input size =
(in pixels) the model expects</p>
<ul data-start=3D"2425" data-end=3D"2490">
<li data-start=3D"2425" data-end=3D"2490" class=3D"">
<p data-start=3D"2427" data-end=3D"2490" class=3D"">For <code data-start=3D=
"2431" data-end=3D"2454">vit_large_patch16_384</code>, this is typically <s=
trong data-start=3D"2474" data-end=3D"2490">384 =C3=97 384 px</strong></p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"2492" data-end=3D"2495" class=3D"">
<h2 data-start=3D"2497" data-end=3D"2536" class=3D"">=F0=9F=93=82 <strong d=
ata-start=3D"2503" data-end=3D"2536">Prepare output file structure</strong>=
</h2>
<pre class=3D"overflow-visible!" data-start=3D"2537" data-end=3D"2598"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>save_results(...)
create_ignoring_existing(...)
</span></span></code></div></div></pre>
<h3 data-start=3D"2600" data-end=3D"2612" class=3D"">Purpose:</h3>
<ul data-start=3D"2613" data-end=3D"2842">
<li data-start=3D"2613" data-end=3D"2671" class=3D"">
<p data-start=3D"2615" data-end=3D"2671" class=3D"">Initialize storage grou=
ps and datasets in the <code data-start=3D"2661" data-end=3D"2666">.h5</cod=
e> file</p>
</li>
<li data-start=3D"2672" data-end=3D"2842" class=3D"">
<p data-start=3D"2674" data-end=3D"2693" class=3D"">Set up fields like:</p>
<ul data-start=3D"2696" data-end=3D"2842">
<li data-start=3D"2696" data-end=3D"2750" class=3D"">
<p data-start=3D"2698" data-end=3D"2750" class=3D""><code data-start=3D"269=
8" data-end=3D"2716">feats/full_image</code>: features from full resized im=
age</p>
</li>
<li data-start=3D"2753" data-end=3D"2808" class=3D"">
<p data-start=3D"2755" data-end=3D"2808" class=3D""><code data-start=3D"275=
5" data-end=3D"2773">feats/patch_grid</code>: features from each patch loca=
tion</p>
</li>
<li data-start=3D"2811" data-end=3D"2842" class=3D"">
<p data-start=3D"2813" data-end=3D"2842" class=3D""><code data-start=3D"281=
3" data-end=3D"2818">md5</code>: filenames for tracking</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"2844" data-end=3D"2847" class=3D"">
<h2 data-start=3D"2849" data-end=3D"2875" class=3D"">=F0=9F=96=BC=EF=B8=8F =
<strong data-start=3D"2856" data-end=3D"2875">Load the images</strong></h2>
<pre class=3D"overflow-visible!" data-start=3D"2876" data-end=3D"3016"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> fp </span><span><span class=3D"hljs-keyword">in</span></span><span> im_pa=
ths:
    image =3D Image.</span><span><span class=3D"hljs-built_in">open</span><=
/span><span>(fp)
    ...
    image =3D np.array(image.resize(...))
    ...
    images[iim] =3D image
</span></span></code></div></div></pre>
<h3 data-start=3D"3018" data-end=3D"3030" class=3D"">Purpose:</h3>
<ul data-start=3D"3031" data-end=3D"3171">
<li data-start=3D"3031" data-end=3D"3074" class=3D"">
<p data-start=3D"3033" data-end=3D"3074" class=3D"">Loads each image by its=
 MD5-hash filename</p>
</li>
<li data-start=3D"3075" data-end=3D"3126" class=3D"">
<p data-start=3D"3077" data-end=3D"3126" class=3D"">Resizes it to the corre=
ct aspect ratio and format</p>
</li>
<li data-start=3D"3127" data-end=3D"3171" class=3D"">
<p data-start=3D"3129" data-end=3D"3171" class=3D"">Stores them in a list f=
or batch processing</p>
</li>
</ul>
<p data-start=3D"3173" data-end=3D"3182" class=3D"">=F0=9F=A7=A0 Notes:</p>
<ul data-start=3D"3183" data-end=3D"3275">
<li data-start=3D"3183" data-end=3D"3219" class=3D"">
<p data-start=3D"3185" data-end=3D"3219" class=3D"">Converts grayscale =E2=
=86=92 RGB if needed</p>
</li>
<li data-start=3D"3220" data-end=3D"3275" class=3D"">
<p data-start=3D"3222" data-end=3D"3275" class=3D"">Converts 4-channel =E2=
=86=92 3-channel images (removes alpha)</p>
</li>
</ul>
<hr data-start=3D"3277" data-end=3D"3280" class=3D"">
<h2 data-start=3D"3282" data-end=3D"3309" class=3D"">=F0=9F=A7=A0 <strong d=
ata-start=3D"3288" data-end=3D"3309">Prepare the model</strong></h2>
<pre class=3D"overflow-visible!" data-start=3D"3310" data-end=3D"3450"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>model =3D models.get_model_by_name(model_name, dev=
=3Ddevice)
...
hooks[n], hdls[n] =3D make_layer_hook(model, n, return_handle=3D</span><spa=
n><span class=3D"hljs-literal">True</span></span><span>)
</span></span></code></div></div></pre>
<h3 data-start=3D"3452" data-end=3D"3464" class=3D"">Purpose:</h3>
<ul data-start=3D"3465" data-end=3D"3692">
<li data-start=3D"3465" data-end=3D"3496" class=3D"">
<p data-start=3D"3467" data-end=3D"3496" class=3D"">Load the pretrained ViT=
 model</p>
</li>
<li data-start=3D"3497" data-end=3D"3603" class=3D"">
<p data-start=3D"3499" data-end=3D"3603" class=3D"">Attach <strong data-sta=
rt=3D"3506" data-end=3D"3523">forward hooks</strong> to extract output from=
 a specific internal layer (e.g., <code data-start=3D"3580" data-end=3D"360=
2">'blocks.13.attn.qkv'</code>)</p>
</li>
<li data-start=3D"3604" data-end=3D"3692" class=3D"">
<p data-start=3D"3606" data-end=3D"3692" class=3D"">Set up a wrapper class =
<code data-start=3D"3629" data-end=3D"3639">Embedder</code> to run images t=
hrough the model and extract features</p>
</li>
</ul>
<p data-start=3D"3694" data-end=3D"3795" class=3D"">=F0=9F=A7=A0 This uses =
<strong data-start=3D"3707" data-end=3D"3718">hooking</strong> to pull out =
intermediate activations <strong data-start=3D"3756" data-end=3D"3794">with=
out modifying the model itself</strong>.</p>
<hr data-start=3D"3797" data-end=3D"3800" class=3D"">
<h2 data-start=3D"3802" data-end=3D"3845" class=3D"">=F0=9F=A7=AA <strong d=
ata-start=3D"3808" data-end=3D"3845">Test embedding &amp; get sample shape<=
/strong></h2>
<pre class=3D"overflow-visible!" data-start=3D"3846" data-end=3D"3934"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>test_im =3D np.full(...)
feats =3D embedder.extract_pooled_features([test_im])
</span></span></code></div></div></pre>
<ul data-start=3D"3936" data-end=3D"4070">
<li data-start=3D"3936" data-end=3D"4013" class=3D"">
<p data-start=3D"3938" data-end=3D"4013" class=3D"">Runs a test image throu=
gh the model to see what the output feature shape is</p>
</li>
<li data-start=3D"4014" data-end=3D"4070" class=3D"">
<p data-start=3D"4016" data-end=3D"4070" class=3D"">Stores this shape to in=
itialize the output HDF5 arrays</p>
</li>
</ul>
<hr data-start=3D"4072" data-end=3D"4075" class=3D"">
<h2 data-start=3D"4077" data-end=3D"4107" class=3D"">=F0=9F=A7=B1 <strong d=
ata-start=3D"4083" data-end=3D"4107">Main processing loop</strong></h2>
<pre class=3D"overflow-visible!" data-start=3D"4108" data-end=3D"4424"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">for</span></span><span=
> iim, (im, md5) </span><span><span class=3D"hljs-keyword">in</span></span>=
<span> </span><span><span class=3D"hljs-built_in">enumerate</span></span><s=
pan>(...):
    ...
    feats_ =3D embedder.extract_pooled_features([im_])
    ...
    </span><span><span class=3D"hljs-keyword">for</span></span><span> ix, x=
0 </span><span><span class=3D"hljs-keyword">in</span></span><span> </span><=
span><span class=3D"hljs-built_in">enumerate</span></span><span>(patches_le=
dge_x):
        </span><span><span class=3D"hljs-keyword">for</span></span><span> i=
y, y0 </span><span><span class=3D"hljs-keyword">in</span></span><span> </sp=
an><span><span class=3D"hljs-built_in">enumerate</span></span><span>(patche=
s_ledge_y):
            wim =3D get_image_patch(...)
            feats_ =3D embedder.extract_pooled_features([wim])
</span></span></code></div></div></pre>
<h3 data-start=3D"4426" data-end=3D"4445" class=3D"">For each image:</h3>
<ul data-start=3D"4446" data-end=3D"4689">
<li data-start=3D"4446" data-end=3D"4499" class=3D"">
<p data-start=3D"4448" data-end=3D"4499" class=3D"">Resizes and runs the <s=
trong data-start=3D"4469" data-end=3D"4483">full image</strong> through the=
 ViT</p>
</li>
<li data-start=3D"4500" data-end=3D"4566" class=3D"">
<p data-start=3D"4502" data-end=3D"4566" class=3D"">Then <strong data-start=
=3D"4507" data-end=3D"4526">slides a window</strong> over the image and cro=
ps each <strong data-start=3D"4557" data-end=3D"4566">patch</strong></p>
</li>
<li data-start=3D"4567" data-end=3D"4689" class=3D"">
<p data-start=3D"4569" data-end=3D"4583" class=3D"">Each patch is:</p>
<ul data-start=3D"4586" data-end=3D"4689">
<li data-start=3D"4586" data-end=3D"4595" class=3D"">
<p data-start=3D"4588" data-end=3D"4595" class=3D"">Resized</p>
</li>
<li data-start=3D"4598" data-end=3D"4612" class=3D"">
<p data-start=3D"4600" data-end=3D"4612" class=3D"">Preprocessed</p>
</li>
<li data-start=3D"4615" data-end=3D"4638" class=3D"">
<p data-start=3D"4617" data-end=3D"4638" class=3D"">Run through the model</=
p>
</li>
<li data-start=3D"4641" data-end=3D"4689" class=3D"">
<p data-start=3D"4643" data-end=3D"4689" class=3D"">Feature vector extracte=
d from the chosen layer</p>
</li>
</ul>
</li>
</ul>
<p data-start=3D"4691" data-end=3D"4719" class=3D"">=F0=9F=A7=A0 All of thi=
s is stored in:</p>
<ul data-start=3D"4720" data-end=3D"4868">
<li data-start=3D"4720" data-end=3D"4771" class=3D"">
<p data-start=3D"4722" data-end=3D"4771" class=3D""><code data-start=3D"472=
2" data-end=3D"4743">feats/full_image[i]</code> =E2=86=92 Full image featur=
e vector</p>
</li>
<li data-start=3D"4772" data-end=3D"4868" class=3D"">
<p data-start=3D"4774" data-end=3D"4868" class=3D""><code data-start=3D"477=
4" data-end=3D"4795">feats/patch_grid[i]</code> =E2=86=92 Grid of patch-wis=
e feature vectors (2D array of patches =C3=97 feature_dim)</p>
</li>
</ul>
<hr data-start=3D"4870" data-end=3D"4873" class=3D"">
<h2 data-start=3D"4875" data-end=3D"4908" class=3D"">=E2=9C=85 <strong data=
-start=3D"4880" data-end=3D"4908">Final Output (per image)</strong></h2>
<p data-start=3D"4910" data-end=3D"4940" class=3D"">For each image, saved t=
o HDF5:</p>
<ul data-start=3D"4941" data-end=3D"5104">
<li data-start=3D"4941" data-end=3D"4994" class=3D"">
<p data-start=3D"4943" data-end=3D"4994" class=3D""><code data-start=3D"494=
3" data-end=3D"4961">feats/full_image</code>: shape <code data-start=3D"496=
9" data-end=3D"4994">[n_images, feature_dim]</code></p>
</li>
<li data-start=3D"4995" data-end=3D"5070" class=3D"">
<p data-start=3D"4997" data-end=3D"5070" class=3D""><code data-start=3D"499=
7" data-end=3D"5015">feats/patch_grid</code>: shape <code data-start=3D"502=
3" data-end=3D"5070">[n_images, x_patches, y_patches, feature_dim]</code></=
p>
</li>
<li data-start=3D"5071" data-end=3D"5104" class=3D"">
<p data-start=3D"5073" data-end=3D"5104" class=3D""><code data-start=3D"507=
3" data-end=3D"5078">md5</code>: mapping back to filename</p>
</li>
</ul>
<hr data-start=3D"5106" data-end=3D"5109" class=3D"">
<h2 data-start=3D"5111" data-end=3D"5135" class=3D"">=F0=9F=A7=A0 Why this =
is useful</h2>
<ul data-start=3D"5137" data-end=3D"5446">
<li data-start=3D"5137" data-end=3D"5203" class=3D"">
<p data-start=3D"5139" data-end=3D"5203" class=3D"">These features can be <=
strong data-start=3D"5161" data-end=3D"5203">aligned with monkey fixation l=
ocations</strong></p>
</li>
<li data-start=3D"5204" data-end=3D"5267" class=3D"">
<p data-start=3D"5206" data-end=3D"5267" class=3D"">Can be used to <strong =
data-start=3D"5221" data-end=3D"5249">predict neural responses</strong> (en=
coding models)</p>
</li>
<li data-start=3D"5268" data-end=3D"5349" class=3D"">
<p data-start=3D"5270" data-end=3D"5349" class=3D"">Can be compared to <str=
ong data-start=3D"5289" data-end=3D"5315">population tuning maps</strong>, =
receptive fields, or gaze biases</p>
</li>
<li data-start=3D"5350" data-end=3D"5446" class=3D"">
<p data-start=3D"5352" data-end=3D"5446" class=3D"">Can be plugged into RSA=
 analyses, face selectivity analyses, or patch-based attention modeling</p>
</li>
</ul>
<hr data-start=3D"5448" data-end=3D"5451" class=3D"">
<p data-start=3D"5453" data-end=3D"5582" class=3D"">Would you like help mod=
ifying this to extract from multiple layers at once or aligning patches to =
monkey fixations automatically?</p></div></div></div></div></div></div></di=
v></div></article><article class=3D"text-token-text-primary w-full" dir=3D"=
auto" data-testid=3D"conversation-turn-123" data-scroll-anchor=3D"false"><h=
5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-auto p=
y-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margi=
n:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thre=
ad-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34re=
m]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:=
48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap=
-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabi=
ndex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-=
w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D=
"flex max-w-full flex-col grow"><div data-message-author-role=3D"user" data=
-message-id=3D"76a0d08e-3a45-4886-b667-ce31171b20d3" dir=3D"auto" class=3D"=
min-h-8 text-message relative flex w-full flex-col items-end gap-2 text-sta=
rt break-words whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"=
flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><div cla=
ss=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-surface =
rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">what is the pur=
pose of a ViT</div></div></div></div></div></div></div></div></div></articl=
e><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-testi=
d=3D"conversation-turn-124" data-scroll-anchor=3D"false"><h6 class=3D"sr-on=
ly">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--threa=
d-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(=
6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-m=
argin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread=
-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-au=
to flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 =
lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1">=
<div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col=
 agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"=
flex max-w-full flex-col grow"><div data-message-author-role=3D"assistant" =
data-message-id=3D"46cf293e-babe-4195-a3fd-b8d540cf7b58" dir=3D"auto" class=
=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 text=
-start break-words whitespace-normal [.text-message+&amp;]:mt-5" data-messa=
ge-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hid=
den first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full b=
reak-words dark"><p data-start=3D"0" data-end=3D"44" class=3D"">Great quest=
ion! Let's break it down clearly:</p>
<hr data-start=3D"46" data-end=3D"49" class=3D"">
<h1 data-start=3D"51" data-end=3D"110" class=3D"">=F0=9F=A7=A0 What is the =
<strong data-start=3D"68" data-end=3D"79">purpose</strong> of a ViT (Vision=
 Transformer)?</h1>
<p data-start=3D"112" data-end=3D"221" class=3D"">A <strong data-start=3D"1=
14" data-end=3D"142">Vision Transformer (ViT)</strong> is a type of deep le=
arning model for computer vision tasks. Its purpose is to:</p>
<blockquote data-start=3D"222" data-end=3D"347">
<p data-start=3D"224" data-end=3D"347" class=3D""><strong data-start=3D"224=
" data-end=3D"347">Understand images by modeling long-range spatial relatio=
nships between patches using attention, instead of convolution.</strong></p=
>
</blockquote>
<hr data-start=3D"349" data-end=3D"352" class=3D"">
<h2 data-start=3D"354" data-end=3D"406" class=3D"">=F0=9F=94=8D Why use a V=
ision Transformer instead of a CNN?</h2>
<p data-start=3D"408" data-end=3D"461" class=3D"">Traditional <strong data-=
start=3D"420" data-end=3D"460">CNNs (Convolutional Neural Networks)</strong=
>:</p>
<ul data-start=3D"462" data-end=3D"653">
<li data-start=3D"462" data-end=3D"515" class=3D"">
<p data-start=3D"464" data-end=3D"515" class=3D"">Use <strong data-start=3D=
"468" data-end=3D"485">local filters</strong> to process parts of the image=
</p>
</li>
<li data-start=3D"516" data-end=3D"587" class=3D"">
<p data-start=3D"518" data-end=3D"587" class=3D"">Excel at capturing <stron=
g data-start=3D"537" data-end=3D"555">local patterns</strong> (like edges, =
textures, corners)</p>
</li>
<li data-start=3D"588" data-end=3D"653" class=3D"">
<p data-start=3D"590" data-end=3D"653" class=3D"">Build hierarchical featur=
es by stacking layers (local =E2=86=92 global)</p>
</li>
</ul>
<p data-start=3D"655" data-end=3D"681" class=3D"">But CNNs have limitations=
:</p>
<ul data-start=3D"682" data-end=3D"787">
<li data-start=3D"682" data-end=3D"743" class=3D"">
<p data-start=3D"684" data-end=3D"743" class=3D"">Struggle to <strong data-=
start=3D"696" data-end=3D"722">capture global context</strong> early in the=
 network</p>
</li>
<li data-start=3D"744" data-end=3D"787" class=3D"">
<p data-start=3D"746" data-end=3D"787" class=3D"">Need deep stacking to lin=
k distant pixels</p>
</li>
</ul>
<hr data-start=3D"789" data-end=3D"792" class=3D"">
<h2 data-start=3D"794" data-end=3D"824" class=3D"">=F0=9F=92=A1 What ViTs d=
o differently</h2>
<p data-start=3D"826" data-end=3D"931" class=3D"">ViTs treat an image like =
a <strong data-start=3D"853" data-end=3D"876">sequence of patches</strong>,=
 much like how transformers treat words in a sentence.</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"93=
3" data-end=3D"1357" class=3D"w-fit min-w-(--thread-content-width)"><thead =
data-start=3D"933" data-end=3D"956"><tr data-start=3D"933" data-end=3D"956"=
><th data-start=3D"933" data-end=3D"940" data-col-size=3D"sm">Step</th><th =
data-start=3D"940" data-end=3D"956" data-col-size=3D"md">What happens</th><=
/tr></thead><tbody data-start=3D"981" data-end=3D"1357"><tr data-start=3D"9=
81" data-end=3D"1039"><td data-start=3D"981" data-end=3D"1012" data-col-siz=
e=3D"sm">1=EF=B8=8F=E2=83=A3 Split image into patches</td><td data-start=3D=
"1012" data-end=3D"1039" data-col-size=3D"md">e.g. 16=C3=9716 pixel chunks<=
/td></tr><tr data-start=3D"1040" data-end=3D"1088"><td data-start=3D"1040" =
data-end=3D"1065" data-col-size=3D"sm">2=EF=B8=8F=E2=83=A3 Flatten each pat=
ch</td><td data-start=3D"1065" data-end=3D"1088" data-col-size=3D"md">Conve=
rt to a vector</td></tr><tr data-start=3D"1089" data-end=3D"1163"><td data-=
start=3D"1089" data-end=3D"1121" data-col-size=3D"sm">3=EF=B8=8F=E2=83=A3 A=
dd positional embeddings</td><td data-start=3D"1121" data-end=3D"1163" data=
-col-size=3D"md">So the model knows where each patch is</td></tr><tr data-s=
tart=3D"1164" data-end=3D"1271"><td data-start=3D"1164" data-end=3D"1202" d=
ata-col-size=3D"sm">4=EF=B8=8F=E2=83=A3 Feed through Transformer layers</td=
><td data-start=3D"1202" data-end=3D"1271" data-col-size=3D"md">Each patch =
can attend to <strong data-start=3D"1229" data-end=3D"1250">every other pat=
ch</strong> via self-attention</td></tr><tr data-start=3D"1272" data-end=3D=
"1357"><td data-start=3D"1272" data-end=3D"1301" data-col-size=3D"sm">5=EF=
=B8=8F=E2=83=A3 Output feature vectors</td><td data-start=3D"1301" data-end=
=3D"1357" data-col-size=3D"md">Encode rich, <strong data-start=3D"1316" dat=
a-end=3D"1342">global representations</strong> of the image</td></tr></tbod=
y></table><div class=3D"sticky end-(--thread-content-margin) h-0 self-end s=
elect-none"><div class=3D"absolute end-0 flex items-end" style=3D"height: 3=
2.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token=
-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 round=
ed-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:pointe=
r-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.343=
15 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C=
3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 =
17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 1=
9 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523=
 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 =
9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div></div>=
</div>
<hr data-start=3D"1359" data-end=3D"1362" class=3D"">
<h2 data-start=3D"1364" data-end=3D"1390" class=3D"">=E2=9C=85 Key strength=
s of ViTs</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"13=
92" data-end=3D"1777" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1392" data-end=3D"1421"><tr data-start=3D"1392" data-end=3D"=
1421"><th data-start=3D"1392" data-end=3D"1403" data-col-size=3D"sm">Streng=
th</th><th data-start=3D"1403" data-end=3D"1421" data-col-size=3D"md">Why i=
t matters</th></tr></thead><tbody data-start=3D"1451" data-end=3D"1777"><tr=
 data-start=3D"1451" data-end=3D"1544"><td data-start=3D"1451" data-end=3D"=
1474" data-col-size=3D"sm"><strong data-start=3D"1453" data-end=3D"1473">Gl=
obal attention</strong></td><td data-start=3D"1474" data-end=3D"1544" data-=
col-size=3D"md">Patches can attend to distant areas =E2=86=92 better for sp=
atial reasoning</td></tr><tr data-start=3D"1545" data-end=3D"1625"><td data=
-start=3D"1545" data-end=3D"1570" data-col-size=3D"sm"><strong data-start=
=3D"1547" data-end=3D"1569">More interpretable</strong></td><td data-start=
=3D"1570" data-end=3D"1625" data-col-size=3D"md">Attention maps can show wh=
at the model "focused" on</td></tr><tr data-start=3D"1626" data-end=3D"1703=
"><td data-start=3D"1626" data-end=3D"1641" data-col-size=3D"sm"><strong da=
ta-start=3D"1628" data-end=3D"1640">Scalable</strong></td><td data-start=3D=
"1641" data-end=3D"1703" data-col-size=3D"md">Performs very well with large=
 datasets (ImageNet-21k, JFT)</td></tr><tr data-start=3D"1704" data-end=3D"=
1777"><td data-start=3D"1704" data-end=3D"1719" data-col-size=3D"sm"><stron=
g data-start=3D"1706" data-end=3D"1718">Flexible</strong></td><td data-star=
t=3D"1719" data-end=3D"1777" data-col-size=3D"md">Can be pre-trained on vis=
ion=E2=80=93language tasks (e.g., CLIP)</td></tr></tbody></table><div class=
=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"><div cla=
ss=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary hover:bg=
-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 transition=
-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-none group-=
[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.656=
9 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569=
 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H=
19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4=
.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C=
14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curren=
tColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"1779" data-end=3D"1782" class=3D"">
<h2 data-start=3D"1784" data-end=3D"1807" class=3D"">=F0=9F=94=AC Use cases=
 of ViTs</h2>
<ul data-start=3D"1809" data-end=3D"2044">
<li data-start=3D"1809" data-end=3D"1874" class=3D"">
<p data-start=3D"1811" data-end=3D"1874" class=3D""><strong data-start=3D"1=
811" data-end=3D"1835">Image classification</strong> (e.g. =E2=80=9CIs ther=
e a cat in this image?=E2=80=9D)</p>
</li>
<li data-start=3D"1875" data-end=3D"1909" class=3D"">
<p data-start=3D"1877" data-end=3D"1909" class=3D""><strong data-start=3D"1=
877" data-end=3D"1897">Object detection</strong> (e.g. DETR)</p>
</li>
<li data-start=3D"1910" data-end=3D"1934" class=3D"">
<p data-start=3D"1912" data-end=3D"1934" class=3D""><strong data-start=3D"1=
912" data-end=3D"1934">Image segmentation</strong></p>
</li>
<li data-start=3D"1935" data-end=3D"1995" class=3D"">
<p data-start=3D"1937" data-end=3D"1995" class=3D""><strong data-start=3D"1=
937" data-end=3D"1965">Vision=E2=80=93language modeling</strong> (e.g. CLIP=
, DALL=C2=B7E, Flamingo)</p>
</li>
<li data-start=3D"1996" data-end=3D"2044" class=3D"">
<p data-start=3D"1998" data-end=3D"2044" class=3D""><strong data-start=3D"1=
998" data-end=3D"2023">Neuroscience modeling</strong> (like your pipeline)<=
/p>
</li>
</ul>
<hr data-start=3D"2046" data-end=3D"2049" class=3D"">
<h2 data-start=3D"2051" data-end=3D"2086" class=3D"">=F0=9F=A7=A0 In your c=
ontext: Why use ViT?</h2>
<p data-start=3D"2088" data-end=3D"2145" class=3D"">In your macaque neuroim=
aging project, the ViT is used to:</p>
<ul data-start=3D"2146" data-end=3D"2345">
<li data-start=3D"2146" data-end=3D"2200" class=3D"">
<p data-start=3D"2148" data-end=3D"2200" class=3D"">Extract <strong data-st=
art=3D"2156" data-end=3D"2180">deep visual features</strong> from natural i=
mages</p>
</li>
<li data-start=3D"2201" data-end=3D"2239" class=3D"">
<p data-start=3D"2203" data-end=3D"2239" class=3D"">Compare them to <strong=
 data-start=3D"2219" data-end=3D"2239">neural responses</strong></p>
</li>
<li data-start=3D"2240" data-end=3D"2345" class=3D"">
<p data-start=3D"2242" data-end=3D"2345" class=3D"">Ask whether <strong dat=
a-start=3D"2254" data-end=3D"2297">transformer-based visual features align<=
/strong> with what the brain encodes during free viewing</p>
</li>
</ul>
<hr data-start=3D"2347" data-end=3D"2350" class=3D"">
<h2 data-start=3D"2352" data-end=3D"2360" class=3D"">TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"23=
62" data-end=3D"2653" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2362" data-end=3D"2392"><tr data-start=3D"2362" data-end=3D"=
2392"><th data-start=3D"2362" data-end=3D"2378" data-col-size=3D"sm">ViT is=
 for...</th><th data-start=3D"2378" data-end=3D"2392" data-col-size=3D"md">=
Because...</th></tr></thead><tbody data-start=3D"2424" data-end=3D"2653"><t=
r data-start=3D"2424" data-end=3D"2500"><td data-start=3D"2424" data-end=3D=
"2461" data-col-size=3D"sm">Understanding images via attention</td><td data=
-start=3D"2461" data-end=3D"2500" data-col-size=3D"md">Each patch can "look=
" at all others</td></tr><tr data-start=3D"2501" data-end=3D"2569"><td data=
-start=3D"2501" data-end=3D"2530" data-col-size=3D"sm">Modeling spatial str=
ucture</td><td data-start=3D"2530" data-end=3D"2569" data-col-size=3D"md">B=
etter at global patterns than CNNs</td></tr><tr data-start=3D"2570" data-en=
d=3D"2653"><td data-start=3D"2570" data-end=3D"2600" data-col-size=3D"sm">M=
imicking brain-like vision</td><td data-start=3D"2600" data-end=3D"2653" da=
ta-col-size=3D"md">Especially useful when comparing to V4/IT neurons</td></=
tr></tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 s=
elf-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D"=
height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D=
"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary m=
y-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within=
)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><=
svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D=
"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"eve=
nodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2=
 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22=
 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C1=
5.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19=
.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C=
4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5=
523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></d=
iv></div></div>
<hr data-start=3D"2655" data-end=3D"2658" class=3D"">
<p data-start=3D"2660" data-end=3D"2746" class=3D"">Want a visual schematic=
 of how a ViT processes an image, or how it differs from a CNN?</p></div></=
div></div></div></div></div></div></div></article><article class=3D"text-to=
ken-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-125"=
 data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div clas=
s=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] =
@[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-=
margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread=
-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64r=
em]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content=
-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages fo=
cus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversatio=
n-turn relative flex w-full min-w-0 flex-col"><div class=3D"relative flex-c=
ol gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-m=
essage-author-role=3D"user" data-message-id=3D"38b9adb3-fffb-4ec5-b45a-4913=
c0984f53" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full f=
lex-col items-end gap-2 text-start break-words whitespace-normal [.text-mes=
sage+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden ite=
ms-end rtl:items-start"><div class=3D"relative max-w-[var(--user-chat-width=
,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whit=
espace-pre-wrap">The script run_cache_stim_grid_repr.py is set to calculate=
 and save stimulus features for an example session (Pa210120, 144 images at=
 16 =C3=97 16 dva) using default settings in the paper. The log file for th=
is example is ./log_cache_stim[...].ipynb.

Workflow overview
The file script_cache_stim_grid_repr.ipynb contains the substantive code. T=
his script calculates, for a list of images, model feature embeddings in th=
ese flavors:

The full image;
Image patches on a regular grid;
A background patch filled with padding values (the default is uniform mean =
gray).
The .py code is a utility script to calculate image features for specific s=
essions. It prepares the per-session parameters (i.e., image list and prese=
ntation size) and then calls the .ipynb script.

Implementation notes
Image ID
The code expects each image to be identified by a unique filename 'stem' (i=
.e., without the extension) and looks for the corresponding image in the fo=
lder [stim_dir]/Stimuli. The images in the OSF repo are already organized t=
his way, with the filename stem being the image's MD5 value (suffixes vary =
by image file format). Using unique filenames avoids confusing distinct ima=
ges with the same filename (in different folders).

Other code that uses the cached features (i.e., model-based analysis script=
s) needs to identify images in the same way. The rest of the repo and data =
on DANDI are already organized thus.

Same image shown across sessions
Many sessions show the same image sets. Thus, the .py and .ipynb scripts bo=
th check for and skip images whose features have already been cached.


this is what the script is supposed to do </div></div></div></div></div></d=
iv></div></div></div></article><article class=3D"text-token-text-primary w-=
full" dir=3D"auto" data-testid=3D"conversation-turn-126" data-scroll-anchor=
=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base =
my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thr=
ead-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacin=
g(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-wi=
dth:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-c=
ontent-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) fle=
x-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:out=
line-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative=
 flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative flex-col g=
ap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-messa=
ge-author-role=3D"assistant" data-message-id=3D"effc1be1-6a6c-470f-8d15-9e4=
397dadeb6" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full =
flex-col items-end gap-2 text-start break-words whitespace-normal [.text-me=
ssage+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-=
full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown pro=
se dark:prose-invert w-full break-words dark"><p data-start=3D"0" data-end=
=3D"95" class=3D"">Perfect=E2=80=94this fills in the big picture beautifull=
y. You=E2=80=99re looking at a structured system where:</p>
<ul data-start=3D"97" data-end=3D"439">
<li data-start=3D"97" data-end=3D"166" class=3D"">
<p data-start=3D"99" data-end=3D"166" class=3D""><strong data-start=3D"99" =
data-end=3D"124">Image feature caching</strong> is handled once per image a=
cross sessions</p>
</li>
<li data-start=3D"167" data-end=3D"263" class=3D"">
<p data-start=3D"169" data-end=3D"263" class=3D"">The goal is to ensure <st=
rong data-start=3D"191" data-end=3D"206">consistency</strong>, <strong data=
-start=3D"208" data-end=3D"222">efficiency</strong>, and <strong data-start=
=3D"228" data-end=3D"237">reuse</strong> of model-derived features</p>
</li>
<li data-start=3D"264" data-end=3D"439" class=3D"">
<p data-start=3D"266" data-end=3D"439" class=3D"">And the script <code data=
-start=3D"281" data-end=3D"310">run_cache_stim_grid_repr.py</code> acts as =
a <strong data-start=3D"321" data-end=3D"340">wrapper utility</strong> for =
calling the core notebook <code data-start=3D"371" data-end=3D"406">script_=
cache_stim_grid_repr.ipynb</code> with session-specific parameters</p>
</li>
</ul>
<p data-start=3D"441" data-end=3D"572" class=3D"">Let me walk you through t=
his explanation slowly, linking it back to the script you posted earlier an=
d the bigger modeling pipeline.</p>
<hr data-start=3D"574" data-end=3D"577" class=3D"">
<h2 data-start=3D"579" data-end=3D"637" class=3D"">=F0=9F=A7=A0 Big Picture=
: What this script system is designed for</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"63=
9" data-end=3D"1115" class=3D"w-fit min-w-(--thread-content-width)"><thead =
data-start=3D"639" data-end=3D"661"><tr data-start=3D"639" data-end=3D"661"=
><th data-start=3D"639" data-end=3D"646" data-col-size=3D"sm">Goal</th><th =
data-start=3D"646" data-end=3D"661" data-col-size=3D"md">Description</th></=
tr></thead><tbody data-start=3D"685" data-end=3D"1115"><tr data-start=3D"68=
5" data-end=3D"773"><td data-start=3D"685" data-end=3D"714" data-col-size=
=3D"sm">=F0=9F=8C=84 Extract visual features</td><td data-start=3D"714" dat=
a-end=3D"773" data-col-size=3D"md">For a set of natural images used in maca=
que experiments</td></tr><tr data-start=3D"774" data-end=3D"864"><td data-s=
tart=3D"774" data-end=3D"801" data-col-size=3D"sm">=F0=9F=A7=A0 Model-drive=
n analysis</td><td data-start=3D"801" data-end=3D"864" data-col-size=3D"md"=
>Use those features to predict or interpret neural responses</td></tr><tr d=
ata-start=3D"865" data-end=3D"951"><td data-start=3D"865" data-end=3D"887" =
data-col-size=3D"sm">=F0=9F=92=BE Avoid redundancy</td><td data-start=3D"88=
7" data-end=3D"951" data-col-size=3D"md">Cache features per image once=E2=
=80=94even if shown in many sessions</td></tr><tr data-start=3D"952" data-e=
nd=3D"1036"><td data-start=3D"952" data-end=3D"973" data-col-size=3D"sm">=
=F0=9F=93=82 Reproducibility</td><td data-start=3D"973" data-end=3D"1036" d=
ata-col-size=3D"md">Use MD5 filenames to uniquely ID images across all sess=
ions</td></tr><tr data-start=3D"1037" data-end=3D"1115"><td data-start=3D"1=
037" data-end=3D"1054" data-col-size=3D"sm">=F0=9F=A7=B0 Flexibility</td><t=
d data-start=3D"1054" data-end=3D"1115" data-col-size=3D"md">Extract featur=
es from full image, patches, and background</td></tr></tbody></table><div c=
lass=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"><div=
 class=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><span=
 class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary hove=
r:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 transi=
tion-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-none gr=
oup-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"even=
odd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 =
15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 2=
0.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 =
10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772=
 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 =
20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"=
currentColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"1117" data-end=3D"1120" class=3D"">
<h2 data-start=3D"1122" data-end=3D"1144" class=3D"">=F0=9F=93=81 Script Br=
eakdown</h2>
<h3 data-start=3D"1146" data-end=3D"1209" class=3D"">=E2=96=B6 <code data-s=
tart=3D"1152" data-end=3D"1181">run_cache_stim_grid_repr.py</code> =E2=80=
=94&nbsp;<strong data-start=3D"1184" data-end=3D"1209">Session-aware utilit=
y</strong></h3>
<ul data-start=3D"1210" data-end=3D"1432">
<li data-start=3D"1210" data-end=3D"1259" class=3D"">
<p data-start=3D"1212" data-end=3D"1259" class=3D"">Input: a specific <stro=
ng data-start=3D"1230" data-end=3D"1241">session</strong> (e.g. <code data-=
start=3D"1248" data-end=3D"1258">Pa210120</code>)</p>
</li>
<li data-start=3D"1260" data-end=3D"1313" class=3D"">
<p data-start=3D"1262" data-end=3D"1313" class=3D"">Reads the session=E2=80=
=99s image list and display settings</p>
</li>
<li data-start=3D"1314" data-end=3D"1386" class=3D"">
<p data-start=3D"1316" data-end=3D"1386" class=3D"">Calls <code data-start=
=3D"1322" data-end=3D"1357">script_cache_stim_grid_repr.ipynb</code> to do =
the actual computation</p>
</li>
<li data-start=3D"1387" data-end=3D"1432" class=3D"">
<p data-start=3D"1389" data-end=3D"1432" class=3D"">Role: <strong data-star=
t=3D"1395" data-end=3D"1432">batch job controller / dispatcher</strong></p>
</li>
</ul>
<hr data-start=3D"1434" data-end=3D"1437" class=3D"">
<h3 data-start=3D"1439" data-end=3D"1511" class=3D"">=F0=9F=93=92 <code dat=
a-start=3D"1446" data-end=3D"1481">script_cache_stim_grid_repr.ipynb</code>=
 =E2=80=94 <strong data-start=3D"1484" data-end=3D"1511">Core feature extra=
ction</strong></h3>
<ul data-start=3D"1512" data-end=3D"1829">
<li data-start=3D"1512" data-end=3D"1596" class=3D"">
<p data-start=3D"1514" data-end=3D"1596" class=3D"">Does all the <strong da=
ta-start=3D"1527" data-end=3D"1548">ViT model loading</strong>, <strong dat=
a-start=3D"1550" data-end=3D"1568">patch cropping</strong>, and <strong dat=
a-start=3D"1574" data-end=3D"1596">feature extraction</strong></p>
</li>
<li data-start=3D"1597" data-end=3D"1728" class=3D"">
<p data-start=3D"1599" data-end=3D"1608" class=3D"">Extracts:</p>
<ul data-start=3D"1611" data-end=3D"1728">
<li data-start=3D"1611" data-end=3D"1642" class=3D"">
<p data-start=3D"1613" data-end=3D"1642" class=3D""><strong data-start=3D"1=
613" data-end=3D"1642">Full image feature vector</strong></p>
</li>
<li data-start=3D"1645" data-end=3D"1688" class=3D"">
<p data-start=3D"1647" data-end=3D"1688" class=3D""><strong data-start=3D"1=
647" data-end=3D"1661">Patch grid</strong> (for spatial RF alignment)</p>
</li>
<li data-start=3D"1691" data-end=3D"1728" class=3D"">
<p data-start=3D"1693" data-end=3D"1728" class=3D""><strong data-start=3D"1=
693" data-end=3D"1713">Background patch</strong> (for baseline)</p>
</li>
</ul>
</li>
<li data-start=3D"1729" data-end=3D"1829" class=3D"">
<p data-start=3D"1731" data-end=3D"1768" class=3D"">Saves results into an H=
DF5 file with:</p>
<pre class=3D"overflow-visible!" data-start=3D"1771" data-end=3D"1829"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">bash</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><spa=
n><span>feats/
  full_image/
  patch_grid/
  </span><span><span class=3D"hljs-built_in">bg</span></span><span>/
</span></span></code></div></div></pre>
</li>
</ul>
<p data-start=3D"1831" data-end=3D"1914" class=3D"">This is the notebook yo=
u shared earlier (with <code data-start=3D"1877" data-end=3D"1887">embedder=
</code>, <code data-start=3D"1889" data-end=3D"1906">patches_ledge_x</code>=
, etc.).</p>
<hr data-start=3D"1916" data-end=3D"1919" class=3D"">
<h3 data-start=3D"1921" data-end=3D"1944" class=3D"">=F0=9F=93=81 Output st=
ructure</h3>
<p data-start=3D"1946" data-end=3D"2014" class=3D"">Each image gets its fea=
tures saved in an <code data-start=3D"1987" data-end=3D"1992">.h5</code> fi=
le structured like:</p>
<pre class=3D"overflow-visible!" data-start=3D"2015" data-end=3D"2103"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">bash</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><spa=
n><span>feats/vit_large_patch16_384/blocks.13.attn.qkv/16.0x16.0_as_2x2_in_=
0.50_steps.h5
</span></span></code></div></div></pre>
<p data-start=3D"2105" data-end=3D"2132" class=3D"">This organizes features=
 by:</p>
<ul data-start=3D"2133" data-end=3D"2208">
<li data-start=3D"2133" data-end=3D"2144" class=3D"">
<p data-start=3D"2135" data-end=3D"2144" class=3D""><strong data-start=3D"2=
135" data-end=3D"2144">Model</strong></p>
</li>
<li data-start=3D"2145" data-end=3D"2156" class=3D"">
<p data-start=3D"2147" data-end=3D"2156" class=3D""><strong data-start=3D"2=
147" data-end=3D"2156">Layer</strong></p>
</li>
<li data-start=3D"2157" data-end=3D"2180" class=3D"">
<p data-start=3D"2159" data-end=3D"2180" class=3D""><strong data-start=3D"2=
159" data-end=3D"2180">Visual field size</strong></p>
</li>
<li data-start=3D"2181" data-end=3D"2208" class=3D"">
<p data-start=3D"2183" data-end=3D"2208" class=3D""><strong data-start=3D"2=
183" data-end=3D"2208">Patch size and stride</strong></p>
</li>
</ul>
<p data-start=3D"2210" data-end=3D"2321" class=3D"">So any downstream scrip=
t (e.g., <code data-start=3D"2242" data-end=3D"2274">script_6a_model_perf_m=
ap.ipynb</code>) can load features without recalculating them.</p>
<hr data-start=3D"2323" data-end=3D"2326" class=3D"">
<h3 data-start=3D"2328" data-end=3D"2359" class=3D"">=F0=9F=94=92 Image ide=
ntity: why MD5?</h3>
<ul data-start=3D"2361" data-end=3D"2579">
<li data-start=3D"2361" data-end=3D"2422" class=3D"">
<p data-start=3D"2363" data-end=3D"2422" class=3D"">Image filenames are <st=
rong data-start=3D"2383" data-end=3D"2403">hashed using MD5</strong> so the=
y are unique</p>
</li>
<li data-start=3D"2423" data-end=3D"2579" class=3D"">
<p data-start=3D"2425" data-end=3D"2438" class=3D"">Ensures that:</p>
<ul data-start=3D"2441" data-end=3D"2579">
<li data-start=3D"2441" data-end=3D"2504" class=3D"">
<p data-start=3D"2443" data-end=3D"2504" class=3D"">Identically named files=
 from different sources don=E2=80=99t conflict</p>
</li>
<li data-start=3D"2507" data-end=3D"2579" class=3D"">
<p data-start=3D"2509" data-end=3D"2579" class=3D"">Same images used in dif=
ferent sessions map to the same cached features</p>
</li>
</ul>
</li>
</ul>
<p data-start=3D"2581" data-end=3D"2589" class=3D"">Used as:</p>
<pre class=3D"overflow-visible!" data-start=3D"2590" data-end=3D"2655"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>im_md5s =3D [</span><span><span class=3D"hljs-strin=
g">'f8c95f8ef9a19c...'</span></span><span>, </span><span><span class=3D"hlj=
s-string">'aa1f9c2e893bd...'</span></span><span>]
</span></span></code></div></div></pre>
<hr data-start=3D"2657" data-end=3D"2660" class=3D"">
<h2 data-start=3D"2662" data-end=3D"2701" class=3D"">=F0=9F=A7=AA Summary: =
What the script is doing</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"27=
03" data-end=3D"3096" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2703" data-end=3D"2726"><tr data-start=3D"2703" data-end=3D"=
2726"><th data-start=3D"2703" data-end=3D"2710" data-col-size=3D"sm">Task</=
th><th data-start=3D"2710" data-end=3D"2726" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"2751" data-end=3D"3096"><tr data-=
start=3D"2751" data-end=3D"2808"><td data-start=3D"2751" data-end=3D"2761" =
data-col-size=3D"sm">=E2=9C=85 Input</td><td data-start=3D"2761" data-end=
=3D"2808" data-col-size=3D"md">A list of images (usually from one session)<=
/td></tr><tr data-start=3D"2809" data-end=3D"2860"><td data-start=3D"2809" =
data-end=3D"2822" data-col-size=3D"sm">=E2=9C=85 Identify</td><td data-star=
t=3D"2822" data-end=3D"2860" data-col-size=3D"md">Each image via its unique=
 MD5 hash</td></tr><tr data-start=3D"2861" data-end=3D"2928"><td data-start=
=3D"2861" data-end=3D"2882" data-col-size=3D"sm">=E2=9C=85 Extract features=
</td><td data-start=3D"2882" data-end=3D"2928" data-col-size=3D"md">From Vi=
T model (e.g. <code data-start=3D"2905" data-end=3D"2925">blocks.13.attn.qk=
v</code>)</td></tr><tr data-start=3D"2929" data-end=3D"2984"><td data-start=
=3D"2929" data-end=3D"2946" data-col-size=3D"sm">=E2=9C=85 Save 3 types</td=
><td data-start=3D"2946" data-end=3D"2984" data-col-size=3D"md">Full image,=
 patch grid, background</td></tr><tr data-start=3D"2985" data-end=3D"3036">=
<td data-start=3D"2985" data-end=3D"3002" data-col-size=3D"sm">=E2=9C=85 Av=
oid rework</td><td data-start=3D"3002" data-end=3D"3036" data-col-size=3D"m=
d">Skips images already processed</td></tr><tr data-start=3D"3037" data-end=
=3D"3096"><td data-start=3D"3037" data-end=3D"3048" data-col-size=3D"sm">=
=E2=9C=85 Output</td><td data-start=3D"3048" data-end=3D"3096" data-col-siz=
e=3D"md">Structured <code data-start=3D"3061" data-end=3D"3066">.h5</code> =
cache for reuse in modeling</td></tr></tbody></table><div class=3D"sticky e=
nd-(--thread-content-margin) h-0 self-end select-none"><div class=3D"absolu=
te end-0 flex items-end" style=3D"height: 32.8906px;"><span class=3D"" data=
-state=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-te=
rtiary text-token-text-secondary my-1 rounded-sm p-1 transition-opacity gro=
up-[:not(:hover):not(:focus-within)]:pointer-events-none group-[:not(:hover=
):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D=
"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"ico=
n-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3=
.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17=
 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8=
.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 1=
5 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7=
ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 1=
5 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></pa=
th></svg></button></span></div></div></div></div>
<hr data-start=3D"3098" data-end=3D"3101" class=3D"">
<h2 data-start=3D"3103" data-end=3D"3125" class=3D"">=F0=9F=92=A1 Why this =
matters</h2>
<p data-start=3D"3127" data-end=3D"3140" class=3D"">This ensures:</p>
<ul data-start=3D"3141" data-end=3D"3384">
<li data-start=3D"3141" data-end=3D"3187" class=3D"">
<p data-start=3D"3143" data-end=3D"3187" class=3D"">You don't recalculate f=
eatures unnecessarily</p>
</li>
<li data-start=3D"3188" data-end=3D"3264" class=3D"">
<p data-start=3D"3190" data-end=3D"3264" class=3D"">You maintain <strong da=
ta-start=3D"3203" data-end=3D"3225">consistent mapping</strong> between neu=
ral data and model features</p>
</li>
<li data-start=3D"3265" data-end=3D"3384" class=3D"">
<p data-start=3D"3267" data-end=3D"3307" class=3D"">You can quickly load fe=
atures later for:</p>
<ul data-start=3D"3310" data-end=3D"3384">
<li data-start=3D"3310" data-end=3D"3327" class=3D"">
<p data-start=3D"3312" data-end=3D"3327" class=3D"">Encoding models</p>
</li>
<li data-start=3D"3330" data-end=3D"3335" class=3D"">
<p data-start=3D"3332" data-end=3D"3335" class=3D"">RSA</p>
</li>
<li data-start=3D"3338" data-end=3D"3357" class=3D"">
<p data-start=3D"3340" data-end=3D"3357" class=3D"">Category decoding</p>
</li>
<li data-start=3D"3360" data-end=3D"3384" class=3D"">
<p data-start=3D"3362" data-end=3D"3384" class=3D"">Eye movement alignment<=
/p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"3386" data-end=3D"3389" class=3D"">
<p data-start=3D"3391" data-end=3D"3554" class=3D"">Would you like help wri=
ting a wrapper script to generate these feature files for <strong data-star=
t=3D"3472" data-end=3D"3488">all sessions</strong>, or help linking them di=
rectly to neural trials using <code data-start=3D"3543" data-end=3D"3553">i=
mage_id</code>?</p></div></div></div></div></div></div></div></div></articl=
e><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-testi=
d=3D"conversation-turn-127" data-scroll-anchor=3D"false"><h5 class=3D"sr-on=
ly">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-co=
ntent-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] =
@[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margi=
n)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-con=
tent-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto f=
lex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:g=
ap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div=
 class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><d=
iv class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full=
 flex-col grow"><div data-message-author-role=3D"user" data-message-id=3D"9=
96e1dfc-7ca1-4495-9d3f-908f1a7e8a80" dir=3D"auto" class=3D"min-h-8 text-mes=
sage relative flex w-full flex-col items-end gap-2 text-start break-words w=
hitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex=
-col gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative m=
ax-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5=
 py-2.5"><div class=3D"whitespace-pre-wrap">if given an input what would th=
e output image look like</div></div></div></div></div></div></div></div></d=
iv></article><article class=3D"text-token-text-primary w-full" dir=3D"auto"=
 data-testid=3D"conversation-turn-128" data-scroll-anchor=3D"false"><h6 cla=
ss=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py=
-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin=
:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--threa=
d-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem=
]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:4=
8rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-=
4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabin=
dex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w=
-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><di=
v class=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"=
assistant" data-message-id=3D"c9a6aa7d-ef04-4455-bb91-7e2dbca84cc7" dir=3D"=
auto" class=3D"min-h-8 text-message relative flex w-full flex-col items-end=
 gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5"=
 data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-=
1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-inve=
rt w-full break-words dark"><p data-start=3D"0" data-end=3D"227" class=3D""=
>Great question=E2=80=94and it's a key conceptual leap to visualize <strong=
 data-start=3D"59" data-end=3D"88">what this script produces</strong>, espe=
cially since it <strong data-start=3D"110" data-end=3D"148">doesn't generat=
e an image directly</strong>, but instead generates <strong data-start=3D"1=
72" data-end=3D"191">feature vectors</strong> that <em data-start=3D"197" d=
ata-end=3D"209">correspond</em> to image content.</p>
<p data-start=3D"229" data-end=3D"259" class=3D"">Let=E2=80=99s break it do=
wn carefully:</p>
<hr data-start=3D"261" data-end=3D"264" class=3D"">
<h2 data-start=3D"266" data-end=3D"296" class=3D"">=F0=9F=A7=A0 If you inpu=
t an image...</h2>
<p data-start=3D"298" data-end=3D"317" class=3D"">Say you input this:</p>
<p data-start=3D"319" data-end=3D"362" class=3D"">![input image example =E2=
=80=93 natural face photo]</p>
<p data-start=3D"364" data-end=3D"513" class=3D"">The script does <strong d=
ata-start=3D"380" data-end=3D"387">not</strong> output another image that l=
ooks like this =F0=9F=91=87<br data-start=3D"432" data-end=3D"435">
=E2=9C=85 <strong data-start=3D"437" data-end=3D"451">No filters</strong><b=
r data-start=3D"451" data-end=3D"454">
=E2=9C=85 <strong data-start=3D"456" data-end=3D"475">No segmentation</stro=
ng><br data-start=3D"475" data-end=3D"478">
=E2=9C=85 <strong data-start=3D"480" data-end=3D"513">No highlighted boundi=
ng boxes</strong></p>
<hr data-start=3D"515" data-end=3D"518" class=3D"">
<h2 data-start=3D"520" data-end=3D"556" class=3D"">=F0=9F=93=A4 What the sc=
ript <em data-start=3D"542" data-end=3D"548">does</em> output:</h2>
<p data-start=3D"558" data-end=3D"635" class=3D"">It creates <strong data-s=
tart=3D"569" data-end=3D"591">feature embeddings</strong> that are stored i=
n a <code data-start=3D"613" data-end=3D"618">.h5</code> file. These are:</=
p>
<h3 data-start=3D"637" data-end=3D"668" class=3D"">1. <strong data-start=3D=
"644" data-end=3D"668">Full image embedding</strong></h3>
<p data-start=3D"669" data-end=3D"771" class=3D"">A single high-dimensional=
 vector representing the <strong data-start=3D"719" data-end=3D"735">entire=
 image</strong>, extracted from a chosen ViT layer:</p>
<pre class=3D"overflow-visible!" data-start=3D"773" data-end=3D"830"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>feats/full_image[i] =E2=86=92 shape =3D [feature_di=
m]
</span></span></code></div></div></pre>
<ul data-start=3D"832" data-end=3D"938">
<li data-start=3D"832" data-end=3D"872" class=3D"">
<p data-start=3D"834" data-end=3D"872" class=3D"">E.g., <code data-start=3D=
"840" data-end=3D"859">feature_dim =3D 768</code> for ViT-L/16</p>
</li>
<li data-start=3D"873" data-end=3D"938" class=3D"">
<p data-start=3D"875" data-end=3D"938" class=3D"">It=E2=80=99s just a vecto=
r like:<br data-start=3D"899" data-end=3D"902">
<code data-start=3D"904" data-end=3D"938">[0.002, -0.51, 1.33, ..., 0.045]<=
/code></p>
</li>
</ul>
<p data-start=3D"940" data-end=3D"1078" class=3D"">=F0=9F=A7=A0 Think of th=
is as the <strong data-start=3D"964" data-end=3D"987">deep representation</=
strong> of the image=E2=80=94how the model "understands" it after many laye=
rs of attention and projection.</p>
<hr data-start=3D"1080" data-end=3D"1083" class=3D"">
<h3 data-start=3D"1085" data-end=3D"1117" class=3D"">2. <strong data-start=
=3D"1092" data-end=3D"1117">Patch grid embeddings</strong></h3>
<p data-start=3D"1118" data-end=3D"1198" class=3D"">A <strong data-start=3D=
"1120" data-end=3D"1131">2D grid</strong> of feature vectors, one for each =
<strong data-start=3D"1165" data-end=3D"1182">cropped patch</strong> from t=
he image.</p>
<pre class=3D"overflow-visible!" data-start=3D"1200" data-end=3D"1287"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>feats/patch_grid[i] =E2=86=92 shape =3D [num_x_patc=
hes, num_y_patches, feature_dim]
</span></span></code></div></div></pre>
<p data-start=3D"1289" data-end=3D"1309" class=3D"">Each small patch is:</p=
>
<ul data-start=3D"1310" data-end=3D"1462">
<li data-start=3D"1310" data-end=3D"1375" class=3D"">
<p data-start=3D"1312" data-end=3D"1375" class=3D"">Centered at a fixed loc=
ation (based on degrees of visual angle)</p>
</li>
<li data-start=3D"1376" data-end=3D"1422" class=3D"">
<p data-start=3D"1378" data-end=3D"1422" class=3D"">Fed into the model as a=
 full image (resized)</p>
</li>
<li data-start=3D"1423" data-end=3D"1462" class=3D"">
<p data-start=3D"1425" data-end=3D"1462" class=3D"">Converted into its own =
feature vector</p>
</li>
</ul>
<p data-start=3D"1464" data-end=3D"1528" class=3D"">=F0=9F=A7=A0 So this fo=
rms a <strong data-start=3D"1483" data-end=3D"1506">spatial feature map</st=
rong> over the image, like:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"15=
30" data-end=3D"1739" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1530" data-end=3D"1571"><tr data-start=3D"1530" data-end=3D"=
1571"><th data-start=3D"1530" data-end=3D"1540" data-col-size=3D"sm"></th><=
th data-start=3D"1540" data-end=3D"1550" data-col-size=3D"sm"></th><th data=
-start=3D"1550" data-end=3D"1560" data-col-size=3D"sm"></th><th data-start=
=3D"1560" data-end=3D"1571" data-col-size=3D"sm"></th></tr></thead><tbody d=
ata-start=3D"1614" data-end=3D"1739"><tr data-start=3D"1614" data-end=3D"16=
55"><td data-start=3D"1614" data-end=3D"1624" data-col-size=3D"sm">[768-d]<=
/td><td data-start=3D"1624" data-end=3D"1634" data-col-size=3D"sm">[768-d]<=
/td><td data-start=3D"1634" data-end=3D"1644" data-col-size=3D"sm">[768-d]<=
/td><td data-start=3D"1644" data-end=3D"1655" data-col-size=3D"sm">...</td>=
</tr><tr data-start=3D"1656" data-end=3D"1697"><td data-start=3D"1656" data=
-end=3D"1666" data-col-size=3D"sm">[768-d]</td><td data-start=3D"1666" data=
-end=3D"1676" data-col-size=3D"sm">[768-d]</td><td data-start=3D"1676" data=
-end=3D"1686" data-col-size=3D"sm">[768-d]</td><td data-start=3D"1686" data=
-end=3D"1697" data-col-size=3D"sm"></td></tr><tr data-start=3D"1698" data-e=
nd=3D"1739"><td data-start=3D"1698" data-end=3D"1708" data-col-size=3D"sm">=
...</td><td data-start=3D"1708" data-end=3D"1718" data-col-size=3D"sm"></td=
><td data-start=3D"1718" data-end=3D"1728" data-col-size=3D"sm"></td><td da=
ta-start=3D"1728" data-end=3D"1739" data-col-size=3D"sm"></td></tr></tbody>=
</table><div class=3D"sticky end-(--thread-content-margin) h-0 self-end sel=
ect-none"><div class=3D"absolute end-0 flex items-end" style=3D"height: 16.=
8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token-b=
g-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded=
-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:pointer-=
events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.343=
15 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C=
3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 =
17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 1=
9 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523=
 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 =
9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div></div>=
</div>
<p data-start=3D"1741" data-end=3D"1797" class=3D"">This can be visualized =
<strong data-start=3D"1764" data-end=3D"1788">as an activation map</strong>=
, if you:</p>
<ul data-start=3D"1798" data-end=3D"1956">
<li data-start=3D"1798" data-end=3D"1845" class=3D"">
<p data-start=3D"1800" data-end=3D"1845" class=3D"">Reduce the feature vect=
ors using PCA or t-SNE</p>
</li>
<li data-start=3D"1846" data-end=3D"1873" class=3D"">
<p data-start=3D"1848" data-end=3D"1873" class=3D"">Plot their energy or no=
rm</p>
</li>
<li data-start=3D"1874" data-end=3D"1956" class=3D"">
<p data-start=3D"1876" data-end=3D"1956" class=3D"">Project specific featur=
es back into pixel space (e.g., using attention heatmaps)</p>
</li>
</ul>
<hr data-start=3D"1958" data-end=3D"1961" class=3D"">
<h3 data-start=3D"1963" data-end=3D"1990" class=3D"">3. <strong data-start=
=3D"1970" data-end=3D"1990">Background patch</strong></h3>
<p data-start=3D"1991" data-end=3D"2062" class=3D"">One special vector for =
a <strong data-start=3D"2016" data-end=3D"2038">uniform gray patch</strong>=
=E2=80=94used as a <strong data-start=3D"2049" data-end=3D"2061">baseline</=
strong>:</p>
<pre class=3D"overflow-visible!" data-start=3D"2064" data-end=3D"2110"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>feats/bg =E2=86=92 shape =3D [feature_dim]
</span></span></code></div></div></pre>
<hr data-start=3D"2112" data-end=3D"2115" class=3D"">
<h2 data-start=3D"2117" data-end=3D"2166" class=3D"">=F0=9F=96=BC=EF=B8=8F =
So what would an <em data-start=3D"2141" data-end=3D"2155">output image</em=
> look like?</h2>
<p data-start=3D"2168" data-end=3D"2239" class=3D"">If you <strong data-sta=
rt=3D"2175" data-end=3D"2209">wanted to visualize the output</strong>, you=
=E2=80=99d create something like:</p>
<h3 data-start=3D"2241" data-end=3D"2277" class=3D"">=F0=9F=94=A5 Heatmap o=
f feature magnitudes</h3>
<p data-start=3D"2278" data-end=3D"2302" class=3D"">For each patch location=
:</p>
<ul data-start=3D"2303" data-end=3D"2383">
<li data-start=3D"2303" data-end=3D"2349" class=3D"">
<p data-start=3D"2305" data-end=3D"2349" class=3D"">Compute the norm of the=
 768-d feature vector</p>
</li>
<li data-start=3D"2350" data-end=3D"2383" class=3D"">
<p data-start=3D"2352" data-end=3D"2383" class=3D"">Plot it as a pixel on a=
 2D grid</p>
</li>
</ul>
<p data-start=3D"2385" data-end=3D"2481" class=3D"">This gives you a <stron=
g data-start=3D"2402" data-end=3D"2427">saliency-like heatmap</strong> of t=
he image <strong data-start=3D"2441" data-end=3D"2467">based on deep featur=
es</strong>, for example:</p>
<pre class=3D"overflow-visible!" data-start=3D"2483" data-end=3D"2546"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">ini</div><div class=3D"sticky top-9"><div cl=
ass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"bg=
-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-main=
-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cente=
r select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7=
 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6=
569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V=
10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.=
5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772=
 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.552=
3 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor=
"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"><=
button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><spa=
n><span><span class=3D"hljs-attr">Bright</span></span><span> =3D strong mod=
el activation
</span><span><span class=3D"hljs-attr">Dark</span></span><span> =3D weak ac=
tivation
</span></span></code></div></div></pre>
<h3 data-start=3D"2548" data-end=3D"2573" class=3D"">=F0=9F=8E=A8 You could=
 also do:</h3>
<ul data-start=3D"2574" data-end=3D"2785">
<li data-start=3D"2574" data-end=3D"2652" class=3D"">
<p data-start=3D"2576" data-end=3D"2652" class=3D"">PCA on all patch vector=
s =E2=86=92 color each patch by its principal component score</p>
</li>
<li data-start=3D"2653" data-end=3D"2702" class=3D"">
<p data-start=3D"2655" data-end=3D"2702" class=3D"">Use UMAP/t-SNE to compa=
re patches across images</p>
</li>
<li data-start=3D"2703" data-end=3D"2785" class=3D"">
<p data-start=3D"2705" data-end=3D"2785" class=3D"">Use attention maps (if =
extracted) to see what <strong data-start=3D"2751" data-end=3D"2785">tokens=
 attend to which regions</strong></p>
</li>
</ul>
<hr data-start=3D"2787" data-end=3D"2790" class=3D"">
<h2 data-start=3D"2792" data-end=3D"2802" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"28=
04" data-end=3D"3122" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2804" data-end=3D"2822"><tr data-start=3D"2804" data-end=3D"=
2822"><th data-start=3D"2804" data-end=3D"2812" data-col-size=3D"sm">Input<=
/th><th data-start=3D"2812" data-end=3D"2822" data-col-size=3D"md">Output</=
th></tr></thead><tbody data-start=3D"2842" data-end=3D"3122"><tr data-start=
=3D"2842" data-end=3D"2909"><td data-start=3D"2842" data-end=3D"2861" data-=
col-size=3D"sm">=F0=9F=96=BC=EF=B8=8F Image (full)</td><td data-start=3D"28=
61" data-end=3D"2909" data-col-size=3D"md">=E2=9C=85 A single 768-d vector =
(<code data-start=3D"2888" data-end=3D"2906">feats/full_image</code>)</td><=
/tr><tr data-start=3D"2910" data-end=3D"2981"><td data-start=3D"2910" data-=
end=3D"2931" data-col-size=3D"sm">=F0=9F=A7=A9 Grid of patches</td><td data=
-start=3D"2931" data-end=3D"2981" data-col-size=3D"md">=E2=9C=85 A grid of =
768-d vectors (<code data-start=3D"2960" data-end=3D"2978">feats/patch_grid=
</code>)</td></tr><tr data-start=3D"2982" data-end=3D"3034"><td data-start=
=3D"2982" data-end=3D"2997" data-col-size=3D"sm">=E2=9A=AA Gray patch</td><=
td data-start=3D"2997" data-end=3D"3034" data-col-size=3D"md">=E2=9C=85 A r=
eference vector (<code data-start=3D"3021" data-end=3D"3031">feats/bg</code=
>)</td></tr><tr data-start=3D"3035" data-end=3D"3122"><td data-start=3D"303=
5" data-end=3D"3055" data-col-size=3D"sm">=F0=9F=96=BC=EF=B8=8F Visual outp=
ut</td><td data-start=3D"3055" data-end=3D"3122" data-col-size=3D"md">=E2=
=9D=8C Not an image, but you can <strong data-start=3D"3085" data-end=3D"30=
98">visualize</strong> the feature structure</td></tr></tbody></table><div =
class=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"><di=
v class=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><spa=
n class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary hov=
er:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 trans=
ition-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-none g=
roup-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"even=
odd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 =
15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 2=
0.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 =
10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772=
 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 =
20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"=
currentColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"3124" data-end=3D"3127" class=3D"">
<p data-start=3D"3129" data-end=3D"3260" class=3D"">Would you like a demo s=
cript that converts patch grid vectors into a visual heatmap for a given im=
age? I can generate that for you.</p></div></div></div></div></div></div></=
div></div></article><article class=3D"text-token-text-primary w-full" dir=
=3D"auto" data-testid=3D"conversation-turn-129" data-scroll-anchor=3D"false=
"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-au=
to py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-m=
argin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--=
thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[=
34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-wi=
dth:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base=
 gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" =
tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full =
min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div clas=
s=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"user" =
data-message-id=3D"e20fbe9c-6f08-4cb0-aea3-f12f318b90fa" dir=3D"auto" class=
=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 text=
-start break-words whitespace-normal [.text-message+&amp;]:mt-5"><div class=
=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><div=
 class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-surf=
ace rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">what does F=
SI stand for</div></div></div></div></div></div></div></div></div></article=
><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=
=3D"conversation-turn-130" data-scroll-anchor=3D"false"><h6 class=3D"sr-onl=
y">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread=
-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6=
)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-ma=
rgin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-=
content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-aut=
o flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 l=
g:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><=
div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col =
agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"f=
lex max-w-full flex-col grow"><div data-message-author-role=3D"assistant" d=
ata-message-id=3D"50acb152-3a03-4a3c-a604-6bb9ee3e9374" dir=3D"auto" class=
=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 text=
-start break-words whitespace-normal [.text-message+&amp;]:mt-5" data-messa=
ge-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hid=
den first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full b=
reak-words dark"><p data-start=3D"0" data-end=3D"15" class=3D"">Great quest=
ion!</p>
<h2 data-start=3D"17" data-end=3D"68" class=3D"">=F0=9F=A7=A0 <strong data-=
start=3D"23" data-end=3D"30">FSI</strong> stands for <strong data-start=3D"=
42" data-end=3D"68">Face Selectivity Index</strong></h2>
<p data-start=3D"70" data-end=3D"195" class=3D"">It=E2=80=99s a metric comm=
only used in neuroscience to quantify how much a neuron prefers <strong dat=
a-start=3D"152" data-end=3D"168">face stimuli</strong> over <strong data-st=
art=3D"174" data-end=3D"194">non-face stimuli</strong>.</p>
<hr data-start=3D"197" data-end=3D"200" class=3D"">
<h2 data-start=3D"202" data-end=3D"239" class=3D"">=F0=9F=A7=AA The typical=
 formula for FSI is:</h2>
<span class=3D"katex-display"><span class=3D"katex"><span class=3D"katex-ma=
thml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML" display=3D"block">=
<semantics><mrow><mtext>FSI</mtext><mo>=3D</mo><mfrac><mrow><msub><mi>R</mi=
><mtext>face</mtext></msub><mo>=E2=88=92</mo><msub><mi>R</mi><mtext>non-fac=
e</mtext></msub></mrow><mrow><msub><mi>R</mi><mtext>face</mtext></msub><mo>=
+</mo><msub><mi>R</mi><mtext>non-face</mtext></msub></mrow></mfrac></mrow><=
annotation encoding=3D"application/x-tex">\text{FSI} =3D \frac{R_{\text{fac=
e}} - R_{\text{non-face}}}{R_{\text{face}} + R_{\text{non-face}}}</annotati=
on></semantics></math></span><span class=3D"katex-html" aria-hidden=3D"true=
"><span class=3D"base"><span class=3D"strut" style=3D"height: 0.6833em;"></=
span><span class=3D"mord text"><span class=3D"mord">FSI</span></span><span =
class=3D"mspace" style=3D"margin-right: 0.2778em;"></span><span class=3D"mr=
el">=3D</span><span class=3D"mspace" style=3D"margin-right: 0.2778em;"></sp=
an></span><span class=3D"base"><span class=3D"strut" style=3D"height: 2.196=
3em; vertical-align: -0.836em;"></span><span class=3D"mord"><span class=3D"=
mopen nulldelimiter"></span><span class=3D"mfrac"><span class=3D"vlist-t vl=
ist-t2"><span class=3D"vlist-r"><span class=3D"vlist" style=3D"height: 1.36=
03em;"><span style=3D"top: -2.314em;"><span class=3D"pstrut" style=3D"heigh=
t: 3em;"></span><span class=3D"mord"><span class=3D"mord"><span class=3D"mo=
rd mathnormal" style=3D"margin-right: 0.00773em;">R</span><span class=3D"ms=
upsub"><span class=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=
=3D"vlist" style=3D"height: 0.3361em;"><span style=3D"top: -2.55em; margin-=
left: -0.0077em; margin-right: 0.05em;"><span class=3D"pstrut" style=3D"hei=
ght: 2.7em;"></span><span class=3D"sizing reset-size6 size3 mtight"><span c=
lass=3D"mord mtight"><span class=3D"mord text mtight"><span class=3D"mord m=
tight">face</span></span></span></span></span></span><span class=3D"vlist-s=
">=E2=80=8B</span></span><span class=3D"vlist-r"><span class=3D"vlist" styl=
e=3D"height: 0.15em;"><span></span></span></span></span></span></span><span=
 class=3D"mspace" style=3D"margin-right: 0.2222em;"></span><span class=3D"m=
bin">+</span><span class=3D"mspace" style=3D"margin-right: 0.2222em;"></spa=
n><span class=3D"mord"><span class=3D"mord mathnormal" style=3D"margin-righ=
t: 0.00773em;">R</span><span class=3D"msupsub"><span class=3D"vlist-t vlist=
-t2"><span class=3D"vlist-r"><span class=3D"vlist" style=3D"height: 0.3361e=
m;"><span style=3D"top: -2.55em; margin-left: -0.0077em; margin-right: 0.05=
em;"><span class=3D"pstrut" style=3D"height: 2.7em;"></span><span class=3D"=
sizing reset-size6 size3 mtight"><span class=3D"mord mtight"><span class=3D=
"mord text mtight"><span class=3D"mord mtight">non-face</span></span></span=
></span></span></span><span class=3D"vlist-s">=E2=80=8B</span></span><span =
class=3D"vlist-r"><span class=3D"vlist" style=3D"height: 0.15em;"><span></s=
pan></span></span></span></span></span></span></span><span style=3D"top: -3=
.23em;"><span class=3D"pstrut" style=3D"height: 3em;"></span><span class=3D=
"frac-line" style=3D"border-bottom-width: 0.04em;"></span></span><span styl=
e=3D"top: -3.677em;"><span class=3D"pstrut" style=3D"height: 3em;"></span><=
span class=3D"mord"><span class=3D"mord"><span class=3D"mord mathnormal" st=
yle=3D"margin-right: 0.00773em;">R</span><span class=3D"msupsub"><span clas=
s=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=3D"vlist" style=
=3D"height: 0.3361em;"><span style=3D"top: -2.55em; margin-left: -0.0077em;=
 margin-right: 0.05em;"><span class=3D"pstrut" style=3D"height: 2.7em;"></s=
pan><span class=3D"sizing reset-size6 size3 mtight"><span class=3D"mord mti=
ght"><span class=3D"mord text mtight"><span class=3D"mord mtight">face</spa=
n></span></span></span></span></span><span class=3D"vlist-s">=E2=80=8B</spa=
n></span><span class=3D"vlist-r"><span class=3D"vlist" style=3D"height: 0.1=
5em;"><span></span></span></span></span></span></span><span class=3D"mspace=
" style=3D"margin-right: 0.2222em;"></span><span class=3D"mbin">=E2=88=92</=
span><span class=3D"mspace" style=3D"margin-right: 0.2222em;"></span><span =
class=3D"mord"><span class=3D"mord mathnormal" style=3D"margin-right: 0.007=
73em;">R</span><span class=3D"msupsub"><span class=3D"vlist-t vlist-t2"><sp=
an class=3D"vlist-r"><span class=3D"vlist" style=3D"height: 0.3361em;"><spa=
n style=3D"top: -2.55em; margin-left: -0.0077em; margin-right: 0.05em;"><sp=
an class=3D"pstrut" style=3D"height: 2.7em;"></span><span class=3D"sizing r=
eset-size6 size3 mtight"><span class=3D"mord mtight"><span class=3D"mord te=
xt mtight"><span class=3D"mord mtight">non-face</span></span></span></span>=
</span></span><span class=3D"vlist-s">=E2=80=8B</span></span><span class=3D=
"vlist-r"><span class=3D"vlist" style=3D"height: 0.15em;"><span></span></sp=
an></span></span></span></span></span></span></span><span class=3D"vlist-s"=
>=E2=80=8B</span></span><span class=3D"vlist-r"><span class=3D"vlist" style=
=3D"height: 0.836em;"><span></span></span></span></span></span><span class=
=3D"mclose nulldelimiter"></span></span></span></span></span></span>
<p data-start=3D"345" data-end=3D"351" class=3D"">Where:</p>
<ul data-start=3D"352" data-end=3D"503">
<li data-start=3D"352" data-end=3D"430" class=3D"">
<p data-start=3D"354" data-end=3D"430" class=3D""><span class=3D"katex"><sp=
an class=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML=
"><semantics><mrow><msub><mi>R</mi><mtext>face</mtext></msub></mrow><annota=
tion encoding=3D"application/x-tex">R_{\text{face}}</annotation></semantics=
></math></span><span class=3D"katex-html" aria-hidden=3D"true"><span class=
=3D"base"><span class=3D"strut" style=3D"height: 0.8333em; vertical-align: =
-0.15em;"></span><span class=3D"mord"><span class=3D"mord mathnormal" style=
=3D"margin-right: 0.00773em;">R</span><span class=3D"msupsub"><span class=
=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=3D"vlist" style=
=3D"height: 0.3361em;"><span style=3D"top: -2.55em; margin-left: -0.0077em;=
 margin-right: 0.05em;"><span class=3D"pstrut" style=3D"height: 2.7em;"></s=
pan><span class=3D"sizing reset-size6 size3 mtight"><span class=3D"mord mti=
ght"><span class=3D"mord text mtight"><span class=3D"mord mtight">face</spa=
n></span></span></span></span></span><span class=3D"vlist-s">=E2=80=8B</spa=
n></span><span class=3D"vlist-r"><span class=3D"vlist" style=3D"height: 0.1=
5em;"><span></span></span></span></span></span></span></span></span></span>=
 =3D Average firing rate of the neuron to <strong data-start=3D"415" data-e=
nd=3D"430">face images</strong></p>
</li>
<li data-start=3D"431" data-end=3D"503" class=3D"">
<p data-start=3D"433" data-end=3D"503" class=3D""><span class=3D"katex"><sp=
an class=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML=
"><semantics><mrow><msub><mi>R</mi><mtext>non-face</mtext></msub></mrow><an=
notation encoding=3D"application/x-tex">R_{\text{non-face}}</annotation></s=
emantics></math></span><span class=3D"katex-html" aria-hidden=3D"true"><spa=
n class=3D"base"><span class=3D"strut" style=3D"height: 0.8333em; vertical-=
align: -0.15em;"></span><span class=3D"mord"><span class=3D"mord mathnormal=
" style=3D"margin-right: 0.00773em;">R</span><span class=3D"msupsub"><span =
class=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=3D"vlist" st=
yle=3D"height: 0.3361em;"><span style=3D"top: -2.55em; margin-left: -0.0077=
em; margin-right: 0.05em;"><span class=3D"pstrut" style=3D"height: 2.7em;">=
</span><span class=3D"sizing reset-size6 size3 mtight"><span class=3D"mord =
mtight"><span class=3D"mord text mtight"><span class=3D"mord mtight">non-fa=
ce</span></span></span></span></span></span><span class=3D"vlist-s">=E2=80=
=8B</span></span><span class=3D"vlist-r"><span class=3D"vlist" style=3D"hei=
ght: 0.15em;"><span></span></span></span></span></span></span></span></span=
></span> =3D Average firing rate to <strong data-start=3D"484" data-end=3D"=
503">non-face images</strong></p>
</li>
</ul>
<hr data-start=3D"505" data-end=3D"508" class=3D"">
<h2 data-start=3D"510" data-end=3D"535" class=3D"">=F0=9F=8E=AF What FSI te=
lls you:</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"53=
7" data-end=3D"786" class=3D"w-fit min-w-(--thread-content-width)"><thead d=
ata-start=3D"537" data-end=3D"570"><tr data-start=3D"537" data-end=3D"570">=
<th data-start=3D"537" data-end=3D"552" data-col-size=3D"sm">Value of FSI</=
th><th data-start=3D"552" data-end=3D"570" data-col-size=3D"md">Interpretat=
ion</th></tr></thead><tbody data-start=3D"605" data-end=3D"786"><tr data-st=
art=3D"605" data-end=3D"657"><td data-start=3D"605" data-end=3D"620" data-c=
ol-size=3D"sm">=E2=89=88 <strong data-start=3D"609" data-end=3D"616">1.0</s=
trong></td><td data-start=3D"620" data-end=3D"657" data-col-size=3D"md">Neu=
ron responds <strong data-start=3D"638" data-end=3D"655">only to faces</str=
ong></td></tr><tr data-start=3D"658" data-end=3D"727"><td data-start=3D"658=
" data-end=3D"673" data-col-size=3D"sm">=E2=89=88 <strong data-start=3D"662=
" data-end=3D"669">0.0</strong></td><td data-start=3D"673" data-end=3D"727"=
 data-col-size=3D"md">Neuron responds <strong data-start=3D"691" data-end=
=3D"702">equally</strong> to faces and non-faces</td></tr><tr data-start=3D=
"728" data-end=3D"786"><td data-start=3D"728" data-end=3D"743" data-col-siz=
e=3D"sm">&lt; <strong data-start=3D"732" data-end=3D"739">0.0</strong></td>=
<td data-start=3D"743" data-end=3D"786" data-col-size=3D"md">Neuron prefers=
 <strong data-start=3D"760" data-end=3D"773">non-faces</strong> over faces<=
/td></tr></tbody></table><div class=3D"sticky end-(--thread-content-margin)=
 h-0 self-end select-none"><div class=3D"absolute end-0 flex items-end" sty=
le=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button cl=
ass=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secon=
dary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-=
within)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacit=
y-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xm=
lns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20=
.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.=
6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9=
 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.4=
4772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4=
 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.447=
72 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></=
div></div></div></div>
<hr data-start=3D"788" data-end=3D"791" class=3D"">
<h2 data-start=3D"793" data-end=3D"811" class=3D"">=F0=9F=A7=A0 Why use FSI=
?</h2>
<ul data-start=3D"813" data-end=3D"1085">
<li data-start=3D"813" data-end=3D"900" class=3D"">
<p data-start=3D"815" data-end=3D"900" class=3D"">It normalizes the differe=
nce in firing rate, accounting for overall firing magnitude.</p>
</li>
<li data-start=3D"901" data-end=3D"996" class=3D"">
<p data-start=3D"903" data-end=3D"996" class=3D"">It allows you to compare =
<strong data-start=3D"928" data-end=3D"958">selectivity across neurons</str=
ong>, regardless of baseline firing rates.</p>
</li>
<li data-start=3D"997" data-end=3D"1085" class=3D"">
<p data-start=3D"999" data-end=3D"1085" class=3D"">It's often used to <stro=
ng data-start=3D"1018" data-end=3D"1053">identify face-selective neurons</s=
trong> in areas like IT cortex or STS.</p>
</li>
</ul>
<hr data-start=3D"1087" data-end=3D"1090" class=3D"">
<h3 data-start=3D"1092" data-end=3D"1116" class=3D"">=F0=9F=A7=AC In your p=
ipeline:</h3>
<p data-start=3D"1117" data-end=3D"1199" class=3D"">FSI is computed in scri=
pts like <code data-start=3D"1149" data-end=3D"1180">script_1a_face_specifi=
c.ipynb</code>, and it's used to:</p>
<ul data-start=3D"1200" data-end=3D"1330">
<li data-start=3D"1200" data-end=3D"1231" class=3D"">
<p data-start=3D"1202" data-end=3D"1231" class=3D"">Quantify selectivity pe=
r unit</p>
</li>
<li data-start=3D"1232" data-end=3D"1276" class=3D"">
<p data-start=3D"1234" data-end=3D"1276" class=3D"">Compare face preference=
 across brain areas</p>
</li>
<li data-start=3D"1277" data-end=3D"1330" class=3D"">
<p data-start=3D"1279" data-end=3D"1330" class=3D"">Track changes across fi=
xations (e.g., 0th vs later)</p>
</li>
</ul>
<hr data-start=3D"1332" data-end=3D"1335" class=3D"">
<p data-start=3D"1337" data-end=3D"1431" class=3D"">Want to compute FSI for=
 a neuron from raw firing rate arrays? I can walk you through that too.</p>=
</div></div></div></div></div></div></div></div></article><article class=3D=
"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-t=
urn-131" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><=
div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spac=
ing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-=
content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[=
--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40re=
m] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread=
-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-mes=
sages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/con=
versation-turn relative flex w-full min-w-0 flex-col"><div class=3D"relativ=
e flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><di=
v data-message-author-role=3D"user" data-message-id=3D"8d947be4-8baa-46a5-9=
793-d9739895b972" dir=3D"auto" class=3D"min-h-8 text-message relative flex =
w-full flex-col items-end gap-2 text-start break-words whitespace-normal [.=
text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hi=
dden items-end rtl:items-start"><div class=3D"relative max-w-[var(--user-ch=
at-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div class=
=3D"whitespace-pre-wrap">which scripts are trying to figure out the neurons=
 that correspond to face selectivity </div></div></div></div></div></div></=
div></div></div></article><article class=3D"text-token-text-primary w-full"=
 dir=3D"auto" data-testid=3D"conversation-turn-132" data-scroll-anchor=3D"f=
alse"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-au=
to mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-c=
ontent-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)=
] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:3=
2rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-conten=
t-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 t=
ext-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-=
hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex=
 w-full min-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 =
md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-au=
thor-role=3D"assistant" data-message-id=3D"2410f82e-dff6-47f4-b86c-d5ff5cdc=
6cab" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-=
col items-end gap-2 text-start break-words whitespace-normal [.text-message=
+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full =
flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose da=
rk:prose-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"89=
" class=3D"">Awesome question=E2=80=94and one that ties together the <stron=
g data-start=3D"48" data-end=3D"88">early part of your analysis pipeline</s=
trong>.</p>
<p data-start=3D"91" data-end=3D"116" class=3D"">Here=E2=80=99s a clear bre=
akdown:</p>
<hr data-start=3D"118" data-end=3D"121" class=3D"">
<h2 data-start=3D"123" data-end=3D"177" class=3D"">=F0=9F=A7=A0 Scripts tha=
t identify <strong data-start=3D"151" data-end=3D"177">face-selective neuro=
ns</strong></h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"17=
9" data-end=3D"633" class=3D"w-fit min-w-(--thread-content-width)"><thead d=
ata-start=3D"179" data-end=3D"204"><tr data-start=3D"179" data-end=3D"204">=
<th data-start=3D"179" data-end=3D"188" data-col-size=3D"md">Script</th><th=
 data-start=3D"188" data-end=3D"204" data-col-size=3D"md">What it does</th>=
</tr></thead><tbody data-start=3D"231" data-end=3D"633"><tr data-start=3D"2=
31" data-end=3D"346"><td data-start=3D"231" data-end=3D"267" data-col-size=
=3D"md">=E2=9C=85 <code data-start=3D"235" data-end=3D"266">script_1a_face_=
specific.ipynb</code></td><td data-start=3D"267" data-end=3D"346" data-col-=
size=3D"md">Computes <strong data-start=3D"278" data-end=3D"298">face selec=
tivity</strong> per neuron using FSI (Face Selectivity Index)</td></tr><tr =
data-start=3D"347" data-end=3D"485"><td data-start=3D"347" data-end=3D"397"=
 data-col-size=3D"md">=E2=9C=85 <code data-start=3D"351" data-end=3D"396">s=
cript_1b_face_specific_match_control.ipynb</code></td><td data-start=3D"397=
" data-end=3D"485" data-col-size=3D"md">Computes <strong data-start=3D"408"=
 data-end=3D"439">matched-control selectivity</strong>, controlling for low=
-level visual confounds</td></tr><tr data-start=3D"486" data-end=3D"633"><t=
d data-start=3D"486" data-end=3D"526" data-col-size=3D"md">=E2=9C=85 <code =
data-start=3D"490" data-end=3D"525">script_7a_mas_match_control.ipynb</code=
></td><td data-start=3D"526" data-end=3D"633" data-col-size=3D"md">Computes=
 <strong data-start=3D"537" data-end=3D"570">MAS (Match-Aware Selectivity)<=
/strong> for faces using stricter behavioral and image-based controls</td><=
/tr></tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 =
self-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D=
"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=
=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondar=
y my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-wit=
hin)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0=
"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"=
evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.656=
9 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569=
 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H1=
4C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772=
 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V=
19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 1=
4.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div>=
</div></div></div>
<hr data-start=3D"635" data-end=3D"638" class=3D"">
<h3 data-start=3D"640" data-end=3D"673" class=3D"">=F0=9F=94=8D What each o=
ne contributes:</h3>
<hr data-start=3D"675" data-end=3D"678" class=3D"">
<h3 data-start=3D"680" data-end=3D"718" class=3D"">=F0=9F=93=81 <code data-=
start=3D"687" data-end=3D"718">script_1a_face_specific.ipynb</code></h3>
<ul data-start=3D"719" data-end=3D"1109">
<li data-start=3D"719" data-end=3D"771" class=3D"">
<p data-start=3D"721" data-end=3D"771" class=3D""><strong data-start=3D"721=
" data-end=3D"735">First pass</strong> at identifying face-selective units<=
/p>
</li>
<li data-start=3D"772" data-end=3D"906" class=3D"">
<p data-start=3D"774" data-end=3D"818" class=3D"">Compares firing rates acr=
oss trials labeled:</p>
<ul data-start=3D"821" data-end=3D"906">
<li data-start=3D"821" data-end=3D"862" class=3D"">
<p data-start=3D"823" data-end=3D"862" class=3D""><code data-start=3D"823" =
data-end=3D"837">'human_face'</code>, <code data-start=3D"839" data-end=3D"=
854">'monkey_face'</code> =E2=86=92 faces</p>
</li>
<li data-start=3D"865" data-end=3D"906" class=3D"">
<p data-start=3D"867" data-end=3D"906" class=3D""><code data-start=3D"867" =
data-end=3D"877">'object'</code>, <code data-start=3D"879" data-end=3D"888"=
>'scene'</code>, etc. =E2=86=92 non-faces</p>
</li>
</ul>
</li>
<li data-start=3D"907" data-end=3D"1062" class=3D"">
<p data-start=3D"909" data-end=3D"955" class=3D"">Computes the <strong data=
-start=3D"922" data-end=3D"954">Face Selectivity Index (FSI)</strong>:</p>
<span class=3D"katex-display"><span class=3D"katex"><span class=3D"katex-ma=
thml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML" display=3D"block">=
<semantics><mrow><mtext>FSI</mtext><mo>=3D</mo><mfrac><mrow><msub><mi>R</mi=
><mtext>face</mtext></msub><mo>=E2=88=92</mo><msub><mi>R</mi><mtext>nonface=
</mtext></msub></mrow><mrow><msub><mi>R</mi><mtext>face</mtext></msub><mo>+=
</mo><msub><mi>R</mi><mtext>nonface</mtext></msub></mrow></mfrac></mrow><an=
notation encoding=3D"application/x-tex">\text{FSI} =3D \frac{R_{\text{face}=
} - R_{\text{nonface}}}{R_{\text{face}} + R_{\text{nonface}}}</annotation><=
/semantics></math></span><span class=3D"katex-html" aria-hidden=3D"true"><s=
pan class=3D"base"><span class=3D"strut" style=3D"height: 0.6833em;"></span=
><span class=3D"mord text"><span class=3D"mord">FSI</span></span><span clas=
s=3D"mspace" style=3D"margin-right: 0.2778em;"></span><span class=3D"mrel">=
=3D</span><span class=3D"mspace" style=3D"margin-right: 0.2778em;"></span><=
/span><span class=3D"base"><span class=3D"strut" style=3D"height: 2.1963em;=
 vertical-align: -0.836em;"></span><span class=3D"mord"><span class=3D"mope=
n nulldelimiter"></span><span class=3D"mfrac"><span class=3D"vlist-t vlist-=
t2"><span class=3D"vlist-r"><span class=3D"vlist" style=3D"height: 1.3603em=
;"><span style=3D"top: -2.314em;"><span class=3D"pstrut" style=3D"height: 3=
em;"></span><span class=3D"mord"><span class=3D"mord"><span class=3D"mord m=
athnormal" style=3D"margin-right: 0.00773em;">R</span><span class=3D"msupsu=
b"><span class=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=3D"=
vlist" style=3D"height: 0.3361em;"><span style=3D"top: -2.55em; margin-left=
: -0.0077em; margin-right: 0.05em;"><span class=3D"pstrut" style=3D"height:=
 2.7em;"></span><span class=3D"sizing reset-size6 size3 mtight"><span class=
=3D"mord mtight"><span class=3D"mord text mtight"><span class=3D"mord mtigh=
t">face</span></span></span></span></span></span><span class=3D"vlist-s">=
=E2=80=8B</span></span><span class=3D"vlist-r"><span class=3D"vlist" style=
=3D"height: 0.15em;"><span></span></span></span></span></span></span><span =
class=3D"mspace" style=3D"margin-right: 0.2222em;"></span><span class=3D"mb=
in">+</span><span class=3D"mspace" style=3D"margin-right: 0.2222em;"></span=
><span class=3D"mord"><span class=3D"mord mathnormal" style=3D"margin-right=
: 0.00773em;">R</span><span class=3D"msupsub"><span class=3D"vlist-t vlist-=
t2"><span class=3D"vlist-r"><span class=3D"vlist" style=3D"height: 0.3361em=
;"><span style=3D"top: -2.55em; margin-left: -0.0077em; margin-right: 0.05e=
m;"><span class=3D"pstrut" style=3D"height: 2.7em;"></span><span class=3D"s=
izing reset-size6 size3 mtight"><span class=3D"mord mtight"><span class=3D"=
mord text mtight"><span class=3D"mord mtight">nonface</span></span></span><=
/span></span></span><span class=3D"vlist-s">=E2=80=8B</span></span><span cl=
ass=3D"vlist-r"><span class=3D"vlist" style=3D"height: 0.15em;"><span></spa=
n></span></span></span></span></span></span></span><span style=3D"top: -3.2=
3em;"><span class=3D"pstrut" style=3D"height: 3em;"></span><span class=3D"f=
rac-line" style=3D"border-bottom-width: 0.04em;"></span></span><span style=
=3D"top: -3.677em;"><span class=3D"pstrut" style=3D"height: 3em;"></span><s=
pan class=3D"mord"><span class=3D"mord"><span class=3D"mord mathnormal" sty=
le=3D"margin-right: 0.00773em;">R</span><span class=3D"msupsub"><span class=
=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=3D"vlist" style=
=3D"height: 0.3361em;"><span style=3D"top: -2.55em; margin-left: -0.0077em;=
 margin-right: 0.05em;"><span class=3D"pstrut" style=3D"height: 2.7em;"></s=
pan><span class=3D"sizing reset-size6 size3 mtight"><span class=3D"mord mti=
ght"><span class=3D"mord text mtight"><span class=3D"mord mtight">face</spa=
n></span></span></span></span></span><span class=3D"vlist-s">=E2=80=8B</spa=
n></span><span class=3D"vlist-r"><span class=3D"vlist" style=3D"height: 0.1=
5em;"><span></span></span></span></span></span></span><span class=3D"mspace=
" style=3D"margin-right: 0.2222em;"></span><span class=3D"mbin">=E2=88=92</=
span><span class=3D"mspace" style=3D"margin-right: 0.2222em;"></span><span =
class=3D"mord"><span class=3D"mord mathnormal" style=3D"margin-right: 0.007=
73em;">R</span><span class=3D"msupsub"><span class=3D"vlist-t vlist-t2"><sp=
an class=3D"vlist-r"><span class=3D"vlist" style=3D"height: 0.3361em;"><spa=
n style=3D"top: -2.55em; margin-left: -0.0077em; margin-right: 0.05em;"><sp=
an class=3D"pstrut" style=3D"height: 2.7em;"></span><span class=3D"sizing r=
eset-size6 size3 mtight"><span class=3D"mord mtight"><span class=3D"mord te=
xt mtight"><span class=3D"mord mtight">nonface</span></span></span></span><=
/span></span><span class=3D"vlist-s">=E2=80=8B</span></span><span class=3D"=
vlist-r"><span class=3D"vlist" style=3D"height: 0.15em;"><span></span></spa=
n></span></span></span></span></span></span></span><span class=3D"vlist-s">=
=E2=80=8B</span></span><span class=3D"vlist-r"><span class=3D"vlist" style=
=3D"height: 0.836em;"><span></span></span></span></span></span><span class=
=3D"mclose nulldelimiter"></span></span></span></span></span></span>
</li>
<li data-start=3D"1063" data-end=3D"1109" class=3D"">
<p data-start=3D"1065" data-end=3D"1109" class=3D"">Output: Table of units =
with their FSI scores</p>
</li>
</ul>
<blockquote data-start=3D"1111" data-end=3D"1171">
<p data-start=3D"1113" data-end=3D"1171" class=3D"">=E2=9C=85 Gives you a q=
uick view of <strong data-start=3D"1141" data-end=3D"1171">which neurons pr=
efer faces</strong></p>
</blockquote>
<hr data-start=3D"1173" data-end=3D"1176" class=3D"">
<h3 data-start=3D"1178" data-end=3D"1230" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"1185" data-end=3D"1230">script_1b_face_specific_match_control.ip=
ynb</code></h3>
<ul data-start=3D"1231" data-end=3D"1452">
<li data-start=3D"1231" data-end=3D"1300" class=3D"">
<p data-start=3D"1233" data-end=3D"1300" class=3D"">Controls for <strong da=
ta-start=3D"1246" data-end=3D"1275">low-level visual features</strong> (lik=
e contrast or shape)</p>
</li>
<li data-start=3D"1301" data-end=3D"1377" class=3D"">
<p data-start=3D"1303" data-end=3D"1377" class=3D"">Matches each face trial=
 with a non-face trial that is <strong data-start=3D"1357" data-end=3D"1377=
">visually similar</strong></p>
</li>
<li data-start=3D"1378" data-end=3D"1452" class=3D"">
<p data-start=3D"1380" data-end=3D"1452" class=3D"">Recomputes selectivity =
index (could be d-prime or a matched FSI variant)</p>
</li>
</ul>
<blockquote data-start=3D"1454" data-end=3D"1542">
<p data-start=3D"1456" data-end=3D"1542" class=3D"">=F0=9F=A7=AA Tests whet=
her a neuron prefers <strong data-start=3D"1490" data-end=3D"1510">faces th=
emselves</strong>, not just their visual features</p>
</blockquote>
<hr data-start=3D"1544" data-end=3D"1547" class=3D"">
<h3 data-start=3D"1549" data-end=3D"1591" class=3D"">=F0=9F=93=81 <code dat=
a-start=3D"1556" data-end=3D"1591">script_7a_mas_match_control.ipynb</code>=
</h3>
<ul data-start=3D"1592" data-end=3D"1994">
<li data-start=3D"1592" data-end=3D"1664" class=3D"">
<p data-start=3D"1594" data-end=3D"1664" class=3D"">The <strong data-start=
=3D"1598" data-end=3D"1619">most conservative</strong> and behavior-aware f=
ace selectivity analysis</p>
</li>
<li data-start=3D"1665" data-end=3D"1739" class=3D"">
<p data-start=3D"1667" data-end=3D"1680" class=3D"">Controls for:</p>
<ul data-start=3D"1683" data-end=3D"1739">
<li data-start=3D"1683" data-end=3D"1702" class=3D"">
<p data-start=3D"1685" data-end=3D"1702" class=3D"">Fixation location</p>
</li>
<li data-start=3D"1705" data-end=3D"1721" class=3D"">
<p data-start=3D"1707" data-end=3D"1721" class=3D"">Image salience</p>
</li>
<li data-start=3D"1724" data-end=3D"1739" class=3D"">
<p data-start=3D"1726" data-end=3D"1739" class=3D"">Saccade order</p>
</li>
</ul>
</li>
<li data-start=3D"1740" data-end=3D"1916" class=3D"">
<p data-start=3D"1742" data-end=3D"1793" class=3D"">Computes a <strong data=
-start=3D"1753" data-end=3D"1786">MAS (Match-Aware Selectivity)</strong> sc=
ore:</p>
<span class=3D"katex-display"><span class=3D"katex"><span class=3D"katex-ma=
thml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML" display=3D"block">=
<semantics><mrow><mtext>MAS</mtext><mo>=3D</mo><mfrac><mrow><msub><mi>R</mi=
><mtext>face</mtext></msub><mo>=E2=88=92</mo><msub><mi>R</mi><mtext>matched=
-control</mtext></msub></mrow><mrow><msub><mi>R</mi><mtext>face</mtext></ms=
ub><mo>+</mo><msub><mi>R</mi><mtext>matched-control</mtext></msub></mrow></=
mfrac></mrow><annotation encoding=3D"application/x-tex">\text{MAS} =3D \fra=
c{R_{\text{face}} - R_{\text{matched-control}}}{R_{\text{face}} + R_{\text{=
matched-control}}}</annotation></semantics></math></span><span class=3D"kat=
ex-html" aria-hidden=3D"true"><span class=3D"base"><span class=3D"strut" st=
yle=3D"height: 0.6833em;"></span><span class=3D"mord text"><span class=3D"m=
ord">MAS</span></span><span class=3D"mspace" style=3D"margin-right: 0.2778e=
m;"></span><span class=3D"mrel">=3D</span><span class=3D"mspace" style=3D"m=
argin-right: 0.2778em;"></span></span><span class=3D"base"><span class=3D"s=
trut" style=3D"height: 2.1963em; vertical-align: -0.836em;"></span><span cl=
ass=3D"mord"><span class=3D"mopen nulldelimiter"></span><span class=3D"mfra=
c"><span class=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=3D"=
vlist" style=3D"height: 1.3603em;"><span style=3D"top: -2.314em;"><span cla=
ss=3D"pstrut" style=3D"height: 3em;"></span><span class=3D"mord"><span clas=
s=3D"mord"><span class=3D"mord mathnormal" style=3D"margin-right: 0.00773em=
;">R</span><span class=3D"msupsub"><span class=3D"vlist-t vlist-t2"><span c=
lass=3D"vlist-r"><span class=3D"vlist" style=3D"height: 0.3361em;"><span st=
yle=3D"top: -2.55em; margin-left: -0.0077em; margin-right: 0.05em;"><span c=
lass=3D"pstrut" style=3D"height: 2.7em;"></span><span class=3D"sizing reset=
-size6 size3 mtight"><span class=3D"mord mtight"><span class=3D"mord text m=
tight"><span class=3D"mord mtight">face</span></span></span></span></span><=
/span><span class=3D"vlist-s">=E2=80=8B</span></span><span class=3D"vlist-r=
"><span class=3D"vlist" style=3D"height: 0.15em;"><span></span></span></spa=
n></span></span></span><span class=3D"mspace" style=3D"margin-right: 0.2222=
em;"></span><span class=3D"mbin">+</span><span class=3D"mspace" style=3D"ma=
rgin-right: 0.2222em;"></span><span class=3D"mord"><span class=3D"mord math=
normal" style=3D"margin-right: 0.00773em;">R</span><span class=3D"msupsub">=
<span class=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=3D"vli=
st" style=3D"height: 0.3361em;"><span style=3D"top: -2.55em; margin-left: -=
0.0077em; margin-right: 0.05em;"><span class=3D"pstrut" style=3D"height: 2.=
7em;"></span><span class=3D"sizing reset-size6 size3 mtight"><span class=3D=
"mord mtight"><span class=3D"mord text mtight"><span class=3D"mord mtight">=
matched-control</span></span></span></span></span></span><span class=3D"vli=
st-s">=E2=80=8B</span></span><span class=3D"vlist-r"><span class=3D"vlist" =
style=3D"height: 0.15em;"><span></span></span></span></span></span></span><=
/span></span><span style=3D"top: -3.23em;"><span class=3D"pstrut" style=3D"=
height: 3em;"></span><span class=3D"frac-line" style=3D"border-bottom-width=
: 0.04em;"></span></span><span style=3D"top: -3.677em;"><span class=3D"pstr=
ut" style=3D"height: 3em;"></span><span class=3D"mord"><span class=3D"mord"=
><span class=3D"mord mathnormal" style=3D"margin-right: 0.00773em;">R</span=
><span class=3D"msupsub"><span class=3D"vlist-t vlist-t2"><span class=3D"vl=
ist-r"><span class=3D"vlist" style=3D"height: 0.3361em;"><span style=3D"top=
: -2.55em; margin-left: -0.0077em; margin-right: 0.05em;"><span class=3D"ps=
trut" style=3D"height: 2.7em;"></span><span class=3D"sizing reset-size6 siz=
e3 mtight"><span class=3D"mord mtight"><span class=3D"mord text mtight"><sp=
an class=3D"mord mtight">face</span></span></span></span></span></span><spa=
n class=3D"vlist-s">=E2=80=8B</span></span><span class=3D"vlist-r"><span cl=
ass=3D"vlist" style=3D"height: 0.15em;"><span></span></span></span></span><=
/span></span><span class=3D"mspace" style=3D"margin-right: 0.2222em;"></spa=
n><span class=3D"mbin">=E2=88=92</span><span class=3D"mspace" style=3D"marg=
in-right: 0.2222em;"></span><span class=3D"mord"><span class=3D"mord mathno=
rmal" style=3D"margin-right: 0.00773em;">R</span><span class=3D"msupsub"><s=
pan class=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=3D"vlist=
" style=3D"height: 0.3361em;"><span style=3D"top: -2.55em; margin-left: -0.=
0077em; margin-right: 0.05em;"><span class=3D"pstrut" style=3D"height: 2.7e=
m;"></span><span class=3D"sizing reset-size6 size3 mtight"><span class=3D"m=
ord mtight"><span class=3D"mord text mtight"><span class=3D"mord mtight">ma=
tched-control</span></span></span></span></span></span><span class=3D"vlist=
-s">=E2=80=8B</span></span><span class=3D"vlist-r"><span class=3D"vlist" st=
yle=3D"height: 0.15em;"><span></span></span></span></span></span></span></s=
pan></span></span><span class=3D"vlist-s">=E2=80=8B</span></span><span clas=
s=3D"vlist-r"><span class=3D"vlist" style=3D"height: 0.836em;"><span></span=
></span></span></span></span><span class=3D"mclose nulldelimiter"></span></=
span></span></span></span></span>
</li>
<li data-start=3D"1917" data-end=3D"1994" class=3D"">
<p data-start=3D"1919" data-end=3D"1994" class=3D"">Only includes control t=
rials that <strong data-start=3D"1953" data-end=3D"1970">closely match</str=
ong> face trials on behavior</p>
</li>
</ul>
<blockquote data-start=3D"1996" data-end=3D"2133">
<p data-start=3D"1998" data-end=3D"2133" class=3D"">=F0=9F=A7=A0 This scrip=
t identifies neurons that are <strong data-start=3D"2041" data-end=3D"2068"=
>robustly face-selective</strong> even after controlling for <strong data-s=
tart=3D"2096" data-end=3D"2133">attentional and fixational biases</strong><=
/p>
</blockquote>
<hr data-start=3D"2135" data-end=3D"2138" class=3D"">
<h2 data-start=3D"2140" data-end=3D"2194" class=3D"">=E2=9C=85 TL;DR =E2=80=
=94 Scripts that find face-selective neurons:</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"21=
96" data-end=3D"2494" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2196" data-end=3D"2234"><tr data-start=3D"2196" data-end=3D"=
2234"><th data-start=3D"2196" data-end=3D"2205" data-col-size=3D"sm">Script=
</th><th data-start=3D"2205" data-end=3D"2225" data-col-size=3D"sm">Selecti=
vity Level</th><th data-start=3D"2225" data-end=3D"2234" data-col-size=3D"m=
d">Notes</th></tr></thead><tbody data-start=3D"2274" data-end=3D"2494"><tr =
data-start=3D"2274" data-end=3D"2339"><td data-start=3D"2274" data-end=3D"2=
283" data-col-size=3D"sm"><code data-start=3D"2276" data-end=3D"2280">1a</c=
ode></td><td data-start=3D"2283" data-end=3D"2303" data-col-size=3D"sm">Bas=
ic FSI</td><td data-start=3D"2303" data-end=3D"2339" data-col-size=3D"md">R=
aw face vs. non-face comparison</td></tr><tr data-start=3D"2340" data-end=
=3D"2409"><td data-start=3D"2340" data-end=3D"2349" data-col-size=3D"sm"><c=
ode data-start=3D"2342" data-end=3D"2346">1b</code></td><td data-start=3D"2=
349" data-end=3D"2369" data-col-size=3D"sm">Visual-matched FSI</td><td data=
-start=3D"2369" data-end=3D"2409" data-col-size=3D"md">Controls for image f=
eature confounds</td></tr><tr data-start=3D"2410" data-end=3D"2494"><td dat=
a-start=3D"2410" data-end=3D"2419" data-col-size=3D"sm"><code data-start=3D=
"2412" data-end=3D"2416">7a</code></td><td data-start=3D"2419" data-end=3D"=
2446" data-col-size=3D"sm">Behaviorally-matched MAS</td><td data-start=3D"2=
446" data-end=3D"2494" data-col-size=3D"md">Controls for attention, fixatio=
ns, and image</td></tr></tbody></table><div class=3D"sticky end-(--thread-c=
ontent-margin) h-0 self-end select-none"><div class=3D"absolute end-0 flex =
items-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"clos=
ed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-to=
ken-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hove=
r):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-w=
ithin)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fi=
ll=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><p=
ath fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315=
 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C1=
7 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315=
 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 2=
0 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 =
9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 1=
9V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></but=
ton></span></div></div></div></div>
<hr data-start=3D"2496" data-end=3D"2499" class=3D"">
<p data-start=3D"2501" data-end=3D"2607" class=3D"">Would you like help vis=
ualizing which neurons are consistently face-selective across <code data-st=
art=3D"2586" data-end=3D"2590">1a</code>, <code data-start=3D"2592" data-en=
d=3D"2596">1b</code>, and <code data-start=3D"2602" data-end=3D"2606">7a</c=
ode>?</p></div></div></div></div></div></div></div></div></article><article=
 class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conve=
rsation-turn-133" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You sa=
id:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-marg=
in:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[=
--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div c=
lass=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-w=
idth:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-=
(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group=
/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"=
group/conversation-turn relative flex w-full min-w-0 flex-col"><div class=
=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-co=
l grow"><div data-message-author-role=3D"user" data-message-id=3D"1444cd32-=
a078-4597-a101-299815ff4815" dir=3D"auto" class=3D"min-h-8 text-message rel=
ative flex w-full flex-col items-end gap-2 text-start break-words whitespac=
e-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap=
-1 empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[va=
r(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"=
><div class=3D"whitespace-pre-wrap">can you tell me where the images are la=
belled as face / non-face</div></div></div></div></div></div></div></div></=
div></article><article class=3D"text-token-text-primary w-full" dir=3D"auto=
" data-testid=3D"conversation-turn-134" data-scroll-anchor=3D"false"><h6 cl=
ass=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto p=
y-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margi=
n:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thre=
ad-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34re=
m]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:=
48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap=
-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabi=
ndex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-=
w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><d=
iv class=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D=
"assistant" data-message-id=3D"43756efa-7c77-4134-97dc-f2ce407ad380" dir=3D=
"auto" class=3D"min-h-8 text-message relative flex w-full flex-col items-en=
d gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5=
" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap=
-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-inv=
ert w-full break-words dark"><p data-start=3D"0" data-end=3D"163" class=3D"=
">Absolutely=E2=80=94this is a foundational piece of your analysis. Let=E2=
=80=99s track <strong data-start=3D"70" data-end=3D"130">where and how the =
images are labeled as face or non-face</strong> within your dataset and scr=
ipts.</p>
<hr data-start=3D"165" data-end=3D"168" class=3D"">
<h2 data-start=3D"170" data-end=3D"225" class=3D"">=F0=9F=A7=A0 Where are i=
mages labeled as "face" or "non-face"?</h2>
<h3 data-start=3D"227" data-end=3D"283" class=3D"">=E2=9C=85 1. <strong dat=
a-start=3D"236" data-end=3D"283">In the trial metadata: <code data-start=3D=
"261" data-end=3D"281">trials['category']</code></strong></h3>
<p data-start=3D"285" data-end=3D"445" class=3D"">In every session=E2=80=99=
s data (loaded from <code data-start=3D"322" data-end=3D"366">shared_prepro=
cessed_data_with_saccades.pkl</code>), the per-trial information is stored =
in a <code data-start=3D"410" data-end=3D"428">pandas.DataFrame</code> call=
ed <code data-start=3D"436" data-end=3D"444">trials</code>.</p>
<p data-start=3D"447" data-end=3D"475" class=3D"">You can access it like th=
is:</p>
<pre class=3D"overflow-visible!" data-start=3D"477" data-end=3D"541"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>trials =3D sess_data[</span><span><span class=3D"hl=
js-string">"trials"</span></span><span>]
</span><span><span class=3D"hljs-built_in">print</span></span><span>(trials=
.columns)
</span></span></code></div></div></pre>
<p data-start=3D"543" data-end=3D"566" class=3D"">Look for a column like:</=
p>
<pre class=3D"overflow-visible!" data-start=3D"568" data-end=3D"592"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-string">'category'</span></span=
><span>
</span></span></code></div></div></pre>
<p data-start=3D"594" data-end=3D"687" class=3D"">This field contains a str=
ing label describing <strong data-start=3D"640" data-end=3D"662">what type =
of image</strong> was shown on that trial.</p>
<hr data-start=3D"689" data-end=3D"692" class=3D"">
<h3 data-start=3D"694" data-end=3D"739" class=3D"">=F0=9F=94=8D Common valu=
es of <code data-start=3D"718" data-end=3D"738">trials['category']</code>:<=
/h3>
<p data-start=3D"741" data-end=3D"764" class=3D"">You can list them with:</=
p>
<pre class=3D"overflow-visible!" data-start=3D"766" data-end=3D"807"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>trials[</span><span><span class=3D"hljs-string">'ca=
tegory'</span></span><span>].unique()
</span></span></code></div></div></pre>
<p data-start=3D"809" data-end=3D"839" class=3D"">Typical entries might inc=
lude:</p>
<ul data-start=3D"841" data-end=3D"944">
<li data-start=3D"841" data-end=3D"857" class=3D"">
<p data-start=3D"843" data-end=3D"857" class=3D""><code data-start=3D"843" =
data-end=3D"857">'human_face'</code></p>
</li>
<li data-start=3D"858" data-end=3D"875" class=3D"">
<p data-start=3D"860" data-end=3D"875" class=3D""><code data-start=3D"860" =
data-end=3D"875">'monkey_face'</code></p>
</li>
<li data-start=3D"876" data-end=3D"888" class=3D"">
<p data-start=3D"878" data-end=3D"888" class=3D""><code data-start=3D"878" =
data-end=3D"888">'object'</code></p>
</li>
<li data-start=3D"889" data-end=3D"900" class=3D"">
<p data-start=3D"891" data-end=3D"900" class=3D""><code data-start=3D"891" =
data-end=3D"900">'scene'</code></p>
</li>
<li data-start=3D"901" data-end=3D"916" class=3D"">
<p data-start=3D"903" data-end=3D"916" class=3D""><code data-start=3D"903" =
data-end=3D"916">'body_part'</code></p>
</li>
<li data-start=3D"917" data-end=3D"927" class=3D"">
<p data-start=3D"919" data-end=3D"927" class=3D""><code data-start=3D"919" =
data-end=3D"927">'text'</code></p>
</li>
<li data-start=3D"928" data-end=3D"944" class=3D"">
<p data-start=3D"930" data-end=3D"944" class=3D""><code data-start=3D"930" =
data-end=3D"944">'artificial'</code></p>
</li>
</ul>
<p data-start=3D"946" data-end=3D"1022" class=3D"">So the labels for face v=
s. non-face are <strong data-start=3D"986" data-end=3D"1006">already includ=
ed</strong> in this column.</p>
<hr data-start=3D"1024" data-end=3D"1027" class=3D"">
<h3 data-start=3D"1029" data-end=3D"1073" class=3D"">=E2=9C=85 2. <strong d=
ata-start=3D"1038" data-end=3D"1073">Used in the selectivity scripts</stron=
g></h3>
<p data-start=3D"1075" data-end=3D"1175" class=3D"">In scripts like <code d=
ata-start=3D"1091" data-end=3D"1115">1a_face_specific.ipynb</code> and <cod=
e data-start=3D"1120" data-end=3D"1148">7a_mas_match_control.ipynb</code>, =
these labels are grouped:</p>
<pre class=3D"overflow-visible!" data-start=3D"1177" data-end=3D"1293"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>face_labels =3D [</span><span><span class=3D"hljs-s=
tring">'human_face'</span></span><span>, </span><span><span class=3D"hljs-s=
tring">'monkey_face'</span></span><span>]
nonface_labels =3D [</span><span><span class=3D"hljs-string">'object'</span=
></span><span>, </span><span><span class=3D"hljs-string">'scene'</span></sp=
an><span>, </span><span><span class=3D"hljs-string">'text'</span></span><sp=
an>, </span><span><span class=3D"hljs-string">'artificial'</span></span><sp=
an>]
</span></span></code></div></div></pre>
<p data-start=3D"1295" data-end=3D"1321" class=3D"">Then used to split tria=
ls:</p>
<pre class=3D"overflow-visible!" data-start=3D"1323" data-end=3D"1460"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>face_trials =3D trials[trials[</span><span><span cl=
ass=3D"hljs-string">'category'</span></span><span>].isin(face_labels)]
nonface_trials =3D trials[trials[</span><span><span class=3D"hljs-string">'=
category'</span></span><span>].isin(nonface_labels)]
</span></span></code></div></div></pre>
<hr data-start=3D"1462" data-end=3D"1465" class=3D"">
<h3 data-start=3D"1467" data-end=3D"1522" class=3D"">=E2=9C=85 3. <strong d=
ata-start=3D"1476" data-end=3D"1522">Where are these labels originally defi=
ned?</strong></h3>
<p data-start=3D"1524" data-end=3D"1612" class=3D"">They likely come from a=
 <strong data-start=3D"1548" data-end=3D"1574">stimulus metadata file</stro=
ng> (used during preprocessing), such as:</p>
<ul data-start=3D"1614" data-end=3D"1666">
<li data-start=3D"1614" data-end=3D"1636" class=3D"">
<p data-start=3D"1616" data-end=3D"1636" class=3D""><code data-start=3D"161=
6" data-end=3D"1636">image_metadata.csv</code></p>
</li>
<li data-start=3D"1637" data-end=3D"1666" class=3D"">
<p data-start=3D"1639" data-end=3D"1666" class=3D""><code data-start=3D"163=
9" data-end=3D"1666">image_id_to_category.json</code></p>
</li>
</ul>
<p data-start=3D"1668" data-end=3D"1777" class=3D"">Each image is identifie=
d by a unique <code data-start=3D"1705" data-end=3D"1715">image_id</code> (=
usually an MD5 hash), and mapped to its semantic <code data-start=3D"1766" =
data-end=3D"1776">category</code>.</p>
<p data-start=3D"1779" data-end=3D"1882" class=3D"">This mapping happens <s=
trong data-start=3D"1800" data-end=3D"1820">before or during</strong> the c=
reation of <code data-start=3D"1837" data-end=3D"1881">shared_preprocessed_=
data_with_saccades.pkl</code>.</p>
<p data-start=3D"1884" data-end=3D"1916" class=3D"">The mapping probably lo=
oks like:</p>
<pre class=3D"overflow-visible!" data-start=3D"1918" data-end=3D"2008"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">json</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-json"><span><span><span class=3D"hljs-punctuation">{</span></span><span=
>
  </span><span><span class=3D"hljs-attr">"f8c95f8ef9a19c..."</span></span><=
span><span class=3D"hljs-punctuation">:</span></span><span> </span><span><s=
pan class=3D"hljs-string">"human_face"</span></span><span><span class=3D"hl=
js-punctuation">,</span></span><span>
  </span><span><span class=3D"hljs-attr">"a3e17d9c4b7a6f..."</span></span><=
span><span class=3D"hljs-punctuation">:</span></span><span> </span><span><s=
pan class=3D"hljs-string">"scene"</span></span><span><span class=3D"hljs-pu=
nctuation">,</span></span><span>
  ...
</span><span><span class=3D"hljs-punctuation">}</span></span><span>
</span></span></code></div></div></pre>
<hr data-start=3D"2010" data-end=3D"2013" class=3D"">
<h3 data-start=3D"2015" data-end=3D"2053" class=3D"">=F0=9F=93=82 Where to =
look for this mapping:</h3>
<p data-start=3D"2055" data-end=3D"2072" class=3D"">Check the repo=E2=80=99=
s:</p>
<ul data-start=3D"2073" data-end=3D"2201">
<li data-start=3D"2073" data-end=3D"2092" class=3D"">
<p data-start=3D"2075" data-end=3D"2092" class=3D""><code data-start=3D"207=
5" data-end=3D"2085">stimuli/</code> folder</p>
</li>
<li data-start=3D"2093" data-end=3D"2137" class=3D"">
<p data-start=3D"2095" data-end=3D"2137" class=3D""><code data-start=3D"209=
5" data-end=3D"2105">scripts/</code> that handle image preprocessing</p>
</li>
<li data-start=3D"2138" data-end=3D"2201" class=3D"">
<p data-start=3D"2140" data-end=3D"2201" class=3D"">DANDI metadata or GitHu=
b repo (e.g. <code data-start=3D"2176" data-end=3D"2200">free_viewing/metad=
ata/</code>)</p>
</li>
</ul>
<hr data-start=3D"2203" data-end=3D"2206" class=3D"">
<h2 data-start=3D"2208" data-end=3D"2218" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"22=
20" data-end=3D"2554" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2220" data-end=3D"2236"><tr data-start=3D"2220" data-end=3D"=
2236"><th data-start=3D"2220" data-end=3D"2227" data-col-size=3D"sm">What</=
th><th data-start=3D"2227" data-end=3D"2236" data-col-size=3D"md">Where</th=
></tr></thead><tbody data-start=3D"2254" data-end=3D"2554"><tr data-start=
=3D"2254" data-end=3D"2305"><td data-start=3D"2254" data-end=3D"2281" data-=
col-size=3D"sm">Per-trial category label</td><td data-start=3D"2281" data-e=
nd=3D"2305" data-col-size=3D"md"><code data-start=3D"2283" data-end=3D"2303=
">trials['category']</code></td></tr><tr data-start=3D"2306" data-end=3D"23=
85"><td data-start=3D"2306" data-end=3D"2335" data-col-size=3D"sm">Face vs.=
 non-face grouping</td><td data-start=3D"2335" data-end=3D"2385" data-col-s=
ize=3D"md">Scripts use <code data-start=3D"2349" data-end=3D"2362">face_lab=
els</code> vs. <code data-start=3D"2367" data-end=3D"2383">nonface_labels</=
code></td></tr><tr data-start=3D"2386" data-end=3D"2469"><td data-start=3D"=
2386" data-end=3D"2410" data-col-size=3D"sm">Original label source</td><td =
data-start=3D"2410" data-end=3D"2469" data-col-size=3D"md">Image metadata f=
iles (based on MD5 =E2=86=92 category mappings)</td></tr><tr data-start=3D"=
2470" data-end=3D"2554"><td data-start=3D"2470" data-end=3D"2486" data-col-=
size=3D"sm">How it's used</td><td data-start=3D"2486" data-end=3D"2554" dat=
a-col-size=3D"md">To compute selectivity metrics, subset trials, analyze re=
sponses</td></tr></tbody></table><div class=3D"sticky end-(--thread-content=
-margin) h-0 self-end select-none"><div class=3D"absolute end-0 flex items-=
end" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><b=
utton class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-te=
xt-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not=
(:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-within)=
]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"=
none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fi=
ll-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 =
2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6=
569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7=
H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5=
C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.=
44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C1=
5 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></=
span></div></div></div></div>
<hr data-start=3D"2556" data-end=3D"2559" class=3D"">
<p data-start=3D"2561" data-end=3D"2689" class=3D"">Would you like help ext=
racting all <code data-start=3D"2596" data-end=3D"2617">image_id =E2=86=92 =
category</code> mappings from your data or plotting how many trials exist p=
er category?</p></div></div></div></div></div></div></div></div></article><=
article class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=
=3D"conversation-turn-135" data-scroll-anchor=3D"false"><h5 class=3D"sr-onl=
y">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-con=
tent-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @=
[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin=
)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-cont=
ent-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto fl=
ex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:ga=
p-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div =
class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><di=
v class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full =
flex-col grow"><div data-message-author-role=3D"user" data-message-id=3D"07=
f6351d-f527-47fd-9484-13a5d602d056" dir=3D"auto" class=3D"min-h-8 text-mess=
age relative flex w-full flex-col items-end gap-2 text-start break-words wh=
itespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-=
col gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative ma=
x-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 =
py-2.5"><div class=3D"whitespace-pre-wrap">does the script that i copied in=
 relating to image attention attempt to classify the image as face/non-face=
?</div></div></div></div></div></div></div></div></div></article><article c=
lass=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"convers=
ation-turn-136" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT =
said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-ma=
rgin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]=
:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div=
 class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max=
-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-=
w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 gro=
up/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=
=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-tur=
n"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w=
-full flex-col grow"><div data-message-author-role=3D"assistant" data-messa=
ge-id=3D"0fbc2351-71e5-4e53-ac5e-ad49a5a26f13" dir=3D"auto" class=3D"min-h-=
8 text-message relative flex w-full flex-col items-end gap-2 text-start bre=
ak-words whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-s=
lug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:=
pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-words=
 dark"><p data-start=3D"0" data-end=3D"164" class=3D"">Fantastic question=
=E2=80=94and based on your earlier script (the <strong data-start=3D"57" da=
ta-end=3D"90">ViT feature extraction script</strong> from <code data-start=
=3D"96" data-end=3D"131">script_cache_stim_grid_repr.ipynb</code>), the sho=
rt and clear answer is:</p>
<hr data-start=3D"166" data-end=3D"169" class=3D"">
<h2 data-start=3D"171" data-end=3D"256" class=3D"">=E2=9D=8C No =E2=80=94 t=
hat script <strong data-start=3D"193" data-end=3D"225">does not attempt to =
classify</strong> the image as face or non-face.</h2>
<p data-start=3D"258" data-end=3D"268" class=3D"">It simply:</p>
<blockquote data-start=3D"269" data-end=3D"445">
<p data-start=3D"271" data-end=3D"445" class=3D""><strong data-start=3D"271=
" data-end=3D"297">Extracts deep features</strong> from the image (and imag=
e patches) using a pretrained Vision Transformer (ViT), without performing =
any classification or using any category labels.</p>
</blockquote>
<hr data-start=3D"447" data-end=3D"450" class=3D"">
<h2 data-start=3D"452" data-end=3D"491" class=3D"">=F0=9F=A7=A0 Here=E2=80=
=99s what the script <em data-start=3D"481" data-end=3D"487">does</em> do:<=
/h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"49=
3" data-end=3D"924" class=3D"w-fit min-w-(--thread-content-width)"><thead d=
ata-start=3D"493" data-end=3D"516"><tr data-start=3D"493" data-end=3D"516">=
<th data-start=3D"493" data-end=3D"500" data-col-size=3D"sm">Step</th><th d=
ata-start=3D"500" data-end=3D"516" data-col-size=3D"md">What it does</th></=
tr></thead><tbody data-start=3D"541" data-end=3D"924"><tr data-start=3D"541=
" data-end=3D"618"><td data-start=3D"541" data-end=3D"576" data-col-size=3D=
"sm">=E2=9C=85 Loads images (by MD5 filename)</td><td data-start=3D"576" da=
ta-end=3D"618" data-col-size=3D"md">From a folder like <code data-start=3D"=
597" data-end=3D"616">stim_dir/Stimuli/</code></td></tr><tr data-start=3D"6=
19" data-end=3D"688"><td data-start=3D"619" data-end=3D"652" data-col-size=
=3D"sm">=E2=9C=85 Resizes full image &amp; patches</td><td data-start=3D"65=
2" data-end=3D"688" data-col-size=3D"md">Based on degrees of visual angle</=
td></tr><tr data-start=3D"689" data-end=3D"770"><td data-start=3D"689" data=
-end=3D"711" data-col-size=3D"sm">=E2=9C=85 Extracts features</td><td data-=
start=3D"711" data-end=3D"770" data-col-size=3D"md">From a specific ViT lay=
er (e.g. <code data-start=3D"745" data-end=3D"767">'blocks.13.attn.qkv'</co=
de>)</td></tr><tr data-start=3D"771" data-end=3D"841"><td data-start=3D"771=
" data-end=3D"802" data-col-size=3D"sm">=E2=9C=85 Optionally spatially pool=
s</td><td data-start=3D"802" data-end=3D"841" data-col-size=3D"md">Over att=
ention tokens or patch grid</td></tr><tr data-start=3D"842" data-end=3D"924=
"><td data-start=3D"842" data-end=3D"860" data-col-size=3D"sm">=E2=9C=85 Sa=
ves to HDF5</td><td data-start=3D"860" data-end=3D"924" data-col-size=3D"md=
">Under <code data-start=3D"868" data-end=3D"886">feats/full_image</code>, =
<code data-start=3D"888" data-end=3D"906">feats/patch_grid</code>, and <cod=
e data-start=3D"912" data-end=3D"922">feats/bg</code></td></tr></tbody></ta=
ble><div class=3D"sticky end-(--thread-content-margin) h-0 self-end select-=
none"><div class=3D"absolute end-0 flex items-end" style=3D"height: 32.8906=
px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-pr=
imary hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm =
p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:pointer-even=
ts-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24=
" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 =
5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.3431=
5 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.3=
4315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10=
C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.447=
72 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" =
fill=3D"currentColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"926" data-end=3D"929" class=3D"">
<h2 data-start=3D"931" data-end=3D"961" class=3D"">=F0=9F=94=8D What it <st=
rong data-start=3D"945" data-end=3D"957">does NOT</strong> do:</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"96=
3" data-end=3D"1359" class=3D"w-fit min-w-(--thread-content-width)"><thead =
data-start=3D"963" data-end=3D"981"><tr data-start=3D"963" data-end=3D"981"=
><th data-start=3D"963" data-end=3D"974" data-col-size=3D"md">Not done</th>=
<th data-start=3D"974" data-end=3D"981" data-col-size=3D"md">Why</th></tr><=
/thead><tbody data-start=3D"1001" data-end=3D"1359"><tr data-start=3D"1001"=
 data-end=3D"1071"><td data-start=3D"1001" data-end=3D"1026" data-col-size=
=3D"md">=E2=9D=8C Image classification</td><td data-start=3D"1026" data-end=
=3D"1071" data-col-size=3D"md">No <code data-start=3D"1031" data-end=3D"104=
0">softmax</code>, no prediction of categories</td></tr><tr data-start=3D"1=
072" data-end=3D"1143"><td data-start=3D"1072" data-end=3D"1091" data-col-s=
ize=3D"md">=E2=9D=8C Face detection</td><td data-start=3D"1091" data-end=3D=
"1143" data-col-size=3D"md">Doesn=E2=80=99t run a face classifier or region=
 detector</td></tr><tr data-start=3D"1144" data-end=3D"1255"><td data-start=
=3D"1144" data-end=3D"1190" data-col-size=3D"md">=E2=9D=8C Use of labels li=
ke 'face', 'object', etc.</td><td data-start=3D"1190" data-end=3D"1255" dat=
a-col-size=3D"md">The script is label-agnostic; only works with raw pixel i=
nput</td></tr><tr data-start=3D"1256" data-end=3D"1359"><td data-start=3D"1=
256" data-end=3D"1287" data-col-size=3D"md">=E2=9D=8C Compare across image =
types</td><td data-start=3D"1287" data-end=3D"1359" data-col-size=3D"md">It=
 doesn=E2=80=99t know what the image "is"=E2=80=94just what its features lo=
ok like</td></tr></tbody></table><div class=3D"sticky end-(--thread-content=
-margin) h-0 self-end select-none"><div class=3D"absolute end-0 flex items-=
end" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><b=
utton class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-te=
xt-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not=
(:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-within)=
]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"=
none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fi=
ll-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 =
2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6=
569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7=
H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5=
C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.=
44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C1=
5 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></=
span></div></div></div></div>
<hr data-start=3D"1361" data-end=3D"1364" class=3D"">
<h2 data-start=3D"1366" data-end=3D"1421" class=3D"">=F0=9F=A7=A9 Where fac=
e/non-face classification <em data-start=3D"1407" data-end=3D"1414">would</=
em> happen</h2>
<p data-start=3D"1423" data-end=3D"1495" class=3D"">To go from these ViT fe=
atures =E2=86=92 category predictions, you would need to:</p>
<ol data-start=3D"1496" data-end=3D"1677">
<li data-start=3D"1496" data-end=3D"1560" class=3D"">
<p data-start=3D"1499" data-end=3D"1560" class=3D"">Provide <strong data-st=
art=3D"1507" data-end=3D"1517">labels</strong> per image (e.g. <code data-s=
tart=3D"1534" data-end=3D"1548">'human_face'</code>, <code data-start=3D"15=
50" data-end=3D"1559">'scene'</code>)</p>
</li>
<li data-start=3D"1561" data-end=3D"1645" class=3D"">
<p data-start=3D"1564" data-end=3D"1645" class=3D"">Use the ViT features as=
 input to a <strong data-start=3D"1599" data-end=3D"1613">classifier</stron=
g> (e.g. logistic regression, MLP)</p>
</li>
<li data-start=3D"1646" data-end=3D"1677" class=3D"">
<p data-start=3D"1649" data-end=3D"1677" class=3D"">Train/test on labeled i=
mages</p>
</li>
</ol>
<p data-start=3D"1679" data-end=3D"1827" class=3D"">But that=E2=80=99s <str=
ong data-start=3D"1690" data-end=3D"1717">not part of this script</strong>=
=E2=80=94it just <strong data-start=3D"1726" data-end=3D"1767">generates th=
e feature representations</strong> that could be used in such downstream cl=
assification tasks.</p>
<hr data-start=3D"1829" data-end=3D"1832" class=3D"">
<h2 data-start=3D"1834" data-end=3D"1844" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"18=
46" data-end=3D"2197" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1846" data-end=3D"1867"><tr data-start=3D"1846" data-end=3D"=
1867"><th data-start=3D"1846" data-end=3D"1857" data-col-size=3D"md">Questi=
on</th><th data-start=3D"1857" data-end=3D"1867" data-col-size=3D"md">Answe=
r</th></tr></thead><tbody data-start=3D"1890" data-end=3D"2197"><tr data-st=
art=3D"1890" data-end=3D"1957"><td data-start=3D"1890" data-end=3D"1949" da=
ta-col-size=3D"md">Does the script try to classify images as face/non-face?=
</td><td data-start=3D"1949" data-end=3D"1957" data-col-size=3D"md">=E2=9D=
=8C No</td></tr><tr data-start=3D"1958" data-end=3D"2032"><td data-start=3D=
"1958" data-end=3D"1977" data-col-size=3D"md">What does it do?</td><td data=
-start=3D"1977" data-end=3D"2032" data-col-size=3D"md">=E2=9C=85 Extracts V=
iT features for full images and patches</td></tr><tr data-start=3D"2033" da=
ta-end=3D"2092"><td data-start=3D"2033" data-end=3D"2061" data-col-size=3D"=
md">Are category labels used?</td><td data-start=3D"2061" data-end=3D"2092"=
 data-col-size=3D"md">=E2=9D=8C Not at all in this script</td></tr><tr data=
-start=3D"2093" data-end=3D"2197"><td data-start=3D"2093" data-end=3D"2148"=
 data-col-size=3D"md">Can these features be used for classification later?<=
/td><td data-start=3D"2148" data-end=3D"2197" data-col-size=3D"md">=E2=9C=
=85 Yes, but you'd need labels and a classifier</td></tr></tbody></table><d=
iv class=3D"sticky end-(--thread-content-margin) h-0 self-end select-none">=
<div class=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><=
span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary =
hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 tr=
ansition-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-non=
e group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" heig=
ht=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/20=
00/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"ev=
enodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C2=
2 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2=
 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 1=
7 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.447=
72 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 =
5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=
=3D"currentColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"2199" data-end=3D"2202" class=3D"">
<p data-start=3D"2204" data-end=3D"2367" class=3D"">Would you like help wri=
ting a script that <strong data-start=3D"2246" data-end=3D"2313">uses these=
 ViT features to classify images as face vs. non-face</strong>, using the a=
vailable labels from your trial metadata?</p></div></div></div></div></div>=
</div></div></div></article><article class=3D"text-token-text-primary w-ful=
l" dir=3D"auto" data-testid=3D"conversation-turn-137" data-scroll-anchor=3D=
"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto=
 mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-con=
tent-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] =
px-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:32r=
em] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-=
max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 tex=
t-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hi=
dden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w=
-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><di=
v class=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"=
user" data-message-id=3D"7bfa7bf6-7967-4efd-afda-db958b6086da" dir=3D"auto"=
 class=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-=
2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5"><div=
 class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start=
"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-messag=
e-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">what =
is pickling in python</div></div></div></div></div></div></div></div></div>=
</article><article class=3D"text-token-text-primary w-full" dir=3D"auto" da=
ta-testid=3D"conversation-turn-138" data-scroll-anchor=3D"false"><h6 class=
=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5=
 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:-=
-spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-=
content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:=
[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48r=
em] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 =
md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabinde=
x=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0=
 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div =
class=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"as=
sistant" data-message-id=3D"fe09ec76-b9e3-4205-a573-1f8f3a2bee10" dir=3D"au=
to" class=3D"min-h-8 text-message relative flex w-full flex-col items-end g=
ap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5" d=
ata-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 =
empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert=
 w-full break-words dark"><p data-start=3D"0" data-end=3D"97" class=3D"">Gr=
eat question=E2=80=94<strong data-start=3D"15" data-end=3D"27">pickling</st=
rong> in Python is a super useful tool for saving and loading complex data.=
</p>
<hr data-start=3D"99" data-end=3D"102" class=3D"">
<h2 data-start=3D"104" data-end=3D"141" class=3D"">=F0=9F=A7=A0 What is <st=
rong data-start=3D"118" data-end=3D"130">pickling</strong> in Python?</h2>
<p data-start=3D"143" data-end=3D"239" class=3D""><strong data-start=3D"143=
" data-end=3D"155">Pickling</strong> is the process of <strong data-start=
=3D"174" data-end=3D"189">serializing</strong> a Python object into a byte =
stream, so it can be:</p>
<ul data-start=3D"240" data-end=3D"320">
<li data-start=3D"240" data-end=3D"255" class=3D"">
<p data-start=3D"242" data-end=3D"255" class=3D"">Saved to disk</p>
</li>
<li data-start=3D"256" data-end=3D"277" class=3D"">
<p data-start=3D"258" data-end=3D"277" class=3D"">Sent over a network</p>
</li>
<li data-start=3D"278" data-end=3D"320" class=3D"">
<p data-start=3D"280" data-end=3D"320" class=3D"">Reconstructed later (via =
<strong data-start=3D"305" data-end=3D"319">unpickling</strong>)</p>
</li>
</ul>
<p data-start=3D"322" data-end=3D"519" class=3D"">Think of it like taking a=
 <strong data-start=3D"348" data-end=3D"360">snapshot</strong> of a Python =
object=E2=80=94whether it's a list, dict, trained model, or even a custom c=
lass instance=E2=80=94and saving it in a format that can be reloaded exactl=
y as it was.</p>
<hr data-start=3D"521" data-end=3D"524" class=3D"">
<h2 data-start=3D"526" data-end=3D"545" class=3D"">=F0=9F=93=A6 Basic Examp=
le</h2>
<pre class=3D"overflow-visible!" data-start=3D"547" data-end=3D"969"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> pickle

</span><span><span class=3D"hljs-comment"># Create a complex Python object<=
/span></span><span>
data =3D {</span><span><span class=3D"hljs-string">"session"</span></span><=
span>: </span><span><span class=3D"hljs-string">"Pa210120"</span></span><sp=
an>, </span><span><span class=3D"hljs-string">"neurons"</span></span><span>=
: [</span><span><span class=3D"hljs-number">1</span></span><span>, </span><=
span><span class=3D"hljs-number">2</span></span><span>, </span><span><span =
class=3D"hljs-number">3</span></span><span>], </span><span><span class=3D"h=
ljs-string">"params"</span></span><span>: {</span><span><span class=3D"hljs=
-string">"alpha"</span></span><span>: </span><span><span class=3D"hljs-numb=
er">0.1</span></span><span>}}

</span><span><span class=3D"hljs-comment"># Save it to disk (pickling)</spa=
n></span><span>
</span><span><span class=3D"hljs-keyword">with</span></span><span> </span><=
span><span class=3D"hljs-built_in">open</span></span><span>(</span><span><s=
pan class=3D"hljs-string">"data.pkl"</span></span><span>, </span><span><spa=
n class=3D"hljs-string">"wb"</span></span><span>) </span><span><span class=
=3D"hljs-keyword">as</span></span><span> f:
    pickle.dump(data, f)

</span><span><span class=3D"hljs-comment"># Load it later (unpickling)</spa=
n></span><span>
</span><span><span class=3D"hljs-keyword">with</span></span><span> </span><=
span><span class=3D"hljs-built_in">open</span></span><span>(</span><span><s=
pan class=3D"hljs-string">"data.pkl"</span></span><span>, </span><span><spa=
n class=3D"hljs-string">"rb"</span></span><span>) </span><span><span class=
=3D"hljs-keyword">as</span></span><span> f:
    loaded_data =3D pickle.load(f)

</span><span><span class=3D"hljs-built_in">print</span></span><span>(loaded=
_data)
</span><span><span class=3D"hljs-comment"># =E2=86=92 {'session': 'Pa210120=
', 'neurons': [1, 2, 3], 'params': {'alpha': 0.1}}</span></span><span>
</span></span></code></div></div></pre>
<hr data-start=3D"971" data-end=3D"974" class=3D"">
<h2 data-start=3D"976" data-end=3D"1019" class=3D"">=F0=9F=A7=AA Where you=
=E2=80=99ve seen it in your project:</h2>
<p data-start=3D"1021" data-end=3D"1049" class=3D"">In your scripts, especi=
ally:</p>
<pre class=3D"overflow-visible!" data-start=3D"1050" data-end=3D"1157"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(</sp=
an><span><span class=3D"hljs-string">"shared_preprocessed_data_with_saccade=
s.pkl"</span></span><span>, </span><span><span class=3D"hljs-string">"rb"</=
span></span><span>) </span><span><span class=3D"hljs-keyword">as</span></sp=
an><span> f:
    data =3D pickle.load(f)
</span></span></code></div></div></pre>
<p data-start=3D"1159" data-end=3D"1198" class=3D"">This loads a big dictio=
nary containing:</p>
<ul data-start=3D"1199" data-end=3D"1265">
<li data-start=3D"1199" data-end=3D"1224" class=3D"">
<p data-start=3D"1201" data-end=3D"1224" class=3D"">Spike density functions=
</p>
</li>
<li data-start=3D"1225" data-end=3D"1241" class=3D"">
<p data-start=3D"1227" data-end=3D"1241" class=3D"">Trial metadata</p>
</li>
<li data-start=3D"1242" data-end=3D"1265" class=3D"">
<p data-start=3D"1244" data-end=3D"1265" class=3D"">Fixation/saccade info</=
p>
</li>
</ul>
<p data-start=3D"1267" data-end=3D"1327" class=3D"">All stored from previou=
s preprocessing scripts like <code data-start=3D"1319" data-end=3D"1326">0a=
=E2=80=930c</code>.</p>
<hr data-start=3D"1329" data-end=3D"1332" class=3D"">
<h2 data-start=3D"1334" data-end=3D"1355" class=3D"">=F0=9F=9B=91 Notes on =
Pickle</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"13=
57" data-end=3D"1615" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1357" data-end=3D"1370"><tr data-start=3D"1357" data-end=3D"=
1370"><th data-start=3D"1357" data-end=3D"1363" data-col-size=3D"md">Pro</t=
h><th data-start=3D"1363" data-end=3D"1370" data-col-size=3D"md">Con</th></=
tr></thead><tbody data-start=3D"1385" data-end=3D"1615"><tr data-start=3D"1=
385" data-end=3D"1439"><td data-start=3D"1385" data-end=3D"1415" data-col-s=
ize=3D"md">=E2=9C=85 Saves full Python objects</td><td data-start=3D"1415" =
data-end=3D"1439" data-col-size=3D"md">=E2=9D=8C Not human-readable</td></t=
r><tr data-start=3D"1440" data-end=3D"1529"><td data-start=3D"1440" data-en=
d=3D"1488" data-col-size=3D"md">=E2=9C=85 Works with lists, dicts, NumPy ar=
rays, etc.</td><td data-start=3D"1488" data-end=3D"1529" data-col-size=3D"m=
d">=E2=9D=8C Can=E2=80=99t easily share across languages</td></tr><tr data-=
start=3D"1530" data-end=3D"1615"><td data-start=3D"1530" data-end=3D"1562" =
data-col-size=3D"md">=E2=9C=85 Easy for internal pipelines</td><td data-sta=
rt=3D"1562" data-end=3D"1615" data-col-size=3D"md">=E2=9D=8C Security risk =
if loading untrusted <code data-start=3D"1601" data-end=3D"1607">.pkl</code=
> files</td></tr></tbody></table><div class=3D"sticky end-(--thread-content=
-margin) h-0 self-end select-none"><div class=3D"absolute end-0 flex items-=
end" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><b=
utton class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-te=
xt-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not=
(:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-within)=
]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"=
none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fi=
ll-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 =
2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6=
569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7=
H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5=
C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.=
44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C1=
5 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></=
span></div></div></div></div>
<blockquote data-start=3D"1617" data-end=3D"1715">
<p data-start=3D"1619" data-end=3D"1715" class=3D"">=E2=9A=A0=EF=B8=8F <str=
ong data-start=3D"1622" data-end=3D"1638">Security Tip</strong>: Never unpi=
ckle data from an untrusted source=E2=80=94it can execute arbitrary code.</=
p>
</blockquote>
<hr data-start=3D"1717" data-end=3D"1720" class=3D"">
<h2 data-start=3D"1722" data-end=3D"1732" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"17=
34" data-end=3D"1935" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1734" data-end=3D"1752"><tr data-start=3D"1734" data-end=3D"=
1752"><th data-start=3D"1734" data-end=3D"1741" data-col-size=3D"sm">Term</=
th><th data-start=3D"1741" data-end=3D"1752" data-col-size=3D"md">Meaning</=
th></tr></thead><tbody data-start=3D"1772" data-end=3D"1935"><tr data-start=
=3D"1772" data-end=3D"1823"><td data-start=3D"1772" data-end=3D"1787" data-=
col-size=3D"sm"><strong data-start=3D"1774" data-end=3D"1786">Pickling</str=
ong></td><td data-start=3D"1787" data-end=3D"1823" data-col-size=3D"md">Sav=
ing a Python object to a file</td></tr><tr data-start=3D"1824" data-end=3D"=
1869"><td data-start=3D"1824" data-end=3D"1841" data-col-size=3D"sm"><stron=
g data-start=3D"1826" data-end=3D"1840">Unpickling</strong></td><td data-st=
art=3D"1841" data-end=3D"1869" data-col-size=3D"md">Loading that object bac=
k</td></tr><tr data-start=3D"1870" data-end=3D"1935"><td data-start=3D"1870=
" data-end=3D"1885" data-col-size=3D"sm"><strong data-start=3D"1872" data-e=
nd=3D"1884">Used for</strong></td><td data-start=3D"1885" data-end=3D"1935"=
 data-col-size=3D"md">Storing intermediate results, models, metadata</td></=
tr></tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 s=
elf-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D"=
height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D=
"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary m=
y-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within=
)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><=
svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D=
"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"eve=
nodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2=
 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22=
 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C1=
5.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19=
.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C=
4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5=
523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></d=
iv></div></div>
<hr data-start=3D"1937" data-end=3D"1940" class=3D"">
<p data-start=3D"1942" data-end=3D"2055" class=3D"">Let me know if you'd li=
ke a diagram or helper function to save/load large nested experiment object=
s using pickle!</p></div></div></div></div></div></div></div></div></articl=
e><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-testi=
d=3D"conversation-turn-139" data-scroll-anchor=3D"false"><h5 class=3D"sr-on=
ly">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-co=
ntent-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] =
@[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margi=
n)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-con=
tent-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto f=
lex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:g=
ap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div=
 class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><d=
iv class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full=
 flex-col grow"><div data-message-author-role=3D"user" data-message-id=3D"c=
6a0022d-7afc-4e91-b544-0d47e4a9da1b" dir=3D"auto" class=3D"min-h-8 text-mes=
sage relative flex w-full flex-col items-end gap-2 text-start break-words w=
hitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex=
-col gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative m=
ax-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5=
 py-2.5"><div class=3D"whitespace-pre-wrap">how does one create a pickle fi=
le containing a label and a corresponding image </div></div></div></div></d=
iv></div></div></div></div></article><article class=3D"text-token-text-prim=
ary w-full" dir=3D"auto" data-testid=3D"conversation-turn-140" data-scroll-=
anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text=
-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:=
[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--=
spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-=
max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--th=
read-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-widt=
h) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visib=
le:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn re=
lative flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative flex=
-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data=
-message-author-role=3D"assistant" data-message-id=3D"04084b03-cb4a-4ce9-9b=
78-c06e022dbf60" dir=3D"auto" class=3D"min-h-8 text-message relative flex w=
-full flex-col items-end gap-2 text-start break-words whitespace-normal [.t=
ext-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"f=
lex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdo=
wn prose dark:prose-invert w-full break-words dark"><p data-start=3D"0" dat=
a-end=3D"121" class=3D"">Awesome! Let=E2=80=99s walk through how to create =
a <strong data-start=3D"44" data-end=3D"107">pickle file that stores a labe=
l and its corresponding image</strong>=E2=80=94step by step.</p>
<hr data-start=3D"123" data-end=3D"126" class=3D"">
<h2 data-start=3D"128" data-end=3D"143" class=3D"">=F0=9F=A7=A0 The Goal:</=
h2>
<p data-start=3D"145" data-end=3D"199" class=3D"">You want a <code data-sta=
rt=3D"156" data-end=3D"162">.pkl</code> file that holds something like this=
:</p>
<pre class=3D"overflow-visible!" data-start=3D"201" data-end=3D"281"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>{
  </span><span><span class=3D"hljs-string">"label"</span></span><span>: </s=
pan><span><span class=3D"hljs-string">"human_face"</span></span><span>,
  </span><span><span class=3D"hljs-string">"image"</span></span><span>: &lt=
;numpy array of the image&gt;
}
</span></span></code></div></div></pre>
<hr data-start=3D"283" data-end=3D"286" class=3D"">
<h2 data-start=3D"288" data-end=3D"313" class=3D"">=E2=9C=85 Step-by-Step E=
xample</h2>
<pre class=3D"overflow-visible!" data-start=3D"315" data-end=3D"828"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> pickle
</span><span><span class=3D"hljs-keyword">from</span></span><span> PIL </sp=
an><span><span class=3D"hljs-keyword">import</span></span><span> Image
</span><span><span class=3D"hljs-keyword">import</span></span><span> numpy =
</span><span><span class=3D"hljs-keyword">as</span></span><span> np

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Load the image =3D=3D=
=3D</span></span><span>
</span><span><span class=3D"hljs-comment"># You can use any image file (jpg=
, png, etc.)</span></span><span>
image_path =3D </span><span><span class=3D"hljs-string">"face_image.jpg"</s=
pan></span><span>
image =3D Image.</span><span><span class=3D"hljs-built_in">open</span></spa=
n><span>(image_path).convert(</span><span><span class=3D"hljs-string">"RGB"=
</span></span><span>)
image_array =3D np.array(image)  </span><span><span class=3D"hljs-comment">=
# Convert to NumPy array</span></span><span>

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Define the label =3D=
=3D=3D</span></span><span>
label =3D </span><span><span class=3D"hljs-string">"human_face"</span></spa=
n><span>

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Bundle into a diction=
ary =3D=3D=3D</span></span><span>
data =3D {
    </span><span><span class=3D"hljs-string">"label"</span></span><span>: l=
abel,
    </span><span><span class=3D"hljs-string">"image"</span></span><span>: i=
mage_array
}

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Save as a pickle file=
 =3D=3D=3D</span></span><span>
</span><span><span class=3D"hljs-keyword">with</span></span><span> </span><=
span><span class=3D"hljs-built_in">open</span></span><span>(</span><span><s=
pan class=3D"hljs-string">"face_example.pkl"</span></span><span>, </span><s=
pan><span class=3D"hljs-string">"wb"</span></span><span>) </span><span><spa=
n class=3D"hljs-keyword">as</span></span><span> f:
    pickle.dump(data, f)
</span></span></code></div></div></pre>
<hr data-start=3D"830" data-end=3D"833" class=3D"">
<h2 data-start=3D"835" data-end=3D"863" class=3D"">=F0=9F=A7=AA To load it =
back later:</h2>
<pre class=3D"overflow-visible!" data-start=3D"865" data-end=3D"1070"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(</sp=
an><span><span class=3D"hljs-string">"face_example.pkl"</span></span><span>=
, </span><span><span class=3D"hljs-string">"rb"</span></span><span>) </span=
><span><span class=3D"hljs-keyword">as</span></span><span> f:
    loaded_data =3D pickle.load(f)

</span><span><span class=3D"hljs-built_in">print</span></span><span>(loaded=
_data[</span><span><span class=3D"hljs-string">"label"</span></span><span>]=
)       </span><span><span class=3D"hljs-comment"># =E2=86=92 'human_face'<=
/span></span><span>
</span><span><span class=3D"hljs-built_in">print</span></span><span>(loaded=
_data[</span><span><span class=3D"hljs-string">"image"</span></span><span>]=
.shape) </span><span><span class=3D"hljs-comment"># =E2=86=92 (H, W, 3) for=
 an RGB image</span></span><span>
</span></span></code></div></div></pre>
<hr data-start=3D"1072" data-end=3D"1075" class=3D"">
<h2 data-start=3D"1077" data-end=3D"1093" class=3D"">=F0=9F=A7=A0 Use Cases=
:</h2>
<ul data-start=3D"1095" data-end=3D"1252">
<li data-start=3D"1095" data-end=3D"1145" class=3D"">
<p data-start=3D"1097" data-end=3D"1145" class=3D"">Store image-label pairs=
 for <strong data-start=3D"1125" data-end=3D"1145">manual debugging</strong=
></p>
</li>
<li data-start=3D"1146" data-end=3D"1195" class=3D"">
<p data-start=3D"1148" data-end=3D"1195" class=3D"">Create a <strong data-s=
tart=3D"1157" data-end=3D"1176">compact dataset</strong> with a few samples=
</p>
</li>
<li data-start=3D"1196" data-end=3D"1252" class=3D"">
<p data-start=3D"1198" data-end=3D"1252" class=3D"">Visualize model feature=
s vs. labels during development</p>
</li>
</ul>
<hr data-start=3D"1254" data-end=3D"1257" class=3D"">
<h2 data-start=3D"1259" data-end=3D"1269" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"12=
71" data-end=3D"1557" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1271" data-end=3D"1288"><tr data-start=3D"1271" data-end=3D"=
1288"><th data-start=3D"1271" data-end=3D"1278" data-col-size=3D"sm">Step</=
th><th data-start=3D"1278" data-end=3D"1288" data-col-size=3D"sm">Action</t=
h></tr></thead><tbody data-start=3D"1307" data-end=3D"1557"><tr data-start=
=3D"1307" data-end=3D"1346"><td data-start=3D"1307" data-end=3D"1324" data-=
col-size=3D"sm">1=EF=B8=8F=E2=83=A3 Load image</td><td data-start=3D"1324" =
data-end=3D"1346" data-col-size=3D"sm">With PIL or OpenCV</td></tr><tr data=
-start=3D"1347" data-end=3D"1408"><td data-start=3D"1347" data-end=3D"1370"=
 data-col-size=3D"sm">2=EF=B8=8F=E2=83=A3 Convert to NumPy</td><td data-sta=
rt=3D"1370" data-end=3D"1408" data-col-size=3D"sm">For easy storage and com=
patibility</td></tr><tr data-start=3D"1409" data-end=3D"1447"><td data-star=
t=3D"1409" data-end=3D"1425" data-col-size=3D"sm">3=EF=B8=8F=E2=83=A3 Add l=
abel</td><td data-start=3D"1425" data-end=3D"1447" data-col-size=3D"sm">As =
a string or int</td></tr><tr data-start=3D"1448" data-end=3D"1502"><td data=
-start=3D"1448" data-end=3D"1468" data-col-size=3D"sm">4=EF=B8=8F=E2=83=A3 =
Store in dict</td><td data-start=3D"1468" data-end=3D"1502" data-col-size=
=3D"sm"><code data-start=3D"1470" data-end=3D"1500">{"label": ..., "image":=
 ...}</code></td></tr><tr data-start=3D"1503" data-end=3D"1557"><td data-st=
art=3D"1503" data-end=3D"1535" data-col-size=3D"sm">5=EF=B8=8F=E2=83=A3 Sav=
e with <code data-start=3D"1519" data-end=3D"1534">pickle.dump()</code></td=
><td data-start=3D"1535" data-end=3D"1557" data-col-size=3D"sm">Into a <cod=
e data-start=3D"1544" data-end=3D"1550">.pkl</code> file</td></tr></tbody><=
/table><div class=3D"sticky end-(--thread-content-margin) h-0 self-end sele=
ct-none"><div class=3D"absolute end-0 flex items-end" style=3D"height: 32.8=
906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg=
-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-=
sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:pointer-e=
vents-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D=
"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.=
w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-r=
ule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 =
22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.3=
4315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 =
8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4=
H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.=
44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5=
Z" fill=3D"currentColor"></path></svg></button></span></div></div></div></d=
iv>
<hr data-start=3D"1559" data-end=3D"1562" class=3D"">
<p data-start=3D"1564" data-end=3D"1676" class=3D"">Want to store <strong d=
ata-start=3D"1578" data-end=3D"1590">multiple</strong> image-label pairs in=
 a single pickle file (like a mini dataset)? I can show that too!</p></div>=
</div></div></div></div></div></div></div></article><article class=3D"text-=
token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-14=
1" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div cl=
ass=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)=
] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-conten=
t-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thre=
ad-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[6=
4rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-conte=
nt-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages =
focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversat=
ion-turn relative flex w-full min-w-0 flex-col"><div class=3D"relative flex=
-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data=
-message-author-role=3D"user" data-message-id=3D"2e197acf-5049-4f4f-bc42-95=
03f0a3885d" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full=
 flex-col items-end gap-2 text-start break-words whitespace-normal [.text-m=
essage+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden i=
tems-end rtl:items-start"><div class=3D"relative max-w-[var(--user-chat-wid=
th,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"wh=
itespace-pre-wrap">is there a way for me to quickly hand-label a bunch of d=
ata</div></div></div></div></div></div></div></div></div></article><article=
 class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conve=
rsation-turn-142" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGP=
T said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-=
margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72re=
m]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><d=
iv class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-m=
ax-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex ma=
x-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 g=
roup/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=
=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-tur=
n"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w=
-full flex-col grow"><div data-message-author-role=3D"assistant" data-messa=
ge-id=3D"f618b886-c90d-41d7-b5d2-8a066e9c5b6a" dir=3D"auto" class=3D"min-h-=
8 text-message relative flex w-full flex-col items-end gap-2 text-start bre=
ak-words whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-s=
lug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:=
pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-words=
 dark"><p data-start=3D"0" data-end=3D"212" class=3D"">Absolutely=E2=80=94t=
here are several great ways to <strong data-start=3D"43" data-end=3D"83">qu=
ickly hand-label a bunch of images</strong>, depending on how much data you=
 have, how fast you want to go, and whether this is a one-time task or part=
 of a bigger workflow.</p>
<hr data-start=3D"214" data-end=3D"217" class=3D"">
<h2 data-start=3D"219" data-end=3D"300" class=3D"">=E2=9C=85 Option 1: Quic=
k Python script with keypress interface (minimal dependencies)</h2>
<p data-start=3D"302" data-end=3D"439" class=3D"">For small to medium datas=
ets, you can use a <strong data-start=3D"346" data-end=3D"396">simple scrip=
t with <code data-start=3D"367" data-end=3D"379">matplotlib</code> + key bi=
ndings</strong> to cycle through images and record labels.</p>
<h3 data-start=3D"441" data-end=3D"453" class=3D"">Example:</h3>
<pre class=3D"overflow-visible!" data-start=3D"455" data-end=3D"1532"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> os
</span><span><span class=3D"hljs-keyword">import</span></span><span> matplo=
tlib.pyplot </span><span><span class=3D"hljs-keyword">as</span></span><span=
> plt
</span><span><span class=3D"hljs-keyword">import</span></span><span> numpy =
</span><span><span class=3D"hljs-keyword">as</span></span><span> np
</span><span><span class=3D"hljs-keyword">from</span></span><span> PIL </sp=
an><span><span class=3D"hljs-keyword">import</span></span><span> Image
</span><span><span class=3D"hljs-keyword">import</span></span><span> pickle

image_dir =3D </span><span><span class=3D"hljs-string">"your/image/folder"<=
/span></span><span>
output_file =3D </span><span><span class=3D"hljs-string">"labels.pkl"</span=
></span><span>

image_files =3D </span><span><span class=3D"hljs-built_in">sorted</span></s=
pan><span>([f </span><span><span class=3D"hljs-keyword">for</span></span><s=
pan> f </span><span><span class=3D"hljs-keyword">in</span></span><span> os.=
listdir(image_dir) </span><span><span class=3D"hljs-keyword">if</span></spa=
n><span> f.endswith((</span><span><span class=3D"hljs-string">".png"</span>=
</span><span>, </span><span><span class=3D"hljs-string">".jpg"</span></span=
><span>))])
labels =3D {}

</span><span><span class=3D"hljs-keyword">def</span></span><span> </span><s=
pan><span class=3D"hljs-title function_">on_key</span></span><span>(</span>=
<span><span class=3D"hljs-params">event</span></span><span>):
    </span><span><span class=3D"hljs-keyword">global</span></span><span> id=
x
    </span><span><span class=3D"hljs-keyword">if</span></span><span> event.=
key </span><span><span class=3D"hljs-keyword">in</span></span><span> [</spa=
n><span><span class=3D"hljs-string">'1'</span></span><span>, </span><span><=
span class=3D"hljs-string">'2'</span></span><span>]:  </span><span><span cl=
ass=3D"hljs-comment"># Map keys to labels</span></span><span>
        label =3D </span><span><span class=3D"hljs-string">"face"</span></s=
pan><span> </span><span><span class=3D"hljs-keyword">if</span></span><span>=
 event.key =3D=3D </span><span><span class=3D"hljs-string">'1'</span></span=
><span> </span><span><span class=3D"hljs-keyword">else</span></span><span> =
</span><span><span class=3D"hljs-string">"nonface"</span></span><span>
        labels[image_files[idx]] =3D label
        </span><span><span class=3D"hljs-built_in">print</span></span><span=
>(</span><span><span class=3D"hljs-string">f"Labeled <span class=3D"hljs-su=
bst">{image_files[idx]}</span></span></span><span> as </span><span><span cl=
ass=3D"hljs-subst">{label}</span></span><span>")
        idx +=3D </span><span><span class=3D"hljs-number">1</span></span><s=
pan>
        </span><span><span class=3D"hljs-keyword">if</span></span><span> id=
x &lt; </span><span><span class=3D"hljs-built_in">len</span></span><span>(i=
mage_files):
            show_image()
        </span><span><span class=3D"hljs-keyword">else</span></span><span>:
            </span><span><span class=3D"hljs-built_in">print</span></span><=
span>(</span><span><span class=3D"hljs-string">"Done! Saving..."</span></sp=
an><span>)
            </span><span><span class=3D"hljs-keyword">with</span></span><sp=
an> </span><span><span class=3D"hljs-built_in">open</span></span><span>(out=
put_file, </span><span><span class=3D"hljs-string">"wb"</span></span><span>=
) </span><span><span class=3D"hljs-keyword">as</span></span><span> f:
                pickle.dump(labels, f)
            plt.close()

</span><span><span class=3D"hljs-keyword">def</span></span><span> </span><s=
pan><span class=3D"hljs-title function_">show_image</span></span><span>():
    img =3D Image.</span><span><span class=3D"hljs-built_in">open</span></s=
pan><span>(os.path.join(image_dir, image_files[idx]))
    plt.imshow(img)
    plt.title(</span><span><span class=3D"hljs-string">f"Image <span class=
=3D"hljs-subst">{idx + <span class=3D"hljs-number">1</span></span></span></=
span><span>}/</span><span><span class=3D"hljs-subst">{<span class=3D"hljs-b=
uilt_in">len</span></span></span><span>(image_files)}\nPress 1 =3D Face, 2 =
=3D Non-face")
    plt.axis(</span><span><span class=3D"hljs-string">"off"</span></span><s=
pan>)
    plt.draw()

idx =3D </span><span><span class=3D"hljs-number">0</span></span><span>
fig =3D plt.figure()
fig.canvas.mpl_connect(</span><span><span class=3D"hljs-string">'key_press_=
event'</span></span><span>, on_key)
show_image()
plt.show()
</span></span></code></div></div></pre>
<p data-start=3D"1534" data-end=3D"1544" class=3D"">This will:</p>
<ul data-start=3D"1545" data-end=3D"1678">
<li data-start=3D"1545" data-end=3D"1583" class=3D"">
<p data-start=3D"1547" data-end=3D"1583" class=3D"">Load and display one im=
age at a time</p>
</li>
<li data-start=3D"1584" data-end=3D"1627" class=3D"">
<p data-start=3D"1586" data-end=3D"1627" class=3D"">Let you press <code dat=
a-start=3D"1600" data-end=3D"1603">1</code> or <code data-start=3D"1607" da=
ta-end=3D"1610">2</code> to assign labels</p>
</li>
<li data-start=3D"1628" data-end=3D"1678" class=3D"">
<p data-start=3D"1630" data-end=3D"1678" class=3D"">Save the results in <co=
de data-start=3D"1650" data-end=3D"1662">labels.pkl</code> as a dictionary<=
/p>
</li>
</ul>
<hr data-start=3D"1680" data-end=3D"1683" class=3D"">
<h2 data-start=3D"1685" data-end=3D"1764" class=3D"">=E2=9C=85 Option 2: Us=
e a tool like <a data-start=3D"1716" data-end=3D"1764" rel=3D"noopener" tar=
get=3D"_new" class=3D"" href=3D"https://github.com/tzutalin/labelImg">Label=
Img</a></h2>
<p data-start=3D"1766" data-end=3D"1784" class=3D"">If you want a GUI:</p>
<ul data-start=3D"1785" data-end=3D"1965">
<li data-start=3D"1785" data-end=3D"1826" class=3D"">
<p data-start=3D"1787" data-end=3D"1826" class=3D"">Install via pip: <code =
data-start=3D"1804" data-end=3D"1826">pip install labelImg</code></p>
</li>
<li data-start=3D"1827" data-end=3D"1901" class=3D"">
<p data-start=3D"1829" data-end=3D"1901" class=3D"">You can click on images=
 and label them with bounding boxes or categories</p>
</li>
<li data-start=3D"1902" data-end=3D"1965" class=3D"">
<p data-start=3D"1904" data-end=3D"1965" class=3D"">Great if you want label=
s for object detection or segmentation</p>
</li>
</ul>
<hr data-start=3D"1967" data-end=3D"1970" class=3D"">
<h2 data-start=3D"1972" data-end=3D"2025" class=3D"">=E2=9C=85 Option 3: We=
b-based tools (if you want to scale)</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"20=
27" data-end=3D"2370" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2027" data-end=3D"2050"><tr data-start=3D"2027" data-end=3D"=
2050"><th data-start=3D"2027" data-end=3D"2034" data-col-size=3D"sm">Tool</=
th><th data-start=3D"2034" data-end=3D"2050" data-col-size=3D"md">What it d=
oes</th></tr></thead><tbody data-start=3D"2075" data-end=3D"2370"><tr data-=
start=3D"2075" data-end=3D"2178"><td data-start=3D"2075" data-end=3D"2115" =
data-col-size=3D"sm"><a data-start=3D"2077" data-end=3D"2114" rel=3D"noopen=
er" target=3D"_new" class=3D"" href=3D"https://labelstud.io/">Label Studio<=
/a></td><td data-start=3D"2115" data-end=3D"2178" data-col-size=3D"md">Very=
 flexible, runs in browser, supports image, audio, text</td></tr><tr data-s=
tart=3D"2179" data-end=3D"2270"><td data-start=3D"2179" data-end=3D"2219" d=
ata-col-size=3D"sm"><a data-start=3D"2181" data-end=3D"2218" rel=3D"noopene=
r" target=3D"_new" class=3D"" href=3D"https://makesense.ai/">MakeSense.ai</=
a></td><td data-start=3D"2219" data-end=3D"2270" data-col-size=3D"md">Free,=
 no install, fast for image classification</td></tr><tr data-start=3D"2271"=
 data-end=3D"2370"><td data-start=3D"2271" data-end=3D"2324" data-col-size=
=3D"sm"><a data-start=3D"2273" data-end=3D"2323" rel=3D"noopener" target=3D=
"_new" class=3D"">Roboflow Annotate</a></td><td data-start=3D"2324" data-en=
d=3D"2370" data-col-size=3D"md">Slick, hosted solution with export options<=
/td></tr></tbody></table><div class=3D"sticky end-(--thread-content-margin)=
 h-0 self-end select-none"><div class=3D"absolute end-0 flex items-end" sty=
le=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button cl=
ass=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secon=
dary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-=
within)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacit=
y-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xm=
lns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20=
.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.=
6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9=
 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.4=
4772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4=
 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.447=
72 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></=
div></div></div></div>
<p data-start=3D"2372" data-end=3D"2429" class=3D"">These are good for coll=
aborative or larger-scale efforts.</p>
<hr data-start=3D"2431" data-end=3D"2434" class=3D"">
<h2 data-start=3D"2436" data-end=3D"2474" class=3D"">=E2=9C=85 Option 4: La=
bel in a CSV manually</h2>
<p data-start=3D"2476" data-end=3D"2571" class=3D"">If you already have fil=
enames in a folder and want to just label them quickly in a spreadsheet:</p=
>
<ol data-start=3D"2573" data-end=3D"2607">
<li data-start=3D"2573" data-end=3D"2607" class=3D"">
<p data-start=3D"2576" data-end=3D"2607" class=3D"">Generate a list of imag=
e files:</p>
</li>
</ol>
<pre class=3D"overflow-visible!" data-start=3D"2608" data-end=3D"2812"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> os
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
image_files =3D </span><span><span class=3D"hljs-built_in">sorted</span></s=
pan><span>([f </span><span><span class=3D"hljs-keyword">for</span></span><s=
pan> f </span><span><span class=3D"hljs-keyword">in</span></span><span> os.=
listdir(</span><span><span class=3D"hljs-string">"images/"</span></span><sp=
an>) </span><span><span class=3D"hljs-keyword">if</span></span><span> f.end=
swith(</span><span><span class=3D"hljs-string">".jpg"</span></span><span>)]=
)
pd.DataFrame({</span><span><span class=3D"hljs-string">"filename"</span></s=
pan><span>: image_files}).to_csv(</span><span><span class=3D"hljs-string">"=
label_template.csv"</span></span><span>, index=3D</span><span><span class=
=3D"hljs-literal">False</span></span><span>)
</span></span></code></div></div></pre>
<ol start=3D"2" data-start=3D"2814" data-end=3D"2910">
<li data-start=3D"2814" data-end=3D"2884" class=3D"">
<p data-start=3D"2817" data-end=3D"2884" class=3D"">Open <code data-start=
=3D"2822" data-end=3D"2842">label_template.csv</code>, and add a new column=
 for <code data-start=3D"2869" data-end=3D"2876">label</code> by hand</p>
</li>
<li data-start=3D"2886" data-end=3D"2910" class=3D"">
<p data-start=3D"2889" data-end=3D"2910" class=3D"">Read back in and use:</=
p>
</li>
</ol>
<pre class=3D"overflow-visible!" data-start=3D"2911" data-end=3D"2970"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>labels_df =3D pd.read_csv(</span><span><span class=
=3D"hljs-string">"label_template.csv"</span></span><span>)
</span></span></code></div></div></pre>
<hr data-start=3D"2972" data-end=3D"2975" class=3D"">
<h2 data-start=3D"2977" data-end=3D"2985" class=3D"">TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"29=
87" data-end=3D"3373" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2987" data-end=3D"3015"><tr data-start=3D"2987" data-end=3D"=
3015"><th data-start=3D"2987" data-end=3D"2996" data-col-size=3D"sm">Method=
</th><th data-start=3D"2996" data-end=3D"3007" data-col-size=3D"sm">Best Fo=
r</th><th data-start=3D"3007" data-end=3D"3015" data-col-size=3D"sm">Tool</=
th></tr></thead><tbody data-start=3D"3045" data-end=3D"3373"><tr data-start=
=3D"3045" data-end=3D"3125"><td data-start=3D"3045" data-end=3D"3065" data-=
col-size=3D"sm">Python + keypress</td><td data-start=3D"3065" data-end=3D"3=
096" data-col-size=3D"sm">Fast hand-labeling, no setup</td><td data-start=
=3D"3096" data-end=3D"3125" data-col-size=3D"sm">=E2=9C=85 Good for small d=
atasets</td></tr><tr data-start=3D"3126" data-end=3D"3213"><td data-start=
=3D"3126" data-end=3D"3149" data-col-size=3D"sm">LabelImg / GUI tools</td><=
td data-start=3D"3149" data-end=3D"3175" data-col-size=3D"sm">Drag and clic=
k labeling</td><td data-start=3D"3175" data-end=3D"3213" data-col-size=3D"s=
m">=E2=9C=85 Great for detection/segmentation</td></tr><tr data-start=3D"32=
14" data-end=3D"3290"><td data-start=3D"3214" data-end=3D"3235" data-col-si=
ze=3D"sm">Label Studio / Web</td><td data-start=3D"3235" data-end=3D"3262" =
data-col-size=3D"sm">Scalable / collaborative</td><td data-start=3D"3262" d=
ata-end=3D"3290" data-col-size=3D"sm">=E2=9C=85 Best for big pipelines</td>=
</tr><tr data-start=3D"3291" data-end=3D"3373"><td data-start=3D"3291" data=
-end=3D"3305" data-col-size=3D"sm">CSV by hand</td><td data-start=3D"3305" =
data-end=3D"3341" data-col-size=3D"sm">Very fast for pre-filtered images</t=
d><td data-start=3D"3341" data-end=3D"3373" data-col-size=3D"sm">=E2=9C=85 =
Good for static categories</td></tr></tbody></table><div class=3D"sticky en=
d-(--thread-content-margin) h-0 self-end select-none"><div class=3D"absolut=
e end-0 flex items-end" style=3D"height: 32.8906px;"><span class=3D"" data-=
state=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-ter=
tiary text-token-text-secondary my-1 rounded-sm p-1 transition-opacity grou=
p-[:not(:hover):not(:focus-within)]:pointer-events-none group-[:not(:hover)=
:not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"=
0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon=
-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.=
34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 =
19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.=
34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15=
 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7Z=
M5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15=
 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></pat=
h></svg></button></span></div></div></div></div>
<hr data-start=3D"3375" data-end=3D"3378" class=3D"">
<p data-start=3D"3380" data-end=3D"3490" class=3D"">Want me to generate a l=
abeled dataset template for your actual stimulus folder (with <code data-st=
art=3D"3465" data-end=3D"3478">MD5 =E2=86=92 label</code> prefilled)?</p></=
div></div></div></div></div></div></div></div></article><article class=3D"t=
ext-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-tur=
n-143" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><di=
v class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacin=
g(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-co=
ntent-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--=
thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem]=
 @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-c=
ontent-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messa=
ges focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conve=
rsation-turn relative flex w-full min-w-0 flex-col"><div class=3D"relative =
flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div =
data-message-author-role=3D"user" data-message-id=3D"4642a210-8b7f-446b-bbf=
d-1f7a4fdcaaa8" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-=
full flex-col items-end gap-2 text-start break-words whitespace-normal [.te=
xt-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidd=
en items-end rtl:items-start"><div class=3D"relative max-w-[var(--user-chat=
-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div class=
=3D"whitespace-pre-wrap">will option 1 automatically save the image and cor=
responding label as a pickle file that i can unpickle later?</div></div></d=
iv></div></div></div></div></div></div></article><article class=3D"text-tok=
en-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-144" =
data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div c=
lass=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4=
)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-conte=
nt-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thr=
ead-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[=
64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-cont=
ent-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages=
 focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversa=
tion-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"r=
elative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col gro=
w"><div data-message-author-role=3D"assistant" data-message-id=3D"6c906d70-=
cc03-478f-92b4-37bfbe73bb5b" dir=3D"auto" class=3D"min-h-8 text-message rel=
ative flex w-full flex-col items-end gap-2 text-start break-words whitespac=
e-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><di=
v class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div cla=
ss=3D"markdown prose dark:prose-invert w-full break-words dark"><p data-sta=
rt=3D"0" data-end=3D"93" class=3D"">=E2=9C=85 Yes =E2=80=94 <strong data-st=
art=3D"8" data-end=3D"42">Option 1 absolutely does that.</strong><br data-s=
tart=3D"42" data-end=3D"45">
Let me show you exactly how and what gets saved.</p>
<hr data-start=3D"95" data-end=3D"98" class=3D"">
<h3 data-start=3D"100" data-end=3D"132" class=3D"">=F0=9F=94=81 Recap: What=
 Option 1 does</h3>
<p data-start=3D"134" data-end=3D"164" class=3D"">In the Python keypress sc=
ript:</p>
<pre class=3D"overflow-visible!" data-start=3D"166" data-end=3D"212"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>labels[image_files[idx]] =3D label
</span></span></code></div></div></pre>
<ul data-start=3D"214" data-end=3D"338">
<li data-start=3D"214" data-end=3D"338" class=3D"">
<p data-start=3D"216" data-end=3D"247" class=3D"">It builds a dictionary ma=
pping:</p>
<pre class=3D"overflow-visible!" data-start=3D"250" data-end=3D"338"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">arduino</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><spa=
n><span>{
  </span><span><span class=3D"hljs-string">"image_0001.jpg"</span></span><s=
pan>: </span><span><span class=3D"hljs-string">"face"</span></span><span>,
  </span><span><span class=3D"hljs-string">"image_0002.jpg"</span></span><s=
pan>: </span><span><span class=3D"hljs-string">"nonface"</span></span><span=
>,
  ...
}
</span></span></code></div></div></pre>
</li>
</ul>
<p data-start=3D"340" data-end=3D"372" class=3D"">Then, when you're done la=
beling:</p>
<pre class=3D"overflow-visible!" data-start=3D"373" data-end=3D"448"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">with</span></span><spa=
n> </span><span><span class=3D"hljs-built_in">open</span></span><span>(outp=
ut_file, </span><span><span class=3D"hljs-string">"wb"</span></span><span>)=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> f:
    pickle.dump(labels, f)
</span></span></code></div></div></pre>
<p data-start=3D"450" data-end=3D"573" class=3D"">This saves the entire dic=
tionary as a <code data-start=3D"488" data-end=3D"494">.pkl</code> file (e.=
g., <code data-start=3D"507" data-end=3D"519">labels.pkl</code>) you can la=
ter <strong data-start=3D"535" data-end=3D"555">unpickle and use</strong> i=
n your analysis.</p>
<hr data-start=3D"575" data-end=3D"578" class=3D"">
<h3 data-start=3D"580" data-end=3D"612" class=3D"">=F0=9F=93=A5 To load the=
 pickle later:</h3>
<pre class=3D"overflow-visible!" data-start=3D"614" data-end=3D"750"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> pickle

</span><span><span class=3D"hljs-keyword">with</span></span><span> </span><=
span><span class=3D"hljs-built_in">open</span></span><span>(</span><span><s=
pan class=3D"hljs-string">"labels.pkl"</span></span><span>, </span><span><s=
pan class=3D"hljs-string">"rb"</span></span><span>) </span><span><span clas=
s=3D"hljs-keyword">as</span></span><span> f:
    labels =3D pickle.load(f)

</span><span><span class=3D"hljs-built_in">print</span></span><span>(labels=
[</span><span><span class=3D"hljs-string">"image_0001.jpg"</span></span><sp=
an>])
</span><span><span class=3D"hljs-comment"># =E2=86=92 'face'</span></span><=
span>
</span></span></code></div></div></pre>
<hr data-start=3D"752" data-end=3D"755" class=3D"">
<h3 data-start=3D"757" data-end=3D"769" class=3D"">=F0=9F=A7=A0 Note:</h3>
<ul data-start=3D"771" data-end=3D"1063">
<li data-start=3D"771" data-end=3D"853" class=3D"">
<p data-start=3D"773" data-end=3D"853" class=3D"">This script <strong data-=
start=3D"785" data-end=3D"828">only saves the label + filename mapping</str=
ong>, not the raw image data.</p>
</li>
<li data-start=3D"854" data-end=3D"937" class=3D"">
<p data-start=3D"856" data-end=3D"937" class=3D"">That=E2=80=99s usually fi=
ne, because the image files themselves are still in your folder.</p>
</li>
<li data-start=3D"938" data-end=3D"1063" class=3D"">
<p data-start=3D"940" data-end=3D"1063" class=3D"">If you want to store <st=
rong data-start=3D"961" data-end=3D"993">both the image and the label</stro=
ng> in one pickle per image, I can help you modify the script to do that.</=
p>
</li>
</ul>
<hr data-start=3D"1065" data-end=3D"1068" class=3D"">
<h2 data-start=3D"1070" data-end=3D"1080" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"10=
82" data-end=3D"1341" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1082" data-end=3D"1103"><tr data-start=3D"1082" data-end=3D"=
1103"><th data-start=3D"1082" data-end=3D"1093" data-col-size=3D"sm">Questi=
on</th><th data-start=3D"1093" data-end=3D"1103" data-col-size=3D"md">Answe=
r</th></tr></thead><tbody data-start=3D"1126" data-end=3D"1341"><tr data-st=
art=3D"1126" data-end=3D"1200"><td data-start=3D"1126" data-end=3D"1155" da=
ta-col-size=3D"sm">Does Option 1 save labels?</td><td data-start=3D"1155" d=
ata-end=3D"1200" data-col-size=3D"md">=E2=9C=85 Yes, in a <code data-start=
=3D"1169" data-end=3D"1175">dict</code> saved as a <code data-start=3D"1187=
" data-end=3D"1193">.pkl</code> file</td></tr><tr data-start=3D"1201" data-=
end=3D"1266"><td data-start=3D"1201" data-end=3D"1228" data-col-size=3D"sm"=
>Can I unpickle it later?</td><td data-start=3D"1228" data-end=3D"1266" dat=
a-col-size=3D"md">=E2=9C=85 Absolutely =E2=80=94 use <code data-start=3D"12=
49" data-end=3D"1264">pickle.load()</code></td></tr><tr data-start=3D"1267"=
 data-end=3D"1341"><td data-start=3D"1267" data-end=3D"1294" data-col-size=
=3D"sm">Does it save images too?</td><td data-start=3D"1294" data-end=3D"13=
41" data-col-size=3D"md">=E2=9D=8C Not directly, but filenames point to the=
m</td></tr></tbody></table><div class=3D"sticky end-(--thread-content-margi=
n) h-0 self-end select-none"><div class=3D"absolute end-0 flex items-end" s=
tyle=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button =
class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-sec=
ondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focu=
s-within)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opac=
ity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" =
xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rul=
e=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C2=
0.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15=
.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM=
9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.=
44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 =
4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44=
772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span><=
/div></div></div></div>
<hr data-start=3D"1343" data-end=3D"1346" class=3D"">
<p data-start=3D"1348" data-end=3D"1494" class=3D"">Would you like a versio=
n of the script that also saves each labeled image along with its label in =
individual pickles (i.e., one pickle per image)?</p></div></div></div></div=
></div></div></div></div></article><article class=3D"text-token-text-primar=
y w-full" dir=3D"auto" data-testid=3D"conversation-turn-145" data-scroll-an=
chor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base =
my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thr=
ead-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacin=
g(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-wi=
dth:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-c=
ontent-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) fle=
x-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:out=
line-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative=
 flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap=
-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author-r=
ole=3D"user" data-message-id=3D"cf678b85-dbbc-4750-968a-7e23d8e63eaa" dir=
=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col items=
-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:m=
t-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:it=
ems-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-tok=
en-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wr=
ap">how do we show similarity between neurological data and a cnn output fi=
lter</div></div></div></div></div></div></div></div></div></article><articl=
e class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conv=
ersation-turn-146" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatG=
PT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content=
-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72r=
em]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><=
div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-=
max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex m=
ax-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 =
group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div clas=
s=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agent-tu=
rn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-=
w-full flex-col grow"><div data-message-author-role=3D"assistant" data-mess=
age-id=3D"efbba7d5-3600-4fe6-a905-c957980007ec" dir=3D"auto" class=3D"min-h=
-8 text-message relative flex w-full flex-col items-end gap-2 text-start br=
eak-words whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-=
slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first=
:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-word=
s dark"><p data-start=3D"0" data-end=3D"108" class=3D"">Excellent question=
=E2=80=94and central to modern neuroscience=E2=80=93AI alignment studies. L=
et's walk through it carefully:</p>
<hr data-start=3D"110" data-end=3D"113" class=3D"">
<h2 data-start=3D"115" data-end=3D"126" class=3D"">=F0=9F=A7=A0 Goal:</h2>
<blockquote data-start=3D"127" data-end=3D"252">
<p data-start=3D"129" data-end=3D"252" class=3D""><strong data-start=3D"129=
" data-end=3D"252">Show similarity between neural data (e.g., from macaque =
cortex) and feature representations from a CNN filter or layer.</strong></p=
>
</blockquote>
<hr data-start=3D"254" data-end=3D"257" class=3D"">
<h2 data-start=3D"259" data-end=3D"341" class=3D"">=E2=9C=85 There are two =
<strong data-start=3D"278" data-end=3D"291">main ways</strong> to do this, =
depending on the level of comparison:</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"34=
3" data-end=3D"649" class=3D"w-fit min-w-(--thread-content-width)"><thead d=
ata-start=3D"343" data-end=3D"385"><tr data-start=3D"343" data-end=3D"385">=
<th data-start=3D"343" data-end=3D"364" data-col-size=3D"md">Type of Compar=
ison</th><th data-start=3D"364" data-end=3D"385" data-col-size=3D"md">What =
it tells you</th></tr></thead><tbody data-start=3D"429" data-end=3D"649"><t=
r data-start=3D"429" data-end=3D"511"><td data-start=3D"429" data-end=3D"45=
8" data-col-size=3D"md">=F0=9F=A7=A0=F0=9F=94=81=F0=9F=A7=A0 <strong data-s=
tart=3D"438" data-end=3D"457">Neural encoding</strong></td><td data-start=
=3D"458" data-end=3D"511" data-col-size=3D"md">How well CNN features <stron=
g data-start=3D"482" data-end=3D"509">predict neural activity</strong></td>=
</tr><tr data-start=3D"512" data-end=3D"649"><td data-start=3D"512" data-en=
d=3D"568" data-col-size=3D"md">=F0=9F=94=81=F0=9F=93=90=F0=9F=94=81 <strong=
 data-start=3D"521" data-end=3D"567">Representational Similarity Analysis (=
RSA)</strong></td><td data-start=3D"568" data-end=3D"649" data-col-size=3D"=
md">How <strong data-start=3D"574" data-end=3D"598">structurally similar</s=
trong> the brain and CNN organize image representations</td></tr></tbody></=
table><div class=3D"sticky end-(--thread-content-margin) h-0 self-end selec=
t-none"><div class=3D"absolute end-0 flex items-end" style=3D"height: 32.89=
06px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-=
primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-s=
m p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:pointer-ev=
ents-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"=
24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w=
3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-ru=
le=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 2=
2 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34=
315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8=
.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H=
10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.4=
4772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z=
" fill=3D"currentColor"></path></svg></button></span></div></div></div></di=
v>
<hr data-start=3D"651" data-end=3D"654" class=3D"">
<h1 data-start=3D"656" data-end=3D"715" class=3D"">=E2=9C=B3=EF=B8=8F METHO=
D 1: <strong data-start=3D"671" data-end=3D"696">Neural Encoding Model</str=
ong> (Prediction-based)</h1>
<h3 data-start=3D"717" data-end=3D"726" class=3D"">Goal:</h3>
<blockquote data-start=3D"727" data-end=3D"789">
<p data-start=3D"729" data-end=3D"789" class=3D"">Use CNN features to <stro=
ng data-start=3D"749" data-end=3D"760">predict</strong> the firing rate of =
a neuron.</p>
</blockquote>
<h3 data-start=3D"791" data-end=3D"801" class=3D"">Steps:</h3>
<ol data-start=3D"802" data-end=3D"1173">
<li data-start=3D"802" data-end=3D"831" class=3D"">
<p data-start=3D"805" data-end=3D"831" class=3D""><strong data-start=3D"805=
" data-end=3D"815">Input:</strong> A set of images</p>
</li>
<li data-start=3D"832" data-end=3D"1016" class=3D"">
<p data-start=3D"835" data-end=3D"854" class=3D""><strong data-start=3D"835=
" data-end=3D"854">For each image:</strong></p>
<ul data-start=3D"858" data-end=3D"1016">
<li data-start=3D"858" data-end=3D"930" class=3D"">
<p data-start=3D"860" data-end=3D"930" class=3D"">Get CNN feature vector (f=
rom a specific <strong data-start=3D"900" data-end=3D"910">filter</strong>,=
 layer, or pooling)</p>
</li>
<li data-start=3D"934" data-end=3D"1016" class=3D"">
<p data-start=3D"936" data-end=3D"1016" class=3D"">Get the corresponding ne=
uron=E2=80=99s firing rate (averaged across fixations or trials)</p>
</li>
</ul>
</li>
<li data-start=3D"1017" data-end=3D"1129" class=3D"">
<p data-start=3D"1020" data-end=3D"1129" class=3D""><strong data-start=3D"1=
020" data-end=3D"1037">Train a model</strong>:<br data-start=3D"1038" data-=
end=3D"1041">
Fit a regression from CNN features =E2=86=92 neural firing rate<br data-sta=
rt=3D"1099" data-end=3D"1102">
(e.g., Ridge regression)</p>
</li>
<li data-start=3D"1130" data-end=3D"1173" class=3D"">
<p data-start=3D"1133" data-end=3D"1173" class=3D""><strong data-start=3D"1=
133" data-end=3D"1145">Evaluate</strong> on held-out data (e.g., R=C2=B2)</=
p>
</li>
</ol>
<h3 data-start=3D"1175" data-end=3D"1185" class=3D"">Tools:</h3>
<ul data-start=3D"1186" data-end=3D"1338">
<li data-start=3D"1186" data-end=3D"1233" class=3D"">
<p data-start=3D"1188" data-end=3D"1233" class=3D"">Scripts like <code data=
-start=3D"1201" data-end=3D"1233">script_6a_model_perf_map.ipynb</code></p>
</li>
<li data-start=3D"1234" data-end=3D"1290" class=3D"">
<p data-start=3D"1236" data-end=3D"1290" class=3D"">Regression models (e.g.=
, <code data-start=3D"1261" data-end=3D"1289">sklearn.linear_model.Ridge</c=
ode>)</p>
</li>
<li data-start=3D"1291" data-end=3D"1338" class=3D"">
<p data-start=3D"1293" data-end=3D"1338" class=3D"">CNN outputs from PyTorc=
h or TensorFlow models</p>
</li>
</ul>
<h3 data-start=3D"1340" data-end=3D"1358" class=3D"">If R=C2=B2 is high:</h=
3>
<p data-start=3D"1359" data-end=3D"1424" class=3D"">=E2=86=92 That CNN filt=
er/layer is <strong data-start=3D"1386" data-end=3D"1400">explaining</stron=
g> what the neuron encodes</p>
<hr data-start=3D"1426" data-end=3D"1429" class=3D"">
<h1 data-start=3D"1431" data-end=3D"1492" class=3D"">=E2=9C=B3=EF=B8=8F MET=
HOD 2: <strong data-start=3D"1446" data-end=3D"1492">RSA =E2=80=93 Represen=
tational Similarity Analysis</strong></h1>
<h3 data-start=3D"1494" data-end=3D"1503" class=3D"">Goal:</h3>
<blockquote data-start=3D"1504" data-end=3D"1563">
<p data-start=3D"1506" data-end=3D"1563" class=3D"">Compare <strong data-st=
art=3D"1514" data-end=3D"1539">similarity structures</strong> across a set =
of images:</p>
</blockquote>
<ul data-start=3D"1564" data-end=3D"1645">
<li data-start=3D"1564" data-end=3D"1613" class=3D"">
<p data-start=3D"1566" data-end=3D"1613" class=3D"">How similarly does the =
CNN treat image A vs. B?</p>
</li>
<li data-start=3D"1614" data-end=3D"1645" class=3D"">
<p data-start=3D"1616" data-end=3D"1645" class=3D"">How similarly does the =
brain?</p>
</li>
</ul>
<h3 data-start=3D"1647" data-end=3D"1657" class=3D"">Steps:</h3>
<ol data-start=3D"1658" data-end=3D"2110">
<li data-start=3D"1658" data-end=3D"1718" class=3D"">
<p data-start=3D"1661" data-end=3D"1718" class=3D"">Pick a set of images (e=
.g., 144 images shown to a monkey)</p>
</li>
<li data-start=3D"1719" data-end=3D"1956" class=3D"">
<p data-start=3D"1722" data-end=3D"1730" class=3D"">Compute:</p>
<ul data-start=3D"1734" data-end=3D"1956">
<li data-start=3D"1734" data-end=3D"1864" class=3D"">
<p data-start=3D"1736" data-end=3D"1793" class=3D"">A <strong data-start=3D=
"1738" data-end=3D"1792">neural representational dissimilarity matrix (RDM)=
</strong>:</p>
<ul data-start=3D"1799" data-end=3D"1864">
<li data-start=3D"1799" data-end=3D"1864" class=3D"">
<p data-start=3D"1801" data-end=3D"1864" class=3D"">Each entry =3D dissimil=
arity in firing rate between image i and j</p>
</li>
</ul>
</li>
<li data-start=3D"1868" data-end=3D"1956" class=3D"">
<p data-start=3D"1870" data-end=3D"1884" class=3D"">A <strong data-start=3D=
"1872" data-end=3D"1883">CNN RDM</strong>:</p>
<ul data-start=3D"1890" data-end=3D"1956">
<li data-start=3D"1890" data-end=3D"1956" class=3D"">
<p data-start=3D"1892" data-end=3D"1956" class=3D"">Each entry =3D dissimil=
arity in CNN features between image i and j</p>
</li>
</ul>
</li>
</ul>
</li>
<li data-start=3D"1957" data-end=3D"2063" class=3D"">
<p data-start=3D"1960" data-end=3D"2005" class=3D"">Compute <strong data-st=
art=3D"1968" data-end=3D"1983">correlation</strong> between the two RDMs:</=
p>
<ul data-start=3D"2009" data-end=3D"2063">
<li data-start=3D"2009" data-end=3D"2063" class=3D"">
<p data-start=3D"2011" data-end=3D"2063" class=3D"">Pearson / Spearman corr=
elation of the upper triangle</p>
</li>
</ul>
</li>
<li data-start=3D"2064" data-end=3D"2110" class=3D"">
<p data-start=3D"2067" data-end=3D"2110" class=3D"">High correlation =E2=87=
=92 Similar feature geometry</p>
</li>
</ol>
<h3 data-start=3D"2112" data-end=3D"2122" class=3D"">Tools:</h3>
<ul data-start=3D"2123" data-end=3D"2256">
<li data-start=3D"2123" data-end=3D"2156" class=3D"">
<p data-start=3D"2125" data-end=3D"2156" class=3D""><code data-start=3D"212=
5" data-end=3D"2156">script_6b_feat_corr_map.ipynb</code></p>
</li>
<li data-start=3D"2157" data-end=3D"2216" class=3D"">
<p data-start=3D"2159" data-end=3D"2216" class=3D""><code data-start=3D"215=
9" data-end=3D"2189">scipy.spatial.distance.pdist</code> and <code data-sta=
rt=3D"2194" data-end=3D"2206">squareform</code> (for RDM)</p>
</li>
<li data-start=3D"2217" data-end=3D"2256" class=3D"">
<p data-start=3D"2219" data-end=3D"2256" class=3D""><code data-start=3D"221=
9" data-end=3D"2242">scipy.stats.spearmanr</code> or <code data-start=3D"22=
46" data-end=3D"2256">pearsonr</code></p>
</li>
</ul>
<hr data-start=3D"2258" data-end=3D"2261" class=3D"">
<h2 data-start=3D"2263" data-end=3D"2293" class=3D"">=F0=9F=91=81=EF=B8=8F=
=E2=80=8D=F0=9F=97=A8=EF=B8=8F Visual Explanation:</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"22=
95" data-end=3D"2565" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2295" data-end=3D"2348"><tr data-start=3D"2295" data-end=3D"=
2348"><th data-start=3D"2295" data-end=3D"2303" data-col-size=3D"sm">Image<=
/th><th data-start=3D"2303" data-end=3D"2331" data-col-size=3D"sm">CNN (e.g=
. ResNet Layer 3)</th><th data-start=3D"2331" data-end=3D"2348" data-col-si=
ze=3D"sm">Monkey Neuron</th></tr></thead><tbody data-start=3D"2403" data-en=
d=3D"2565"><tr data-start=3D"2403" data-end=3D"2456"><td data-start=3D"2403=
" data-end=3D"2410" data-col-size=3D"sm">=F0=9F=90=B5</td><td data-start=3D=
"2410" data-end=3D"2439" data-col-size=3D"sm">=E2=86=92 Feature vector A</t=
d><td data-start=3D"2439" data-end=3D"2456" data-col-size=3D"sm">=E2=86=92 =
Fires 10 Hz</td></tr><tr data-start=3D"2457" data-end=3D"2510"><td data-sta=
rt=3D"2457" data-end=3D"2464" data-col-size=3D"sm">=F0=9F=8D=8E</td><td dat=
a-start=3D"2464" data-end=3D"2493" data-col-size=3D"sm">=E2=86=92 Feature v=
ector B</td><td data-start=3D"2493" data-end=3D"2510" data-col-size=3D"sm">=
=E2=86=92 Fires 2 Hz</td></tr><tr data-start=3D"2511" data-end=3D"2565"><td=
 data-start=3D"2511" data-end=3D"2519" data-col-size=3D"sm">=F0=9F=91=81=EF=
=B8=8F</td><td data-start=3D"2519" data-end=3D"2548" data-col-size=3D"sm">=
=E2=86=92 Feature vector C</td><td data-start=3D"2548" data-end=3D"2565" da=
ta-col-size=3D"sm">=E2=86=92 Fires 9 Hz</td></tr></tbody></table><div class=
=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"><div cla=
ss=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary hover:bg=
-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 transition=
-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-none group-=
[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.656=
9 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569=
 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H=
19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4=
.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C=
14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curren=
tColor"></path></svg></button></span></div></div></div></div>
<ul data-start=3D"2567" data-end=3D"2699">
<li data-start=3D"2567" data-end=3D"2619" class=3D"">
<p data-start=3D"2569" data-end=3D"2619" class=3D"">Compute similarity of r=
esponses across image pairs</p>
</li>
<li data-start=3D"2620" data-end=3D"2699" class=3D"">
<p data-start=3D"2622" data-end=3D"2699" class=3D"">Are the <strong data-st=
art=3D"2630" data-end=3D"2654">relative differences</strong> in responses p=
reserved across CNN and brain?</p>
</li>
</ul>
<hr data-start=3D"2701" data-end=3D"2704" class=3D"">
<h2 data-start=3D"2706" data-end=3D"2721" class=3D"">=F0=9F=A7=A0 Advanced:=
</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"27=
23" data-end=3D"3025" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2723" data-end=3D"2743"><tr data-start=3D"2723" data-end=3D"=
2743"><th data-start=3D"2723" data-end=3D"2730" data-col-size=3D"sm">Task</=
th><th data-start=3D"2730" data-end=3D"2743" data-col-size=3D"sm">Technique=
</th></tr></thead><tbody data-start=3D"2765" data-end=3D"3025"><tr data-sta=
rt=3D"2765" data-end=3D"2839"><td data-start=3D"2765" data-end=3D"2807" dat=
a-col-size=3D"sm">Align CNN filters to individual neurons</td><td data-star=
t=3D"2807" data-end=3D"2839" data-col-size=3D"sm">Encoding + feature select=
ion</td></tr><tr data-start=3D"2840" data-end=3D"2908"><td data-start=3D"28=
40" data-end=3D"2867" data-col-size=3D"sm">Compare population codes</td><td=
 data-start=3D"2867" data-end=3D"2908" data-col-size=3D"sm">RSA or Canonica=
l Correlation Analysis</td></tr><tr data-start=3D"2909" data-end=3D"2964"><=
td data-start=3D"2909" data-end=3D"2937" data-col-size=3D"sm">Visualize CNN=
 unit tuning</td><td data-start=3D"2937" data-end=3D"2964" data-col-size=3D=
"sm">Activation maximization</td></tr><tr data-start=3D"2965" data-end=3D"3=
025"><td data-start=3D"2965" data-end=3D"2994" data-col-size=3D"sm">Compare=
 attention patterns</td><td data-start=3D"2994" data-end=3D"3025" data-col-=
size=3D"sm">Grad-CAM vs. gaze fixations</td></tr></tbody></table><div class=
=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"><div cla=
ss=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary hover:bg=
-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 transition=
-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-none group-=
[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.656=
9 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569=
 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H=
19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4=
.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C=
14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curren=
tColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"3027" data-end=3D"3030" class=3D"">
<h2 data-start=3D"3032" data-end=3D"3042" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"30=
44" data-end=3D"3359" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3044" data-end=3D"3078"><tr data-start=3D"3044" data-end=3D"=
3078"><th data-start=3D"3044" data-end=3D"3055" data-col-size=3D"sm">Approa=
ch</th><th data-start=3D"3055" data-end=3D"3066" data-col-size=3D"md">Key I=
dea</th><th data-start=3D"3066" data-end=3D"3078" data-col-size=3D"md">Use =
When</th></tr></thead><tbody data-start=3D"3114" data-end=3D"3359"><tr data=
-start=3D"3114" data-end=3D"3237"><td data-start=3D"3114" data-end=3D"3135"=
 data-col-size=3D"sm"><strong data-start=3D"3116" data-end=3D"3134">Encodin=
g model</strong></td><td data-start=3D"3135" data-end=3D"3179" data-col-siz=
e=3D"md">Can CNN features <strong data-start=3D"3154" data-end=3D"3177">pre=
dict firing rate</strong>?</td><td data-start=3D"3179" data-end=3D"3237" da=
ta-col-size=3D"md">You want to match individual neurons to model features</=
td></tr><tr data-start=3D"3238" data-end=3D"3359"><td data-start=3D"3238" d=
ata-end=3D"3248" data-col-size=3D"sm"><strong data-start=3D"3240" data-end=
=3D"3247">RSA</strong></td><td data-start=3D"3248" data-end=3D"3296" data-c=
ol-size=3D"md">Do CNN and brain encode <strong data-start=3D"3274" data-end=
=3D"3294">images similarly</strong>?</td><td data-start=3D"3296" data-end=
=3D"3359" data-col-size=3D"md">You want to compare <strong data-start=3D"33=
18" data-end=3D"3339">overall structure</strong> of representation</td></tr=
></tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 sel=
f-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D"he=
ight: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"b=
g-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-=
1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]=
:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><sv=
g width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"h=
ttp://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"eveno=
dd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 2=
2 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 1=
4 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.=
6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5=
523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 =
19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.552=
3 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div=
></div></div>
<hr data-start=3D"3361" data-end=3D"3364" class=3D"">
<p data-start=3D"3366" data-end=3D"3509" class=3D"">Would you like code to =
compare RSA between CNN layer and neural population, or to run a basic enco=
ding model for one neuron vs. one CNN filter?</p></div></div></div><div dat=
a-message-author-role=3D"assistant" data-message-id=3D"dacd4636-0632-43ad-a=
14d-3f672eb7276a" dir=3D"auto" class=3D"min-h-8 text-message relative flex =
w-full flex-col items-end gap-2 text-start break-words whitespace-normal [.=
text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"=
flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markd=
own prose dark:prose-invert w-full break-words dark"><p data-start=3D"0" da=
ta-end=3D"140" class=3D"">Excellent question=E2=80=94and the right answer d=
epends on your <strong data-start=3D"56" data-end=3D"65">goals</strong>, yo=
ur <strong data-start=3D"72" data-end=3D"92">existing dataset</strong>, and=
 <strong data-start=3D"98" data-end=3D"113">how precise</strong> your label=
ing needs to be.</p>
<p data-start=3D"142" data-end=3D"175" class=3D"">Let=E2=80=99s walk throug=
h the reasoning.</p>
<hr data-start=3D"177" data-end=3D"180" class=3D"">
<h2 data-start=3D"182" data-end=3D"212" class=3D"">=F0=9F=A7=A0 First, what=
=E2=80=99s your goal?</h2>
<p data-start=3D"214" data-end=3D"284" class=3D"">If you're working on <str=
ong data-start=3D"235" data-end=3D"260">model=E2=80=93brain alignment</stro=
ng>, your goal might be to:</p>
<ul data-start=3D"285" data-end=3D"500">
<li data-start=3D"285" data-end=3D"346" class=3D"">
<p data-start=3D"287" data-end=3D"346" class=3D"">Identify <strong data-sta=
rt=3D"296" data-end=3D"327">face vs. non-face responses</strong> in macaque=
 neurons</p>
</li>
<li data-start=3D"347" data-end=3D"412" class=3D"">
<p data-start=3D"349" data-end=3D"412" class=3D"">Train or evaluate encodin=
g models using <strong data-start=3D"389" data-end=3D"412">semantic categor=
ies</strong></p>
</li>
<li data-start=3D"413" data-end=3D"500" class=3D"">
<p data-start=3D"415" data-end=3D"500" class=3D"">Use labels to structure o=
r interpret <strong data-start=3D"452" data-end=3D"459">RSA</strong>, <stro=
ng data-start=3D"461" data-end=3D"473">decoding</strong>, or <strong data-s=
tart=3D"478" data-end=3D"500">neural selectivity</strong></p>
</li>
</ul>
<p data-start=3D"502" data-end=3D"526" class=3D"">So the real question is:<=
/p>
<blockquote data-start=3D"527" data-end=3D"639">
<p data-start=3D"529" data-end=3D"639" class=3D"">Are your current image st=
imuli already close to what you need=E2=80=94and is it worth the time to la=
bel them manually?</p>
</blockquote>
<hr data-start=3D"641" data-end=3D"644" class=3D"">
<h2 data-start=3D"646" data-end=3D"710" class=3D"">=E2=9C=85 Option 1: <str=
ong data-start=3D"661" data-end=3D"710">Use your existing stimuli and hand-=
label them</strong></h2>
<h3 data-start=3D"712" data-end=3D"738" class=3D"">When this makes sense:</=
h3>
<ul data-start=3D"739" data-end=3D"1104">
<li data-start=3D"739" data-end=3D"823" class=3D"">
<p data-start=3D"741" data-end=3D"823" class=3D"">You=E2=80=99re already wo=
rking with a curated set of images shown to the monkey (you are!)</p>
</li>
<li data-start=3D"824" data-end=3D"955" class=3D"">
<p data-start=3D"826" data-end=3D"955" class=3D"">You want labels that are =
<strong data-start=3D"851" data-end=3D"890">tightly aligned with the experi=
ment</strong> (e.g., face images shown to the monkey during neural recordin=
gs)</p>
</li>
<li data-start=3D"956" data-end=3D"1021" class=3D"">
<p data-start=3D"958" data-end=3D"1021" class=3D"">The number of images is =
<strong data-start=3D"982" data-end=3D"996">manageable</strong> (e.g., =E2=
=89=A4 a few thousand)</p>
</li>
<li data-start=3D"1022" data-end=3D"1104" class=3D"">
<p data-start=3D"1024" data-end=3D"1104" class=3D"">You want to compare neu=
ral responses <strong data-start=3D"1061" data-end=3D"1079">trial by trial<=
/strong>, using your real stimuli</p>
</li>
</ul>
<h3 data-start=3D"1106" data-end=3D"1115" class=3D"">Pros:</h3>
<p data-start=3D"1116" data-end=3D"1312" class=3D"">=E2=9C=94=EF=B8=8F Labe=
ls are accurate and context-matched<br data-start=3D"1158" data-end=3D"1161=
">
=E2=9C=94=EF=B8=8F Stimuli match the <strong data-start=3D"1182" data-end=
=3D"1198">exact trials</strong> that evoked neural data<br data-start=3D"12=
22" data-end=3D"1225">
=E2=9C=94=EF=B8=8F You retain full control over category granularity (e.g.,=
 human face vs. monkey face)</p>
<h3 data-start=3D"1314" data-end=3D"1323" class=3D"">Cons:</h3>
<p data-start=3D"1324" data-end=3D"1481" class=3D"">=E2=9D=8C Manual labeli=
ng is time-consuming<br data-start=3D"1359" data-end=3D"1362">
=E2=9D=8C May need visual inspection of ambiguous cases<br data-start=3D"14=
09" data-end=3D"1412">
=E2=9D=8C No rich annotations unless you generate them (e.g., bounding boxe=
s)</p>
<hr data-start=3D"1483" data-end=3D"1486" class=3D"">
<h2 data-start=3D"1488" data-end=3D"1532" class=3D"">=E2=9C=85 Option 2: <s=
trong data-start=3D"1503" data-end=3D"1532">Use a pre-labeled dataset</stro=
ng></h2>
<h3 data-start=3D"1534" data-end=3D"1560" class=3D"">When this makes sense:=
</h3>
<ul data-start=3D"1561" data-end=3D"1861">
<li data-start=3D"1561" data-end=3D"1638" class=3D"">
<p data-start=3D"1563" data-end=3D"1638" class=3D"">You're prototyping or t=
raining a model <strong data-start=3D"1602" data-end=3D"1619">independently=
</strong> of the neural data</p>
</li>
<li data-start=3D"1639" data-end=3D"1708" class=3D"">
<p data-start=3D"1641" data-end=3D"1708" class=3D"">You need <strong data-s=
tart=3D"1650" data-end=3D"1668">a large number</strong> of diverse examples=
 (e.g., 10k+ images)</p>
</li>
<li data-start=3D"1709" data-end=3D"1784" class=3D"">
<p data-start=3D"1711" data-end=3D"1784" class=3D"">You're training a class=
ifier or pretraining a model (e.g., face detector)</p>
</li>
<li data-start=3D"1785" data-end=3D"1861" class=3D"">
<p data-start=3D"1787" data-end=3D"1861" class=3D"">You're doing DNN compar=
isons but <strong data-start=3D"1820" data-end=3D"1861">not directly tied t=
o your monkey data</strong></p>
</li>
</ul>
<h3 data-start=3D"1863" data-end=3D"1872" class=3D"">Pros:</h3>
<p data-start=3D"1873" data-end=3D"2015" class=3D"">=E2=9C=94=EF=B8=8F Save=
s time<br data-start=3D"1886" data-end=3D"1889">
=E2=9C=94=EF=B8=8F Comes with standardized labels (e.g., ImageNet, CelebA, =
COCO)<br data-start=3D"1953" data-end=3D"1956">
=E2=9C=94=EF=B8=8F Often includes bounding boxes, face parts, emotion, etc.=
</p>
<h3 data-start=3D"2017" data-end=3D"2026" class=3D"">Cons:</h3>
<p data-start=3D"2027" data-end=3D"2198" class=3D"">=E2=9D=8C Not the same =
images as the ones shown to the monkey<br data-start=3D"2080" data-end=3D"2=
083">
=E2=9D=8C Hard to link to neural responses<br data-start=3D"2117" data-end=
=3D"2120">
=E2=9D=8C Might include label bias or semantic drift (e.g., =E2=80=9Cselfie=
=E2=80=9D vs =E2=80=9Cmonkey face=E2=80=9D)</p>
<hr data-start=3D"2200" data-end=3D"2203" class=3D"">
<h2 data-start=3D"2205" data-end=3D"2251" class=3D"">=F0=9F=8E=AF My recomm=
endation (based on your setup):</h2>
<p data-start=3D"2253" data-end=3D"2412" class=3D"">You=E2=80=99re working =
with macaque neural data aligned to <strong data-start=3D"2304" data-end=3D=
"2337">a known, fixed set of stimuli</strong> (likely 144 or 288 images per=
 session). That=E2=80=99s a <strong data-start=3D"2387" data-end=3D"2407">p=
erfect use case</strong> for:</p>
<blockquote data-start=3D"2414" data-end=3D"2521">
<p data-start=3D"2416" data-end=3D"2521" class=3D"">=E2=9C=85 <strong data-=
start=3D"2418" data-end=3D"2457">Hand-labeling your existing stimuli</stron=
g>=E2=80=94once, carefully=E2=80=94and reusing that for all neural alignmen=
t work.</p>
</blockquote>
<p data-start=3D"2523" data-end=3D"2533" class=3D"">You could:</p>
<ul data-start=3D"2534" data-end=3D"2731">
<li data-start=3D"2534" data-end=3D"2626" class=3D"">
<p data-start=3D"2536" data-end=3D"2626" class=3D"">Label all images as <co=
de data-start=3D"2556" data-end=3D"2570">'human_face'</code>, <code data-st=
art=3D"2572" data-end=3D"2587">'monkey_face'</code>, <code data-start=3D"25=
89" data-end=3D"2598">'scene'</code>, <code data-start=3D"2600" data-end=3D=
"2610">'object'</code>, <code data-start=3D"2612" data-end=3D"2620">'text'<=
/code>, etc.</p>
</li>
<li data-start=3D"2627" data-end=3D"2689" class=3D"">
<p data-start=3D"2629" data-end=3D"2689" class=3D"">Save the mapping as <co=
de data-start=3D"2649" data-end=3D"2675">image_id_to_category.pkl</code> (o=
r JSON/CSV)</p>
</li>
<li data-start=3D"2690" data-end=3D"2731" class=3D"">
<p data-start=3D"2692" data-end=3D"2731" class=3D"">Reuse it in <code data-=
start=3D"2704" data-end=3D"2708">1a</code>, <code data-start=3D"2710" data-=
end=3D"2714">6a</code>, <code data-start=3D"2716" data-end=3D"2720">7a</cod=
e>, RSA, etc.</p>
</li>
</ul>
<hr data-start=3D"2733" data-end=3D"2736" class=3D"">
<h2 data-start=3D"2738" data-end=3D"2748" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"27=
50" data-end=3D"3101" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2750" data-end=3D"2776"><tr data-start=3D"2750" data-end=3D"=
2776"><th data-start=3D"2750" data-end=3D"2761" data-col-size=3D"md">Use ca=
se</th><th data-start=3D"2761" data-end=3D"2776" data-col-size=3D"md">Best =
option</th></tr></thead><tbody data-start=3D"2804" data-end=3D"3101"><tr da=
ta-start=3D"2804" data-end=3D"2866"><td data-start=3D"2804" data-end=3D"283=
0" data-col-size=3D"md">Aligning to neural data</td><td data-start=3D"2830"=
 data-end=3D"2866" data-col-size=3D"md">=E2=9C=85 Hand-label your actual st=
imuli</td></tr><tr data-start=3D"2867" data-end=3D"2937"><td data-start=3D"=
2867" data-end=3D"2901" data-col-size=3D"md">Training or pretraining a mode=
l</td><td data-start=3D"2901" data-end=3D"2937" data-col-size=3D"md">=E2=9C=
=85 Use large pre-labeled datasets</td></tr><tr data-start=3D"2938" data-en=
d=3D"3006"><td data-start=3D"2938" data-end=3D"2964" data-col-size=3D"md">Y=
ou have 100=E2=80=93500 images</td><td data-start=3D"2964" data-end=3D"3006=
" data-col-size=3D"md">=E2=9C=85 Label by hand=E2=80=94it=E2=80=99s fast an=
d pays off</td></tr><tr data-start=3D"3007" data-end=3D"3101"><td data-star=
t=3D"3007" data-end=3D"3054" data-col-size=3D"md">You need bounding boxes o=
r part segmentation</td><td data-start=3D"3054" data-end=3D"3101" data-col-=
size=3D"md">=F0=9F=9F=A1 Use pre-labeled if your task requires it</td></tr>=
</tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 self=
-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D"hei=
ght: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg=
-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1=
 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:=
pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg=
 width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"ht=
tp://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22=
 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14=
 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6=
569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.55=
23 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 1=
9.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523=
 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div>=
</div></div>
<hr data-start=3D"3103" data-end=3D"3106" class=3D"">
<p data-start=3D"3108" data-end=3D"3243" class=3D"">Would you like a labeli=
ng script that auto-loads your stimulus images (by MD5) and lets you assign=
 categories via keypress or dropdown?</p></div></div></div></div></div></di=
v></div></div></article><article class=3D"text-token-text-primary w-full" d=
ir=3D"auto" data-testid=3D"conversation-turn-147" data-scroll-anchor=3D"fal=
se"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-=
auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content=
-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(=
--thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem] =
@[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-=
width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-ba=
se gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden=
" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-ful=
l min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div cl=
ass=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"user=
" data-message-id=3D"e2dcc447-1891-4003-b0ca-6e84ddfacc92" dir=3D"auto" cla=
ss=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 te=
xt-start break-words whitespace-normal [.text-message+&amp;]:mt-5"><div cla=
ss=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><d=
iv class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-su=
rface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">we have b=
ounding boxes for the face in our Stimuli images that were shown to the mon=
key and we have a model that is classifying the data as face / non-face. We=
 want to create a RDM to show that the free-viewing electrophysiological da=
ta for a macaque is similar to our CNN model. </div></div></div></div></div=
></div></div></div></div></article><article class=3D"text-token-text-primar=
y w-full" dir=3D"auto" data-testid=3D"conversation-turn-148" data-scroll-an=
chor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-b=
ase my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[-=
-thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--sp=
acing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-ma=
x-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thre=
ad-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width)=
 flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible=
:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn rela=
tive flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative flex-c=
ol gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-m=
essage-author-role=3D"assistant" data-message-id=3D"ad5eeb02-feab-4258-8793=
-f5d2b6e85ff7" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-f=
ull flex-col items-end gap-2 text-start break-words whitespace-normal [.tex=
t-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"fle=
x w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown=
 prose dark:prose-invert w-full break-words dark"><p data-start=3D"0" data-=
end=3D"175" class=3D"">Perfect=E2=80=94you=E2=80=99re in a fantastic positi=
on to build a compelling <strong data-start=3D"61" data-end=3D"107">Represe=
ntational Similarity Analysis (RSA)</strong> between your <strong data-star=
t=3D"121" data-end=3D"143">monkey neural data</strong> and your <strong dat=
a-start=3D"153" data-end=3D"174">CNN model outputs</strong>.</p>
<p data-start=3D"177" data-end=3D"188" class=3D"">You=E2=80=99ve got:</p>
<p data-start=3D"190" data-end=3D"515" class=3D"">=E2=9C=85 Stimulus images=
 (shown to the monkey)<br data-start=3D"229" data-end=3D"232">
=E2=9C=85 Bounding boxes for <strong data-start=3D"253" data-end=3D"269">fa=
ce regions</strong><br data-start=3D"269" data-end=3D"272">
=E2=9C=85 Electrophysiological recordings during <strong data-start=3D"313"=
 data-end=3D"329">free viewing</strong><br data-start=3D"329" data-end=3D"3=
32">
=E2=9C=85 A <strong data-start=3D"336" data-end=3D"354">CNN classifier</str=
ong> that labels images as <strong data-start=3D"377" data-end=3D"396">face=
 / non-face</strong><br data-start=3D"396" data-end=3D"399">
=E2=9C=85 A goal to show similarity in <strong data-start=3D"430" data-end=
=3D"460">representational structure</strong> via an <strong data-start=3D"4=
68" data-end=3D"515">RDM (Representational Dissimilarity Matrix)</strong></=
p>
<p data-start=3D"517" data-end=3D"590" class=3D"">Let=E2=80=99s walk throug=
h a clear plan to get this working from start to finish.</p>
<hr data-start=3D"592" data-end=3D"595" class=3D"">
<h2 data-start=3D"597" data-end=3D"635" class=3D"">=F0=9F=A7=AD Step-by-Ste=
p Plan: CNN=E2=80=93Brain RSA</h2>
<hr data-start=3D"637" data-end=3D"640" class=3D"">
<h3 data-start=3D"642" data-end=3D"693" class=3D"">=F0=9F=94=81 <strong dat=
a-start=3D"649" data-end=3D"693">1. Get neural response vectors per image</=
strong></h3>
<p data-start=3D"695" data-end=3D"798" class=3D"">You want one <strong data=
-start=3D"708" data-end=3D"728">vector per image</strong> that summarizes t=
he neural population=E2=80=99s response. Based on your data:</p>
<h4 data-start=3D"800" data-end=3D"843" class=3D"">=F0=9F=A7=A0 Option A: F=
iring rates across units</h4>
<pre class=3D"overflow-visible!" data-start=3D"844" data-end=3D"1107"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-comment"># For each image:</spa=
n></span><span>
</span><span><span class=3D"hljs-comment"># - Average neural responses acro=
ss fixations (e.g., only fix0)</span></span><span>
</span><span><span class=3D"hljs-comment"># - Across trials, if the same im=
age is repeated</span></span><span>
</span><span><span class=3D"hljs-comment"># - Across time window (e.g., 50=
=E2=80=93250ms after fixation)</span></span><span>

brain_rdm_vectors[img_id] =3D np.mean(firing_rates_across_units)
</span></span></code></div></div></pre>
<p data-start=3D"1109" data-end=3D"1124" class=3D"">Each vector is:</p>
<ul data-start=3D"1125" data-end=3D"1180">
<li data-start=3D"1125" data-end=3D"1145" class=3D"">
<p data-start=3D"1127" data-end=3D"1145" class=3D"">Shape: <code data-start=
=3D"1134" data-end=3D"1145">[n_units]</code></p>
</li>
<li data-start=3D"1146" data-end=3D"1180" class=3D"">
<p data-start=3D"1148" data-end=3D"1180" class=3D"">One per image (or per c=
ondition)</p>
</li>
</ul>
<hr data-start=3D"1182" data-end=3D"1185" class=3D"">
<h3 data-start=3D"1187" data-end=3D"1234" class=3D"">=F0=9F=A7=A0 <strong d=
ata-start=3D"1194" data-end=3D"1234">2. Get CNN feature vectors per image</=
strong></h3>
<p data-start=3D"1236" data-end=3D"1307" class=3D"">Since you=E2=80=99ve al=
ready extracted patch-level and full-image ViT features:</p>
<h4 data-start=3D"1309" data-end=3D"1328" class=3D"">=E2=9C=85 Recommended:=
</h4>
<ul data-start=3D"1329" data-end=3D"1447">
<li data-start=3D"1329" data-end=3D"1387" class=3D"">
<p data-start=3D"1331" data-end=3D"1387" class=3D"">Use <strong data-start=
=3D"1335" data-end=3D"1387">patch features centered on the face bounding bo=
x</strong></p>
</li>
<li data-start=3D"1388" data-end=3D"1447" class=3D"">
<p data-start=3D"1390" data-end=3D"1447" class=3D"">Or average all patches =
that overlap with the bounding box</p>
</li>
</ul>
<pre class=3D"overflow-visible!" data-start=3D"1449" data-end=3D"1598"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>cnn_vector =3D get_patch_features_within_bbox(image=
_md5, bbox, feats_patch_grid)
cnn_vectors[img_id] =3D cnn_vector  </span><span><span class=3D"hljs-commen=
t"># shape: [feature_dim]</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"1600" data-end=3D"1679" class=3D"">Or use the full-image e=
mbedding if you're comparing <strong data-start=3D"1652" data-end=3D"1678">=
global representations</strong>:</p>
<pre class=3D"overflow-visible!" data-start=3D"1680" data-end=3D"1732"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>cnn_vector =3D feats_full_image[img_idx]
</span></span></code></div></div></pre>
<hr data-start=3D"1734" data-end=3D"1737" class=3D"">
<h3 data-start=3D"1739" data-end=3D"1807" class=3D"">=F0=9F=93=90 <strong d=
ata-start=3D"1746" data-end=3D"1807">3. Compute RDMs (Representational Diss=
imilarity Matrices)</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"1809" data-end=3D"2242"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">from</span></span><spa=
n> scipy.spatial.distance </span><span><span class=3D"hljs-keyword">import<=
/span></span><span> pdist, squareform

</span><span><span class=3D"hljs-comment"># Create a matrix where each row =
=3D one image vector</span></span><span>
brain_mat =3D np.stack([brain_rdm_vectors[img] </span><span><span class=3D"=
hljs-keyword">for</span></span><span> img </span><span><span class=3D"hljs-=
keyword">in</span></span><span> ordered_img_ids])
cnn_mat   =3D np.stack([cnn_vectors[img] </span><span><span class=3D"hljs-k=
eyword">for</span></span><span> img </span><span><span class=3D"hljs-keywor=
d">in</span></span><span> ordered_img_ids])

</span><span><span class=3D"hljs-comment"># Use 1 - Pearson correlation as =
dissimilarity</span></span><span>
brain_rdm =3D squareform(pdist(brain_mat, metric=3D</span><span><span class=
=3D"hljs-string">'correlation'</span></span><span>))
cnn_rdm   =3D squareform(pdist(cnn_mat, metric=3D</span><span><span class=
=3D"hljs-string">'correlation'</span></span><span>))
</span></span></code></div></div></pre>
<p data-start=3D"2244" data-end=3D"2294" class=3D"">Each RDM will be a <cod=
e data-start=3D"2263" data-end=3D"2286">[n_images x n_images]</code> matrix=
.</p>
<hr data-start=3D"2296" data-end=3D"2299" class=3D"">
<h3 data-start=3D"2301" data-end=3D"2331" class=3D"">=F0=9F=94=81 <strong d=
ata-start=3D"2308" data-end=3D"2331">4. Compare the RDMs</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"2333" data-end=3D"2570"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">from</span></span><spa=
n> scipy.stats </span><span><span class=3D"hljs-keyword">import</span></spa=
n><span> spearmanr

</span><span><span class=3D"hljs-comment"># Compare upper triangles (ignore=
 diagonal)</span></span><span>
mask =3D np.triu_indices_from(brain_rdm, k=3D</span><span><span class=3D"hl=
js-number">1</span></span><span>)
r, p =3D spearmanr(brain_rdm[mask], cnn_rdm[mask])
</span><span><span class=3D"hljs-built_in">print</span></span><span>(</span=
><span><span class=3D"hljs-string">f"RSA correlation: r =3D <span class=3D"=
hljs-subst">{r:<span class=3D"hljs-number">.3</span></span></span></span><s=
pan>f}, p =3D </span><span><span class=3D"hljs-subst">{p:<span class=3D"hlj=
s-number">.3</span></span></span><span>g}")
</span></span></code></div></div></pre>
<p data-start=3D"2572" data-end=3D"2667" class=3D"">A high <code data-start=
=3D"2579" data-end=3D"2582">r</code> means that the <strong data-start=3D"2=
598" data-end=3D"2611">structure</strong> of how the CNN "sees" images is s=
imilar to the brain=E2=80=99s.</p>
<hr data-start=3D"2669" data-end=3D"2672" class=3D"">
<h3 data-start=3D"2674" data-end=3D"2710" class=3D"">=F0=9F=96=BC=EF=B8=8F =
Optional: Visualize the RDMs</h3>
<pre class=3D"overflow-visible!" data-start=3D"2712" data-end=3D"2995"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> matplotlib.pyplot </span><span><span class=3D"hljs-keyword">as</span><=
/span><span> plt
</span><span><span class=3D"hljs-keyword">import</span></span><span> seabor=
n </span><span><span class=3D"hljs-keyword">as</span></span><span> sns

fig, axs =3D plt.subplots(</span><span><span class=3D"hljs-number">1</span>=
</span><span>, </span><span><span class=3D"hljs-number">2</span></span><spa=
n>, figsize=3D(</span><span><span class=3D"hljs-number">10</span></span><sp=
an>, </span><span><span class=3D"hljs-number">4</span></span><span>))
sns.heatmap(brain_rdm, ax=3Daxs[</span><span><span class=3D"hljs-number">0<=
/span></span><span>], cmap=3D</span><span><span class=3D"hljs-string">'viri=
dis'</span></span><span>)
axs[</span><span><span class=3D"hljs-number">0</span></span><span>].set_tit=
le(</span><span><span class=3D"hljs-string">"Neural RDM"</span></span><span=
>)
sns.heatmap(cnn_rdm, ax=3Daxs[</span><span><span class=3D"hljs-number">1</s=
pan></span><span>], cmap=3D</span><span><span class=3D"hljs-string">'viridi=
s'</span></span><span>)
axs[</span><span><span class=3D"hljs-number">1</span></span><span>].set_tit=
le(</span><span><span class=3D"hljs-string">"CNN RDM"</span></span><span>)
plt.show()
</span></span></code></div></div></pre>
<hr data-start=3D"2997" data-end=3D"3000" class=3D"">
<h3 data-start=3D"3002" data-end=3D"3051" class=3D"">=F0=9F=92=A1 Bonus: Co=
mpare face vs. non-face subspaces</h3>
<p data-start=3D"3053" data-end=3D"3145" class=3D"">You can group your imag=
es by category (e.g., using your labels or CNN classifier) and check:</p>
<ul data-start=3D"3146" data-end=3D"3291">
<li data-start=3D"3146" data-end=3D"3202" class=3D"">
<p data-start=3D"3148" data-end=3D"3202" class=3D"">Within-category distanc=
es (face=E2=80=93face, nonface=E2=80=93nonface)</p>
</li>
<li data-start=3D"3203" data-end=3D"3231" class=3D"">
<p data-start=3D"3205" data-end=3D"3231" class=3D"">Between-category distan=
ces</p>
</li>
<li data-start=3D"3232" data-end=3D"3291" class=3D"">
<p data-start=3D"3234" data-end=3D"3291" class=3D"">Whether the CNN and the=
 brain cluster <strong data-start=3D"3272" data-end=3D"3281">faces</strong>=
 similarly</p>
</li>
</ul>
<hr data-start=3D"3293" data-end=3D"3296" class=3D"">
<h2 data-start=3D"3298" data-end=3D"3325" class=3D"">=E2=9C=85 TL;DR: What =
to do next</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"33=
27" data-end=3D"3630" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3327" data-end=3D"3351"><tr data-start=3D"3327" data-end=3D"=
3351"><th data-start=3D"3327" data-end=3D"3334" data-col-size=3D"sm">Step</=
th><th data-start=3D"3334" data-end=3D"3351" data-col-size=3D"md">What to b=
uild</th></tr></thead><tbody data-start=3D"3377" data-end=3D"3630"><tr data=
-start=3D"3377" data-end=3D"3446"><td data-start=3D"3377" data-end=3D"3383"=
 data-col-size=3D"sm">1=EF=B8=8F=E2=83=A3</td><td data-start=3D"3383" data-=
end=3D"3446" data-col-size=3D"md">Average neural responses per image (e.g.,=
 fix0 firing rate)</td></tr><tr data-start=3D"3447" data-end=3D"3507"><td d=
ata-start=3D"3447" data-end=3D"3453" data-col-size=3D"sm">2=EF=B8=8F=E2=83=
=A3</td><td data-start=3D"3453" data-end=3D"3507" data-col-size=3D"md">Extr=
act CNN features from full image or face-patch</td></tr><tr data-start=3D"3=
508" data-end=3D"3551"><td data-start=3D"3508" data-end=3D"3514" data-col-s=
ize=3D"sm">3=EF=B8=8F=E2=83=A3</td><td data-start=3D"3514" data-end=3D"3551=
" data-col-size=3D"md">Create RDMs using 1 - correlation</td></tr><tr data-=
start=3D"3552" data-end=3D"3601"><td data-start=3D"3552" data-end=3D"3558" =
data-col-size=3D"sm">4=EF=B8=8F=E2=83=A3</td><td data-start=3D"3558" data-e=
nd=3D"3601" data-col-size=3D"md">Compare RDMs using Spearman correlation</t=
d></tr><tr data-start=3D"3602" data-end=3D"3630"><td data-start=3D"3602" da=
ta-end=3D"3608" data-col-size=3D"sm">5=EF=B8=8F=E2=83=A3</td><td data-start=
=3D"3608" data-end=3D"3630" data-col-size=3D"md">Plot and interpret</td></t=
r></tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 se=
lf-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D"h=
eight: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"=
bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my=
-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)=
]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><s=
vg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"=
http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"even=
odd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 =
22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 =
14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15=
.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.=
5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4=
 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.55=
23 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></di=
v></div></div>
<hr data-start=3D"3632" data-end=3D"3635" class=3D"">
<p data-start=3D"3637" data-end=3D"3753" class=3D"">Would you like a concre=
te Python function to compute and compare RDMs given your <code data-start=
=3D"3718" data-end=3D"3736">feats/patch_grid</code> and neural SDFs?</p></d=
iv></div></div></div></div></div></div></div></article><article class=3D"te=
xt-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn=
-149" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div=
 class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing=
(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-con=
tent-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--t=
hread-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] =
@[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-co=
ntent-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messag=
es focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conver=
sation-turn relative flex w-full min-w-0 flex-col"><div class=3D"relative f=
lex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div d=
ata-message-author-role=3D"user" data-message-id=3D"08277607-3cdd-4755-9f50=
-064c251041fc" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-f=
ull flex-col items-end gap-2 text-start break-words whitespace-normal [.tex=
t-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidde=
n items-end rtl:items-start"><div class=3D"relative max-w-[var(--user-chat-=
width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div class=3D=
"whitespace-pre-wrap">Extract CNN features from full image or face-patch

what does this mean? </div></div></div></div></div></div></div></div></div>=
</article><article class=3D"text-token-text-primary w-full" dir=3D"auto" da=
ta-testid=3D"conversation-turn-150" data-scroll-anchor=3D"false"><h6 class=
=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5=
 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:-=
-spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-=
content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:=
[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48r=
em] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 =
md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabinde=
x=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0=
 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div =
class=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"as=
sistant" data-message-id=3D"3e3d5703-b0a9-4abf-9da7-287bd3ea2b98" dir=3D"au=
to" class=3D"min-h-8 text-message relative flex w-full flex-col items-end g=
ap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5" d=
ata-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 =
empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert=
 w-full break-words dark"><p data-start=3D"0" data-end=3D"116" class=3D"">G=
reat question=E2=80=94this is a critical step in making the CNN=E2=80=93bra=
in comparison meaningful. Let=E2=80=99s break it down carefully:</p>
<hr data-start=3D"118" data-end=3D"121" class=3D"">
<h2 data-start=3D"123" data-end=3D"204" class=3D"">=F0=9F=A7=A0 =E2=80=9CEx=
tract CNN features from full image or face-patch=E2=80=9D =E2=80=94 What do=
es that mean?</h2>
<p data-start=3D"206" data-end=3D"403" class=3D"">You're trying to understa=
nd <strong data-start=3D"234" data-end=3D"287">how the CNN internally repre=
sents the same images</strong> that the monkey viewed=E2=80=94and whether t=
hose internal representations match what's happening in the <strong data-st=
art=3D"384" data-end=3D"402">monkey=E2=80=99s brain</strong>.</p>
<p data-start=3D"405" data-end=3D"623" class=3D"">To do that, you need to e=
xtract <strong data-start=3D"437" data-end=3D"456">feature vectors</strong>=
 from the CNN for each image. These vectors come from <strong data-start=3D=
"510" data-end=3D"533">intermediate layers</strong> of the model (e.g., a R=
esNet or ViT), and reflect <strong data-start=3D"584" data-end=3D"609">what=
 the model "sees"</strong> in the image.</p>
<hr data-start=3D"625" data-end=3D"628" class=3D"">
<h2 data-start=3D"630" data-end=3D"675" class=3D"">=F0=9F=93=8C Two strateg=
ies for extracting features:</h2>
<hr data-start=3D"677" data-end=3D"680" class=3D"">
<h3 data-start=3D"682" data-end=3D"716" class=3D"">=F0=9F=96=BC=EF=B8=8F 1.=
 <strong data-start=3D"693" data-end=3D"716">Full-image features</strong></=
h3>
<blockquote data-start=3D"717" data-end=3D"787">
<p data-start=3D"719" data-end=3D"787" class=3D"">Feed the <strong data-sta=
rt=3D"728" data-end=3D"744">entire image</strong> into the CNN and extract =
a feature vector.</p>
</blockquote>
<h4 data-start=3D"789" data-end=3D"798" class=3D"">Why?</h4>
<ul data-start=3D"799" data-end=3D"895">
<li data-start=3D"799" data-end=3D"828" class=3D"">
<p data-start=3D"801" data-end=3D"828" class=3D"">Captures <strong data-sta=
rt=3D"810" data-end=3D"828">global context</strong></p>
</li>
<li data-start=3D"829" data-end=3D"895" class=3D"">
<p data-start=3D"831" data-end=3D"895" class=3D"">Matches free-viewing beha=
vior where the monkey can look anywhere</p>
</li>
</ul>
<h4 data-start=3D"897" data-end=3D"906" class=3D"">How?</h4>
<p data-start=3D"907" data-end=3D"987" class=3D"">In your pipeline (e.g., <=
code data-start=3D"931" data-end=3D"966">script_cache_stim_grid_repr.ipynb<=
/code>), this is stored as:</p>
<pre class=3D"overflow-visible!" data-start=3D"989" data-end=3D"1046"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>feats/full_image[i]  </span><span><span class=3D"hl=
js-comment"># shape: [feature_dim]</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"1048" data-end=3D"1157" class=3D"">=E2=9C=85 Simple to use=
<br data-start=3D"1063" data-end=3D"1066">
=E2=9C=85 Matches global image-level representations<br data-start=3D"1110"=
 data-end=3D"1113">
=E2=9D=8C May include irrelevant or non-face content</p>
<hr data-start=3D"1159" data-end=3D"1162" class=3D"">
<h3 data-start=3D"1164" data-end=3D"1222" class=3D"">=F0=9F=91=81=EF=B8=8F =
2. <strong data-start=3D"1175" data-end=3D"1222">Face-patch features (bound=
ing box=E2=80=93centered)</strong></h3>
<blockquote data-start=3D"1223" data-end=3D"1310">
<p data-start=3D"1225" data-end=3D"1310" class=3D"">Only use the <strong da=
ta-start=3D"1238" data-end=3D"1282">part of the image that contains the fac=
e</strong>, based on the bounding box.</p>
</blockquote>
<h4 data-start=3D"1312" data-end=3D"1321" class=3D"">Why?</h4>
<ul data-start=3D"1322" data-end=3D"1493">
<li data-start=3D"1322" data-end=3D"1406" class=3D"">
<p data-start=3D"1324" data-end=3D"1406" class=3D"">Monkey's neurons (e.g.,=
 in IT cortex) might be <strong data-start=3D"1371" data-end=3D"1406">selec=
tively responding to faces</strong></p>
</li>
<li data-start=3D"1407" data-end=3D"1493" class=3D"">
<p data-start=3D"1409" data-end=3D"1425" class=3D"">You want to ask:</p>
<blockquote data-start=3D"1428" data-end=3D"1493">
<p data-start=3D"1430" data-end=3D"1493" class=3D"">=E2=80=9CDoes the model=
 respond to faces the same way the monkey does?=E2=80=9D</p>
</blockquote>
</li>
</ul>
<h4 data-start=3D"1495" data-end=3D"1504" class=3D"">How?</h4>
<p data-start=3D"1505" data-end=3D"1534" class=3D"">In your extracted patch=
 grid:</p>
<pre class=3D"overflow-visible!" data-start=3D"1536" data-end=3D"1615"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>feats/patch_grid[i]  </span><span><span class=3D"hl=
js-comment"># shape: [x_patches, y_patches, feature_dim]</span></span><span=
>
</span></span></code></div></div></pre>
<p data-start=3D"1617" data-end=3D"1621" class=3D"">You:</p>
<ol data-start=3D"1622" data-end=3D"1756">
<li data-start=3D"1622" data-end=3D"1674" class=3D"">
<p data-start=3D"1625" data-end=3D"1674" class=3D"">Use the known <strong d=
ata-start=3D"1639" data-end=3D"1660">face bounding box</strong> for the ima=
ge</p>
</li>
<li data-start=3D"1675" data-end=3D"1710" class=3D"">
<p data-start=3D"1678" data-end=3D"1710" class=3D"">Find which patch(es) it=
 overlaps</p>
</li>
<li data-start=3D"1711" data-end=3D"1756" class=3D"">
<p data-start=3D"1714" data-end=3D"1756" class=3D"">Average the CNN feature=
s for those patches</p>
</li>
</ol>
<pre class=3D"overflow-visible!" data-start=3D"1758" data-end=3D"1882"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>face_patches =3D get_patches_overlapping_bbox(patch=
_grid, bbox)
face_vector =3D np.mean(face_patches, axis=3D(</span><span><span class=3D"h=
ljs-number">0</span></span><span>, </span><span><span class=3D"hljs-number"=
>1</span></span><span>))
</span></span></code></div></div></pre>
<p data-start=3D"1884" data-end=3D"2045" class=3D"">=E2=9C=85 Focuses on vi=
sual region that contains the face<br data-start=3D"1933" data-end=3D"1936"=
>
=E2=9C=85 Allows fair comparison to <strong data-start=3D"1964" data-end=3D=
"1991">neural face selectivity</strong><br data-start=3D"1991" data-end=3D"=
1994">
=E2=9D=8C Might miss global context (e.g., face in a scene)</p>
<hr data-start=3D"2047" data-end=3D"2050" class=3D"">
<h2 data-start=3D"2052" data-end=3D"2071" class=3D"">=F0=9F=94=81 In your c=
ase:</h2>
<p data-start=3D"2073" data-end=3D"2088" class=3D"">Since you have:</p>
<ul data-start=3D"2089" data-end=3D"2198">
<li data-start=3D"2089" data-end=3D"2110" class=3D"">
<p data-start=3D"2091" data-end=3D"2110" class=3D"">Face bounding boxes</p>
</li>
<li data-start=3D"2111" data-end=3D"2158" class=3D"">
<p data-start=3D"2113" data-end=3D"2158" class=3D"">Patch-based CNN feature=
s (<code data-start=3D"2139" data-end=3D"2157">feats/patch_grid</code>)</p>
</li>
<li data-start=3D"2159" data-end=3D"2198" class=3D"">
<p data-start=3D"2161" data-end=3D"2198" class=3D"">Neural responses aligne=
d to fixations</p>
</li>
</ul>
<p data-start=3D"2200" data-end=3D"2208" class=3D"">You can:</p>
<ul data-start=3D"2209" data-end=3D"2399">
<li data-start=3D"2209" data-end=3D"2272" class=3D"">
<p data-start=3D"2211" data-end=3D"2272" class=3D"">Use the <strong data-st=
art=3D"2219" data-end=3D"2253">patch at the fixation location</strong> (if =
matching gaze)</p>
</li>
<li data-start=3D"2273" data-end=3D"2325" class=3D"">
<p data-start=3D"2275" data-end=3D"2325" class=3D"">Or use the <strong data=
-start=3D"2286" data-end=3D"2303">face patch(s)</strong> from the bounding =
box</p>
</li>
<li data-start=3D"2326" data-end=3D"2399" class=3D"">
<p data-start=3D"2328" data-end=3D"2399" class=3D"">Or just use <strong dat=
a-start=3D"2340" data-end=3D"2366">the full image feature</strong> if testi=
ng global representation</p>
</li>
</ul>
<hr data-start=3D"2401" data-end=3D"2404" class=3D"">
<h2 data-start=3D"2406" data-end=3D"2416" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"24=
18" data-end=3D"2838" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2418" data-end=3D"2480"><tr data-start=3D"2418" data-end=3D"=
2480"><th data-start=3D"2418" data-end=3D"2433" data-col-size=3D"sm">Featur=
e Type</th><th data-start=3D"2433" data-end=3D"2463" data-col-size=3D"sm">W=
hat you=E2=80=99re feeding the CNN</th><th data-start=3D"2463" data-end=3D"=
2480" data-col-size=3D"md">What it means</th></tr></thead><tbody data-start=
=3D"2546" data-end=3D"2838"><tr data-start=3D"2546" data-end=3D"2621"><td d=
ata-start=3D"2546" data-end=3D"2563" data-col-size=3D"sm"><strong data-star=
t=3D"2548" data-end=3D"2562">Full image</strong></td><td data-start=3D"2563=
" data-end=3D"2588" data-col-size=3D"sm">Entire 16=C3=9716 dva image</td><t=
d data-start=3D"2588" data-end=3D"2621" data-col-size=3D"md">Model=E2=80=99=
s global interpretation</td></tr><tr data-start=3D"2622" data-end=3D"2731">=
<td data-start=3D"2622" data-end=3D"2639" data-col-size=3D"sm"><strong data=
-start=3D"2624" data-end=3D"2638">Face patch</strong></td><td data-start=3D=
"2639" data-end=3D"2682" data-col-size=3D"sm">Just the region in the face b=
ounding box</td><td data-start=3D"2682" data-end=3D"2731" data-col-size=3D"=
md">Model=E2=80=99s representation of <strong data-start=3D"2710" data-end=
=3D"2729">the face itself</strong></td></tr><tr data-start=3D"2732" data-en=
d=3D"2838"><td data-start=3D"2732" data-end=3D"2753" data-col-size=3D"sm"><=
strong data-start=3D"2734" data-end=3D"2752">Fixation patch</strong></td><t=
d data-start=3D"2753" data-end=3D"2790" data-col-size=3D"sm">Patch where th=
e monkey was looking</td><td data-start=3D"2790" data-end=3D"2838" data-col=
-size=3D"md">Gaze-specific encoding, matches eye-tracking</td></tr></tbody>=
</table><div class=3D"sticky end-(--thread-content-margin) h-0 self-end sel=
ect-none"><div class=3D"absolute end-0 flex items-end" style=3D"height: 32.=
8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token-b=
g-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded=
-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:pointer-=
events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.343=
15 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C=
3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 =
17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 1=
9 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523=
 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 =
9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div></div>=
</div>
<hr data-start=3D"2840" data-end=3D"2843" class=3D"">
<p data-start=3D"2845" data-end=3D"2955" class=3D"">Would you like a small =
function that takes a bounding box and extracts the CNN patch features for =
that region?</p></div></div></div></div></div></div></div></div></article><=
article class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=
=3D"conversation-turn-151" data-scroll-anchor=3D"false"><h5 class=3D"sr-onl=
y">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-con=
tent-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @=
[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin=
)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-cont=
ent-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto fl=
ex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:ga=
p-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div =
class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><di=
v class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full =
flex-col grow"><div data-message-author-role=3D"user" data-message-id=3D"d8=
7f071c-9704-4ac1-89cf-a83454ad0b60" dir=3D"auto" class=3D"min-h-8 text-mess=
age relative flex w-full flex-col items-end gap-2 text-start break-words wh=
itespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-=
col gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative ma=
x-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 =
py-2.5"><div class=3D"whitespace-pre-wrap">
import ast
import itertools
import sys
from pathlib import Path

import h5py as h5
import numpy as np
import pandas as pd
import xarray as xr
from tqdm import tqdm

sys.path.append('../lib')
from local_paths import preproc_dir, analysis_dir, database_dir, cache_dir
from storage import get_storage_functions, quantize
from hier_group import unpack_hier_names
from im_patches import get_patches_from_grid
from cross_val_pred import standardize, cv_split_by_image, cv_ridge_predict=
_eval
Parameters
#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
# session
#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
sess_name =3D 'sess_name'


#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
# saccade-matching
#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
min_sep =3D 4  # for non-matched fixation


#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
# spatiotemporal resolution of RF
#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
# temporal
t_aln  =3D 'sacc_on'  # 'sacc_on' or 'fix_on'
t_win  =3D 0  # if &gt; 0, uses single window
t_offset =3D None  # default: -t_win/2; time bin center =3D t_offset + t_lo=
c or timing
# - if t_win &gt; 0
t_loc  =3D None  # if set, supercedes timing_path and t_col
# -- if t_loc is None
t_col  =3D None
# - if t_win &lt;=3D 0
t_pre  =3D 375
t_post =3D 375  # inclusive, but window must fit fully in range
t_step =3D  25

# spatial
rloc_min  =3D -0.5  # normalized to saccade length
rloc_max  =3D  1.5
rloc_step =3D  0.25


#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
# modelling
#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
# ridge regularization
ridge_alpha =3D 100000

# cross-validation
n_splits    =3D      5
group_kfold =3D   True


#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
# statistical tests
#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
n_perm =3D 0
match_test =3D ('original', 'previous', 0, 'greater')


#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
# paths
#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
proc_dir =3D preproc_dir

sdf_dir =3D preproc_dir
sdf_suffix =3D '-mwa_1' if t_win &gt; 0 else '-mwa_50'  # default to no smo=
othing if using a response window

rsc_dir =3D analysis_dir + 'self_consistency_no_decorr'

feat_dir =3D cache_dir + 'feats/vit_large_patch16_384/blocks.13.attn.qkv'
feat_suffix =3D '_as_2x2_in_0.50_steps'

unit_sel_path =3D database_dir+'unit_sel/visually_selective.csv.gz'
rf_fit_path =3D database_dir + 'per_unit_rf.csv.gz'
timing_path =3D database_dir + 'timing-mpm_peaks.csv.gz'

output_dir =3D analysis_dir + 'mas_match_control'
Check prereqs and params
proc_path =3D Path(proc_dir) / (sess_name + '-proc.h5')
print('Loading shared processing from', proc_path)
proc_path =3D proc_path.expanduser()
assert proc_path.is_file()

sdf_path =3D Path(sdf_dir) / (sess_name + f'-sdf{sdf_suffix}.h5')
print('Loading spike density function from', sdf_path)
sdf_path =3D sdf_path.expanduser()
assert sdf_path.is_file()

rsc_path =3D Path(rsc_dir) / (sess_name + '.h5')
print('Loading return fixation self-consistency results from', rsc_path)
rsc_path =3D rsc_path.expanduser()
assert rsc_path.is_file()

with h5.File(proc_path, 'r') as f:
    im_w, im_h =3D im_size =3D f['stimulus/size_dva'][()]
feats_path =3D Path(feat_dir) / f'{im_w:.1f}x{im_h:.1f}{feat_suffix}.h5'
print('Loading cached model features from', feats_path)
feats_path =3D feats_path.expanduser()
assert feats_path.is_file()

rf_fit_path =3D Path(rf_fit_path)
print('Loading Gaussian-fitted RF maps density function from', rf_fit_path)
rf_fit_path =3D rf_fit_path.expanduser()
assert rf_fit_path.is_file()

if unit_sel_path is not None and unit_sel_path !=3D 'None':
    print('Loading unit selection from', unit_sel_path)
    unit_sel_path =3D Path(unit_sel_path).expanduser()
    assert unit_sel_path.is_file()
    unit_names =3D pd.read_csv(unit_sel_path).set_index('Session').loc[[ses=
s_name]]['Unit'].values
else:
    unit_names =3D None

if t_win &gt; 0:
    t_pre =3D t_post =3D t_step =3D np.nan
    if t_offset is None: t_offset =3D -t_win / 2
    if t_loc is None:
        assert timing_path is not None and t_col is not None
        t_loc =3D np.nan
        print('Using per-unit timing from', timing_path)
        print('\tColumn:', t_col, '\tOffset:', t_offset)
        timing_path =3D Path(timing_path).expanduser()
        assert timing_path.is_file()
    else:
        t_col =3D ''
else:
    t_loc =3D t_offset =3D np.nan
    t_col =3D ''

output_dir =3D Path(output_dir)
assert output_dir.expanduser().is_dir()
output_path =3D output_dir / (sess_name + '.h5')
print('Saving results to', output_path)
output_path =3D output_path.expanduser()
if n_perm &gt; 0:
    if isinstance(match_test, str):
        match_test =3D ast.literal_eval(match_test)
    else:
        assert isinstance(match_test, tuple)
    assert match_test[0] =3D=3D 'original'  # placeholder, for consistency
    assert match_test[1] in ('previous', 'current')
    assert isinstance(match_test[3], str)  # alternative to test
analysis_name =3D 'mas_match_control'

if output_path.is_file():
    with h5.File(output_path, 'r') as f:
        try:
            if f[f'progress_report/{analysis_name}/all_done'][()].item():
                raise RuntimeError(f'{sess_name} has already been processed=
')
        except KeyError:
            pass
fix_df =3D pd.read_hdf(proc_path, 'fixation_dataframe', 'r')
with h5.File(proc_path, 'r') as f:
    stim_folder_ =3D f['stimulus/folder'][()].decode()

imids =3D fix_df.groupby(['Image subdir', 'Image filename']).first().index
md5s =3D [Path(fn).stem for _, fn in imids]
md5_catalog =3D pd.DataFrame(index=3Dimids, data=3Dmd5s, columns=3D['MD5'])
Prepare parameters; save config
with h5.File(proc_path, 'r') as f:
    random_seed =3D f['config/default_random_seed'][()]
print('random_seed:', random_seed)
assert t_aln in ('sacc_on', 'fix_on')
if t_win &gt; 0:
    ts =3D np.array([t_win/2]) + t_offset  # placeholder; actual window var=
ies with latency per unit
else:
    ts =3D np.arange(-t_pre, t_post+.1, t_step)
print(f'{len(ts)} response windows')

rf_rlocs =3D np.arange(rloc_min, rloc_max+rloc_step/10, rloc_step)
if n_perm &gt; 0 and match_test[2] is not None:
    assert match_test[2] in rf_rlocs  # control loc in stat test is unique =
to this analysis
print('RF locations (along saccade vector, normalized by saccade size):')
print(f'{rf_rlocs} ({len(rf_rlocs)})')
save_results, add_attr_to_dset, check_equals_saved, link_dsets, copy_group =
=3D \
    get_storage_functions(output_path)
group =3D analysis_name + '/'
save_results(group+'ts', ts, attrs=3Ddict(unit=3D'ms'))
save_results(group+'rf_rlocs', rf_rlocs, attrs=3Ddict(unit=3D'normalized'))
save_results(group+'sdf_suffix', sdf_suffix)

group =3D analysis_name + '/config/'
save_results(group+'random_seed', random_seed)

group =3D analysis_name + '/config/match_criterion/'
save_results(group+'min_sep', min_sep)

group =3D analysis_name + '/config/time_windows/'
save_results(group+'t_aln', t_aln)
save_results(group+'t_win', t_win)
save_results(group+'t_loc', t_loc)
save_results(group+'t_col', t_col)
save_results(group+'t_offset', t_offset)
save_results(group+'t_pre', t_pre)
save_results(group+'t_post', t_post)
save_results(group+'t_step', t_step)
add_attr_to_dset(group, attrs=3Ddict(unit=3D'ms'))

group =3D analysis_name + '/config/positions_along_saccade/'
save_results(group+'rloc_min', rloc_min)
save_results(group+'rloc_max', rloc_max)
save_results(group+'rloc_step', rloc_step)
add_attr_to_dset(group, attrs=3Ddict(unit=3D'normalized'))

group =3D analysis_name + '/config/modelling/'
save_results(group+'n_splits', n_splits)
save_results(group+'ridge_alpha', ridge_alpha)
save_results(group+'group_kfold', group_kfold)

group =3D analysis_name + '/config/statistics/'
save_results(group+'n_perm', n_perm)
save_results(group+'match_test', str(match_test))
Define RFs
if unit_names is None:
    with h5.File(sdf_path, 'r') as f:
        unit_names =3D f['sdf'].attrs['unit_names'].astype(str)

unit_names0 =3D unit_names.copy()
unit_names =3D unpack_hier_names(unit_names)
unit_names =3D unit_names[unit_names[:,0]=3D=3D'Unit', 1]
unit_rf_df =3D pd.read_csv(rf_fit_path).set_index('Session')
assert sess_name in unit_rf_df.index, 'No unit has good RF fits'

unit_rf_df =3D unit_rf_df.loc[[sess_name]].set_index('Name')
assert not unit_rf_df.index.has_duplicates
unit_names =3D unit_rf_df.index.intersection(unit_names).values
print(f'{len(unit_names)} of {len(unit_names0)} ({(len(unit_names)/len(unit=
_names0))*100:.1f}%) units have fitted RFs')

unit_rf_df =3D unit_rf_df.loc[unit_names].reset_index()
assert len(unit_rf_df) =3D=3D len(unit_names)
print('Num units using RF fit from each source:')
print('\t' + '\n\t'.join(str(unit_rf_df.groupby('Source').count()['x']).spl=
it('\n')[:-1]))
save_results(analysis_name+'/unit_names', unit_names.astype(bytes))
unit_rf_df.to_hdf(output_path, analysis_name+'/rf_per_unit', mode=3D'a', fo=
rmat=3D'table', complevel=3D9, complib=3D'zlib')
Find matched saccades
with h5.File(rsc_path, 'r') as f:
    fix1_sel, fix2_sel =3D f['self_consistency/saccade_selection'][()]
    return_thres =3D f['self_consistency/config/return_criterion/return_thr=
es'][()]
    v =3D f['self_consistency/return_pairs/'+match_test[1]][()]
    assert v.size
    v =3D np.sort(v, axis=3D1)
    v =3D v[np.lexsort(tuple(v.T))]
    match_return_pairs =3D v
rg =3D np.random.default_rng(random_seed)
pair_df =3D pd.DataFrame(np.concatenate([match_return_pairs, match_return_p=
airs[:,::-1]], axis=3D0)).set_index(0)
if match_test[1] =3D=3D 'previous':
    src_fix_sel, other_fix_sel =3D fix1_sel, fix2_sel
else:
    src_fix_sel, other_fix_sel =3D fix2_sel, fix1_sel
matched =3D np.zeros(fix1_sel.size, dtype=3Dbool)
match_ips =3D []

for i, (src_ifix, other_ifix) in enumerate(zip(src_fix_sel, other_fix_sel))=
:
    try:
        match_ip_opts =3D pair_df.loc[[i],1].values
    except KeyError:
        continue
    assert len(set(match_ip_opts)) =3D=3D len(match_ip_opts)
    match_ip_opts =3D rg.permuted(match_ip_opts)
    for ip in match_ip_opts:
        match_other_ifix =3D other_fix_sel[ip]
        other_xy, match_other_xy =3D fix_df.iloc[[other_ifix, match_other_i=
fix]]\
            [['Relative X', 'Relative Y']].values
        if np.linalg.norm(other_xy - match_other_xy) &gt;=3D min_sep:
            matched[i] =3D True
            match_ips.append(ip)
            break

print(f'{matched.sum()} of {matched.size} ({matched.mean()*100:.1f}%) sacca=
des had matched {match_test[1]} fixation '
      f'and min. sep. &gt;=3D {min_sep} dva for the unmatched fixation')
match_fix1_sel =3D fix1_sel[match_ips]
match_fix2_sel =3D fix2_sel[match_ips]
fix1_sel =3D fix1_sel[matched]
fix2_sel =3D fix2_sel[matched]
# sanity check
cols =3D ['Relative X', 'Relative Y']
xy1 =3D fix_df.iloc[fix1_sel][cols].values
mxy1 =3D fix_df.iloc[match_fix1_sel][cols].values
xy2 =3D fix_df.iloc[fix2_sel][cols].values
mxy2 =3D fix_df.iloc[match_fix2_sel][cols].values
d1 =3D np.linalg.norm(xy1 - mxy1, axis=3D1)
d2 =3D np.linalg.norm(xy2 - mxy2, axis=3D1)
if match_test[1] !=3D 'previous':
    d1, d2 =3D d2, d1
assert (d1 &lt; return_thres).all()
assert (d2 &gt;=3D min_sep).all()
for sel, msel in ((fix1_sel, match_fix1_sel), (fix2_sel, match_fix2_sel)):
    assert (fix_df.iloc[sel]['Image filename'].values =3D=3D fix_df.iloc[ms=
el]['Image filename'].values).all()
group =3D analysis_name + '/config/match_criterion/'
save_results(group+'return_thres', min_sep)

group =3D analysis_name + '/saccade_selection/'
save_results(group+'fixation_indices', np.array([fix1_sel, fix2_sel]))
save_results(group+'match_saccades/fixation_indices', np.array([match_fix1_=
sel, match_fix2_sel]))
Get aligned responses
with h5.File(sdf_path, 'r') as f:
    dset =3D f['sdf']
    all_unit_names =3D list(dset.attrs['unit_names'].astype(str))
    unit_sel =3D np.array([v in unit_names for v in all_unit_names])
    sdf =3D dset[()][:,unit_sel]

n_neur =3D sdf.shape[1]
if t_win &gt; 0:
    if np.isfinite(t_loc):
        timing =3D pd.DataFrame(data=3D{'Index': np.arange(len(unit_names))=
, 'Timing': np.full(unit_names.size, t_loc)})
    else:
        timing =3D pd.read_csv(timing_path).set_index('Session').loc[[sess_=
name]].set_index('Name')
        m =3D pd.Series(unit_names).isin(timing.index)
        assert m.all(), f'missing timing values for {(~m).sum()} of {m.size=
} units'
        assert not timing.index.has_duplicates
        timing =3D timing.loc[unit_names].reset_index()
        assert len(timing) =3D=3D len(unit_names)
        timing =3D timing[[t_col, 'Source']].rename(columns=3D{t_col: 'Timi=
ng'})
        timing['Timing'] +=3D t_offset
        timing['Index'] =3D np.arange(len(timing))
        print('Num units using RF fit from each source:')
        print('\t' + '\n\t'.join(str(timing.groupby('Source').count()['Timi=
ng']).split('\n')[:-1]))

    # for quick illustrative plotting only; does not affect response timing
    ts +=3D timing['Timing'].values.mean()

    timing.to_hdf(output_path, analysis_name+'/timing_per_unit', mode=3D'a'=
, format=3D'table', complevel=3D9, complib=3D'zlib')
if t_aln =3D=3D 'sacc_on':
    t0s =3D fix_df.iloc[fix1_sel][['Time', 'Duration']].values.sum(1)
    mt0s =3D fix_df.iloc[match_fix1_sel][['Time', 'Duration']].values.sum(1=
)
else:
    t0s =3D fix_df.iloc[fix2_sel]['Time'].values
    mt0s =3D fix_df.iloc[match_fix2_sel]['Time'].values

resps =3D np.empty_like(sdf, shape=3D(fix2_sel.size, ts.size, sdf.shape[-1]=
))
mresps =3D np.empty_like(resps)

if t_win &gt; 0:
    t_win_ =3D np.array([0, t_win])
    lat_groups =3D [(dt, df_['Index'].values) for dt, df_ in timing.groupby=
('Timing')]
    for resps_, t0s_ in ((resps, t0s), (mresps, mt0s)):
        for i, t in enumerate(t0s_):
            for dt, usel in lat_groups:
                s =3D slice(*np.round(t+dt+t_win_).astype(int))
                resps_[i,0,usel] =3D sdf[s,usel].mean(0)
else:
    for resps_, t0s_ in ((resps, t0s), (mresps, mt0s)):
        for i, t in enumerate(t0s_):
            ts_ =3D np.round(t+ts).astype(int)
            resps_[i] =3D sdf[ts_,:]

del sdf

Y =3D standardize(resps)
match_Y =3D standardize(mresps)

del resps, mresps
Define splits (group k-fold)
imfns =3D fix_df.iloc[fix2_sel]['Image filename']

splits, train_mask =3D cv_split_by_image(
    imfns, n_splits,
    group_kfold=3Dgroup_kfold, random_seed=3Drandom_seed)
save_results(analysis_name+'/fix_is_train', train_mask, attrs=3Ddict(
    dims=3Dnp.array(['split', 'fixation'], dtype=3Dnp.bytes_),
    random_seed=3Drandom_seed,
    group_kfold=3Dgroup_kfold))
Load pre-computed model reprs
with h5.File(feats_path, 'r') as f:
    patch_locs_x =3D f['config/patch_grid/x_locs'][()]
    patch_locs_y =3D f['config/patch_grid/y_locs'][()]
    patch_step =3D float(f['config/patch_grid/step'][()])

    bg_feats =3D f['feats/bg'][()]

    all_md5s =3D f['md5'][()].astype(str)
    all_md5s =3D pd.Series(index=3Dall_md5s, data=3Dnp.arange(len(all_md5s)=
), name=3D'Index in file')
    idc =3D all_md5s.loc[md5_catalog['MD5'].values]
    md5_catalog['Index'] =3D np.arange(len(md5_catalog))

    patch_grid_feats =3D np.empty(shape=3D(idc.size,patch_locs_x.size,patch=
_locs_y.size)+bg_feats.shape, dtype=3Dbg_feats.dtype)
    for ii, i in enumerate(idc.values):
        patch_grid_feats[ii] =3D f['feats/patch_grid'][i]  # shape (n_patch=
es_x, n_patches_y,) + feats_shape

    copy_group(f, 'config', analysis_name+'/config/feats')

feats_shape =3D bg_feats.shape
print('Features shape:', feats_shape)
print('Patch-grid features shape:', patch_grid_feats.shape)

iims =3D np.array([
    md5_catalog.loc[(row['Image subdir'], row['Image filename']), 'Index']
    for i, (_, row) in enumerate(fix_df.iloc[fix2_sel].iterrows())])
patch_bins_x =3D np.concatenate([
    patch_locs_x-patch_step/2, [patch_locs_x[-1]+patch_step/2]])
patch_bins_y =3D np.concatenate([
    patch_locs_y-patch_step/2, [patch_locs_y[-1]+patch_step/2]])
def recon_stim(*args, **kwargs):
    return get_patches_from_grid(
        *args, patch_bins_x=3Dpatch_bins_x, patch_bins_y=3Dpatch_bins_y, **=
kwargs)
Main
xys_fix1 =3D fix_df.iloc[fix1_sel][['Relative X', 'Relative Y']].values.ast=
ype(float)
xys_fix2 =3D fix_df.iloc[fix2_sel][['Relative X', 'Relative Y']].values.ast=
ype(float)
sacc_vecs =3D xys_fix2 - xys_fix1
n_win =3D len(ts)
n_split =3D n_splits
n_loc =3D len(rf_rlocs)
n_unit =3D len(unit_names)
n_fix =3D fix2_sel.size

cv_corrs =3D np.full((2, n_win, n_loc, n_unit), np.nan, dtype=3Dnp.float32)
cv_corrs_per_split =3D np.full((2, n_win, n_split, n_loc, n_unit), np.nan, =
dtype=3Dnp.float32)
if n_perm &gt; 0:
    dsamps =3D np.empty_like(cv_corrs_per_split[0])
    dperms =3D np.empty_like(dsamps, shape=3D(n_perm,)+dsamps.shape)
unit_rf_df['Index'] =3D np.arange(len(unit_rf_df))
gb =3D unit_rf_df.groupby(['x', 'y'])

for (igroup, ((rf_x, rf_y), df_)), (il, rloc) in tqdm(
        itertools.product(enumerate(gb), enumerate(rf_rlocs)),
        total=3Dlen(gb)*len(rf_rlocs)):
    usel =3D df_['Index'].values
    xys =3D xys_fix1 + [rf_x, rf_y] + rloc * sacc_vecs
    X =3D standardize(recon_stim(iims, xys, patch_grid_feats, bg_feats))

    Yu =3D Y[...,usel]
    match_Yu =3D match_Y[...,usel]

    for i, Y_ in enumerate((Yu, match_Yu)):
        corr, _, corr_pers, _ =3D cv_ridge_predict_eval(X, Y_, splits, alph=
a=3Dridge_alpha)
        cv_corrs[i,:,il,usel] =3D corr.T
        cv_corrs_per_split[i,:,:,il,usel] =3D corr_pers.transpose(2,0,1)

    if n_perm &gt; 0:
        dsamps[...,il,usel] =3D np.diff(cv_corrs_per_split[...,il,usel], ax=
is=3D0)[0]

        rg =3D np.random.default_rng(random_seed)  # fine, even preferable,=
 to use same randomization across loops
        both_Yu =3D np.concatenate([Yu, match_Yu], axis=3D0)
        idc =3D np.arange(len(both_Yu))
        dperms_ =3D np.empty((n_perm, n_win, n_split, usel.size))
        for iperm in range(n_perm):
            idc =3D rg.permuted(idc)
            idc1, idc2 =3D np.split(idc, 2)
            dperms_[iperm] =3D (
                cv_ridge_predict_eval(X, both_Yu[idc2], splits, alpha=3Drid=
ge_alpha)[2]
                - cv_ridge_predict_eval(X, both_Yu[idc1], splits, alpha=3Dr=
idge_alpha)[2])
        dperms[:,...,il,usel] =3D dperms_
# calculate permutation p-values
if n_perm &gt; 0:
    alt =3D match_test[3]
    if match_test[2] is not None:
        ilt =3D list(rf_rlocs).index(match_test[2])
        dsamps -=3D dsamps[...,[ilt],:]
        dperms -=3D dperms[...,[ilt],:]
    else:
        ilt =3D None
    if alt =3D=3D 'two-sided':
        d =3D np.abs(dsamps) - np.abs(dperms)
    elif alt =3D=3D 'less':      # original &lt; match
        d =3D dsamps - dperms
    else:                    # original &gt; match
        d =3D dperms - dsamps  # d(2)samp ~ match - original &lt; 0
    d =3D np.ma.masked_invalid(d)  # correlation can be nan
    # splits do not meaningfully differ w.r.t. the test, so pool them
    d =3D d.transpose(0,2,1,3,4).reshape(-1, d.shape[1], d.shape[3], d.shap=
e[4])
    p =3D 1 - (d &gt; 0).mean(0)
    # permutation p is lower-bound by (valid) num perms
    pvals =3D np.clip(p, 1 / (1 + (~d.mask).sum(0)), None).filled(np.nan)
    if ilt is not None:
        pvals[:,ilt,:] =3D np.nan
dims =3D np.array(('condition', 'time', 'split', 'pos', 'unit'))
coords =3D dict((
    ('condition', np.array(('original', 'match'))),
    ('time', ts),
    ('pos', rf_rlocs),
    ('unit', unit_names)))
attrs =3D dict(
    n_sacc=3Dfix1_sel.size,
    group_kfold=3Dint(group_kfold),
    feat_shape=3Dfeats_shape,
    ridge_alpha=3Dridge_alpha,
    t_aln=3Dt_aln)

q =3D lambda x: quantize(x, 3)
data_vars =3D {
    'corr': (dims[[0,1,3,4]], q(cv_corrs)),
    'corr_per_split': (dims, q(cv_corrs_per_split))}
if n_perm &gt; 0:
    data_vars['p-value'] =3D (dims[[1,3,4]], pvals)
dataset =3D xr.Dataset(data_vars, coords=3Dcoords, attrs=3Dattrs)

compr =3D dict(zlib=3DTrue, complevel=3D9)
encoding =3D {
    k: dict(chunksizes=3Dv.shape, **compr)
    for k, v in dataset.data_vars.items()}
dataset.to_netcdf(
    output_path, group=3Danalysis_name+'/data',
    mode=3D'a', engine=3D'h5netcdf', encoding=3Dencoding)
Wrap up
save_results(f'progress_report/{analysis_name}/all_done', True)
%load_ext watermark
%watermark
%watermark -vm --iversions -rbg
Basic visualization of results
import matplotlib.pyplot as plt
import seaborn as sns
ms =3D np.nanmean(cv_corrs, -1)
for l, c in zip((0, 1, .5), ('tab:blue', 'tab:orange', 'tab:green')):
    i =3D np.argmin(np.abs(rf_rlocs - l))
    for j, ls in enumerate(('-', '--')):
        plt.plot(ts, ms[j,:,i], label=3Drf_rlocs[i], color=3Dc, ls=3Dls,
                 marker=3D'.', markerfacecolor=3D(c,'none')[j], markeredgec=
olor=3D('none',c)[j])
plt.legend(title=3D'Norm. pos. on sacc.')
plt.xlabel(f'Time rel. {t_aln.replace("_", " ")}, ms')
plt.ylabel('Model fit, Pearson\'s r');
vr =3D abs(np.nanpercentile(ms, 99.5))

t_step_ =3D t_win if t_win &gt; 0 else t_step
x_step_ =3D rloc_step
ext =3D (ts[0]-t_step_/2, ts[-1]+t_step_/2, rf_rlocs[0]-x_step_/2, rf_rlocs=
[-1]+x_step_/2)
aspect =3D np.array(ext).reshape(2,2).ptp(1)
aspect =3D aspect[0] / aspect[1] * .618

for i in range(2):
    plt.figure()
    cm =3D plt.imshow(
        ms[i].T, extent=3Dext,
        origin=3D'lower', aspect=3Daspect,
        cmap=3D'RdGy', vmin=3D-vr, vmax=3Dvr)
    cb =3D plt.colorbar(cm, fraction=3D.05, aspect=3D10)
    cb.ax.set_ylabel('Model fit, Pearson\'s r')
    plt.ylabel('Norm. pos. on sacc.')
    plt.xlabel(f'Time rel. {t_aln.replace("_", " ")}, ms')
    plt.title(('Original','Match')[i] + '-saccade responses')
if n_perm &gt; 0:
    ms =3D (pvals &lt; 0.01).mean(2)
    plt.figure()
    cm =3D plt.imshow(
        ms.T, extent=3Dext,
        origin=3D'lower', aspect=3Daspect,
        cmap=3D'gray_r', vmin=3D0, vmax=3D1)
    cb =3D plt.colorbar(cm, fraction=3D.05, aspect=3D10)
    cb.ax.set_ylabel('Frac. sig. neurons')
    plt.ylabel('Norm. pos. on sacc.')
    plt.xlabel(f'Time rel. {t_aln.replace("_", " ")}, ms');
if n_perm &gt; 0:
    ms =3D np.median(pvals, 2)
    if np.isfinite(ms).any():
        vm =3D np.nanmax(ms)
        plt.figure()
        cm =3D plt.imshow(
            ms.T, extent=3Dext,
            origin=3D'lower', aspect=3Daspect,
            cmap=3D'gray_r', vmin=3D0, vmax=3Dvm)
        cb =3D plt.colorbar(cm, fraction=3D.05, aspect=3D10)
        cb.ax.set_ylabel('Median p-value')
        plt.gca().set_facecolor('firebrick')
        plt.ylabel('Norm. pos. on sacc.')
        plt.xlabel(f'Time rel. {t_aln.replace("_", " ")}, ms');

what is this doing</div></div></div></div></div></div></div></div></div></a=
rticle><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-=
testid=3D"conversation-turn-152" data-scroll-anchor=3D"false"><h6 class=3D"=
sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--=
thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spa=
cing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-cont=
ent-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--t=
hread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] =
mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:g=
ap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D=
"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0 fle=
x-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div clas=
s=3D"flex items-start"><div class=3D"text-token-text-tertiary inline-block =
text-sm font-semibold outline-hidden">Update memory? <div class=3D"inline-b=
lock py-1"><button class=3D"text-start font-normal text-token-text-tertiary=
" type=3D"button" aria-haspopup=3D"dialog" aria-expanded=3D"false" aria-con=
trols=3D"radix-=C2=ABr243=C2=BB" data-state=3D"closed">=E2=80=9CIs comparin=
g CNN model representations and macaque...=E2=80=9D</button></div></div><bu=
tton class=3D"btn relative btn-secondary btn-xs text-token-text-tertiary ho=
ver:text-token-text-primary ms-3"><div class=3D"flex items-center justify-c=
enter">Yes</div></button><button class=3D"btn relative btn-secondary btn-xs=
 text-token-text-tertiary hover:text-token-text-primary ms-2"><div class=3D=
"flex items-center justify-center">No</div></button></div><div class=3D"fle=
x max-w-full flex-col grow"><div data-message-author-role=3D"assistant" dat=
a-message-id=3D"f86455da-5178-4042-a664-8ae639840b5f" dir=3D"auto" class=3D=
"min-h-8 text-message relative flex w-full flex-col items-end gap-2 text-st=
art break-words whitespace-normal [.text-message+&amp;]:mt-5" data-message-=
model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden=
 first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full brea=
k-words dark"><p data-start=3D"0" data-end=3D"183" class=3D"">Awesome=E2=80=
=94this is a very rich and dense script, and it=E2=80=99s doing something q=
uite advanced and powerful. Here's a full explanation of what it's doing, <=
strong data-start=3D"146" data-end=3D"182">broken into understandable steps=
</strong>.</p>
<hr data-start=3D"185" data-end=3D"188" class=3D"">
<h2 data-start=3D"190" data-end=3D"235" class=3D"">=F0=9F=A7=A0 Big Picture=
: What is this script doing?</h2>
<p data-start=3D"237" data-end=3D"316" class=3D"">This script is part of th=
e <strong data-start=3D"264" data-end=3D"297">MAS (Match-Aware Selectivity)=
</strong> pipeline. It uses:</p>
<ul data-start=3D"318" data-end=3D"644">
<li data-start=3D"318" data-end=3D"369" class=3D"">
<p data-start=3D"320" data-end=3D"369" class=3D""><strong data-start=3D"320=
" data-end=3D"335">Neural data</strong> from macaques during free-viewing</=
p>
</li>
<li data-start=3D"370" data-end=3D"427" class=3D"">
<p data-start=3D"372" data-end=3D"427" class=3D""><strong data-start=3D"372=
" data-end=3D"400">Precomputed CNN features</strong> from ViT for image pat=
ches</p>
</li>
<li data-start=3D"428" data-end=3D"484" class=3D"">
<p data-start=3D"430" data-end=3D"484" class=3D""><strong data-start=3D"430=
" data-end=3D"468">Gaussian receptive field (RF) fits</strong> for each neu=
ron</p>
</li>
<li data-start=3D"485" data-end=3D"511" class=3D"">
<p data-start=3D"487" data-end=3D"511" class=3D""><strong data-start=3D"487=
" data-end=3D"511">Saccade trajectories</strong></p>
</li>
<li data-start=3D"512" data-end=3D"644" class=3D"">
<p data-start=3D"514" data-end=3D"644" class=3D"">And runs a <strong data-s=
tart=3D"525" data-end=3D"551">ridge regression model</strong> to test wheth=
er CNN features can <strong data-start=3D"585" data-end=3D"613">predict neu=
ral responses</strong> at various locations and times</p>
</li>
</ul>
<p data-start=3D"646" data-end=3D"833" class=3D"">But here=E2=80=99s the tw=
ist:<br data-start=3D"667" data-end=3D"670">
It compares <strong data-start=3D"682" data-end=3D"703">original saccades</=
strong> to <strong data-start=3D"707" data-end=3D"735">matched control sacc=
ades</strong> to isolate meaningful, feature-specific selectivity=E2=80=94i=
.e., the stuff the brain really cares about.</p>
<hr data-start=3D"835" data-end=3D"838" class=3D"">
<h2 data-start=3D"840" data-end=3D"857" class=3D"">=E2=9C=85 Key Outcomes</=
h2>
<ul data-start=3D"859" data-end=3D"1392">
<li data-start=3D"859" data-end=3D"989" class=3D"">
<p data-start=3D"861" data-end=3D"913" class=3D"">A <strong data-start=3D"8=
63" data-end=3D"897">cross-validated encoding model</strong> fit per neuron=
:</p>
<ul data-start=3D"916" data-end=3D"989">
<li data-start=3D"916" data-end=3D"954" class=3D"">
<p data-start=3D"918" data-end=3D"954" class=3D"">Input: CNN patch features=
 (from ViT)</p>
</li>
<li data-start=3D"957" data-end=3D"989" class=3D"">
<p data-start=3D"959" data-end=3D"989" class=3D"">Output: Predicted firing =
rates</p>
</li>
</ul>
</li>
<li data-start=3D"990" data-end=3D"1079" class=3D"">
<p data-start=3D"992" data-end=3D"1011" class=3D"">Comparison between:</p>
<ul data-start=3D"1014" data-end=3D"1079">
<li data-start=3D"1014" data-end=3D"1044" class=3D"">
<p data-start=3D"1016" data-end=3D"1044" class=3D""><strong data-start=3D"1=
016" data-end=3D"1035">Real (original)</strong> saccades</p>
</li>
<li data-start=3D"1047" data-end=3D"1079" class=3D"">
<p data-start=3D"1049" data-end=3D"1079" class=3D""><strong data-start=3D"1=
049" data-end=3D"1070">Matched (control)</strong> saccades</p>
</li>
</ul>
</li>
<li data-start=3D"1080" data-end=3D"1215" class=3D"">
<p data-start=3D"1082" data-end=3D"1098" class=3D"">Evaluation over:</p>
<ul data-start=3D"1101" data-end=3D"1215">
<li data-start=3D"1101" data-end=3D"1140" class=3D"">
<p data-start=3D"1103" data-end=3D"1140" class=3D""><strong data-start=3D"1=
103" data-end=3D"1111">Time</strong> after saccade/fixation onset</p>
</li>
<li data-start=3D"1143" data-end=3D"1191" class=3D"">
<p data-start=3D"1145" data-end=3D"1191" class=3D""><strong data-start=3D"1=
145" data-end=3D"1166">Spatial positions</strong> along the saccade vector<=
/p>
</li>
<li data-start=3D"1194" data-end=3D"1215" class=3D"">
<p data-start=3D"1196" data-end=3D"1215" class=3D""><strong data-start=3D"1=
196" data-end=3D"1205">Units</strong> (neurons)</p>
</li>
</ul>
</li>
<li data-start=3D"1216" data-end=3D"1392" class=3D"">
<p data-start=3D"1218" data-end=3D"1226" class=3D"">Outputs:</p>
<ul data-start=3D"1229" data-end=3D"1392">
<li data-start=3D"1229" data-end=3D"1268" class=3D"">
<p data-start=3D"1231" data-end=3D"1268" class=3D"">Correlation (model fit)=
 per condition</p>
</li>
<li data-start=3D"1271" data-end=3D"1329" class=3D"">
<p data-start=3D"1273" data-end=3D"1329" class=3D"">Statistical p-values (i=
f permutation testing is enabled)</p>
</li>
<li data-start=3D"1332" data-end=3D"1392" class=3D"">
<p data-start=3D"1334" data-end=3D"1392" class=3D"">Heatmaps and line plots=
 of model fit across time and space</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"1394" data-end=3D"1397" class=3D"">
<h2 data-start=3D"1399" data-end=3D"1427" class=3D"">=F0=9F=94=8D Step-by-S=
tep Breakdown</h2>
<h3 data-start=3D"1429" data-end=3D"1475" class=3D"">1. <strong data-start=
=3D"1436" data-end=3D"1475">Load data and set config parameters</strong></h=
3>
<ul data-start=3D"1476" data-end=3D"1702">
<li data-start=3D"1476" data-end=3D"1504" class=3D"">
<p data-start=3D"1478" data-end=3D"1504" class=3D"">Session name (<code dat=
a-start=3D"1492" data-end=3D"1503">sess_name</code>)</p>
</li>
<li data-start=3D"1505" data-end=3D"1532" class=3D"">
<p data-start=3D"1507" data-end=3D"1532" class=3D"">Saccade matching settin=
gs</p>
</li>
<li data-start=3D"1533" data-end=3D"1562" class=3D"">
<p data-start=3D"1535" data-end=3D"1562" class=3D"">RF and time window sett=
ings</p>
</li>
<li data-start=3D"1563" data-end=3D"1592" class=3D"">
<p data-start=3D"1565" data-end=3D"1592" class=3D"">Ridge regression parame=
ters</p>
</li>
<li data-start=3D"1593" data-end=3D"1702" class=3D"">
<p data-start=3D"1595" data-end=3D"1610" class=3D"">File paths for:</p>
<ul data-start=3D"1613" data-end=3D"1702">
<li data-start=3D"1613" data-end=3D"1625" class=3D"">
<p data-start=3D"1615" data-end=3D"1625" class=3D"">Spike data</p>
</li>
<li data-start=3D"1628" data-end=3D"1642" class=3D"">
<p data-start=3D"1630" data-end=3D"1642" class=3D"">CNN features</p>
</li>
<li data-start=3D"1645" data-end=3D"1663" class=3D"">
<p data-start=3D"1647" data-end=3D"1663" class=3D"">Receptive fields</p>
</li>
<li data-start=3D"1666" data-end=3D"1682" class=3D"">
<p data-start=3D"1668" data-end=3D"1682" class=3D"">Unit selection</p>
</li>
<li data-start=3D"1685" data-end=3D"1702" class=3D"">
<p data-start=3D"1687" data-end=3D"1702" class=3D"">Timing metadata</p>
</li>
</ul>
</li>
</ul>
<p data-start=3D"1704" data-end=3D"1726" class=3D"">=E2=9C=85 You=E2=80=99r=
e working with:</p>
<ul data-start=3D"1727" data-end=3D"1858">
<li data-start=3D"1727" data-end=3D"1760" class=3D"">
<p data-start=3D"1729" data-end=3D"1760" class=3D"">Spike density functions=
 (<code data-start=3D"1754" data-end=3D"1759">sdf</code>)</p>
</li>
<li data-start=3D"1761" data-end=3D"1789" class=3D"">
<p data-start=3D"1763" data-end=3D"1789" class=3D"">Fixation tables (<code =
data-start=3D"1780" data-end=3D"1788">fix_df</code>)</p>
</li>
<li data-start=3D"1790" data-end=3D"1825" class=3D"">
<p data-start=3D"1792" data-end=3D"1825" class=3D"">CNN features (<code dat=
a-start=3D"1806" data-end=3D"1824">feats/patch_grid</code>)</p>
</li>
<li data-start=3D"1826" data-end=3D"1858" class=3D"">
<p data-start=3D"1828" data-end=3D"1858" class=3D"">RF fits (<code data-sta=
rt=3D"1837" data-end=3D"1857">per_unit_rf.csv.gz</code>)</p>
</li>
</ul>
<hr data-start=3D"1860" data-end=3D"1863" class=3D"">
<h3 data-start=3D"1865" data-end=3D"1908" class=3D"">2. <strong data-start=
=3D"1872" data-end=3D"1908">Filter neurons with reliable RFs</strong></h3>
<ul data-start=3D"1909" data-end=3D"2089">
<li data-start=3D"1909" data-end=3D"1977" class=3D"">
<p data-start=3D"1911" data-end=3D"1977" class=3D"">Reads Gaussian-fitted r=
eceptive field (RF) centers for each neuron</p>
</li>
<li data-start=3D"1978" data-end=3D"2024" class=3D"">
<p data-start=3D"1980" data-end=3D"2024" class=3D"">Filters out neurons wit=
hout reliable RF fits</p>
</li>
<li data-start=3D"2025" data-end=3D"2089" class=3D"">
<p data-start=3D"2027" data-end=3D"2089" class=3D"">You end up with a clean=
 list of neurons to include in modeling</p>
</li>
</ul>
<hr data-start=3D"2091" data-end=3D"2094" class=3D"">
<h3 data-start=3D"2096" data-end=3D"2128" class=3D"">3. <strong data-start=
=3D"2103" data-end=3D"2128">Find matched saccades</strong></h3>
<p data-start=3D"2129" data-end=3D"2190" class=3D"">This is a critical part=
 of the <strong data-start=3D"2160" data-end=3D"2189">match-aware control l=
ogic</strong>:</p>
<ul data-start=3D"2191" data-end=3D"2480">
<li data-start=3D"2191" data-end=3D"2388" class=3D"">
<p data-start=3D"2193" data-end=3D"2228" class=3D"">For each original fixat=
ion/saccade:</p>
<ul data-start=3D"2231" data-end=3D"2388">
<li data-start=3D"2231" data-end=3D"2388" class=3D"">
<p data-start=3D"2233" data-end=3D"2266" class=3D"">Try to find a =E2=80=9C=
control=E2=80=9D fixation:</p>
<ul data-start=3D"2271" data-end=3D"2388">
<li data-start=3D"2271" data-end=3D"2294" class=3D"">
<p data-start=3D"2273" data-end=3D"2294" class=3D"">On the <strong data-sta=
rt=3D"2280" data-end=3D"2294">same image</strong></p>
</li>
<li data-start=3D"2299" data-end=3D"2339" class=3D"">
<p data-start=3D"2301" data-end=3D"2339" class=3D"">At a <strong data-start=
=3D"2306" data-end=3D"2329">sufficient distance</strong> (min_sep)</p>
</li>
<li data-start=3D"2344" data-end=3D"2388" class=3D"">
<p data-start=3D"2346" data-end=3D"2388" class=3D"">But that <strong data-s=
tart=3D"2355" data-end=3D"2388">returns to a similar location</strong></p>
</li>
</ul>
</li>
</ul>
</li>
<li data-start=3D"2389" data-end=3D"2480" class=3D"">
<p data-start=3D"2391" data-end=3D"2480" class=3D"">This is done using <cod=
e data-start=3D"2410" data-end=3D"2424">return_thres</code> and a saccade-p=
airing structure from prior RSC analysis</p>
</li>
</ul>
<p data-start=3D"2482" data-end=3D"2627" class=3D"">=E2=9C=85 Matched sacca=
des are used to <strong data-start=3D"2513" data-end=3D"2555">compare true =
category-driven responses</strong> vs. confounded effects of low-level atte=
ntion, salience, or repetition.</p>
<hr data-start=3D"2629" data-end=3D"2632" class=3D"">
<h3 data-start=3D"2634" data-end=3D"2687" class=3D"">4. <strong data-start=
=3D"2641" data-end=3D"2687">Align neural responses to fixation/saccade</str=
ong></h3>
<ul data-start=3D"2688" data-end=3D"2932">
<li data-start=3D"2688" data-end=3D"2839" class=3D"">
<p data-start=3D"2690" data-end=3D"2706" class=3D"">For each neuron:</p>
<ul data-start=3D"2709" data-end=3D"2839">
<li data-start=3D"2709" data-end=3D"2839" class=3D"">
<p data-start=3D"2711" data-end=3D"2772" class=3D"">Extract its firing rate=
 over a time window aligned to either:</p>
<ul data-start=3D"2777" data-end=3D"2839">
<li data-start=3D"2777" data-end=3D"2804" class=3D"">
<p data-start=3D"2779" data-end=3D"2804" class=3D""><code data-start=3D"277=
9" data-end=3D"2788">sacc_on</code> (saccade onset)</p>
</li>
<li data-start=3D"2809" data-end=3D"2839" class=3D"">
<p data-start=3D"2811" data-end=3D"2839" class=3D"">or <code data-start=3D"=
2814" data-end=3D"2822">fix_on</code> (fixation onset)</p>
</li>
</ul>
</li>
</ul>
</li>
<li data-start=3D"2840" data-end=3D"2932" class=3D"">
<p data-start=3D"2842" data-end=3D"2932" class=3D"">Either in <strong data-=
start=3D"2852" data-end=3D"2863">windows</strong> (e.g., 0=E2=80=93150 ms),=
 or as a <strong data-start=3D"2890" data-end=3D"2905">time series</strong>=
 (e.g., -375 ms to +375 ms)</p>
</li>
</ul>
<p data-start=3D"2934" data-end=3D"2965" class=3D"">This creates <code data=
-start=3D"2947" data-end=3D"2950">Y</code> and <code data-start=3D"2955" da=
ta-end=3D"2964">match_Y</code>:</p>
<ul data-start=3D"2966" data-end=3D"3053">
<li data-start=3D"2966" data-end=3D"3012" class=3D"">
<p data-start=3D"2968" data-end=3D"3012" class=3D"">Shape: <code data-start=
=3D"2975" data-end=3D"3012">[n_fixations, n_time_bins, n_units]</code></p>
</li>
<li data-start=3D"3013" data-end=3D"3053" class=3D"">
<p data-start=3D"3015" data-end=3D"3053" class=3D"">Standardized (z-scored)=
 for regression</p>
</li>
</ul>
<hr data-start=3D"3055" data-end=3D"3058" class=3D"">
<h3 data-start=3D"3060" data-end=3D"3094" class=3D"">5. <strong data-start=
=3D"3067" data-end=3D"3094">Load CNN patch features</strong></h3>
<ul data-start=3D"3095" data-end=3D"3330">
<li data-start=3D"3095" data-end=3D"3199" class=3D"">
<p data-start=3D"3097" data-end=3D"3133" class=3D"">Loads precomputed ViT f=
eatures from:</p>
<pre class=3D"overflow-visible!" data-start=3D"3136" data-end=3D"3199"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">bash</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><spa=
n><span>feats/vit_large_patch16_384/blocks.13.attn.qkv/*.h5
</span></span></code></div></div></pre>
</li>
<li data-start=3D"3200" data-end=3D"3330" class=3D"">
<p data-start=3D"3202" data-end=3D"3208" class=3D"">Grabs:</p>
<ul data-start=3D"3211" data-end=3D"3330">
<li data-start=3D"3211" data-end=3D"3240" class=3D"">
<p data-start=3D"3213" data-end=3D"3240" class=3D"">Patch grid (spatial lay=
out)</p>
</li>
<li data-start=3D"3243" data-end=3D"3269" class=3D"">
<p data-start=3D"3245" data-end=3D"3269" class=3D"">Per-image patch feature=
s</p>
</li>
<li data-start=3D"3272" data-end=3D"3330" class=3D"">
<p data-start=3D"3274" data-end=3D"3330" class=3D"">Background patch featur=
es (for padding or extrapolation)</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"3332" data-end=3D"3335" class=3D"">
<h3 data-start=3D"3337" data-end=3D"3384" class=3D"">6. <strong data-start=
=3D"3344" data-end=3D"3384">Prepare stimuli-to-feature alignment</strong></=
h3>
<ul data-start=3D"3385" data-end=3D"3656">
<li data-start=3D"3385" data-end=3D"3475" class=3D"">
<p data-start=3D"3387" data-end=3D"3475" class=3D"">Uses the fixations + RF=
 positions to figure out which patch(es) to use from the CNN grid</p>
</li>
<li data-start=3D"3476" data-end=3D"3575" class=3D"">
<p data-start=3D"3478" data-end=3D"3527" class=3D"">For each RF center + sa=
ccade trajectory position:</p>
<ul data-start=3D"3530" data-end=3D"3575">
<li data-start=3D"3530" data-end=3D"3575" class=3D"">
<p data-start=3D"3532" data-end=3D"3575" class=3D"">Finds the patch feature=
 vector at that spot</p>
</li>
</ul>
</li>
<li data-start=3D"3576" data-end=3D"3656" class=3D"">
<p data-start=3D"3578" data-end=3D"3616" class=3D"">Reconstructs input feat=
ure matrix <code data-start=3D"3612" data-end=3D"3615">X</code>:</p>
<ul data-start=3D"3619" data-end=3D"3656">
<li data-start=3D"3619" data-end=3D"3656" class=3D"">
<p data-start=3D"3621" data-end=3D"3656" class=3D"">Shape: <code data-start=
=3D"3628" data-end=3D"3656">[n_fixations, feature_dim]</code></p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"3658" data-end=3D"3661" class=3D"">
<h3 data-start=3D"3663" data-end=3D"3704" class=3D"">7. <strong data-start=
=3D"3670" data-end=3D"3704">Cross-validated encoding model</strong></h3>
<ul data-start=3D"3705" data-end=3D"3960">
<li data-start=3D"3705" data-end=3D"3774" class=3D"">
<p data-start=3D"3707" data-end=3D"3774" class=3D"">Ridge regression: fit m=
odel CNN features <code data-start=3D"3748" data-end=3D"3751">X</code> =E2=
=86=92 neural responses <code data-start=3D"3771" data-end=3D"3774">Y</code=
></p>
</li>
<li data-start=3D"3775" data-end=3D"3847" class=3D"">
<p data-start=3D"3777" data-end=3D"3786" class=3D"">Done for:</p>
<ul data-start=3D"3789" data-end=3D"3847">
<li data-start=3D"3789" data-end=3D"3813" class=3D"">
<p data-start=3D"3791" data-end=3D"3813" class=3D""><strong data-start=3D"3=
791" data-end=3D"3813">Original condition</strong></p>
</li>
<li data-start=3D"3816" data-end=3D"3847" class=3D"">
<p data-start=3D"3818" data-end=3D"3847" class=3D""><strong data-start=3D"3=
818" data-end=3D"3847">Matched control condition</strong></p>
</li>
</ul>
</li>
<li data-start=3D"3848" data-end=3D"3859" class=3D"">
<p data-start=3D"3850" data-end=3D"3859" class=3D"">5-fold CV</p>
</li>
<li data-start=3D"3860" data-end=3D"3960" class=3D"">
<p data-start=3D"3862" data-end=3D"3868" class=3D"">Saves:</p>
<ul data-start=3D"3871" data-end=3D"3960">
<li data-start=3D"3871" data-end=3D"3910" class=3D"">
<p data-start=3D"3873" data-end=3D"3910" class=3D""><code data-start=3D"387=
3" data-end=3D"3883">cv_corrs</code> (mean Pearson correlation)</p>
</li>
<li data-start=3D"3913" data-end=3D"3960" class=3D"">
<p data-start=3D"3915" data-end=3D"3960" class=3D""><code data-start=3D"391=
5" data-end=3D"3935">cv_corrs_per_split</code> (per-split correlations)</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"3962" data-end=3D"3965" class=3D"">
<h3 data-start=3D"3967" data-end=3D"4005" class=3D"">8. <strong data-start=
=3D"3974" data-end=3D"4005">(Optional) Permutation test</strong></h3>
<ul data-start=3D"4006" data-end=3D"4117">
<li data-start=3D"4006" data-end=3D"4117" class=3D"">
<p data-start=3D"4008" data-end=3D"4024" class=3D"">If <code data-start=3D"=
4011" data-end=3D"4023">n_perm &gt; 0</code>:</p>
<ul data-start=3D"4027" data-end=3D"4117">
<li data-start=3D"4027" data-end=3D"4043" class=3D"">
<p data-start=3D"4029" data-end=3D"4043" class=3D"">Shuffle labels</p>
</li>
<li data-start=3D"4046" data-end=3D"4073" class=3D"">
<p data-start=3D"4048" data-end=3D"4073" class=3D"">Compute null distributi=
on</p>
</li>
<li data-start=3D"4076" data-end=3D"4117" class=3D"">
<p data-start=3D"4078" data-end=3D"4117" class=3D"">Get p-values per unit =
=C3=97 time =C3=97 location</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"4119" data-end=3D"4122" class=3D"">
<h3 data-start=3D"4124" data-end=3D"4149" class=3D"">9. <strong data-start=
=3D"4131" data-end=3D"4149">Save to NetCDF</strong></h3>
<ul data-start=3D"4150" data-end=3D"4353">
<li data-start=3D"4150" data-end=3D"4202" class=3D"">
<p data-start=3D"4152" data-end=3D"4202" class=3D"">Saves everything in a n=
ice <code data-start=3D"4179" data-end=3D"4195">xarray.Dataset</code> forma=
t</p>
</li>
<li data-start=3D"4203" data-end=3D"4353" class=3D"">
<p data-start=3D"4205" data-end=3D"4218" class=3D"">Organized by:</p>
<ul data-start=3D"4221" data-end=3D"4353">
<li data-start=3D"4221" data-end=3D"4252" class=3D"">
<p data-start=3D"4223" data-end=3D"4252" class=3D""><code data-start=3D"422=
3" data-end=3D"4234">condition</code> (original, match)</p>
</li>
<li data-start=3D"4255" data-end=3D"4286" class=3D"">
<p data-start=3D"4257" data-end=3D"4286" class=3D""><code data-start=3D"425=
7" data-end=3D"4263">time</code> (e.g., -200 to 400 ms)</p>
</li>
<li data-start=3D"4289" data-end=3D"4333" class=3D"">
<p data-start=3D"4291" data-end=3D"4333" class=3D""><code data-start=3D"429=
1" data-end=3D"4296">pos</code> (relative RF location along saccade)</p>
</li>
<li data-start=3D"4336" data-end=3D"4353" class=3D"">
<p data-start=3D"4338" data-end=3D"4353" class=3D""><code data-start=3D"433=
8" data-end=3D"4344">unit</code> (neuron)</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"4355" data-end=3D"4358" class=3D"">
<h3 data-start=3D"4360" data-end=3D"4384" class=3D"">10. <strong data-start=
=3D"4368" data-end=3D"4384">Plot results</strong></h3>
<ul data-start=3D"4385" data-end=3D"4540">
<li data-start=3D"4385" data-end=3D"4540" class=3D"">
<p data-start=3D"4387" data-end=3D"4393" class=3D"">Plots:</p>
<ul data-start=3D"4396" data-end=3D"4540">
<li data-start=3D"4396" data-end=3D"4442" class=3D"">
<p data-start=3D"4398" data-end=3D"4442" class=3D"">Timecourse of model fit=
 for each RF position</p>
</li>
<li data-start=3D"4445" data-end=3D"4494" class=3D"">
<p data-start=3D"4447" data-end=3D"4494" class=3D"">Heatmaps of model fit o=
ver time and RF location</p>
</li>
<li data-start=3D"4497" data-end=3D"4540" class=3D"">
<p data-start=3D"4499" data-end=3D"4540" class=3D"">Optionally, p-value map=
s for significance</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"4542" data-end=3D"4545" class=3D"">
<h2 data-start=3D"4547" data-end=3D"4564" class=3D"">=E2=9C=85 Final Output=
</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"45=
66" data-end=3D"4839" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"4566" data-end=3D"4593"><tr data-start=3D"4566" data-end=3D"=
4593"><th data-start=3D"4566" data-end=3D"4573" data-col-size=3D"sm">File</=
th><th data-start=3D"4573" data-end=3D"4593" data-col-size=3D"md">What it c=
ontains</th></tr></thead><tbody data-start=3D"4622" data-end=3D"4839"><tr d=
ata-start=3D"4622" data-end=3D"4699"><td data-start=3D"4622" data-end=3D"46=
46" data-col-size=3D"sm"><code data-start=3D"4624" data-end=3D"4629">.h5</c=
ode> output (NetCDF)</td><td data-start=3D"4646" data-end=3D"4699" data-col=
-size=3D"md">R=C2=B2 scores, p-values, and metadata for all neurons</td></t=
r><tr data-start=3D"4700" data-end=3D"4769"><td data-start=3D"4700" data-en=
d=3D"4719" data-col-size=3D"sm"><code data-start=3D"4702" data-end=3D"4718"=
>xarray.Dataset</code></td><td data-start=3D"4719" data-end=3D"4769" data-c=
ol-size=3D"md">Organized by condition =C3=97 time =C3=97 space =C3=97 neuro=
n</td></tr><tr data-start=3D"4770" data-end=3D"4839"><td data-start=3D"4770=
" data-end=3D"4778" data-col-size=3D"sm">Plots</td><td data-start=3D"4778" =
data-end=3D"4839" data-col-size=3D"md">Visual summary of model performance =
vs. position and time</td></tr></tbody></table><div class=3D"sticky end-(--=
thread-content-margin) h-0 self-end select-none"><div class=3D"absolute end=
-0 flex items-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=
=3D"closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary=
 text-token-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:n=
ot(:hover):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(=
:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 2=
4 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-h=
eavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315=
 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17=
H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315=
 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 1=
4.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C=
4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5=
523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></s=
vg></button></span></div></div></div></div>
<hr data-start=3D"4841" data-end=3D"4844" class=3D"">
<h2 data-start=3D"4846" data-end=3D"4867" class=3D"">=F0=9F=A7=A0 Why it ma=
tters:</h2>
<p data-start=3D"4869" data-end=3D"4930" class=3D"">This script gives you a=
 <strong data-start=3D"4893" data-end=3D"4926">rigorous, behavior-aware tes=
t</strong> of:</p>
<blockquote data-start=3D"4931" data-end=3D"5093">
<p data-start=3D"4933" data-end=3D"5093" class=3D"">=E2=80=9CCan CNN patch =
features predict the neural response of a given neuron <strong data-start=
=3D"5003" data-end=3D"5028">during natural vision</strong>, and is that sel=
ectivity <strong data-start=3D"5054" data-end=3D"5091">robust to gaze/fixat=
ion confounds</strong>?=E2=80=9D</p>
</blockquote>
<p data-start=3D"5095" data-end=3D"5162" class=3D"">It's the final step tha=
t validates your <strong data-start=3D"5135" data-end=3D"5161">neural=E2=80=
=93model alignment</strong>.</p>
<hr data-start=3D"5164" data-end=3D"5167" class=3D"">
<p data-start=3D"5169" data-end=3D"5291" class=3D"">Would you like help wri=
ting a summary table of key neuron-level results or plotting unit-wise sele=
ctivity vs. RF position?</p></div></div></div></div></div></div></div></div=
></article><article class=3D"text-token-text-primary w-full" dir=3D"auto" d=
ata-testid=3D"conversation-turn-153" data-scroll-anchor=3D"false"><h5 class=
=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--=
thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spa=
cing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-cont=
ent-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--t=
hread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] =
mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:g=
ap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D=
"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0 fle=
x-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex m=
ax-w-full flex-col grow"><div data-message-author-role=3D"user" data-messag=
e-id=3D"581e3419-80c5-44c3-bf7a-11ba14f72397" dir=3D"auto" class=3D"min-h-8=
 text-message relative flex w-full flex-col items-end gap-2 text-start brea=
k-words whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-=
full flex-col gap-1 empty:hidden items-end rtl:items-start"><div class=3D"r=
elative max-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded=
-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">which script finds / e=
ncodes the features of the cnn</div></div></div></div></div></div></div></d=
iv></div></article><article class=3D"text-token-text-primary w-full" dir=3D=
"auto" data-testid=3D"conversation-turn-154" data-scroll-anchor=3D"false"><=
h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-a=
uto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-=
margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(-=
-thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @=
[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-w=
idth:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-bas=
e gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden"=
 tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full=
 min-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-=
3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author-ro=
le=3D"assistant" data-message-id=3D"6ce09239-b6db-45f9-b32d-2a0cf9f985ac" d=
ir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col ite=
ms-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;]=
:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-co=
l gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:pros=
e-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"104" clas=
s=3D"">Great question=E2=80=94and it connects directly to the <strong data-=
start=3D"47" data-end=3D"61">first step</strong> in your model-to-brain ali=
gnment pipeline.</p>
<hr data-start=3D"106" data-end=3D"109" class=3D"">
<h2 data-start=3D"111" data-end=3D"174" class=3D"">=E2=9C=85 The script tha=
t <strong data-start=3D"132" data-end=3D"170">finds and encodes the CNN fea=
tures</strong> is:</h2>
<h3 data-start=3D"176" data-end=3D"218" class=3D"">=F0=9F=93=92 <code data-=
start=3D"183" data-end=3D"218">script_cache_stim_grid_repr.ipynb</code></h3=
>
<p data-start=3D"220" data-end=3D"307" class=3D"">This is the <strong data-=
start=3D"232" data-end=3D"266">core feature extraction script</strong> for =
your Vision Transformer (ViT) model.</p>
<hr data-start=3D"309" data-end=3D"312" class=3D"">
<h2 data-start=3D"314" data-end=3D"333" class=3D"">=F0=9F=A7=A0 What it doe=
s:</h2>
<blockquote data-start=3D"335" data-end=3D"424">
<p data-start=3D"337" data-end=3D"424" class=3D"">For each image shown to t=
he monkey, this script extracts <strong data-start=3D"394" data-end=3D"418"=
>deep feature vectors</strong> from:</p>
</blockquote>
<ul data-start=3D"425" data-end=3D"599">
<li data-start=3D"425" data-end=3D"471" class=3D"">
<p data-start=3D"427" data-end=3D"471" class=3D"">the <strong data-start=3D=
"431" data-end=3D"447">entire image</strong> (global representation)</p>
</li>
<li data-start=3D"472" data-end=3D"546" class=3D"">
<p data-start=3D"474" data-end=3D"546" class=3D"">a <strong data-start=3D"4=
76" data-end=3D"503">grid of spatial patches</strong> (for retinotopic or g=
aze-aligned modeling)</p>
</li>
<li data-start=3D"547" data-end=3D"599" class=3D"">
<p data-start=3D"549" data-end=3D"599" class=3D"">a <strong data-start=3D"5=
51" data-end=3D"571">background patch</strong> (uniform gray, for control)<=
/p>
</li>
</ul>
<hr data-start=3D"601" data-end=3D"604" class=3D"">
<h2 data-start=3D"606" data-end=3D"640" class=3D"">=F0=9F=92=A1 Key compone=
nts in the script</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"64=
2" data-end=3D"1258" class=3D"w-fit min-w-(--thread-content-width)"><thead =
data-start=3D"642" data-end=3D"665"><tr data-start=3D"642" data-end=3D"665"=
><th data-start=3D"642" data-end=3D"649" data-col-size=3D"sm">Part</th><th =
data-start=3D"649" data-end=3D"665" data-col-size=3D"md">What it does</th><=
/tr></thead><tbody data-start=3D"690" data-end=3D"1258"><tr data-start=3D"6=
90" data-end=3D"778"><td data-start=3D"690" data-end=3D"731" data-col-size=
=3D"sm"><code data-start=3D"692" data-end=3D"730">model_name =3D 'vit_large=
_patch16_384'</code></td><td data-start=3D"731" data-end=3D"778" data-col-s=
ize=3D"md">Loads a pretrained Vision Transformer (ViT)</td></tr><tr data-st=
art=3D"779" data-end=3D"876"><td data-start=3D"779" data-end=3D"817" data-c=
ol-size=3D"sm"><code data-start=3D"781" data-end=3D"816">layer_name =3D 'bl=
ocks.13.attn.qkv'</code></td><td data-start=3D"817" data-end=3D"876" data-c=
ol-size=3D"md">Specifies which internal layer to extract features from</td>=
</tr><tr data-start=3D"877" data-end=3D"977"><td data-start=3D"877" data-en=
d=3D"910" data-col-size=3D"sm"><code data-start=3D"879" data-end=3D"909">ex=
tract_pooled_features(...)</code></td><td data-start=3D"910" data-end=3D"97=
7" data-col-size=3D"md">Extracts spatially averaged features from full imag=
e or patches</td></tr><tr data-start=3D"978" data-end=3D"1050"><td data-sta=
rt=3D"978" data-end=3D"1003" data-col-size=3D"sm"><code data-start=3D"980" =
data-end=3D"1002">get_image_patch(...)</code></td><td data-start=3D"1003" d=
ata-end=3D"1050" data-col-size=3D"md">Crops 2D image patches at defined pos=
itions</td></tr><tr data-start=3D"1051" data-end=3D"1113"><td data-start=3D=
"1051" data-end=3D"1072" data-col-size=3D"sm"><code data-start=3D"1053" dat=
a-end=3D"1071">feats/full_image</code></td><td data-start=3D"1072" data-end=
=3D"1113" data-col-size=3D"md">Stores feature vector from full image</td></=
tr><tr data-start=3D"1114" data-end=3D"1188"><td data-start=3D"1114" data-e=
nd=3D"1135" data-col-size=3D"sm"><code data-start=3D"1116" data-end=3D"1134=
">feats/patch_grid</code></td><td data-start=3D"1135" data-end=3D"1188" dat=
a-col-size=3D"md">Stores feature vectors from a <strong data-start=3D"1167"=
 data-end=3D"1186">grid of patches</strong></td></tr><tr data-start=3D"1189=
" data-end=3D"1258"><td data-start=3D"1189" data-end=3D"1202" data-col-size=
=3D"sm"><code data-start=3D"1191" data-end=3D"1201">feats/bg</code></td><td=
 data-start=3D"1202" data-end=3D"1258" data-col-size=3D"md">Stores feature =
vector for a background control image</td></tr></tbody></table><div class=
=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"><div cla=
ss=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary hover:bg=
-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 transition=
-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-none group-=
[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.656=
9 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569=
 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H=
19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4=
.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C=
14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curren=
tColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"1260" data-end=3D"1263" class=3D"">
<h2 data-start=3D"1265" data-end=3D"1285" class=3D"">=F0=9F=97=82=EF=B8=8F =
Output Format</h2>
<p data-start=3D"1287" data-end=3D"1316" class=3D"">The script saves a file=
 like:</p>
<pre class=3D"overflow-visible!" data-start=3D"1317" data-end=3D"1405"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">bash</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><spa=
n><span>feats/vit_large_patch16_384/blocks.13.attn.qkv/16.0x16.0_as_2x2_in_=
0.50_steps.h5
</span></span></code></div></div></pre>
<p data-start=3D"1407" data-end=3D"1432" class=3D"">This <code data-start=
=3D"1412" data-end=3D"1417">.h5</code> file contains:</p>
<ul data-start=3D"1433" data-end=3D"1550">
<li data-start=3D"1433" data-end=3D"1474" class=3D"">
<p data-start=3D"1435" data-end=3D"1474" class=3D""><code data-start=3D"143=
5" data-end=3D"1447">full_image</code>: <code data-start=3D"1449" data-end=
=3D"1474">[n_images, feature_dim]</code></p>
</li>
<li data-start=3D"1475" data-end=3D"1526" class=3D"">
<p data-start=3D"1477" data-end=3D"1526" class=3D""><code data-start=3D"147=
7" data-end=3D"1489">patch_grid</code>: <code data-start=3D"1491" data-end=
=3D"1526">[n_images, n_x, n_y, feature_dim]</code></p>
</li>
<li data-start=3D"1527" data-end=3D"1550" class=3D"">
<p data-start=3D"1529" data-end=3D"1550" class=3D""><code data-start=3D"152=
9" data-end=3D"1533">bg</code>: <code data-start=3D"1535" data-end=3D"1550"=
>[feature_dim]</code></p>
</li>
</ul>
<p data-start=3D"1552" data-end=3D"1600" class=3D"">These features are late=
r loaded in scripts like:</p>
<ul data-start=3D"1601" data-end=3D"1767">
<li data-start=3D"1601" data-end=3D"1662" class=3D"">
<p data-start=3D"1603" data-end=3D"1662" class=3D""><code data-start=3D"160=
3" data-end=3D"1635">script_6a_model_perf_map.ipynb</code> (to predict neur=
al firing)</p>
</li>
<li data-start=3D"1663" data-end=3D"1706" class=3D"">
<p data-start=3D"1665" data-end=3D"1706" class=3D""><code data-start=3D"166=
5" data-end=3D"1696">script_6b_feat_corr_map.ipynb</code> (for RSA)</p>
</li>
<li data-start=3D"1707" data-end=3D"1767" class=3D"">
<p data-start=3D"1709" data-end=3D"1767" class=3D""><code data-start=3D"170=
9" data-end=3D"1744">script_7a_mas_match_control.ipynb</code> (match-aware =
encoding)</p>
</li>
</ul>
<hr data-start=3D"1769" data-end=3D"1772" class=3D"">
<h2 data-start=3D"1774" data-end=3D"1784" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"17=
86" data-end=3D"2186" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1786" data-end=3D"1807"><tr data-start=3D"1786" data-end=3D"=
1807"><th data-start=3D"1786" data-end=3D"1797" data-col-size=3D"sm">Questi=
on</th><th data-start=3D"1797" data-end=3D"1807" data-col-size=3D"md">Answe=
r</th></tr></thead><tbody data-start=3D"1830" data-end=3D"2186"><tr data-st=
art=3D"1830" data-end=3D"1908"><td data-start=3D"1830" data-end=3D"1867" da=
ta-col-size=3D"sm">Which script encodes CNN features?</td><td data-start=3D=
"1867" data-end=3D"1908" data-col-size=3D"md">=E2=9C=85 <code data-start=3D=
"1871" data-end=3D"1906">script_cache_stim_grid_repr.ipynb</code></td></tr>=
<tr data-start=3D"1909" data-end=3D"1960"><td data-start=3D"1909" data-end=
=3D"1923" data-col-size=3D"sm">What model?</td><td data-start=3D"1923" data=
-end=3D"1960" data-col-size=3D"md">ViT-Large, patch16, input 384=C3=97384</=
td></tr><tr data-start=3D"1961" data-end=3D"2025"><td data-start=3D"1961" d=
ata-end=3D"1975" data-col-size=3D"sm">What layer?</td><td data-start=3D"197=
5" data-end=3D"2025" data-col-size=3D"md"><code data-start=3D"1977" data-en=
d=3D"1999">'blocks.13.attn.qkv'</code> (attention projections)</td></tr><tr=
 data-start=3D"2026" data-end=3D"2105"><td data-start=3D"2026" data-end=3D"=
2045" data-col-size=3D"sm">What gets saved?</td><td data-start=3D"2045" dat=
a-end=3D"2105" data-col-size=3D"md">Full image vector, patch grid vectors, =
background vector</td></tr><tr data-start=3D"2106" data-end=3D"2186"><td da=
ta-start=3D"2106" data-end=3D"2125" data-col-size=3D"sm">Where used next?</=
td><td data-start=3D"2125" data-end=3D"2186" data-col-size=3D"md">In encodi=
ng models and RSA to compare with monkey neurons</td></tr></tbody></table><=
div class=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"=
><div class=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;">=
<span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary=
 hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 t=
ransition-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-no=
ne group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" hei=
ght=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2=
000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"e=
venodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C=
22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 =
2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 =
17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44=
772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20=
 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=
=3D"currentColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"2188" data-end=3D"2191" class=3D"">
<p data-start=3D"2193" data-end=3D"2291" class=3D"">Would you like to visua=
lize feature similarity between two images using their ViT feature vectors?=
</p></div></div></div></div></div></div></div></div></article><article clas=
s=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversati=
on-turn-155" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</=
h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--=
spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thr=
ead-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"re=
lative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow=
"><div data-message-author-role=3D"user" data-message-id=3D"4e4ceb37-14cf-4=
0d1-8c23-db92fee23a4b" dir=3D"auto" class=3D"min-h-8 text-message relative =
flex w-full flex-col items-end gap-2 text-start break-words whitespace-norm=
al [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 emp=
ty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[var(--us=
er-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div =
class=3D"whitespace-pre-wrap">where is this script?</div></div></div></div>=
</div></div></div></div></div></article><article class=3D"text-token-text-p=
rimary w-full" dir=3D"auto" data-testid=3D"conversation-turn-156" data-scro=
ll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"t=
ext-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37re=
m]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin=
:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-conte=
nt-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[-=
-thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-w=
idth) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-vi=
sible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn=
 relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative f=
lex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div d=
ata-message-author-role=3D"assistant" data-message-id=3D"899a8160-07a2-4980=
-9ef3-18195e001a89" dir=3D"auto" class=3D"min-h-8 text-message relative fle=
x w-full flex-col items-end gap-2 text-start break-words whitespace-normal =
[.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=
=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"m=
arkdown prose dark:prose-invert w-full break-words dark"><p data-start=3D"0=
" data-end=3D"89" class=3D"">Great follow-up. Based on your earlier uploads=
 and references, here's how it breaks down:</p>
<hr data-start=3D"91" data-end=3D"94" class=3D"">
<h2 data-start=3D"96" data-end=3D"149" class=3D"">=F0=9F=94=8D Location of =
<code data-start=3D"114" data-end=3D"149">script_cache_stim_grid_repr.ipynb=
</code></h2>
<p data-start=3D"151" data-end=3D"355" class=3D"">This script is <strong da=
ta-start=3D"166" data-end=3D"189">not directly listed</strong> among the up=
loaded notebooks (like <code data-start=3D"225" data-end=3D"255">script_5a_=
vision_model.ipynb</code>, etc.), but <strong data-start=3D"268" data-end=
=3D"288">your copied code</strong> from earlier exactly matches this script=
=E2=80=99s functionality. In fact:</p>
<h3 data-start=3D"357" data-end=3D"394" class=3D"">=E2=9C=85 The script <st=
rong data-start=3D"374" data-end=3D"393">you pasted here</strong>:</h3>
<blockquote data-start=3D"395" data-end=3D"467">
<p data-start=3D"397" data-end=3D"467" class=3D"">=F0=9F=A7=BE The long fea=
ture extraction notebook using ViT<br data-start=3D"446" data-end=3D"449">
With lines like:</p>
</blockquote>
<pre class=3D"overflow-visible!" data-start=3D"468" data-end=3D"619"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>model_name =3D </span><span><span class=3D"hljs-str=
ing">'vit_large_patch16_384'</span></span><span>
layer_name =3D </span><span><span class=3D"hljs-string">'blocks.13.attn.qkv=
'</span></span><span>
feats/patch_grid
get_image_patch(...)
extract_pooled_features(...)
</span></span></code></div></div></pre>
<p data-start=3D"621" data-end=3D"691" class=3D"">That <strong data-start=
=3D"626" data-end=3D"632">is</strong> the implementation of <code data-star=
t=3D"655" data-end=3D"690">script_cache_stim_grid_repr.ipynb</code>.</p>
<hr data-start=3D"693" data-end=3D"696" class=3D"">
<h2 data-start=3D"698" data-end=3D"720" class=3D"">=F0=9F=93=81 Where it's =
used:</h2>
<p data-start=3D"722" data-end=3D"762" class=3D"">This script is <strong da=
ta-start=3D"737" data-end=3D"758">called or wrapped</strong> by:</p>
<h3 data-start=3D"764" data-end=3D"800" class=3D"">=F0=9F=93=84 <code data-=
start=3D"771" data-end=3D"800">run_cache_stim_grid_repr.py</code></h3>
<ul data-start=3D"801" data-end=3D"999">
<li data-start=3D"801" data-end=3D"887" class=3D"">
<p data-start=3D"803" data-end=3D"887" class=3D"">A <code data-start=3D"805=
" data-end=3D"810">.py</code> wrapper that passes per-session arguments (li=
ke list of images, size in dva)</p>
</li>
<li data-start=3D"888" data-end=3D"957" class=3D"">
<p data-start=3D"890" data-end=3D"957" class=3D"">Ensures that only <strong=
 data-start=3D"908" data-end=3D"922">new images</strong> get processed (oth=
ers are skipped)</p>
</li>
<li data-start=3D"958" data-end=3D"999" class=3D"">
<p data-start=3D"960" data-end=3D"999" class=3D"">Launches the <code data-s=
tart=3D"973" data-end=3D"981">.ipynb</code> logic per session</p>
</li>
</ul>
<hr data-start=3D"1001" data-end=3D"1004" class=3D"">
<h2 data-start=3D"1006" data-end=3D"1064" class=3D"">=F0=9F=93=81 File stru=
cture in the repo (based on documentation):</h2>
<pre class=3D"overflow-visible!" data-start=3D"1066" data-end=3D"1461"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">css</div><div class=3D"sticky top-9"><div cl=
ass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"bg=
-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-main=
-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cente=
r select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7=
 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6=
569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V=
10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.=
5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772=
 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.552=
3 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor=
"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"><=
button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><spa=
n><span>scripts/
=E2=94=9C=E2=94=80=E2=94=80 script_cache_stim_grid_repr</span><span><span c=
lass=3D"hljs-selector-class">.ipynb</span></span><span>   =E2=86=90 the </s=
pan><span><span class=3D"hljs-selector-tag">main</span></span><span> featur=
e extraction logic (what you pasted)
=E2=94=9C=E2=94=80=E2=94=80 run_cache_stim_grid_repr</span><span><span clas=
s=3D"hljs-selector-class">.py</span></span><span>         =E2=86=90 lightwe=
ight utility </span><span><span class=3D"hljs-selector-tag">to</span></span=
><span> apply it per session
=E2=94=9C=E2=94=80=E2=94=80 script_5a_vision_model</span><span><span class=
=3D"hljs-selector-class">.ipynb</span></span><span>        =E2=86=90 high-l=
evel entry point for encoding/modeling
...
feats/
=E2=94=94=E2=94=80=E2=94=80 vit_large_patch16_384/
    =E2=94=94=E2=94=80=E2=94=80 blocks.</span><span><span class=3D"hljs-num=
ber">13</span></span><span><span class=3D"hljs-selector-class">.attn</span>=
</span><span><span class=3D"hljs-selector-class">.qkv</span></span><span>/
        =E2=94=94=E2=94=80=E2=94=80 </span><span><span class=3D"hljs-number=
">16.0</span></span><span>x16.</span><span><span class=3D"hljs-number">0</s=
pan></span><span>_as_2x2_in_0.</span><span><span class=3D"hljs-number">50</=
span></span><span>_steps</span><span><span class=3D"hljs-selector-class">.h=
5</span></span><span>
</span></span></code></div></div></pre>
<hr data-start=3D"1463" data-end=3D"1466" class=3D"">
<h2 data-start=3D"1468" data-end=3D"1478" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"14=
80" data-end=3D"1778" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1480" data-end=3D"1505"><tr data-start=3D"1480" data-end=3D"=
1505"><th data-start=3D"1480" data-end=3D"1494" data-col-size=3D"sm">Script=
 name</th><th data-start=3D"1494" data-end=3D"1505" data-col-size=3D"md">Pu=
rpose</th></tr></thead><tbody data-start=3D"1532" data-end=3D"1778"><tr dat=
a-start=3D"1532" data-end=3D"1614"><td data-start=3D"1532" data-end=3D"1570=
" data-col-size=3D"sm"><code data-start=3D"1534" data-end=3D"1569">script_c=
ache_stim_grid_repr.ipynb</code></td><td data-start=3D"1570" data-end=3D"16=
14" data-col-size=3D"md">Encodes image + patch features using ViT</td></tr>=
<tr data-start=3D"1615" data-end=3D"1700"><td data-start=3D"1615" data-end=
=3D"1647" data-col-size=3D"sm"><code data-start=3D"1617" data-end=3D"1646">=
run_cache_stim_grid_repr.py</code></td><td data-start=3D"1647" data-end=3D"=
1700" data-col-size=3D"md">Wrapper to run the <code data-start=3D"1668" dat=
a-end=3D"1676">.ipynb</code> on a specific session</td></tr><tr data-start=
=3D"1701" data-end=3D"1778"><td data-start=3D"1701" data-end=3D"1721" data-=
col-size=3D"sm">Your code snippet</td><td data-start=3D"1721" data-end=3D"1=
778" data-col-size=3D"md">=E2=9C=85 Matches <code data-start=3D"1733" data-=
end=3D"1768">script_cache_stim_grid_repr.ipynb</code> exactly</td></tr></tb=
ody></table><div class=3D"sticky end-(--thread-content-margin) h-0 self-end=
 select-none"><div class=3D"absolute end-0 flex items-end" style=3D"height:=
 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-tok=
en-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 rou=
nded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:poin=
ter-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg wid=
th=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http:/=
/www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" c=
lip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.3=
4315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H=
5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 =
7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4=
 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.55=
23 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 1=
4 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div></di=
v></div>
<hr data-start=3D"1780" data-end=3D"1783" class=3D"">
<p data-start=3D"1785" data-end=3D"1917" class=3D"">Would you like a lightw=
eight wrapper script to generate features for <strong data-start=3D"1854" d=
ata-end=3D"1881">a custom list of images</strong>, outside of session infra=
structure?</p></div></div></div></div></div></div></div></div></article><ar=
ticle class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"=
conversation-turn-157" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">Y=
ou said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content=
-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72r=
em]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><=
div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-=
max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex m=
ax-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 =
group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div clas=
s=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><div cl=
ass=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex=
-col grow"><div data-message-author-role=3D"user" data-message-id=3D"da53d5=
78-deb0-48a3-9aa1-7c2c52643df7" dir=3D"auto" class=3D"min-h-8 text-message =
relative flex w-full flex-col items-end gap-2 text-start break-words whites=
pace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col =
gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-=
[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2=
.5"><div class=3D"whitespace-pre-wrap">
import sys
from pathlib import Path
from warnings import warn

import cv2
import h5py as h5
import numpy as np
import torch
from PIL import Image
from tqdm import tqdm

sys.path.append('../lib')
from modeling import models, registry
from modeling.utils import make_layer_hook, recur_collapse_feats
from storage import get_storage_functions
from local_paths import stim_dir, cache_dir
Parameters
#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
# image to process
#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
im_md5s    =3D 'md5_im1,md5_im2'
sep        =3D ','
im_w       =3D 16    # size of full image; ...
im_h       =3D 16    # unit: dva, but only ratio (im_size/patch_size) reall=
y matters
ar_tol     =3D 3/4   # aspect ratio tolerance (between image file and provi=
ded size)


#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
# patch size and resolution
#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
patch_size =3D  2    # size of each crop patch
patch_step =3D  0.5  # step size of patch location


#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
# model params
#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
model_name    =3D 'vit_large_patch16_384'
layer_name    =3D 'blocks.13.attn.qkv'
spatial_averaging =3D True  # over W, H for conv; over S for attention


#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
# paths
#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
# unlike other scripts, this one is intentionally unaware of subfolders
# (thereby requiring image IDs, e.g., MD5s, to truly be unique)
# all images are in [stim_dir]/Stimuli), so specify it explicitly
stim_dir =3D stim_dir + 'Stimuli/'

output_root =3D cache_dir + 'feats/'


#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
# misc
#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D
device =3D 'cuda:0'
bgc =3D (128,128,128)   # background color; used to pad images
Check prereqs and params
print('Loading images from folder', stim_dir)
stim_dir =3D Path(stim_dir).expanduser()
assert stim_dir.is_dir()

output_root =3D Path(output_root)
output_path =3D output_root / model_name / layer_name / \
    f'{im_w:.1f}x{im_h:.1f}_as_{patch_size}x{patch_size}_in_{patch_step:.2f=
}_steps.h5'
print('Saving results to', output_path)
output_path =3D output_path.expanduser()
output_path.parent.mkdir(exist_ok=3DTrue, parents=3DTrue)
Prepare parameters; save config
im_md5s =3D im_md5s.split(sep)
print('Processing', len(im_md5s), 'images')
im_size =3D (im_w, im_h)
ar_tol =3D min(ar_tol, 1/ar_tol)
patch_step =3D float(patch_step)

# interpret this as origin =3D=3D lower left
patches_ledge_x =3D np.arange(int(np.ceil(im_size[0]/patch_step))) * patch_=
step  # full and right partial patches
patches_ledge_x =3D np.concatenate([
    np.arange(-1, -int(np.ceil(patch_size/patch_step)), -1)[::-1] * patch_s=
tep,  # left partial patches
    patches_ledge_x])
patches_ledge_x -=3D im_size[0] / 2  # align to image center
n_patches_x =3D len(patches_ledge_x)

patches_ledge_y =3D np.arange(int(np.ceil(im_size[1]/patch_step))) * patch_=
step  # full and right partial patches
patches_ledge_y =3D np.concatenate([
    np.arange(-1, -int(np.ceil(patch_size/patch_step)), -1)[::-1] * patch_s=
tep,  # left partial patches
    patches_ledge_y])
patches_ledge_y -=3D im_size[1] / 2  # align to image center
n_patches_y =3D len(patches_ledge_y)

print('Patches step size:', patch_step)
print(f'Number of patches: {n_patches_x} x {n_patches_y} (x-by-y)')
print('Patches (bin lower edge):')
print('(The coordinates in degrees are with origin at image center)')
print('x:')
print('\t' + str(patches_ledge_x).replace('\n', '\n\t'))
print('y:')
print('\t' + str(patches_ledge_y).replace('\n', '\n\t'))
model_imsize =3D registry.get_default_preproc(model_name)['imsize']
print('Model input image size:', model_imsize)
tqdm_ =3D lambda x: tqdm(x, mininterval=3D300, miniters=3D10)  # to avoid b=
loated log file
save_results, add_attr_to_dset, check_equals_saved, link_dsets, copy_group =
=3D \
    get_storage_functions(output_path)
save_results('config/stimuli/size_dva', im_size)

group =3D 'config/patch_grid/'
save_results(group+'size', patch_size)
save_results(group+'step', patch_step)
save_results(group+'eft_edges', patches_ledge_x)
save_results(group+'right_edges', patches_ledge_x+patch_size)
save_results(group+'lower_edges', patches_ledge_y)
save_results(group+'upper_edges', patches_ledge_y+patch_size)
save_results(group+'x_locs', patches_ledge_x+patch_size/2)
save_results(group+'y_locs', patches_ledge_y+patch_size/2)

group =3D 'config/modelling/'
save_results(group+'model_name', model_name)
save_results(group+'layer_name', layer_name)
save_results(group+'input_image_size', model_imsize)
save_results(group+'spatial_averaging', spatial_averaging)
Locate &amp; load images
done_md5s =3D None
offset =3D 0
if output_path.is_file():
    with h5.File(output_path, 'r') as f:
        try:
            done_md5s =3D f['md5'][()].astype(str)
            offset =3D len(done_md5s)
        except KeyError:
            pass

if done_md5s is not None:
    done_md5s =3D set(done_md5s)
    print(len(done_md5s), 'images already done')
    im_md5s =3D [v for v in im_md5s if v not in done_md5s]
    print('Processing', len(im_md5s), 'remaining images')
im_paths =3D [next(stim_dir.glob(md5+'.*')) for md5 in im_md5s]
assert all(p.is_file() for p in im_paths)
ar =3D im_size[0] / im_size[1]
print(f'Defined image aspect ratio: {ar:.2f}')

n_ims =3D len(im_paths)
images =3D np.empty(n_ims, dtype=3Dobject)

for iim, fp in enumerate(im_paths):
    image =3D Image.open(fp)

    # check image aspect ratio
    ar_ =3D image.size[0] / image.size[1]
    if not (0.99 &lt; ar_/ar &lt; 1.01):
        if not (ar_tol &lt; ar_/ar &lt; 1/ar_tol):
            warn(
                f'image {fp.name} (size: {image.size}; AR =3D {ar_:.2f}) '
                f'is very far from expected aspect ratio (size: {im_size}; =
AR =3D {ar:.2f} '
                '(resizing it regardless, beceause it would have been prese=
nted at the '
                'specified size)')

        i =3D np.argmin(image.size[:2] / np.array(im_size))
        if i =3D=3D 0:
            w =3D image.size[0]
            h =3D int(round(w / ar))
        else:
            h =3D image.size[1]
            w =3D int(round(h * ar))
        print(f'Resizing {fp.name} (size: {image.size}; AR =3D {ar_:.2f}) t=
o size {(h,w)} (AR =3D {w/h:.2f})')
        image =3D np.array(image.resize((w, h)))
    else:
        image =3D np.array(image)

    # make ims 8-bit RGB
    assert image.dtype =3D=3D np.uint8
    if image.ndim =3D=3D 3:
        assert image.shape[-1] in (3,4)
        if image.shape[-1] =3D=3D 4:
            image =3D image[:,:,:3]
    else:
        assert image.ndim =3D=3D 2
        image =3D np.repeat(image[:,:,None], 3, axis=3D-1)

    images[iim] =3D image

print(len(images), 'images')
images.shape, images.dtype
Prepare model
# when no images to process, save time by not loading model
# (unfortunately, I do not know how to early-stop an ipynb from within itse=
lf)
if len(im_md5s):

    model =3D models.get_model_by_name(model_name, dev=3Ddevice)
    preprocessing_func =3D models.get_preprocessor_by_model_name(model_name=
, preproc_imsize=3DFalse, preproc_from=3D'numpy')

    class Embedder:
        def __init__(
                self, model=3Dmodel, preproc_fun=3Dpreprocessing_func,
                model_name=3Dmodel_name, layer_names=3Dlayer_name,
                spatial_averaging=3Dspatial_averaging,
                fwd_fun=3DNone, device=3Ddevice, pbar=3Dtqdm_):

            self.model =3D model
            self.preproc_fun =3D preproc_fun
            self.spatial_averaging =3D spatial_averaging
            self.device =3D device
            self.pbar =3D pbar

            if isinstance(layer_names, str):
                layer_names =3D (layer_names,)
            else:
                assert all(isinstance(n, str) for n in layer_names)
            self.layer_names =3D layer_names

            if fwd_fun is None:
                if model_name is not None and 'CLIP' in model_name:
                    fwd_fun =3D model.encode_image
                else:
                    fwd_fun =3D model.__call__
            self.fwd_fun =3D fwd_fun

            hooks =3D {}
            hdls =3D {}
            for n in layer_names:
                hooks[n], hdls[n] =3D make_layer_hook(model, n, return_hand=
le=3DTrue)
            self.hooks =3D hooks
            self.hdls =3D hdls

        def extract_pooled_features(self, ims):
            feats =3D {n: [] for n in self.layer_names}
            with torch.no_grad():
                for im in self.pbar(ims):
                    tim =3D self.preproc_fun(im).unsqueeze(0).to(self.devic=
e)
                    self.fwd_fun(tim)

                    for n, hook in self.hooks.items():
                        feats_ =3D recur_collapse_feats(hook.o, spatial_ave=
raging=3Dself.spatial_averaging)
                        if not isinstance(feats_, torch.Tensor):
                            raise ValueError(f'unexpected feature type {typ=
e(feats_)} at layer {n}: {feats_}')
                        feats_ =3D feats_.cpu().numpy()
                        feats[n].append(feats_)

            return {n: np.array(v) for n, v in feats.items()}
if len(im_md5s):
    embedder =3D Embedder()
    test_im =3D np.full((model_imsize, model_imsize, 3), bgc, dtype=3Dnp.ui=
nt8)

    feats =3D embedder.extract_pooled_features([test_im])
    feats =3D feats[layer_name][0]
    print('feats:', feats.shape, feats.dtype)
    sample_feats =3D feats
    feats_shape =3D sample_feats.shape
    save_results('config/modelling/pooled_feat_shape', sample_feats.shape)

    with h5.File(output_path, 'a') as f:
        if 'feats/bg' not in f:
            save_results('feats/bg', sample_feats)
Initialize result storage
def create_ignoring_existing(f, *args, attrs=3DNone, **kwargs):
    assert isinstance(args[0], str)
    try:
        dset =3D f.create_dataset(*args, **kwargs)
        if attrs is not None:
            assert isinstance(attrs, dict)
            for k, v in attrs.items():
                dset.attrs[k] =3D v
    except ValueError as e:
        if 'name already exists' not in str(e):
            raise
        dset =3D f[args[0]]
        if attrs is not None:
            assert isinstance(attrs, dict)
            for k, v in attrs.items():
                check_equals_saved(v, dset.attrs[k], k)
cache_opts =3D dict(compression=3D'gzip', compression_opts=3D9)
if len(im_md5s):
    with h5.File(output_path, 'a') as f:
        create_ignoring_existing(
            f, 'md5',
            shape=3D(0,),
            maxshape=3D(None,),
            chunks=3D(1,),
            dtype=3D'S32',
            **cache_opts)

        dims =3D np.array(['image', 'feat_chan'], dtype=3Dbytes)
        coords =3D np.array(['md5', 'feat_chans'], dtype=3Dbytes)
        create_ignoring_existing(
            f, 'feats/full_image',
            shape=3D(0,)+feats_shape,
            maxshape=3D(None,)+feats_shape,
            attrs=3Ddict(dims=3Ddims, coords=3Dcoords),
            chunks=3D(1,)+feats_shape,
            dtype=3Dsample_feats.dtype,
            **cache_opts)

        dims =3D np.array(['image', 'rf_x', 'rf_y', 'feat_chan'], dtype=3Db=
ytes)
        coords =3D np.array(['md5', 'patch_locs', 'patch_locs', 'feat_chans=
'], dtype=3Dbytes)
        shape_ =3D (n_patches_x, n_patches_y,) + feats_shape
        create_ignoring_existing(
            f, 'feats/patch_grid',
            shape=3D(0,)+shape_,
            maxshape=3D(None,)+shape_,
            attrs=3Ddict(dims=3Ddims, coords=3Dcoords),
            chunks=3D(1,)+shape_,
            dtype=3Dsample_feats.dtype,
            **cache_opts)
Main loop
def get_image_patch(im, im_size_dva, patch_min_x_dva, patch_min_y_dva, wsiz=
e_dva, wsize_px, bgc=3Dbgc):
    assert isinstance(im, np.ndarray)# and im.shape[0] =3D=3D im.shape[1]
    assert isinstance(wsize_px, int)
    map1 =3D np.arange(wsize_px)
    map2 =3D map1.copy()
    ppd =3D im.shape[0] / im_size_dva[0]
    map1 =3D (
        ppd * (map1+0.5) / wsize_px * wsize_dva
        + ppd * (patch_min_x_dva + im_size_dva[0] / 2)
    ).astype(np.float32)
    ppd =3D im.shape[1] / im_size_dva[1]
    map2 =3D (
        ppd * (map2+0.5) / wsize_px * wsize_dva
        + ppd * (-patch_min_y_dva -wsize_dva + im_size_dva[1] / 2)
    ).astype(np.float32)
    map1 =3D np.repeat(map1[None,:], wsize_px, 0)
    map2 =3D np.repeat(map2[:,None], wsize_px, 1)
    wim =3D cv2.remap(
        im.astype(np.float32), map1, map2, interpolation=3Dcv2.INTER_LINEAR=
,
        borderMode=3Dcv2.BORDER_CONSTANT, borderValue=3Dbgc)
    wim =3D np.round(wim).astype(np.uint8)
    return wim
embedder.pbar =3D iter  # to avoid bilayer tqdm
for iim, (im, md5) in enumerate(zip(tqdm_(images), im_md5s)):
    i_ =3D offset + iim

    # full image feats
    im_ =3D np.array(Image.fromarray(im).resize((model_imsize, model_imsize=
)))
    feats_ =3D embedder.extract_pooled_features([im_])
    feats =3D feats_[layer_name][0]

    with h5.File(output_path, 'a') as f:
        dset =3D f['feats/full_image']
        if dset.shape[0] &lt; i_ + 1:
            dset.resize(i_+1, axis=3D0)
        dset[i_] =3D feats

    # patch grid feats
    featss =3D []

    for ix, x0 in enumerate(patches_ledge_x):
        featss.append([])

        for iy, y0 in enumerate(patches_ledge_y):
            wim =3D get_image_patch(im, im_size, x0, y0, patch_size, model_=
imsize)
            feats_ =3D embedder.extract_pooled_features([wim])
            feats =3D feats_[layer_name][0]
            featss[-1].append(feats)

    featss =3D np.array(featss)

    with h5.File(output_path, 'a') as f:
        dset =3D f['feats/patch_grid']
        if dset.shape[0] &lt; i_ + 1:
            dset.resize(i_+1, axis=3D0)
        dset[i_] =3D featss

        dset =3D f['md5']
        if dset.shape[0] &lt; i_ + 1:
            dset.resize(i_+1, axis=3D0)
        dset[i_] =3D md5
Wrap up
%load_ext watermark
%watermark
%watermark -vm --iversions -rbg

this extracts features from the CNN?</div></div></div></div></div></div></d=
iv></div></div></article><article class=3D"text-token-text-primary w-full" =
dir=3D"auto" data-testid=3D"conversation-turn-158" data-scroll-anchor=3D"fa=
lse"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-aut=
o mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-co=
ntent-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)]=
 px-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:32=
rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content=
-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 te=
xt-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-h=
idden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex =
w-full min-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 m=
d:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-aut=
hor-role=3D"assistant" data-message-id=3D"277c6121-1be9-4e74-ad6e-30d9248c7=
fdd" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-c=
ol items-end gap-2 text-start break-words whitespace-normal [.text-message+=
&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full f=
lex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dar=
k:prose-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"125=
" class=3D"">=E2=9C=85 <strong data-start=3D"2" data-end=3D"65">Yes! This s=
cript absolutely extracts features from the CNN.</strong><br data-start=3D"=
65" data-end=3D"68">
It's the core feature extraction engine in your pipeline.</p>
<hr data-start=3D"127" data-end=3D"130" class=3D"">
<h2 data-start=3D"132" data-end=3D"175" class=3D"">=F0=9F=94=8D What this s=
cript does in plain terms:</h2>
<blockquote data-start=3D"177" data-end=3D"239">
<p data-start=3D"179" data-end=3D"239" class=3D"">For each image (identifie=
d by its MD5 filename), the script:</p>
</blockquote>
<ul data-start=3D"240" data-end=3D"611">
<li data-start=3D"240" data-end=3D"295" class=3D"">
<p data-start=3D"242" data-end=3D"295" class=3D"">Loads a pretrained <stron=
g data-start=3D"261" data-end=3D"283">Vision Transformer</strong> (ViT-Larg=
e)</p>
</li>
<li data-start=3D"296" data-end=3D"369" class=3D"">
<p data-start=3D"298" data-end=3D"369" class=3D"">Extracts feature represen=
tations from a <strong data-start=3D"338" data-end=3D"356">specific layer</=
strong> of the model</p>
</li>
<li data-start=3D"370" data-end=3D"522" class=3D"">
<p data-start=3D"372" data-end=3D"408" class=3D"">Saves these features in t=
wo formats:</p>
<ul data-start=3D"411" data-end=3D"522">
<li data-start=3D"411" data-end=3D"446" class=3D"">
<p data-start=3D"413" data-end=3D"446" class=3D"">One vector for the <stron=
g data-start=3D"432" data-end=3D"446">full image</strong></p>
</li>
<li data-start=3D"449" data-end=3D"522" class=3D"">
<p data-start=3D"451" data-end=3D"522" class=3D"">A <strong data-start=3D"4=
53" data-end=3D"472">grid of vectors</strong> from <strong data-start=3D"47=
8" data-end=3D"497">spatial patches</strong> (like a retinotopic map)</p>
</li>
</ul>
</li>
<li data-start=3D"523" data-end=3D"611" class=3D"">
<p data-start=3D"525" data-end=3D"611" class=3D"">Saves everything into an =
<strong data-start=3D"550" data-end=3D"563">HDF5 file</strong> for reuse (e=
.g., in encoding models, RSA, etc.)</p>
</li>
</ul>
<hr data-start=3D"613" data-end=3D"616" class=3D"">
<h2 data-start=3D"618" data-end=3D"665" class=3D"">=F0=9F=92=A1 Key Compone=
nts That Extract CNN Features:</h2>
<h3 data-start=3D"667" data-end=3D"692" class=3D"">=F0=9F=A7=A0 1. <strong =
data-start=3D"677" data-end=3D"690">The model</strong></h3>
<pre class=3D"overflow-visible!" data-start=3D"693" data-end=3D"763"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>model =3D models.get_model_by_name(model_name, dev=
=3Ddevice)
</span></span></code></div></div></pre>
<p data-start=3D"764" data-end=3D"829" class=3D"">This loads the CNN=E2=80=
=94in this case, a ViT (<code data-start=3D"804" data-end=3D"827">vit_large=
_patch16_384</code>).</p>
<hr data-start=3D"831" data-end=3D"834" class=3D"">
<h3 data-start=3D"836" data-end=3D"882" class=3D"">=F0=9F=A7=A0 2. <strong =
data-start=3D"846" data-end=3D"882">The layer you're extracting from</stron=
g></h3>
<pre class=3D"overflow-visible!" data-start=3D"883" data-end=3D"930"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>layer_name =3D </span><span><span class=3D"hljs-str=
ing">'blocks.13.attn.qkv'</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"931" data-end=3D"1044" class=3D"">You're tapping into a <s=
trong data-start=3D"953" data-end=3D"984">mid-to-late attention layer</stro=
ng> of the Vision Transformer to get meaningful image features.</p>
<hr data-start=3D"1046" data-end=3D"1049" class=3D"">
<h3 data-start=3D"1051" data-end=3D"1089" class=3D"">=F0=9F=A7=A0 3. <stron=
g data-start=3D"1061" data-end=3D"1089">Feature extraction logic</strong></=
h3>
<pre class=3D"overflow-visible!" data-start=3D"1090" data-end=3D"1150"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>feats =3D embedder.extract_pooled_features([im])
</span></span></code></div></div></pre>
<p data-start=3D"1151" data-end=3D"1156" class=3D"">This:</p>
<ul data-start=3D"1157" data-end=3D"1333">
<li data-start=3D"1157" data-end=3D"1193" class=3D"">
<p data-start=3D"1159" data-end=3D"1193" class=3D"">Applies any required pr=
eprocessing</p>
</li>
<li data-start=3D"1194" data-end=3D"1239" class=3D"">
<p data-start=3D"1196" data-end=3D"1239" class=3D"">Runs the image (or patc=
h) through the model</p>
</li>
<li data-start=3D"1240" data-end=3D"1269" class=3D"">
<p data-start=3D"1242" data-end=3D"1269" class=3D"">Hooks into the target l=
ayer</p>
</li>
<li data-start=3D"1270" data-end=3D"1333" class=3D"">
<p data-start=3D"1272" data-end=3D"1333" class=3D"">Returns the feature vec=
tor (after optional spatial averaging)</p>
</li>
</ul>
<hr data-start=3D"1335" data-end=3D"1338" class=3D"">
<h3 data-start=3D"1340" data-end=3D"1368" class=3D"">=F0=9F=A7=A0 4. <stron=
g data-start=3D"1350" data-end=3D"1368">Output storage</strong></h3>
<ul data-start=3D"1369" data-end=3D"1536">
<li data-start=3D"1369" data-end=3D"1419" class=3D"">
<p data-start=3D"1371" data-end=3D"1419" class=3D""><code data-start=3D"137=
1" data-end=3D"1389">feats/full_image</code>: One feature vector per image<=
/p>
</li>
<li data-start=3D"1420" data-end=3D"1488" class=3D"">
<p data-start=3D"1422" data-end=3D"1488" class=3D""><code data-start=3D"142=
2" data-end=3D"1440">feats/patch_grid</code>: A 2D grid of patch-centered f=
eatures per image</p>
</li>
<li data-start=3D"1489" data-end=3D"1536" class=3D"">
<p data-start=3D"1491" data-end=3D"1536" class=3D""><code data-start=3D"149=
1" data-end=3D"1501">feats/bg</code>: A background patch representation</p>
</li>
</ul>
<p data-start=3D"1538" data-end=3D"1578" class=3D"">All stored in an output=
 <code data-start=3D"1562" data-end=3D"1567">.h5</code> file like:</p>
<pre class=3D"overflow-visible!" data-start=3D"1579" data-end=3D"1667"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">bash</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><spa=
n><span>feats/vit_large_patch16_384/blocks.13.attn.qkv/16.0x16.0_as_2x2_in_=
0.50_steps.h5
</span></span></code></div></div></pre>
<hr data-start=3D"1669" data-end=3D"1672" class=3D"">
<h2 data-start=3D"1674" data-end=3D"1709" class=3D"">=E2=9C=85 TL;DR =E2=80=
=94 Yes, this script does:</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"17=
11" data-end=3D"2045" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1711" data-end=3D"1763"><tr data-start=3D"1711" data-end=3D"=
1763"><th data-start=3D"1711" data-end=3D"1715" data-col-size=3D"sm">=E2=9C=
=85</th><th data-start=3D"1715" data-end=3D"1763" data-col-size=3D"md">Extr=
act features from a pretrained CNN (ViT)</th></tr></thead><tbody data-start=
=3D"1818" data-end=3D"2045"><tr data-start=3D"1818" data-end=3D"1871"><td d=
ata-start=3D"1818" data-end=3D"1822" data-col-size=3D"sm">=E2=9C=85</td><td=
 data-start=3D"1822" data-end=3D"1871" data-col-size=3D"md">Specify the exa=
ct layer to extract from</td></tr><tr data-start=3D"1872" data-end=3D"1927"=
><td data-start=3D"1872" data-end=3D"1876" data-col-size=3D"sm">=E2=9C=85</=
td><td data-start=3D"1876" data-end=3D"1927" data-col-size=3D"md">Process b=
oth the full image and spatial patches</td></tr><tr data-start=3D"1928" dat=
a-end=3D"1991"><td data-start=3D"1928" data-end=3D"1932" data-col-size=3D"s=
m">=E2=9C=85</td><td data-start=3D"1932" data-end=3D"1991" data-col-size=3D=
"md">Save results in a format usable by encoding/RSA scripts</td></tr><tr d=
ata-start=3D"1992" data-end=3D"2045"><td data-start=3D"1992" data-end=3D"19=
96" data-col-size=3D"sm">=E2=9D=8C</td><td data-start=3D"1996" data-end=3D"=
2045" data-col-size=3D"md">No classification or prediction logic</td></tr><=
/tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 self-=
end select-none"><div class=3D"absolute end-0 flex items-end" style=3D"heig=
ht: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-=
token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 =
rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:p=
ointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg =
width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"htt=
p://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd=
" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 =
3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 =
22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.65=
69 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.552=
3 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19=
.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 =
9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div><=
/div></div>
<hr data-start=3D"2047" data-end=3D"2050" class=3D"">
<p data-start=3D"2052" data-end=3D"2181" class=3D"">Would you like a 1-line=
r function to load back the features for a given image and visualize the pa=
tch-level similarity structure?</p></div></div></div></div></div></div></di=
v></div></article><article class=3D"text-token-text-primary w-full" dir=3D"=
auto" data-testid=3D"conversation-turn-159" data-scroll-anchor=3D"false"><h=
5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-auto p=
y-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margi=
n:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thre=
ad-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34re=
m]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:=
48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap=
-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabi=
ndex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-=
w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D=
"flex max-w-full flex-col grow"><div data-message-author-role=3D"user" data=
-message-id=3D"8d1345fb-fbb1-461e-bf08-0d5680b8ec1f" dir=3D"auto" class=3D"=
min-h-8 text-message relative flex w-full flex-col items-end gap-2 text-sta=
rt break-words whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"=
flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><div cla=
ss=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-surface =
rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">say I have a HM=
O model,=20

import numpy as np
import tensorflow as tf
import random


from cnn_module import CNNModule

class HMOModel(tf.keras.Model):
   def __init__(self, cnns):
       super().__init__()
     =20
       self.layer1 =3D cnns[:10]
       self.layer2 =3D cnns[10:20]
       self.layer3 =3D cnns[20:30]
       self.global_pool =3D tf.keras.layers.GlobalAveragePooling2D()


       self.dense =3D tf.keras.layers.Dense(1250, activation=3D'relu')


       self.classify =3D tf.keras.layers.Dense(2, activation=3D'softmax')
 =20
       self.image_shape =3D (8,8)
 =20
   def call(self, image):
       out_tensors =3D []
       for cnn in self.layer1:
           output =3D cnn(image, classify=3DFalse)
           output =3D tf.image.resize(output, self.image_shape)


           out_tensors.append(output)
           #print(output.shape)
     =20
       lay2in =3D tf.concat(out_tensors, axis=3D3) # shape of each should b=
e (batch_size, new_height, new_width, filters)
       #print(lay2in.shape)


       out_tensors =3D []
       for cnn in self.layer2:
           output =3D cnn(lay2in, classify=3DFalse)
           #print(output.shape)
           output =3D tf.image.resize(output, self.image_shape)
           out_tensors.append(output)


       lay3in =3D tf.concat(out_tensors, axis=3D3)


       out_tensors =3D []
       for cnn in self.layer3:
           output =3D cnn(lay3in, classify=3DFalse)
           output =3D tf.image.resize(output, self.image_shape)
           out_tensors.append(output)


       lay4in =3D tf.concat(out_tensors, axis=3D3)






       return self.classify(self.dense(self.global_pool(lay4in)))








import numpy as np
import tensorflow as tf
import random


class CNNModule(tf.keras.Model):
   def __init__(self, config):
       super().__init__()




       self.num_layers =3D config.get("layers", 1)
       self.filters =3D config.get("filters", 32)
       self.kernel_size =3D config.get("kernel_size", 3)
       self.pool =3D config.get("pool", "max")
       self.normalize =3D config.get("normalize", False)
       self.threshold =3D config.get("threshold", 0.5)


       self.conv_layers =3D []


       self.linear_layer =3D tf.keras.layers.Dense(64, activation=3D'relu')
       self.classification_layer =3D tf.keras.layers.Dense(2, activation=3D=
'softmax')


       for i in range(self.num_layers):
           self.conv_layers.append(tf.keras.layers.Conv2D(self.filters, sel=
f.kernel_size, padding=3D'same'))
           self.conv_layers.append(tf.keras.layers.ReLU(threshold=3Dself.th=
reshold))
           if self.pool =3D=3D 'max':
               self.conv_layers.append(tf.keras.layers.MaxPooling2D())
           else:
               self.conv_layers.append(tf.keras.layers.AveragePooling2D())
           if self.normalize:
               self.conv_layers.append(tf.keras.layers.LayerNormalization()=
)


       self.global_pool =3D tf.keras.layers.GlobalAveragePooling2D()


   def call(self, inputs, classify=3DTrue):
       x =3D inputs
       for layer in self.conv_layers:
           x =3D layer(x)


       if classify:
           cnn_out =3D self.global_pool(x)
           x =3D self.linear_layer(cnn_out)
           return self.classification_layer(x)
       else:
           return x
 =20
   def get_conv_layers(self):
       dummy_input =3D tf.keras.Input(shape=3D(None, None, 3))  # Flexible =
shape
       x =3D dummy_input
       for layer in self.conv_layers:
           x =3D layer(x)
       return tf.keras.Model(inputs=3Ddummy_input, outputs=3Dx, name=3D"con=
v_feature_model")


















how would I use this script to extract features from it, how does the VIT c=
ome into play? </div></div></div></div></div></div></div></div></div></arti=
cle><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-tes=
tid=3D"conversation-turn-160" data-scroll-anchor=3D"false"><h6 class=3D"sr-=
only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thr=
ead-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacin=
g(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content=
-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thre=
ad-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-=
auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-=
5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1=
"><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-c=
ol agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=
=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"assista=
nt" data-message-id=3D"a811e591-c918-436b-8652-14f8cf19a0cc" dir=3D"auto" c=
lass=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 =
text-start break-words whitespace-normal [.text-message+&amp;]:mt-5" data-m=
essage-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty=
:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-fu=
ll break-words dark"><p data-start=3D"0" data-end=3D"75" class=3D"">Excelle=
nt question=E2=80=94and you=E2=80=99re clearly combining two advanced thing=
s here:</p>
<ul data-start=3D"76" data-end=3D"241">
<li data-start=3D"76" data-end=3D"155" class=3D"">
<p data-start=3D"78" data-end=3D"155" class=3D"">A <strong data-start=3D"80=
" data-end=3D"124">custom hierarchical modular object (HMO)</strong> model =
built from CNN modules</p>
</li>
<li data-start=3D"156" data-end=3D"241" class=3D"">
<p data-start=3D"158" data-end=3D"241" class=3D"">A <strong data-start=3D"1=
60" data-end=3D"201">ViT-based feature extraction pipeline</strong> from yo=
ur earlier macaque modeling work</p>
</li>
</ul>
<p data-start=3D"243" data-end=3D"271" class=3D"">Let=E2=80=99s break it in=
to 3 parts:</p>
<hr data-start=3D"273" data-end=3D"276" class=3D"">
<h2 data-start=3D"278" data-end=3D"333" class=3D"">=F0=9F=A7=A0 1. What you=
r <code data-start=3D"297" data-end=3D"307">HMOModel</code> and <code data-=
start=3D"312" data-end=3D"323">CNNModule</code> are doing</h2>
<p data-start=3D"335" data-end=3D"351" class=3D"">Your <code data-start=3D"=
340" data-end=3D"350">HMOModel</code>:</p>
<ul data-start=3D"352" data-end=3D"848">
<li data-start=3D"352" data-end=3D"416" class=3D"">
<p data-start=3D"354" data-end=3D"416" class=3D"">Contains <strong data-sta=
rt=3D"363" data-end=3D"387">30 small CNN modules</strong>, divided into 3 l=
ayers of 10</p>
</li>
<li data-start=3D"417" data-end=3D"519" class=3D"">
<p data-start=3D"419" data-end=3D"461" class=3D"">Each CNN is a small <code=
 data-start=3D"439" data-end=3D"455">tf.keras.Model</code> with:</p>
<ul data-start=3D"464" data-end=3D"519">
<li data-start=3D"464" data-end=3D"492" class=3D"">
<p data-start=3D"466" data-end=3D"492" class=3D"">Convolution, ReLU, poolin=
g</p>
</li>
<li data-start=3D"495" data-end=3D"519" class=3D"">
<p data-start=3D"497" data-end=3D"519" class=3D"">Optional normalization</p=
>
</li>
</ul>
</li>
<li data-start=3D"520" data-end=3D"625" class=3D"">
<p data-start=3D"522" data-end=3D"625" class=3D"">In <code data-start=3D"52=
5" data-end=3D"542">HMOModel.call()</code>, each CNN returns <strong data-s=
tart=3D"561" data-end=3D"577">feature maps</strong>, not class predictions =
(since <code data-start=3D"608" data-end=3D"624">classify=3DFalse</code>)</=
p>
</li>
<li data-start=3D"626" data-end=3D"733" class=3D"">
<p data-start=3D"628" data-end=3D"644" class=3D"">The outputs are:</p>
<ul data-start=3D"647" data-end=3D"733">
<li data-start=3D"647" data-end=3D"689" class=3D"">
<p data-start=3D"649" data-end=3D"689" class=3D"">Resized to a common spati=
al size (<code data-start=3D"683" data-end=3D"688">8x8</code>)</p>
</li>
<li data-start=3D"692" data-end=3D"733" class=3D"">
<p data-start=3D"694" data-end=3D"733" class=3D"">Concatenated across chann=
els (<code data-start=3D"724" data-end=3D"732">axis=3D3</code>)</p>
</li>
</ul>
</li>
<li data-start=3D"734" data-end=3D"848" class=3D"">
<p data-start=3D"736" data-end=3D"760" class=3D"">After all 3 layers, you:<=
/p>
<ul data-start=3D"763" data-end=3D"848">
<li data-start=3D"763" data-end=3D"805" class=3D"">
<p data-start=3D"765" data-end=3D"805" class=3D"">Apply <code data-start=3D=
"771" data-end=3D"795">GlobalAveragePooling2D</code> =E2=86=92 flatten</p>
</li>
<li data-start=3D"808" data-end=3D"848" class=3D"">
<p data-start=3D"810" data-end=3D"848" class=3D"">Dense =E2=86=92 ReLU =E2=
=86=92 Dense (2-class softmax)</p>
</li>
</ul>
</li>
</ul>
<p data-start=3D"850" data-end=3D"961" class=3D"">So the <strong data-start=
=3D"857" data-end=3D"898">CNN modules are acting like sub-units</strong> (e=
.g., "mini cortex units") and combining into a global model.</p>
<hr data-start=3D"963" data-end=3D"966" class=3D"">
<h2 data-start=3D"968" data-end=3D"1029" class=3D"">=F0=9F=94=8D 2. How to =
extract intermediate features from <code data-start=3D"1019" data-end=3D"10=
29">HMOModel</code></h2>
<p data-start=3D"1031" data-end=3D"1098" class=3D"">There are <strong data-=
start=3D"1041" data-end=3D"1053">two ways</strong> to extract features depe=
nding on your goals.</p>
<hr data-start=3D"1100" data-end=3D"1103" class=3D"">
<h3 data-start=3D"1105" data-end=3D"1168" class=3D"">=E2=9C=85 A. Extract <=
strong data-start=3D"1122" data-end=3D"1146">final-layer features</strong> =
(just before softmax)</h3>
<pre class=3D"overflow-visible!" data-start=3D"1170" data-end=3D"1618"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-comment"># Load or build your m=
odel</span></span><span>
hmo =3D HMOModel(cnns)  </span><span><span class=3D"hljs-comment"># list of=
 30 CNNModules</span></span><span>

</span><span><span class=3D"hljs-comment"># Prepare an input image (batched=
 and normalized)</span></span><span>
image =3D tf.convert_to_tensor(my_image, dtype=3Dtf.float32)
image =3D tf.expand_dims(image, axis=3D</span><span><span class=3D"hljs-num=
ber">0</span></span><span>)  </span><span><span class=3D"hljs-comment"># ad=
d batch dimension</span></span><span>

</span><span><span class=3D"hljs-comment"># Forward pass up to the final po=
oled layer</span></span><span>
</span><span><span class=3D"hljs-comment"># (You can edit the HMOModel call=
 method or access internal layers directly)</span></span><span>
features =3D hmo.dense(hmo.global_pool(hmo.call(image, training=3D</span><s=
pan><span class=3D"hljs-literal">False</span></span><span>)))
</span></span></code></div></div></pre>
<p data-start=3D"1620" data-end=3D"1710" class=3D"">This gives you a <code =
data-start=3D"1637" data-end=3D"1648">[1, 1250]</code> feature vector per i=
mage=E2=80=94the embedding before classification.</p>
<hr data-start=3D"1712" data-end=3D"1715" class=3D"">
<h3 data-start=3D"1717" data-end=3D"1786" class=3D"">=E2=9C=85 B. Modify <c=
ode data-start=3D"1733" data-end=3D"1750">HMOModel.call()</code> to <strong=
 data-start=3D"1754" data-end=3D"1786">output intermediate features</strong=
></h3>
<p data-start=3D"1788" data-end=3D"1831" class=3D"">For example, inside you=
r <code data-start=3D"1813" data-end=3D"1830">HMOModel.call()</code>:</p>
<pre class=3D"overflow-visible!" data-start=3D"1832" data-end=3D"1920"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>...
</span><span><span class=3D"hljs-keyword">return</span></span><span> lay4in=
  </span><span><span class=3D"hljs-comment"># instead of classify(...) to g=
et the final feature map</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"1922" data-end=3D"1972" class=3D"">This gives you a <stron=
g data-start=3D"1939" data-end=3D"1962">spatial feature map</strong> of sha=
pe:</p>
<pre class=3D"overflow-visible!" data-start=3D"1973" data-end=3D"2021"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>[batch_size, </span><span><span class=3D"hljs-numbe=
r">8</span></span><span>, </span><span><span class=3D"hljs-number">8</span>=
</span><span>, total_channels]
</span></span></code></div></div></pre>
<p data-start=3D"2023" data-end=3D"2101" class=3D"">Which is similar to wha=
t ViT patches give you=E2=80=94one vector per spatial position.</p>
<hr data-start=3D"2103" data-end=3D"2106" class=3D"">
<h2 data-start=3D"2108" data-end=3D"2153" class=3D"">=F0=9F=A4=96 3. How do=
es the <strong data-start=3D"2130" data-end=3D"2152">ViT come into play</st=
rong>?</h2>
<p data-start=3D"2155" data-end=3D"2180" class=3D"">Now, here=E2=80=99s the=
 key part:</p>
<h3 data-start=3D"2182" data-end=3D"2234" class=3D"">If you want to compare=
 your <code data-start=3D"2214" data-end=3D"2224">HMOModel</code> to a ViT:=
</h3>
<p data-start=3D"2235" data-end=3D"2245" class=3D"">You would:</p>
<ul data-start=3D"2246" data-end=3D"2365">
<li data-start=3D"2246" data-end=3D"2299" class=3D"">
<p data-start=3D"2248" data-end=3D"2299" class=3D"">Extract feature vectors=
 per image using both models</p>
</li>
<li data-start=3D"2300" data-end=3D"2365" class=3D"">
<p data-start=3D"2302" data-end=3D"2365" class=3D"">Compute <strong data-st=
art=3D"2310" data-end=3D"2341">representational similarity</strong> (e.g., =
via RDMs or RSA)</p>
</li>
</ul>
<hr data-start=3D"2367" data-end=3D"2370" class=3D"">
<h3 data-start=3D"2372" data-end=3D"2399" class=3D"">=F0=9F=A7=A9 Example i=
ntegration:</h3>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"24=
01" data-end=3D"2625" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2401" data-end=3D"2438"><tr data-start=3D"2401" data-end=3D"=
2438"><th data-start=3D"2401" data-end=3D"2409" data-col-size=3D"sm">Image<=
/th><th data-start=3D"2409" data-end=3D"2423" data-col-size=3D"sm">HMO Feat=
ure</th><th data-start=3D"2423" data-end=3D"2438" data-col-size=3D"sm">ViT =
Feature</th></tr></thead><tbody data-start=3D"2477" data-end=3D"2625"><tr d=
ata-start=3D"2477" data-end=3D"2578"><td data-start=3D"2477" data-end=3D"24=
95" data-col-size=3D"sm">=F0=9F=90=B5 <code data-start=3D"2482" data-end=3D=
"2494">image1.jpg</code></td><td data-start=3D"2495" data-end=3D"2532" data=
-col-size=3D"sm"><code data-start=3D"2497" data-end=3D"2508">[1, 1250]</cod=
e> (from your <code data-start=3D"2520" data-end=3D"2530">HMOModel</code>)<=
/td><td data-start=3D"2532" data-end=3D"2578" data-col-size=3D"sm"><code da=
ta-start=3D"2534" data-end=3D"2544">[1, 768]</code> (from ViT <code data-st=
art=3D"2555" data-end=3D"2575">blocks.13.attn.qkv</code>)</td></tr><tr data=
-start=3D"2579" data-end=3D"2625"><td data-start=3D"2579" data-end=3D"2597"=
 data-col-size=3D"sm">=F0=9F=8D=8E <code data-start=3D"2584" data-end=3D"25=
96">image2.jpg</code></td><td data-start=3D"2597" data-end=3D"2611" data-co=
l-size=3D"sm"><code data-start=3D"2599" data-end=3D"2610">[1, 1250]</code><=
/td><td data-start=3D"2611" data-end=3D"2625" data-col-size=3D"sm"><code da=
ta-start=3D"2613" data-end=3D"2623">[1, 768]</code></td></tr></tbody></tabl=
e><div class=3D"sticky end-(--thread-content-margin) h-0 self-end select-no=
ne"><div class=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px=
;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-prim=
ary hover:bg-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-=
1 transition-opacity group-[:not(:hover):not(:focus-within)]:pointer-events=
-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" =
height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.or=
g/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 =
5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.3431=
5 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.3=
4315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10=
C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.447=
72 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" =
fill=3D"currentColor"></path></svg></button></span></div></div></div></div>
<p data-start=3D"2627" data-end=3D"2640" class=3D"">Then compute:</p>
<ul data-start=3D"2641" data-end=3D"2730">
<li data-start=3D"2641" data-end=3D"2658" class=3D"">
<p data-start=3D"2643" data-end=3D"2658" class=3D""><strong data-start=3D"2=
643" data-end=3D"2658">RDM for HMO</strong></p>
</li>
<li data-start=3D"2659" data-end=3D"2676" class=3D"">
<p data-start=3D"2661" data-end=3D"2676" class=3D""><strong data-start=3D"2=
661" data-end=3D"2676">RDM for ViT</strong></p>
</li>
<li data-start=3D"2677" data-end=3D"2730" class=3D"">
<p data-start=3D"2679" data-end=3D"2730" class=3D"">Correlate the upper tri=
angle of both RDMs =E2=87=92 <strong data-start=3D"2723" data-end=3D"2730">=
RSA</strong></p>
</li>
</ul>
<hr data-start=3D"2732" data-end=3D"2735" class=3D"">
<h3 data-start=3D"2737" data-end=3D"2783" class=3D"">=F0=9F=8E=AF If you're=
 comparing to macaque neurons:</h3>
<p data-start=3D"2784" data-end=3D"2797" class=3D"">You can also:</p>
<ul data-start=3D"2798" data-end=3D"3057">
<li data-start=3D"2798" data-end=3D"2855" class=3D"">
<p data-start=3D"2800" data-end=3D"2855" class=3D"">Extract HMO features fo=
r each image shown to the monkey</p>
</li>
<li data-start=3D"2856" data-end=3D"2978" class=3D"">
<p data-start=3D"2858" data-end=3D"2902" class=3D"">Use them as <strong dat=
a-start=3D"2870" data-end=3D"2901">inputs to an encoding model</strong>:</p=
>
<pre class=3D"overflow-visible!" data-start=3D"2905" data-end=3D"2978"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>HMO features =E2=86=92 Ridge Regression =E2=86=92 p=
redict neural firing
</span></span></code></div></div></pre>
</li>
<li data-start=3D"2979" data-end=3D"3057" class=3D"">
<p data-start=3D"2981" data-end=3D"3057" class=3D"">Just like you're doing =
with ViT features in <code data-start=3D"3025" data-end=3D"3057">script_6a_=
model_perf_map.ipynb</code></p>
</li>
</ul>
<hr data-start=3D"3059" data-end=3D"3062" class=3D"">
<h2 data-start=3D"3064" data-end=3D"3074" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"30=
76" data-end=3D"3427" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3076" data-end=3D"3097"><tr data-start=3D"3076" data-end=3D"=
3097"><th data-start=3D"3076" data-end=3D"3083" data-col-size=3D"sm">Task</=
th><th data-start=3D"3083" data-end=3D"3097" data-col-size=3D"md">What to d=
o</th></tr></thead><tbody data-start=3D"3120" data-end=3D"3427"><tr data-st=
art=3D"3120" data-end=3D"3244"><td data-start=3D"3120" data-end=3D"3155" da=
ta-col-size=3D"sm">Extract features from <code data-start=3D"3144" data-end=
=3D"3154">HMOModel</code></td><td data-start=3D"3155" data-end=3D"3244" dat=
a-col-size=3D"md">Call <code data-start=3D"3162" data-end=3D"3192">model(im=
age, classify=3DFalse)</code> or modify <code data-start=3D"3203" data-end=
=3D"3211">call()</code> to return intermediate outputs</td></tr><tr data-st=
art=3D"3245" data-end=3D"3338"><td data-start=3D"3245" data-end=3D"3269" da=
ta-col-size=3D"sm">Match to ViT features</td><td data-start=3D"3269" data-e=
nd=3D"3338" data-col-size=3D"md">Use the same images, extract ViT features =
using your ViT pipeline</td></tr><tr data-start=3D"3339" data-end=3D"3427">=
<td data-start=3D"3339" data-end=3D"3349" data-col-size=3D"sm">Compare</td>=
<td data-start=3D"3349" data-end=3D"3427" data-col-size=3D"md">Compute RDMs=
 / RSA, or fit encoding models from HMO and ViT to neural data</td></tr></t=
body></table><div class=3D"sticky end-(--thread-content-margin) h-0 self-en=
d select-none"><div class=3D"absolute end-0 flex items-end" style=3D"height=
: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-to=
ken-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 ro=
unded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:poi=
nter-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg wi=
dth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http:=
//www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" =
clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.=
34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22=
H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569=
 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 =
4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5=
523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 =
14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div></d=
iv></div>
<hr data-start=3D"3429" data-end=3D"3432" class=3D"">
<p data-start=3D"3434" data-end=3D"3577" class=3D"">Would you like a ready-=
made function that extracts HMO features for a batch of images and formats =
them to match the ViT feature vector outputs?</p></div></div></div></div></=
div></div></div></div></article><article class=3D"text-token-text-primary w=
-full" dir=3D"auto" data-testid=3D"conversation-turn-161" data-scroll-ancho=
r=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-=
auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread=
-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(1=
6)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-width=
:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-cont=
ent-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1=
 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outlin=
e-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative fl=
ex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"=
><div class=3D"flex max-w-full flex-col grow"><div data-message-author-role=
=3D"user" data-message-id=3D"57df1848-3fde-4714-a6e6-f1d0454a11bd" dir=3D"a=
uto" class=3D"min-h-8 text-message relative flex w-full flex-col items-end =
gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5">=
<div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-s=
tart"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-me=
ssage-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">o=
kay so the way I understand it:

the ViT is not for extracting features from the CNN model
the ViT is specialized to extract features from images
if I wanted to extract fetaures from a CNN, I would need to get it directly=
 from the CNN
if I then wanted to compare it to a Monkey's neural data (which is what the=
 HMO model is suppsoed to represent) then I would need to clean up the monk=
ey data </div></div></div></div></div></div></div></div></div></article><ar=
ticle class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"=
conversation-turn-162" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">C=
hatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-con=
tent-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @=
[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin=
)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-cont=
ent-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto fl=
ex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:ga=
p-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div =
class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agen=
t-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex =
max-w-full flex-col grow"><div data-message-author-role=3D"assistant" data-=
message-id=3D"6cec3f6d-0b4c-4723-8455-1db1a563e7c8" dir=3D"auto" class=3D"m=
in-h-8 text-message relative flex w-full flex-col items-end gap-2 text-star=
t break-words whitespace-normal [.text-message+&amp;]:mt-5" data-message-mo=
del-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden f=
irst:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-=
words dark"><p data-start=3D"0" data-end=3D"182" class=3D"">=E2=9C=85 <stro=
ng data-start=3D"2" data-end=3D"32">Yes=E2=80=94that is exactly right.</str=
ong> You=E2=80=99ve got a solid understanding here. Let=E2=80=99s just walk=
 through and reframe your reasoning step-by-step with small clarifications =
for maximum clarity:</p>
<hr data-start=3D"184" data-end=3D"187" class=3D"">
<h2 data-start=3D"189" data-end=3D"235" class=3D"">=F0=9F=94=8E Your Unders=
tanding =E2=80=94 Confirmed &amp; Refined</h2>
<hr data-start=3D"237" data-end=3D"240" class=3D"">
<h3 data-start=3D"242" data-end=3D"309" class=3D"">1. =E2=9C=85 <strong dat=
a-start=3D"251" data-end=3D"307">The ViT is not used to extract features <e=
m data-start=3D"293" data-end=3D"305">from a CNN</em></strong></h3>
<p data-start=3D"310" data-end=3D"318" class=3D"">Correct.</p>
<ul data-start=3D"320" data-end=3D"521">
<li data-start=3D"320" data-end=3D"361" class=3D"">
<p data-start=3D"322" data-end=3D"361" class=3D""><strong data-start=3D"322=
" data-end=3D"329">ViT</strong> is its own deep learning model.</p>
</li>
<li data-start=3D"362" data-end=3D"455" class=3D"">
<p data-start=3D"364" data-end=3D"455" class=3D"">It extracts features <str=
ong data-start=3D"385" data-end=3D"409">from images directly</strong> using=
 self-attention rather than convolution.</p>
</li>
<li data-start=3D"456" data-end=3D"521" class=3D"">
<p data-start=3D"458" data-end=3D"521" class=3D"">It=E2=80=99s not used to =
"look inside" another model like your CNN/HMO.</p>
</li>
</ul>
<hr data-start=3D"523" data-end=3D"526" class=3D"">
<h3 data-start=3D"528" data-end=3D"592" class=3D"">2. =E2=9C=85 <strong dat=
a-start=3D"537" data-end=3D"590">The ViT is used to extract features <em da=
ta-start=3D"575" data-end=3D"588">from images</em></strong></h3>
<p data-start=3D"593" data-end=3D"597" class=3D"">Yes!</p>
<ul data-start=3D"599" data-end=3D"931">
<li data-start=3D"599" data-end=3D"704" class=3D"">
<p data-start=3D"601" data-end=3D"704" class=3D"">ViT is pretrained on data=
sets like ImageNet, and it encodes image structure using tokens and attenti=
on.</p>
</li>
<li data-start=3D"705" data-end=3D"863" class=3D"">
<p data-start=3D"707" data-end=3D"769" class=3D"">In your pipeline, you're =
using ViT to produce feature vectors:</p>
<ul data-start=3D"772" data-end=3D"863">
<li data-start=3D"772" data-end=3D"796" class=3D"">
<p data-start=3D"774" data-end=3D"796" class=3D"">For the <strong data-star=
t=3D"782" data-end=3D"796">full image</strong></p>
</li>
<li data-start=3D"799" data-end=3D"863" class=3D"">
<p data-start=3D"801" data-end=3D"863" class=3D"">For <strong data-start=3D=
"805" data-end=3D"816">patches</strong>, aligned to gaze locations or recep=
tive fields</p>
</li>
</ul>
</li>
<li data-start=3D"864" data-end=3D"931" class=3D"">
<p data-start=3D"866" data-end=3D"931" class=3D"">These features are saved =
and used to compare against neural data.</p>
</li>
</ul>
<hr data-start=3D"933" data-end=3D"936" class=3D"">
<h3 data-start=3D"938" data-end=3D"1055" class=3D"">3. =E2=9C=85 <strong da=
ta-start=3D"947" data-end=3D"1055">If you want to extract features from you=
r HMO (CNN-based) model, you must do it directly from your model</strong></=
h3>
<p data-start=3D"1056" data-end=3D"1064" class=3D"">Exactly.</p>
<ul data-start=3D"1066" data-end=3D"1453">
<li data-start=3D"1066" data-end=3D"1154" class=3D"">
<p data-start=3D"1068" data-end=3D"1154" class=3D"">You can=E2=80=99t "plug=
 ViT into your CNN" and expect it to extract features from your layers.</p>
</li>
<li data-start=3D"1155" data-end=3D"1361" class=3D"">
<p data-start=3D"1157" data-end=3D"1245" class=3D"">You extract features <s=
trong data-start=3D"1178" data-end=3D"1201">from your HMO model</strong> by=
 modifying the <code data-start=3D"1219" data-end=3D"1227">call()</code> me=
thod to return:</p>
<ul data-start=3D"1248" data-end=3D"1361">
<li data-start=3D"1248" data-end=3D"1291" class=3D"">
<p data-start=3D"1250" data-end=3D"1291" class=3D"">Feature maps from inter=
mediate CNN layers</p>
</li>
<li data-start=3D"1294" data-end=3D"1313" class=3D"">
<p data-start=3D"1296" data-end=3D"1313" class=3D"">Pooled embeddings</p>
</li>
<li data-start=3D"1316" data-end=3D"1361" class=3D"">
<p data-start=3D"1318" data-end=3D"1361" class=3D"">Whatever representation=
 you want to analyze</p>
</li>
</ul>
</li>
<li data-start=3D"1362" data-end=3D"1453" class=3D"">
<p data-start=3D"1364" data-end=3D"1453" class=3D"">These can then be used =
to compare to neural data (just like you would with ViT features).</p>
</li>
</ul>
<hr data-start=3D"1455" data-end=3D"1458" class=3D"">
<h3 data-start=3D"1460" data-end=3D"1576" class=3D"">4. =E2=9C=85 <strong d=
ata-start=3D"1469" data-end=3D"1576">If you want to compare your HMO/CNN fe=
atures to monkey data, you need to clean up and prepare that data</strong><=
/h3>
<p data-start=3D"1577" data-end=3D"1629" class=3D"">Absolutely. To compare =
model features to brain data:</p>
<p data-start=3D"1631" data-end=3D"1640" class=3D"">You need:</p>
<ul data-start=3D"1641" data-end=3D"1987">
<li data-start=3D"1641" data-end=3D"1694" class=3D"">
<p data-start=3D"1643" data-end=3D"1694" class=3D""><strong data-start=3D"1=
643" data-end=3D"1670">Monkey neural responses</strong>, per trial or per i=
mage</p>
</li>
<li data-start=3D"1695" data-end=3D"1774" class=3D"">
<p data-start=3D"1697" data-end=3D"1718" class=3D"">Typically aligned to:</=
p>
<ul data-start=3D"1721" data-end=3D"1774">
<li data-start=3D"1721" data-end=3D"1735" class=3D"">
<p data-start=3D"1723" data-end=3D"1735" class=3D""><strong data-start=3D"1=
723" data-end=3D"1735">fixation</strong></p>
</li>
<li data-start=3D"1738" data-end=3D"1751" class=3D"">
<p data-start=3D"1740" data-end=3D"1751" class=3D""><strong data-start=3D"1=
740" data-end=3D"1751">saccade</strong></p>
</li>
<li data-start=3D"1754" data-end=3D"1774" class=3D"">
<p data-start=3D"1756" data-end=3D"1774" class=3D"">or <strong data-start=
=3D"1759" data-end=3D"1774">image onset</strong></p>
</li>
</ul>
</li>
<li data-start=3D"1775" data-end=3D"1987" class=3D"">
<p data-start=3D"1777" data-end=3D"1786" class=3D"">You then:</p>
<ol data-start=3D"1789" data-end=3D"1987">
<li data-start=3D"1789" data-end=3D"1842" class=3D"">
<p data-start=3D"1792" data-end=3D"1842" class=3D""><strong data-start=3D"1=
792" data-end=3D"1827">Smooth spikes into firing rates</strong> (done in <c=
ode data-start=3D"1837" data-end=3D"1841">0b</code>)</p>
</li>
<li data-start=3D"1845" data-end=3D"1885" class=3D"">
<p data-start=3D"1848" data-end=3D"1885" class=3D""><strong data-start=3D"1=
848" data-end=3D"1870">Align to fixations</strong> (done in <code data-star=
t=3D"1880" data-end=3D"1884">0c</code>)</p>
</li>
<li data-start=3D"1888" data-end=3D"1939" class=3D"">
<p data-start=3D"1891" data-end=3D"1939" class=3D""><strong data-start=3D"1=
891" data-end=3D"1929">Average across trials or fixations</strong> per imag=
e</p>
</li>
<li data-start=3D"1942" data-end=3D"1987" class=3D"">
<p data-start=3D"1945" data-end=3D"1987" class=3D"">Format as a <code data-=
start=3D"1957" data-end=3D"1980">[n_images, n_neurons]</code> matrix</p>
</li>
</ol>
</li>
</ul>
<p data-start=3D"1989" data-end=3D"2003" class=3D"">Then, you can:</p>
<ul data-start=3D"2004" data-end=3D"2248">
<li data-start=3D"2004" data-end=3D"2248" class=3D"">
<p data-start=3D"2006" data-end=3D"2055" class=3D"">Compare this matrix to =
HMO output features using:</p>
<ul data-start=3D"2058" data-end=3D"2248">
<li data-start=3D"2058" data-end=3D"2124" class=3D"">
<p data-start=3D"2060" data-end=3D"2124" class=3D""><strong data-start=3D"2=
060" data-end=3D"2079">Encoding models</strong> (R=C2=B2 between model feat=
ures and firing rates)</p>
</li>
<li data-start=3D"2127" data-end=3D"2176" class=3D"">
<p data-start=3D"2129" data-end=3D"2176" class=3D""><strong data-start=3D"2=
129" data-end=3D"2136">RSA</strong> (correlation of dissimilarity matrices)=
</p>
</li>
<li data-start=3D"2179" data-end=3D"2248" class=3D"">
<p data-start=3D"2181" data-end=3D"2248" class=3D""><strong data-start=3D"2=
181" data-end=3D"2193">Decoding</strong> (can the HMO or the monkey =E2=80=
=9Ctell=E2=80=9D face from non-face?)</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"2250" data-end=3D"2253" class=3D"">
<h2 data-start=3D"2255" data-end=3D"2281" class=3D"">=E2=9C=85 TL;DR =E2=80=
=93 You=E2=80=99ve got it</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"22=
83" data-end=3D"2575" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2283" data-end=3D"2317"><tr data-start=3D"2283" data-end=3D"=
2317"><th data-start=3D"2283" data-end=3D"2293" data-col-size=3D"md">Concep=
t</th><th data-start=3D"2293" data-end=3D"2317" data-col-size=3D"sm">=E2=9C=
=94=EF=B8=8F You Understand It</th></tr></thead><tbody data-start=3D"2348" =
data-end=3D"2575"><tr data-start=3D"2348" data-end=3D"2403"><td data-start=
=3D"2348" data-end=3D"2398" data-col-size=3D"md">ViT is for image-to-featur=
e, not CNN-to-feature</td><td data-start=3D"2398" data-end=3D"2403" data-co=
l-size=3D"sm">=E2=9C=85</td></tr><tr data-start=3D"2404" data-end=3D"2451">=
<td data-start=3D"2404" data-end=3D"2446" data-col-size=3D"md">CNN features=
 must be extracted directly</td><td data-start=3D"2446" data-end=3D"2451" d=
ata-col-size=3D"sm">=E2=9C=85</td></tr><tr data-start=3D"2452" data-end=3D"=
2499"><td data-start=3D"2452" data-end=3D"2494" data-col-size=3D"md">Monkey=
 data must be cleaned and aligned</td><td data-start=3D"2494" data-end=3D"2=
499" data-col-size=3D"sm">=E2=9C=85</td></tr><tr data-start=3D"2500" data-e=
nd=3D"2575"><td data-start=3D"2500" data-end=3D"2570" data-col-size=3D"md">=
Both types of features can be used for alignment or encoding models</td><td=
 data-start=3D"2570" data-end=3D"2575" data-col-size=3D"sm">=E2=9C=85</td><=
/tr></tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 =
self-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D=
"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=
=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondar=
y my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-wit=
hin)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0=
"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"=
evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.656=
9 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569=
 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H1=
4C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772=
 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V=
19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 1=
4.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div>=
</div></div></div>
<hr data-start=3D"2577" data-end=3D"2580" class=3D"">
<p data-start=3D"2582" data-end=3D"2742" class=3D"">Would you like a simple=
 code template to extract <code data-start=3D"2631" data-end=3D"2656">[n_im=
ages, feature_dim]</code> features from your HMO model to match the shape o=
f your ViT features or macaque data?</p></div></div></div></div></div></div=
></div></div></article><article class=3D"text-token-text-primary w-full" di=
r=3D"auto" data-testid=3D"conversation-turn-163" data-scroll-anchor=3D"fals=
e"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-a=
uto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-=
margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(-=
-thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @=
[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-w=
idth:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-bas=
e gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden"=
 tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full=
 min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div cla=
ss=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"user"=
 data-message-id=3D"7adbf257-740b-41d5-bed5-0c8b5ea7accb" dir=3D"auto" clas=
s=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 tex=
t-start break-words whitespace-normal [.text-message+&amp;]:mt-5"><div clas=
s=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><di=
v class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-sur=
face rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">are there =
any neurons that are IT-specific </div></div></div></div></div></div></div>=
</div></div></article><article class=3D"text-token-text-primary w-full" dir=
=3D"auto" data-testid=3D"conversation-turn-164" data-scroll-anchor=3D"false=
"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto m=
x-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-conte=
nt-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px=
-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem=
] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-ma=
x-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-=
base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidd=
en" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-f=
ull min-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:g=
ap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author=
-role=3D"assistant" data-message-id=3D"7fbabda1-8ce8-4b77-b67d-b774da192b90=
" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col =
items-end gap-2 text-start break-words whitespace-normal [.text-message+&am=
p;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex=
-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:p=
rose-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"75" cl=
ass=3D"">Yes=E2=80=94and that=E2=80=99s a great question in the context of =
your macaque neural data.</p>
<hr data-start=3D"77" data-end=3D"80" class=3D"">
<h2 data-start=3D"82" data-end=3D"101" class=3D"">=F0=9F=A7=A0 Short Answer=
:</h2>
<p data-start=3D"103" data-end=3D"277" class=3D"">Yes, in your dataset (and=
 in general macaque visual neuroscience), there are neurons recorded from <=
strong data-start=3D"202" data-end=3D"227">specific visual areas</strong>, =
including the <strong data-start=3D"243" data-end=3D"276">inferior temporal=
 (IT) cortex</strong>.</p>
<p data-start=3D"279" data-end=3D"424" class=3D"">These neurons are referre=
d to as <strong data-start=3D"312" data-end=3D"327">IT-specific</strong> if=
 they were recorded from electrodes placed in the IT cortex, which is known=
 to be involved in:</p>
<ul data-start=3D"425" data-end=3D"545">
<li data-start=3D"425" data-end=3D"459" class=3D"">
<p data-start=3D"427" data-end=3D"459" class=3D""><strong data-start=3D"427=
" data-end=3D"459">High-level visual processing</strong></p>
</li>
<li data-start=3D"460" data-end=3D"493" class=3D"">
<p data-start=3D"462" data-end=3D"493" class=3D""><strong data-start=3D"462=
" data-end=3D"493">Face and object recognition</strong></p>
</li>
<li data-start=3D"494" data-end=3D"545" class=3D"">
<p data-start=3D"496" data-end=3D"545" class=3D""><strong data-start=3D"496=
" data-end=3D"545">Category selectivity (e.g., faces vs. scenes)</strong></=
p>
</li>
</ul>
<hr data-start=3D"547" data-end=3D"550" class=3D""></div></div></div></div>=
</div></div></div></div></article><article class=3D"text-token-text-primary=
 w-full" dir=3D"auto" data-testid=3D"conversation-turn-165" data-scroll-anc=
hor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base m=
y-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thre=
ad-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing=
(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-wid=
th:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-co=
ntent-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex=
-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outl=
ine-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative =
flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-=
3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author-ro=
le=3D"user" data-message-id=3D"c537159c-f3a3-4737-b73a-9c1e11305427" dir=3D=
"auto" class=3D"min-h-8 text-message relative flex w-full flex-col items-en=
d gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5=
"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items=
-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-=
message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap"=
>im talking about in the script, there are face-selective neurons from scri=
pt 1a but are they ever classified in the IT-region. Take as much time as y=
ou need!</div></div></div></div></div></div></div></div></div></article><ar=
ticle class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"=
conversation-turn-166" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">C=
hatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-con=
tent-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @=
[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin=
)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-cont=
ent-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto fl=
ex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:ga=
p-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div =
class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col agen=
t-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex =
max-w-full flex-col grow"><div data-message-author-role=3D"assistant" data-=
message-id=3D"c791dd89-25fe-4cf7-90f8-ed886b601f30" dir=3D"auto" class=3D"m=
in-h-8 text-message relative flex w-full flex-col items-end gap-2 text-star=
t break-words whitespace-normal [.text-message+&amp;]:mt-5" data-message-mo=
del-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden f=
irst:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-=
words dark"><p data-start=3D"0" data-end=3D"168" class=3D"">Thanks for your=
 patience=E2=80=94and this is a really important point in your pipeline, so=
 let=E2=80=99s break it down carefully even though we hit a file access wal=
l in the last step.</p>
<hr data-start=3D"170" data-end=3D"173" class=3D"">
<h2 data-start=3D"175" data-end=3D"195" class=3D"">=F0=9F=A7=A0 Your Questi=
on:</h2>
<blockquote data-start=3D"196" data-end=3D"328">
<p data-start=3D"198" data-end=3D"328" class=3D"">In <strong data-start=3D"=
201" data-end=3D"236"><code data-start=3D"203" data-end=3D"234">script_1a_f=
ace_specific.ipynb</code></strong>, we find face-selective neurons. But do =
we ever classify them as coming from <strong data-start=3D"314" data-end=3D=
"327">IT cortex</strong>?</p>
</blockquote>
<hr data-start=3D"330" data-end=3D"333" class=3D"">
<h3 data-start=3D"335" data-end=3D"356" class=3D"">=E2=9C=85 Summary Answer=
:</h3>
<p data-start=3D"357" data-end=3D"597" class=3D"">The <strong data-start=3D=
"361" data-end=3D"438">face-selective neurons in <code data-start=3D"389" d=
ata-end=3D"393">1a</code> are not inherently labeled by brain region</stron=
g> in that script=E2=80=94but yes, the dataset <strong data-start=3D"475" d=
ata-end=3D"510">does contain region annotations</strong>, and <strong data-=
start=3D"516" data-end=3D"567">IT-specific neurons can be identified elsewh=
ere</strong>, especially using files like:</p>
<ul data-start=3D"599" data-end=3D"850">
<li data-start=3D"599" data-end=3D"691" class=3D"">
<p data-start=3D"601" data-end=3D"691" class=3D""><code data-start=3D"601" =
data-end=3D"621">per_unit_rf.csv.gz</code> =E2=86=92 includes fields like <=
code data-start=3D"645" data-end=3D"651">Area</code>, <code data-start=3D"6=
53" data-end=3D"661">Source</code>, <code data-start=3D"663" data-end=3D"66=
6">x</code>, <code data-start=3D"668" data-end=3D"671">y</code> for RF-fitt=
ed units</p>
</li>
<li data-start=3D"692" data-end=3D"767" class=3D"">
<p data-start=3D"694" data-end=3D"767" class=3D""><code data-start=3D"694" =
data-end=3D"730">unit_sel/visually_selective.csv.gz</code> =E2=86=92 includ=
es unit identity per session</p>
</li>
<li data-start=3D"768" data-end=3D"850" class=3D"">
<p data-start=3D"770" data-end=3D"850" class=3D"">Some scripts save region =
annotations into NetCDF/HDF5 outputs for later plotting</p>
</li>
</ul>
<p data-start=3D"852" data-end=3D"857" class=3D"">So:</p>
<blockquote data-start=3D"858" data-end=3D"1031">
<p data-start=3D"860" data-end=3D"1031" class=3D""><strong data-start=3D"86=
0" data-end=3D"920"><code data-start=3D"862" data-end=3D"873">script_1a</co=
de> tells you <em data-start=3D"884" data-end=3D"891">which</em> neurons ar=
e face-selective</strong><br data-start=3D"920" data-end=3D"923">
To find out <strong data-start=3D"937" data-end=3D"962">whether they=E2=80=
=99re in IT</strong>, you need to cross-reference with the <strong data-sta=
rt=3D"1001" data-end=3D"1031">RF metadata (<code data-start=3D"1016" data-e=
nd=3D"1022">Area</code> field)</strong></p>
</blockquote>
<hr data-start=3D"1033" data-end=3D"1036" class=3D"">
<h3 data-start=3D"1038" data-end=3D"1099" class=3D"">=F0=9F=A7=AD How to ch=
eck if a face-selective neuron is IT-specific</h3>
<p data-start=3D"1101" data-end=3D"1111" class=3D"">You would:</p>
<ol data-start=3D"1112" data-end=3D"1424">
<li data-start=3D"1112" data-end=3D"1197" class=3D"">
<p data-start=3D"1115" data-end=3D"1197" class=3D"">Load the face-selective=
 unit list from <code data-start=3D"1154" data-end=3D"1165">script_1a</code=
> (usually as CSV or a HDF group)</p>
</li>
<li data-start=3D"1198" data-end=3D"1247" class=3D"">
<p data-start=3D"1201" data-end=3D"1247" class=3D"">Load the RF metadata fr=
om <code data-start=3D"1227" data-end=3D"1247">per_unit_rf.csv.gz</code></p=
>
</li>
<li data-start=3D"1248" data-end=3D"1297" class=3D"">
<p data-start=3D"1251" data-end=3D"1297" class=3D"">Join on <code data-star=
t=3D"1259" data-end=3D"1276">(Session, Unit)</code> or <code data-start=3D"=
1280" data-end=3D"1297">(Session, Name)</code></p>
</li>
<li data-start=3D"1298" data-end=3D"1357" class=3D"">
<p data-start=3D"1301" data-end=3D"1357" class=3D"">Filter by <code data-st=
art=3D"1311" data-end=3D"1317">Area</code> values like <code data-start=3D"=
1330" data-end=3D"1337">'CIT'</code>, <code data-start=3D"1339" data-end=3D=
"1346">'AIT'</code>, or <code data-start=3D"1351" data-end=3D"1357">'IT'</c=
ode></p>
</li>
<li data-start=3D"1358" data-end=3D"1424" class=3D"">
<p data-start=3D"1361" data-end=3D"1424" class=3D"">Now you can say: =E2=80=
=9CThis face-selective neuron is from IT cortex=E2=80=9D</p>
</li>
</ol>
<hr data-start=3D"1426" data-end=3D"1429" class=3D"">
<h2 data-start=3D"1431" data-end=3D"1474" class=3D"">=F0=9F=A7=A0 What IT s=
ubregions typically show up?</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"14=
76" data-end=3D"1731" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1476" data-end=3D"1506"><tr data-start=3D"1476" data-end=3D"=
1506"><th data-start=3D"1476" data-end=3D"1489" data-col-size=3D"sm">Area l=
abel</th><th data-start=3D"1489" data-end=3D"1506" data-col-size=3D"md">Wha=
t it means</th></tr></thead><tbody data-start=3D"1539" data-end=3D"1731"><t=
r data-start=3D"1539" data-end=3D"1580"><td data-start=3D"1539" data-end=3D=
"1547" data-col-size=3D"sm"><code data-start=3D"1541" data-end=3D"1546">CIT=
</code></td><td data-start=3D"1547" data-end=3D"1580" data-col-size=3D"md">=
Central Inferotemporal cortex</td></tr><tr data-start=3D"1581" data-end=3D"=
1623"><td data-start=3D"1581" data-end=3D"1589" data-col-size=3D"sm"><code =
data-start=3D"1583" data-end=3D"1588">AIT</code></td><td data-start=3D"1589=
" data-end=3D"1623" data-col-size=3D"md">Anterior Inferotemporal cortex</td=
></tr><tr data-start=3D"1624" data-end=3D"1663"><td data-start=3D"1624" dat=
a-end=3D"1631" data-col-size=3D"sm"><code data-start=3D"1626" data-end=3D"1=
630">IT</code></td><td data-start=3D"1631" data-end=3D"1663" data-col-size=
=3D"md">Generic Inferotemporal label</td></tr><tr data-start=3D"1664" data-=
end=3D"1731"><td data-start=3D"1664" data-end=3D"1683" data-col-size=3D"sm"=
><code data-start=3D"1666" data-end=3D"1670">V4</code>, <code data-start=3D=
"1672" data-end=3D"1676">V2</code>, etc.</td><td data-start=3D"1683" data-e=
nd=3D"1731" data-col-size=3D"md">Other visual regions (less object-selectiv=
e)</td></tr></tbody></table><div class=3D"sticky end-(--thread-content-marg=
in) h-0 self-end select-none"><div class=3D"absolute end-0 flex items-end" =
style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button=
 class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-se=
condary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:foc=
us-within)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opa=
city-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none"=
 xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-ru=
le=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C=
20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 1=
5.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5Z=
M9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4=
.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772=
 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.4=
4772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span>=
</div></div></div></div>
<hr data-start=3D"1733" data-end=3D"1736" class=3D"">
<h2 data-start=3D"1738" data-end=3D"1753" class=3D"">=E2=9C=85 Conclusion</=
h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"17=
55" data-end=3D"2142" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"1755" data-end=3D"1776"><tr data-start=3D"1755" data-end=3D"=
1776"><th data-start=3D"1755" data-end=3D"1766" data-col-size=3D"md">Questi=
on</th><th data-start=3D"1766" data-end=3D"1776" data-col-size=3D"md">Answe=
r</th></tr></thead><tbody data-start=3D"1799" data-end=3D"2142"><tr data-st=
art=3D"1799" data-end=3D"1919"><td data-start=3D"1799" data-end=3D"1848" da=
ta-col-size=3D"md">Does <code data-start=3D"1806" data-end=3D"1817">script_=
1a</code> directly label neurons as IT?</td><td data-start=3D"1848" data-en=
d=3D"1919" data-col-size=3D"md">=E2=9D=8C No=E2=80=94it identifies face-sel=
ective neurons without assigning regions</td></tr><tr data-start=3D"1920" d=
ata-end=3D"2024"><td data-start=3D"1920" data-end=3D"1972" data-col-size=3D=
"md">Does the dataset allow you to link neurons to IT?</td><td data-start=
=3D"1972" data-end=3D"2024" data-col-size=3D"md">=E2=9C=85 Yes=E2=80=94via =
<code data-start=3D"1984" data-end=3D"2004">per_unit_rf.csv.gz</code> and <=
code data-start=3D"2009" data-end=3D"2015">Area</code> column</td></tr><tr =
data-start=3D"2025" data-end=3D"2142"><td data-start=3D"2025" data-end=3D"2=
077" data-col-size=3D"md">Can you quantify how many face neurons are in IT?=
</td><td data-start=3D"2077" data-end=3D"2142" data-col-size=3D"md">=E2=9C=
=85 Yes, with a quick merge of metadata and selectivity outputs</td></tr></=
tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 self-e=
nd select-none"><div class=3D"absolute end-0 flex items-end" style=3D"heigh=
t: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg-t=
oken-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1 r=
ounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:po=
inter-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg w=
idth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http=
://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd"=
 clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3=
.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 2=
2H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.656=
9 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523=
 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.=
5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9=
 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div></=
div></div>
<hr data-start=3D"2144" data-end=3D"2147" class=3D"">
<p data-start=3D"2149" data-end=3D"2202" class=3D"">Would you like me to ge=
nerate a reusable script that:</p>
<ul data-start=3D"2203" data-end=3D"2312">
<li data-start=3D"2203" data-end=3D"2252" class=3D"">
<p data-start=3D"2205" data-end=3D"2252" class=3D"">Takes your <code data-s=
tart=3D"2216" data-end=3D"2227">script_1a</code> face-selectivity results</=
p>
</li>
<li data-start=3D"2253" data-end=3D"2282" class=3D"">
<p data-start=3D"2255" data-end=3D"2282" class=3D"">Joins with RF area meta=
data</p>
</li>
<li data-start=3D"2283" data-end=3D"2312" class=3D"">
<p data-start=3D"2285" data-end=3D"2312" class=3D"">Outputs a clean table l=
ike:</p>
</li>
</ul>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"23=
14" data-end=3D"2395" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2314" data-end=3D"2354"><tr data-start=3D"2314" data-end=3D"=
2354"><th data-start=3D"2314" data-end=3D"2324" data-col-size=3D"sm">Sessio=
n</th><th data-start=3D"2324" data-end=3D"2331" data-col-size=3D"sm">Unit</=
th><th data-start=3D"2331" data-end=3D"2337" data-col-size=3D"sm">FSI</th><=
th data-start=3D"2337" data-end=3D"2344" data-col-size=3D"sm">Area</th><th =
data-start=3D"2344" data-end=3D"2354" data-col-size=3D"sm">Is_IT?</th></tr>=
</thead></table><div class=3D"sticky end-(--thread-content-margin) h-0 self=
-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D"hei=
ght: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D"bg=
-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary my-1=
 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within)]:=
pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><svg=
 width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"ht=
tp://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22=
 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14=
 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6=
569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.55=
23 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 1=
9.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523=
 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></div>=
</div></div>
<p data-start=3D"2397" data-end=3D"2450" class=3D"">? =E2=80=8B<span class=
=3D"" data-state=3D"closed"><button><svg xmlns=3D"http://www.w3.org/2000/sv=
g" viewBox=3D"0 0 19 15" fill=3D"none" class=3D"text-token-link hover:text-=
token-link-hover ms-0.5 -mt-0.5 inline-block" width=3D"19" height=3D"15"><p=
ath d=3D"M4.42 0.75H2.8625H2.75C1.64543 0.75 0.75 1.64543 0.75 2.75V11.65C0=
.75 12.7546 1.64543 13.65 2.75 13.65H2.8625C2.8625 13.65 2.8625 13.65 2.862=
5 13.65C2.8625 13.65 4.00751 13.65 4.42 13.65M13.98 13.65H15.5375H15.65C16.=
7546 13.65 17.65 12.7546 17.65 11.65V2.75C17.65 1.64543 16.7546 0.75 15.65 =
0.75H15.5375H13.98" stroke=3D"currentColor" stroke-width=3D"1.5" stroke-lin=
ecap=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M5.55283 4.21963=
C5.25993 3.92674 4.78506 3.92674 4.49217 4.21963C4.19927 4.51252 4.19927 4.=
9874 4.49217 5.28029L6.36184 7.14996L4.49217 9.01963C4.19927 9.31252 4.1992=
7 9.7874 4.49217 10.0803C4.78506 10.3732 5.25993 10.3732 5.55283 10.0803L7.=
95283 7.68029C8.24572 7.3874 8.24572 6.91252 7.95283 6.61963L5.55283 4.2196=
3Z" fill=3D"currentColor" stroke=3D"currentColor" stroke-width=3D"0.2" stro=
ke-linecap=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M9.77753 8=
.75003C9.3357 8.75003 8.97753 9.10821 8.97753 9.55003C8.97753 9.99186 9.335=
7 10.35 9.77753 10.35H13.2775C13.7194 10.35 14.0775 9.99186 14.0775 9.55003=
C14.0775 9.10821 13.7194 8.75003 13.2775 8.75003H9.77753Z" fill=3D"currentC=
olor" stroke=3D"currentColor" stroke-width=3D"0.1"></path></svg></button></=
span>=E2=80=8B</p></div></div></div></div></div></div></div></div></article=
><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=
=3D"conversation-turn-167" data-scroll-anchor=3D"false"><h5 class=3D"sr-onl=
y">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-con=
tent-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @=
[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin=
)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-cont=
ent-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto fl=
ex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:ga=
p-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div =
class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><di=
v class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full =
flex-col grow"><div data-message-author-role=3D"user" data-message-id=3D"3d=
574990-6772-47b3-9674-fad1d83ec057" dir=3D"auto" class=3D"min-h-8 text-mess=
age relative flex w-full flex-col items-end gap-2 text-start break-words wh=
itespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-=
col gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative ma=
x-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 =
py-2.5"><div class=3D"whitespace-pre-wrap">Session,Name,Channel,Bank,Array =
ID
Pa191024_1,1,1,0,1
Pa191024_1,1a,1,0,1
Pa191024_1,1b,1,0,1
Pa191024_1,1c,1,0,1
Pa191024_1,2,2,0,1
Pa191024_1,2a,2,0,1
Pa191024_1,2b,2,0,1
Pa191024_1,3,3,0,1
Pa191024_1,3a,3,0,1
Pa191024_1,3b,3,0,1
Pa191024_1,3c,3,0,1
Pa191024_1,4,4,0,1
Pa191024_1,4a,4,0,1
Pa191024_1,4c,4,0,1
Pa191024_1,5,5,0,1
Pa191024_1,6,6,0,1
Pa191024_1,7,7,0,1
Pa191024_1,8,8,0,1
Pa191024_1,9,9,0,1
Pa191024_1,10,10,0,1
Pa191024_1,11,11,0,1
Pa191024_1,12,12,0,1
Pa191024_1,13,13,0,1
Pa191024_1,13a,13,0,1
Pa191024_1,13b,13,0,1
Pa191024_1,14,14,0,1
Pa191024_1,14a,14,0,1
Pa191024_1,14b,14,0,1
Pa191024_1,15,15,0,1
Pa191024_1,15a,15,0,1
Pa191024_1,15b,15,0,1
Pa191024_1,15d,15,0,1
Pa191024_1,16,16,0,1
Pa191024_1,16a,16,0,1
Pa191024_1,17,17,0,1
Pa191024_1,17a,17,0,1
Pa191024_1,17b,17,0,1
Pa191024_1,18,18,0,1
Pa191024_1,18a,18,0,1
Pa191024_1,18b,18,0,1
Pa191024_1,19,19,0,1
Pa191024_1,19a,19,0,1
Pa191024_1,19b,19,0,1
Pa191024_1,20,20,0,1
Pa191024_1,20a,20,0,1
Pa191024_1,20b,20,0,1
Pa191024_1,21,21,0,1
Pa191024_1,21a,21,0,1
Pa191024_1,21b,21,0,1
Pa191024_1,22,22,0,1
Pa191024_1,22a,22,0,1
Pa191024_1,22b,22,0,1
Pa191024_1,23,23,0,1
Pa191024_1,23a,23,0,1
Pa191024_1,23b,23,0,1
Pa191024_1,24,24,0,1
Pa191024_1,25,25,0,1
Pa191024_1,25a,25,0,1
Pa191024_1,25b,25,0,1
Pa191024_1,26,26,0,1
Pa191024_1,26a,26,0,1
Pa191024_1,26b,26,0,1
Pa191024_1,27,27,0,1
Pa191024_1,28,28,0,1
Pa191024_1,28a,28,0,1
Pa191024_1,28b,28,0,1
Pa191024_1,29,29,0,1
Pa191024_1,29a,29,0,1
Pa191024_1,29b,29,0,1
Pa191024_1,29c,29,0,1
Pa191024_1,30,30,0,1
Pa191024_1,31,31,0,1
Pa191024_1,32,32,0,1
Pa191024_1,32a,32,0,1
Pa191024_1,32b,32,0,1
Pa191024_1,33,33,1,2
Pa191024_1,34,34,1,2
Pa191024_1,35,35,1,2
Pa191024_1,36,36,1,2
Pa191024_1,37,37,1,2
Pa191024_1,37a,37,1,2
Pa191024_1,37b,37,1,2
Pa191024_1,38,38,1,2
Pa191024_1,39,39,1,2
Pa191024_1,39a,39,1,2
Pa191024_1,40,40,1,2

what does this mean</div></div></div></div></div></div></div></div></div></=
article><article class=3D"text-token-text-primary w-full" dir=3D"auto" data=
-testid=3D"conversation-turn-168" data-scroll-anchor=3D"false"><h6 class=3D=
"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [-=
-thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--sp=
acing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-con=
tent-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--=
thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem]=
 mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:=
gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=
=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0 =
flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div c=
lass=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"ass=
istant" data-message-id=3D"2c55e63e-a5c6-4514-8665-a8bd3e642911" dir=3D"aut=
o" class=3D"min-h-8 text-message relative flex w-full flex-col items-end ga=
p-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5" da=
ta-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 e=
mpty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert =
w-full break-words dark"><p data-start=3D"0" data-end=3D"233" class=3D"">Aw=
esome=E2=80=94you=E2=80=99ve just pasted a snippet from a <strong data-star=
t=3D"44" data-end=3D"61">metadata file</strong>, most likely related to the=
 neural units recorded from a specific session (here: <code data-start=3D"1=
43" data-end=3D"155">Pa191024_1</code>). Let=E2=80=99s break down what each=
 column means, and what this file is telling you.</p>
<hr data-start=3D"235" data-end=3D"238" class=3D"">
<h2 data-start=3D"240" data-end=3D"269" class=3D"">=F0=9F=93=8B What this f=
ile contains</h2>
<p data-start=3D"271" data-end=3D"380" class=3D"">Each row represents a <st=
rong data-start=3D"293" data-end=3D"308">neural unit</strong>, and the colu=
mns describe <strong data-start=3D"335" data-end=3D"360">where it was recor=
ded</strong> in the brain array.</p>
<p data-start=3D"382" data-end=3D"401" class=3D"">Here=E2=80=99s a breakdow=
n:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"40=
3" data-end=3D"820" class=3D"w-fit min-w-(--thread-content-width)"><thead d=
ata-start=3D"403" data-end=3D"432"><tr data-start=3D"403" data-end=3D"432">=
<th data-start=3D"403" data-end=3D"417" data-col-size=3D"sm">Column Name</t=
h><th data-start=3D"417" data-end=3D"432" data-col-size=3D"md">Description<=
/th></tr></thead><tbody data-start=3D"463" data-end=3D"820"><tr data-start=
=3D"463" data-end=3D"527"><td data-start=3D"463" data-end=3D"477" data-col-=
size=3D"sm"><code data-start=3D"465" data-end=3D"474">Session</code></td><t=
d data-start=3D"477" data-end=3D"527" data-col-size=3D"md">The recording se=
ssion ID (e.g. <code data-start=3D"510" data-end=3D"524">"Pa191024_1"</code=
>)</td></tr><tr data-start=3D"528" data-end=3D"596"><td data-start=3D"528" =
data-end=3D"542" data-col-size=3D"sm"><code data-start=3D"530" data-end=3D"=
536">Name</code></td><td data-start=3D"542" data-end=3D"596" data-col-size=
=3D"md">The unit name or identifier (e.g. <code data-start=3D"578" data-end=
=3D"584">"1a"</code>, <code data-start=3D"586" data-end=3D"593">"13b"</code=
>)</td></tr><tr data-start=3D"597" data-end=3D"666"><td data-start=3D"597" =
data-end=3D"611" data-col-size=3D"sm"><code data-start=3D"599" data-end=3D"=
608">Channel</code></td><td data-start=3D"611" data-end=3D"666" data-col-si=
ze=3D"md">The electrode channel number that recorded the unit</td></tr><tr =
data-start=3D"667" data-end=3D"737"><td data-start=3D"667" data-end=3D"681"=
 data-col-size=3D"sm"><code data-start=3D"669" data-end=3D"675">Bank</code>=
</td><td data-start=3D"681" data-end=3D"737" data-col-size=3D"md">Which <st=
rong data-start=3D"689" data-end=3D"697">bank</strong> of the array the ele=
ctrode belongs to</td></tr><tr data-start=3D"738" data-end=3D"820"><td data=
-start=3D"738" data-end=3D"752" data-col-size=3D"sm"><code data-start=3D"74=
0" data-end=3D"750">Array ID</code></td><td data-start=3D"752" data-end=3D"=
820" data-col-size=3D"md">The array device identifier (often indicating reg=
ion or implant)</td></tr></tbody></table><div class=3D"sticky end-(--thread=
-content-margin) h-0 self-end select-none"><div class=3D"absolute end-0 fle=
x items-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"cl=
osed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-=
token-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:ho=
ver):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus=
-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" =
fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy">=
<path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.343=
15 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19=
C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.343=
15 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523=
 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.4477=
2 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15=
 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></b=
utton></span></div></div></div></div>
<hr data-start=3D"822" data-end=3D"825" class=3D"">
<h2 data-start=3D"827" data-end=3D"881" class=3D"">=F0=9F=A7=A0 How this re=
lates to brain areas (like IT cortex)</h2>
<h3 data-start=3D"883" data-end=3D"902" class=3D"">Here's the key:</h3>
<p data-start=3D"903" data-end=3D"981" class=3D"">This table by itself <str=
ong data-start=3D"924" data-end=3D"980">does not directly tell you whether =
a neuron is in IT</strong>.</p>
<p data-start=3D"983" data-end=3D"1163" class=3D"">But it helps <strong dat=
a-start=3D"996" data-end=3D"1057">map each neuron to a specific recording c=
hannel and array</strong>, which can then be matched to known brain areas f=
rom <strong data-start=3D"1111" data-end=3D"1127">implant maps</strong> or =
<strong data-start=3D"1131" data-end=3D"1162">surgical targeting metadata</=
strong>.</p>
<p data-start=3D"1165" data-end=3D"1178" class=3D"">So typically:</p>
<ul data-start=3D"1180" data-end=3D"1549">
<li data-start=3D"1180" data-end=3D"1288" class=3D"">
<p data-start=3D"1182" data-end=3D"1288" class=3D""><strong data-start=3D"1=
182" data-end=3D"1202">Array ID 1 and 2</strong> might correspond to specif=
ic brain areas (e.g., <code data-start=3D"1251" data-end=3D"1268">Array ID =
1 =3D V4</code>, <code data-start=3D"1270" data-end=3D"1287">Array ID 2 =3D=
 IT</code>)</p>
</li>
<li data-start=3D"1289" data-end=3D"1342" class=3D"">
<p data-start=3D"1291" data-end=3D"1342" class=3D""><strong data-start=3D"1=
291" data-end=3D"1309">Channel number</strong> maps spatially to probe geom=
etry</p>
</li>
<li data-start=3D"1343" data-end=3D"1549" class=3D"">
<p data-start=3D"1345" data-end=3D"1445" class=3D"">These are sometimes cro=
ss-referenced with a file like <code data-start=3D"1399" data-end=3D"1419">=
per_unit_rf.csv.gz</code>, which adds columns like:</p>
<ul data-start=3D"1448" data-end=3D"1549">
<li data-start=3D"1448" data-end=3D"1500" class=3D"">
<p data-start=3D"1450" data-end=3D"1500" class=3D""><code data-start=3D"145=
0" data-end=3D"1458">'Area'</code> =E2=86=92 brain region (<code data-start=
=3D"1475" data-end=3D"1480">AIT</code>, <code data-start=3D"1482" data-end=
=3D"1487">CIT</code>, <code data-start=3D"1489" data-end=3D"1493">V4</code>=
, etc.)</p>
</li>
<li data-start=3D"1503" data-end=3D"1549" class=3D"">
<p data-start=3D"1505" data-end=3D"1549" class=3D""><code data-start=3D"150=
5" data-end=3D"1510">'x'</code>, <code data-start=3D"1512" data-end=3D"1517=
">'y'</code> =E2=86=92 fitted receptive field center</p>
</li>
</ul>
</li>
</ul>
<hr data-start=3D"1551" data-end=3D"1554" class=3D"">
<h2 data-start=3D"1556" data-end=3D"1588" class=3D"">=F0=9F=A7=A0 Practical=
 use of this file</h2>
<p data-start=3D"1590" data-end=3D"1615" class=3D"">You can use this file t=
o:</p>
<ol data-start=3D"1616" data-end=3D"1826">
<li data-start=3D"1616" data-end=3D"1669" class=3D"">
<p data-start=3D"1619" data-end=3D"1669" class=3D"">Know what units came fr=
om what physical electrodes</p>
</li>
<li data-start=3D"1670" data-end=3D"1733" class=3D"">
<p data-start=3D"1673" data-end=3D"1733" class=3D"">Group neurons by channe=
l/bank/array for anatomical inference</p>
</li>
<li data-start=3D"1734" data-end=3D"1826" class=3D"">
<p data-start=3D"1737" data-end=3D"1826" class=3D"">Join this info with fun=
ctional annotations (e.g., RF fits, face selectivity, spike rates)</p>
</li>
</ol>
<hr data-start=3D"1828" data-end=3D"1831" class=3D"">
<h3 data-start=3D"1833" data-end=3D"1854" class=3D"">Example Use Case:</h3>
<p data-start=3D"1855" data-end=3D"1956" class=3D"">Suppose you found Unit =
<code data-start=3D"1878" data-end=3D"1885">"13a"</code> to be <strong data=
-start=3D"1892" data-end=3D"1910">face-selective</strong> (e.g., from <code=
 data-start=3D"1923" data-end=3D"1954">script_1a_face_specific.ipynb</code>=
).</p>
<p data-start=3D"1958" data-end=3D"1985" class=3D"">From this table, you le=
arn:</p>
<ul data-start=3D"1986" data-end=3D"2040">
<li data-start=3D"1986" data-end=3D"2040" class=3D"">
<p data-start=3D"1988" data-end=3D"2040" class=3D"">It came from <strong da=
ta-start=3D"2001" data-end=3D"2015">Channel 13</strong>, <strong data-start=
=3D"2017" data-end=3D"2027">Bank 0</strong>, <strong data-start=3D"2029" da=
ta-end=3D"2040">Array 1</strong></p>
</li>
</ul>
<p data-start=3D"2042" data-end=3D"2047" class=3D"">Then:</p>
<ul data-start=3D"2048" data-end=3D"2205">
<li data-start=3D"2048" data-end=3D"2100" class=3D"">
<p data-start=3D"2050" data-end=3D"2100" class=3D"">You check a lookup tabl=
e like <code data-start=3D"2080" data-end=3D"2100">per_unit_rf.csv.gz</code=
></p>
</li>
<li data-start=3D"2101" data-end=3D"2205" class=3D"">
<p data-start=3D"2103" data-end=3D"2205" class=3D"">It might say: <code dat=
a-start=3D"2117" data-end=3D"2139">Session =3D Pa191024_1</code>, <code dat=
a-start=3D"2141" data-end=3D"2153">Name =3D 13a</code>, <code data-start=3D=
"2155" data-end=3D"2169">Area =3D 'CIT'</code> =E2=86=92 =E2=86=92 Now you =
know it=E2=80=99s an IT neuron.</p>
</li>
</ul>
<hr data-start=3D"2207" data-end=3D"2210" class=3D"">
<h2 data-start=3D"2212" data-end=3D"2222" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"22=
24" data-end=3D"2603" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2224" data-end=3D"2245"><tr data-start=3D"2224" data-end=3D"=
2245"><th data-start=3D"2224" data-end=3D"2235" data-col-size=3D"md">Questi=
on</th><th data-start=3D"2235" data-end=3D"2245" data-col-size=3D"md">Answe=
r</th></tr></thead><tbody data-start=3D"2268" data-end=3D"2603"><tr data-st=
art=3D"2268" data-end=3D"2380"><td data-start=3D"2268" data-end=3D"2289" da=
ta-col-size=3D"md">What is this file?</td><td data-start=3D"2289" data-end=
=3D"2380" data-col-size=3D"md">A mapping of neural unit identifiers to thei=
r recording hardware (channel, bank, array)</td></tr><tr data-start=3D"2381=
" data-end=3D"2507"><td data-start=3D"2381" data-end=3D"2429" data-col-size=
=3D"md">Does it say what brain area the neuron is in?</td><td data-start=3D=
"2429" data-end=3D"2507" data-col-size=3D"md">=E2=9D=8C Not directly=E2=80=
=94but you can <strong data-start=3D"2458" data-end=3D"2487">match it with =
RF metadata</strong> to find that info</td></tr><tr data-start=3D"2508" dat=
a-end=3D"2603"><td data-start=3D"2508" data-end=3D"2543" data-col-size=3D"m=
d">Can it help identify IT neurons?</td><td data-start=3D"2543" data-end=3D=
"2603" data-col-size=3D"md">=E2=9C=85 Yes, if combined with region metadata=
 from other files</td></tr></tbody></table><div class=3D"sticky end-(--thre=
ad-content-margin) h-0 self-end select-none"><div class=3D"absolute end-0 f=
lex items-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"=
closed"><button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary tex=
t-token-text-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:=
hover):not(:focus-within)]:pointer-events-none group-[:not(:hover):not(:foc=
us-within)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24=
" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy=
"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.3=
4315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V=
19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.3=
4315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.55=
23 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44=
772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 =
15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg><=
/button></span></div></div></div></div>
<hr data-start=3D"2605" data-end=3D"2608" class=3D"">
<p data-start=3D"2610" data-end=3D"2754" class=3D"">Would you like help mer=
ging this metadata with your face-selectivity output and region labels to t=
ag which units are from IT and face-selective?</p></div></div></div></div><=
/div></div></div></div></article><article class=3D"text-token-text-primary =
w-full" dir=3D"auto" data-testid=3D"conversation-turn-169" data-scroll-anch=
or=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my=
-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--threa=
d-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(=
16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-widt=
h:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-con=
tent-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-=
1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outli=
ne-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative f=
lex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3=
"><div class=3D"flex max-w-full flex-col grow"><div data-message-author-rol=
e=3D"user" data-message-id=3D"e4d9348f-fbe4-4fcc-ba88-2be9633a800b" dir=3D"=
auto" class=3D"min-h-8 text-message relative flex w-full flex-col items-end=
 gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5"=
><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-=
start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-m=
essage-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">=
Session,Name,x,y,r,Source
Pa191024_1,1,-1.75,1.0,1.5,Unit
Pa191024_1,1a,-1.75,-3.0,1.75,Unit
Pa191024_1,1b,-1.0,1.0,2.0,Unit
Pa191024_1,1c,-1.25,-3.5,2.5,Unit
Pa191024_1,2,0.25,-0.5,1.25,Channel
Pa191024_1,2a,0.0,-0.5,1.25,Unit
Pa191024_1,2b,0.375,-0.125,1.25,Unit
Pa191024_1,3,0.0,0.0,2.0,Default
Pa191024_1,3a,0.0,0.0,2.0,Default
Pa191024_1,3b,0.0,0.0,2.0,Default
Pa191024_1,3c,0.0,4.25,3.25,Unit
Pa191024_1,4,3.0,-1.5,2.25,Channel
Pa191024_1,4a,2.75,-1.75,2.0,Unit
Pa191024_1,4c,3.125,-4.0,3.0,Unit
Pa191024_1,5,0.0,0.0,2.0,Default
Pa191024_1,6,-0.25,-0.5,1.5,Unit
Pa191024_1,7,0.0,0.0,2.0,Default
Pa191024_1,8,0.0,0.0,2.0,Default
Pa191024_1,9,0.0,0.0,2.0,Default
Pa191024_1,10,-0.25,-0.25,1.25,Unit
Pa191024_1,11,0.0,0.0,2.0,Default
Pa191024_1,12,0.0,-0.25,1.5,Unit
Pa191024_1,13,0.0,0.0,2.0,Default
Pa191024_1,13a,0.0,0.0,2.0,Default
Pa191024_1,13b,0.0,0.0,2.0,Default
Pa191024_1,14,0.0,0.0,2.0,Default
Pa191024_1,14a,0.0,0.0,2.0,Default
Pa191024_1,14b,0.0,0.0,2.0,Default
Pa191024_1,15,-0.25,-0.5,1.75,Unit
Pa191024_1,15a,-2.25,6.25,2.25,Unit
Pa191024_1,15b,-0.25,-0.25,1.5,Channel
Pa191024_1,15d,1.5,-0.5,1.75,Unit
Pa191024_1,16,0.25,0.125,1.125,Unit
Pa191024_1,16a,0.125,0.0,1.25,Unit
Pa191024_1,17,3.0,-0.375,2.125,Unit
Pa191024_1,17a,0.5,-0.5,2.5,Unit
Pa191024_1,17b,0.125,-0.75,2.125,Unit
Pa191024_1,18,0.0,0.0,2.0,Default
Pa191024_1,18a,0.0,0.0,2.0,Default
Pa191024_1,18b,0.0,0.0,2.0,Default
Pa191024_1,19,-2.75,-4.75,1.5,Unit
Pa191024_1,19a,1.125,-0.625,2.5,Unit
Pa191024_1,19b,2.25,-0.5,2.5,Channel
Pa191024_1,20,-0.25,-0.25,1.0,Unit
Pa191024_1,20a,0.0,-0.25,1.75,Unit
Pa191024_1,20b,0.0,-0.25,1.0,Unit
Pa191024_1,21,0.0,0.0,2.0,Default
Pa191024_1,21a,0.0,0.0,2.0,Default
Pa191024_1,21b,0.0,0.0,2.0,Default
Pa191024_1,22,0.0,0.0,2.0,Default
Pa191024_1,22a,0.0,0.0,2.0,Default
Pa191024_1,22b,0.0,0.0,2.0,Default
Pa191024_1,23,0.125,3.25,2.0,Channel
Pa191024_1,23a,-1.5,1.0,2.25,Unit
Pa191024_1,23b,0.125,3.25,2.0,Channel
Pa191024_1,24,0.0,0.0,2.0,Default
Pa191024_1,25,-0.625,-1.5,2.75,Channel
Pa191024_1,25a,1.0,-1.25,2.75,Unit
Pa191024_1,25b,0.0,-0.5,3.0,Unit
Pa191024_1,26,0.0,0.0,2.0,Default
Pa191024_1,26a,0.0,0.0,2.0,Default
Pa191024_1,26b,0.0,0.0,2.0,Default
Pa191024_1,27,-0.5,-4.75,1.5,Unit

what about this file</div></div></div></div></div></div></div></div></div><=
/article><article class=3D"text-token-text-primary w-full" dir=3D"auto" dat=
a-testid=3D"conversation-turn-170" data-scroll-anchor=3D"false"><h6 class=
=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5=
 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:-=
-spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-=
content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:=
[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48r=
em] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 =
md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabinde=
x=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0=
 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div =
class=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"as=
sistant" data-message-id=3D"9ab25084-8561-40ee-ba2b-495209eba3b4" dir=3D"au=
to" class=3D"min-h-8 text-message relative flex w-full flex-col items-end g=
ap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5" d=
ata-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 =
empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert=
 w-full break-words dark"><p data-start=3D"0" data-end=3D"185" class=3D"">P=
erfect! This is the <strong data-start=3D"21" data-end=3D"68">per-unit rece=
ptive field (RF) metadata file</strong>=E2=80=94and it=E2=80=99s super help=
ful for answering your earlier question about identifying <strong data-star=
t=3D"146" data-end=3D"169">IT-specific neurons</strong> in the dataset.</p>
<p data-start=3D"187" data-end=3D"207" class=3D"">Let=E2=80=99s break it do=
wn:</p>
<hr data-start=3D"209" data-end=3D"212" class=3D"">
<h2 data-start=3D"214" data-end=3D"245" class=3D"">=F0=9F=93=81 What this f=
ile represents</h2>
<p data-start=3D"247" data-end=3D"313" class=3D"">Each row represents a sin=
gle <strong data-start=3D"276" data-end=3D"291">neural unit</strong>, and t=
he columns are:</p>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"31=
5" data-end=3D"749" class=3D"w-fit min-w-(--thread-content-width)"><thead d=
ata-start=3D"315" data-end=3D"343"><tr data-start=3D"315" data-end=3D"343">=
<th data-start=3D"315" data-end=3D"328" data-col-size=3D"sm">Column</th><th=
 data-start=3D"328" data-end=3D"343" data-col-size=3D"md">Description</th><=
/tr></thead><tbody data-start=3D"373" data-end=3D"749"><tr data-start=3D"37=
3" data-end=3D"432"><td data-start=3D"373" data-end=3D"386" data-col-size=
=3D"sm"><code data-start=3D"375" data-end=3D"384">Session</code></td><td da=
ta-start=3D"386" data-end=3D"432" data-col-size=3D"md">Recording session ID=
 (e.g. <code data-start=3D"415" data-end=3D"429">"Pa191024_1"</code>)</td><=
/tr><tr data-start=3D"433" data-end=3D"513"><td data-start=3D"433" data-end=
=3D"446" data-col-size=3D"sm"><code data-start=3D"435" data-end=3D"441">Nam=
e</code></td><td data-start=3D"446" data-end=3D"513" data-col-size=3D"md">U=
nit identifier (matches the one used in <code data-start=3D"489" data-end=
=3D"497">fix_df</code>, <code data-start=3D"499" data-end=3D"504">sdf</code=
>, etc.)</td></tr><tr data-start=3D"514" data-end=3D"600"><td data-start=3D=
"514" data-end=3D"527" data-col-size=3D"sm"><code data-start=3D"516" data-e=
nd=3D"519">x</code>, <code data-start=3D"521" data-end=3D"524">y</code></td=
><td data-start=3D"527" data-end=3D"600" data-col-size=3D"md">Estimated <st=
rong data-start=3D"539" data-end=3D"564">RF center coordinates</strong> (in=
 degrees of visual angle, dva)</td></tr><tr data-start=3D"601" data-end=3D"=
663"><td data-start=3D"601" data-end=3D"614" data-col-size=3D"sm"><code dat=
a-start=3D"603" data-end=3D"606">r</code></td><td data-start=3D"614" data-e=
nd=3D"663" data-col-size=3D"md">Estimated RF radius (or receptive field siz=
e)</td></tr><tr data-start=3D"664" data-end=3D"749"><td data-start=3D"664" =
data-end=3D"677" data-col-size=3D"sm"><code data-start=3D"666" data-end=3D"=
674">Source</code></td><td data-start=3D"677" data-end=3D"749" data-col-siz=
e=3D"md">Indicates where the RF info came from (<code data-start=3D"718" da=
ta-end=3D"724">Unit</code>, <code data-start=3D"726" data-end=3D"735">Chann=
el</code>, <code data-start=3D"737" data-end=3D"746">Default</code>)</td></=
tr></tbody></table><div class=3D"sticky end-(--thread-content-margin) h-0 s=
elf-end select-none"><div class=3D"absolute end-0 flex items-end" style=3D"=
height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button class=3D=
"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-secondary m=
y-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:focus-within=
)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opacity-0"><=
svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D=
"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"eve=
nodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2=
 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22=
 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C1=
5.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19=
.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C=
4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5=
523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span></div></d=
iv></div></div>
<hr data-start=3D"751" data-end=3D"754" class=3D"">
<h2 data-start=3D"756" data-end=3D"794" class=3D"">=F0=9F=A7=A0 How it help=
s classify IT neurons</h2>
<p data-start=3D"796" data-end=3D"1031" class=3D"">Although this file doesn=
=E2=80=99t include an explicit <code data-start=3D"843" data-end=3D"851">'A=
rea'</code> column like <code data-start=3D"864" data-end=3D"871">'CIT'</co=
de>, <code data-start=3D"873" data-end=3D"880">'AIT'</code>, or <code data-=
start=3D"885" data-end=3D"891">'V4'</code>, it gives you <strong data-start=
=3D"906" data-end=3D"936">spatial location estimates</strong> (<code data-s=
tart=3D"938" data-end=3D"941">x</code>, <code data-start=3D"943" data-end=
=3D"946">y</code>) and a <code data-start=3D"954" data-end=3D"964">'Source'=
</code> tag, which can be used as a proxy for RF quality and localization.<=
/p>
<h3 data-start=3D"1033" data-end=3D"1062" class=3D"">=F0=9F=94=8D Some key =
observations:</h3>
<ul data-start=3D"1063" data-end=3D"1495">
<li data-start=3D"1063" data-end=3D"1146" class=3D"">
<p data-start=3D"1065" data-end=3D"1146" class=3D"">Units labeled <code dat=
a-start=3D"1079" data-end=3D"1087">'Unit'</code> in the <code data-start=3D=
"1095" data-end=3D"1103">Source</code> column generally have <strong data-s=
tart=3D"1126" data-end=3D"1146">reliable RF fits</strong></p>
</li>
<li data-start=3D"1147" data-end=3D"1211" class=3D"">
<p data-start=3D"1149" data-end=3D"1211" class=3D"">Units labeled <code dat=
a-start=3D"1163" data-end=3D"1174">'Default'</code> likely <strong data-sta=
rt=3D"1182" data-end=3D"1211">didn=E2=80=99t have a good RF fit</strong></p=
>
</li>
<li data-start=3D"1212" data-end=3D"1495" class=3D"">
<p data-start=3D"1214" data-end=3D"1306" class=3D"">The <strong data-start=
=3D"1218" data-end=3D"1252"><code data-start=3D"1220" data-end=3D"1223">x</=
code>, <code data-start=3D"1225" data-end=3D"1228">y</code> RF center coord=
inates</strong> can be used to <strong data-start=3D"1268" data-end=3D"1293=
">group units spatially</strong>=E2=80=94for example:</p>
<ul data-start=3D"1309" data-end=3D"1495">
<li data-start=3D"1309" data-end=3D"1412" class=3D"">
<p data-start=3D"1311" data-end=3D"1412" class=3D"">Units with RFs centered=
 more <strong data-start=3D"1340" data-end=3D"1352">foveally</strong> or <s=
trong data-start=3D"1356" data-end=3D"1369">ventrally</strong> (e.g. low <c=
ode data-start=3D"1380" data-end=3D"1383">y</code> values) might be from <s=
trong data-start=3D"1406" data-end=3D"1412">IT</strong></p>
</li>
<li data-start=3D"1415" data-end=3D"1495" class=3D"">
<p data-start=3D"1417" data-end=3D"1495" class=3D"">Laterally placed units =
(e.g. high |<code data-start=3D"1452" data-end=3D"1455">x</code>| values) m=
ight map to more dorsal areas</p>
</li>
</ul>
</li>
</ul>
<h3 data-start=3D"1497" data-end=3D"1525" class=3D"">=F0=9F=A7=AD To identi=
fy IT units:</h3>
<p data-start=3D"1526" data-end=3D"1684" class=3D"">If you have an external=
 map (or metadata) matching <strong data-start=3D"1577" data-end=3D"1627">r=
ecording channel or probe site to area labels</strong> (e.g. from surgery o=
r probe implantation maps), you can:</p>
<ul data-start=3D"1685" data-end=3D"1841">
<li data-start=3D"1685" data-end=3D"1771" class=3D"">
<p data-start=3D"1687" data-end=3D"1771" class=3D"">Join this file with the=
 <strong data-start=3D"1711" data-end=3D"1726">channel map</strong> you pos=
ted earlier (via <code data-start=3D"1751" data-end=3D"1757">Name</code> or=
 <code data-start=3D"1761" data-end=3D"1770">Channel</code>)</p>
</li>
<li data-start=3D"1772" data-end=3D"1841" class=3D"">
<p data-start=3D"1774" data-end=3D"1841" class=3D"">Cross-reference to assi=
gn anatomical labels (e.g. <code data-start=3D"1824" data-end=3D"1831">'CIT=
'</code>, <code data-start=3D"1833" data-end=3D"1840">'AIT'</code>)</p>
</li>
</ul>
<p data-start=3D"1843" data-end=3D"1862" class=3D"">Otherwise, you can:</p>
<ul data-start=3D"1863" data-end=3D"2016">
<li data-start=3D"1863" data-end=3D"1911" class=3D"">
<p data-start=3D"1865" data-end=3D"1911" class=3D"">Use spatial heuristics =
(e.g., <code data-start=3D"1895" data-end=3D"1898">x</code>, <code data-sta=
rt=3D"1900" data-end=3D"1903">y</code> bounds)</p>
</li>
<li data-start=3D"1912" data-end=3D"2016" class=3D"">
<p data-start=3D"1914" data-end=3D"2016" class=3D"">Or focus only on well-f=
it units (<code data-start=3D"1947" data-end=3D"1965">Source =3D=3D 'Unit'<=
/code>) and annotate those you know from the paper are IT</p>
</li>
</ul>
<hr data-start=3D"2018" data-end=3D"2021" class=3D"">
<h2 data-start=3D"2023" data-end=3D"2033" class=3D"">=E2=9C=85 TL;DR</h2>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"20=
35" data-end=3D"2514" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2035" data-end=3D"2056"><tr data-start=3D"2035" data-end=3D"=
2056"><th data-start=3D"2035" data-end=3D"2046" data-col-size=3D"sm">Questi=
on</th><th data-start=3D"2046" data-end=3D"2056" data-col-size=3D"lg">Answe=
r</th></tr></thead><tbody data-start=3D"2079" data-end=3D"2514"><tr data-st=
art=3D"2079" data-end=3D"2177"><td data-start=3D"2079" data-end=3D"2100" da=
ta-col-size=3D"sm">What is this file?</td><td data-start=3D"2100" data-end=
=3D"2177" data-col-size=3D"lg">Per-unit RF metadata: location (<code data-s=
tart=3D"2134" data-end=3D"2140">x, y</code>), radius (<code data-start=3D"2=
151" data-end=3D"2154">r</code>), and source quality</td></tr><tr data-star=
t=3D"2178" data-end=3D"2281"><td data-start=3D"2178" data-end=3D"2212" data=
-col-size=3D"sm">Does it say if a unit is in IT?</td><td data-start=3D"2212=
" data-end=3D"2281" data-col-size=3D"lg">=E2=9D=8C Not directly =E2=80=94 b=
ut it helps if you have channel =E2=86=92 area mappings</td></tr><tr data-s=
tart=3D"2282" data-end=3D"2375"><td data-start=3D"2282" data-end=3D"2309" d=
ata-col-size=3D"sm">What does <code data-start=3D"2294" data-end=3D"2302">S=
ource</code> mean?</td><td data-start=3D"2309" data-end=3D"2375" data-col-s=
ize=3D"lg"><code data-start=3D"2311" data-end=3D"2319">'Unit'</code> =3D un=
it-level RF fit, <code data-start=3D"2341" data-end=3D"2352">'Default'</cod=
e> =3D fallback/noisy fit</td></tr><tr data-start=3D"2376" data-end=3D"2514=
"><td data-start=3D"2376" data-end=3D"2406" data-col-size=3D"sm">How do I i=
dentify IT units?</td><td data-start=3D"2406" data-end=3D"2514" data-col-si=
ze=3D"lg">Match to known spatial locations or use supplementary mapping fil=
es (like from the authors or the paper)</td></tr></tbody></table><div class=
=3D"sticky end-(--thread-content-margin) h-0 self-end select-none"><div cla=
ss=3D"absolute end-0 flex items-end" style=3D"height: 32.8906px;"><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"bg-token-bg-primary hover:bg=
-token-bg-tertiary text-token-text-secondary my-1 rounded-sm p-1 transition=
-opacity group-[:not(:hover):not(:focus-within)]:pointer-events-none group-=
[:not(:hover):not(:focus-within)]:opacity-0"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=
=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.656=
9 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569=
 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H=
19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4=
.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C=
14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"curren=
tColor"></path></svg></button></span></div></div></div></div>
<hr data-start=3D"2516" data-end=3D"2519" class=3D"">
<p data-start=3D"2521" data-end=3D"2743" class=3D"">Would you like help wri=
ting a script to match this with the <code data-start=3D"2581" data-end=3D"=
2591">unit_sel</code> table and label which face-selective units have <stro=
ng data-start=3D"2640" data-end=3D"2656">well-fit RFs</strong> and fall wit=
hin a <strong data-start=3D"2675" data-end=3D"2711">hypothesized IT spatial=
 boundary</strong> (e.g., certain <code data-start=3D"2727" data-end=3D"273=
0">x</code>, <code data-start=3D"2732" data-end=3D"2735">y</code> range)?</=
p></div></div></div></div></div></div></div></div></article><article class=
=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversatio=
n-turn-171" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h=
5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--s=
pacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thre=
ad-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"re=
lative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow=
"><div data-message-author-role=3D"user" data-message-id=3D"64b63e0e-24ad-4=
aba-8702-84f0378cc25f" dir=3D"auto" class=3D"min-h-8 text-message relative =
flex w-full flex-col items-end gap-2 text-start break-words whitespace-norm=
al [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 emp=
ty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[var(--us=
er-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div =
class=3D"whitespace-pre-wrap">i asked for a method to compare the neural da=
ta from a monkey for an image (34 neurons) to the output of a cnn using an =
RDM can you refresh my memory  </div></div></div></div></div></div></div></=
div></div></article><article class=3D"text-token-text-primary w-full" dir=
=3D"auto" data-testid=3D"conversation-turn-172" data-scroll-anchor=3D"false=
"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto m=
x-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-conte=
nt-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px=
-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem=
] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-ma=
x-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-=
base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidd=
en" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-f=
ull min-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:g=
ap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author=
-role=3D"assistant" data-message-id=3D"d71c9aac-b921-4ec1-b119-c3d32ad8eb80=
" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col =
items-end gap-2 text-start break-words whitespace-normal [.text-message+&am=
p;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex=
-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:p=
rose-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"214" c=
lass=3D"">Of course! You=E2=80=99re asking about something very important:<=
br data-start=3D"56" data-end=3D"59">
<strong data-start=3D"59" data-end=3D"214">How do you compare macaque neura=
l responses (e.g., 34 neurons) to CNN outputs for a set of images using an =
RDM (Representational Dissimilarity Matrix)?</strong></p>
<p data-start=3D"216" data-end=3D"269" class=3D"">Let me <strong data-start=
=3D"223" data-end=3D"246">refresh your memory</strong> carefully and clearl=
y:</p>
<hr data-start=3D"271" data-end=3D"274" class=3D"">
<h1 data-start=3D"276" data-end=3D"349" class=3D"">=F0=9F=A7=A0 Full Plan: =
Comparing Monkey Neural Data and CNN Outputs Using an RDM</h1>
<hr data-start=3D"351" data-end=3D"354" class=3D"">
<h2 data-start=3D"356" data-end=3D"398" class=3D"">1. <strong data-start=3D=
"362" data-end=3D"398">Prepare your two representations</strong></h2>
<p data-start=3D"400" data-end=3D"415" class=3D"">For each image:</p>
<ul data-start=3D"416" data-end=3D"735">
<li data-start=3D"416" data-end=3D"576" class=3D"">
<p data-start=3D"418" data-end=3D"466" class=3D"">You want a <strong data-s=
tart=3D"429" data-end=3D"463">feature vector from the monkey</strong>:</p>
<span class=3D"katex-display"><span class=3D"katex"><span class=3D"katex-ma=
thml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML" display=3D"block">=
<semantics><mrow><mtext>neural_vector</mtext><mo>=E2=88=88</mo><msup><mi ma=
thvariant=3D"double-struck">R</mi><mn>34</mn></msup></mrow><annotation enco=
ding=3D"application/x-tex">\text{neural\_vector} \in \mathbb{R}^{34}</annot=
ation></semantics></math></span><span class=3D"katex-html" aria-hidden=3D"t=
rue"><span class=3D"base"><span class=3D"strut" style=3D"height: 1.0044em; =
vertical-align: -0.31em;"></span><span class=3D"mord text"><span class=3D"m=
ord">neural_vector</span></span><span class=3D"mspace" style=3D"margin-righ=
t: 0.2778em;"></span><span class=3D"mrel">=E2=88=88</span><span class=3D"ms=
pace" style=3D"margin-right: 0.2778em;"></span></span><span class=3D"base">=
<span class=3D"strut" style=3D"height: 0.8641em;"></span><span class=3D"mor=
d"><span class=3D"mord mathbb">R</span><span class=3D"msupsub"><span class=
=3D"vlist-t"><span class=3D"vlist-r"><span class=3D"vlist" style=3D"height:=
 0.8641em;"><span style=3D"top: -3.113em; margin-right: 0.05em;"><span clas=
s=3D"pstrut" style=3D"height: 2.7em;"></span><span class=3D"sizing reset-si=
ze6 size3 mtight"><span class=3D"mord mtight"><span class=3D"mord mtight">3=
4</span></span></span></span></span></span></span></span></span></span></sp=
an></span></span>
<p data-start=3D"523" data-end=3D"576" class=3D"">(firing rates or spike de=
nsity across the 34 neurons)</p>
</li>
<li data-start=3D"578" data-end=3D"735" class=3D"">
<p data-start=3D"580" data-end=3D"625" class=3D"">You want a <strong data-s=
tart=3D"591" data-end=3D"622">feature vector from the CNN</strong>:</p>
<span class=3D"katex-display"><span class=3D"katex"><span class=3D"katex-ma=
thml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML" display=3D"block">=
<semantics><mrow><mtext>cnn_vector</mtext><mo>=E2=88=88</mo><msup><mi mathv=
ariant=3D"double-struck">R</mi><mi>d</mi></msup></mrow><annotation encoding=
=3D"application/x-tex">\text{cnn\_vector} \in \mathbb{R}^{d}</annotation></=
semantics></math></span><span class=3D"katex-html" aria-hidden=3D"true"><sp=
an class=3D"base"><span class=3D"strut" style=3D"height: 0.9251em; vertical=
-align: -0.31em;"></span><span class=3D"mord text"><span class=3D"mord">cnn=
_vector</span></span><span class=3D"mspace" style=3D"margin-right: 0.2778em=
;"></span><span class=3D"mrel">=E2=88=88</span><span class=3D"mspace" style=
=3D"margin-right: 0.2778em;"></span></span><span class=3D"base"><span class=
=3D"strut" style=3D"height: 0.8991em;"></span><span class=3D"mord"><span cl=
ass=3D"mord mathbb">R</span><span class=3D"msupsub"><span class=3D"vlist-t"=
><span class=3D"vlist-r"><span class=3D"vlist" style=3D"height: 0.8991em;">=
<span style=3D"top: -3.113em; margin-right: 0.05em;"><span class=3D"pstrut"=
 style=3D"height: 2.7em;"></span><span class=3D"sizing reset-size6 size3 mt=
ight"><span class=3D"mord mtight"><span class=3D"mord mathnormal mtight">d<=
/span></span></span></span></span></span></span></span></span></span></span=
></span></span>
<p data-start=3D"678" data-end=3D"735" class=3D"">(where <span class=3D"kat=
ex"><span class=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math=
/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding=3D"applicat=
ion/x-tex">d</annotation></semantics></math></span><span class=3D"katex-htm=
l" aria-hidden=3D"true"><span class=3D"base"><span class=3D"strut" style=3D=
"height: 0.6944em;"></span><span class=3D"mord mathnormal">d</span></span><=
/span></span> could be 768 for ViT, or 1250 for HMO, etc.)</p>
</li>
</ul>
<p data-start=3D"737" data-end=3D"788" class=3D"">Each image must be paired=
 between monkey and model.</p>
<hr data-start=3D"790" data-end=3D"793" class=3D"">
<h2 data-start=3D"795" data-end=3D"857" class=3D"">2. <strong data-start=3D=
"801" data-end=3D"857">Build Representational Dissimilarity Matrices (RDMs)=
</strong></h2>
<p data-start=3D"859" data-end=3D"889" class=3D"">For <strong data-start=3D=
"863" data-end=3D"888">each space separately</strong>:</p>
<ul data-start=3D"890" data-end=3D"1005">
<li data-start=3D"890" data-end=3D"950" class=3D"">
<p data-start=3D"892" data-end=3D"950" class=3D"">Neural space: build a RDM=
 using the neural feature vectors</p>
</li>
<li data-start=3D"951" data-end=3D"1005" class=3D"">
<p data-start=3D"953" data-end=3D"1005" class=3D"">CNN space: build a RDM u=
sing the CNN feature vectors</p>
</li>
</ul>
<p data-start=3D"1007" data-end=3D"1117" class=3D"">The RDM is a square mat=
rix where entry <span class=3D"katex"><span class=3D"katex-mathml"><math xm=
lns=3D"http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy=3D=
"false">(</mo><mi>i</mi><mo separator=3D"true">,</mo><mi>j</mi><mo stretchy=
=3D"false">)</mo></mrow><annotation encoding=3D"application/x-tex">(i,j)</a=
nnotation></semantics></math></span><span class=3D"katex-html" aria-hidden=
=3D"true"><span class=3D"base"><span class=3D"strut" style=3D"height: 1em; =
vertical-align: -0.25em;"></span><span class=3D"mopen">(</span><span class=
=3D"mord mathnormal">i</span><span class=3D"mpunct">,</span><span class=3D"=
mspace" style=3D"margin-right: 0.1667em;"></span><span class=3D"mord mathno=
rmal" style=3D"margin-right: 0.05724em;">j</span><span class=3D"mclose">)</=
span></span></span></span> is the <strong data-start=3D"1063" data-end=3D"1=
080">dissimilarity</strong> between image <span class=3D"katex"><span class=
=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><seman=
tics><mrow><mi>i</mi></mrow><annotation encoding=3D"application/x-tex">i</a=
nnotation></semantics></math></span><span class=3D"katex-html" aria-hidden=
=3D"true"><span class=3D"base"><span class=3D"strut" style=3D"height: 0.659=
5em;"></span><span class=3D"mord mathnormal">i</span></span></span></span> =
and image <span class=3D"katex"><span class=3D"katex-mathml"><math xmlns=3D=
"http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><ann=
otation encoding=3D"application/x-tex">j</annotation></semantics></math></s=
pan><span class=3D"katex-html" aria-hidden=3D"true"><span class=3D"base"><s=
pan class=3D"strut" style=3D"height: 0.854em; vertical-align: -0.1944em;"><=
/span><span class=3D"mord mathnormal" style=3D"margin-right: 0.05724em;">j<=
/span></span></span></span>.</p>
<p data-start=3D"1119" data-end=3D"1160" class=3D""><strong data-start=3D"1=
119" data-end=3D"1143">Dissimilarity metric</strong> (commonly used):</p>
<ul data-start=3D"1161" data-end=3D"1225">
<li data-start=3D"1161" data-end=3D"1199" class=3D"">
<p data-start=3D"1163" data-end=3D"1199" class=3D""><span class=3D"katex"><=
span class=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/Math=
ML"><semantics><mrow><mn>1</mn><mo>=E2=88=92</mo><mtext>Pearson&nbsp;correl=
ation</mtext></mrow><annotation encoding=3D"application/x-tex">1 - \text{Pe=
arson correlation}</annotation></semantics></math></span><span class=3D"kat=
ex-html" aria-hidden=3D"true"><span class=3D"base"><span class=3D"strut" st=
yle=3D"height: 0.7278em; vertical-align: -0.0833em;"></span><span class=3D"=
mord">1</span><span class=3D"mspace" style=3D"margin-right: 0.2222em;"></sp=
an><span class=3D"mbin">=E2=88=92</span><span class=3D"mspace" style=3D"mar=
gin-right: 0.2222em;"></span></span><span class=3D"base"><span class=3D"str=
ut" style=3D"height: 0.6944em;"></span><span class=3D"mord text"><span clas=
s=3D"mord">Pearson&nbsp;correlation</span></span></span></span></span></p>
</li>
<li data-start=3D"1200" data-end=3D"1204" class=3D"">
<p data-start=3D"1202" data-end=3D"1204" class=3D"">OR</p>
</li>
<li data-start=3D"1205" data-end=3D"1225" class=3D"">
<p data-start=3D"1207" data-end=3D"1225" class=3D"">Euclidean distance</p>
</li>
</ul>
<hr data-start=3D"1227" data-end=3D"1230" class=3D"">
<h3 data-start=3D"1232" data-end=3D"1268" class=3D"">=F0=9F=93=8F Compute R=
DM (Python example):</h3>
<pre class=3D"overflow-visible!" data-start=3D"1270" data-end=3D"1621"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">from</span></span><spa=
n> scipy.spatial.distance </span><span><span class=3D"hljs-keyword">import<=
/span></span><span> pdist, squareform

</span><span><span class=3D"hljs-comment"># Assume monkey_features.shape =
=3D (n_images, 34)</span></span><span>
</span><span><span class=3D"hljs-comment"># Assume cnn_features.shape =3D (=
n_images, feature_dim)</span></span><span>

</span><span><span class=3D"hljs-comment"># 1. Compute dissimilarities (1 -=
 correlation)</span></span><span>
neural_rdm =3D squareform(pdist(monkey_features, metric=3D</span><span><spa=
n class=3D"hljs-string">'correlation'</span></span><span>))
cnn_rdm =3D squareform(pdist(cnn_features, metric=3D</span><span><span clas=
s=3D"hljs-string">'correlation'</span></span><span>))
</span></span></code></div></div></pre>
<ul data-start=3D"1623" data-end=3D"1707">
<li data-start=3D"1623" data-end=3D"1666" class=3D"">
<p data-start=3D"1625" data-end=3D"1666" class=3D""><code data-start=3D"162=
5" data-end=3D"1666">neural_rdm.shape =3D (n_images, n_images)</code></p>
</li>
<li data-start=3D"1667" data-end=3D"1707" class=3D"">
<p data-start=3D"1669" data-end=3D"1707" class=3D""><code data-start=3D"166=
9" data-end=3D"1707">cnn_rdm.shape =3D (n_images, n_images)</code></p>
</li>
</ul>
<p data-start=3D"1709" data-end=3D"1800" class=3D"">Each matrix tells you h=
ow different every image pair is according to the monkey or the CNN.</p>
<hr data-start=3D"1802" data-end=3D"1805" class=3D"">
<h2 data-start=3D"1807" data-end=3D"1833" class=3D"">3. <strong data-start=
=3D"1813" data-end=3D"1833">Compare the RDMs</strong></h2>
<p data-start=3D"1835" data-end=3D"1882" class=3D"">Now, <strong data-start=
=3D"1840" data-end=3D"1865">compare the structure</strong> of the two RDMs:=
</p>
<ul data-start=3D"1883" data-end=3D"1967">
<li data-start=3D"1883" data-end=3D"1967" class=3D"">
<p data-start=3D"1885" data-end=3D"1967" class=3D"">If the monkey and the C=
NN see the images similarly, the two RDMs should correlate.</p>
</li>
</ul>
<p data-start=3D"1969" data-end=3D"1973" class=3D"">Use:</p>
<ul data-start=3D"1974" data-end=3D"2086">
<li data-start=3D"1974" data-end=3D"2041" class=3D"">
<p data-start=3D"1976" data-end=3D"2041" class=3D"">Spearman correlation (r=
ank-based, good for noisy biological data)</p>
</li>
<li data-start=3D"2042" data-end=3D"2086" class=3D"">
<p data-start=3D"2044" data-end=3D"2086" class=3D"">OR Pearson correlation =
(linear similarity)</p>
</li>
</ul>
<h3 data-start=3D"2088" data-end=3D"2124" class=3D"">=F0=9F=93=88 Correlate=
 the upper triangle:</h3>
<pre class=3D"overflow-visible!" data-start=3D"2126" data-end=3D"2421"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">from</span></span><spa=
n> scipy.stats </span><span><span class=3D"hljs-keyword">import</span></spa=
n><span> spearmanr

</span><span><span class=3D"hljs-comment"># Mask to get only the upper tria=
ngle (excluding the diagonal)</span></span><span>
mask =3D np.triu_indices_from(neural_rdm, k=3D</span><span><span class=3D"h=
ljs-number">1</span></span><span>)

r_value, p_value =3D spearmanr(neural_rdm[mask], cnn_rdm[mask])

</span><span><span class=3D"hljs-built_in">print</span></span><span>(</span=
><span><span class=3D"hljs-string">f"RSA correlation (Spearman): r =3D <spa=
n class=3D"hljs-subst">{r_value:<span class=3D"hljs-number">.3</span></span=
></span></span><span>f}, p =3D </span><span><span class=3D"hljs-subst">{p_v=
alue:<span class=3D"hljs-number">.3</span></span></span><span>g}")
</span></span></code></div></div></pre>
<hr data-start=3D"2423" data-end=3D"2426" class=3D"">
<h1 data-start=3D"2428" data-end=3D"2445" class=3D"">=E2=9C=85 Final Summar=
y</h1>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"24=
47" data-end=3D"2729" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"2447" data-end=3D"2469"><tr data-start=3D"2447" data-end=3D"=
2469"><th data-start=3D"2447" data-end=3D"2454" data-col-size=3D"sm">Step</=
th><th data-start=3D"2454" data-end=3D"2469" data-col-size=3D"md">Descripti=
on</th></tr></thead><tbody data-start=3D"2493" data-end=3D"2729"><tr data-s=
tart=3D"2493" data-end=3D"2572"><td data-start=3D"2493" data-end=3D"2499" d=
ata-col-size=3D"sm">1=EF=B8=8F=E2=83=A3</td><td data-start=3D"2499" data-en=
d=3D"2572" data-col-size=3D"md">Extract feature vectors for each image: mon=
key (34-d) and CNN (d-dim)</td></tr><tr data-start=3D"2573" data-end=3D"263=
4"><td data-start=3D"2573" data-end=3D"2579" data-col-size=3D"sm">2=EF=B8=
=8F=E2=83=A3</td><td data-start=3D"2579" data-end=3D"2634" data-col-size=3D=
"md">Build RDMs: 1 - correlation between all image pairs</td></tr><tr data-=
start=3D"2635" data-end=3D"2689"><td data-start=3D"2635" data-end=3D"2641" =
data-col-size=3D"sm">3=EF=B8=8F=E2=83=A3</td><td data-start=3D"2641" data-e=
nd=3D"2689" data-col-size=3D"md">Correlate the two RDMs (upper triangle onl=
y)</td></tr><tr data-start=3D"2690" data-end=3D"2729"><td data-start=3D"269=
0" data-end=3D"2696" data-col-size=3D"sm">4=EF=B8=8F=E2=83=A3</td><td data-=
start=3D"2696" data-end=3D"2729" data-col-size=3D"md">Report RSA correlatio=
n (r, p)</td></tr></tbody></table><div class=3D"sticky end-(--thread-conten=
t-margin) h-0 self-end select-none"><div class=3D"absolute end-0 flex items=
-end" style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><=
button class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-t=
ext-secondary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):no=
t(:focus-within)]:pointer-events-none group-[:not(:hover):not(:focus-within=
)]:opacity-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10=
 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.=
6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 =
7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V=
5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9=
.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C=
15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button><=
/span></div></div></div></div>
<hr data-start=3D"2731" data-end=3D"2734" class=3D"">
<h1 data-start=3D"2736" data-end=3D"2754" class=3D"">=F0=9F=8E=AF Why it wo=
rks:</h1>
<ul data-start=3D"2756" data-end=3D"2917">
<li data-start=3D"2756" data-end=3D"2806" class=3D"">
<p data-start=3D"2758" data-end=3D"2806" class=3D"">You don't force direct =
neuron-to-filter matching</p>
</li>
<li data-start=3D"2807" data-end=3D"2917" class=3D"">
<p data-start=3D"2809" data-end=3D"2826" class=3D"">Instead, you ask:</p>
<blockquote data-start=3D"2829" data-end=3D"2917">
<p data-start=3D"2831" data-end=3D"2917" class=3D"">"Do the monkey=E2=80=99=
s and CNN=E2=80=99s <strong data-start=3D"2858" data-end=3D"2909">relative =
judgments of similarity between images</strong> agree?"</p>
</blockquote>
</li>
</ul>
<p data-start=3D"2919" data-end=3D"2993" class=3D"">This is <strong data-st=
art=3D"2927" data-end=3D"2992">model=E2=80=93brain alignment without needin=
g direct readout decoding</strong>.</p>
<hr data-start=3D"2995" data-end=3D"2998" class=3D"">
<p data-start=3D"3000" data-end=3D"3200" class=3D"">Would you also like a <=
strong data-start=3D"3022" data-end=3D"3054">ready-to-use Python function</=
strong> that takes <code data-start=3D"3066" data-end=3D"3083">monkey_featu=
res</code> and <code data-start=3D"3088" data-end=3D"3102">cnn_features</co=
de> and outputs the RSA result + optional heatmaps? =F0=9F=9A=80<br data-st=
art=3D"3153" data-end=3D"3156">
I can draft it in 1=E2=80=932 minutes if you'd like!</p></div></div></div><=
/div></div></div></div></div></article><article class=3D"text-token-text-pr=
imary w-full" dir=3D"auto" data-testid=3D"conversation-turn-173" data-scrol=
l-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-b=
ase my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[-=
-thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--sp=
acing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-ma=
x-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thre=
ad-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width)=
 flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible=
:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn rela=
tive flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md=
:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-auth=
or-role=3D"user" data-message-id=3D"4643a7c1-5980-4e85-a61a-7853f59a9811" d=
ir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col ite=
ms-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;]=
:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:=
items-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-t=
oken-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-=
wrap">can you give me a function to extract the cnn values from the </div><=
/div></div></div></div></div></div></div></div></article><article class=3D"=
text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-tu=
rn-174" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h=
6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--s=
pacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thre=
ad-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div =
class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full fl=
ex-col grow"><div data-message-author-role=3D"assistant" data-message-id=3D=
"35e5724e-cc5a-4ece-be1c-0fa9c31effe1" dir=3D"auto" class=3D"min-h-8 text-m=
essage relative flex w-full flex-col items-end gap-2 text-start break-words=
 whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"g=
pt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]=
"><div class=3D"markdown prose dark:prose-invert w-full break-words dark"><=
p data-start=3D"0" data-end=3D"30" class=3D"">Of course! Let=E2=80=99s go c=
arefully.</p>
<p data-start=3D"32" data-end=3D"190" class=3D"">It sounds like you want a =
function to <strong data-start=3D"70" data-end=3D"101">extract CNN feature =
vectors</strong> for a set of images =E2=80=94 so you can then compare them=
 to the monkey neural data via an RDM.</p>
<p data-start=3D"192" data-end=3D"219" class=3D"">I=E2=80=99ll give you two=
 versions:</p>
<ul data-start=3D"220" data-end=3D"389">
<li data-start=3D"220" data-end=3D"290" class=3D"">
<p data-start=3D"222" data-end=3D"290" class=3D"">One assuming you have a <=
strong data-start=3D"246" data-end=3D"267">trained CNN model</strong> (like=
 your <code data-start=3D"279" data-end=3D"289">HMOModel</code>)</p>
</li>
<li data-start=3D"291" data-end=3D"389" class=3D"">
<p data-start=3D"293" data-end=3D"389" class=3D"">One assuming you have <st=
rong data-start=3D"315" data-end=3D"342">pre-saved feature files</strong> (=
like from your ViT or HMO feature extraction)</p>
</li>
</ul>
<p data-start=3D"391" data-end=3D"442" class=3D"">Let=E2=80=99s start with =
the direct model pass (HMO style):</p>
<hr data-start=3D"444" data-end=3D"447" class=3D"">
<h1 data-start=3D"449" data-end=3D"513" class=3D"">=E2=9C=85 FUNCTION: Extr=
act CNN features from a Keras/TensorFlow model</h1>
<pre class=3D"overflow-visible!" data-start=3D"515" data-end=3D"2026"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> numpy </span><span><span class=3D"hljs-keyword">as</span></span><span>=
 np
</span><span><span class=3D"hljs-keyword">import</span></span><span> tensor=
flow </span><span><span class=3D"hljs-keyword">as</span></span><span> tf

</span><span><span class=3D"hljs-keyword">def</span></span><span> </span><s=
pan><span class=3D"hljs-title function_">extract_cnn_features</span></span>=
<span>(</span><span><span class=3D"hljs-params">model, images, classify=3D<=
span class=3D"hljs-literal">False</span></span></span><span>, batch_size=3D=
</span><span><span class=3D"hljs-number">32</span></span><span>):
    <span class=3D"hljs-string">"""
    Extract feature vectors from a CNN model for a batch of images.

    Args:
        model (tf.keras.Model): The CNN or HMO model.
        images (np.ndarray): Images to feed through the model. Shape: (N, H=
, W, 3).
        classify (bool): Whether to run through the full classifier (True)=
=20
                         or stop at the feature vector before softmax (Fals=
e).
        batch_size (int): How many images to process at once.

    Returns:
        np.ndarray: Feature vectors for each image. Shape: (N, feature_dim)=
.
    """</span>
    features =3D []
   =20
    </span><span><span class=3D"hljs-comment"># Wrap the model if you want =
"features before classification"</span></span><span>
    </span><span><span class=3D"hljs-keyword">if</span></span><span> </span=
><span><span class=3D"hljs-keyword">not</span></span><span> classify </span=
><span><span class=3D"hljs-keyword">and</span></span><span> </span><span><s=
pan class=3D"hljs-built_in">hasattr</span></span><span>(model, </span><span=
><span class=3D"hljs-string">'global_pool'</span></span><span>) </span><spa=
n><span class=3D"hljs-keyword">and</span></span><span> </span><span><span c=
lass=3D"hljs-built_in">hasattr</span></span><span>(model, </span><span><spa=
n class=3D"hljs-string">'dense'</span></span><span>):
        </span><span><span class=3D"hljs-comment"># Make a mini model that =
outputs pre-classification features</span></span><span>
        input_layer =3D tf.keras.Input(shape=3D(images.shape[</span><span><=
span class=3D"hljs-number">1</span></span><span>], images.shape[</span><spa=
n><span class=3D"hljs-number">2</span></span><span>], images.shape[</span><=
span><span class=3D"hljs-number">3</span></span><span>]))
        x =3D model.call(input_layer)
        x =3D model.global_pool(x)
        x =3D model.dense(x)
        feature_model =3D tf.keras.Model(inputs=3Dinput_layer, outputs=3Dx)
    </span><span><span class=3D"hljs-keyword">else</span></span><span>:
        feature_model =3D model

    </span><span><span class=3D"hljs-keyword">for</span></span><span> i </s=
pan><span><span class=3D"hljs-keyword">in</span></span><span> </span><span>=
<span class=3D"hljs-built_in">range</span></span><span>(</span><span><span =
class=3D"hljs-number">0</span></span><span>, </span><span><span class=3D"hl=
js-built_in">len</span></span><span>(images), batch_size):
        batch =3D images[i:i+batch_size]
        batch =3D tf.convert_to_tensor(batch, dtype=3Dtf.float32)
        feats =3D feature_model(batch, training=3D</span><span><span class=
=3D"hljs-literal">False</span></span><span>)
        features.append(feats.numpy())

    features =3D np.vstack(features)
    </span><span><span class=3D"hljs-keyword">return</span></span><span> fe=
atures
</span></span></code></div></div></pre>
<hr data-start=3D"2028" data-end=3D"2031" class=3D"">
<h1 data-start=3D"2033" data-end=3D"2051" class=3D"">=F0=9F=A7=A0 Example U=
sage</h1>
<pre class=3D"overflow-visible!" data-start=3D"2053" data-end=3D"2328"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-comment"># Suppose you have:</s=
pan></span><span>
</span><span><span class=3D"hljs-comment"># images: np.ndarray of shape (N,=
 224, 224, 3)</span></span><span>
</span><span><span class=3D"hljs-comment"># hmo_model: your trained HMOMode=
l</span></span><span>

cnn_features =3D extract_cnn_features(hmo_model, images, classify=3D</span>=
<span><span class=3D"hljs-literal">False</span></span><span>)
</span><span><span class=3D"hljs-built_in">print</span></span><span>(cnn_fe=
atures.shape)
</span><span><span class=3D"hljs-comment"># =E2=86=92 (N, 1250) if your HMO=
Model dense layer outputs 1250 units</span></span><span>
</span></span></code></div></div></pre>
<hr data-start=3D"2330" data-end=3D"2333" class=3D"">
<h1 data-start=3D"2335" data-end=3D"2413" class=3D"">=E2=9C=85 FUNCTION 2: =
If you have pre-saved features (e.g., in HDF5 from ViT script)</h1>
<p data-start=3D"2415" data-end=3D"2522" class=3D"">If you've already run y=
our ViT extraction and you have something like <code data-start=3D"2485" da=
ta-end=3D"2503">feats/full_image</code>, you just load it:</p>
<pre class=3D"overflow-visible!" data-start=3D"2524" data-end=3D"3277"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> h5py

</span><span><span class=3D"hljs-keyword">def</span></span><span> </span><s=
pan><span class=3D"hljs-title function_">load_precomputed_cnn_features</spa=
n></span><span>(</span><span><span class=3D"hljs-params">h5_path, md5_list<=
/span></span><span>):
    <span class=3D"hljs-string">"""
    Load precomputed CNN features from HDF5 based on image MD5 hashes.

    Args:
        h5_path (str): Path to HDF5 file with feats/full_image dataset.
        md5_list (list): List of image md5 hashes to look up.

    Returns:
        np.ndarray: Feature vectors. Shape: (N, feature_dim)
    """</span>
    features =3D []
    </span><span><span class=3D"hljs-keyword">with</span></span><span> h5py=
.File(h5_path, </span><span><span class=3D"hljs-string">'r'</span></span><s=
pan>) </span><span><span class=3D"hljs-keyword">as</span></span><span> f:
        all_md5s =3D f[</span><span><span class=3D"hljs-string">'md5'</span=
></span><span>][()].astype(</span><span><span class=3D"hljs-built_in">str</=
span></span><span>)
        feats_all =3D f[</span><span><span class=3D"hljs-string">'feats/ful=
l_image'</span></span><span>][()]
       =20
        md5_to_idx =3D {md5: idx </span><span><span class=3D"hljs-keyword">=
for</span></span><span> idx, md5 </span><span><span class=3D"hljs-keyword">=
in</span></span><span> </span><span><span class=3D"hljs-built_in">enumerate=
</span></span><span>(all_md5s)}
        </span><span><span class=3D"hljs-keyword">for</span></span><span> m=
d5 </span><span><span class=3D"hljs-keyword">in</span></span><span> md5_lis=
t:
            idx =3D md5_to_idx[md5]
            features.append(feats_all[idx])
   =20
    </span><span><span class=3D"hljs-keyword">return</span></span><span> np=
.stack(features)
</span></span></code></div></div></pre>
<hr data-start=3D"3279" data-end=3D"3282" class=3D"">
<h1 data-start=3D"3284" data-end=3D"3294" class=3D"">=E2=9C=85 TL;DR:</h1>
<div class=3D"_tableContainer_16hzy_1"><div tabindex=3D"-1" class=3D"_table=
Wrapper_16hzy_14 group flex w-fit flex-col-reverse"><table data-start=3D"32=
96" data-end=3D"3554" class=3D"w-fit min-w-(--thread-content-width)"><thead=
 data-start=3D"3296" data-end=3D"3315"><tr data-start=3D"3296" data-end=3D"=
3315"><th data-start=3D"3296" data-end=3D"3308" data-col-size=3D"md">Situat=
ion</th><th data-start=3D"3308" data-end=3D"3315" data-col-size=3D"md">Use<=
/th></tr></thead><tbody data-start=3D"3336" data-end=3D"3554"><tr data-star=
t=3D"3336" data-end=3D"3449"><td data-start=3D"3336" data-end=3D"3388" data=
-col-size=3D"md">You have a <strong data-start=3D"3349" data-end=3D"3376">t=
rained CNN model (HMO)</strong> and images</td><td data-start=3D"3388" data=
-end=3D"3449" data-col-size=3D"md">Use <code data-start=3D"3394" data-end=
=3D"3447">extract_cnn_features(model, images, classify=3DFalse)</code></td>=
</tr><tr data-start=3D"3450" data-end=3D"3554"><td data-start=3D"3450" data=
-end=3D"3496" data-col-size=3D"md">You have <strong data-start=3D"3461" dat=
a-end=3D"3495">precomputed ViT features saved</strong></td><td data-start=
=3D"3496" data-end=3D"3554" data-col-size=3D"md">Use <code data-start=3D"35=
02" data-end=3D"3552">load_precomputed_cnn_features(h5_path, md5_list)</cod=
e></td></tr></tbody></table><div class=3D"sticky end-(--thread-content-marg=
in) h-0 self-end select-none"><div class=3D"absolute end-0 flex items-end" =
style=3D"height: 32.8906px;"><span class=3D"" data-state=3D"closed"><button=
 class=3D"bg-token-bg-primary hover:bg-token-bg-tertiary text-token-text-se=
condary my-1 rounded-sm p-1 transition-opacity group-[:not(:hover):not(:foc=
us-within)]:pointer-events-none group-[:not(:hover):not(:focus-within)]:opa=
city-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none"=
 xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-ru=
le=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C=
20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 1=
5.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5Z=
M9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4=
.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772=
 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.4=
4772 14.5523 9 14 9H5Z" fill=3D"currentColor"></path></svg></button></span>=
</div></div></div></div>
<hr data-start=3D"3556" data-end=3D"3559" class=3D"">
<p data-start=3D"3561" data-end=3D"3767" class=3D"">Would you also like a <=
strong data-start=3D"3583" data-end=3D"3600">bonus version</strong> that ex=
tracts features <strong data-start=3D"3624" data-end=3D"3637">per-patch</st=
rong>, if you want to match saccade locations or receptive fields spatially=
 (not just full images)?<br data-start=3D"3731" data-end=3D"3734">
I can write that up if needed! =F0=9F=9A=80</p></div></div></div></div></di=
v></div></div></div></article><article class=3D"text-token-text-primary w-f=
ull" dir=3D"auto" data-testid=3D"conversation-turn-175" data-scroll-anchor=
=3D"false" style=3D"scroll-margin-top: -36px;"><h5 class=3D"sr-only">You sa=
id:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-marg=
in:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[=
--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div c=
lass=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-w=
idth:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-=
(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group=
/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"=
group/conversation-turn relative flex w-full min-w-0 flex-col"><div class=
=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-co=
l grow"><div data-message-author-role=3D"user" data-message-id=3D"a1e27ec0-=
afdc-47aa-bba3-ba385e6ec9cd" dir=3D"auto" class=3D"min-h-8 text-message rel=
ative flex w-full flex-col items-end gap-2 text-start break-words whitespac=
e-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap=
-1 empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[va=
r(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"=
><div class=3D"whitespace-pre-wrap">cnn_features_matched =3D np.vstack(feat=
ures)

how do isave these features in an npy file</div></div></div></div></div></d=
iv></div></div></div></article><article class=3D"text-token-text-primary w-=
full" dir=3D"auto" data-testid=3D"conversation-turn-176" data-scroll-anchor=
=3D"true" style=3D""><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"=
text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37r=
em]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margi=
n:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-cont=
ent-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[=
--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-=
width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-v=
isible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-tur=
n relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative =
flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div =
data-message-author-role=3D"assistant" data-message-id=3D"f6f294da-0e00-49c=
2-99b7-d8dcba23d379" dir=3D"auto" class=3D"min-h-8 text-message relative fl=
ex w-full flex-col items-end gap-2 text-start break-words whitespace-normal=
 [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=
=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"m=
arkdown prose dark:prose-invert w-full break-words dark"><p data-start=3D"0=
" data-end=3D"72" class=3D"">To save your <code data-start=3D"13" data-end=
=3D"35">cnn_features_matched</code> array to a <code data-start=3D"47" data=
-end=3D"53">.npy</code> file, you can use:</p>
<pre class=3D"overflow-visible!" data-start=3D"74" data-end=3D"145"><div cl=
ass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-me=
dium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-ce=
nter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between =
h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary s=
elect-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div cl=
ass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"bg=
-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-main=
-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><sp=
an class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cente=
r select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7=
 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6=
569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V=
10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.=
5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772=
 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.552=
3 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor=
"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"><=
button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>np.save(</span><span><span class=3D"hljs-string">"c=
nn_features_matched.npy"</span></span><span>, cnn_features_matched)
</span></span></code></div></div></pre>
<p data-start=3D"147" data-end=3D"238" class=3D"">This will create a file n=
amed <code data-start=3D"177" data-end=3D"203">cnn_features_matched.npy</co=
de> in your current working directory.</p>
<hr data-start=3D"240" data-end=3D"243" class=3D"">
<h3 data-start=3D"245" data-end=3D"268" class=3D"">=E2=9C=85 To load it lat=
er:</h3>
<pre class=3D"overflow-visible!" data-start=3D"269" data-end=3D"336"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>loaded_features =3D np.load(</span><span><span clas=
s=3D"hljs-string">"cnn_features_matched.npy"</span></span><span>)
</span></span></code></div></div></pre>
<p data-start=3D"338" data-end=3D"410" class=3D"">Let me know if you'd pref=
er to save as <code data-start=3D"377" data-end=3D"383">.csv</code>, <code =
data-start=3D"385" data-end=3D"391">.pkl</code>, or <code data-start=3D"396=
" data-end=3D"401">.h5</code> instead.</p></div></div></div></div><div clas=
s=3D"flex justify-start"><div class=3D"touch:-me-2 touch:-ms-3.5 -ms-2.5 -m=
e-1 flex items-center p-1 select-none -mt-1 duration-[1.5s] focus-within:tr=
ansition-none hover:transition-none pointer-events-none [mask-image:linear-=
gradient(to_right,black_33%,transparent_66%)] [mask-position:100%_0%] [mask=
-size:300%_100%] motion-safe:transition-[mask-position] group-hover/turn-me=
ssages:pointer-events-auto group-hover/turn-messages:[mask-position:0_0] gr=
oup-focus-within/turn-messages:pointer-events-auto group-focus-within/turn-=
messages:[mask-position:0_0] has-data-[state=3Dopen]:pointer-events-auto ha=
s-data-[state=3Dopen]:[mask-position:0_0]" style=3D"mask-position: 0% 0%;">=
<span class=3D"" data-state=3D"closed"><button class=3D"text-token-text-sec=
ondary hover:bg-token-main-surface-secondary rounded-lg" aria-label=3D"Copy=
" data-testid=3D"copy-turn-action-button"><span class=3D"touch:w-[38px] fle=
x h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"even=
odd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 =
15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 2=
0.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 =
10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772=
 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 =
20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"=
currentColor"></path></svg></span></button></span><span class=3D"" data-sta=
te=3D"closed"><button class=3D"text-token-text-secondary hover:bg-token-mai=
n-surface-secondary rounded-lg" aria-label=3D"Good response" data-testid=3D=
"good-response-turn-action-button"><span class=3D"touch:w-[38px] flex h-[30=
px] w-[30px] items-center justify-center"><svg width=3D"24" height=3D"24" v=
iewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cla=
ss=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M12.1318 2.50389C12.3321 2.15338 12.7235 1.95768 13.124 2.00775L13.5778 2.=
06447C16.0449 2.37286 17.636 4.83353 16.9048 7.20993L16.354 8.99999H17.0722=
C19.7097 8.99999 21.6253 11.5079 20.9313 14.0525L19.5677 19.0525C19.0931 20=
.7927 17.5124 22 15.7086 22H6C4.34315 22 3 20.6568 3 19V12C3 10.3431 4.3431=
5 8.99999 6 8.99999H8C8.25952 8.99999 8.49914 8.86094 8.6279 8.63561L12.131=
8 2.50389ZM10 20H15.7086C16.6105 20 17.4008 19.3964 17.6381 18.5262L19.0018=
 13.5262C19.3488 12.2539 18.391 11 17.0722 11H15C14.6827 11 14.3841 10.8494=
 14.1956 10.5941C14.0071 10.3388 13.9509 10.0092 14.0442 9.70591L14.9932 6.=
62175C15.3384 5.49984 14.6484 4.34036 13.5319 4.08468L10.3644 9.62789C10.05=
22 10.1742 9.56691 10.5859 9 10.8098V19C9 19.5523 9.44772 20 10 20ZM7 11V19=
C7 19.3506 7.06015 19.6872 7.17071 20H6C5.44772 20 5 19.5523 5 19V12C5 11.4=
477 5.44772 11 6 11H7Z" fill=3D"currentColor"></path></svg></span></button>=
</span><span class=3D"" data-state=3D"closed"><button class=3D"text-token-t=
ext-secondary hover:bg-token-main-surface-secondary rounded-lg" aria-label=
=3D"Bad response" data-testid=3D"bad-response-turn-action-button"><span cla=
ss=3D"touch:w-[38px] flex h-[30px] w-[30px] items-center justify-center"><s=
vg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"=
http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"even=
odd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11.2811 22=
.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.1665 7.099=
75 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.94753L4.4=
3684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 21.0045 =
3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C15.745 1=
5 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.29589C7.3939=
9 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 5.61351 =
13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.99743 13.=
6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002 9.35608=
 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13.4141 15=
.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C17.0045 4=
.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 19.0045 =
5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"currentColor">=
</path></svg></span></button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"text-token-text-secondary hover:bg-token-main-surface-seco=
ndary rounded-lg" aria-label=3D"Read aloud" data-testid=3D"voice-play-turn-=
action-button"><span class=3D"touch:w-[38px] flex h-[30px] w-[30px] items-c=
enter justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24"=
 fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"=
><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C11 4.474=
85 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6.25019 8=
.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523 3.44772=
 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.4588C10.48=
28 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.59714 13=
 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.9331L5.6110=
2 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 4 6.0000=
5H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6.27296 2=
1.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.9996 13.85=
07 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 20.3811 =
17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.9444 20.=
9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.9149 7.7126=
2C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C16.241 7=
.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.5379 18.49=
96 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 16.0222 =
16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.766 14.4=
637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859 16.1653=
 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.90049Z" =
fill=3D"currentColor"></path></svg></span></button></span><span class=3D"" =
data-state=3D"closed"><button class=3D"text-token-text-secondary hover:bg-t=
oken-main-surface-secondary rounded-lg" aria-label=3D"Edit in canvas"><span=
 class=3D"touch:w-[38px] flex h-[30px] w-[30px] items-center justify-center=
"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path d=3D"M2.5 5.5C4.3 5=
.2 5.2 4 5.5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 =
2.5 5.5Z" fill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"r=
ound" stroke-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 =
19.3952C5.12203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.2=
9328 20.3007 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L=
8.97693 19.8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.40=
7 11.0608 19.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18=
.0497L20 10.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.380=
7 4.11929 15 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.=
1657C6.24513 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.7880=
2 15.7719 5.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stro=
ke-linecap=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18=
.5 11" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" =
stroke-linejoin=3D"round"></path></svg></span></button></span></div></div><=
div class=3D"mt-3 w-full empty:hidden"><div class=3D"text-center"></div></d=
iv></div></div></div></div></article><div aria-hidden=3D"true" data-edge=3D=
"true" class=3D"pointer-events-none h-px w-px"></div><div></div></div></div=
></div></div><div id=3D"thread-bottom-container" class=3D"isolate z-3 w-ful=
l basis-auto has-data-has-thread-error:pt-2 has-data-has-thread-error:[box-=
shadow:var(--sharp-edge-bottom-shadow)] md:border-transparent md:pt-0 dark:=
border-white/20 md:dark:border-transparent"><div class=3D"text-base mx-auto=
 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:-=
-spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-=
content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:=
[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48r=
em] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 =
md:gap-5 lg:gap-6"><div class=3D"flex justify-center empty:hidden"></div><d=
iv class=3D"relative z-1 flex max-w-full flex-1 flex-col h-full max-xs:[--f=
orce-hide-label:none]" type=3D"button" aria-haspopup=3D"dialog" aria-expand=
ed=3D"false" aria-controls=3D"radix-=C2=ABr261=C2=BB" data-state=3D"closed"=
><div class=3D"absolute start-0 end-0 bottom-full z-20"></div><form class=
=3D"w-full [view-transition-name:var(--vt-composer)]" data-type=3D"unified-=
composer"><div class=3D"border-token-border-default flex w-full cursor-text=
 flex-col items-center justify-center rounded-[28px] border bg-clip-padding=
 contain-inline-size overflow-clip shadow-sm sm:shadow-lg dark:shadow-none!=
 bg-token-main-surface-primary dark:bg-[#303030]"><div class=3D"relative fl=
ex w-full items-end px-3 py-3"><div class=3D"relative flex w-full flex-auto=
 flex-col"><div class=3D"relative ms-1.5 grid grid-cols-[auto_minmax(0,1fr)=
]"><div class=3D"items-top flex justify-center"><div style=3D"opacity: 1;">=
</div></div><div class=3D"relative flex-auto bg-transparent pt-0.5" style=
=3D"margin-bottom: -20px; transform: translateY(-7px);"><div class=3D"flex =
flex-col justify-start" style=3D"min-height: 0px;"><div class=3D"flex min-h=
-12 items-start"><div class=3D"max-w-full min-w-0 flex-1"><div class=3D"_pr=
osemirror-parent_k4nam_2 text-token-text-primary max-h-[25dvh] max-h-52 ove=
rflow-auto [scrollbar-width:thin] default-browser min-h-12 pe-3"><textarea =
class=3D"text-token-text-primary placeholder:text-token-text-tertiary block=
 h-10 w-full resize-none border-0 bg-transparent px-0 py-2 ring-0 placehold=
er:ps-px" placeholder=3D"Ask anything" data-virtualkeyboard=3D"true" style=
=3D"display: none;"></textarea><div contenteditable=3D"true" translate=3D"n=
o" class=3D"ProseMirror" id=3D"prompt-textarea" data-virtualkeyboard=3D"tru=
e"><p data-placeholder=3D"Ask anything" class=3D"placeholder"><br class=3D"=
ProseMirror-trailingBreak"></p></div></div></div></div></div></div></div><d=
iv class=3D"justify-content-end relative ms-2 flex w-full flex-auto flex-co=
l"><div class=3D"flex-auto"></div></div><div style=3D"height: 48px;"></div>=
</div><div class=3D"bg-primary-surface-primary absolute start-3 end-0 botto=
m-3 z-2 flex items-center"><div class=3D"w-full"><div data-testid=3D"compos=
er-footer-actions" class=3D"max-xs:gap-1 flex items-center gap-2 overflow-x=
-auto [scrollbar-width:none]" style=3D"margin-right: 101.969px;"><div data-=
testid=3D"composer-action-file-upload" style=3D"view-transition-name: var(-=
-vt-composer-attach-file-action);"><div class=3D"relative"><div class=3D"re=
lative"><div class=3D"flex flex-col"><input multiple=3D"" tabindex=3D"-1" c=
lass=3D"hidden" type=3D"file" style=3D"display: none;"><span class=3D"hidde=
n"></span><button type=3D"button" id=3D"radix-=C2=ABr262=C2=BB" aria-haspop=
up=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"text-tok=
en-text-primary border border-transparent inline-flex items-center justify-=
center gap-1 rounded-lg text-sm dark:transparent dark:bg-transparent leadin=
g-none outline-hidden cursor-pointer hover:bg-token-main-surface-secondary =
dark:hover:bg-token-main-surface-secondary focus-visible:bg-token-main-surf=
ace-secondary radix-state-active:text-token-text-secondary radix-disabled:c=
ursor-auto radix-disabled:bg-transparent radix-disabled:text-token-text-ter=
tiary dark:radix-disabled:bg-transparent m-0 h-0 w-0 border-none bg-transpa=
rent p-0"></button><span class=3D"flex" data-state=3D"closed"><button aria-=
disabled=3D"false" aria-label=3D"Upload files and more" class=3D"flex items=
-center justify-center h-9 rounded-full border border-token-border-default =
text-token-text-secondary w-9 can-hover:hover:bg-token-main-surface-seconda=
ry"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xml=
ns=3D"http://www.w3.org/2000/svg" aria-label=3D"" class=3D"h-[18px] w-[18px=
]"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 3C12.5523 3 1=
3 3.44772 13 4L13 11H20C20.5523 11 21 11.4477 21 12C21 12.5523 20.5523 13 2=
0 13L13 13L13 20C13 20.5523 12.5523 21 12 21C11.4477 21 11 20.5523 11 20L11=
 13L4 13C3.44772 13 3 12.5523 3 12C3 11.4477 3.44772 11 4 11L11 11L11 4C11 =
3.44772 11.4477 3 12 3Z" fill=3D"currentColor"></path></svg></button></span=
><div class=3D"w-fit" type=3D"button" aria-haspopup=3D"dialog" aria-expande=
d=3D"false" aria-controls=3D"radix-=C2=ABr265=C2=BB" data-state=3D"closed">=
<div></div></div></div></div></div></div><div data-testid=3D"system-hint-se=
arch" style=3D"view-transition-name: var(--vt-composer-search-action);"><di=
v><span class=3D"inline-block" data-state=3D"closed"><div class=3D"radix-st=
ate-open:bg-black/10 inline-flex h-9 rounded-full border text-[13px] font-m=
edium text-token-text-secondary border-token-border-default can-hover:hover=
:bg-token-main-surface-secondary focus-visible:outline-black dark:focus-vis=
ible:outline-white"><button class=3D"flex h-full min-w-8 items-center justi=
fy-center p-2" data-testid=3D"composer-button-search" aria-pressed=3D"false=
" aria-label=3D"Search"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 2=
4" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"h-[18px] w-[=
18px]"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M2 12C2 6.477=
15 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.=
47715 22 2 17.5228 2 12ZM11.9851 4.00291C11.9933 4.00046 11.9982 4.00006 11=
.9996 4C12.001 4.00006 12.0067 4.00046 12.0149 4.00291C12.0256 4.00615 12.0=
47 4.01416 12.079 4.03356C12.2092 4.11248 12.4258 4.32444 12.675 4.77696C12=
.9161 5.21453 13.1479 5.8046 13.3486 6.53263C13.6852 7.75315 13.9156 9.2916=
9 13.981 11H10.019C10.0844 9.29169 10.3148 7.75315 10.6514 6.53263C10.8521 =
5.8046 11.0839 5.21453 11.325 4.77696C11.5742 4.32444 11.7908 4.11248 11.92=
1 4.03356C11.953 4.01416 11.9744 4.00615 11.9851 4.00291ZM8.01766 11C8.0839=
6 9.13314 8.33431 7.41167 8.72334 6.00094C8.87366 5.45584 9.04762 4.94639 9=
.24523 4.48694C6.48462 5.49946 4.43722 7.9901 4.06189 11H8.01766ZM4.06189 1=
3H8.01766C8.09487 15.1737 8.42177 17.1555 8.93 18.6802C9.02641 18.9694 9.13=
134 19.2483 9.24522 19.5131C6.48461 18.5005 4.43722 16.0099 4.06189 13ZM10.=
019 13H13.981C13.9045 14.9972 13.6027 16.7574 13.1726 18.0477C12.9206 18.80=
38 12.6425 19.3436 12.3823 19.6737C12.2545 19.8359 12.1506 19.9225 12.0814 =
19.9649C12.0485 19.9852 12.0264 19.9935 12.0153 19.9969C12.0049 20.0001 11.=
9999 20 11.9999 20C11.9999 20 11.9948 20 11.9847 19.9969C11.9736 19.9935 11=
.9515 19.9852 11.9186 19.9649C11.8494 19.9225 11.7455 19.8359 11.6177 19.67=
37C11.3575 19.3436 11.0794 18.8038 10.8274 18.0477C10.3973 16.7574 10.0955 =
14.9972 10.019 13ZM15.9823 13C15.9051 15.1737 15.5782 17.1555 15.07 18.6802=
C14.9736 18.9694 14.8687 19.2483 14.7548 19.5131C17.5154 18.5005 19.5628 16=
.0099 19.9381 13H15.9823ZM19.9381 11C19.5628 7.99009 17.5154 5.49946 14.754=
8 4.48694C14.9524 4.94639 15.1263 5.45584 15.2767 6.00094C15.6657 7.41167 1=
5.916 9.13314 15.9823 11H19.9381Z" fill=3D"currentColor"></path></svg><span=
 style=3D"width: fit-content; opacity: 1; transform: none;"><div class=3D"[=
display:var(--force-hide-label)] ps-1 pe-1 whitespace-nowrap">Search</div><=
/span></button></div></span></div></div><div data-testid=3D"composer-action=
-system-hint-button" style=3D"view-transition-name: var(--vt-composer-syste=
m-hint-action);"><span class=3D"hidden"></span><span class=3D"" data-state=
=3D"closed"><button type=3D"button" id=3D"radix-=C2=ABr268=C2=BB" aria-hasp=
opup=3D"menu" aria-expanded=3D"false" data-state=3D"closed" class=3D"_tools=
Button_d2h2h_8 border-token-border-default text-token-text-secondary radix-=
state-open:bg-black/10 can-hover:hover:bg-token-main-surface-secondary flex=
 h-9 min-w-9 items-center justify-center rounded-full border p-1 text-xs fo=
nt-semibold focus-visible:outline-black disabled:opacity-30 dark:focus-visi=
ble:outline-white" aria-label=3D"Use a tool"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"pointer-events-none h-5 w-5"><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 10C6.10457 10 7 10.8954 7 12=
C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 3 12ZM10 12C10 10.8954 10.8=
954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.895=
4 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 10 19 10C20.1046 10 21 10.8=
954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14 17 13.1046 17 12Z" fill=3D=
"currentColor"></path></svg></button></span></div></div><div class=3D"absol=
ute end-3 bottom-0 flex items-center gap-2" data-testid=3D"composer-trailin=
g-actions"><div class=3D"ms-auto flex items-center gap-1.5"><span class=3D"=
" data-state=3D"closed"><button class=3D"btn relative btn-primary btn-small=
 flex items-center justify-center rounded-full border border-token-border-d=
efault p-1 text-token-text-secondary focus-visible:outline-black dark:text-=
token-text-secondary dark:focus-visible:outline-white bg-transparent dark:b=
g-transparent [view-transition-name:var(--vt-composer-whisper-button)] can-=
hover:hover:bg-token-main-surface-secondary dark:hover:bg-transparent dark:=
hover:opacity-100 h-9 min-h-9 w-9 min-w-9" aria-label=3D"Dictate button" ty=
pe=3D"button"><div class=3D"flex items-center justify-center"><svg width=3D=
"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.=
w3.org/2000/svg" aria-label=3D"Mic icon" class=3D"h-[18px] w-[18px]" font-s=
ize=3D"inherit"><path d=3D"M18.9953 11.5415C19.5246 11.6991 19.826 12.2559 =
19.6685 12.7852C18.7771 15.7804 16.179 18.0417 13 18.4381V19.5H14.5C15.0523=
 19.5 15.5 19.9477 15.5 20.5C15.5 21.0523 15.0523 21.5 14.5 21.5H9.50002C8.=
94773 21.5 8.50002 21.0523 8.50002 20.5C8.50002 19.9477 8.94773 19.5 9.5000=
2 19.5H11V18.4381C7.82093 18.0418 5.22279 15.7805 4.33136 12.7852C4.17382 1=
2.2559 4.47522 11.6991 5.00456 11.5415C5.5339 11.384 6.09073 11.6854 6.2482=
7 12.2148C6.98609 14.6939 9.28339 16.5 11.9999 16.5C14.7165 16.5 17.0138 14=
.6939 17.7516 12.2148C17.9091 11.6854 18.466 11.384 18.9953 11.5415Z" fill=
=3D"currentColor"></path><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" =
d=3D"M14.5 10.5V7C14.5 5.61929 13.3807 4.5 12 4.5C10.6193 4.5 9.5 5.61929 9=
.5 7V10.5C9.5 11.8807 10.6193 13 12 13C13.3807 13 14.5 11.8807 14.5 10.5ZM1=
2 2.5C9.51472 2.5 7.5 4.51472 7.5 7V10.5C7.5 12.9853 9.51472 15 12 15C14.48=
53 15 16.5 12.9853 16.5 10.5V7C16.5 4.51472 14.4853 2.5 12 2.5Z" fill=3D"cu=
rrentColor"></path></svg></div></button></span><span class=3D"" data-state=
=3D"closed"><button disabled=3D"" id=3D"composer-submit-button" aria-label=
=3D"Send prompt" data-testid=3D"send-button" class=3D"dark:disabled:bg-toke=
n-text-quaternary dark:disabled:text-token-main-surface-secondary flex item=
s-center justify-center rounded-full transition-colors hover:opacity-70 dis=
abled:text-[#f4f4f4] disabled:hover:opacity-100 dark:focus-visible:outline-=
white bg-black text-white disabled:bg-[#D7D7D7] dark:bg-white dark:text-bla=
ck h-9 w-9"><svg width=3D"32" height=3D"32" viewBox=3D"0 0 32 32" fill=3D"n=
one" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-2xl"><path fill-rul=
e=3D"evenodd" clip-rule=3D"evenodd" d=3D"M15.1918 8.90615C15.6381 8.45983 1=
6.3618 8.45983 16.8081 8.90615L21.9509 14.049C22.3972 14.4953 22.3972 15.21=
89 21.9509 15.6652C21.5046 16.1116 20.781 16.1116 20.3347 15.6652L17.1428 1=
2.4734V22.2857C17.1428 22.9169 16.6311 23.4286 15.9999 23.4286C15.3688 23.4=
286 14.8571 22.9169 14.8571 22.2857V12.4734L11.6652 15.6652C11.2189 16.1116=
 10.4953 16.1116 10.049 15.6652C9.60265 15.2189 9.60265 14.4953 10.049 14.0=
49L15.1918 8.90615Z" fill=3D"currentColor"></path></svg></button></span></d=
iv></div></div></div><div class=3D"absolute start-4 top-3 ms-[1px] flex ite=
ms-center pb-px"></div></div></div><div class=3D"w-full"></div></form></div=
></div></div><div class=3D"text-token-text-secondary relative mt-auto flex =
min-h-8 w-full items-center justify-center p-2 text-center text-xs md:px-[6=
0px]"><div>ChatGPT can make mistakes. Check important info.</div></div></di=
v></div></div><div class=3D"group absolute end-2 bottom-2 z-20 flex flex-co=
l gap-1 md:flex lg:end-3 lg:bottom-3"><button type=3D"button" id=3D"radix-=
=C2=ABr26e=C2=BB" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=
=3D"closed" class=3D"border-token-border-default text-token-text-secondary =
flex h-6 w-6 items-center justify-center rounded-full border text-xs">?</bu=
tton></div></main></div></div><div class=3D"bg-token-sidebar-surface-primar=
y relative z-1 shrink-0 overflow-x-hidden max-lg:w-0!" style=3D"width: 0px;=
"><div class=3D"absolute h-full pointer-events-none" style=3D"width: 400px;=
"><div class=3D"flex h-full flex-col"></div></div></div></div></div><div ar=
ia-live=3D"assertive" aria-atomic=3D"true" class=3D"sr-only"></div><div ari=
a-live=3D"polite" aria-atomic=3D"true" class=3D"sr-only"></div><audio class=
=3D"fixed start-0 bottom-0 hidden h-0 w-0" autoplay=3D"" crossorigin=3D"ano=
nymous"></audio><span class=3D"pointer-events-none fixed inset-0 z-60 mx-au=
to my-2 flex max-w-[560px] flex-col items-stretch justify-start md:pb-5"></=
span><div data-radix-popper-content-wrapper=3D"" style=3D"position: fixed; =
left: 0px; top: 0px; transform: translate(535.455px, 881.818px); min-width:=
 max-content; --radix-popper-transform-origin: 0% 0px; z-index: auto; --rad=
ix-popper-available-width: 1043.0965576171875px; --radix-popper-available-h=
eight: 19.9744873046875px; --radix-popper-anchor-width: 767.9971313476562px=
; --radix-popper-anchor-height: 0px;"><div data-side=3D"bottom" data-align=
=3D"start" data-state=3D"open" role=3D"dialog" id=3D"radix-=C2=ABr26d=C2=BB=
" tabindex=3D"-1" style=3D"--radix-popover-content-transform-origin: var(--=
radix-popper-transform-origin); --radix-popover-content-available-width: va=
r(--radix-popper-available-width); --radix-popover-content-available-height=
: var(--radix-popper-available-height); --radix-popover-trigger-width: var(=
--radix-popper-anchor-width); --radix-popover-trigger-height: var(--radix-p=
opper-anchor-height);"><div></div></div></div><span data-radix-focus-guard=
=3D"" tabindex=3D"0" style=3D"outline: none; opacity: 0; position: fixed; p=
ointer-events: none;"></span></body></html>
------MultipartBoundary--zIanXexzKz9mlCBi1F8XbId4LZxMLKaXDSXMumdjRh----
Content-Type: image/webp
Content-Transfer-Encoding: base64
Content-Location: https://files.oaiusercontent.com/file-CLGW5W2y2zFqC742Vti5cg?se=2025-05-01T15%3A34%3A56Z&sp=r&sv=2024-08-04&sr=b&rscc=max-age%3D299%2C%20immutable%2C%20private&rscd=attachment%3B%20filename%3D41593_2024_1631_Fig2_HTML.webp&sig=HgBGoMNjmMbe5E7V0P2iJvZcpgkSGo%2Bo%2BvJMxaX7kSE%3D

UklGRizPAABXRUJQVlA4ICDPAABwEwKdASqtAncBPjEWiUMiISET6t4gIAMEpDARADEW8CirxrQX
/6H5GeLrIPjf9L/ev2z/uPud8f9X/pT7h/lP93/bPmv/W/8voh65/6P3Se6zz1/0f8P/nP2B+Yv+
J/33+N/vH/V+Q/9R/yv/A/y376/QF+pv/K/wH+j/Y/55/9D/s/9j3Sf2v/g/+P/O/874Cfy7++f8
j/Q/vz8x//Q/ar3M/37/ffs3/vvkB/o/+B/7H+7/7n/3+a7/l//v/s/AZ/jv+V/+/cC/qn+g/83s
3f8b/1/7j/Yf/f6JP61/uP/l/u/9r/9foN/o/+G/9n7Xf///xfQB/2P//7AH/c///sAf9D/////4
N+s39k/Ib31d+X2/+3fsV/ff/T/mvaX8i+dfvH91/y/+t/xH/v/1fxuf5H+U8Vfrf8x/4f9B6k/x
/7Vfhv7d/if95/g/25+5X8t/z/8l+4Hnf8W/6j/J/uT/uPkF/If5d/eP7r+2H+A/b76sfnf9n/rP
8t4Gevf5v/Zf5f92vgI9Zfnv+c/u/+d/23+Q/cj2tf7L/H/tb+//yz+q/3f/Xf5v9uf9X///wB/l
H89/x/9y/a7/Bf/7/Xfb3+a/63+i8sr7r/sf+7/o/3E+gH+Vf1D/M/4P/M/6P++f/7/U/jD/Sf9D
/Of6r/sf6H///9H43fon+M/53+Y/13/b/yP/9/7P6C/yb+jf5z+8f5H/of4n///+f7yP+v+f/0M/
cP/t/n/9Gv6yf7r8+zacZ8JF46KQCsWtSVCx9zLRKaH+tsNsyArFrUcEN+fs5QX8apH87syArFrU
lQt0aYBzuE99sJGmrZegqH34VEzQNTlxlGkOCxSJsklB3Gf5Eev91wa54kvDSzINh4LPASJmCTs6
uy0mmAjnbSYJR3S8JfSkrbLXuIu0BV470TiUar4ObEUQqgjfBOc0BnNOhSaITBsOs6RCFUWGJYCg
Fc9nGjYpdnb1vXDT6fYC888y1ZtbfBjWNSiMsYvX7H9EmC8mZuqOrCTFIBAx8fitQelQy4NCGU58
XHbkyStBhsQL2ABuiWYp8gM1baTw0tBJPzODhRlhSnPhKKVBbXjP0EYgYGvtUlMGFAH8cFID2I2b
/0SffJL0SMLMuXAXpJxOy1nClPfJlrDZD7pW2reBE2N7Lg0G/zibnKuCakSbGbqNV8ftg3l3LIEl
c0lR/7T9Fe5a1esJsXhhf0wnLS4Csrio480u9pKgZnnakd/vAmMP0xcQrfFgUJruNqdIRdy8Wo0k
+or/nFxFkLT7ITtw5hBDgIW7m5sNTUicfHRbik3etefWK81Dn0lQP/Qw4jdsgy94cn7XjWO3vMrl
+6TBBevza0j57iAm2REvYle1G2pbinPspvQabmWYMXR+mtvQGWwzL3o1ghihX8+2doQLE1hwLaG2
eo+YpsmsHaUL1vpMjx6Rs7GuhGD7YfQM/SB0GbiUhndXzNH9UG+xmG1UeKpj5vsNdq6ppCbBHRvL
PgjYoLbu2UKDLWuQEMtVAm18W0BFZ95SwMrWVV03dVfl1UfEovpb/KZENV0oW5COBFwjEEFmx6A4
FwVv4hrP3oVIlvt0+CHmC53buZ4aMvHrXd3MAJmTM89jSN+LoUamxLD+IhrciArzR6lONj9IhBkR
W09pDrio6S8ABcObkwie/GGlvq2R7O2oKXUBjB84N8mVYvP0QHHoKxHXpgh7sK+t5PNTg27yKf65
j1DddKh9hvCAWIpmqcZ4Mw0+MHTMbV0qH0eGJ0TCwEYD/QYi3z+LFM8vc4N79V2zo8qd++NF1pwo
iIbsqxWVDVzlGm/tSEDVesFNhGBgDFb7f4CPEX5Dxsf+phGOMv9MPSSoV3LDq4RhpmGmjpBQqneg
PtRV9AzRoaX7uc+ZlcVz1ToQtoc4OYtLGeFrT5czTA8liypOVXESNfEKLskBJpXZ3AGMaDinyKZa
qXjxMp7y96iF0Z+8bcV1x1nddAGY5XLw0XlUtFgTrs+AGpAB3+twPuJHHMpRYiMnzjqiUNaXtT86
4T3gfAKB3FcbsqTEI4COaJMNR5SzJLkZwRn9rxAzFFqHmOy2JgdRanS+RyFCK9iy31LsDXLn5Vd0
4XaDmHJMOU+QhImZ/Y3l31DBgTcbOY+l+e4hLn36vPZlV/KNI5I1yr3kztyntvlNFRBBjiIygxCQ
lyd20jgqdEHD+zIJiQEas/kdgGmIhlWEn8HkGw4GB1UaBlJ/60fPe4kqEZffKfX5QBY1kbA7SwaT
KZ/hvTrWuOuYtW8NhmzOCSikyD0FH4dAODTO+qD46gUkIEqJEzYpvOSJHyIhccYWMPCM/J63Jy+4
INQbduMLJ5roAHsbQDLOr9YcaYPC/QaJsBxol3WdGfkdFysGTA2XVWDcK+JLBvT8bU7knWjfvz+K
wM7cTI5I5+q36OdQ4hiqWLJ11OZ+isVw5iRF6okZQEDJJxw1U/aPjDW4mEQnDEGByQoxj1EdKuq5
XgYvJ3CxpilgIdNF8eMAqKLln5CHbJJ3hRPz28fJemsSR0WOp2lzaC6Bob0QNKcah3idhFw09dmy
yZ9M5JdNuLxHzI91EAvcJ0SqIjYPX9QU5tE3SKlJve8ZJU2bHcuMjB0dw/w+Ysea5iTIgmMSmvUw
itikMJmncDAY+Z8ne6VlvdcnOioj7GUbGDFv2gmbdEcFfFvAgUKu+QYN8ooaiLK2C4rh8oDfd6Br
Ft6XsOdOeCnmkn/WyLOqFsgkdr5YyDvCwOGtXL4vL+Tu8ume4p4l6ZomEhNIjxHBXSBIHUu8K85U
aQ0WFkR1+qJQMMw99VKc9FbMOI3OJzbrGwkGyIZdkz1SD6Z/2fpGJ4MtB1lMp3VcVxg1TllBPkNt
IIBf2nAy4WYWMQt0u1as7wvgZeBukmzCS1hAdcJdgUYqbu4qQt/rn7Qy7vaZDfbrKHid4r+li8UN
e3WrShj1lPsGFDUcwSjg4IwEFa6qaCT2vSyCTbX5Vnkf9q5/idxA6IMFPdGQcm90ylM2gtYbQfNt
LjVqEkXmHAD0XpP9aN7WKOsIJtV/UQYzKPBFtrmY8aM3eQZpmTGa3qDC5ygkJlI/le09USZ/gTkG
9vSA/uUgU69jaBj3THdqu0EK9Rz6eYe8RtXbc9g8Tg+rGEr8QBaFVjfqCaDRTHHF9+l1LTPTxd8C
iGD7/Y8TmFz4FAwtg1jheCrEg0/KGDRKzplMO5i8hWr7Fp2Vpexwyza5bG4wBdDWHRVXrGgDbeU7
DwvbDOkkG7XT8xc2z02w8JCwzmRFWweszbpzclG740Pb8OTKKcX3JYMekr3Ekmg72CIFSubDlu/Y
COxap+8MT5QbTpiZRZJezopR/lSPGVrdHGe8R6uyzwh3Jpui6r5/ah3P6ll7yOk7heljesoR7erM
1NF0z2OqyOVztCtAtlKKD4HqKznprYKRX71/GpE6yIDkvAuN7nikY4wT+6tevZcROCGiDkQe6hKf
mzlxV+S3ZBCcUbESSw/peIOjKu6hrNyqaxQb3km65NGAkbv8U+M57WhwsZvrWn3mXvimKPalnI1w
wJRtJShNKVDBFVDqG8cZDFflUK+cHCanIU8bZTcRZDgSWui+6HTCkhk4gBNVE7fy0pgbDTKOL67U
4GETnZUnOmgoj0Jf3w5p5Tu7YJ69jqCzI1QX9yq4mrxevMFjmnAk/uPDIwxEGOE5Vw/9T8NKijn6
XQqn3mSbw0hWR/eFVQXgs3x/Zgh4i1JOu+xWbkRkB0Ws/38nrrZLbc9eseyKF03Wp5dAjTAVi09G
VChZaYl+ozLFJ3B9kChUKYdycPvI/uZY5BdhI3/tDdzNoO7YQ7jQfVNNWJKo4qUPQHF7ghCBQMUh
MZR6tfBy35fz5uXirNSOfF0nLOjIdXbc/wqyMjT5+ChfpAK3Tv1hvDQgXx4b0rULLGT7gZF+p9zx
ICTdoabUucWmJb5689p2rL9vLUtprU7BM6yxqXTxEwsrT/3KBxjt+wMnSH9BQq3Vh1TRaWLLuUS/
9CgTI9+/ra4evtWdluShCt9mpQeZl74NqC3unB+QFBAcrHVBvck6BHaNrptK+ksuX5Mc2bHvhQyd
5RzMARtbgzcdkHsJLoV5sfbuc08uqFLVpcBAvN/Eu0432wfEUQrdnrMoZAFBBqhwPwWl+CsyJg6g
FojM321x7w6WynVqBW8VsU36HalLu4/3v+5x+f6w0vhFv4oR7GG8yxDAVcl3c/hQHSdPB2ZUu8Pw
Cv2cFOErrgtcVsD4UYu2Q4FVLZByDnHNJLc9Ip0ei5GyIsbH0l2MlXQCzXBF4or83rSryOQ8bWzq
FAiXIyYHlggnoUEqMSsQNMWU44v9dCO+dovx5jF8L39kEq1sbi2VT65/bwprly0sW9y0dWmy1yNr
Qt6GPm9QeDOt/+0z6l+KAv7NXTIa9K51aZcLg1SmycCmnJ1rnmE07qQAO3S713IOppZ4FK2w1869
5gvHEl8Tzf6WdWeG2Kg3zDMI8q7JbqGcQBTyaHoNdl/+alZhExPkbS52Y/6O/+0KBeWgFuihRLN6
Xjeees47Sp1I52yX66BVZfILBrsKz1WbS4Oq984/MhlznXJ0FG0fcQCtb2nTdAo0D/BKeAY7gXgt
r5qAvXhwTvP36WZ2urKu0aEa0w9oHy3urJP5YpRuaDeIXxf+K04GZCOYwhp+lPqtiuReRKusRG8J
Y2ELz5ceTEjPxBVvWrLrZ1N29kHFPeGTS5VoVT6aY1WogwAl4HGpRyq2a3GmwIu5JF5cg0XgJUd/
B7iP+5Z8LzeXPjUUl6ae7c0c5jqcI9yntKMc+kHoUBA9GHr38w1uxHhMHGF0rTC/MfMuZZ3i6J5d
0tIBs67EkTGFQNEmlOVuwkQO4+yc05m7WafWB7Xm+U266bQiRDNZf9fweITjolj6cXu1eqiha4O6
uUAzmkCtJLsKrsGR7Yen7NyhzZOYKJ+FM0OkOU/eQ/HIzOrL7nhCKuT61vvonaGIyzuBGPbrxbh3
ZkL3xcxbvak9pUX0jSuNNxCLLG5xy6uwU0yuQ0k5SHkSsk0ipv0XsEHwK7aE83befSmqSicF6n1j
OoXnDlDZft+54RTGrx0n/3IzlIqJQEUdiPn0d+p5GEL4zAfwi0A3CuoFIBjROjpZqCSH1lfEoUbi
ShFcszSzT3DtaeVpyaMD1RBymDjmnrYu+R097QZ3W1QjaY6vDykRxssjd6TW+JCekKoIlra/utPz
NpVgKxaRvo9zyZRUqOFg/Ig2qmDpDzRekdir6/WUDYGQkJk9UtlhCh3dl7DC8zMn8UEHJWLoIlCU
DK8Fr+0ukNEWnfoGVhW6jD35fIdg5lmsIcCp4URoZUFkWSo3BJO5CnMR1fT08+UpN/WGiNPQffRs
NCvzsWmSrXB8ACvzbvvgM0s2fTLKs6Uo9o9zx0xZTGVbPMJZkVszNs9YM1iZkL4jPxsbk/mVSSvg
OYYTzoUF3qUAqAp1/kUZ5D7IyiynUqnR+yx5FAUHG8LugWwDKKud0UvlnbPzleLL+U6nfw9vUY9L
TqNFfdaM5Ebg6ODDlCpHss6FSQ0atsGIW6NMBWLWfsHjcK6rhcFiw2L7s+DDECIbLdnZhjhbgYSg
pNcps9pxTat0/f8yvgD2Scl3plHaayYhbo0wFYtajI+WEBrHwWBcRdoqFujTAVi1qSoW6NMBWLWp
KhbocAAA/v+JpAC7xf66BLNCW1ZA8TuAr/lvZrUAyLId+JDrLNerh80we67gj3wYu6FdCsBCAQDx
c35n4ZlYBI8aTirEW4KNl7/yD9lX6VrlgFRMq581VeIekt9R7ZcESURzJbuHtJ90XOxe6NFT18+g
KEgI31wRuaQ/fgEvnjPtiDR1YjIZQBof7qChsfu2x+ys6yRwX/LnZiJQCvZipc12c2eE//6aXzyw
mSZvitjbvjRZs0S/Vz+cLE09w2fDfOwKo5aX86mqs+laxSzz1RZOQvSKDGwUD7QvzWw811ouIaPe
e/BI39Q3A/4f6p1JQgrgz+s7FljfinAMgdy8AZadE9PRgB2SY6S6BwszwhIEtLMFeLVdZqpWQkpf
N+F4Y9UADb0ZqUYKqBLjP0dLhy2puMCXUBNlE50XuarLxZUqk+s6+fXHC7S61AA/eyphpKrOdk8u
riCF0k8BWCDIxUX4zgKyFXMdxAQgBTBuBH4gd9AaVPdfs+Pee/q8dxRUzO4Obh9r6rfTN9HmFUqn
HmINpmIkoJZvtAjV5Vn0LbuPsz85WqKpKHYks2Pmou/RnVG50niKhzQx6RZC6rcP4MfLKgadSYzs
mtxOn9G0vvTq8kZNQ/YtlWMJK3Q1BdW6+5mEl81l82miR+1r+5jMPo15rlylSamiN2myDJ0Kx/qc
GKRd5jQQwFg6/XWh5K/oBx1UHz8kiY1FaiyQOlohAlI0QorF1Gq3y8CuiCkN1Drr4JCsjKdxTEqt
i6hV4v8mQs92EdjDCNsHmIeTtiB+n6MRVZYYY/Atf5JFknHOJ6XkVFBiWmA5CeXS+599fsvLDVey
n/Fn+tuJs8Mp0SHdyfTUtHBd1P3y468iCg56bluJEAU5JTgrcSsOMwquYGJalglpZzdlOfXA7qBO
Ccg0GV+hn0qIMDT7AXUfHVhTnqdWYYOZTDZ6vTraJB1jQlVABn79l6HSr7j3gnjM4Wqe4If+4rCS
2tHBbFV30V9Ul9tjiXGb3a063sfrrOwnAT6rH2IBoMZ7B9eWvB+oYTjXlPK2kU4Q4YNRZHVTdAri
/s+BapBHjJj+IBz99Z03n2gFrW6+BnAB0VMebyqrAM4tHamc7d9ftAj8UCVQ7aBuJmCkhQNDlYLb
5m0CXKCQFusAgPNZEAEE4dUTYZdDAEo9fGd4b8OeeCB+z7iBhMJBJPBY0IWZlD7tXoKG0Dlzm2fu
M59wdyRuulvS5ZMTWOZVKr7/re9Xyxef+OsjM8wi4NBIIZ/yRlGDEtVVU2zyHxSLlU8SlcjzF2Jz
8lelQG8lObUjBMthpJcPtsOE9HnerR5qLGW6YeLIDVKdeeQj7ZaJabra0X3m+SjMh6K1202dIG6o
ItYa5VryMkW4jtpL1vWhzWc4DPm/KUYPKIf98N4/tMpVq4MN1g9fyEaQAAf7U5q0Doti9jW/0xpl
019B7Qj5X+0CPYJiPjM2T3vAJ51kSCv17k2yjdc+SrJp8i1Pl5OSEGEcmoIWAts+qOvt+6UURC/B
xMlmX21m/wIq1W8L/KyQP0ZfrsHSZCFVxXIfrsIxfm9WbiB9eu23PWZQqRL+oMdAACJvcerwwWMd
SvQarfcCKydA3ZKqDLCqjUh14wNGLw2+IyCX5FGRDcgXrQJ2D3B2Wj4xwo4V1Cr8uhvna2xpIYSP
uZkYQLu+KWf/v3Kmhf5cydEj3tWTD+//VGU1G6esqbIPdooRKPwcmg43I12XkzXnv0r57A/viO3t
Bt0WcOyG2LDaFQaGfaxFM2aY0DRaIkZHY9stFn9553nMTE/sex5yN+egtqMFBi62rAg2rm2/CMJV
7W5HCvsXgr+IIYja7c5ZdEiQpn5PuxAAI0wHAKhKWa6R0GL98uYaExVmIBIM1bTEsMQPXyreqOfN
7apNm8fp6nrKmklb4EpsF5rdspYfIkkDXqKRyc1iwXiQt1STDcVLOpR55ygac9MxqeKe+JZD4ogk
BmSoDlxPRaaoR8WNDfwD6mXg/zSz6HivmhLqbOIhCswd/48GokskjsEZJlpogGVeYVxB/nSQqnfA
nAO8m5r7fXHsBoEC9D2UNkf4IFIUYJLdmZEu2uBFsys9fyJNMU2Qbf8udLlNHjb59WROc/Ww1V11
tN1j22Tyrxpt0vczEGfAiAWOekiYIMFUpAFwa+RKKK6ILmGLNnfCQQlqXuSzLWMPhB8+keUmweiz
BlAW4G+fvyntvKKG761PJvTaFQ/Z2iZBjzabZTCQ8XhsPgrnZyDXfmY8RQe3WXnTnKzfUUDPZLin
a4S0HJlcHYOrshDQ0W0HBrYXAfR1IRVc+5/Isg0s+rOTuWYFaZt9moJ5zq2nEonXwDkrzBmfqK5+
FzK/2mCgr9YVht0KX/G3+ddrdOOTnMY+Pyw83931Nz5y+b6ucisHed0jqANGb+rd4QxBTuPYVnRg
NxlXEd/ONf9w+Y+Xvdqh0K1I8V91Cbmy/gx0nJ//M4dxXeo5amkJwEVbauXb58rs8QsffRHC8s0T
rrZkGOE/iFY89q0iEuBHk1uORmi35FO7x1aauHEGBcZONUYscxU8Qqy+FFTv/nc6CRg+snSHuRWV
qjjc1vpsiSchXIUmyji6Ybbhhviwi54pa6DJNxJr4DV3TABWjDHmqAkyYZdFQ30foOGL+9EEkzj3
Hy4OCPyuTqpUjVEc3Q5Ksh+clx8qE8FGg2r9kh35yAYm1FerHC01bwBA6Gjy74O5U3ZYG/8dmT7T
Kmj1C6KBaOwAcF467AyrXm3PX+jq3q9TIRs4MJa+gY7g0mzYjTJFhYlgBowBjxn0mJdjVpL0hL1E
Fyf4KzgbYGmoAdLwe3FXLdQr+dkGTNu7nBA0/xd4/EiapxVp6KtRjACYCzu6nmbGjJot04vQoik4
jK9THk5edBNjlOO3Td+Q3KIeEAqTPG/RintBWlhdUQ1AwC5Tlrpb24R2TpGiaMe4qHG7Eb5btTFs
9gTIB4qSwcXnlMQI0H/eZrREtDmdU8FTq7Jmahm4wyoRplAzprxplXSdptRi/hqcfi7CZBX3x8vP
JXCDr128sstwg0UTnzi+hvzgdgVfDhHukZanUx7KQkrLngYInvWJ6lAjsu1AL8RpZv/A69Pa4d67
CnJmD2smuqyg9nUFErZFAgZ7tqEWOMqxNcwfg13MzAWKGyHuUSLOVmVBnXzfDOV+gjFFAtunU6hQ
oHO0jIh2gG8CckrXT4cs8JVKzN1Dvmtj3A/m8vk7YyWmfjKDcZPB8/Nc++s/9IpPHen2tODZeRhj
12Z46+Mk7aD8XjG4UB1jB40KNdXraoQxACVzp83eZWmw18rPrXGSOkAD0SQKwGumBQmSRrwlv7Az
gjFJC07gbssLZxrX6fvN1QMeTxdphhZ2U9hCf6ATuaqdlD43yN+Kba+vl1SS4JjCbw+MfG4TdS6w
OTeL11Ikq35kAwgRyWuAVpMUDK5FxWioL8+5qedG0Dl70qDxZGdkTP1Lc0+R4c+3gW843Hsne5tr
mrb7Zs5Rgzx/O9hKsJNAyvyYtnGM89wCfdIgJ3aPAmqeEts3Mg1X19/3bt172XhwNbO8SAZpjgzO
4qVMZtp9QkSc4Mxln1sB8wyfDBuvELS9oQlaFOq1lzDbKYEq1DvZDK4vpeOJIWNP0gvI3rvft9ap
cRNQIwG9cnG/g7SVYG5UV2d/P/ZOHlV+f9q7r+bIl1344RYgXwALpZv9lHjYR0aiy8X6pdHBr2et
ficIwiyLUlEzaayVizxalFUr2tClznXAChhlqiVPlTPmMASV8affjUZoepa3QO1YkqN14OyB2DmW
2QsXTewSG3ULPqhl1nPDaIJmpUnuGXLFBnKZSN2FsSE0r6lOwsWpvvyqhiyu+M7QKH5EQt5JKUIP
Vc6jOyNhLV7WSP2bIYRgFoH/NCK/kTbNPokmqvVVMPozJ0kM8uLkdN3FjadNJ5OKl8diDPS4fXwo
HhagfbulL5mjRTv4BNHtvuiL9VLPP2AD6xiqg2gL1rfo+QNSfxtIckwHslmdCzvGS9AQUtb6FvqH
s3RD1h1rxeWCdvMHfmiZ0XjcbYfN5jL+VlD0++X3IZReQ8vVTUuU8w0WJZ0Y1vY+BfoewYfZQW6g
Roc/xHpIp95xxNws3+5KzBYGjW2wCx5UfxqGxqedVycLV6k2GKc9EHn6Ree0sDQiSLtTRqelnAkB
W88IcMigy+2LPei5KTEiIPFYOB+ShAJglajalB79GseQv8cuLN9UNYJZiga3U5APMGBhfI0mH1vZ
zDNfCm3vMPZgkcaz4xace93Nc4HP2G99uPFcFcZHgUypdaJ+H/HbMVdADIs2hi3lLy55i2SYHGsq
tK7/MoXct/MjY0G2v0EzY/ous/SUCAXA2kmXUHn3tR59Pu0C1jzFw5uwAO+apWztFnsQK6+5h6Jx
x/gcZyZGVn/IjBrVnuj5dYz8laPwUhlWUOjacVrILx2IEvUPFcyIkI2fqXAtKSQRCy8bTheDdT4G
xfW5mznl3Z/SyDj8vy4loh4qETvbHvv0MOrk2H144DcCkQy4iMo9s2jToaITMUL3vGCrhEUMSoLM
KtiAzP0Oe3TLMkrcM9lL7JwhuOpsO83nbrbJP6Ou2eH7zoInbGur+y51m2dCoIQL0+SD/b4tM+Dr
YcLa+z9LkE7b8+hRA/eeA/Onz2utUGrjyjueVz52qGichTI73OOlQm64PcoFt5pqxoEIODuAqrNG
OymX3SYOtlaLTg1xYI9NX09ibQSsRgHEOEhnDd/4ZXG6MG1gjmD/Aumjz/MnUpe9IyvVkLhMXdS/
me5d2g38/eufzQ+1Qr1dZjHWUtlVYoZ7nhkFU5RVjNjCxlyfuAtyiaE4q9ozxhEl/gHc97tYqf+f
aHvs1xNqtc6h/t1PNPisWLPpmUUxBijvGMGCAk//DKdOWV6L2aAvF1UC7hldiINZgQmiD3HflTt6
H1ppYNnYliF1ZMA18m3dyOTUo35Y7xatgwsdd5vQhuAz1aRDWIzqqvuQtwCRBfN5L0Fkn4lq8G06
m7t6scfJhMEsOBpIdawT3n/f4fji9M0uGIrGvHYdoGvl7b8ZlKUdFS8z7/4R316/WKeNnbbNVCvm
ujh3kGew2MbrlD2p9zqWTq4BkAvt2Bne6Blsxp4MllHGPawyMIyUAD3xeUxvk6acSvYGIlAG38oK
yrVqxuHmVu4aJUqJ0duyX3ZYnP+3Bu0FdbqLElDquq0SNFxuWS0Dfo7J9wlKNnZs3YT7HIJIyqIK
OgMUgVlUJjeTFaOe6gqjhHiLj9iWFVFe8pN5NEH5sJ9M//d3e0CvzT3fwd4mijKYATXHQnfbGokq
Rv4rmYje4Es5nD/G3AEe6Hl2nSyrEFYrkKT9KpL7ippps2OG/5XWgEuWxzEm6Ohw61mKTLdhsDsy
ncLOpRupP8wDuGe9ONVK8JL8JuicdRfil6uNpSVrujl9nTdwLj1sOmExffu8PrLaWeYUdhMm+uab
xDdc4TG54SOCF4CLlwFs8ldl82IXfJbAguzz5x5nFKgcW/KMBFPUC44L5QqZ8hZIMDKum2VuH+zg
RColx0qdmFdXiIWhlLmJznsRPieGDv/0EkgAfNJekPaGLGNLIFD5M7i98ScXq/WOgSjXH0s4NJ+C
OfELVKtsn0ScVF7bvAsAjY3g1uZeIQN/iEwovTFRl3R+ZALymFz1dohXYVPLi3oNef7JkYAsiOBl
ONT5ppUkO3YpefCkmuahtV6XGuVrnIm25/yONWcqgUEx/33F8XCE1/ieO3F/8YQ0vegFRKi1ONGT
uribT5wZYC7d5CQXD4nfxb2iya0IGbL+o/mG4VyUUS0rPhLMlyD4u39A6mLlYmxUlDSDEjzalkPy
AY2eTDC7U8cfT55lqaA/gORlnVUXgtIXfNiKJMxmJKSWYdYKqHvmBVh4zYRHI04/pH3GsCqkmpO2
vZrMlj+CNjvbQlooZ0aie46qU4Tfid8L7WXFiKLRg//vv+UV0qSpy40/0NLj1FH2oCKrZL4+kknO
QxqmdGuX1rL7g+pJGHrz44IW06Z+YmImXAdJMVxJFfeUUv4jtpys9j5i8uHKqfrIh057Z5veEcVt
o3P7yJhWE7yC0cCFGLRQcV7cweCGLO69ePA2mfN/8D+vbetA/AFi2lmqyX5uuLOP48vEjTVOpVuU
0JbGvW2KwiAgezcpSf5fxUwkdA9gp9IQgUhFPKdMpSk1SEkBjGE5tFQU1TEh6ZZlj1hs4fAKo8Yq
ptZwolAF6HRohsCHo3oAlf8R9CZ47KyI+qXuX5BAP7Tzfm0zZqAvPB8Dd7uGjFga4PdEfKJBK6mk
zufuu6l4T87kSG2iSrUvSzJwTNCrLn4NHS/1U5YrCQw96m1aaIfbn0sDwwx3iktZdeigGHaLFy8z
QBCwAMpiMjy/QMgk7eadyzhCuF45jIMgHugw+BPClyqyZ+ejAb9BkTkETeqdAQww+W+DpsCNIBWM
QPuLQs0df8eczjdfp2njqgR3+ZrNdb6VC6uCh3O/19X5AzqxLbMwxb0JFLZzUAxkQEI5FQxqCcfv
MV/u86TJNPZE+aKU67KxKVphPDVTaPm7DIGZU/C2OI8THGvlLZETu4lnYn1Enk4R0xQ31aBaDdBT
ufJggzlqPQhLXkTYZDhc8xKyoCAT2RYAfsgu+UWmYWTCY5N2aXO6Otp1u91lJZVpgSBG0vYJl8b+
nDQ/SLYWTt67wquVDULdS1GTlHziV/FA/8QXA+nk/Qd4DeYfItA3IGKO6FT88DnHCMd2C/rXQE9E
xAzOBUlYzEUTNUKWqJVnaJSZtM4q39k/zehI7C3xmUWCqEUL8+ib4tXyrv0G2VGfbsmxsxfqXSdK
YkAg22bTuUu8adinKKDjpcSZ/TDhXMXdNMrwskvEVGjzXQc2dX6J8tvSqqiAkVWqW3VLdQ9S6ORX
u+pc3ONTu3btIKDKECgd1lqC/ZiDzHCWzCEEu5P4aFMyvyCAG3TLIKRZ81TVPBsWTDI2v9LV6YBK
GEBYbn94QAlKKXU4DUjcXVjal6c2PcGoN8LEBEZKvKXRBCWSpnmQgDC0ynjA+CbcrlRcV/23H9Pv
DT0dLA7KiU9s1wCb/SDr8OEj3foDcneYKtT0LbumM2Y8WeXDsg0hx7Y6uep4iRdThq5NNXHmatce
J6hGk4Es9S7DrFNsdh1dkY5udhu7tSSjWf9FzPenAPoQKtt64876nrUHBeqYT3WbA/KFX9oH3Ilf
762r9rbIEz8PEIGF6j3x7JIbKNxxGxDV2TJeC6SU94JUvgh+dvb2NylTU68gGVNAhUPzh2jdYDga
dN8RA0F+y1Lvi8/3HZFsvKBeKOn60NLyXXsQjTRgaGutI2bcAqtJC1KvWADgcg90VCPpss9r1ZQ/
Y4grhBFKeqzKtYJuw+wPpaontHmNPzQ6rgm4n7hHCcdgCPyc88nB5bhvxk3xN63sQoNfgGcRcgtL
4bpE3pm6rJTskN/XN7GrkzxF9xPwRLXvMTi4VnJy6+tGi8Nu66PvyMRelQ9ilZnI+4rpUaceXaUT
JCn7IGVGoH5SeZyPmrPx70lTCFsKGEei3r9F7YUQNIDehkzvnCvZ/jlTC63cFya9J6DHH/t/vhnU
UmsLKoDynNKHPg4B+NNu+r8O6Q8l8XJ7R57TKtzSNbJsqb4GDE7ADQjsxvwaQMdeoafOfvS30D5D
eteUjKJXgM/ExrhYypy0perNjRtq5DHGgak+JGvJ1ASwlSNi1CxPqB+lg48GuipM7LU/i6kwEnSK
oh5cGUNhh4O6d3SGq1Yqd9yeUcn3LKDN5gHB4uhDOzsIFotLvwB9X2N7RA9WkubNiPOpE8zzIh4h
BH6ANq9WK7pG8lli+eSyxZ82YgaU9xSbRF3A+A1P0+QcueKIQzfciiMcK+fVLhYMH8mh1b6OfVj7
z7VgyIcXUc6QxdaonLMSo/vmYYv4DEDAopnohdFfJDVCZQ+N4G3wbExM1FQSkJtOCsP5Mr0NFI+l
gJDQltTo6tZfcloHuQkABd/hJl3kno98yvlcKQnRu2/C8xwdEPwflh4WQ/FuIT4EQYliovca3KgA
alX6LL//KpHgYAVqqtOdlItOvl3dOBSmczb+ErylYzNU5Gffy0r/tZPJpr+HIa64MpyybbHZ6yzr
jcVG3M6y5h2x+qS2L1aBda7QHHdylTyhItWq125msDJawx9/VYqgNSPkWIWUoLEw+4Fpdo6JcBfO
IsB9XvgKaZhzfgFDBQCsdqWig6Ra3CnY7dL82J7weiNPpCpgfUpAAOb2mGWO+JmfdlZwNUSn2IKV
EPilbzi/RMavMLiRvcrc0m20Wx7vRtceENWsQR8Vnt6NIL3Ji8VawNBc8VKGv+zbVNlv6Sm58s0v
o70PdQCEzYGgiz3CidgG5QwiKXu1nq1ZC5+5VtWGDKEGW3pLGwzrtaaDxJ/Pdv1OzH5h/yIxJNM3
xwoVq+0s9mDQ81Q9p9n1fE5SvDJ3UABhU2FSNmd5hRoMcDQ8K6FULv9rYaELyoCQWzGIkkfzaNCk
bCY/Ov7c1+g7r7J+vllm8EsuRzjmz/Tcu/wSvb+cCryRxwFXGcAIuNDQxIYGNfHrSMPw49cM82Mk
/2iNVD5xYcfmCX+R4GxM6CZy71a4Xhdzz9BbstU4XOxdda2ep1J2F0s6BsRK9FkLCdg65mdUWFPa
teb/eN3UIQIdp/ny+GqigNHnKTw4e4eEA1Xf9EyRoKsP9WfQuO19HkOdia6CYsg54aDVoh7iTa9b
bPWi6DA42+TDkDtnCe+MvvoIUsSvFGth3W0tVm01o0WvBvRHJrMckryS+NViivWhq7U2WUuV59LK
ZHoWXHSjVV075otRh4P+lKJCnXdQCKBv4f1JujpfHArFm1n2mj/o79myR8MaBL82ptccs20V9r+K
6If+6uWPJY5B8QDMpv3PWfbWBSsCtymrCHJ8mVOQ4f6vYaAsqwWWuzvBe89LDsvT+oPYM1CbqL9d
r9Ve09dDsmW8AEvQ7OEZDReI1O9OVL+1OoA+g9IB62xHuiKd8/amhbGner7eK5ltXOUFfi7zK1K8
J1pFcdJUqfA59v9+AAUAFumMzrU+AhQt59nhPtBGZcacsW2nx6JuZzP6ICwcmbQ9yPXNavIKq4AZ
Hj41XKty7KcV1ZlWSPD+vaiFcejpz3hjKtcncqHQRQ0D7SZ8pSwjUMHId5+pBypZsE/skYrPbi/J
uBao6w4mVOnGqx79GN0vxKcsSfIAoKaOACf/jeafFkeo99p80St3FbwRjV80Il1X8aXeOxtGaqBP
7vUZs/A6PWrw3cIVIsQssxEcyALmzvWTNBitF6a5XUA+GrolAxUAPt5vaKmYhuNwQpyS2MHDue+c
Do62JAIEmQw36A76OsLy50UmDc+YdfCLKYwC6B004kHLgNm006+Jw/T/Q3NLjILXAfxCGOqWOa6z
MIUJx0xrz24zrzfvwl1YgGx+Q9s/6vzFBQVEYLXRimU5Ia0zi1CoQMzpvF2hzvV1r7H5HI5oD8Dc
Fbz/oY2TrdHWM60aLglC8g69xssAWUP+DKMjvt827nw/tt3W5HfBr/m81Gd2kaFABJIbKF/BC4nP
PFC98oyg06hoP41x2MH8hHycOc10W/PnqDijXp2nPVwHmkAjNXaEmRNhFQrRJMfXxi7uj0jCmis7
SSR9ukYRh73Jp2bSZfLfffRhodFuAL8BkxPJIcIqfeiyTc+18dnMEfqRqh8vXaHgAkiezPLy4NWc
VCwYMThGs/GF0Ch4pNAIL4JX7kPEu7yud7N7BDw/5l0Z0OIelix2DbGYY4xXoEYaUquF5DRAnbCn
x82Lrh1dr6kWdoqgG0q3b/O6ryOSycTzHSCOLaMR/jND2M9mVbW4b4hFUPlT9hc9gntq3AP7i311
IHSAOO7HEk6ndah7Xuj4t2k+D7EnJtJy/XNb7C0twvD4fPtgCcCo0751kV1iB415xFJL9Q08IiYZ
e2kxEE7MJqrvjp4QpXmWF+b5AyQI99B7+F+uHyVnujThf/Aubtq7lL7a86F5KMtCYZxyg4khz46+
F6kw83Lrw7CsqLyvmFfrnRLYqGhIaGJz1YFdT5IKtJ8Hy5IkU7PCGTawTuAQmNI0Q36ikNcH6u+1
sM26ZV1mhrn6S6uAWFNNJZD93Q0ceZCiluLQfDnmVh1KEFEAzYhbOLDiLdaSdE2BlGXnL8NLTgZv
SzWC36rKtaLv7n17xd84rpC4vYotJQYiM6N4mryOZlch4HstxQJY1qgRHp6wZUjyr06QleD66eZh
DPrOJY0aBHE+FVYWUbr3+xyKqIFkSm8jGwoK+mfgHd9UdiGUilYyY4VBkbgtyMt/2nXFvpaJGORz
VyPnnndk4CQdIJakqxKLXoIhCHZRos8jo5olF/S7u+L4281s5K/YZvfuazmsII87qWhiNH8amj1l
xTlm5bdNJ1k5dhZtljzKr7zMoaA2es8ZbPqDMOnh8egcYAETkC6CpmrvfiAPUCkZU9CBt0tSCh7a
ngj/SnPMxDWnVmacXASLI3r+a6YT3GvFXWSUHw+BrbF8+j2jbnAv7i3bqC004dFtwEy1EaOLoZVJ
PxoOHoiUJCY6dU2e0RXqR7NKYaKvTnkYItmFfPJGxxJLB2/w06OqpEYf0J7THVA7jmIg44PO3D8Q
2KW+Eb352oD0VjfZhawF9Q67ssoyLW/62REQfSuJZpLEUHrqyWk3OrwvKMeL0ZsigvVCWKtPLQV3
hA9zffxIIfDUGmlYPcseoR+zJ5jYbjQIAow7qnUFTpJviiXJSXEfYjy23vkTHHp8M5LcsLeCYxWY
dL1MnEYH/JDSltSaZfOPXCN4f6tja9gVfnd09hajU3g5Xb2HdDKOLzJQPZMou0Dd2kR9WUFrS3ss
I+7D+UT6hzQmIzjY3qytrAfRNXySTF7ogAyfCq4KGx20oB9QkV9ibDC5BhLDbsLpMR/FOCezcNse
izgp/z608cVE9KnoHltZXx5nu4VA5wxvxJT/4V9zvQGERSrgHclsSr7FzlqxM/PCT9pDDeL1SnBQ
z6H7GduTLkdnl/7NdGn1frSqn97pNuQ4gacvMyrciWeeD1JATH5dh9zvQbVwtPyVcHlZZbq6MLdw
If65F7jm7Njctl5gWY91YLDKqNzW5QUC0EoYBQYCHo31SBsnuSriB4268GQ8gG/GHlSECFr2PlIq
wu4i+RZO4CK4reCm5Ill5RtCLbX84dU1NB3Rp+7h1aLiKiPP7S7p6JhdetDWHdDtOqa/0eR8ipGw
Uq21krKLb0nXlH9APHlPd7wPO+cg6dczfTMrBZY3EvPERDwsKjOcFfBG7hqfOQCHQdyji08NruqL
liUhsUXFlpQonofBqvkWSHEGmTHPt+xKP5gvfw/WpMMXMKQ5zt16ZN4yXzRdJY9/l0Za82IrXLf8
doDxcrtjBtTzblIxUPFJbqyA8t/xLmoYs1WkYzBuiBGEpYKDPCFf/QmLE9Zl1Y6Ry2GSytfGLTjM
yNcQmPgPzxMyGW1sf3KrDdfC4soofxKGINfdu7M3tgICJIdSZT9CCReF8SCDJ84jLH3Q3WHCqEV2
t+Ta6CgzBmFmXd46E/6teN2GYhFxaLtzt99270OmGpgF4cGPKPV/Dtt0PprBhTggi4yFLfCpakMT
4g1a2OqQhWv8GkP/QbV5qRj1wAemjdZ8g3uQNSTC+HS7NA2ku2jarXe5+vntzk3bB3jLs8n9ANeo
ili1WQbUSd8u6xAWIqBsZZsN+OzmKxIwohrt3lGFctF4iyR2EPdu6CZbGm3nbZpzEB4hfVx/E9fp
npjHnthIUnu3NGqkTgQKp6GURrQX8GeP2NOyxDNf1d3ToTehSNqscoNu/37S/XadW+WqqksFFY7q
SmAX0TNDzJJrOXBZUjbPzat8Dg5gvca6MUuz2+sTlpeIHJelr7zI3j1Rw7LRgmy32U0rkI0ZCSZZ
fGnLHLAGx86LblO407Q38ub/PYRm2mZj4Lv/XFbRTxrF5Rb13LueR2WnYIyKWclEdlsynBdLEGNR
lwZ7n56neGwl2mFZpxSv0SaRm2rxqskXE/k/wYKzAwyU0OG4QQdiYdscTsYbA0ie9r6UEq/L86VD
NpPQnuVP830dflJvBqbUnLotntC9dJxNwC2TwdoCgWyfPJWU3m4e//hfRfY5u+uutPLvv3iADp7S
Kpa/lqtGseZORBS8y6o1KbAn75Tkr8+QSnPQprES53DXgTr7Hq3KDucKdN/Uua0g56gMFxvVA/NO
pN1U7fXyBGG7nSE/ixc2xvA2I7rH476S57kZi0o+NO0WiopzsXfoNM0wMViLlYWWuRYkPcLl9Ywb
TE32rGMELU4LP4rnYekoskx+BITNlNWGdHk2YEp3n0KAAsuoZC3oZS/GcYYGHPwqSEGfSWbz4pT/
vEnXqRv9vruraJr40MAzpURKP7567mqM2fCwTIS7iL9cWXeiXhSKb4TiFR1ZOXcKWLJHTShKcqeY
flPEdKcFuJeIUzJe+vpVzotXFi08SbwYmvclCuwpcH7qW8UgrKOPtiE22aPpuz2HEqPj82M56li5
UdZbO4M79/39JcMWCNO52nJOHpowNLjghO1w/ogFPgpNLakx0ZTya3UxfF29gEvVwrx1dfd2J5y5
g1MQ1dHGWmsK8UYyijCJ34IF25Btx2kQiV0ECsDHlGAfZVwdH5+ZZzK8yIuVd4255X1NWKVZ3kx/
x9K2tYv+dkkxawMnwuVCqLAUcRsrhz3hU4442oVo1RdYgTcXPb4WHgHQ8w2OtcXPZylpiYj7Q/qx
YntvZmxFNSZmAE17dyI5AkVkgcQ2zlgw6VDHV+WQzpdNW3CNJyIVd8u/XjNjJ13EXCvSU2DtEjSK
JOPrbpyerHfRhNAwJry5p7BTDuqj+53Tdg/nTtphf7e98gHNN8Mk3tLevXK9nME72WulewFlrgQ/
lUWMMPnGNVGHIdU/2r9QTZ4n9vdwVNycOHu086v0oU408zfX6dui7/EjJKrGmx6+GSMXxrm45FNE
xz3BkT3lp+kleUJjQawf+w3oNSLBuf0M7ZrVHEkWUg9lkntan8bIySVGdn19MV7/mRL8MliY55gI
PZcFAfshUpzidIlsPtNiPTSN42y7u/oNv7xhQ3QCWxRO0lpzWUwl1sgTgHQz0wMlkcoUK6UM7Enz
GeX0qsbFFg4Qj1KOBJU6O2lPbsf5cnSH4baO8SmgvM/8R4e5MA1MXOcjATf1p212UBpkigjbSUQd
B+sPvcybcYUO/weo35Qfz019Pnodkr5CAjW58dKAV4WhZPW1WVP46XcoG79Any3YSdJXRcj8k03g
KxnyhMZTcQl7hGeD3lJUXBbBs84Uyd4GWOqr+UdVhK1JgCxJzQl1oGDDJz5IreHEeh6AVmFPhKSa
9tLUjn7Wy/soUBGpbt7+OaBGUIpIoovENNQ588DSLKpFkUcAEA5hjBgoq7XY2wOQQwPVuhejSng9
T4xXvDnBd85R4f6haMLE6OcyuASOp2b77Y4DKuRifjQQ+OqAwK+9rZlf5gh25jIgyyLMbCBfe1NB
Bp/nn8zAZsyogQIjEZi8ZAWolZoirAP3QRO6/IxrzbT1LUDN0AUeJ+8khzDj/XJufci2LtrzsZFs
4Exq/KDSHLfVsR/ihD/Y3R5mygu8aOT0pDPn9VXpaqFCzW1QaVDy55S7ZzYowwD1EJC9jkgoVBOK
6rOlWs331f2mXl59j3DHkTKVPjktr6SSqG4jX/nCa7Gv5f2RSJfzpiBgcWgXc4322SGh0UTGP1Cj
woinsIixB5R6+cKCPNPGof8HxvhorzYX0WIweeKo+Pc6KJj3Q3RLsJsJmjcbLb5WPV2fGkwyctGf
DhwULX9xlWtH87807KhGqDJXaBcQlzIFvD5ZmWmZSQkqqcPXXs5ICP8b4iaasN0u7x1wJTcA3aqs
yZC52bcHYU+UJK1xFWCC92PqRuGTz6byJAQnqQbqshr/+xmq/RsTY7T8jZEQU7voo/6F+ukRmVSC
BUXRzwndMuW2Mi16mPJRC5vaMdB0MjyXptYC9DCt8/Ljjhs8Ror8oJKZsgCb7ZZTWQMEML71ldOa
IfstjQ5l+jovgiep36Cvo4DZ6r15gnYwzaIUc27hlhyhNtRcbB9piEm9o3WR86rTjl7C5hZbofVD
eWZ+appdJ1vYZb19isCHdLBSHLGDj0xB4EYokelIFfj6CvKzQVPmscMDBvS48TQVtrvdgik/ZBHR
PGGmMMiiGmLCBYkKQbb7QIRviWWRe+zYbZljy9XPpUpnXaJ6c2CW11IgifvJJp55olmHUmUArRUh
sLY3/UF+E0pxCyTtA06aHHGhpw0wsTGdT66eZD2L2uNjJxDnKbge9J3oEAjQSfUrnTivSoI/LMWl
7Q57YzPlWuyc6kLfmua5qfXtSc9gxQn8zAKQ0o8JTTXzuFmu7xWlEd5ebaWwnRLTL26j/sW1M4DI
oaWNH8kq8E41bXvcwVgPajFdFW1gSNgipACS3CVhcBWFQFKtRdpSrjmW+u0KFlDsqPV8t1zIg55u
S+47YV69uazuqHnRaLgIy71vaYKV9CPpLKGEacsnfKJ+rR+V3plMV8ZKGhm4pWXSGAp6wAzNyKwr
S0zGfxguylhnx7SXLd+CNbdAQ15bCl3noDkegrLtXmFa1sw5tutGMcpERTRuZrjMAiSaMxTRe7Go
3VnmTMGSVwWhbi836wJCExml6Vlf2IwAu1wJlt3f+NfKs3y6pof/EX2Mmg3x/o6XeaeC8p5+R1ga
N7eTXEr4e+f8jgOFlimUDfaj++K0MonRpAZTDCUPK01fFbA4wjbgrwGS7jJh7KsZ0lxQhKDHRh7S
rX4gnUuQkiwV/rO0Ewaoihwmjf1qfw4yu5ycJslapw/IgvfJ15IT4ywLIM2/3YNcGK/sJEkdNvfb
tW/QuDnetasHX3bl/s6uulj32fjemOGRDxvT4WIaVhXuWk9RV2LAjnubzocmISCVAEumtC8RFc86
NLbC8opmJxNGLOSxzlspGnv76fE+TZu4HP1t0G6L9O8BAVsbrF+4jeeXFe3SD7n8hzAtrUX541gC
4fYLdBmNs0FyFSRsKy+YO8s++cgdcuPEqSfy8BUj4qvrQpDADD3hpxtMysZBm0+L9SQ8k90/ioqg
K8nQ/P2dtvpmbErCxtOfN0idqCRRAzXTIxtem5CX6q9of2BgUMufAZ41p6Ahc0eu7b0jPFtOBfC0
2v9PlNMxg7eyWDxld6ounJKJ0MEPc1/PxUgQ0cZubVfmpGpm4qeSebvOKYVs8/5JO/78/OXC4uET
/A5PyXpicIErx/MF55O/BvJTLDPPZkZOfEkbFOZVWmWeh5TjcAoKSkauxREjaZnjekPFZcj1BnDc
da4EqvxMUPk3M9HItYGCRftSy0hVlPzRXkcdW3e4HTPQfPeJ1v8mteCGC5eZ8sYLSsUIcrUX2lSp
bs3HBsisj35DGxBBVCCeDEAjaOyF2gjCba9EcZFjJlfYpxjiUEfQv8YZEILPDywdkgFaIW2FFEsd
aZoOC88GpCG/ZDh1g1GKB0uzvHIt3t2QBdA6iD97HBe3+KiIRZYXgPdqp4p2a4nN7bS+C9LgKLHM
gX4F5+25nKUjg7XapVRFo25Vkk7gRFBclY3dKHIQYJA+dW+OTfuc3BieYrqe5kgKfINcv1HNoi0Y
JmzqSlUiV+McpAcGgRwuq1MBImhjIZLsOP58ylUwSFEpduyqnBeVOlYhGQ1Ft/DttZF0esY5WkFj
FEr0qw8FxwqfQJ0euUqCHF0ZgcQEeUSHEdKmtsxmrY3OwKNPbtUbD01AKLg01Ciqu6GUESk6gZDi
8VgyfbpasNc1FDUyw+MnOBsRWQ6+3r9AT8pFXEzO6LHIwUonKFoIhdvryw+mVI59G++jro67d6Bh
RQaUFZoWiVzLvcZ7z2zMbwYI/qWipJYugH03GSCH1Jeo/4cnZFtkQwwQHXP1nVaji5faxxU4e/lR
vNtqkmOTGVB+qMulpIPHu8jAPQLsHRw21VvUkQwq1CzwCwrWlJWV6YJsULe593ms35OxHxSxwl5Y
PUiDAyvnzTATvI8tZqG2hUHwMXQFN6y5lDUJ0An087BiWoRVO+V9qdmSwB9IX8upfzt/DRujRF1G
EX1EeB3UsA8x4VG0k8Z0VxxYtuCJgugDl5q7Ek1O3fumRPGyJkrVoMSpRTsNEdRqOMS+E13hN1yx
ZEU4rsrn3PLX7G65prXbfHA1XhFRru8f1EkFy/67uhohca3GJ9uPTM7y50Vj5f2aiC75EdaCODQt
NKeJmMo7Cruff4RDy6yRa3SzRJnTMEDK3XAGAjtdijUvI1aPQmt3D0qnxkO7WxtYZ6mx6wWpjQUF
zJZ1/Eh12GCFJJ+K96V4sFdVs5g/SfK7TU//IBTul4SDL4ghesUygprWECbRazKe9yDaQDFZ7O7G
KP2eEcVw43HpHep02RLC1qJ132ePS4U9FodtLYiYaf9lgTRSinJs5k2H0DyxP50GdHbJ9jMSbFH9
pwDlYPNE+PAdpMU8vP+rcq8duHtk02zQTp8iY5FeNguAqh2H6Org7poOT8QcujdR2xXbpvXo2JX4
YhyfCP6XBq/9+Fk2eXw1UBTIUafPDfbHWHsu1W+BoYNxPApfCIr68HLxCYZtZjobAhpqi1qCtK6v
y20YRa40+d/j05qAr+yA3b4TU/08nbhGzkt08wjn2JEIxvGG5pUCcuvGgeAp8Qr1sFi1SPAvd6vm
kaa5fZSNlf3aM2SqmdcmLSPApSlLbeCfvKsF2FDs8fO/Z3+pyTHyBQjLfofWWNa52iPydFg3JTfb
tmZcVUHtjxydWN0uZ21a52t0UC2DKE+Iu/duynZwid2ju/NKh2uMnXAMdsosDQHX8NSp9mF8u76a
KgznBjocmXVChad1ShjRBZOXkAZAWtLrSAutgTinthSCdphoN0AxZ6vHvOhgrQSrBmSSe9LkwU+2
xE4iksG3jWOL5latciIoRWKPmDtZZOiVtulg1SfbRm1kMEHsYyXO9IiK1ZmF4sV2sqiP5e+NxXw2
shpK2kvGSXRVWDK0k7t1pk3u+Xb8AmGOiO5SnqE8nEYPuFOSfhXN/7YZ817CKOLml7ZW+viYEm9x
GVFyUgUkr9TTe0gpNtPVJanvdbZwgaQTxFAHIc+2bJiolBUWUo7gHzRHQ5MriPaQfoJbXceQ5fx1
Gzmwx9m8naB2j02W90Zm/II6TLPqqljMh+QJXcqXCKUhCjArQ9LCtqDz4uJEgkVxkMXwAse88u/m
lO4L4P7vw0iVY5e1JpNSSxHrSCU6sUS6fKkYhVmzCfrJmCewHHRrJhUpGTV8iXWJTmN4OIcKGRHd
7nVr5Gf2Mabiy/7pZ+exL2vOOlPjHtL+zNRyvTcYjqtXyniTs80mVQklCreRJrgCQHfhLO+CPdcP
GkAjHrgGFQccrmLzO0aMGQPARm1+QFagsv2L6gQlKDvYOLsaB7xVBzP9UWyq7oIPqTgC1HKyfwpX
k8gpqJcXcG+fAPMWA8VlDryaHM1xBrLgnmCCpcUVcBZcDMiSG+zSN/4owgKqAPKn6w2SThaVc5fj
V1FzWvOrJLMtQG8VldjxoPVlrgCbK5lz+g9dWvfuYWyx9ofqvEpQZZo3cTkvEBFzepHxOtcxXVXm
59h2nwCdKIO/9zqTIE0IykM4npd2yr8386zlTzEe9ayAKXZCFKhJ8MVHfL7KxAhsc7z29K0h9TpY
wMIjrjUye7jg2gMhfvFtlstBlgIB9chrNtVGzQGq9eJQyLv84euWn+oyUMNaUN+FngZQnEW09e0V
DN4X+15+UAyriEjJ4yK+WFP2HaxwaMzpLfUxJB5rI07mrpiYW/EOo76VRVpCiIVxMlgqaZQKMYU1
TreaCSBoca4B21KPXHTbzdOMuGUhbLoGNd3lns2p/BGSL0y6bw0JwLpRd2RDqsBAsuYyrY6Ui01O
4iJMEtDwuE0iWAAiKFAOU2r56prCUFwGnpAvKrWEAhzqCVAuSIl1olWLl+sr4AX8YyvVFuLYf61a
b5KgxRrRNlKqIWObCREpgq1+5E+z90Kp49wdjMM7lSjef3peYZ2wuQyFfzuudcX1fx/FtiE2qByc
d0WJxMAA36aFKAzni1o3uuBqpNl3ug6laqehTvg0wqHGBZ4bOwO3XDn2hAwUVyOwm7XkpsuJGEgY
RZmlJR7S3leCtr1nliqnHLdDhCGH+hI+zqLCsZV1M7FfQS5twljGy2CJ8y7xsdXWKsT0MI6zsziH
EzsTgx9CmRT8PoLX2LWrgloYN8B+/MqQLV6VrzW8j+ZNZbBAfgciDgyOGvnSBAJiAbv/G+SHSV7/
0Kxx/x3gpziMS9IVgjh8pElipnYS+FHV760d1GNAYsav32iHAluhADRPrtxODyHFsewp4ov0Dt80
1XJnxwYn7njRUrx70TZZ7DQS6Z0CDvbS+rY/Ey6Q7SRWxiZoBVHh2LELrUxtJv9qZnZVuJdEdUK2
2vD7y2TzVH27t3Jm9fXJK8EbjiA2gKamgdqCidTh5DqUvrLoAwe7QlxeDeocK915BfDztV5k0VXF
our5GG9ocLQelVzOdRRCD5Y8m0GLK4kHCG4jQJIqN2FU4Y7T5E9FxkySFuj0AspOzLB0isi8mvDw
RXEY4crN2spQEKFIwsZeoeEHTDbQhOtPRdimTUtzOiVA+YXRcwYuX0O4pLouUSRQAO6oW9lOLYGL
m8uclt6eN5lfSZjCLLzoSOROR+lMlhWp/npdYdLLQFNBY2JEK7ux+DQiICr492aXrWLNrmu+o5GK
su/VVLhVJzAghLeK+B5sP5F4hyxkOP/SlNvbhi9k1WVRl6Y3dpvi01LqThXrK13HCfJpDA07wtJl
0v+fEs2XftG7a+KoYsryMwfVP3FMQRtyhAHr6lF1uQPfNs3R7+4DUecW4oWiTRuozzkIjO6zn2PR
Ioba6gTGtlz71+KusK9w/T5+g8+j/Y73bIsPMBE5/+523cPsfxvTM/4FmBZHsIy/0n6TRtgxeUI2
/Qnipa2UlODkRgoA1c6FagSBf1wUdcY4LH7sAuboW06rP5pgvyx8h2l79qPXEYb9/DYhb0WQTQik
xCm8uJ6OURU4PLiftlne+oguykQw/tWfL6qUOvSEfQe1QBH6KHZuC/nEbY7TmNqoJtoECoF7Si/k
bW8slxVsfaxbXGrZnmMx8bvHDfU542tI9u9mLnnsm0r77QIiqkChL+PWw2Qptp5LGiMm2GuNVpdg
Z3iOe6HnAdM4lxb4F5lUOV5/LmspRdOLSEzxm/i3oC/KttHEOxLHHbIZLnpJJU+7llDMiTSQ/Fp3
acZf9Mkz/kvlkQhxxJfGcHqQLaVqd+rH+UHj1gxzVs1Woo4rPsnsd230fNIwiF9wfAHtM13LlhqV
5D2gzQU3o6Qj5MBdw7xEQrMcULxoLROuAm5Luy2T/yMmsWguS2RonttOuqYpQAwuorJzSP+MQOqf
pZlaZlweUyfsrCybXDcPIrG7oPrDy0NQ7D7jNEjjTcd6BypdTq8eo9sUIcFeA2cvD6742Ps3hl/Q
CJ6Y/r1OlKSBo1rKVmBkxRffQ9+6IeNnmwlvjGVUKC0Nl2nSxuuMxLtUTdS8v01XKkvKuVXU6KxS
jyxcVGlF4Rkv9lhPR6HATS4V3ojWeKgrYHKb8VkvSFHG1Jwf2kwcT3ExzotU2yIjc9n9lkm+xg8H
o3Lb9vr0tvaBM1jq7fnerF9LzOPBMdR9J5SM8QVJzpBU80IbL1DZtxvvakLJLvcLYdmCwSXsxuWY
SKJZ+WOxXcPJj9dTxmP6v3j4gqDM0iDQyH6RHpngEEkMSXsCCpwtQvqO44lJVUASeUaWB8bs7uVL
dCy0HW4BsxdzJ6p15fknTvyESU0wcFZLC7uthSjNKuDfOEVg4IYATyJh5yy2z6/xPsrfqKiZ0z7n
q+IvXkCcAQP/CoETwWBI6YAEvTseMUfVZvQcIdTYzqgJuNJRWuH7QcWv7GNiMdQHQX2ENhzx2ktI
ITNhynQ5wNClLPdVBLBBcsQEue/LqJnj0YjBtCCQiJBNStShb1rTZxKs6ban+HR2rZHLj/0+VRc9
1OAR/LaXp9mJB/8LFJqvZcrna1neZKFpJl9Z3XrszT4w0eJBNa/uToqwXpO43edDxWJ2TX/CMu/P
XX0KOx9aG5TvBSgPxnVfmgNG+5X6Ei9m6+PzQ+nnU0xS6FoTXEACng7bviGnuc9G0UxO+0Bnc8yQ
6Uhtl1wvu/s7eCChYG2av53fmmhk6+2qnGVh3y/icOUTLWGahwyBMoiCPjZloF/fkRfXdF8SKevG
rQGqg+4vJ/8/x9oVCIHhMK1GpQ13H1QuidoMUFR0+m83fZN06xylQmldqg8KE1TVDvGywnNqPPbH
6+lZHpgJAGcK74KkQeCoVqC/DaWkGdC0OjdNNQKg1Yuc+/VEG++ODGBZwV/9QfUISCr+TwQER1vo
cuuSs8n7EFsdAegw6YVZB3RyAzdgomMtKTBbefgUTwLL6WRI7Ts6R7Fga3d+5yO4dDGVIEFovnju
D2mV9zhtmRoXGzsqyjS0fH9fK3CRh+4g/iKf5n8oOSxn0girKXiuWo93j2c40v2wG8f57oTBM9rc
iR9FNOc/B63nMF1TjBGvtj572oGRNo8TdX6DmJ/t5PKTqZ3QCCm++H9ZKSbDsN7GrbuwEivH4HN/
18OegGsex7KNX4paSttpe4IITL+rUH91rkve3PUmgk79ZH0sFVUxRlFDegmd9a+JfUzltvX7TqLl
t4nA8iAw4s0ED6HzSmNSCVqTGKZrpBjrf+nskLHx8lD/405usKH/gzcxfIahZ9FyWi+2cyPDkzm8
g6AfyxGZli4xTMtid/+xz7c/Xk5axi0z0YlyMANC3GlSInngsCGFB0d+ZYKb5ymmDME1E5w9bfzB
XVOoJfZRSA7Hl5l7tf09dsqdvt8RRBuVXFSnkuaS79ed2WePxhWa2e8fcMr20WbrA8RSvxMnMZPy
vcwkNm1dtWlaiLO3X7lHoiHQuE0nZw2R1zqTZtQ4VGRjQB446+WC6Wr428e+GMPK+kjCEnIDZhIQ
/DA4f1DtDcN7SDb64ARt7lno3lklWLlDEadQWeHDVWbC0wTZTy6OjUM8XWT+74G2a1LIO1gz/uBm
pOXuAZhFh6rawBfAivU1dIhn/eiAADpnYqcwpADCygj0vwQq1Gs8iRFsMn2vbN8NqL6L/hybzIYo
TiQbBKkfsIIKyCn3G2o4iYDrPD43xppfkx+ihXbmKjgC++Chq6SINacTQujskgFqtoQlaLGKELa2
IDc1W1l/NXGvX1LK0LHPc84lTQxVFhQ52CsTkKmDO4AJ/sDJCJdmwO9nO8l89Sa0ddyTz13gkxjn
tNDwH3Gev6hsjJAr3hmdjtPe7xm6+xNtqjQ1XZcWVJNrjYaFMKwFe3W5d5kjBPeAAwQ4EEGVfDJW
Fb7m9bBUdbs6unwYND0Gn6T54g4FhmPAPs1GWTTUKjK1jY3O1D+YgN/uKmvG4FqmhgEV66HFt262
yrVjJllJX/MpAtdIZn1G0OPQ7urkMOqYavMgl3G6kyNDfmSsO2EH1UKYTkHjT9YpA7dN/Vl/A+Rb
Qq2+Xa8xrFukwAh+EAOLQ2hx/qFa/gA+r6tKxy32oJM8ik9JTIbCh6Y0dFuD7lg4EWJPRwmz8HxE
eZqyK/i5yP22zeaEKTQYJC9BQBShklhvQEcjYlDGJRElIakwQBLZXtZK7fg+x8vj6b5UGiZRgXbd
4hV/9/LufMjdBWIRT5C/MMk1bTl+JEaW8pbApTELDOhCbdWQurPwih1u/7kffrmyFI27u1PcfHNV
ECdEcB6sCNBKKvDI9SUqJR5ov4sb3zP1xlYTIz/0v9V6/hvT7hsvQAwtKrtt1VCz5HJyINkr5h64
SaV2lULAeP+kDSOwDuzJK9R7rNmTW7mt1bpTdlxTFkKg1Z5paxzhtDjU2dl8u02uwpghP/9NGBAN
zGCIUN5kfvonWPT1JCxsYzp/4qs1Se5IK4anm9M5wAc6WcfwBcrQwdZ/VjbOot7GSvwCx6lwoDxy
EurwI0IQSc0aytsyj+UZ4srukXiiTUbdWD5CSpk/Ig0fuj7IiyLQ4+BUj49Mblb8zzQUPKmKW3gv
ZrnpXhtX7cpLDyzgyLd2nhm7swo/OapV0r9jpIjFZwU3ay9GIxS6ztSzYOJ3yW5ITv4KTSEzz21x
7z4nWMAtt7xGBFd2UslF9jPkeLTYMWIRQkBeJGZR5jM04tIS0bOOUDOS1vrHfX0wOY9kdpF0+asG
C+L89fxPLRHqybNcBmJN1k3KET1rGkoZXTb+nR0lWNvACuKca3byqr9pPlq0GI+SRg7IMcJRdW87
YbTaJu1mxTMfi5d+hsuBUw6ZIdIYGBep56kX1u5MprmLTdNIvflybUXlI1dxhiZis04eiTZJaj1Q
+wqWSlfmvIATwCCir+Pw0s5STvI16PD7QUwPk3Fu024F9CURISd+Tc2xZUWcNlhxOw/Thxx7knrN
wlTMBfktvGmOkp7iTFhJUhjOSqea+2RDLnCpjm/d8bAU9fAhg/xwRD/wpqZjnP+Y72uE+tLyOUhy
daX55spHNPcilcDaAK9SshiPTLuPI9KcXSl5XnqMIV84Xg5j6yLv8jp6vwv97/Sd6Otwvk05pYnP
RU8Tlziyc61aqe/YeZRQShwHf43cpzri72s0MZXOfyPJmYEeZp7ntbonjZEapJUIyyepy5X/2E3g
0FSLCzyndkGOahxc9xiHWIzfjkFhvqjsoNsyy32nB4TwyM4/qDxOkJUthj5HYBEENZbbJ4IEYdWZ
Zma9pVQkY5ZA8A9A/JTJabGBmxnHRrMG3Ir4fpdWuLyYoept1/jF85Vvgqu5c9EoPDvSTwGmP+W3
J3jgKg7hjlA6OTyCt6PZmiyagcABTMW6xXn6tZ9JaAAHYtR6yyCznWODAMVgvkQ5f4gl1uJTkk7y
MI1gTHE6JKFgfra5+797nnESz8VwXRdbbpWw8VPBuqvKCvMrb6djPs0zI1bmjFQV2oUFAq4nYhqw
fWgwgxKZh8fkffXuDjDpiEtZzBBU/2flV905bxuv4XzzozZnDWLngnbg1K3yJ/W9P/wyn6lQARsY
XKAL6+WxvpWfA5/t4Y3o4F4T0YyeiZzetpOwUlSq4q0NEaXQR5N10loX5EAkyF9hfYb3SO4V2958
2ep9hXNIh58MKJutcynY5uiorHg4sY07Hri2U85nePTiw0MNCK2nANG/Vz7otmGi5Gjkuo6Hl9AT
gy3+0hO4HkrQFlbKyi0va/EvRq4DqwzokAyhvRAcw7FqAF5RupuOTCkwm8EtQTTcCV1RA7MjS8+Z
PuCftocT1LWX9Ie3wGAkNz7j6kAyHV6FQ47rvKaA86nHW+Qv1/rayKda8gfJ6S1KfN5ka3ngArrt
kyVgdd05lCa6oukEHQJDHe5hGN1GehMkdtTHIn4Se8IJqMiB9/mszjmVbQtoU+vFL1Z3xukmAcTc
UvCuYRmTrLxxmwrEwv0n6lS9sjjhT5M6QCYr/ys1PcIeTj4H2IwMUKrrEGDjtpVkjJtS/mnRY8BZ
q8RirvY+cS/C9p0tN23AE2Rugu40HMuxTiA+94hfBPf3C0YAJgf4x8lqGzmq9PCk8pC5RD8Kyf8M
68jJd7CVqWQbHlxqkgcxS93vqEU+AC7r/skbBciJPb/UbfUHd2h4TMieZzo7wUI/TfBP/OSRo/vs
G6yVxJCp2QkZ6C8ex+pO9qChFbzDOdp/IiO9adSmLV0fortpgiQxnHAtcHdMD2GeuG8rWx8c3xaQ
RuWCAXaPPQJ9b3wXLAiVbFlUikBaTPNKXdQBQlh9Tbr2mqJkWAFx1zc9GvQdH9bfNNi6a/06n37y
fxueE97tzLIvxK04bAaGAY85eogIur+WYzgVX4ELCkMuSUHiOYuHkORlvidUWzQ6LKxXK5z9mUvh
KJ7DWYncH9ix1fO0egQ3Y36jfi5p1G5Jxp6EIVpDayPjFjCKFQwrLS5+nLca9i4yLrBRFvb1Y7X8
4PwUCGPGVwQc03rTz7BOkUHmmLh1D8cdhl+SGqqWUlXit4S1XHPI8yKkCtoFijRyWIIBe2/D4hU5
rQssLs4SrCwXLMwKqW8CyHs1TfuYceF+1veIN1UbDQQvWKKi8JkHHB/y3vg7Dp/rPIg6/mkpKLmx
4V91Ul5DhZgtpEGHi2dyoBw+8trWL0PIn6B9yc7cFejjouDxsOSSG89QaA4REcx4eOHtv3w6cT2R
FeyOdUGM4Ve7kbac3xYbzITbshv1qdBW+RDzNrpObLTlQi9qLyfUIiZXV0rbLagxva0QG/2JATkH
x9AAqNrExEUt3MoG+2LErRKg0rKJkY+TybLLPwBH/c9wNqlL5MvKFkwJo61sP1FwMCCyIW23RhIg
uVZ7a9bsxJtyVpLgX/F9Y5MIdoS2G6YUuC//5B1+uuSPKvs1t6iTk4KNSLEIcz4hGzyf8nQkUL2g
umv6/kIh12UD/2enMpFNa9aOa/8+pNMHQh4fMsf/Edv66PVcCbbRb//82wnjqBqIrILLobXFaJ0N
bYSo88BzZWRJGcBJ3ryN4yDtkxshHrtyXXS3KFdUXbJhs92J5MG1EnsxLHWuxb82IW6ZSjhG57if
mw+zYrM8mmP062UvB0uVVlKWjYOsMW2srjBJpl81/k3277lZAn5kSzd50uDD8lQHGC7EVc/vsy07
OlzgATQxEHzGbkKuQm0k6kfJICRW/rTpaM5fFTkQQKX0A/i5w0mpYtO18mnLCiCWtGUN4DvyYDyz
mU/vX0Tasnoc978qYWfTzqm5t8x/DvoB7C4hPD1fpzXysWkmgnQL5SYJIF+6BCgHUiFz/L0VFNcX
RpVxOydQt5uA/eXz4iMwr6QJMeiZei9lbgHrhFRmUzm5nmYF1wg/0R/8gXzhkV+ulQamyOTmugyY
gWO2IoYZjtkA3fFKGloGXVEpK7qizthSL8/E+GMM0+X5TI5ZcTMPUu8UXJNn25aEUVhHwDjAQApH
LhP+GEVdNhMYB8PflFjI7r+kxXWKVJ/Dhx0L7KD6ELhxVQIN8QdjNngcE8b/LY3zQ3SJWJXnB6Gj
65gSruOd6guvH1+Q0bgzbwMzQCxSuESM5bBt5x7RsP1l1+bgPw1br3bX21zOw70kIbgw1xg0cqc+
FFh1yG6wmoIejo0DcVa7Sw7yTaEEWEDBpsX6ZXYF4TAClRHVvUWk04j7mJYE8BYCZ4dPh6ZEQ80F
jdatts0FfemvzZYkAKgmwfSwkxyau9JyKJ5GetFbShjvrBdR8tY4kN8IBvq0JUdsfN19zKRX61SZ
v3YDDe5MacI5baTBcFz5sxKVA5G82JrtnHFQuGtf3xHMk2DVAbY4LmRFldM7y2Z2fm9cdcxemQ4G
CCcGd/wwsF0WpzJ6nmosCxMBuORlIvOZt0hzc6rfYJUiTZCXcPgTf2YDW6+8IWOY1ShyaMXqsTKP
BQOkFTu0Ls+m4nspHpONaPpXfT7nfQjHnL7qnct/NXyzgt/WEiqR2EpvRW6OFxyUqlMNrMFlQBXm
MmSeDhQX/Awcwro2eo0Z2ZqxCDphuwfgZzpNJXXMc4kGGG4vMHnDw5rvfrk52oVgRZKKz6xaeaGW
Zl8cShuK2hT77TdZZx9fCNdBxg4sAQfLQFShl5tkNR0Rq60vUUfdlaYoRZP8oMk7qbkWyTYCVqAs
SSYwhnb0X6VIWPEcBOSu3HvZ3ByIYB8lfZgeJQ0MUR0Lz1bUE55EiCgZrTynO3mZ8GYGwZa6n07V
vEjoGWGJ3fMkaSvD5GaajMyEuo9QH8R9yL4F5ZXlP00N9svBf1edRwyMNBoJrZ6KGqi2e3owf4dn
nfesWNhE81dUq/DGZjnPobQ3BdA7VmozeTyFrGEu4huD8fpcXW+YyQl3bIB/tnIqfsmuJl+3EGlI
28bB5ztbdLxXjQnXtWTDQJ96TXfS8NUTNEckmr0ClmB6H+NXjmlA1iI+YrV/k+szt7IighzYHLGi
gyMpZToEyxipn4bOYdBOHCmdX368onxWgAO5IuUGtKeM0laZrVkJgLP4+E0FESRiLDtBejqTwUNU
UIA1uVUQZ+7xHXoREIBl+xHI+8gwyuQjiepSHpZshuwVo68n2JQYvlIYqECgdBS4kjHwrou8pB/4
8LGZ7O0yfWyyN5/W0McGojx65U2yWR2lkeTfew77Iq+Zt5VZ29bGmofINcjAZR5sCYm7S92Yh+2c
ZiFhjz18CgZJk+qdcZcg3RmCqtLxtcvbOY5YZeR8bEvEqUUKgRpRfT+EBND6lNeTMVKEAF+2p1Ov
nuvXuOy57E3i0Z7toc26BjVoAVTSROLAKqLjU93996rU0+iCJU5ZR8w43g8NZwfbekmSgwhrauaO
cJPpWfiEs53ncDqu+eKd0CXDvtTtgP7raA5QjTayv2+UKgchKm4J5uxPBrbf9sS4FgJlmjsEu+FT
+gUMVrx29HqH8nHzfJQoMFKws1ao+5uOUG+dCz0tyrOtMMMidkB9meD+zWxNwEBu8TwNrhcnkViu
wjgFmPKNhcTSGeuvdWcaod1jsOOZcLEdNbJrDx0WMBw1NXuPc40rcKYny5VUxHQ87tTIh0hawD6O
4HXEq1Sa9ki8lBvU1WcCO3EFD3Rph7R0eaASyr+P5aFOOQNYMedd6fpepzUnZ6a6VbZY5hyduZxj
0ItG10agiX1jsdyIUx37eT7mV+Mr6d0C5ZrHmKp1ufxmyvCI0ydBhXwk6jcq4YKTlRGjgP+W+1F4
p0hvsT3wD5QanHJRi3snWDpjvimL4Es6OFJ4Pd2sqK8vgyl6dz5BiRlpqW0uujuH5Mgq1SvtygOo
pRV61sLJZ6lGpv1TuiMebeUdISZzYspU1cQ8BbF5tniwjGPj0wz391dSesGtzrDmSsdVwTIGEEQp
2NHL+3Ike98MQwmDvArhvkn7txQJ7sT4W8p8pMDuxRY/VaYxy/h4wW3bOPzYE6uR8qMJr8EFyJeQ
0+9d3ZFFNlyvcU4VqrL2esuhHyMa5grQWnYTAxqmWbJH0WP/DMgpvx9tuPqhz7uAS0w6RIeE9I/T
4gk8WUolaZ0iKZlPcPUbgD242d83Oo+kusyUdOT+2u4GMxA8v8oprFsUQpNe3rREmVofH6wyOfaJ
WaqIlMM3afnYkwcr8MvvzwjJA9w33p1c83ShyBLrV7gHNsQF9sWpcfmuXXf7F1+cCHXcOlrPM2do
Bz0Iz0VUhJHChIxQlUUz/P8OPr/9jBHLaH9QzM3BgK6re9ladeQT6DFkGTPE/nIPvGpH2+dkuFmw
cN/en0CHodnxzRNquB9wS5bHD6D0Wk8X5Z8zPGrK/3gSRHtANAIfdRw3KElBA2iAINapSVsDnd0j
PLj1K9B4qDas7QD7kdI82wyp13iyFqeVLTBTXRCByKyj8f6q5ce8h5tsMa1y60r5nd6/PHd7m4Ov
28gnVMuxudtEhEsaSdKQN/gM3U0YUhsOGju5osQFaEmNjibFC1sbKYBhi0d+l0xMPzhlqoHyPWzd
mTQnWCdsCFUDU7W7ZtYHnvxq+wt0rBrt/2P0KLqXhpMYhpbtrSTCqIRITWIT+8wyR7EKeIW4WXXj
LPogNBcn6bYc1cwwixhA3mMonWMaa4TB2f2c9slSRbm3GbiKHdROePzKy4JpMea/u8lIjY90jyXE
ycdl/zD5YAeQmW210VT+BceOZNHm3bE8nRO76Rlgwdx3WaeYb9lSvd5IOBmAjK8SJV8u1tcQy1oL
EdFNEHHVWmtMstKfKUbdFoYhFlSPDnOSH9+3358tc8lXv6myvvYVpo7yB4ueOSLLb3PcVwzg10jJ
+kPUyKuJmsQ9O51dqfF0xuMFJWtX49bZWUk+IAFfOdSkFac8L9cgXvSQ5A60mbsOxQqkvrbxp12s
XIQy9bCZETzvgI36MSRv1F1PnkOszvInUfoX8YA4NwR6DviimXu7BIb7VjYLsODp7FUTNj/M06cM
LmO6w7xbYZW2pf1WZciSUyHMiVjVsJ/nPuDyGpFAtQA5clfdsDbych584i80twJPI7swOwBGGTsT
8sVGgMefMYgItd+O/syDMM4KqHXNbnYiIGIwiMy2TUAINSXhxlFn5SWuuLBZNxKUpMEp0p1b9loy
6uEqYW2C7WEdv/TqgvNMdvy/UW6a5Xtq7CsYYZ18Rc2TwyvkaexPXO5kz+dcM2d3iKIeqAQvTagd
druSPQVM+QyGlTeNy7jFa23i6/tew4+4Nemi/QVJsnukoMS+/W8mBknDt9wLoD/Hc2C1c5S/2HXY
2IZlVeoi/qw7+z4QsICBv/8+uh6i1LyVAucLRAO3w6UnValjShmGnNqtJMr1rYrvtJlfXNzgFdKG
y85Vsm3g6jdg2iSoVN+CyCr5fU+4xVcqylJvvNcWenKwdGVOo6NXWPHmbmdK84SU8C05glm9puNy
4SZwA6KWVZjsTVhwrrzNGQsk1kbB8sErQJsqFu/zXAysLQMawDhS6ITzn6L25L8zEIUkBovBG9i8
nx7bnQmH+0eIkftm3PfhxsGjk3i1qnyEuDeRnzEmUffST8ItZLoeiXUlcDUrO6p8J/61JO5f2MnW
zyGu7Y6NaffVnz0hOM7YPYeqU0mB/Uq0DOlEjTEM3v15SZ0jWpXsbN1Ipu5n1OlPAUQhpNwktxn7
7NKm3i0dX3mi1zc6RWtPKAsVILu4BOJeTgtPR7O4H1mw3wFsGrRYkD5MPGQNQIIvOLP4YTJCIE+E
1pI0ah1OERVHAflRr06Cio0gIrvDV8Q9IJM1HKdgb4fz4lfcuwlOI5LfAu1sUGv2MMbbJ0nnaeCP
1J20zImMe6mu1B1j6Dx/zMriJ1t4vdgzJ7p4QSPFRAOkufrFAU5Lb9TO0cA6Tht7kjCsebGmjX3n
miDEm8MggUnyv/2ca5LBm+SAJUFBsulDChqPUpTcitia520GAZ9L8nyX+hFvM+71ewCzUdb8soh7
vJNzQugxPO0tVhFPch+Ebw8fY7xQy52xkZSs/WnNHj0NZHJxn8zBLjJj39UluW1HI9y7KsMAu+Ji
a8qbsPb1/jszoivIs6v4qFmwL2V4CfubRPbjSVFdO4bJlHJHhnoyWu8NGtzioYA0I0CyIbMtXDR0
sUIyswGyKOC1QzUoL8VXeA4NPg8eliejRp9s8EaFnvnzJvpU/Tw8L+gxdKgHlF3nSIo7+vOFlQ/E
B/dtleDdgnqx6K6RwP92OuAPCm2PbGbqYiHkp5f6E9vD6pvUM1ZLILh7uA++CqAQgHNRvpkInxko
L7QqfqjtiHBpGtrR948CffXduCChhFP6XklAGRI3dMOL7dQzlgAoCKKhtKitVs5rJephZo1YB+BQ
IZLqcEhjwUHMBPN9LF7X7z18loo07Z9pWPzGSZ5se5v+BH3CQD6RUVLMjY+Jd9wxQDeu6mzQgMF2
QdIhMT0RpWJmVGgT/Q1PGnJfSVPZXWuY49UJ/GnVrD2q5Nfp9oVRfsOccz7jakdBu6wlf7mpHj/6
x9Z+iRa08poV5asu6HNFOnc449dIpy7SdCWMXJlBJu0Xt3JekrhU5UrdkK3jSoB5Z5deMAeDOj7p
tCvV5X0JNH8PpnU6QGQIx8UYstzWvpb36kOJe9kZi+GQV/zzNcykqFfbRXLzSbyj5ANGHuLoTodl
wudR9hahhocaKExdQFb29HRHr963HeEkAP6RjM3HjvH2T9bQUrmwPe3HYxq0SVOe28UqjEoq6E4N
P0ukMuO4j7LUr+WjizYpfrh5m5ZAq2js7AvY/U/YuRgT+Ag+bowzGO9RJLZfHyahdsvMzODN6Lo5
YJPZHY1dJeWT8KpDgQWj/h/b5xzPmLUgh+Ys2YnKP95s6W75MDMYY7CT4VPAnD+xHnIV/T96zknK
TqUE63cnidXBBcWWC1s8uQdrXXKElJUKuJXMavXrRUUAsa8vH4T+5APmwaKUnUsOENU6998xp2Pt
dgIHKsICPzLDIQqnEL2drN6d9kiGYLOBr8ODa38khNzpHb0n6C6+zngA7IgHELyJdOFFyZvf4SqE
Wc4xMBL3BncUJVfprMXLngC4tugBcN1xwKT+8pmWJc/SS5AilaiMau3l1a4Uxv/DH1zf/i+xRaFa
cg7EJmmKPomY25g/Iuom5FacBcR0e1i7FVsy8gKEz6PxHbokzkdSb4Xwnvuvzi9jVD/ZzB1wtMPE
HkLzixKFcENhaWvQUk5wFBR+PJaYd9hzVDgJGOJaB7bBBbolcvTSQnUdpQtkRB7WjfgUz6Cerkbg
yQ5KF8yZ2bm2/4u/0If5k4O2/zrJo5KUjuk748PrzafzqL1itqpCAFVCicDT9a/kgr+tT9GBn4Vh
tXllQN1y1+Kfu6vlFKm3xx9OC+ncZGGCaqdcCzO9epeaTcyww3WLmkR5EE7ek1GRkY6/O8ASs/da
l9uu4G/779S0JzqgyXdxepoAV5pp0r8HoExnBIQH12WsmhOmeaRXXLdGkANI6qIy7pk/rkswTzq2
YiSeaWzFPCsqbNNgMpsm3VfjYVk4w5qMD5bajc9oS7g35NPkJVJQ+enQt8DwiRPZcvyQ8qQJlB5V
PCFOQt/MphrIXTn315IYEELj5B80TwyxmG2QHOSgrI5lWJs2ZRQ6ZtdeVdYPH4tPU5/E+w7QQTv3
orCVHtr9sHL6yYEoAF/v2v+LNQOE7/fqtKgCXZulodQ2HYK39GPyFsM9xDIovfwpqHWrLCa5rgZk
tjHFRLpUk6PYVXKDUYMZ5z27iwWjluOGahg16scP/np0UQ9LTepjXfVGzggWvs4ym2vGkHWX/qDC
sG57xLbvVEYCpJMPaWCx5ccCXld+KlQR+Yaq5/0kcVmTh5j+LgIZqIJKBNnBlSmryl8+C0AEIIuz
1nYgW1j3VdkfH1V4G845S/0ndhZl6X6+wBIWrAZ2RjSkykSojZ8cNrsXx0ck4/h+q+PetWHll3jj
wPhXN1V182h848ZxEN+Vtw8M1ATiuIeU+KdO5z7TlMd+mdZz7h+zDU/hxkUHPDDcQQw5I0JegfRB
E79Fiou38HaA+zMcJXE3Q7mPYT8uW3u8rwO4RlO7IDBVXjIIIfAbqZcUYG8BrNekhXa6Kpe+i5Rc
JpaJre19Pg2iGoH/4ZmgZoRUm2bOlJscMRhA0K7uZTWqFLXHtfWzTQvCFLkXmCRj//TYpzmrqGUm
8fZAD1FucoEFU+3dHyl23TebKEAioi2wXAusyvXiPriQPfyXdQD0Ftm/YzvimEEBLMlBqH2CMs4S
Ze+1M96Gtl0Hr7yvZd09G2b1XvhsHtynGtT9i4YPgGj8CLYIXCShIJyC48AgtlHwUNujYHgtVbGT
3QfO3xsozoYDatnmko9cLwtcF/AOKGwMkJlMxQhXUsqEq/eiCj414vZpqWW7GUggJ3uRBM6qEisd
0h+UyqlWNQZ4kmWnTVAEqwWrFuS4FnPRwTeh5t8QdYcWcXAgomF2o4zF8WftFwXo8tFCN6v2ubGE
KFfqnnhBCKay7fc0lt+aODLmtbrnfvB4fnUXs32Y5tHy8Q5LgRt9BdPQoW+JIzhJRMyM3sHhu8tA
GzjTGl0GT9mRGIuAxKNfWgwiI0LFmGe/tvfMDA/5kLFil7iAjmG2HmPaP7eM2dPtyn3BDLPoGwB5
Q6YiPCvtIN3tzfcEcwSeLV3zR/f4sXJgKztijGkkx1QxTEr311tZwBEFKBulcHKoKNGE5ckKRJmq
hG+HJ2YY8LGYJ3RMNSlNz6vUZHvGn3iO5y+zE1BkTZ09Sl9MsKo/NelYV/5F1lAfkd1a9/A8bba6
hPHLlf2Be1eL1kYAfmCrL2o3dDF30Fw6iAtEWkc+QXDRboOCJBfJ0sqD3Au+cK+F8aQGRCpa7sFL
ymfwYfxboFw7pBV3U13QeZiEeFvPx0aBRtwGbQvSutA3GOEyDUJsEqjDGdjv3k2BlCVp5JQVWSxv
V88gT8TTFJ4BLUjkLLFfSlFYxnfMMjVxXX3RkN5dQ+cnJs+rnmg+twP1KHYf6JC9woZn1LFUBvAU
KYgvT3fLRVN2Qodd6uGwgx/TuEBD3YlGxbz0TpbhePGOJt5hSDQojUGskYjm7wDT0NIJhcVI8jTP
KxADbA/H/KS4iu1y/J+IMLidVhpP0upla98Oo6+xcNBF1l0FzlR2kxmMu4JfCMgUb5RVncbDjlnQ
abRf+gBUK9C7bIS53rM4//EoUnFoTpPF8LVloWcQiGN9TZJI1Iv369w2A6tMPCNuCrkVwyOzztYG
0wAtz4sJRto/olZjcMDqWv+b3QxfadKALSsnc48lk8GrZZvuGiHHAiwcvH4jg7wLjSpkPttTFSTt
n4v9tH0cxd6oRxWz15zTY+5b1NlfLzcAf9o7fJLxgA+mXCvcjkkVcWig3Hh2usBqmxjnYR7s2y24
5UBuzqxN/ah7Iap3GqkFXbbjNSVIcwxBbeSfweo5DAQYybbjDBY4Dj0HUosv6cRbs0RZnZB7Y8yF
ds4TN71BA3+adkDruE9gQPIaR/a/jkE1ITmx0DjqlSX/YS9Xs8T5oBBR6LlFwMPCq6KJ/Yir1zzf
14ABQs0Sm7mvknN179ym63O9xk0ISnon9Jo2cNNn6ZrF4znjpZtO4zzGwKCu2IA+LdImaAp8gdnl
zkW7p+swFFCaaTIyRFcDrarqWu2xyjXdbS10MerBLlx4DU6UnpwgEoMxDRA9YFYB3B9roYTXLRGg
gWRua63tNKoa+8DqBX5n8kB8MUyOtzivWcgo6r1loTsk6Lkqef/uk+Q39U5kGZ/Zl4WDSdlnc3wy
//z2oXpoQm06q3eahBAJbM6zqSe4ZUebQWrq3/TsWfz9NLet+e7kn9DrEOeP9ddqQ9UrbPc+ZTPH
P5FnqVTbJBpfIDTYfifx6iXQKgkvuDYkU/ZgAXstLEJ9Fx85SIuEUvAtetRUuSWfGkfy+UOy9rG4
0kIGPiBubdATZxFaXp7h94CPFekZ9dNq8pMcRWqe4bQ1fkeUIx3iNwMjcbFTMFMLeZZI7sq85v8d
TrUDn+XKz7jxegrr7/Keo4xWy4m6zsAAT6eYFQJhwLcQtc7QA/FwsjQjGrmBncOhEUJ51tqiDWGO
4b+2a4qlwhsz3119p9KI8oupRPElNQGE6VEBYiOToHitYkxCr51o3G09+g7pOoHX4p/lk9Td1nij
3DtgicichhYCAbqzR3Dlo5zuhVZQdMem9HjsgHE5vtVZGKhde9GFGBxeBEnDb4AlH81ZFR4VdgYO
wBBlKM5MOdmGaOsItdR8zQQyNWTH20nOM8GSfps3Y19LgV01IzvCCs5HS23/UyPouAz5t8qjxotB
4R1N/LFADayje3SVtf4NZxBxhXF6EF/bnhl3ERpXFFNrotzw/q384BNgldCRUfs2GEKzcH15wzee
TNCzhIN4YL06u/7TqEvZ8SbKh70MCDcTNo5UD5/86yIshZj2z1LLN75+QGxg0mL3JKx9rvnsjZaY
ZXdExKQDhAmNog2Z9ldTixVtxiUjePlRIS/md9UyxMPPCbI4T8gHR5/Zl3U2oq2zD1kZAqh0hQkR
sC+cxdMA//awDYmvV0VFMDvlhncOpIVIYiEuV/OJzs32Xn21OAWccvOv/hgejCl5LSNp4L5cmXF4
GjdEvM26Wqg3Px2TtLWzuxw0phO3bEG+HxbYQDyO+dWA0HYhRG1g/00xKlgbDjbQQz1IRuTQ/u2g
jZKP9Xnik05+9gGQ6WxXzEGNPNEKhrdlEStW75ybjL0PKn8sZQwl+M4XfrUpH+qn7hELpe+48Q3x
vuZr8YLto96W0aOtlUT1t4oAkymlX+RATTEGZ51jSKWMEmEglvwNMF8PX0amXFWZVb+F9kxF2+gQ
hBQCndM7uJ7YnmLhsNPhZckfZxDY0KpKQQaj9iruMJM7zCoxEZQxWNe8SGWjbX9KIpRhET8aMGwR
qwv8cxTjafn5JaIeTVPSfhs03iN1lNQ8LQW8Nn6X+8YGv6salSKCRP5FZ4FwypCBXpnclW8Y5WN3
+hLPqNzMf2XEoBVv9ckOgzt9KcS97+fDqhRmuSQaH0kpB7i3WLcnxpwQmGyQAtw/V03gDXA98van
pSOwEso7wWS09PDvkDeN6pNZu4OZTPm//x4BOCkrhYoJMCykXIgdnz07qEH4YO65IBxYZBGUr1nr
1gHgSrR9rb8zEdjiwdF9WxPqvaG9q4pKHx4v3yEpkRbYDXLelT372CCMvZcwJocJjKysIL+CKAtk
5O6i1NH34oQcGIRETNizrf3TRRgO3+S/GIKbWqgNDIFn7k3sthJikc/dqCLgwX7Kpmy6DxPNJjme
Z5b0+rmDrA1zv19okwwsqWIcdW2ewdNW1/M11NvzFejg1q62atuR/KC+F9S42PRV3qdP9++Zlr1d
5xaqMLb3GNzGNCj2Zikj7DA5dEeswk33vQPMlGNC2ngsu0fmRqKDW0WCtpSiptNoXiDVmSZnIm6b
K0eJ10JXvrdkACePhYgCEg7ZIqYCnwMaFBGce5XrWzssAitG7OKompig4MDzDJZY5J7LYvzb5cm/
x8DE29sTkY5XLW+2xlV6GXOhR6k+dxWGOdRLYO4zjqEfCXwGv5Kf8hphsZ7w4R7R9iH48kPXHlU7
HoKXQvWTfC0XkFKk3Kdry/TzAkKl0aMexrKAHA6updDYyHH8PjocmkCxnmd3lob6Xo4WUjZf4JoP
UDqnQ6fd7I1m6cOyNEj1EuvP3+G8mGv86IIwCLMpH8ehqqy2qtPDfHVr6CuPMl/ivJsXaXr3jZrK
x7ywcNc4vMQAeA3aSmkepF+6NGwaVvPYwEZzHuNHUDFWhMerofDvQkR6ZBVGHwkqpEMaeWe5xAQf
tlz3uB0eblPA4gom73+new1VMAthk2QJiA9dU5VY0TAupWzHNaUyOZRk6xsv04wG8H5TZwtIIHcg
qDGpbKC8/9TeTDGm5DDxwOd3C03fnIEiWUInXDkNiHEldESMde0+W1yzWetqQBODQdCEU8uAE7Ku
HyNkInoRI4UEIzF6jeUqc7wkBdqcqYJ8ZFq6FnTDuugjFzIe8x1WQTRsDv9p6x6+srkUEc7QtfKO
3zyTIHbDacAtuNJrGtzu83Zeq+Pkq3CppllQ/tEtwi28kQqwLRvp3Wv3FJ0GY81hoM+fcxz/ZC3W
SC21pwWTMQnE+YBdXwmUvV9z8lPktpF4edZdjL3G7fuFYJOIV0C3Zwl3z4rRbaFENtmB0c9upKpy
ytvsOoMu4Z0ijwoY4MR5p5JALmrQrdcKbwAEZwbios7NoT2xemWvaMAGuoNt9PXyhI5OAjZV0jk0
iG70ONdvFRPhgEq03J0AouUX1eVDbLxiMx80eILHsNZJZyxRFUuUjkiQnmW4LVMMOlwCPsnK+9aH
OEZ6mt0U3cTebmiuWHkyXD7z29fvEcB54T72QCJj+gQJP/QuqTal7kgyoZfHuq47MhRNIjpWJBHG
R3WdKUswUwQlhRkYIGw85g5sfqDqQqS2x14R2LwSpf+IdQlj4RkJd0a2wQIzFpLyIgWNd0weluHz
vceedUz9SJAdqICL06H/iQLXO2znzPwKqkZ5fSNEqmOBgU9AGqwyOMwgkutKVIvLM1yoxYBVApft
fLdLojTpIEjnDaZuzwQSiPMISmsOwSm9Z06qOZdGSMWXRloWBu75NjdWwtp25vBpTQ1HVtDbaJ5M
Kp322BPugVZv1AFnrGzYBGrJlJmS+fitcWI6GZQh/Gu3dwpINtMhiGnHJTpBRHbs6NrZ0To+jHNl
9Hb2GQQw1+FnwAXD0xbKVEFgZ0EISBpVpeEDQeQ2Igi+O8NNvX7ynOPp8zdzsR/peCeHqKUTY4CR
q4T7CAyK/yLNTxwD+eHmMLm447wZ7Ca0Z6q87htDo+msoUCrsECWSpPTk6nRf6+FsiWG/FWoQEe0
Xp5i3gr2pMJeA9vm8XyQgBqHc5BXbVXjGmJ/MxhCzA99CjdagdNwFRPwz7P7sEagBg2bEkm/TZVJ
r5Sfu6LAnfnodQKQOsIKUjuAF7i+5dOsXtmfwdHBmVDUN41o2GURzDYlXuiK2gL5LeIC5V5MkXW4
rlXkO5af1vJxDnEe8Vvccwnmiwv3K8u+bvpBl2/gzRnQ7nbnlMvbMiRT9yqE3//sVfJ91QyIxamL
CngGYgM+ebw8Q554fcIgYr2fIPdpJ9XClvKu0eoERqXz33YxJO2GSp4MA0ntVzFUkfqbgJR+4KF/
K0RS8tNXvNCx6lejNyGc+SfGdvI9NoZYU+aM6fRheS2BBnP+m/CP8Pr9Huwg5hjC8Nu95fXeyGNP
YfsCflaME9DIo6XiVXmK/ZiH7rZ+pv1CwPNigzIUKVG52NT+GsPjNGk3jLg5Pi2l3XelsBIChCuw
HVQmIREdhyblq4WjOceW7aLQ0u5XLZ28mac7NAK+iNIT6nOppEe2DpzqWRY/7GAyxQq1a6D3mabe
niFIzz/STwo8fP5rncPDHNkuC6dxINMextGrQ56zRI5luC5GO3TOqaiHNJuWUunNpUldTideujA/
ttp6YUhSvyJ6/PW891/mpNT0WLTUJivkZu17M8N8vTyCyPzWtaY+op7kKCjR8rX0XV87sNSXJohF
tNZoM28QP9/eDLSK/iEi/DClF/JUkvEwsGYclBW5nQ2FP4i1m01lZklWnmgK2dnId7IXbAK0l0Ld
0Im6Kpk1UxJQTLpYlWXQb8CDnycjUZt8NiIoxsxan44sStI+QyeIY7CUeDJ8YS/9j6RDDbJJ8yUi
jkybP4RRdQrtS8C7mrDETKFYWMooO0Og4Z5rAh45nBowYCbotvZBlz4kpBMveubmQNkSxgyj7eSP
zDVrLqJk93nouL7VGakIM045mHbmqeJdCvoowyb50F4QWSJyTTBmkQ3w1ICvwMV050MPUcwnhUVl
z/Pdaqy19q9qcGgsXspyxbr+S7RgZEzJ9+jgxKuuF7N96VpqGtOwAVfP8VqP7/6VpmB+93GIKOJa
W12q7InVezUGzZNFdB16/JLcTqckFcSWeqtOi7VoAwgiqZn/tCEm4VIOHatikKYYYOqNT4RCFmTI
ciuLBFPa5c4aBANi9q++jUR0Taz2YbSjRCZ51veDv9qoTf0wUFXgdoGxe/d2zZGidfFMyEwz0I09
9k1wpqim5R9r9F8UGx2Xz2WObj3w8TZg/FrvdbWRbDXfrJ1Q6KATmBOMqa+ko64/i/56YFC/+lyP
jefKqQH3fepxEMwGkVkiEbN8lTogLg5vhj//OMqxTDva1Z/jXc5ZU9wOY1VEEsOYifDPzfpGfeym
rGeqgkb4crK87vjxNY01m9NPqoW1sXzKK/ius1TKcHHPcm1a0piFQvCdu4537QJVR/mY+pNLFNIp
G9u+Vv8BP+nyYa8fxQMWt1o/lJJ23TW8yaU7bE2k2DvaxZQ91MVbWsD9uDniL67VKpwxYzdAEeYa
8u8+RXrzvC9Zc07wxLNepf8TLW3Mo7okcB/2EttMHBl9Im6nsbV2tWxsIIDv90YRiDesE7mH1Lcr
Guz93ATptfJu1XbGnDYSTTJTHDC+NrciFkO1YlUwfDz4tRR0fZCxL58DNjenwR6jMbGyfsias+YN
lf90Nr1MpInsx7i8963M3fKsISmTHGN7cBrc0t0m+lkCa7kxwwV1ymIaeAHiHG2vNyDJmoNEQxNh
sDldnMPP++nKyvGikhNJbgrfoeEyi3OU3jm/SPaxj/OEP31pnaOtFmDQ6eBWbA9K0akse7h4B+Lw
9bTbmkD8GWVA9hvyTlVe4DEZk+MooC+l3x089pRMQTHqCdih6IdqQqQi8cm6LoI+Ass+LbWT30L4
Mz0hiwqtWG/nhEhynVa9ep8xkupGa5bO1X8+Ep0yBkzke+B/AAY4aWkB85pQcU31M4waiRehLpBB
zGLtcJknAWVY/EJV+PkFrIqFPjtkad9fXdQKQ66Q0YzvYBgpgBM/BH9LlZsO+VDVJhBo93hLtTAA
4/iZvKaaKmhN/3AZ3xZzAxEzSxQbZDv4AwmvnDmS9UxwAqZ6WDMnB+UtGNnlFN7gU3i/QYbruVSZ
U+cBiqwmZBBds1UjlsjulxCZe8rgyQpXmQ7O1gMyCwZt2YsSwJOzCqLl2EGID9eHtPyz7OmIr5NQ
j8wP7uZPDYrjh5mYzv5lAiq0d5wO/HrH+nsXCkWHH2BmdQceaQ4CkrI/maMNaTeqwYB/ZiRQVdO/
fvooXpdlLBwe3XmhMQulQCBiEMrcaxEtyrWtrRDKVwiYwwH5OX1pZ7MLGXJjitgRm2Xdu452lJuI
Yao4GFPkJ7/QXdDLavi5Ewsc5OOtE9DCSQ1qUh5UaOoUZebaKQHBy9nHgatIyjg8a2mIHN91eAOQ
t+LRDJXh1DHtHvvTHU2frTEhJIObjDuoZEw1rns4mp1uNI3zIwZ68nYMSVpcfxW5Q5gdGhephamB
YIuIAWp/mQ4ihTTPvd50aCgncJPHL7U74lpZ70c3AGqS5HUfgr0hfIXrGRiwEpyqVbgbrBGboqrZ
Ul7LjFknH2ZGs9cOLugw12z70nJhE4wZVUDNO8KFQR5LFFusFO1QnwTjqfa1rYsSYkI2Segv49oX
OoKhG3xSuTccHloW+OUUao+WFTgAq+/WhJqa9sTEXQYGz7wHHw5RdINEALOfcZN53EUyFxOZbZIU
G7mvdHD/eSg6uwVK5t3et5xbZnrBt2Vc1eCVQzS0i0VA7EtGn2mdqrXl4oKl4zjU73OZROv5vI8p
x02DVFX5LBjtEEJaxXM6nM8eBrVWKuZ57reapXOb8Sq91pS7GOByhXxJlQYHZ47azeQ9rw6oY8rX
VBjtBvurt5gDFTH7bU1N9SvN0niM+xCDBqyhGSCJGelTnmsmulCu34qMZTFgOWPoXk8klANEdsUy
eoHmD2OUJrG/f7mJ6RY2OV/oPyxqwZSnWqg5x8BvzVg7J71qtX92IdnVgh6zwFViIHzQzopJXDWK
igZNUkdEt4hC96lsnRKTs/wfaNWZVN/ZKS9/56MmibsRd7Zz2nDXJzyu7Ulcozkwa67GnOjiHtLN
FnB7L3UDMS0fLIAriBpOOCWoA4zatAFQE7hn1+N0jIHOctADILzYNe1DqG710YZVipwb3dDVdamM
Om1iEHM2cLgyZBU/mT+X+hu7jaTKIhoeBMPn67RSnTkQrNCMLrvyLuyvXrf37Z0SzFO7Tq90O4Z6
pjWniFfSqVbdORNWJBRKmbLFrIjnSbOyNj7VwCvEj9E4/UfJJ8JUy5pN0+tjBHTFXbUKIMQ6Wm9t
R9EHsLgXy22zr+IKax3EyCWDc5fujHk1TmaJVg9zH15JFJtKwsmXu+0atusXq1Xb3EDNVtqHXPbb
gUasOJoHRgC4suTa1iY31aknvTqtXtlU8UoXqQYo2vclQ9xV1RcxJt08vZ+XmOm5FnVbdiOQRh6H
BK94jqaya25DRgRBMQf8Rokxwh6Tcjdqa2eIBHZLQWNXw0+LoWTYGsxMlPTSbV/qFcO56aAxH1pU
gQ86BPiAiyHEyAcsnKDPbx22ujbfX4+jBUemgiGmuCbrgg5fVNXRcAP6WvsoHGjzs6H6Ol0GRa5g
CfpvPj6LU4GgM8i5Y7FsEwBvr8gZlvau2TSXBDlFp4a6oxg6K/BAiqaSkDkWXeyoOQQdBouYjWXq
VG08qLGLISRC6ZVpmAJ5N7U7iZDo4xNrqPQL6T93SGf3k1n8ELifzqPTirHMqLUQ7PxajhMwrKLe
/fZ6U/mohliEpg1HamAveXUwm67T3wJiv1pToMh6UW9eLhUOkqt8R55Fai2i2jZifEmrttZG1ylL
9GekMRNYFHKfV3QBfFrVzJGR0581FkRNbeDL5osX+HqrS2/C4oh1iT2U+L+2xQglYCIobHWfR/OC
CpNnqV1AwdOx4gJjKLpDRr4cd5xhoxeK3gGSMdP7VEorjs7vYOYh2D1nT7pK3mqsH6Aj4o/cPF0N
FKyUB5lqKtTfSSgMHNzRcdx1M/6VET88cH9rAUgks794bekfGlFDxL643RbInfVth+OGufq+NOF7
5s1C2vXbmLFt+rE441GwLlP3lJanf+VVLGp1QpjjCbz0N/K7+aDKg6cj769FrLvcwCS/aSqghWsF
saq5x791Rjn/qIhsdAdszXr5qg38pHJjK8r/SriHOTMY5fYysCuqB8OC17QakcELqMHEdEyoUi6z
iif4dj2iS4PS0h9oJuVCkRT95iOv/GmoSiZHKXq66tUMDUwo4xSdpPuP4VGC5Xr4zTlF5QobzCBA
AfYXNFmbLWHUrqHwKxPp9FDwMPRGa79dgQplaCWqkP12o3/PptVu0c+QOI48GERKPl9dsbhkSG4x
O4tQkE1X8zyRcKtxAB0QSYj7v0dqYE8V1TPALqmDeSU9yBpHk8Pdlo6l+7Im7+u5o7SdkRycta+i
L+KpGgPBhwkuKuFQ1cJuG9DovmC+0Lk8gnedbtijaj4WpHUGhQx3zzU9ZdvzgeOvGsuPNVhvm1cu
64kqXeMFWYuXAcT5ypTq9p1qulqjrk4hZPvtkmhklw8blk1kUkXNzRvggdo2ePC9RBnODsDPVDGt
wLP3LWeRJDxAfA5pTSJLQeAmHe6VGlu32B/kuTszf5e3InVTUfDZmGzAcl4aH0OWiPlO3BS4+r+l
E6HlMGZBtlPzKomCtqrnumM5DBT+JHJpDxtv5ag7zBVfZ+bbcqA03DHrumYYbrUzgYjTaNKPDmHi
+nFzFWu8GljQXtqe/S3jBS41F+PnCfcOPeSalY8UNCmtCQevNXD/fFWK0d/atgWAodcrm7hea7IY
QlfaZF7XWiNhNq6FDev9mqyDGggYEkJpyLxgtPdoW2eH90qdzKI/+3wlrBKo9EfK/Ylatls6aYJ+
rkxJ6w3ySDUshAz0BR3MGQxMylhHfrkRU2RtaOGcHyHrhy0t76TmWN+p9DRYKiA5A3BEw4QxtlPK
0r+rCz8TmXWwsl28YJUQu6diRSrRKOBygSXArg/WngbiRCflAt7pViLOcuKQ9n8I/NOMrimba6lo
C44XJLj+DCXbwNRLZTnUJRPDQSfKgnMPzlVDGYRZdkYeRYT6naXuZ97+524JkcRD6YVitdbAkpnc
atIEnSdm5GbV65jXmFjB0y43UKq751s4Vocn0BzI0AC9nuMNSOt69WGK0Z4zoPzHKVC3ximUzKBk
4UfLnfH+JKzhvaoIcsoPLRckDnO5U4rKFMPlNkNJvD8urAnxJO3MGC3HVOxGUybTiMtu2fSfTVFd
/Ho1+ZOx+ALz1iJ+rOBV2TNLISoyxDvv+6hQl9kiI0+tUsRowfqGEAX9LQAAABLo5Sroq28UfdGW
8A728iURSVWa2h1g3z3dmu5cILqEnveYFDNEq+KRpbrYhb2s4UbYFKylsO9BBQob8fKriX2KIBKc
uxGgwIFBfD4xdcX15Te8ZDA6h3icKoDOCKPpDP9UPDpZJjP8qGpuNxCyDuz4BN9vtirGgGxbpLvR
3bOLb8kvUvXu5J9Ab1sbvY7CMQj1fdi30eUcgQ4zBX26xOjAznbiUJwMAZXdxAL6LN+12AyNjM36
+Rn2h1tTHeSlyz3zQhhsNSMWRZ4uTClmY1ivxIAqHgKb26nVgWd1zh+BA7IY7mF+DWBG4x8Alp7S
A5QqhPSC+xyV8mTrda1FI5luboCdUnyBPxQtsQx4gm5Cpzd00yoKCSK+u9x/dBfYccieLFB7SVSj
RUa6JZLZw7SJRKo1m8uh80f8vzAQq+t8ibFm89+P6EhxSauKOkQYNPdMjD9XZTZzbatkQk1yUewP
txOtuv2ZtVqdriQkBX+ro9tDJErKvJ5uinzMG4PwzAhzgphrpL7NFnAi+yYXr7mqu0DtvsCDHbWZ
4GD5/PqCwtA0J/JSQhLL+29701a3jnMG4pgFqQ2cKMzKLz3J52AycbqyCUzdBZBQ4f8iHjz8qdTW
HdoJAgFB6aAh+BRPxQvaxib2/VDOUP5OmQgOmuHYR3Z7D9dVPl2HTy5yth/se9daeN84Ih4ITqR/
+OI4uUNxMdPRj2K3+ZrZ3VfOzQV9wQoTG+nQnawazKVm6s0pj3k3BIGoAwHOqwpUBRZossxenMvq
91ehEA4nyx45sVp119Oc7H/szsLjigTBJGiFvJ4gMGlwuBxg80F3yRoFdXq5A5SMHq3gykPEGhzU
sZ01/gbr96ylV+Hi6QRCi6pvBOkhvW/coAV34ibOB5AbubHaYRbufYx+xXa8BAZ95yUzQOzeEdo7
irFNtvC+QhS1sWnksvWZyjEeIj9d47VrV3YmU5K6z9oLpFvuLhEr72CDGS9iwA00N50KpnAbGd/N
ltWOqfB1DngqJajEydlRrVCDtV1wDcXNVm3AORAgKblON8LsaKIq6SzDL/e0dtWqfGdB2Ppks1Wh
ctxA9Gmqixfwv6Ke/YpTZUrR10ARufocsMLxoQHSrRzogHkG9bUZmX5URyFgBq39UuHIhSKppG5d
9oMj9Jcpa3Y4edTHJTvJfD891J3SxuUAXNxtwEvZaNz5l7flF3422HQNA+gz66ASnvbOL6AH5WC8
3PmSPZAsy+WNyCFuI9bdWSbpl5yg3JhRhEf4d8ZywJN6zHMyMtZ7OKjR+7i+vTr8E5BlRvIyjiJj
8k7Jq7ELX+w2Vc1SFj7NLrXNKlUL+piRU2oo2uvtjw/VKj13gbQxYtIzGDA9KIPJhnIGcWuCWj6W
rRz4iRN+yaCKxK92j+Uqx5T0Buq/TyRfdIQUvtu2gRJijq8/5BzI01SRVK0LG9g86Mgrb4BpamPF
HrwOyH5RmhkujMo5TcSN+Fjgm+nV9oqWJikk8+37xDzZ8SCdzPSpXhScZJM6qSgr3xdzm4PtU9jy
y4SyZmstw55gjrTdmDf4HHmJ2FJ4rB+1OpWHr+KRdTFSzXcltUlTRJV8M3GnWhl+VaOrjdB+kfYB
O2pvw9i52WuPAKPmmvfkYq/XZMqo996vQDVRb6cFhJdyhrtyJIYff/R5FmuzDFCHclz1X648ik3q
4aabooYwgmYvQao+vrozEWBVY7eHhiy76uIZDDPWMFVqnUNQ6Knjo8G2my011e7ScbLPdeO3T6Ku
c18d9xUtTpNACy2Vb5ddu2i/k25C76rEaFv5NgrvcTpLZ6gp8Yw73Jfk5aZDAaEvIkAVDexvudQQ
3fDfWK2QDPO6t2fDROmGi7TG7OkFdaXjtfoJX3bO6z2o8Y+KhPeBywm+VE2n3zrv+zYvsNWW446V
mHizZOoFro/OXzGVNquSfeD3SjJzuTVBVVEIs3YSaNKmFeAe9xHBg63zfm8AsSOyU9ndha/QZIP8
Al1+PZyNROdyyPf80g4GLG+P3iGCzDMdmluu5DvbgzHq5kMkQv1aopowyPVZasUtiIbWOXOg8q7d
/95ZNsnwNetRy547eu5vbi3jqlaoGJ4gys0GjMWfniyPCcwgllZQsqrajylMcAZZ+9douVg5+J5/
MtdOm0ns94BP/6kW8uaZRcVx5eBvmb48jFfSFB9BFn+Ph/39OMK/fb3FgvGtLiizeNt+jb7OoaeF
UpRbhpMVO6YFtWiKjHItxsgCOoViwF3GpGJ+9hgtITcmwcrvuFslLc5+9RlInnunG5pSiaoihhKu
b43JmeuvHbIwsbZyp7tfiqDrDGoZv55lAmPnjs3Il6i2Yuf1KudzQluGhvLg65xAu7VboXbN50Wu
n2d3nIlRhhKH9U87P75bsSnjt+NTXTOzURLspe5mAU7pJ5dYugtzHBD13eBoouhmmtz05oXnoK7m
9mr36yP9W2we/+ab9VOlqIB2FtxA7jicxJWexIhTeAi0Acz0bp9Z1fgUfRPwPeZtVVNb8qNOaXHb
jIDeI9ldSp0YoNEGGHMZelQSClTIX4FFphn7ixFV5xKyLEQb4fxeZLFZ8GiNA7vjrpicxiz08/4n
KzVQlYNbidRtFgtNOgqjty9BewO4LE28nsZrHtGRHmqtVq9cLSobsLeqM5vZi4qYu2SFMDhmsYvX
OLJFoI6Kk7+Uz7LqMOJbN8YGS3Pr2h2yIsEi4Z34tvBdhh/+4twXLSQ5FDFHDqhW0a9Vga0Xtlo0
tYr+XrbN7Zu6uKMrr423qpWxokFt5U9QYBu4+h8GkFxYZEZ8uwSym7ZqTebMuywrFgASNoAAAPkj
0bvQ+l/TdoFkK8HgVoN/w0DExELsno08+ny32GApv0nMNz1ptO44f6tFgsiktGLEv1DW4r53hFbB
OP0iAZdI2+COs/dUWIOhL8iqL9SDguf+aQaO0b1H7Z181vPyAiVjeMrLBWJVPRuQdO+lUM9De/uI
CWZjXAwvssi7uuZ7KOl0dWwbOEJ39o6Lahq5bhsXsv15IA4a99X3W3/7g0ziw3Hj8wZHOKRfMWvt
y78vwK2NX0umNNogDX1fMPnreEvo5sVLoyMxIE1IHa5SXSRS0d0upxEWBWqV8Y2zrUwOXYqzu9sR
hbT+7ocE4azivKNLJzrF/Uzcs41UKvsPrIzsCrtjC+iwa+vtTq+u4A5Rp9PfkOsa59NIQDaGIu5M
j8GTAUHiPwS9DU4ZL7IWEtvvVIaOoG5QLR+wIo33bVKY/nWsrc8C37U1BhoHce116BhOVXpWhqmO
NcSBDQ//LQUVQN7gfyUExrdulkiNNxz9eBFda4ORun6HTdBV0G2ChI/a3+VDGBmkJ4Vzxgaayll2
v1LJcDrNLYgzoC0qdADqKshkzhKmKjMtH43YSW/RHRKHU49+6TwUn0QkJbT4219Usu1zcy1atei+
8bZmXZ+jpyWlzEeqOdHRxEGnnex9WOmrmFIyEye/XM4X2eN0B+EPdcjbyAKpfd1tP18kd60+s1WS
1GANwbA88NPr8eMdIIkUmNdzumPIcWofWk4ti3H+lojjxCE+xn7/5EFG7IMU9iAY3E0nv0o08QxO
hlix/gVz4gCmZkwzowWODZif0PmDDA6+S0/h4ZkhyKhTY0N627CoKcsLeA4m7ccZN5cWCTxWFpVf
sTaj08c/nrpkM4G5L/yXqzFLNGoKPc8G8XfkwXgkAyJ6xJUARuKkMkUc7XIdGrW/1DkklPFVqRKI
uBPXqnObOuX/s3WlI0nr+wBt22mlYF6bAGN6icjkhNIETdLOODXkKxyXZKKV1OBaG6hpzrTgCCk2
qVi/ru/6qtZVmkwEeoTE5+3eo++lcXXsb8/b/DmdiweYZTYW1jsEAI1XYIKXSIY0ovaySwWanlMo
LiBDZZ9R5Iw0WO/cd5eioOkx7tNcrVUDBJhJV/2PIxtjboG5tX1ilqwaORYEB0gRsAnQzP+7/If8
lPvq+wFcqhb3vef8IXxRkS0HcCzo5Z6/lI4I/DcZoDrtuQF5Q71fS5skSeHAjXzHpW01tkTjLVHL
ULKF45ZoUllRuYAkodzja0mJNpN7f94NmupZvoT/Wzp8Wo2MTIPpAN060e4ahKqGHclMCFgDtEQY
+AKbHovwD1nOz9QvpsH+9hhcn8/ahA2S/GfL7dn6dkHVhgYMctFbEi0KlEsT3J61uprBVP7Q+vOb
Gu6agpsTlL7+d5gYFontFu/eepPaRIKuCsmFLhzMSa3nlDBW/6YSlkvKymAx1sOfm46xMVJ1PCJU
1X43ywCex7+Qw7tI1xjyyjteazo7e/nv5IOjw/ikAVHtSSn+LAJvtLuolR71oLT2zBDetjapHdO9
fTYtzKwq1MwZT/z8Wd3ebJC5nWVpkBch/XiU8qKQuZQUs3s9wuKm4DRc6OTcMSpuqEOClUtt4QyW
dMdrFVZEbZ+hAb6F02270Jes2Ea+NWqhh2Q7cREEcHXZziHNPNVEKUR4I9bEwaGThEhqaSC1DUrj
gpLWMy+D1Gt1qwec6bSxJF1rZZTKBUt/2uPWH2WhVWmIq5aj8C9Kd1p7D5bcQCErNlIjP/PjD2sj
k2IOCoWrrmBojuDq7wXFUf3i4F7WInvvBXCgJYh85vVV8FndCkTamGXKsddx8xXet2/+FPsvIQe9
CHbjXGtWSaJz/krEd4Orh4oM/Wa6s9J10bjH7ShfcYYYys9ePuW5oAp7SnbZnvZQsliX6CYLodlV
QPnbfUHRkDzlx5lALRXzuNwrE31Nc3Di6S6inpng/hhmnN7Io0r54yqzSg1bgXnChoaXD9EwSLVr
pHW4U/Hb3vt71VdtJBCqNjCXuW6KVjVMBLJJL1mGF0HoZVWDekoxJpjHFrZx0/XqH1Wct1KFfvKc
NQmLpTgQpPnmh6fa9WIk7eQg59nsh9neNrOFOibQ+e0rteihf75/muVNIaKiQNBmjL03Q4oLBGhq
8lv7snPXx5/nsdWAI4ka/78Ko8dnmkP8rX9hMNM22UoDYDuAATrfb7g0vS3xLACTdjs4ySfpRlUI
P1UY10wWomulET4ejsqtYzQhvb0klUf0A1S9X8eSVlbdXnp4D9+VTSswXWVnInVVdWruXeK4wgO9
qird+1vou+NA9aO5clLYn1m+5gri9X3QXZ+1kqATrqAQ/euGLzof/7kgB7aB0bAntmkiM9FRAhgd
N2D+UX3k50GsRE5vb+yn9bD4GPxuwSkVc6ZVDQPCJh7zhja8ch6BGyK1BziaWYR46Bh3sQkI18QG
JWlTqCsnS0h9vAF5gc32U/H7znn3+07fUf8LC3mD1GHO4qtTqdMGpgvQQX79ofBRjMZ+pAenOrWh
frs/Q8ix+F3cUj8aEzLXjQtXMGUqzHEXqSWn4GsOQsx6L6SjJ/FOFs5YETX+0AV+oidUpKMdQxKl
foE7MRnJ8bT4DhZ661EOfp8qEVfGHPPEZLTGj2+hre0N9TRfm/legC59Cf3chixEYvvUCX8CoRzy
mVKWACcFHWePeay2lUW0oAmU6tcjA1lNDsoSAo7DfrKhKgLqOOoQX/+eZf0InZVVZf/Qf/u4v//u
0RXzLazuzCs1MBktJCFfQ5ql/nqbXa4sva4sYIibw56wLLInF8d201O7akd4uaAwV9dRF2Fv28xm
tX6kWZK5QBT4jfApJpHZVTLSxReZDtqT9vVXMoygtwykbvS9b2u5yWk/tHeLJOli/y7vHt9e6nnN
AV/uwP38ev49C5gc5eVVsNZMtLbeNvbX0jB8BYPAZsO4uclzo4Hn8SwZ6VLDvUGn9RUqlgs59672
hLW0vpkqMZc74Hyo2Ln9sYv4j07rlp/EZ+MQQLob94SB3YEwn90oj0hP7tu37BC/hauBGjRy58mm
HUT2oyQqjdAOkaFOAOXT72M+kYUD/txvFybbce5kq4YtbBoKmmBYvggw0asnjJtRjIYZ7tP+6PZP
h7hpdcpK9BK+YuQu0Fy6/p4P71BQR4bUeNvU1zRZ8pb57OixaDkgcy0jHloHun6c7PWIQvOmw6YC
/6Q++FAc4P2JgQq35vamQyTSSKAK+qQQM4y8UZz7ouR+oZAqEONm+zBFtR7TXxW5ENhYP+UNm4Ms
jm7pn1mnwtp73+AJpc2sqB19KH1LwetrJc9SHaF6oUOONDrbvPIXCRu1BDbGjODI2WmXR7FYlUar
9fF+pfWJvgpFODBUvshSX3S5wn0S0tMktvCoAN6AXsACkyKkjRFbQyorgpOn/J/XPSQOLkIUUigU
cpICq30c4l5JRRgY6xheLsqgNCfgBDyxu2uqNW4/UIwPzjTKykQHggjsSH2KDT6vPuFFOpirxWJE
Uowr5YuvF/r9WynYOzUWzekE0L9fTXBurjMRlzsTcDt5k+Sa31K3m6cLmfkYf9y2mw7Xbn9K6e1l
tB0mFHMczjPKiTZUPlKA7nD8mBt5xYFKmMNgx8AbmgyufuUHDbxnBcVZUDTvYeodLnrXuFvXRuDu
TYJhd0PSa8K0rPbEx/xZ+4/XU8RwYkgFQ1DwNp/DT1Zg53b8Cubfsq2d0g79WBLBONID71xzaU4E
nNmoQ495Gqy96kV499jWHCuwLrOLHLuZmXO4qMN1j7zSnIVo5K97+asxjXPV8m3ZHGcPPhM1GOn5
rjm7Zk9t+8PTbWqktH84slsofgjNSCUO7o+qR/lVnerK83aN9dzALeswNhjmrdGOmMzwRYsul0B4
/9jLOBCkrDUGj2XnHgy6gKW7A0lGys5voC+e9sXce40NGvHXFufCu5LH8tLJZ+L01taNIvS8R2u5
2KdWGw6J5ZaYb1bYyNIwp15ttV5MzicDvmWp2L/f+aDEiU54E7qy2CHvXdkPDnMQzODd18aNkbwc
Og6VQ3402Srnh3JlQIXCLZDtquQRZURiy01cH6+E08jGWhqVZFD2W5r7D0wIxT46Py4IxKR//d1D
Ai8H55HgpvkL2vax2jPCAD3IxgEKrWIhCWmZYbVjrHc0Vqeb4aCgosaghq3xUlwy6e0+5Q5yVNKA
RpQQT5Su/VA2mXY9W/knVq7/aNhDb/CGu6Xz8MX07uZCIdb4xe5Nawka2IzS6WObb+GUJJtSf4fe
ayzPIcto7TSeaZPcscaZhXh5bvL0eeIrQBVKUJOR/WxGVxO7NMvDZAvtkMDX8aNuaJPvD8NoRlt/
DulT0NmxolsMGbT1RFadzEmPi94tF5lcOVC2wBdgqkA2TXgz85QgIF4ogL/OBRZP2Pi2j2dQJIsD
i8mU2lSvzjd8rHKuWCx7zOwrno7okga/oOUon8Mk3mJ9PsNVs5BBMkSIJFvukzx/mIkZJvRvqlTJ
Cxe6ab6iCi1jCNy2txvFuNW4Uxv7EOShlGd2EPlRLlt2njNjP0WGHw1LxMbdEXhrbFZ5+bZW+lM8
VfXPdD1mbNJmZPdBnAcOBe85Xu7KHI3zxUQpSUmKGgMNgJjnVdZTaF78oTRx/aDzRweSMh2nNsAP
ql6tqSPRcsFr+faTIoYkaMzkADR31pa407imSn8s0Ac4e2N1WJv4ygyZvLRiQQ5Uz9Gp488BcYTG
uVpYSQTBAEj/DTXPGs2cwLjB1DexywkPKPGlJfvG8VgGpelhJiFC2zmjwH7ZfL8CHjDJSQALG040
PPtxJZ1VtsT1A60l8G2Nt1arjooKS8/BdDnCddcCjmyaqTm4KL+10H3/2QzWq5FBjIe9SV24TBDc
ge41hY5NjOw8rkn8wC5pOkxjLY1VNNUPWJs4nmAAhWAxIEEjItsjmhWvEIrFgGBJg2L/cTTUo5NF
EWTqIEPtNodFZChJVR99bYqw1PMUykMdoBHT1bBvC5ZciB4n3bn843p7xeH+30eTdUAMeImfhTq5
vXn2O6JL6S/orZ5u+8bTruvQhYjldL2OrvDLyxiFb17shrwbgF38ovk76sUBnRZ+ZU96LHm8/toS
oxgbez7v3Y/CzJv2cGNK3aybf+NLwHl3SOpnbJ0X2HBo2lhJsEzgJdD0ytdLfWgqGYzFagpdN8+r
in63vcQX4zodFEfhdg6xkxKQLxNiAI+2QFcZ9Gq8VKBZwPOefHmbOwsPlUXnYve8B6NSPAinzlnK
EFo6YABiqOF+vcHyKfibTNO6BqksA8Wxc0Pl34rQYcm2pBFqCpi5kf169fCCIAKTXcSsr7T4ArAv
Y9MjmEQPsfJA7nhWND2Qxu/5Smzuj5E4Fhgo9pL2aVrrtPu524QADVV8DGueeYlJiSuCfwv+1odV
AUhg8XaRwFsUP9oirRgcY9qu7HE9ItNEAdTnAkv0c6H/8jyKTfCEKMjrJycE7QchzgXit4JyMUzp
toUiRTGeqmHOtzqbYG1lJFcQGjl5QeSfIFc/Cs2YjT9CN4zkrB53LbHaLng+9lsMZaEfkBQA0IkV
ucMONNyBeoTwNUTpksQc4E013TaDdWxN1VnE7AHSibHkw7nZqnfvAMrnRhqiAVxNAfiHSaGBgKnN
7c+PKdb+amac/JD8I06kNW9NmFAfHgGROjgma773lkoRxFMiK77ppDqIu75oI/DTmFrWRqyHwiGu
BM0tzXQSKWUU6mHa3gocV4+X9Oj9DWcCn8Ph6whzNN9hjcXNY1MXRZny/b4xQA24R2e8Gt+sub8f
rhmuGq4pz/iaqWKwDppGYktk/a0no9bbBjU+kAAHN4aZ7dh3N2Y3jDqcpYhl/t4fnAlTcy38AtlE
7J7kvYWnr8+VJSRSQZaCXstHXJGNA8yDQ2mOBN4CXeKlQs/xYKyGrQpMzAExeQSFWEkHZMBAHYOy
wdU8RW9DvSndbf/Qe8RWSsvhynYL2tNPaBt+0o0q3LwNQhWm1QeCUlXA7uRheiqsujUaaPm0QIuL
zxGAchBlihqjBr5a/weFRFX3dxr55fVnzobdl8qTEPoavC9NaiSpmB27rxAUkhgKJJgLkhKOcFfn
AD6fuUiZR3sw6RL9rh6zsTi5Nqbt436iO3cvljU3Hui+QjJhwnr5lBPG579V5iB3JVVGDcpXHvgs
WTT208+wB1cjXFxsbN8+fc+Waa6RkAK3jWQVC7KKcjWU9WazK7JFOp7kuRPyLrpVl5OBgAi5tsEA
GI+7m68G5aGrTdIvd67bI5kaRJH13ws8Uo0rW6CZEmZEav/jeRm9OYFURR9g3/XV70+w6Ck6TKIc
NgP6byaXHFRfqJ0ULi9WcsD8eQUJzqjilSTA6QLXSaAMmHXgQ+1wlKe5tCqf8r47RdIDKBmPHFNy
5sa2jbg0x2VD/v0cuW6sGpq5zNXGrnYbl/nyeb4zAvJSw6eFtp1i05DEcVzVnRO9KdOlTA89wSxN
byIjL2aqPIu6qI8wyvnsurOA6GZNtUyUNcKoIQTxcINOaia5lYYStwllYWEuWLjLh/sLsrkG8zeg
9hYfkUMqN9fU0ucQ5+S8Vkw3KNNmQnsWzSuIDH0HWISVq3BkzCDUdQDEyewuTNYud3dhEtgYTN+E
ZFmYxv/DvK5ETuDY/OqSCa66wyLP/q904MjB9i6y9YRAjbcI1dC187/KeMHixusks0aZoINC5kl0
OHKyb3an/BQgCqbHbmkcLG9Q3lMbZ5j2HzoNJN8lrp/FF814RQPADOweLt43EwprYMb8zVu45Cj7
Ki8ZKyePrZUusWIMYjLkHStpnK1+mB5LvYUPAhGEKuIxp6ySishd2tTzCao32Kk2H31etOV9JvtG
a0goQSBmp/pV0P7MrIOjHfI/fsYxPjpDpoS8Umxq3tJVwO4ULcylu0O0qmQh9j8RgA/cNeliIb7a
pwQEbB7R1wOGnkO/rLokuAS10Cpc2xUKm+OBkfLdYM1M/U/3kGkLod5HsAj3sOCGytz7BU9uw+cl
/r7qEbu9PdVnSa9HVd0EckQSEF1f0f6eRzD24QeTetincAQK10nu8WS31jfQkB8TvpozyRFPZdIP
Wab0wGMMXKifMBQVL00C3TUzUTwXAVaVpuG5sT89BFpJHiGjX3yV4FMlc/thXBA3IIBEHBHs9KaC
TnglBGcRKKZMaMT52xgS1Nuyul7fnAOlCpYsOUZQJL+qpbMJPrXytaIW+KeRZm+9nY3z0aGnXp2q
qSEp3Xfq3bk4VJ9GHsKyMhYZNc2rCLLcYWDzBCHNeDT3NAkLWwOo1pzUMqzhTxU8DX/mZgBdDir8
wdxEHl9z7ccO1cK2hP3Z/yJJXPXMFUF52TCpNPydhzpW23EC1xSJGZDIVOGUg2VoyEGnkUbmdHSO
MbLQsYUzoLl/efPBSyIEuwxTUzmc8F56XSek+a8YBjm0OuovS0813ufWPttjrC8rhqmFmJI71vdu
sVk2DMPFu8y/Gxyx63WhHp1h+Ai26ebE6uIRairEbLzWahcG8PoAVC6VaBrzce+L6tpC6v5gidCQ
7aOu3Qgau6+5sCNJeLkLyjtlGXaZAWjhbSfPfYE8H++BaFZjqninZOULd3LyKN4Mr3oA4K7gjxw5
xHFoXmgYZDGvCCp2GPFWJP6LWYidyO+g2EoYbM05+bff4qh7C+eusLxA+67PXVkBXsg2ihtK3RCB
pzIK6qaek5hSA0rX5bFFXtQvuGCzvZgiclvaIExzLq6MGJ/87S9Q1IKO9vicfwc9Cf2ht/gCC15P
x2G76ZCf6MW5fh2DiqbuWSYllOyZB0QqXbyqSzPN803tkhwkHKkjZ4DFKmCSPC7psXZrEw2k7iPx
ilkEWe3AqSBWWbPD0iG+sw6oUGq24NPrJrfhTtF7nbpmpF4YQxbNsoPklza2+lvw0aLbassPKUze
BQc6GJXI2FssIhhP5VJ9cdF16wSiyTcceRosabja0jKEINkmidr9zPn4Sy6rT01eGR1Y5VmFpG29
Z2nDMPFOmvlGbWLWTlLmxUgWE7GRaeZpSjSlygEUeIII8q92ZWq/6tuGufHNqJ0dpSP95C8TFmOj
dyc3B1onv/kOAvvNTEVZIna0VOjN3LwoyTtDfxUMtGyceq4o3UTBQRe6JMNfcheUwyON5mCjS+OT
PunhzATAWfHiE5D7lS3b+cV6U47OktVTEEOrxHJpucAOmYoJzyTrQ0AMeq2SvXV/AGqz/PsFIY2E
CspulSudUEvLrhZzFwXB9h2zT4yAyvHKD8LVB7TjcEwwL7N+fgxooL6ACyaVu30cyMHn4rLJOk0Y
r1wseZ6r4kSEQIeC6g3FVpuiRpDys5bp0uF411z7XNOTMsaOKjTNan/GREqDuRlicecHRgPk2qpn
QDLgnqpG1jn5wMcaCUJc6qktkIjioCxaCR/dbcX/J1aFwFn3wVfWoh6HuXsOyaEZ9VDCyf9TQ/eA
W3adPNjOUs7D95paQCNBi2plfTAKJ3iNbdPrJZGDilXofcZIRAHeLZPzsm8H+Qhu3DKFv04ZqTMJ
SXrHCPuveDrk2zBn+MrdSIm+StIvOqyCexGnUXtx6VsbOnfGatFmfDOQ5krI5BhHgy5Rtat0KwXU
DUOEBdevqXUQJUAjScb+i/rU/xc+5PhKuZ+W9l+XiPioRik5GykykpJH1BjsDM3rLTID7HuItyJ6
9kjYDILXRprPAkIOjYb4itH3g6R68ByiJM4FzUtPEcSg4g6ypb5kAVU52LYqzLavYMoEQPutcpwX
3claKLFuGGOgjvqOjqOc87mDXjQOj0PUoLlH/rVXhm/yRpwIcgcAkTlumKaEQgqAPi/nOGkP94Tq
aIh8F55qWhZ5/uF2YrNRnZUA96i9RgyHKGs5yYlUNxzWp5smMOaBZvd000wkInaO7n70QXfTcIqh
a5zKC/Yed/sZRp4PTboXQBDpZzI64uSAHssXPBO+P5YRlIJNgiPEARwEYqJhYSHDAdIaJ4IOagA9
a3FDOSvZyZO6WK7Dbj/05mUAAxZIOQwD4Qwas2h8a/CUQb+3MRYb42Jd0w4mlRtP6T50ToHGmYpt
6mdw5fclItjOrJDqAodhPP0xxt7ITX0wZo8fQR0qwutB3MPb1MvjpWKgDm9zwNoooxrUdP4/A45w
zlV2XpL2KMnHH2jGc0RmFLzjcEpw/vYB1EUzg3dQ8L2II4AylumJY43aL8ynRAFIt2DIOhG6cZxW
l8Ey70sDTzKoHglPYIlQvN9IFYLrdbjOsF3Wh20zL2Il1pDhDVdIhmyGzl12F0duUDgi0DF7ji0x
FP63q1R1l5DfUJwzn4RIEvGCydOKEPqBQNUQFAa+gHZVOv/KzK9BlzLBx+tznhbptvjbrPrLvKKJ
ui0dEz41soznB90Jcudau2MnSe1wL7fKUdkq42GZf6F2a1pOZtDcdCD3MdA/OF82Dwec8fh7ejwi
4wTkEPNTDN3kOgMJYQ2I4Ti6+BYgyvefXmfmRVLS9cqagciDvhjAIvrNn5SbQWHYEphgYzldGnTL
cFzYqtEuuh4ivCrwySza5FhiGzyCKTzxkeOee5B/QCleppc9EddKS25Er5Cp6PTPaOZPJdr9C/xK
JFnr5DMB0tPx2hn9trUp3J6VTUt4FgDFZYDavg2y8XPd9PPBAPqwOaLTXN0LzPY3oyrEQb7SEMYv
tzsfOJ/wuWTzk+2GZ0MvJqAM1hvYJ8Nl2OXGZZMkVhxC++uC81KtXXkvA1ELp5eShYyAzfUZ6WWR
enUVXtw5+c8g4RBrKdsoReX330RQXwYbsuCyxNMc2oKBMBndKlsMhbyFqv5tiUc0XfKE+Fxfq+N+
F8hacZAtU1VJe3tUvODt1dMBdH9U4KBQIa8lqIE2MBbPRpwOLog9/A8YkWAxbaEflH0akeu/S8hH
nN+rpPY78is71Vj+LCkNnBoFRw0jdXDL24EFsnSEYkNNGg7btPzNrS+7SWxaahwV7Tk94f19KMZN
vgIe2SlzPUfo7ReGGQ//Reqv1G+DQSB0OuPYM/2KaQcmolkjoibXcZs7CDofEavOeFkffXVGCgIZ
vjVeKSskHrvkmPF4doXSDYF7OezjiaR9siNxy/wWSW5mGeHWTjrDNidZhvMu3It0buQQLJxtmTZG
b88wiiUFW/iSNMrXb5hY2V2tErps3qM1PuKBA02IUedyOoKJVsYA9WWzh6250mjhWGCrhJCcTx1c
Q0lBxjog5BC+7lZSPmzMCprs0JFbogpLQVhDUteHzQjfGTqucQ2wacK5/yE4vV9kGtNl8i8t1uxj
smGwUfDKk4Y5Ymjw7cupznTI/6RqKp+cMYnfwQ6VIY/bVfIcsGQivAB3jCt2zDMumARDVOBM5uvY
RrpQXIATi1VtnV4nFtYOqExRXS1S2Mxb4v3fOxX8Ffa87H+0yS7d8JrIxWbGkB+93WWCM5euRlBz
1Jiyba8LaeQmXZNLgNAeZr5sBei3Je10SQtwdD2yfrsmxTRL5NcheIRiot4fZ8I0g8Q1+BSVij4N
AIaDHYKxuIgAC/OdWTjXpqXx3VeNr0ohQvVfFw/bibv5kxsI4gefYdhxDnZ+5MuMXq9xtLb49ugi
usP4slo64e/76Z5pDorv/QdeuFcj6V4iSMwuv6PLxrerhSD+VsOTwV0gD5VUGczheIeREMIOKnDb
Y9sBpJVsFijnL9nyQj5DVOEcWLQLX3YEE3Y1qffw8Yv++Ja8NN+M67DsVfxZ/PXOZKBOEMkvGGVf
b5NvZfQifTqA5cNkfM6jhm54KGpBOvD/X6m7Jk3ZUr14UtQWeaXt15AiiYDa3zqIzo9qnv9VSX7b
IJtBQFVRGvIQ+hNGYoHVV9osBk0U2dkRFNs59b9boeNUfvclf4ACRjE1von1TRN3l0ulTMlDQGIj
/tYLGHDekfMzA9tMkx5ViDRG8zSLSpP1R4Ok3dGlb34ksr0GPc85C7c8NPKN0FvXwFsoGAtGlDma
Q5QrhLAhlk7kQgDb2kkgHXcahGCxYJSGeITbcNfTrOiN6+dZxbdx4GUeZ7+jjbk2QphpMV+auLOH
aRxMvSa6ISFOxAmR/9TUjGt4kost5tpPTUzk0PCfOrb3oHnMZJ8FtjSntzVche7SIzYII423XsfK
9tDm4skFFb3QNhztW7zLH9MBCg3jd3rqDInVaGObNq6tNRb9iRii225KnM3Y+3A6zgHZGOculap7
dQyE9TUI99+zhzhjHaLwQ7tTgUhhHiePO4LqYIb6o7T+AiWkNVZ6K/7rpAGcVaSG4KKzhS/wB3tk
KCnmBobDyZSkuAdEZIy7kdwLebD5Pkouyi1JVC5a+TgrdIjnvymFSx+1DFez2iA2EcSH1U1v6u2k
Mnhcm9sh1aLYPbyn1QSrn9Qhz4de2GlIClbmeHszSa5llCWuTDHfzoVR0Uxgk9ogkYqzb3sO2CBb
EpYNIcpXg/+q3VS4UM/Kba4sqT+XbtaiSsd75ieVOdCTAlwsu1r5hDHMlJgOzjPjx+Hz7O03GEgR
FFhx1Hhp1aXICBE8jb9RrZjwOwmfbvWjaf/0uKo9I93G15RJ9O142Jl2ZMWhenUX4kerMPBPXbaF
O3K87T79+sJ2UOwKMzt5Aolylz7Ss8iZaeywBeMsJLEKtvXTPPBiyIyTnreGgc1i82icZTVObq89
Kfg4tWJldgMaW3B/0amnrAWIHAer8PB2rHpVnd9KNrUcRRtQT9IYOuf+1jMQ4rdSWvUOw7A3T0iD
+StZ7C6wvyWgaDKyaZ5laTvOq2r0zZgbDZGI1Kp2BGq2hpmUPOdWQJ8DyRn4NhZRiOQWWXoE84Og
0IuBN+rWpui7HADkwHBIC+u8hINYmt6p3/I2Dp6Y8cdzCUCHrWog9ykaTTwMCdvrGdmNb8EsDH9C
DkYZEZr7UNZWBOe/4fWwtNQkUp63hTtXe8w/ouGyFgxejyJx8nhvrBs1QfKDEhrPlfVxo1nPjpHw
/493nE90y6TmZgfAZAfVVO8kn0BQApXVWzOTZ607SQVgCNx8IKnKKxmr78dCnSGAFPgJHUbYTxAv
3KGLIiVwnSeY6g48XWjdNGb6D/BGf4SrJAaO6IN8Nr/F54VeTuy50FSqLPL0O5lbhrflS6ScpWI5
m8WtpV+bADkAgT/UxpeRxO4Rafy5okIPhVEDvTXI2m1yw6EXZ6naq77ZsXGJ9FnKn6jTZcUw9YTq
KaMRjEk4J0gzJUPw8wRMGWL0ypGGMjYnHtt4sUaQC71CfpqrOZUe02wZmRko2JEOoe7wPHnp1SMg
79GW/vLTxK3iCDgmDcTqnVjWkCfvcD4CVVMhPJsooQW6HIa5Y190iv1OSBAVNzIDgjkgjFHhAkpt
o4vDCNHhqCe7nTvYJ4sFi3768Q1Vkh8+1ycr3CZGg1G//olWfBOjTxiJGZFMLRXn3KtCVFUIQ7Zp
Nr9H5d2/wN5vO/ymx+A06vNgj6NdCm8Nap33ZxaMXnWAJkAUKHjuE6KOuCq3f8LaqAvNXz/tIG+y
fZcO9y12PMKK/w3YrxeJsy2YRivZ5gDPxmvZWLq3ssoP+Kuz/cGKXhA7I52z8wp5Z7cGW/qOtXRe
p9FLtzxYdLa3c5LPCM1xWEf6cv9KSjZ55wgcmKAdntj7TRkQAjVgNqctEUkttf882x2aFOokkI9c
Io3Ci4qSyuNeyHiSFRPQ1bwAweSHCI9gxPnlZgxVc435civ7mgp0MGn9VKLwIPrThW4lx5dQVDHl
ZSdJIpb9Z5ztM0R5roQdNXZ3iJWezQaPVE7p1/fNWman8V9/EeORzctOIw9ZamC2dERT5c0clyfa
dZb81yVzBfXEGIhCHoz3DVpuaT5+BREd/dChczhQZ7LSIOeFMf17ZmWl3nssSMY1uySw7Sw+xZVN
03bPF6agSI0D/w5KRKJQ4JDrkmHjwSwHdAeuzV8P6d4sWkPGByJ7Tiv1Z34Ffdo1pzpksMTNB3Jf
HrcNwgs5xU0yNutxOxSgNxAXbG/fF+AkwSxAvml457/0mwD7XHo4U0MtQmtOc+GsBp6eXwj4PjxJ
j+puy9zFxxidFoDZ7ItKz9TKE+uFe/uDC5K7vY4XTW7a+Mlf9S5jfh9klRheQqNS1O39LNziN8sv
TfRP7Zcwu+VE2x4JYfRByDPOFzBm7YSJiRCUiahyxJOAeJpDgRasaluex3+CSZiRXm59uUiLKDij
zR3egJVXS38KTo2aIKKZuaUANg5C6NOuAQXaVThsrFpdUXzd9iYwJVa9fnt39Yai43JrTCC0WXwQ
TjidsF4uqrg5NwcF/QD0XMzagRXxua3FoHENYyY6zrSqh9jKG5VN5+FqAaXO6umSYKvbOhCRwpjb
9dGEPQINkC8Wtk/vJHr/yBHAJS645wh7lY1/q/sXTqeHcH0n+0uNEm/tS8HAAnh4aomMOuMQQhLt
ErU5uncVFUGCiygPs4dDScNzgsJmYPAVuDQQRF0OmEZl7S7cZg6A5hRz3pHYHjYqf33+nFodMx72
kkV/5c21ID1XfO8m4Yw4+zMcwD7773tHKhkReH2n1AdDoiZosr+KjFvNcCFEypQoQN1QVzCqhLQg
7hH3viGzkbucd3+Ka92ym++SaAR0gNyOZlnq7XRqtMyaj5ypGPsKHhhwsGfeoz5YnlZL6TKtKJxn
LE/RczILSyfS0+7mJJ7cvCB4y3oYbbBVmYQrVqKfNAZx8l0P6wz/jNtvCi37I0S/aleuytaK3DhU
2uVoS0aPJWGTP3Nvw9KG93I+udSTR7OrME9GBmC269GqdVISDR5rRm9Gp23bNHHjNAvv+ckAHhSj
KY5wy2vhDMTqAe9UyxGYAmdnroJmhaW+VdabXrRUZPnaWmsX/kMKdTe/JaY/jEYGRusWvodETaA0
bkOf47OZcbw1sXwl2EQJaVkAU3qt+agzpIJONBTICmUUVPj6LGnXpz4T4/TSBhYRHnarAZgQgqCr
TBpQZ9Vscx5ZhtdIo6JeN9Zg6BNvoEzrQsUnWoBHy0pqpyMWAXQFcHYPK3E1MKf0mzfsdQ6uuCrN
nX4PINkPVNIyUCsTRr07ne7QQQyTcNJpMtjc2RfNVMZJJwLOv6P4aEQIawmzZ2WEk4+cwe3GLTYN
7nfa9nphVDxg31ghoprXi1AqsrUjyRW36BlKLpFemreX36MBASvSBIaPyWQ20bul9/L+Oo2voxKp
ORpOCLl/soT0lKDpuKkSAFy2O5ea3OMPHmbJ20uNGq5wLBAFVcZCNEQv5CM+jUdQ09+fXtwh/gm9
I4xymk/BWYhnGqReXaPo6s2wbS2QYHYkNBRcg8wgmiJ9v8F8TlhNKYL8JGjYeBVv+KTbiMk6oxoA
hpSq5xWsBZUEx/NrQHopobFIVBDtiNxs8OJTR3BsyjCLLnPaFVu/PVocNVBjcY2Z7t8HtiQ94vCr
//PcgYcATh9bqh84cuB8u5SnXRXhfIqb5pGJYU+dQn5KcDfOaqnbBJ5LXukKDYcSC5vXFXMEYJYo
DNLUrnlyw7WboqLOcbWgIIgbY/Faj6RSRExdESpXogf4q7pXqEd+jdktwoTUrgZt3F75VzVdSOKu
5vvXwkun7t/M4R+io8zn3YqBe+mxtiNGFym0otd8v7jeXTCP+V/Ce5q09mmaVrfVFBnditSIXJKm
vSE6ttI1Qq/tVUUXzg+E+N/KyzIsoe1CHjAlzHy7/8j23p/haRwuiklZ/lUrf0xM7LQGyDSk8Eb+
sHN5d+Rg5VuASnPEvN964DyEtZQSWTqBfNqhB0djv/CyWsmkoLK/UbP0qDD8q6jU+ZuWwLougFwy
/4wdKOnB76OEHTIYAOGVmTUKMkQWVgmHjmQoBa8Cg6JtxBRr5JaLdswyQaG8kjOvMOBD76ijexXn
g/ylZ4laStD+qVCDIHCu0sPhN4HNcXL2Rcau9Pt6IeHrI1i6Q2ai4/k1/NORDfeWVMNVMhujkHFc
JzNdkmzjk56ps8EqjImzjPl+G6KbSpgfCPxjYJNoPCz9KHuD84niar4Y8mPDRWL6jTd844uZFWJg
sFcGOZgBWlmLrZCW/CA5rIE+TPwEqhv8vg9FseqXHchGUn4qRK6QoHZSjKoTeAVH8shCEkBeA/MJ
BXCvuu0NnBIhASp7qEw7imCJKDvFNRHjTg28Gh0YFF5u+6eui8o1cR0ZfNgPNhy+iCdBrAgiY7OL
QHY+ncSypEVi2FDCTX2tNC24E8xV8YOrQHzzl5KJJL8CHdFK1ax9J4SUYFlSr66+uvEzenhqjCmq
kTETsfg1f8gc4S9e6vzFn+i3bpUqt2Pr+e76YLrHl5du7uw5TdKuU/AiRfznHYbW61RK9tYmjL9C
oh6fJ1tjRmAYiPqP4eJ9j0u0UuoC+9uKXfTxY8ofbyAgmpPc5EmDE/ju3hAP59w2tUnygOW2+K/d
PzTsUOeTkx4AYnM9NpNQPFstUAgup3+ko4fuExA2/3IQw7ZBVX5Z/nU/7EjqUcyIp5V1YBAAiLya
R0t7rjx+R5tPrD4xjrqx+yc+J3NgXXjP4/kt8kyIlP8wBezErMdsHJ3Mv7wy16/pQK8CwRmO8nYP
uJ4apMfg9bG3D54HzYP3avXo7cd+XkOOcDarp77DTBXt532Xm8Fs8qyTBZUxyRZj2CgDcttv65A9
MxqknUkTlNcpIzwAKmXt9jI0f9xOGPjwiq4xn5lMYzE3vYrftyIIpuT3ePgXuphdx4dZDdJpOR6b
s+XKKxQS0QhCJ1ptsYVV6Q2QHNodFQB+zRQgyfY50uzDfGYoCRgyv1bwKmslsQHS8UhKhJgqK9+8
TArI5/96/e9PHKqi3yg4Sr3fFXKagsx+Lxnj8dApdldHbFk4cYAQzkgNkol8VMnyz2zte4RHtxBT
k8MPJ+8g2KM867QAYuaPUTMJBZnRMLoNoluO5ysfMKIa4tDrLDYmJlv0Sow+uOxzb4x9fO1yM8kw
enx9rCQe9hSNg6WkIYJ/QIvPUGSPgV50PJPzh+YhhYFT9nO19ubcBb5M/R2b5MszHUydJUILF2xD
3IdjCmDUyIr7URdiqrzyX5uWNhNYuIy7UIHV3qo81BLKgpdx+QpXv4IgpkUE74m/c0l8dAFNpDUL
2xXwG+oqNfooLgoJf5Mr/jlV2VdsHyf6GSlKxgpRUn2neQpVW3000SZ5gRSEblR8ynm6U1uOP2RI
Hdaw7iGNfBHJUHaOailmRekXW6T3OutmIEZUkfjc5PZd/FNh0mHzX6DqUOnfAwXMVxtOww7Nr4aT
qED4/K5WmXQz1rln1sr/KFd6iRxMudiYQ+UftfULH3Bj4IJz8hrqvGeaEy/3nYt8nDFgMYNBZnUN
ElTJR8ehvc3IX2R0yS9QvukCPhwPABpy7BeNYKdGrBSm/+v0GDN/fgtb3ohRPUS3fBcKbi6Ns1D5
SP/Nblb5dm0ZslB/l71+sfeV7JnLgcomBIQbydgjJIRx1nsvkC5mGtWhQErLBn7hY/8Db+9hTvkL
9JRupFm5vA0URI2EhztO0zo+3KisO1TfKxtYFi9juR47LTOsWc2aFffPhTBehivdpv74msTIztAw
EQmtfs4CZG9hni0xDn03Tci2/gctgGEFGXOIMLuJsEodDGl5nV5GTBCNnbAcYSKug9gIysk5rBou
oCfveSh7SIUEbxCeJcmipCeH4ionPn6ul65eq05NE2AH9s7wx40sRr5YUULjO8NzmYcA7nDt0K6C
VGsuGdlYinYsXN/zMGOcfC6vyBwSUUETnu5j6GLE2NmFz8MXfdFEBWfYIQmGgbTsOpMJGx6SlXUy
itsI5Aysw/4cE4ac+wdg7WK9IUzIftvfmcJmWB21kPZc89ypDftPNqKW5sJj94jyYKRmQvVrXilB
pepdH5FI/VO5v0PQUlKM3u3GAmp/M2zCPt0BWch/I1qCO8u6geUMg4JK1b46rRjRkASLz/VU5Z0+
K3ncyzhCJzNlaqBmJOYnBTYwriXCW1fufzCVKhOYN4PrpoF8Oww7mR9f34nfkyET4PmE9qkZq7Hc
FnJlV2Rw1Wtw7vqZ+l7j2CbvjuNhqX6B2Sm4zduWGk1jb1vDaEHZgAg/PntSz4VWF7lOPHzNfFgX
81Tv0WKWBNtK9K/2xvR6anzhIyDjtBaPKo6nVeG3i6lIeEu8qWHsf+1H0KXrstSFZ1iWByT1PNF9
SldLRJRsYqnbf8b/lL79Crx0rkur4Ak23sajzHp+jM/FbfwX8wHRZ9lytfppveQc+GPuBMAJjowT
hG3QlJ++KMRn78LIAEvz0p+F+TAjJTN1k2/ORx1nkrPk+rMQUcS9QU3DCg22BV6+xUH11lRC/Vts
bxJb2he3TY4OX0SsIR/IC/YXppGEerfE+Z0Ia/GbaSIgSUbuF3Uw356zfSQiY5ArG1EDcC1XhQEb
J6sy7fdyDUsKyQYVqTTTvjPM9/Yb2eBDWe+2P5p2QFnw6QOaW/wIKxqQDgBowlqWTGhrCLipTA0B
y/7WWcQ3B9zI0zgJ8fpPBezZRSE9gADbQMcHwyEIJBn50gFtrXRdIH4xi2eGWkV0jDII7rzHFWA9
aGyAPV+3gsq3Ef5UlGe7UckfLoGTEeqTDxCTqia5IIFVyCFBMnArN1DBalJO9wgrS/uCSzXwjnI+
H6Z0UAHxfS6MQ13QBSPgHvgZZlArWMq7QqwM5schFBSuRv5beY0Ae1sMgGD/V5w9GxwWc9tl6chQ
/rjWoJEErOa9SbkIpids8R00Ca1hRgwVwKuX18BikGC+JH6zk4ySxh6XAcuUPx8rZJxut8Xa7d4y
KVnU6j7vO/AN9J/fxXEzT0mfkr1gJaGEpkZHDSilz+yLs42aZMqWij2Zs9Ni/pWrnSgnFjfjxXTW
G/aaiUMn8egHAkaXi5ZNur5YXU5V89GHslSKUn6QXYIXr+y3yGmPGi+VzY7+4hKB7d0wZXwhY3VW
PSzTk8HjDvgWHEjqyiav4rjkBkg6+Cs6vXYbDMzIL0L/z/XtouYpwMx3nr2wqA3YGerX+r1U2aeT
ok/t5EUdEzgV54ANW6Ql5qLGDgGWqLz0ofDzsqBnNM97iLCTQwO9cJh4UMqHAXC2qEXVJBBeLeda
jPRuacTBsOYMveLaUcJ4KyLKZQufOIHuqs4WmAvP60BaqR+6OgZnFA2Sza7G+Hvu1vCZVj+RMSnr
SABgbHlL7g0thq0elTamasBLaV6K207OJQ9CVjK8Wvx+X1ZFLe1M85b/1Fd+i/GPQQt8Q+KxDHn5
4uUrqxspzfDtOS7rbNX8xSaj+4xJgfSZphaYpmywdc2g/iiAWiB7UPZ7GHgmhcoJFn6KVVzJ9Rx1
Zo7x9E5jw3qr3eEbmh/+YlB2WMHyO5dvVlz2YsuEfkQQWxo9jPCnWfpxdg4TJP5mh7kpNNjw82dw
0Wl7huJUK5jSdxwURYffD75RcAxni768f9U4v5q7tUrIIVrL8iTYOcXN8TXz/tb4ETDSM1k2BebK
q6aBHUmEDfmrCfTND9nu15UWVLC6AUnsd32GqZfFPkt/+ycBVqiRg32qvf0UJurh0mLXE+/mtuCr
2VcbAocamQAFVfneD3j2/SSq5XxfSoY8L+OE8G9mjJJ0DSnn9YGlEgM7cFk9nnK4W3XhzWCFSXty
Cyfy1nlBgbOfitJF9Ikd7ePYU/RX/Hlzv0krj2SXCcUdApqosnW9zUO8EREeZCCh4FAnrTLT4PSc
qqM/kdj/KQ2QGoX+uQZYrQIaEeSO9TTUWnrWDcunmunq7q6KEJrwX+47I63k1nxPVhU+7yf4Phur
5MiTbsgcbiBL3HrAl/lWI/SH8Tor9Nuy6/GqAmRbpaM7o7CDiolqypMFSGbgKsF+lIk84Iqg83rk
ew2axCZXlHcOI8UzngY3UwuopvfAJlvi+HTGxl/CnO5GCY0/bwIs0erJbLXi8WOOeg8G08xd47HR
XXfiX1fv53/dxw7NOQT/mwQEYL8qNzvI5PUj6h9pzvIIy46eXATSi76mq4xyWyXFtDH79b5TJjUY
G9hojfpngeLwniyjQpyqiQmYwMUj/vwL78ip1veOh+AWNzfTcqsTXYwP2oNDx2s4Ab9ihrm4G8RW
4Z6r+Sm5HwoRMH13PgV5kFGGWB6LdhIyN2lYtOmUjs3QV0Kjyl5V0dvij+AN8MiBS+NKb/zdpyo4
0il9gawOqBG00P10RGJraLtp6ZTRzGDFX6C8bncDqeDVccstWOFKV8fA8fCGjdBi/iMnhBVWIX71
7MszA6HJGJ0+4dzarIYZCFv4foy/rviRB8kbnseDLWumKsMszKYOPhdlaDz5pgZ1rMx94XcwlyRa
Ql4ULK3+dfzoQ7jLFDlB25zlb6Gp5l36R+2zcfnptvwkx4LZD4yiIq7GXuPWBL/KsRbamn/i87Qg
ZiEhv0YxNNJm1537NAm17n4VxFNqcqc2pHK4rBU/2wVhu0/XtID5j/H4ED+2bdbInoAOQLeW5vu3
H0AEB7guDW0/dzyNiENscSbZoHnRcczohVigPOAA86AtQJqKg5M+Kp4OvgF0eNPuto9KD3KrDG1R
r5T2wShV+vRTVKkjqXaMqjGNKNuWjuAO5U4wSk2hUsg/TgG5F5NgVDOFPehoq4foSdbmdJ6LeHFU
i2TXnoVV04sPFNWxKCMUXWsIFnblTnHTlt+ZcXU/AAF6lkhQlub+nwweI7/oje25QcHJgOXSi5TW
jkZJB/9FPTOahznodUWFom6DRY9WKrL2iNW+lg4Ab1jOpDpre9ta/hZCX2bwl7vgZoRmqwuaGGl+
9wSWMr9iNoMSIJAAOE+2cRzLjR/5LFavarV2O4KQlPVxZYVmGX3NNCt8BdHJ1auBc48j/3rBURbp
6C/Jg1yb4tJC7Enjztrw5fRwj43MMBtchuhAF6vOD+bG8kFXJ5lczpnwh/1LtEn+J3L3ILVO1vAu
rc81VFiKwTSI08TfVxA75f63I2FKViafya//2lZVBkwfpmpZw59v0FXKXQnYlhLcDaKagvtQ0vNk
eHC4E3HTwsrUM7Q5L3hjqMkWeI7dZqbOxXvG/0kiEIdEpHhPwp0nz9yUoEeFDevJvLxi41Bp0Iwz
/PaD96Atp2n82Ht0yJNRqyF51IewMpZ78fT/CpWQeQHNuKUfhmlRbg6isitNE57Wt9RALj9MxvZz
C//bbp1+KrzU5WqpplBVjga9iwvNMS+TRSh2uOiwQS5V6N4Uo36hF37v4Czp+KBIXwSza34zq4DY
V2m7U7/8Q26rqsEMQa8IW1bCcnVK3ei+aOSnxu2MxvgbLn/5Lz5V5HcmMi7gRXcU16Txm+dYWjXy
I+WdD9L2Qp5z/DqtfKpK/ap7j06ktRVoMbG75Elmb7qvv4W2TZmvEBpSkpN7BPAfM3+bPRKsZzqp
vv7LUP+GVDab99pvm/h4N7uPYV6IrBVC+wEtUUU4ZkXV/HjMBuTBlSsYnVDVIS7spGue9AJkXdmm
8ZbX9kz8vVIeJgOVV4XzCeO+6TaI/uHi6Vldfy5mArNxFcGcRjwfFqsBesfRa6Yw/JRU4Xdg5AOD
7ywjfyh3Tecwczc41sRXeTojnwSyW0P3ThRkm33O1WHwz8oR6/raW3OQVrz6vJ+Y2RhtYXlPgZ7/
VG6eEHAm2grKtRmQl+agBs05d+XzlplIC+Mva7I1ccyj3jt7OJt0WZW/UAqAn79DwO9Ah3PhN2mT
vHbrtOas7d7S1Sx5aGALbqTuG57FTb7fVY7QDs1E0hDPrMkeJHAJBSUflz3ReO4m+peCnN8mS6Ng
FzPT7cosCK61f2b4B01sPhu7y5PqOLa1F6CR+4DGkZykfzHo/jl2RygTdhuxwUk43IiToGzeNXn2
ckijvciHNhRGeKMqgAB/8gFeFeSiX3CC59BwtBd+h6/ayLk83y35/I3u751vqqtTyDGRLJ3IMUtZ
2hWOFv1W1wYPYR6HY7bN336s8M8aQ3q9IqNg/H3LSOFeLlfKHS/HIDcuzRBhQH6AqGS/ckhZk8DP
qhGRqHNZ1UmVDm446rsMx3/PJHb47cIqOOeNVAAAAAAAAA==

------MultipartBoundary--zIanXexzKz9mlCBi1F8XbId4LZxMLKaXDSXMumdjRh----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://www.google.com/s2/favicons?domain=https://www.nature.com&sz=32

iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAADG0lEQVRYhcWXv0sjURDHP/s2yQYS
iIoSk0ZSWBycYKN7jeDdgf+AnYV/gcVZCHYHWggWNhba+keIOfC8oN3BouIhyEE4IaBRESJEMCbv
XbEbze5mY/xFvjAszM6b77zZ2fdmNNpDCBgEvgKfgSGgH4g578vAOXAE/AJ+An+Bapv+A6EDJrAO
/APuAfWE3Du2685a/aXkaWAZuGiDNEguHB/p55KPAnuAfAV5XaTja7Rd8i/AyRsQe+XE8f3kzt+D
vDGIwEykgd2XOtc0rV3bXRpqIuQ8BfANGAuKzjAMBgYGME2Tq6srtra2CIfDjIyMMDExQSaTQUpJ
Pp8nm81iWRZSymauxhyueez6AOATUPRGq+u6Mk1Tzc/Pq83NTVUoFJRSSi0vL6tYLKaWlpbU9fW1
8uL8/FxNTU21ykLR4QTs/3StmaGu62p1ddVHsLKyohYWFlStVvO9q+Pw8FClUqlWQawBug58AL4D
Xd5cKaW4ublhcnKSaDT6oJdSMjw8zP7+Pnt7exQKBZLJpMsmkUiwvb1NPp8P+qq9wA+AGVqccN3d
3cqyLNfuDg4OlGmaKhKJKECFQiE1OzvryoiUUk1PT7fKwD0wI4BxHovRh3K5TLFYdOlOT0+xLItK
pQJAtVoll8tRKpUebDRNwzCMILc4nOMC+2IJhJSSavXpO+Xu7q4tOw+GBJB67qo3RErweKV2AjHR
QXLAPgHLHeQvC+CsgwGcCew2KhCapiGE+0sJIdA0rS3dEzgSQI4WvZsQgkgk4tLput6UzEvoXedB
FcgJYAcoBFmFw2Hi8bhLF41G0XV3q2cYBqGQ+zxLJBKtAigAOwK7ScgGWcXjcXp6enyOG899gK6u
Lt+O+/v7WwWQBU4EUAM2sBtIH9LpNH19fS5dMpmkt7fXpctkMr6gBgcHfToHFw5nrZ6z345izmtZ
KpVYXFx0pbxSqXB7e+uyOz4+Zm5uDqUUYBfv5eWlr1YcbDic7s3yipbsGeJqybzoaFNaR0fb8sZM
dGwwqaOjo1kd7z6cNv1HmsA7nn/EbmQax/Mz4A/PHM//A1sQQnqEk5YxAAAAAElFTkSuQmCC

------MultipartBoundary--zIanXexzKz9mlCBi1F8XbId4LZxMLKaXDSXMumdjRh----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://lh3.googleusercontent.com/a/AGNmyxYv247PBLepAMdGx5OWzsckb6qXP3LcIozeBuOmMw=s96-c

iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAIAAABt+uBvAAAAA3NCSVQICAjb4U/gAAAAX3pUWHRS
YXcgcHJvZmlsZSB0eXBlIEFQUDEAAAiZ40pPzUstykxWKCjKT8vMSeVSAANjEy4TSxNLo0QDAwML
AwgwNDAwNgSSRkC2OVQo0QAFmBqYWZoZmxmaAzGIzwUASLYUyTrUQzIAAB7fSURBVHicnZ1LbyRJ
9cUjMtP1tt3uHtOtGc1mWCHELNjwHRDi0/DR2CDEjgUSCyQ2MyA0As0I2s00flS5qrIqM+O/+Pme
PpWePwJy0bLT+Yi4ce65z8jOf/jDH1JK5fRIKaWUhmHg36qqcs45Z/7k/3Zd52dyzpzUmePxOJ1O
p9OpnjmZTJqm2W63wzCUUqqqGoahrutSyjAMXddVVcX5lFLOmR+4N+fMNTnnszhKKev1uq7rvu8Z
J6+uqurs7Kxpmrqu+ZcHcgEHY/YznGQKTdM0SIHJSzQjKfAv49Ov/MD4hmFAjjyNGeacD4fDZDKZ
TCZt256fnyNNRMZ8mIZkUdd1VVXH45En8Ci9lJkwz5TSZrOZz+c557ZtSyl1XfP8uq6RC+NBmn3f
13UtQTyfqV7Brzlnbmz0Nx0uLA2OmTx/LpPkTN/3XdeBBY6mafq+3+/3+/2+aZqmaZjz4XCoqqqu
6+PxqDdq5g5GnwATrqqK54DEh4eHw+FweXl5OByAyWw206MQzeFwmM1mmhGr6O8CMnVdcyNnWKfG
FWoEEM1fCBJEGWvf9zoDiFJKTF7z4SGTyeRwOHB9KYWV15XSZY0eVPJXhKXhceZwONR1vdvtFovF
drsVmhhAznkymQCZpmm6rtvv90jWZ+eT3W63pZTVaoWMWOwnAfH6EXw0Z19MiZLhoqFco8kLpZxH
gqwtd/V9v9vtkO9isdDrfMT8Krn0fY8us2Bt27Lah8NhvV5fX19LK/u+7/u+aZrHx0d0DSY6HA5I
E4CP+DTnfH5+7iyRUqrrum3bRgs40kB+dSxonR2ouquqKkbPr7ys7/thGJCji75pmuPxOAzDfr8H
/LrLH8tdMEvXdS9fvtxut7vdDtJFy0AKasvw5vM5BId2s05d1x2PR/RI0mdeDH4ymTBg3t627Xa7
raqqkcBG0pGAhQ5XMaZ9OBxKmKFhGI7H49nZGbOCeosZKScXh8zxeJxMJtIvfuAaTAkGq+/79XoN
7hDKMAzYx1IKCqK5oB1nZ2c8mUellKbT6WQyEUK5vus6eIplY0gfsK+1GpGWDmlfCbOSwn7tdjth
ElZjMUfKwmRcOgILM2nbVpKFrQEjD5zNZmjK8Xh01WvbFtXjUawimuhvZ52aplmtVrvdrmkadJYV
TeEQIBdBeLFYHI/H/X7fSAR6tySlyeiQ/eYueRB93wNgp0BkxwUyQLqXyQgjfd+L+BkuVhbp8BBg
OJvNQA3SgZW1fqBYIC1mXvb7/fF4/Oc//ym6YRmGYdArkBdaX9wPGgHEcSTNRBBa5MfHR70eSbF6
/hwUnnczK4eJ+F5sBdxyzsfjsWmaxWIhcSO4Ugo+FLe0bTudTqUBUIwrqRMFztFut7u9vZ3P57BY
13Vt20r6KRxjLVjjtsZ1jfNOzI4yJJXCHtd1fX9/r/noZXKdmDlD0XNK+JliMQYHHcxmsxyHhqEf
SimHwwHEOVKYmwSkeYmSeeNut5vNZqwi8JfGzGYzzfeJpEs4qZL9yK47pclhd3ljOw6HAxZEvCbb
jH1lSiiabsTHFU41GRcxS4IXU059ke12m8Prdb7jjJ6AWwBVN02z2Ww4U0qB8hnnMAyYMylsIxvB
iP31GoTjopw6EeKg3W430ikxq+jT/6qVx6UGhvyVKMEddw+ykJR+Zc4SKKyPGXKLgePHG1Gfw+FA
hKjV4jlaYM438Bwykt8s7VUMmczV1sqIO2TauYyplvAPLi8v3bLw78g5En+LxUGW/ur4TeYoSc0l
IDlfivVcB7HoQ7j4TgIQnAiE2xtdhMxkVhiZ5pDMUSphzoZhwD1jrIvFQuSScwarmlXf95vNZrVa
iU0B736/L2YfUROmAbLwaPAJkBoT4Fdx8GQyATiMuW1b3QiUNCmgAIgYQwo7C1B8DRqBxWEvmMgo
+EnBu4SrMplM5vM5doqLcdJKBOtVVb19+xYWL+Fn6wccHOR4dnZ2PB5hzRSZh67rZrPZU3DUNNCZ
DAVKt1wu+76/u7sbERy3oJUlnGbyLbwRtRKLjUBQJbPxziwAVbJDg6RcrikI8XA4QMnT6fTy8lKO
H2HB8XgE2LJEPIShC9LDMOz3eymXSJ2fu65jzlJecKQnA1tHBy6SiKKE93R2doalz5Fg6vueBU7m
ANZ1/WRfGYHYR6jRfJKFGtIFWYcSvjxvHSIpAba//fZb1Irpyb7oZEoJjneQstTigt1uR2ajRJol
50yMKiPbdR0DkEOksblwmdTZ2dlisSDyYEmm06m7Ebyo4ieoR2fd9ueI9bP5mlxzd3fnsmMxXWos
/tXVlfJEYscRHNq2VQSkVwAT8WiJaF5MnHMmMbDZbLgYIAj7IFSrDmkAHCRL8qht2/l8LhslcKSU
KpGCBueHrnMOwngdj0f3QafT6XK5XCwWWPcUJh8N3+/3vj5wsNYTeckMp0gkZvNFoWHpI2cILHa7
HSPh+fJrcqRZNBeJWPaRa1arlX5N4dwxhkb3fCdFlQjkpHcpJQxE13X4EVyzWCykU6IYGXtyFCkl
lEJeXx8HvA7QBBaZNoYLeYuqeSb8vVqtHG5AWE8Q5POpe42F6boOucsiJc95pVPfT0TgEs2WUUsp
kZ3jXxk7EguYTN1VSvnb3/6WUprNZihFiiwllCEjstvt9vv9YrFARkghh3MvU83kSeBiy3LO+/3+
xYsXkkKKXJdHrZxUOq2cOnfuebqx6vu+kpkYaZaLSfTs5nAymchUoXFaLhanlLLdbhkozo6eBhzI
8mG2qqqSX1ssP/2E86aROkgr0WUm7IMnYSSCEwL0A8mzbA79YEnRwYLQUsoYQdl8ZYHNuRNdyBFq
8Q5JkMGllLhmOp2S7uH1jsccnvd0OkVxxEFSTGUO+ZMSFMwfWGEWpJuyuSzeSCfkCqXw+FlaJ+aR
Oaqk4e6Sa6n1DjGR1lapqa7rFovFarVCZfwdm80GXSjmjFSWimd8svFaDI0nRyDq8+QCILxcLvFI
h4jsc0SCIFQwhDfdnI0wgd2Q3/PkrPjrNQgHpPg7WfKNk7Aai0yJQmUDgY6BXlxcbDYbBiokyzDn
nNEXVNhzKSViCMACZkvUZHgg9zpX8Jau6yhPEv0qsZsjzZijKJQstHSgVFXVKD8wEoqWVLqaImDx
QaSU2rbFlMj0DJGE7rpuuVxStHKWFUGKHREKpKshyp9OEViKs8FvjrCmjzykIoxhGGazGSW5YRjk
wXpOIkcmQ45bOU1AP6U7BF0Xns6MhMUhMbGYm81mu92en5/XUYqSK9S27f39fbYUT7KCstcYhgig
slWcgKeI38NOYSFH3oOarXRzMpmgYhgvuSDiGoyvqpgjXXkaZ21FSF2RLebKllWQpdcjkH3TNG3b
fvXVV0xD+YRhGPb7fQ47yjiglfV6fTweKeMI8woONADV/pFOiZgGXXPXpqoqhVdV1MhyBINk+DVT
JRiwJL3l6pyFU0pNtiycL7JEoCXNltarrMA2mUzW6/Xt7e10Ov3rX/+aUvr444/JdeBM8nzl5GAH
UMa4kQuXKWohpOqjnK3YBYB48O2EgjVEjtgH0tuHwwE+Ir7zWCpFnceViVc8FctVD9I9DpNsBjJZ
KlMja9v27u6OSOKbb755eHjY7/c//vGPZQddicTcOSqCWm39te/7+Xz+/v17LRWZJj1Q8bB0H3YH
FywhgSGLNJ/P1+u1+AUp81L55YjDscO7npTIi9bfqUoye9l8BJlMKhBt275+/fqTTz759NNPefpi
sRA9E0kxW3kxSIqZaG1Qw5cvXyrrSESaw3HVIilIUgqNCyCd/X7P7PA2uExHDv/G/ThnnycSZLYS
qsNHf1KY68Sp66fTKRmW6+vrV69eUU1mtufn5yklmefpdIpmzWYzyqTyv8kQ+7SHYcC3enx8TCm1
besAnE6nKGApZTabaahD5GpBB14rnMhSpdPCTlVVeAkAsLLE4xMeJTCVkkWH+dSTZs68jDSCNBn4
pJTu7u4uLy8fHh4uLi5SNHIQakFG6IIeiL9LdRCMHI/H+XzuNcjpdHp7e4uWKZ3ESHALWLNiTizc
hxcqHd9sNpPJhICGdcLqOV24EX/yG4QUZOQOhc4j6RRRRRW1J7CTc6b1BMXZ7/eeYQAvy+Xy7OyM
UtTZ2dnFxQWY4kWqfHCv4C1qv7i4WK/Xbduu12siVSI45SoV3PaRsVfhgOczNsU0AErTkVft2nMi
IMeRm61sQRn2krykagaMQ04qpTGcxsESSagPz1eSHBiSKoNBFAArby+XT7nqb7/99uuvvy6lLJdL
mhFEQ1ysXBoZK3TQ43UxrFtJZ2G3Sx9gokHL33Xp5MiBSkZDlDR4Opw6nU632y0vxnZqZXgg3FlK
UYICJCIjsOmJEWAC3y8Wi/Pz8zdv3uBbsfJqU6wsU87Ylsvl+fk5DIVPWCIGxrmZz+dDxPF9FCxG
xr7x+EW8kE5rdclsmSoB2+325z//efrvj9/+9rc/+clPpGL/+fHFF1/88Y9/3O12v/jFL/Jp/Phv
jl/+8pfyMDXHOoqUrDpXZnP3JalGHCZQkWoB8y4+HawPXsz/cChR/98e8rNpKfoP74JVlT/yIN79
hnSa5PlgsnUqBS0hHZhFLmaO4j+XqcL/PxzuZP1XB672f3uvPDiokwWWfiAjJUzSafa9lNK4dPxv
PHQymUD7+D7uJdV1fX9/r0qslPbly5ca3N3dHcAGp9PplOoNwa28BJ756tUrIZwLvDydzd9z/cKu
PacCmX842NN10oM+CrMwnbvBKRzAE273R+h9iAnnKEWWg5O/+93vDocDTTrK5vzsZz/TO7788st/
/OMfOPuvX78+HA7H4/H6+vpXv/pV13XX19fb7fZwOOBb//SnP5XL95e//OXLL7/kV7w4hVGjgPGr
r7764osvqqpC+iNfBguYTv1j/YpnKCd5iLx7FSnHruu+O2lfrIaRgrl3ux2a7yBKKWGbgdiIeler
1Wq1yjlfXl4CY25/8+bNbrejPK0eRb9xuVwul8u2bSnIqAo4RJ5XB4zLwFScUGSLPa2saShFPVZ5
CNl4CfEkbJBEJKYSlRaZXoFLTjZ20YeerRlFBzT/8uVL+AsFWa/X+BOK44tlrDmGSFRq2VETuaB+
ZQpvk3hFEiGOf4o5I+xSDke0XawqMdKeuq4/VK8kGmmcexalFDCMg89o6Pob4sg5E3DoQAR3d3cl
snGc3G63fTQNMbd06sVqPUbjyTmPahj8CdHjoJVSiH7xjyAXr2RgedRVkCJf6lhJKvskY590yuHZ
unmxhZPJ5OHhoZTStq2KmUMUOVXS0MHIctTX9UzZWuVrRrYJQVBNSynBtbIeo1cgHTmiJbK0yhDg
webwrdWgJUry6Us6SW3ADhMXltjeHQc4ZT6fK9M6mUzoa5FdcPwTZFZVRfmc29F/Hk7Er34Xl5Fr
t2fm/bLPP//8888/T9913Nzc/OY3v9HYcLv7vm/bloUkl6Astd7rMjkJNZ6vz2i4jJL1nEwm19fX
19fXQ+R3nxMELbvQM6HT4+OjNEUxsK8KR/+sXZCojT6+7xzh80NEplCWt7x7965t291up9KzC2iE
5crZp0TKzpGWLcXrrLTf7ylmXF1drddrXjPioNVqNZvN2A5F+mo+n7vfVKKH8rltGqLNXAMgZBt5
K//mqKqKHBClXbWyffrpp2q5h61KpDQ9NGN4H/JB6dQDqqLAUCJX4llhJadTSsTuDw8Pq9VqvV6P
hkhuDI7kV87oAg4VQjgwvdggDyOfRxhff/317e2t0gnCTinl/v5eBh48OmeX6A+gCSJbckpkl32/
mAvIzVmy4oGUQnBDcILJfD730ZO1oYlzt9t99NFH8/n85uamWH97FbtxnvO01qmEUyOTrOPt27d/
+tOf1JAv6PFGsoCuAW3bkpYaosAvqoZAtZuKpGUz4iT9oMRdsgq/0J6iWUJWANdLWy85Hh4e1us1
vgnAISFJ25KwOaJ2Bxc6yMYbtXK6KEGlB6KMGaQQryjnm6JtXH6QRi4dQgLb7ZZg6AMHCRHJ8vZa
McnYba0skcpy2+3WJwlzE0+IuVybxHffKSNBlYyl06UuIM/t9cUq9jKmlKRWpI0wEf1pldhTHMlM
+ZOaP8eOXq9By35X1sLQnzasse2RVLQOUE3or8iQnQaO3Hwa6Eg0Ot9HFf85QwuGojNWSxmMHA3D
UMHj4+NyuVT4PUQGeZR1vbi44O2Nr4mYBW8q2yacEo1onE+R7ksRDXHZCEG3t7fr9Xo2m+HsCCke
+mYrH4+AI7oRLiRlXUlyijjWq6+4y3R5pZTm8zmCoA2Wf50xUuQzqqqCSZ+czMo2SUiEooY+GtOG
KNGgwJxRuQ7B4af4POmMxLQX22tdIkdTWZ/Cc1yMeIH5aIU4fvjDH/7gBz/w8Tseq6r6/e9//+c/
/7mKvQfs7ZB0MMeuDZRhJLtGGNEghqgyD9FNwMRU8FI55eXLl7R20AKABH2etbWzVJGNgx1UeibP
PYpyRaLpmec2wtrz0Gx0yFGGrQlf0HSojWFrwUZvOQlHVRVI4ar1UcPDWFID2Gw2//rXv/q+f//+
PYJX4DoCAn49lguYELIxLBIdPOG5llVW/k9m9f+9OJ4fVbSR1NGvViKZQ5rJ2ceDG042IxOmqNdP
koHe7/f4Y7vdbrPZlFKWyyVSgIaBseLSkW7KmcK4ysz30U+l4noV28dGxCkoeZby30unjsbV6XSq
3nuUlF5dSV8LoOrrk3f661//OoXZ1vKy7zpHJRMZaesHPSsppeVyqder7k5iFEQgUOUbG/vQA6NU
m4cojxF7hteFmKIV5ng8rtdrNTXk0yxiCnPJdHDfWWbJQmsgbqbDwEPioibOZE2DVXTSKTlQombC
ldQnsQvz+RzLhYdaSlGCsbKPcgjYUpbBEtKKudT3qKOYiyRZQBZUyvw5Q2QdU/iZKj0rAVJH3yfP
lJj4gbnIqhSaOCX7vu/BQh39aOoCyNGtUsc25FLK9773vU8++QRWAvn4gdJ8sjA4clJbZzpQg37B
CB4tC+d+klFRy5aRLbadK0fHEyldegLE5cBKZkvLwL+YFBUUilKu0ljNQcs1RA0ayLDUl5eXzOqj
jz56fHzEHEizRLryx5bLJS0/gCVZ50oXG0/ctXXoySpLO5JlWruuI5RDU87iYys5Ag7FSfyspiQ9
Sl0Y0qy+7zebzdNdo/WRgX+SX9OQV1dFCQSlaAP+5ptvKMZ3XQfgc+Szaal68eIFAmrb9vb29uXL
l9C2XqQAyluYJCMJwv1vVzTRgnhHzgEC3e12fd9rs59EIJfqOyMPYfwpn6BQSz6Suud4je5UuRVN
fP/+fR19XZvNBg+d9by6usKB5t03NzdYfa5nwqhVtjysJubgRRZy0DQkmUvl50W6KTL5TdPc3d3N
53M+g5DCM9LCuNmqLOGFd/5h14IbEfFZFdveZCDceSulYCBotYWbHx4eXrx48dlnn6WUaBSidsYO
v/PzcwjLt7qp7aa3DmkPAqQO+fTDMxKEOoGFsiH2rJEzu7u7A/jOADIXYgaxHv50kh8kgsR/9fyp
Kz+KwGga26Qt09i27cXFRdd1796967ruxYsXfH+grmsyiphFdkcpdAJW+Fk5QrPR9tHK6jPJOpWS
tU2OqqN9NDGh1/3pLuHqdIf9YD0KgurZ2VmlVgJZEN5EukirJDExAsDVxFFV1XQ6ZUcgHxxBjqTQ
sHqr1QooiTXV7IWVUf4smYOXTmOxZC5cio15cgXqqJTqltGfnuuvXISR06iHVApAAKe2KldWja2t
WaQ+3bGHK8jPn3322TAM9/f3Q5SJr66uttvt4+Pj4+Pj5eXlj370ozdv3qxWq+9///tirg/aHpV4
QTLbkaygMMRWKvkKxRIS/IAKsxi8pbZt9C7r0VsQqz6204hruALlwiG6urriCwUSMNeIp3ULMrq7
u6NS3MQ+v7dv3xJtXV5e8kmRUsqLFy+GYfj4449vbm4GK2mWiOlzNOuKYkq0RaXYUt5bX6luV7Tc
W6FZj9Jlgkz1LDQVVBvtvHXhyf3lUmjCVUzPyhFM8SaSqtj1wTr43GowaMBSSrm9vRXNVRaCjpwv
xQ06X8VX4PpopJd3km3j32CfcpBQ9Ktbq2LRaT5NdRUSZvm0/76OLSTSXslIoK2iGpMjq1LHfj6l
wZE1Ow3kf6f4TM9sNnt4eFBMIzD6gglNJY4cvYjeKqv6isi0lEL9Q2fkK+mxbiIri6WH09pk47at
ji1dOWc1gLsKSJ81IAGqinQPnNLbzrccoWlvne2r1YpyVQ6PMdmuSSVx9CIHstfywayAP1i456su
eAqwg/XFD1YKTKcm4qkFV++Qggjb/uhkMeeIF4s1K7NdXOi4uLggRGzbNkdEOkQawIs/2dpgB6sg
OK3qGztVVNMUW2l4Wml/ggvUpaOJ6HYCw6yctBDkvoZLdHQI8EImnncVbQ6Xl5cwxXw+5zt3bOyp
qgpvbbAk9yg/p+V1FIgXRtZN/jdpLHUxeATrExksjzFaeFc6v+ZDYVdYGGw7rJ6isFvLItlL9ar4
VoIKO5vNBsYhA4mkhmEQmlziyWphKlQ5EJJZ+ioyW6peVJGucxKQsSvRlt7H55RGYnKGdnB9qItJ
HPn0s2zDaa1uJOZk0bagQcJou93yFcibm5sUJjJF6VIRg8CYzETqaY41CXRUEeljU6fn3nx19cMQ
cbJryejI8e1TjqdwQaSowdXWUirWFLx9MZORYom4vJRCGoSkjESssFMj6OPLJiPLpdSEi488aTnl
Jr29tj2F6Rnp9PadgSq6zZ4LiIQfefSc8wcf2qEkYGMyCEeKOfslQjAHET8rwXZ+fq7MUxM7ZdIz
dvO40dVZL5LF6K085YjTM933czHJ+BSLHFMEdH508fkR2damtvah0bgdkw7IyrK2kqz2qTNb9+LI
NGrFPOD+TgCKL9V6IFzU9sGJ3hoOk21/1Tj1fE+qyIZKY9xKsCSoGFb4ZB+dXD7djxRVDswWuI+s
iXv38m4lMjx37V/WDhStsLDgq1XMe/YpDZFF8xV9fu8QQbnjjhDa8wTFLADHarU6xsesmtHT3d6X
6LB2PS/meTvocnz8UBAopyV8kj58r6WPb9Yqgf3coqVT/61Y0SJbY6Awmy1AL0Ztsln4TbrRxVeM
rc7PzymCPjU+jBZhpGvCheuULnZGzLatTMaoxL5QOdBV9C7TbuHS1GMdeq5xWjxpmWxcZTsFffC9
ZXXluHb2ObyRsg/RlyDMnsRizmRS2mLcLGD7GZ9Af9rKrPOkqwVS/vq8Ljj61REh7dbmh8FiC+/x
ccHppaIeONjpyaczDIMSwU/pqvQsfpGHUlv7j9saB8joZzciklEd+7Okd5V9+kazlUY7QqVQEm7T
NKDA4caUlOQsp2VIxYaSjoDjYSqieP/+/XK51KM+pE0lVGe1/2/awtcQQWYVe39dDUeMVsU3JZPx
XY4E02AfoHVXUNyppynTLKy5iIt9Y7/ve8CLfZD7rrePBK17hyjENy6/ckq9Wo3qtBrrCuUic51y
iWhADjpdDMjVEECiOlsAJIlr6MpApTC1TtvCTs4ZNQE47P1sbHO886mkQz25io8+fNhQN0KHlkW6
nYzt69hgoaVQ14/KuLX1O42IdkQ6Q/RalCB1IFnbBl8Xk/qMNE7CF8daSomeAO2agCjknevefJps
yzkrrj4cDh/iOif2kevh0xgiSy0c1vb9GAejpOOIEwx9YXJ8FUpXqidg5OwoJ4O5UV/5fr/nv6VQ
yEIrE4h4eHjoY5e8qDCdmpch+lj4ebvdUoNoPAjiTq1nCvdUaHRCGaLRu7cGP1ec5vRbQrpG+Hct
Hqzo7A161Be14M4OQ2zz5r2qRx0Oh9evX+MB9X1/c3Oz3W7RNXXeuTZo67w25rBCk8nk6urq5FOl
Gq5WrNiXsdOzb9vJwEmbkn2LQ2r4nHEcbqOXSrOUvqCDzUXjcQzDoLeuaZrlcnl9fU0/4OFwoA+Z
nSUpEhXJ/jsQ369OTw+Rat/3QLIZrSfLIk9JVZ10apJEGcOpPypJ9fHZNwkIGlZtx8nOcS4t0JTQ
pjq+MuglWWEKLO92u6urK1Qezfr73/9e1zWxla9rjs+t5ZyVAFEXfN/39/f37Lb/8L8ijMSk+pej
qbKah+NO3CzviRuVzRrxUTrNljhZOlqH09QdUqPELiyMeP3m5ubVq1f39/f39/dUCkp8E7aObwci
UL4BzkLW0RSvRdrtdu/fv3/16tVJG3BvHwRx3hkig6v591FXKBHHC4mSRXWaG3fJltOvXVVRQS7R
TCUl1UpAn+qeSdZGIWDy6rdv36ZoalFhks0sQhN7pMCOiExwrut6Pp8//Y87mhhHFVvMncmcZaVx
tX1TUbIosdFYotEC1NZ34dgp5o6nUwMHa2q1jvGd8RRbkpXQcevmNKzeNe5id9tqtRpOyxhKznEl
EfW7d++apjlxFFMkD4f40rH7hxqrO0pOljk2/HHjfr8/i69Kj2RBF4/0198iBtHTNLBi/pSX5NER
T3LLWXGm4wNeYpXemszUqSf6B5W3t7f/B5ljA+jBCBXXAAAAAElFTkSuQmCC

------MultipartBoundary--zIanXexzKz9mlCBi1F8XbId4LZxMLKaXDSXMumdjRh----
Content-Type: image/webp
Content-Transfer-Encoding: base64
Content-Location: https://cdn.oaistatic.com/assets/sora-mutf8tav.webp

UklGRr4FAABXRUJQVlA4WAoAAAAQAAAARwAARwAAQUxQSNgDAAABsFbbtvC21QdBEAQhEAzBDGoG
FgObgcukj4EghMH7GFQM1vxxz/fJcQlExARsf/Ly6/3rn31H++/71+1l+09e3u8PImPk/tf1h13e
7yFPl/vbD7p8PFRORxHZP64/4/LxyBwhipIq+8dPeNkVERmDRET21z91+bL2zJg1h1+XP3LdzVmT
IqFFQ+zXP/DyMKdlDXJCFfJ4/bZ3RNYk56NkDG7f9GHN6YYQRYlE6eNb3rXoTEU5TM7H+ze8GqPQ
gowta6ekl6euDyFjR6lFksOa6HF94rKbQ1MhhaDQmdB+OfdFSokshrK2UCpzxNepV4sQJOU4kSIy
Z+zlzF6UUCGiQsi8pEWE/XL0QSFjRJRCaJK1IajPg+suc5GCrDWhJ5LBv5fpw4m5Ug4LhUIHpz+n
HSrRIkhRGWsiRB09LssbosizJSebWuYQ3pd7xkrpRKRCyBpDcvK+bdvV8WINQcYiiFIqYwmXbXsj
lOMWRApasgZZI4nbtt2nw0ItWSM5jHI+633bzIUcVkQqczkuUScelxdaKKqWNWNKiyLkdKRft46e
zVoIIWOncvj+ZW2pdLQmiSSIyhoixNd9ydO1INIMYcnc1P9+L2MlhZwvcj5qErLvaZKzpSkyFlrW
SUXtDoukhsOQwxIKTSFrapFnW+Yoa0WEljoQZK1oSSRpGLMm6yDHkZAnIwjJcaqsRUi70ykVYmiU
tUXWjBH2XWhCWNZEsmRMERoM/f7H6eQ4JDkOKVGOW+5fQkgptJyPrCnIYdb8fYMc56COMhYJMpZq
4f0XUktQWQvpCBnT0lTo5fJwGIKSuSw1KFKSNQzbdq9pjVRo0YhWYpEKCe7bdkOaLMhxSI4Ty5ox
b9t2EUqoKBpaImNLKWSt4bpt292CHBc1jEvlQBRJxX3btu2G5GQpCZUclzVI0vC2XB7I2kDGrC3J
2FCO076Nn8ZCpKEQKieHiEL4nC4PFZLnK4cttJTD7Ndp+4gF0VEITRGSUBOf2+Flh0YVdYDQhCoo
Df1/O/mykJPlMDInc8aS1zPbl4aGrA3RQaQWkYq/t9OXHWWMPF0OlxLBfjm3XR+CWqqlUARRQ8WS
x3V79iUkC/LN0VTwuj1/MzYlGqKjoCxw277zk5QsKWRNqERlTZ/b996ESUlIMqcyl9v23a8PhciY
IioFNXm8bN9/3WmplnIYQhTVft3+5OUra+SwnE6q/r5sf/h1JwQtZyOk/WX7gZ+7hjJHQVD/fl62
H3n93JHDSubk8XnZfu7bfWkpSijut8v2s69vd8hh8e/9/bL9J19uX/ffu9j3f75uvy7bnwRWUDgg
wAEAADANAJ0BKkgASAA+bS6SRiQioaEs2AxAgA2JQBeEiGFGI3e4lhreVwE4+WrFPdGuDA28gCxZ
pFDtnCxJ0x0kOyiWKEnUK25yAhlRuQJ7ezp1tuYDox1Lx+lXVaSbuo/4qoOb777GpT823CZGpaKw
MTLLwAD+/ofT0tB/tNeGyhiU0hAwU4vCkrGwTKVJypH817Aj66ELtIuKHPw+Lo6eUEgfHM8VaWFq
xsKXDIx3SNnCPZ3nEQeH2Q7Klssr+2dH28MRKsv1gFHYP/jtX//63ec2IY6U/CH6+Dn9pxax1fOi
WOz1Vh8BwGyOktxQ/BpjZbhdJEcwQ+yItrXqLuJZiavWDP9/F3zp9O+q3hlIadwTRfbvkVbFV0we
vTvxOxkB4pKI7DMPbdVb4+B4gzSUzlqoPQa3iKLKNepXE42XrpF40gwrOisAQhG9KlBhsUrBCFhu
owKJhXiJRqGwQ1aF4cH0bYUcDM6/SDWzHlPeD3EzkyWfosUGBkVOKUrrv8xv//wv/7Hd0CXaIjPX
ryVgekHNWCzoy118x0KPG23Uz3Aeycj7juoF+ImQkUrzfKRdHYYCv6tH4zezA/+dCAAAAAA=

------MultipartBoundary--zIanXexzKz9mlCBi1F8XbId4LZxMLKaXDSXMumdjRh----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.oaistatic.com/assets/FormattedText-kb0ehjj7.css

@charset "utf-8";

._tableContainer_16hzy_1 { --thread-content-width: min(calc(100cqw - var(--=
thread-content-margin, 0)*2),var(--thread-content-max-width)); --thread-gut=
ter-size: calc((100cqw - var(--thread-content-width))/2); margin-inline: ca=
lc(var(--thread-gutter-size)*-1); overflow-x: auto; pointer-events: none; s=
crollbar-width: none; width: 100cqw; }

._tableWrapper_16hzy_14 { margin-inline: var(--thread-gutter-size) var(--th=
read-content-margin); pointer-events: auto; }
------MultipartBoundary--zIanXexzKz9mlCBi1F8XbId4LZxMLKaXDSXMumdjRh----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.oaistatic.com/assets/conversation-small-dextt2zw.css

@charset "utf-8";

._lockSidebarAnimation_15e8l_1 { --sidebar-slideover: sidebar-slideover; --=
sidebar-popover: sidebar-popover; }

._lockSidebarAnimation_15e8l_1::view-transition-group(sidebar-slideover) { =
display: none; }

._lockSidebarAnimation_15e8l_1::view-transition-old(sidebar-popover) { anim=
ation: auto ease 0s 1 normal none running none; }

._lockSidebarAnimation_15e8l_1::view-transition-old(root) { display: none; =
}

._lockSidebarAnimation_15e8l_1::view-transition-new(root) { animation: auto=
 ease 0s 1 normal none running none; }

@media (prefers-reduced-motion: reduce) {
  ._lockSidebarAnimation_15e8l_1 ::view-transition { display: none; }
}

.active-view-transition.close-thread-sidebar, .active-view-transition.open-=
thread-sidebar { --vt_model_picker: model-picker; --vt_share_chat_wide_butt=
on: share-chat-wide-button; --vt_share_chat_compact_button: share-chat-comp=
act-button; --vt_thread_tools: thread-tools; --thread-extended-info-transit=
ion-name: thread-extended-info; --vt-disable-screen-column-transition: none=
; --vt_toggle_sidebar_opened: toggle-sidebar-icon-opened; --vt_toggle_sideb=
ar_closed: toggle-sidebar-icon-closed; --vt-thread-header-open-canvas: open=
-canvas-button; --vt-composer-speech-button: composer-speech-button; --vt_n=
ew_chat_thread: new-chat-thread; --vt-profile-avatar-thread: profile-avatar=
-active; }

@media (prefers-reduced-motion: reduce) {
  :is(.active-view-transition.open-thread-sidebar, .active-view-transition.=
close-thread-sidebar)::view-transition { display: none; }
}

:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-group(*), :is(.active-view-transition.=
open-thread-sidebar, .active-view-transition.close-thread-sidebar)::view-tr=
ansition-new(*), :is(.active-view-transition.open-thread-sidebar, .active-v=
iew-transition.close-thread-sidebar)::view-transition-old(*) { animation-du=
ration: var(--vt-duration,.3s); animation-timing-function: var(--vt-timing-=
function,var(--spring-common)); }

:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-old(composer-speech-button), :is(.acti=
ve-view-transition.open-thread-sidebar, .active-view-transition.close-threa=
d-sidebar)::view-transition-old(model-picker), :is(.active-view-transition.=
open-thread-sidebar, .active-view-transition.close-thread-sidebar)::view-tr=
ansition-old(open-canvas-button), :is(.active-view-transition.open-thread-s=
idebar, .active-view-transition.close-thread-sidebar)::view-transition-old(=
share-chat-compact-button), :is(.active-view-transition.open-thread-sidebar=
, .active-view-transition.close-thread-sidebar)::view-transition-old(share-=
chat-wide-button), :is(.active-view-transition.open-thread-sidebar, .active=
-view-transition.close-thread-sidebar)::view-transition-old(thread-tools), =
:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-old(toggle-sidebar-icon) { display: no=
ne; }

:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-new(composer-speech-button), :is(.acti=
ve-view-transition.open-thread-sidebar, .active-view-transition.close-threa=
d-sidebar)::view-transition-new(model-picker), :is(.active-view-transition.=
open-thread-sidebar, .active-view-transition.close-thread-sidebar)::view-tr=
ansition-new(open-canvas-button), :is(.active-view-transition.open-thread-s=
idebar, .active-view-transition.close-thread-sidebar)::view-transition-new(=
share-chat-compact-button), :is(.active-view-transition.open-thread-sidebar=
, .active-view-transition.close-thread-sidebar)::view-transition-new(share-=
chat-wide-button), :is(.active-view-transition.open-thread-sidebar, .active=
-view-transition.close-thread-sidebar)::view-transition-new(thread-tools), =
:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-old(toggle-sidebar-icon) { animation: =
auto ease 0s 1 normal none running none; height: 100%; }

:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-group(profile-avatar-active) { animati=
on: auto ease 0s 1 normal none running none; z-index: 2; }

:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-new(profile-avatar-active) { animation=
: auto ease 0s 1 normal none running none; }

:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-new(thread-extended-info), :is(.active=
-view-transition.open-thread-sidebar, .active-view-transition.close-thread-=
sidebar)::view-transition-old(thread-extended-info) { height: 100%; object-=
fit: none; overflow: clip; }

:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-new(thread), :is(.active-view-transiti=
on.open-thread-sidebar, .active-view-transition.close-thread-sidebar)::view=
-transition-old(thread) { height: 100%; object-fit: none; overflow: clip; }

:is(.active-view-transition.open-thread-sidebar)::view-transition-old(threa=
d-extended-info) { display: none; }

:is(.active-view-transition.close-thread-sidebar)::view-transition-new(thre=
ad-extended-info) { display: none; }

@keyframes _fade-in_pfttw_1 {=20
  100% { opacity: 1; }
}

._root_pfttw_7 ._fadeIn_pfttw_8, ._root_pfttw_7 blockquote, ._root_pfttw_7 =
code, ._root_pfttw_7 hr, ._root_pfttw_7 li, ._root_pfttw_7 pre, ._root_pftt=
w_7 pre code span, ._root_pfttw_7 tr { animation: _fade-in_pfttw_1 var(--du=
ration,.7s) cubic-bezier(.37,.55,.86,.88) forwards; opacity: 0; }

@media (prefers-reduced-motion: reduce) {
  ._root_pfttw_7 ._fadeIn_pfttw_8, ._root_pfttw_7 blockquote, ._root_pfttw_=
7 code, ._root_pfttw_7 hr, ._root_pfttw_7 li, ._root_pfttw_7 pre, ._root_pf=
ttw_7 pre code span, ._root_pfttw_7 tr { --duration: 0s; opacity: 1; }
}

@keyframes _slideUp_1kuxv_21 {=20
  0% { pointer-events: none; transform: translateY(30vh); }
  100% { pointer-events: auto; transform: translateY(0px); }
}

@keyframes _fadeIn_1kuxv_1 {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@media (prefers-reduced-motion: no-preference) {
  ._slideUp_1kuxv_21 { animation: _fadeIn_1kuxv_1 .2s linear forwards,_slid=
eUp_1kuxv_21 .7s var(--spring-common) forwards; }
}

._wrapper_4j5pz_1 { border-radius: 8px; cursor: pointer; display: inline-fl=
ex; height: 44px; user-select: none; width: 44px; }

._wrapper_4j5pz_1 > input[type=3D"checkbox"] { display: none; }

._wrapper_4j5pz_1 { color: var(--icon-secondary); }

@media (hover: hover) and (pointer: fine) {
  ._wrapper_4j5pz_1:hover { --hover-background: var(--main-surface-secondar=
y); }
}

._label_4j5pz_22 { align-items: center; background-color: var(--hover-backg=
round); border-radius: 8px; color: var(--text-secondary); display: flex; fl=
ex: 1 1 0%; justify-content: center; transition: background-color 0.1s line=
ar; }

._leadingBar_sbmq2_1 { box-shadow: transparent 0px 1px 0px; animation: auto=
 linear 0s 1 normal both running _add-top-shadow_sbmq2_1; }

._leadingBarScrollAnimation_sbmq2_19 { animation-timeline: scroll(); }

._trailingBar_sbmq2_23 { box-shadow: transparent 0px -1px 0px; animation: a=
uto linear 0s 1 normal both running _add-bottom-shadow_sbmq2_1; }

._trailingBarScrollAnimation_sbmq2_41 { animation-timeline: scroll(); }

._primary_sbmq2_45 { background-color: var(--bar-background-color,var(--mai=
n-surface-primary)); }

._screen_c7xqp_1 { display: var(--screen-display,grid); grid-template: "lea=
ding" max-content "content" 1fr "trailing" max-content "keyboard" / minmax(=
0px, 1fr); }

@supports not (overflow:clip) {
  ._screen_c7xqp_1 { overflow: var(--screen-overflow,hidden auto); }
}

@supports (overflow:clip) {
  ._screen_c7xqp_1 { overflow: var(--screen-overflow,clip auto); }
}

._screen_c7xqp_1 { padding-top: calc(var(--screen-anchor-top) + var(--scree=
n-top-offset, 0px)); scrollbar-gutter: var(--screen-scrollbar-gutter-overri=
de,stable); width: 100%; }

._screen_c7xqp_1 [slot=3D"content"] { grid-area: content; padding-inline: v=
ar( --screen-content-inline-padding,var(--screen-inline-padding) ); positio=
n: var(--screen-content-position,relative); }

._screen_c7xqp_1 [slot=3D"leading"] { grid-area: leading; min-width: var(--=
screen-leading-slot-min-width); overflow: var(--screen-leading-slot-overflo=
w); position: sticky; top: var(--screen-leading-slot-top,0); z-index: var(-=
-screen-leading-slot-z-index,20); }

._screen_c7xqp_1 [slot=3D"trailing"] { bottom: var(--keyboard-safe-area-bot=
tom,0); grid-area: trailing; padding-inline: var( --screen-trailing-inline-=
padding,var(--screen-inline-padding) ); position: sticky; z-index: var(--sc=
reen-leading-slot-z-index,20); }

._screen_c7xqp_1 [slot=3D"keyboard"] { background: rgb(252, 252, 252); bott=
om: 0px; grid-area: keyboard; height: var(--keyboard-safe-area-bottom,0); p=
osition: sticky; }

._screen_c7xqp_1:where([screen-anchor=3D"vertical"], [screen-anchor=3D"top"=
]) { --safe-area-top: calc(env(titlebar-area-y, 0px) + env(safe-area-inset-=
top, 0px)); --screen-anchor-top: var(--safe-area-top); }

._screen_c7xqp_1:where([screen-anchor=3D"vertical"], [screen-anchor=3D"bott=
om"]) { --safe-area-bottom: env(safe-area-inset-bottom,0px); --keyboard-saf=
e-area-bottom: max(var(--screen-keyboard-height),env(keyboard-inset-height,=
0px)); --screen-anchor-bottom: var(--safe-area-bottom); }

@keyframes _fade_4f9by_7 {=20
  100% { opacity: 1; }
}

._fadeIn_4f9by_7 { animation-duration: ; animation-timing-function: ; anima=
tion-delay: ; animation-direction: ; animation-fill-mode: ; animation-play-=
state: ; animation-name: ; animation-timeline: ; animation-range-start: ; a=
nimation-range-end: ; animation-iteration-count: 1; opacity: 0; }

@media (prefers-reduced-motion: reduce) {
  ._fadeIn_4f9by_7 { --duration: 0s; opacity: 1; }
}

._marker_4f9by_21._hidden_4f9by_21 { display: none; }

._marker_4f9by_21._animate_4f9by_25 { animation-duration: ; animation-timin=
g-function: ; animation-delay: ; animation-direction: ; animation-fill-mode=
: ; animation-play-state: ; animation-name: ; animation-timeline: ; animati=
on-range-start: ; animation-range-end: ; animation-iteration-count: 1; opac=
ity: 0; }

@media (prefers-reduced-motion: reduce) {
  ._marker_4f9by_21._animate_4f9by_25 { --duration: 0s; opacity: 1; }
}

@keyframes _slide-up_m3fum_1 {=20
  0% { opacity: 0; translate: 0px 20vw; }
}

@keyframes _slide-down_m3fum_1 {=20
  100% { opacity: 0; translate: 0px 20vw; }
}

._page-to-page-transition_m3fum_14:not(.active-view-transition) {
  @view-transition { navigation: auto; }
}

._page-to-page-transition_m3fum_14 { view-transition-name: none; }

._page-to-page-transition_m3fum_14 body { view-transition-name: page; }

@media (prefers-reduced-motion: reduce) {
  ._page-to-page-transition_m3fum_14::view-transition { display: none; }
}

._page-to-page-transition_m3fum_14::view-transition-old(header), ._page-to-=
page-transition_m3fum_14::view-transition-old(sidebar) { display: none; }

._page-to-page-transition_m3fum_14::view-transition-new(header), ._page-to-=
page-transition_m3fum_14::view-transition-new(sidebar) { animation: auto ea=
se 0s 1 normal none running none; }

._page-to-page-transition_m3fum_14::view-transition-image-pair(active-image=
), ._page-to-page-transition_m3fum_14::view-transition-new(active-image), .=
_page-to-page-transition_m3fum_14::view-transition-old(active-image) { heig=
ht: 100%; }

._page-to-page-transition_m3fum_14::view-transition-image-pair(page-title),=
 ._page-to-page-transition_m3fum_14::view-transition-new(page-title), ._pag=
e-to-page-transition_m3fum_14::view-transition-old(page-title) { height: 10=
0%; }

._page-to-page-transition_m3fum_14::view-transition-image-pair(acive-image)=
, ._page-to-page-transition_m3fum_14::view-transition-new(acive-image), ._p=
age-to-page-transition_m3fum_14::view-transition-old(acive-image) { height:=
 100%; }

._page-to-page-transition_m3fum_14::view-transition-group(*), ._page-to-pag=
e-transition_m3fum_14::view-transition-new(*), ._page-to-page-transition_m3=
fum_14::view-transition-old(*) { animation-duration: 0.4s; animation-timing=
-function: var(--spring-fast); }

._page-to-page-transition_m3fum_14.to-lightbox { --vt-scroll-buttons: scrol=
l-buttons; }

._page-to-page-transition_m3fum_14.to-lightbox::view-transition-group(scrol=
l-buttons) { z-index: 3; }

._page-to-page-transition_m3fum_14from.library.to-conversation, ._page-to-p=
age-transition_m3fum_14from.lightbox.to-conversation { --vt-active-image: a=
ctive-image; }

._page-to-page-transition_m3fum_14.from-lightbox, ._page-to-page-transition=
_m3fum_14.to-lightbox { --vt-active-image: active-image; --vt-page-title: p=
age-title; --vt-page-footer: page-footer; }

:is(._page-to-page-transition_m3fum_14.from-lightbox, ._page-to-page-transi=
tion_m3fum_14.to-lightbox)::view-transition-new(backdrop) { animation: auto=
 ease 0s 1 normal none running none; }

:is(._page-to-page-transition_m3fum_14.from-lightbox, ._page-to-page-transi=
tion_m3fum_14.to-lightbox)::view-transition-group(active-image) { z-index: =
2; }

:is(._page-to-page-transition_m3fum_14.from-lightbox, ._page-to-page-transi=
tion_m3fum_14.to-lightbox)::view-transition-group(active-image), :is(._page=
-to-page-transition_m3fum_14.from-lightbox, ._page-to-page-transition_m3fum=
_14.to-lightbox)::view-transition-group(page-title), :is(._page-to-page-tra=
nsition_m3fum_14.from-lightbox, ._page-to-page-transition_m3fum_14.to-light=
box)::view-transition-new(backdrop), :is(._page-to-page-transition_m3fum_14=
.from-lightbox, ._page-to-page-transition_m3fum_14.to-lightbox)::view-trans=
ition-new(page-footer), :is(._page-to-page-transition_m3fum_14.from-lightbo=
x, ._page-to-page-transition_m3fum_14.to-lightbox)::view-transition-new(pag=
e-title), :is(._page-to-page-transition_m3fum_14.from-lightbox, ._page-to-p=
age-transition_m3fum_14.to-lightbox)::view-transition-new(scroll-buttons), =
:is(._page-to-page-transition_m3fum_14.from-lightbox, ._page-to-page-transi=
tion_m3fum_14.to-lightbox)::view-transition-old(page-title) { animation-dur=
ation: 0.3s; }

:is(._page-to-page-transition_m3fum_14.to-home, ._page-to-page-transition_m=
3fum_14.from-landing-page)::view-transition-new(composer) { animation: auto=
 ease 0s 1 normal none running none; }

._page-to-page-transition_m3fum_14.from-landing-page:not(.to-lightbox), ._p=
age-to-page-transition_m3fum_14.to-landing-page:not(.to-lightbox) { --vt-pa=
ge-header: header; --vt-splash-screen-headline: page-title; --vt-tool-page-=
title: page-title; --vt-composer: composer; --sidebar-slideover: sidebar; }

._page-to-page-transition_m3fum_14.to-landing-page::view-transition-new(pag=
e) { animation: _slide-up_m3fum_1 .4s var(--spring-fast); }

._composer-slide_m3fum_129 { --vt-composer: composer; }

._composer-slide_m3fum_129::view-transition-group(composer), ._composer-sli=
de_m3fum_129::view-transition-old(composer) { animation-duration: 0.5s; ani=
mation-timing-function: var(--spring-fast); }

@keyframes _fade_1dg3p_1 {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes _scaleSlide_1dg3p_1 {=20
  0% { transform: translateY(25px) scale(0.95); }
  100% { transform: translateY(0px) scale(1); }
}

@media (prefers-reduced-motion: no-preference) {
  ._main_1dg3p_20 { animation: _fade_1dg3p_1 .5s var(--spring-common) var(-=
-animation-delay,0s) forwards,_scaleSlide_1dg3p_1 .75s var(--spring-common)=
 var(--animation-delay,0s); opacity: 0; transition: transform .3s var(--spr=
ing-common),box-shadow .3s var(--spring-common); }
}

._lightbox_1ruyj_1 { transition-behavior: allow-discrete; }

._lightbox_1ruyj_1::backdrop { view-transition-name: backdrop; opacity: 0; =
transition: .4s opacity var(--spring-fast); }

@media (prefers-reduced-motion: reduce) {
  ._lightbox_1ruyj_1::backdrop { transition-duration: 0.1s; }
}

._lightbox_1ruyj_1[open]::backdrop { opacity: 1; }

@starting-style {
  ._lightbox_1ruyj_1[open]::backdrop { opacity: 0; }
}

._carousel_1ruyj_26::scroll-button(left), ._carousel_1ruyj_26::scroll-butto=
n(right) { position-anchor: --carousel; aspect-ratio: 1 / 1; background-col=
or: var(--main-surface-primary); border: 1px solid var(--color-token-border=
-default); border-radius: 50%; color: var(--marker-color,var(--main-surface=
-primary-inverse)); cursor: pointer; display: grid; margin-inline: 12px; pa=
dding-block-start: 4px; place-items: center; position: fixed; transition: o=
pacity .4s var(--ease-spring-standard); width: 44px; }

@starting-style {
  ._carousel_1ruyj_26::scroll-button(left), ._carousel_1ruyj_26::scroll-but=
ton(right) { opacity: 0.3; }
}

._carousel_1ruyj_26::scroll-button(right) { --_inner: center span-inline-st=
art; --_outer: inline-end center; position-area: var(--_inner); content: ur=
l("data:image/svg+xml;utf8,<svg xmlns=3D'http://www.w3.org/2000/svg' width=
=3D'24' height=3D'24' viewBox=3D'0 0 24 24' fill=3D'none'><path fill-rule=
=3D'evenodd' clip-rule=3D'evenodd' d=3D'M18.7071 12.7071C19.0976 12.3166 19=
.0976 11.6834 18.7071 11.2929L13.7071 6.29289C13.3166 5.90237 12.6834 5.902=
37 12.2929 6.29289C11.9024 6.68342 11.9024 7.31658 12.2929 7.70711L15.5858 =
11H6C5.44771 11 5 11.4477 5 12C5 12.5523 5.44771 13 6 13H15.5858L12.2929 16=
.2929C11.9024 16.6834 11.9024 17.3166 12.2929 17.7071C12.6834 18.0976 13.31=
66 18.0976 13.7071 17.7071L18.7071 12.7071Z' fill=3D'currentColor'/></svg>"=
) / "Next"; }

._carousel_1ruyj_26::scroll-button(*):disabled { opacity: 0.3; }

._carousel_1ruyj_26::scroll-button(left) { --_inner: center span-inline-end=
; --_outer: inline-start center; position-area: var(--_inner); content: url=
("data:image/svg+xml;utf8,<svg xmlns=3D'http://www.w3.org/2000/svg' width=
=3D'24' height=3D'24' viewBox=3D'0 0 24 24' fill=3D'none'><path fill-rule=
=3D'evenodd' clip-rule=3D'evenodd' d=3D'M18.7071 12.7071C19.0976 12.3166 19=
.0976 11.6834 18.7071 11.2929L13.7071 6.29289C13.3166 5.90237 12.6834 5.902=
37 12.2929 6.29289C11.9024 6.68342 11.9024 7.31658 12.2929 7.70711L15.5858 =
11H6C5.44771 11 5 11.4477 5 12C5 12.5523 5.44771 13 6 13H15.5858L12.2929 16=
.2929C11.9024 16.6834 11.9024 17.3166 12.2929 17.7071C12.6834 18.0976 13.31=
66 18.0976 13.7071 17.7071L18.7071 12.7071Z' fill=3D'currentColor'/></svg>"=
) / "Previous"; scale: -1 1; }

.CircularProgressbar { vertical-align: middle; width: 100%; }

.CircularProgressbar .CircularProgressbar-path { stroke: rgb(62, 152, 199);=
 stroke-linecap: round; transition: stroke-dashoffset 0.5s; }

.CircularProgressbar .CircularProgressbar-trail { stroke: rgb(214, 214, 214=
); stroke-linecap: round; }

.CircularProgressbar .CircularProgressbar-text { fill: rgb(62, 152, 199); d=
ominant-baseline: middle; text-anchor: middle; font-size: 20px; }

.CircularProgressbar .CircularProgressbar-background { fill: rgb(214, 214, =
214); }

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-back=
ground { fill: rgb(62, 152, 199); }

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-text=
 { fill: rgb(255, 255, 255); }

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-path=
 { stroke: rgb(255, 255, 255); }

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-trai=
l { stroke: transparent; }

._rangeSelector_10acs_2 { align-items: center; appearance: none; box-sizing=
: content-box; padding: 20px 10px; width: 12px; }

[dir=3D"ltr"] ._rangeSelector_10acs_2 { margin-left: -10px; }

[dir=3D"rtl"] ._rangeSelector_10acs_2 { margin-right: -10px; }

._rangeSelector_10acs_2::-webkit-slider-thumb { --tw-pan-y: pan-y; --tw-sha=
dow: 0 4px 6px -1px var(--tw-shadow-color,#0000001a),0 2px 4px -2px var(--t=
w-shadow-color,#0000001a); appearance: none; aspect-ratio: 1 / 1; backgroun=
d-color: var(--main-surface-primary); border-width: 1px; border-style: soli=
d; border-image: initial; border-color: var(--border-default); border-radiu=
s: var(--radius-2xl,1rem); box-shadow: var(--tw-inset-shadow),var(--tw-inse=
t-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-=
shadow); cursor: grab; height: calc(var(--spacing,.25rem)*6); touch-action:=
 var(--tw-pan-x,)var(--tw-pan-y,)var(--tw-pinch-zoom,); transform: translat=
eY(var(--slider-thumb-translate-y)); }

._vertical-slider_10acs_2 { width: 16px; writing-mode: vertical-lr; }

[dir=3D"ltr"] ._vertical-slider_10acs_2 { direction: rtl; }

[dir=3D"rtl"] ._vertical-slider_10acs_2 { direction: ltr; }

._vertical-slider_10acs_2::-webkit-slider-thumb { appearance: none; }

._hiddenThumb_10acs_2::-webkit-slider-thumb { display: none !important; }

@property --tw-pan-x { syntax: "*"; inherits: false; }

@property --tw-pan-y { syntax: "*"; inherits: false; }

@property --tw-pinch-zoom { syntax: "*"; inherits: false; }

@property --tw-shadow { syntax: "*"; inherits: false; initial-value: 0 0 #0=
000; }

@property --tw-shadow-color { syntax: "*"; inherits: false; }

@property --tw-inset-shadow { syntax: "*"; inherits: false; initial-value: =
0 0 #0000; }

@property --tw-inset-shadow-color { syntax: "*"; inherits: false; }

@property --tw-ring-color { syntax: "*"; inherits: false; }

@property --tw-ring-shadow { syntax: "*"; inherits: false; initial-value: 0=
 0 #0000; }

@property --tw-inset-ring-color { syntax: "*"; inherits: false; }

@property --tw-inset-ring-shadow { syntax: "*"; inherits: false; initial-va=
lue: 0 0 #0000; }

@property --tw-ring-inset { syntax: "*"; inherits: false; }

@property --tw-ring-offset-width { syntax: "<length>"; inherits: false; ini=
tial-value: 0; }

@property --tw-ring-offset-color { syntax: "*"; inherits: false; initial-va=
lue: #fff; }

@property --tw-ring-offset-shadow { syntax: "*"; inherits: false; initial-v=
alue: 0 0 #0000; }

._prosemirror-parent_k4nam_2 .ProseMirror[contenteditable] { --tw-outline-s=
tyle: none; outline-style: none; outline-width: 0px; }

._prosemirror-parent_k4nam_2 .ProseMirror { overflow-wrap: break-word; font=
-feature-settings: "liga" 0; font-variant-ligatures: none; margin-block: ca=
lc(var(--spacing,.25rem)*2); padding-inline: calc(var(--spacing,.25rem)*0);=
 white-space: break-spaces; }

._prosemirror-parent_k4nam_2.ProseMirror br { --tw-leading: normal; line-he=
ight: normal; }

._prosemirror-parent_k4nam_2.default-browser .placeholder::after { --tw-con=
tent: attr(data-placeholder); color: var(--text-tertiary); content: var(--t=
w-content); cursor: text; pointer-events: none; position: relative; }

[dir=3D"ltr"] ._prosemirror-parent_k4nam_2.default-browser .placeholder::af=
ter { padding-left: 1px; }

[dir=3D"rtl"] ._prosemirror-parent_k4nam_2.default-browser .placeholder::af=
ter { padding-right: 1px; }

._prosemirror-parent_k4nam_2.default-browser .placeholder .ProseMirror-trai=
lingBreak { display: none !important; }

._prosemirror-parent_k4nam_2.firefox .placeholder::before { --tw-content: a=
ttr(data-placeholder); color: var(--text-secondary); content: var(--tw-cont=
ent); cursor: text; pointer-events: none; position: absolute; }

._prosemirror-parent_k4nam_2 p { white-space: pre-wrap; }

._prosemirror-parent_k4nam_2 p.placeholder { overflow: hidden; text-overflo=
w: ellipsis; white-space: nowrap; }

.screen-arch ._prosemirror-parent_k4nam_2 p.placeholder { view-transition-n=
ame: var(--vt-composer-placeholder); width: fit-content; }

._prosemirror-parent_k4nam_2 .ProseMirror-separator { display: none !import=
ant; }

@property --tw-outline-style { syntax: "*"; inherits: false; initial-value:=
 solid; }

@property --tw-leading { syntax: "*"; inherits: false; }

@property --tw-content { syntax: "*"; inherits: false; initial-value: ""; }

.stuff-part-pen, .stuff-part-star { transition: transform 0.2s ease-out, op=
acity 0.2s ease-out; }

._toolsButton_d2h2h_8:not(:disabled) { --part-rotation: 0; --part-spin: 0; =
}

._toolsButton_d2h2h_8:not(:disabled):hover { --part-rotation: .02rad; --par=
t-spin: .05rad; }

._toolsButton_d2h2h_8[data-opened]:not(:disabled) { --part-rotation: .07rad=
; --part-spin: .14rad; }

._toolsButton_d2h2h_8[data-jack]:not(:disabled) .stuff-part-jack { transiti=
on: transform 0.3s cubic-bezier(0, 0.5, 0.6, 1.8); }

._toolsButton_d2h2h_8[data-jack][data-opened]:not(:disabled) { --part-rotat=
ion: .15rad; --part-spin: .2rad; }

._toolsButton_d2h2h_8[data-jack][data-opened]:not(:disabled) .stuff-part-pe=
n, ._toolsButton_d2h2h_8[data-jack][data-opened]:not(:disabled) .stuff-part=
-star { opacity: 0; }

._toolsButton_d2h2h_8[data-jack][data-opened]:not(:disabled) .stuff-part-ja=
ck { transform: translateY(-16px); }

:is([dir=3D"ltr"] ._toolsButton_d2h2h_8:not(:disabled)) .stuff-part-star { =
transform: translate(-30px,40px) rotate(calc(var(--part-rotation)*-1.2)) tr=
anslate(30px,-40px) translate(10px,9px) rotate(calc(var(--part-spin)*-2)) t=
ranslate(-10px,-9px); }

:is([dir=3D"ltr"] ._toolsButton_d2h2h_8:not(:disabled)) .stuff-part-pen { t=
ransform: translate(70px,40px) rotate(var(--part-rotation)) translate(-70px=
,-40px) translate(15.5px,9px) rotate(var(--part-spin)) translate(-15.5px,-9=
px); }

:is([dir=3D"rtl"] ._toolsButton_d2h2h_8:not(:disabled)) .stuff-part-star { =
transform: translate(30px,40px) rotate(calc((-1.2*var(--part-rotation))*-1)=
) translate(-30px,-40px) translate(-10px,9px) rotate(calc((-2*var(--part-sp=
in))*-1)) translate(10px,-9px); }

:is([dir=3D"rtl"] ._toolsButton_d2h2h_8:not(:disabled)) .stuff-part-pen { t=
ransform: translate(-70px,40px) rotate(var(--part-rotation)) translate(70px=
,-40px) translate(-15.5px,9px) rotate(var(--part-spin)) translate(15.5px,-9=
px); }

._revealDown_1le9t_1 > * { animation: 0.3s ease-out 0s 1 normal both runnin=
g _fadeAndSlideDown_1le9t_1; }

._revealDown_1le9t_1 > :first-child { animation-delay: 0s; }

._revealDown_1le9t_1 > :nth-child(2) { animation-delay: 50ms; }

._revealDown_1le9t_1 > :nth-child(3) { animation-delay: 0.1s; }

._revealDown_1le9t_1 > :nth-child(4) { animation-delay: 0.15s; }

._revealDown_1le9t_1 > :nth-child(5) { animation-delay: 0.2s; }

._revealDown_1le9t_1 > :nth-child(n+5) { animation-delay: 0.25s; }

@keyframes _fadeAndSlideDown_1le9t_1 {=20
  0% { opacity: 0; transform: translateY(-4px); }
}

._threadRoot_1y3t0_1 { --thread-safe-area-height: calc(100lvh - var(--threa=
d-safe-area-inset-top) - var(--thread-safe-area-inset-bottom)); --thread-sa=
fe-area-inset-top: calc(var(--header-height) + env(safe-area-inset-top, 0px=
)); --thread-safe-area-inset-bottom: calc(var(--thread-footer-height, 150px=
) + var(--screen-keyboard-height, 0px) + env(safe-area-inset-bottom, 0px));=
 }

._threadGutter_1y3t0_22 { --thread-end-gutter-active-height: calc(var(--thr=
ead-safe-area-height) - var(--thread-stream-context-height) - var(--thread-=
turn-vertical-padding)*2); --thread-stream-context-height: max(2.75rem + 2 =
* var(--thread-turn-vertical-padding),1/3 * var(--thread-safe-area-height))=
; --thread-turn-vertical-padding: 1.25rem; }

._vanguardAppLaunchers_1ra5o_1 { bottom: calc(-10rem + 50dvh); }

@media (max-height: 730px) {
  ._vanguardAppLaunchers_1ra5o_1 { bottom: calc(-10rem + 50dvh); }
}

@media (min-height: 800px) {
  ._vanguardAppLaunchers_1ra5o_1 { bottom: calc(-13rem + 50dvh); }
}

@media (max-height: 800px) {
  ._vanguardAppLaunchersContainer_1ra5o_18 { height: 4rem; }
}

@keyframes _fadeScale_1r3gn_12 {=20
  0% { opacity: 0; transform: scale(0.98); }
  100% { opacity: 1; transform: scale(1); }
}

._fadeScale_1r3gn_12 { animation: 0.3s ease-in-out 0s 1 normal forwards run=
ning _fadeScale_1r3gn_12; }
------MultipartBoundary--zIanXexzKz9mlCBi1F8XbId4LZxMLKaXDSXMumdjRh----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.oaistatic.com/assets/root-bpcp30ia.css

@charset "utf-8";

.composer-parent { --composer-footer_height: var(--composer-bar_footer-curr=
ent-height,32px); --composer-bar_height: var(--composer-bar_current-height,=
52px); --composer-bar_width: var(--composer-bar_current-width,768px); --mas=
k-fill: linear-gradient(180deg,#fff 0%,#fff); --mask-erase: linear-gradient=
(180deg,#000 0%,#000); }

.masked-content { --content-gradient: linear-gradient(0deg,color(display-p3=
 .851 .851 .851),color(display-p3 .8488 .8488 .8488/.99) 8.07%,color(displa=
y-p3 .8423 .8423 .8423/.98) 15.54%,color(display-p3 .8317 .8317 .8317/.95) =
22.5%,color(display-p3 .8171 .8171 .8171/.92) 29.04%,color(display-p3 .7988=
 .7988 .7988/.87) 35.26%,color(display-p3 .777 .777 .777/.82) 41.25%,color(=
display-p3 .7518 .7518 .7518/.75) 47.1%,color(display-p3 .7234 .7234 .7234/=
.68) 52.9%,color(display-p3 .692 .692 .692/.6) 58.75%,color(display-p3 .657=
8 .6578 .6578/.52) 64.74%,color(display-p3 .621 .621 .621/.42) 70.96%,color=
(display-p3 .5817 .5817 .5817/.33) 77.5%,color(display-p3 .5401 .5401 .5401=
/.22) 84.46%,color(display-p3 .4965 .4965 .4965/.11) 91.93%,color(display-p=
3 .451 .451 .451/0)); --composer-bar_safe-margins: 20px; mask-composite: su=
btract; mask-image: var(--mask-fill),var(--content-gradient),var(--composer=
-bar_skeleton); mask-mode: luminance; mask-position: top center,center calc=
(100% - var(--composer-footer_height)),center calc(100% - var(--composer-fo=
oter_height)); mask-repeat: no-repeat; mask-size: auto,calc(100% - var(--co=
mposer-bar_safe-margins)) calc(var(--composer-bar_height) + var(--composer-=
bar_mask-grace-area)),var(--composer-bar_width) var(--composer-bar_height);=
 }

@media (prefers-reduced-transparency: reduce) {
  .masked-content { mask-image: none; }
}

.mask-scrollbars { --scrollbar-width: 10px; clip-path: inset(-100svh var(--=
scrollbar-width) 0 0); }

.bg-thread--header { background: linear-gradient(to bottom,transparent 0,tr=
ansparent 50%,var(--main-surface-primary) 50%,var(--main-surface-primary) 1=
00%); height: var(--composer-bar_height); mask-composite: subtract; mask-im=
age: var(--mask-fill),var(--composer-bar_skeleton); mask-mode: luminance; m=
ask-position: center top, center top; mask-repeat: no-repeat; mask-size: au=
to; }

@media (prefers-reduced-transparency: reduce) {
  .bg-thread--header { mask-image: none; }
}

.bg-thread--footer { background: var(--main-surface-primary); flex: 1 1 0%;=
 }

:root { --spring-fast-duration: 667ms; --spring-fast: linear(0,.01942 1.83%=
,.07956 4.02%,.47488 13.851%,.65981 19.572%,.79653 25.733%,.84834 29.083%,.=
89048 32.693%,.9246 36.734%,.95081 41.254%,.97012 46.425%,.98361 52.535%,.9=
9665 68.277%,.99988); --spring-common-duration: 667ms; --spring-common: lin=
ear(0,.00506 1.18%,.02044 2.46%,.08322 5.391%,.46561 17.652%,.63901 24.342%=
,.76663 31.093%,.85981 38.454%,.89862 42.934%,.92965 47.845%,.95366 53.305%=
,.97154 59.516%,.99189 74.867%,.9991); --spring-standard: var(--spring-comm=
on); --spring-slow-bounce-duration: 1167ms; --spring-slow-bounce: linear(0,=
.00172 .51%,.00682 1.03%,.02721 2.12%,.06135 3.29%,.11043 4.58%,.21945 6.91=
1%,.59552 14.171%,.70414 16.612%,.79359 18.962%,.86872 21.362%,.92924 23.82=
2%,.97589 26.373%,1.01 29.083%,1.0264 31.043%,1.03767 33.133%,1.04411 35.40=
4%,1.04597 37.944%,1.04058 42.454%,1.01119 55.646%,1.00137 63.716%,.99791 7=
4.127%,.99988); --spring-bounce-duration: 833ms; --spring-bounce: linear(0,=
.00541 1.29%,.02175 2.68%,.04923 4.19%,.08852 5.861%,.17388 8.851%,.48317 1=
8.732%,.57693 22.162%,.65685 25.503%,.72432 28.793%,.78235 32.163%,.83182 3=
5.664%,.87356 39.354%,.91132 43.714%,.94105 48.455%,.96361 53.705%,.97991 5=
9.676%,.9903 66.247%,.99664 74.237%,.99968 84.358%,1.00048); --spring-fast-=
bounce-duration: 1s; --spring-fast-bounce: linear(0,.00683 1.14%,.02731 2.3=
5%,.11137 5.091%,.59413 15.612%,.78996 20.792%,.92396 25.953%,.97109 28.653=
%,1.00624 31.503%,1.03801 36.154%,1.0477 41.684%,1.00242 68.787%,.99921); -=
-easing-common: linear(0,0,.0001,.0002,.0003,.0005,.0007,.001,.0013,.0016,.=
002,.0024,.0029,.0033,.0039,.0044,.005,.0057,.0063,.007,.0079,.0086,.0094,.=
0103,.0112,.0121,.0132 1.84%,.0153,.0175,.0201,.0226,.0253,.0283,.0313,.034=
5,.038,.0416,.0454,.0493,.0535,.0576,.0621,.0667,.0714,.0764,.0816 5.04%,.0=
897,.098 5.62%,.1071,.1165,.1263 6.56%,.137,.1481 7.25%,.1601 7.62%,.1706 7=
.94%,.1819 8.28%,.194,.2068 9.02%,.2331 9.79%,.2898 11.44%,.3151 12.18%,.34=
12 12.95%,.3533,.365 13.66%,.3786,.3918,.4045,.4167,.4288,.4405,.452,.4631 =
16.72%,.4759,.4884,.5005,.5124,.5242,.5354,.5467,.5576,.5686,.5791,.5894,.5=
995,.6094,.6194,.6289,.6385,.6477,.6569,.6659 24.45%,.6702,.6747,.6789,.683=
3,.6877,.6919,.696,.7002,.7043,.7084,.7125,.7165,.7205,.7244,.7283,.7321,.7=
358,.7396,.7433,.7471,.7507,.7544,.7579,.7615,.7649,.7685,.7718,.7752,.7786=
,.782,.7853,.7885,.7918,.7951,.7982,.8013,.8043,.8075,.8104,.8135,.8165,.81=
95,.8224,.8253,.8281,.8309,.8336,.8365,.8391,.8419,.8446,.8472,.8499,.8524,=
.855,.8575,.8599,.8625 37.27%,.8651,.8678,.8703,.8729,.8754,.8779,.8803,.88=
27,.8851,.8875,.8898,.892,.8942,.8965,.8987,.9009,.903,.9051,.9071,.9092,.9=
112,.9132,.9151,.9171,.919,.9209,.9227,.9245,.9262,.928,.9297,.9314,.9331,.=
9347,.9364,.9379,.9395,.941,.9425,.944,.9454,.9469,.9483,.9497,.951,.9524,.=
9537,.955,.9562,.9574,.9586,.9599,.961,.9622,.9633,.9644,.9655,.9665,.9676,=
.9686,.9696,.9705,.9715,.9724,.9733,.9742,.975,.9758,.9766,.9774,.9782,.978=
9,.9796,.9804,.9811,.9817,.9824,.9831,.9837,.9843,.9849,.9855,.986,.9866,.9=
871,.9877,.9882,.9887,.9892,.9896 70.56%,.9905 71.67%,.9914 72.82%,.9922,.9=
929 75.2%,.9936 76.43%,.9942 77.71%,.9948 79.03%,.9954 80.39%,.9959 81.81%,=
.9963 83.28%,.9968 84.82%,.9972 86.41%,.9975 88.07%,.9979 89.81%,.9982 91.6=
4%,.9984 93.56%,.9987 95.58%,.9989 97.72%,.9991); }

@supports not (white-space-collapse:collapse) {
  :root :root { --easing-common: ease-in-out; --spring-common: ease-in-out;=
 --spring-bounce: ease-in-out; --spring-fast: ease-in-out; --spring-fast-bo=
unce: ease-in-out; --spring-slow-bounce: ease-in-out; }
}

@supports not (transition-timing-function:linear(0,0 0%)) {
  :root :root { --easing-common: ease-in-out; --spring-common: ease-in-out;=
 --spring-bounce: ease-in-out; --spring-fast: ease-in-out; --spring-fast-bo=
unce: ease-in-out; --spring-slow-bounce: ease-in-out; }
}

@font-face { font-display: swap; font-family: Circle; font-style: normal; f=
ont-weight: 400; src: url("data:font/woff2;base64,d09GMk9UVE8AAAM0AAkAAAAAB=
cgAAALuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYJIBmAAfgE2AiQDDAQGBYRyByAbIwVRlKvJ=
FsDPBJtObcFDgzooFmKOOuZpZMG4Jg7aB8Nn8fzDvXrufz9r8tgCAU4XFVvjosSo0yqWv9Z+b8+=
+or6Y3y3ikk0laqIkfBkSQzINien2vweAH79N8JdohCbbWndr/HZ5v86kXxrEqV+cqnlKNBcLjY=
0Bj8Ka512LSgsolgt1Wa1Wr27atM/jBW21RrW55g21jw81IoJNHn2c/z24BlCQTVVvW09zVvtAY=
1dzeOZwYxugoDCNO2g8kMZDDRpPRuPFajC3qWY31RzV9+loj/h/e6ud/0/bfxcbEILkKpVrQNhw=
TzuJycoVI0S9RjZZES7WjkQvApCsAhsUn3SuWdP3UZ0zRZT+X1OW1h0OGr9NflM3xRvmiClHqQO=
Rzvz/tQbQb7L8b7XUFdZrb+h13MhqctFw/8PP+snI1CnebrExOvET/Fh/hn+knPwQZw89wnNvi+=
62ERUZoHLr9BC1nCwROqghul1go6hTCVTs54ZppNw6x+jkYtzYdoEMTuGT8KCP/A/hDIeWUloqM=
4VXWm2g5T0CrvPF5g3kAs04zXJGkI7P96za7LmtKwgBAmhGzB07gBpPeEUAKyzEwwWJxIBzFaQe=
HZwg6BYQxo6W2Qwz739fUTpv+v/c+Xy3Sv6VF/uN3w8uFpdbNkDuXnWVGkBhvGn75R1LYEgq295=
Z+QHimbpBIbxAAQtPAhA2QAAaMjYQQHHzONnK8R1EFN9lrZmfUxvmFzjzl5dsLLNQqwDEx+49z7=
B0yrNi3SQ58LwmAy/AqeOtOWduzoY8+2s/wMFgbxAWiEesMNZAalIE2r8JllitrXeokZEbwVJpR=
0hSXFLwa+wftjSPNWMSERMRGxMrEi0DVYcfdnhxQ66Eqt62nmYsq32gsaspM4cb2ypPtQ531Q+I=
Ioj9J0lKy0pzkjTFKxoOtd8ODLb39mD0t/UONT71Ry6QDBlaIonr767vbJaUtzSPNQOBmOXFihF=
LROyYXvXnrUOTszoAAA=3D=3D") format("woff2"); }

@font-face { font-display: swap; font-family: Circle; font-style: normal; f=
ont-weight: 600; src: url("data:font/woff2;base64,d09GMk9UVE8AAANIAAkAAAAAB=
kwAAAMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYJQBmAAfgE2AiQDDAQGBYVwByAbqQVRlMVN=
BfiRkLl5oxlVNKr4xQKiOJqYMp0zZd4iyiabvWs/aWpaEhyiBiMQGoNCIoys0xiDZnJteLRGXET=
3IpoQq697VFOmBlImcVhpy3pWuy6ZGDJnDoFpIwM96olCINQDUebsKzfc8cml+mMBP82Lfx5kKv=
x3Td2DFtCONwWq1Ru/VIs7/gTVpl7hgkiHscva/P1RKvnkOj2uDshaX5Id6vvRLs7Q7ZY7RUIph=
hAYQskQ6gJDmGIIZ4YIVbgw4aJK86iJ8ai2EeK+a2PFayPSEw4h7uwclpQxdejLyi11M9Iy2h0j=
4eJMBI28mehJINkCFioovm/Yah6VpgBJUm48kUyWnPA1xAhNmKY1S5qwFaT01WKAtvHEg6QZc9t=
odjOVtRlP+hmjzDDS5vtMPD748Cgn0q2zV69y9Mytow/50QcHH4tnHBQWHuslA/3B8O2e6uPdV9=
vO1B/lSKo5WCl4o2ahQUcDvW2kuxvh3SOtegPX6+drRCVHhYM1R9HgaP3ZtqvIQwHcGn6o8wf64=
4VngrsJ4QBWcbQHGrW2K7XgmT5uPpAHTOivlgPGIeL+mbnYY7xhj5AEAtSqfMIBaNDgjWfcMFRm=
HIrAIqAO7J4cqgRylIjSHx27HeBe+8o/qp1Xbb/IqsC9ZI03+w/fbWoexLpPI+sf04PMBbjGKDw=
6XInbdQiytiHo/3RWkeUd9IkyXjTYfUMA4QsCKCpfBGjhAhFgEqQAAWZZygUw+FhGgI2LIwiw40=
4iwEWQixiaHEGSvMqDgqv5QpHqDyV0WChLs4GKVj5Q18zvoKFe1Xk/BxaI0I2NKfxfK8J/W710U=
VzebArQ6NFEpCWN1fGWFBQegKAjSBCctI7wij+coRcCJGQgy7A42Q3Te14v7+6FuamjlQMEsKxd=
JHYlel9kJ5adv7kxHe2kcBAeviIZGBpwSO2aZ7b9TXUzD/i7C8jF1drRAeiL2ZWjm6Rq8sFp4jK=
IQOBI9iJbyNGt7alX974oJIgBsRgsHDkMjr/FbPeiAAAA") format("woff2"); }

@font-face { font-display: swap; font-family: "OpenAI Sans"; font-weight: 3=
00 700; src: url("https://cdn.openai.com/common/fonts/openai-sans-variable/=
OpenAISansVariableVF.woff2") format("woff2"), url("https://cdn.openai.com/c=
ommon/fonts/openai-sans-variable/OpenAISansVariableVF.woff") format("woff")=
; }

@layer theme {
  :host, :root { --spacing: .25rem; --breakpoint-md: 48rem; --breakpoint-lg=
: 64rem; --breakpoint-2xl: 96rem; --container-xs: 20rem; --container-sm: 24=
rem; --container-md: 28rem; --container-lg: 32rem; --container-xl: 36rem; -=
-container-2xl: 42rem; --container-3xl: 48rem; --container-4xl: 56rem; --co=
ntainer-5xl: 64rem; --container-6xl: 72rem; --text-xs: .75rem; --text-xs--l=
ine-height: 1.33333; --text-sm: .875rem; --text-sm--line-height: 1.42857; -=
-text-base: 1rem; --text-base--line-height: 1.5; --text-lg: 1.125rem; --tex=
t-lg--line-height: 1.55556; --text-xl: 1.25rem; --text-xl--line-height: 1.4=
; --text-2xl: 1.5rem; --text-2xl--line-height: 1.33333; --text-3xl: 1.875re=
m; --text-3xl--line-height: 1.2; --text-4xl: 2.25rem; --text-4xl--line-heig=
ht: 1.11111; --text-5xl: 3rem; --text-5xl--line-height: 1; --text-6xl: 3.75=
rem; --text-6xl--line-height: 1; --text-7xl: 4.5rem; --text-7xl--line-heigh=
t: 1; --font-weight-extralight: 200; --font-weight-light: 300; --font-weigh=
t-normal: 400; --font-weight-medium: 500; --font-weight-semibold: 600; --fo=
nt-weight-bold: 700; --font-weight-black: 900; --tracking-tighter: -.05em; =
--tracking-tight: -.025em; --tracking-wide: .025em; --tracking-widest: .1em=
; --leading-tight: 1.25; --leading-snug: 1.375; --leading-normal: 1.5; --le=
ading-relaxed: 1.625; --radius-xs: .125rem; --radius-sm: .25rem; --radius-m=
d: .375rem; --radius-lg: .5rem; --radius-xl: .75rem; --radius-2xl: 1rem; --=
radius-3xl: 1.5rem; --radius-4xl: 2rem; --drop-shadow-xs: 0 1px 1px #000000=
0d; --drop-shadow-md: 0 3px 3px #0000001f; --ease-in: cubic-bezier(.4,0,1,1=
); --ease-out: cubic-bezier(0,0,.2,1); --ease-in-out: cubic-bezier(.4,0,.2,=
1); --animate-spin: spin 1s linear infinite; --animate-ping: ping 1s cubic-=
bezier(0,0,.2,1)infinite; --animate-pulse: pulse 2s cubic-bezier(.4,0,.6,1)=
infinite; --animate-bounce: bounce 1s infinite; --blur-xs: 4px; --blur-sm: =
8px; --blur-md: 12px; --blur-lg: 16px; --blur-xl: 24px; --blur-2xl: 40px; -=
-blur-3xl: 64px; --aspect-video: 16/9; --default-transition-duration: .15s;=
 --default-transition-timing-function: cubic-bezier(.4,0,.2,1); --default-f=
ont-family: ui-sans-serif,-apple-system,system-ui,Segoe UI,Helvetica,Apple =
Color Emoji,Arial,sans-serif,Segoe UI Emoji,Segoe UI Symbol; --default-font=
-feature-settings: normal; --default-font-variation-settings: normal; --def=
ault-mono-font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,L=
iberation Mono,monospace; --default-mono-font-feature-settings: normal; --d=
efault-mono-font-variation-settings: normal; --text-heading-3: 1.125rem; --=
text-heading-3--line-height: 1.625rem; --text-heading-3--letter-spacing: -.=
028125rem; --text-heading-3--font-weight: 600; --text-body-small-regular: .=
875rem; --text-body-small-regular--line-height: 1.125rem; --text-body-small=
-regular--letter-spacing: -.01875rem; --text-body-small-regular--font-weigh=
t: 400; --text-caption-regular: .75rem; --text-caption-regular--line-height=
: 1rem; --text-caption-regular--letter-spacing: -.00625rem; --text-caption-=
regular--font-weight: 400; }
}

@layer base {
  *, ::backdrop, ::after, ::before { border: 0px solid; box-sizing: border-=
box; margin: 0px; padding: 0px; }
  ::file-selector-button { border: 0px solid; box-sizing: border-box; margi=
n: 0px; padding: 0px; }
  :host, html { text-size-adjust: 100%; font-feature-settings: var(--defaul=
t-font-feature-settings,normal); -webkit-tap-highlight-color: transparent; =
font-family: var(--default-font-family,ui-sans-serif,system-ui,sans-serif,"=
Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"); =
font-variation-settings: var(--default-font-variation-settings,normal); lin=
e-height: 1.5; tab-size: 4; }
  body { line-height: inherit; }
  hr { border-top-width: 1px; color: inherit; height: 0px; }
  abbr:where([title]) { text-decoration: underline dotted; }
  h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }
  a { color: inherit; text-decoration: inherit; }
  b, strong { font-weight: bolder; }
  code, kbd, pre, samp { font-feature-settings: var(--default-mono-font-fea=
ture-settings,normal); font-family: var(--default-mono-font-family,ui-monos=
pace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",m=
onospace); font-size: 1em; font-variation-settings: var(--default-mono-font=
-variation-settings,normal); }
  small { font-size: 80%; }
  sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-a=
lign: baseline; }
  sub { bottom: -0.25em; }
  sup { top: -0.5em; }
  table { border-collapse: collapse; border-color: inherit; text-indent: 0p=
x; }
  progress { vertical-align: baseline; }
  summary { display: list-item; }
  menu, ol, ul { list-style: none; }
  audio, canvas, embed, iframe, img, object, svg, video { display: block; v=
ertical-align: middle; }
  img, video { height: auto; max-width: 100%; }
  button, input, optgroup, select, textarea { background-color: rgba(0, 0, =
0, 0); border-radius: 0px; color: inherit; font: inherit; letter-spacing: i=
nherit; opacity: 1; }
  ::file-selector-button { background-color: rgba(0, 0, 0, 0); border-radiu=
s: 0px; color: inherit; font: inherit; letter-spacing: inherit; opacity: 1;=
 }
  :where(select:is([multiple], [size])) optgroup { font-weight: bolder; }
  :where(select:is([multiple], [size])) optgroup option { padding-inline-st=
art: 20px; }
  ::file-selector-button { margin-inline-end: 4px; }
  ::placeholder { color: color-mix(in oklab, currentcolor, transparent); op=
acity: 1; }
  textarea { resize: vertical; }
  ::-webkit-search-decoration { appearance: none; }
  ::-webkit-date-and-time-value { min-height: 1lh; text-align: inherit; }
  ::-webkit-datetime-edit { display: inline-flex; padding-block: 0px; }
  ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-year-field {=
 padding-block: 0px; }
  ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field { p=
adding-block: 0px; }
  ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-fiel=
d { padding-block: 0px; }
  ::-webkit-datetime-edit-meridiem-field, ::-webkit-datetime-edit-milliseco=
nd-field { padding-block: 0px; }
  button, input:where([type=3D"button"], [type=3D"reset"], [type=3D"submit"=
]) { appearance: button; }
  ::file-selector-button { appearance: button; }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; =
}
  [hidden]:where(:not([hidden=3D"until-found"])) { display: none !important=
; }
  *, ::backdrop, ::after, ::before { border-color: var(--border-light,curre=
ntColor); }
  ::file-selector-button { border-color: var(--border-light,currentColor); =
}
  [role=3D"button"]:not(:disabled), button:not(:disabled) { cursor: pointer=
; }
  h1 { font-size: var(--text-3xl); line-height: var(--tw-leading,var(--text=
-3xl--line-height)); }
  h1, h2, h3 { --tw-font-weight: var(--font-weight-semibold); font-weight: =
var(--font-weight-semibold); }
  h2, h3 { font-size: var(--text-2xl); line-height: var(--tw-leading,var(--=
text-2xl--line-height)); }
  input[type=3D"number"]::-webkit-inner-spin-button, input[type=3D"number"]=
::-webkit-outer-spin-button { appearance: none; margin: 0px; }
  .mask-fade { mask-image: none; transition: -webkit-mask-image 0.2s, mask-=
image 0.2s; }
  .active-mask-fade, .group:hover .mask-fade { mask-image: linear-gradient(=
90deg, rgb(0, 0, 0) 0px, rgb(0, 0, 0) 75%, rgba(0, 0, 0, 0)); }
  @keyframes hive-log-fadeout {=20
  0% { background: rgba(2, 133, 255, 0.1); }
  100% { background-color: rgba(0, 0, 0, 0); }
}
  .hive-log { --tw-font-weight: var(--font-weight-medium); background-color=
: rgba(0, 0, 0, 0.05); border-radius: 3.40282e+38px; color: rgb(143, 143, 1=
43); cursor: pointer; font-size: 10px; font-weight: var(--font-weight-mediu=
m); padding-block: calc(var(--spacing)*.5); padding-inline: calc(var(--spac=
ing)*1.5); }
  @media (hover: hover) {
  .hive-log:hover { background-color: var(--main-surface-tertiary); color: =
var(--text-primary); }
}
  :root, [dir=3D"ltr"] { --start: left; --end: right; --to-end-unit: 1; --i=
s-ltr: unset; --is-rtl: ; }
  [dir=3D"rtl"] { --start: right; --end: left; --to-end-unit: -1; --is-ltr:=
 ; --is-rtl: unset; }
  :root { --user-chat-width: 70%; --sidebar-width: 260px; --sidebar-inline-=
padding: 12px; --sidebar-mask: linear-gradient(to var(--end),#000,#000 84%,=
transparent 89%,transparent 100%); --header-height: 60px; --white: #fff; --=
black: #000; --gray-50: #f9f9f9; --gray-100: #ececec; --gray-200: #e3e3e3; =
--gray-300: #cdcdcd; --gray-400: #b4b4b4; --gray-500: #9b9b9b; --gray-600: =
#676767; --gray-700: #424242; --gray-750: #2f2f2f; --gray-800: #212121; --g=
ray-900: #171717; --gray-950: #0d0d0d; --red-500: #e02e2a; --red-700: #911e=
1b; --brand-purple: #ab68ff; --yellow-900: #4d3b00; }
  @media (min-width: 768px) {
  :root { --header-height: 3.5rem; }
}
  @media (-moz-device-pixel-ratio>=3D2), (-o-min-device-pixel-ratio:2), (-w=
ebkit-device-pixel-ratio >=3D 2), (min-device-pixel-ratio:2), (min-resoluti=
on: 192dpi), (min-resolution: 2x) {
  :root { -webkit-font-smoothing: antialiased; }
}
  .dark .light, .light, html { --main-surface-background: #fffffff2; --mess=
age-surface: #e9e9e980; --composer-surface: var(--message-surface); --compo=
ser-blue-bg: #daeeff; --composer-blue-hover: #bddcf4; --composer-blue-hover=
-tint: #0084ff24; --composer-surface-primary: var(--main-surface-primary); =
--dot-color: var(--black); --text-primary: var(--gray-950); --icon-surface:=
 13 13 13; --text-primary-inverse: var(--gray-100); --content-primary: #011=
72b; --content-secondary: #44505b; --text-secondary: #5d5d5d; --text-tertia=
ry: var(--gray-400); --text-quaternary: var(--gray-300); --text-placeholder=
: #000000b3; --tag-blue: #08f; --tag-blue-light: #0af; --text-error: #f93a3=
7; --text-danger: var(--red-500); --surface-error: 249 58 55; --border-xlig=
ht: #0000000d; --border-light: #0000001a; --border-medium: #00000026; --bor=
der-heavy: #0003; --border-xheavy: #00000040; --hint-text: #08f; --hint-bg:=
 #b3dbff; --border-sharp: #0000000d; --icon-secondary: #676767; --main-surf=
ace-primary: var(--white); --main-surface-primary-inverse: var(--gray-800);=
 --main-surface-secondary: var(--gray-50); --main-surface-secondary-selecte=
d: #0000001a; --main-surface-tertiary: var(--gray-100); --sidebar-surface-p=
rimary: var(--gray-50); --sidebar-surface-secondary: var(--gray-100); --sid=
ebar-surface-tertiary: var(--gray-200); --sidebar-title-primary: #28282880;=
 --sidebar-surface: #fcfcfc; --sidebar-body-primary: #0d0d0d; --sidebar-ico=
n: #7d7d7d; --surface-hover: #00000012; --link: #2964aa; --link-hover: #749=
ac8; --selection: #007aff; }
  @supports (color:oklch(.99 0 0)) {
  .dark .light, .light, html { --sidebar-surface-floating-lightness: 1; --s=
idebar-surface-floating-alpha: 1; --sidebar-surface-pinned-lightness: .99; =
--sidebar-surface-pinned-alpha: 1; }
}
  @media (prefers-reduced-transparency: reduce) {
  .dark .light, .light, html { --message-surface: #f4f4f4; }
}
  .dark { --main-surface-background: #212121e6; --message-surface: #323232d=
9; --composer-blue-bg: #2a4a6d; --composer-blue-hover: #1a416a; --composer-=
blue-text: #48aaff; --composer-surface-primary: #303030; --dot-color: var(-=
-white); --text-primary: var(--gray-100); --icon-surface: 240 240 240; --te=
xt-primary-inverse: var(--gray-950); --text-secondary: var(--gray-400); --t=
ext-tertiary: var(--gray-500); --text-quaternary: var(--gray-600); --text-p=
laceholder: #fffc; --content-primary: #f2f6fa; --content-secondary: #dbe2e8=
; --text-error: #f93a37; --border-xlight: #ffffff0d; --border-light: #fffff=
f1a; --border-medium: #ffffff26; --border-heavy: #fff3; --border-xheavy: #f=
fffff40; --border-sharp: #ffffff0d; --main-surface-primary: var(--gray-800)=
; --main-surface-primary-inverse: var(--white); --main-surface-secondary: v=
ar(--gray-750); --main-surface-secondary-selected: #ffffff26; --main-surfac=
e-tertiary: var(--gray-700); --sidebar-surface-primary: var(--gray-900); --=
sidebar-surface-secondary: var(--gray-800); --sidebar-surface-tertiary: var=
(--gray-750); --sidebar-title-primary: #f0f0f080; --sidebar-surface: #2b2b2=
b; --sidebar-body-primary: #ededed; --sidebar-icon: #a4a4a4; --surface-hove=
r: #ffffff26; --link: #7ab7ff; --link-hover: #5e83b3; --surface-error: 249 =
58 55; }
  @supports (color:oklch(.99 0 0)) {
  .dark { --sidebar-surface-floating-lightness: .3; --sidebar-surface-float=
ing-alpha: 1; --sidebar-surface-pinned-lightness: .29; --sidebar-surface-pi=
nned-alpha: 1; }
}
  @media (prefers-reduced-transparency: reduce) {
  .dark { --message-surface: #2f2f2f; }
}
  .dark :not(.light).popover, .dark.popover, .popover .dark { --main-surfac=
e-primary: var(--gray-750); --main-surface-secondary: var(--gray-700); --ma=
in-surface-tertiary: var(--gray-600); --text-primary: var(--gray-50); --tex=
t-secondary: var(--gray-200); --text-tertiary: var(--gray-400); --text-quat=
ernary: var(--gray-500); --sidebar-surface-primary: var(--gray-750); }
  .dark .light.popover, .light .popover, .light.popover, .popover { --main-=
surface-primary: var(--white); --main-surface-secondary: var(--gray-100); -=
-main-surface-tertiary: var(--gray-200); --sidebar-surface-primary: var(--w=
hite); }
  .dark .popover.sidebar { --main-surface-secondary: #393939 !important; }
  .light .canvas-open { --main-surface-primary: #f9f9f9; --message-surface:=
 #eee; }
  textarea:focus { border-color: inherit; box-shadow: none; outline: none; =
}
  @supports (height:100cqh) {
  :root { --cqh-full: 100cqh; --cqw-full: 100cqw; }
}
  @supports not (height:100cqh) {
  :root { --cqh-full: 100dvh; --cqw-full: 100dvw; }
}
  [multiple], [type=3D"date"], [type=3D"datetime-local"], [type=3D"email"],=
 [type=3D"month"], [type=3D"number"], [type=3D"password"], [type=3D"search"=
], [type=3D"tel"], [type=3D"text"], [type=3D"time"], [type=3D"url"], [type=
=3D"week"], select, textarea { --tw-shadow: 0 0 #0000; appearance: none; ba=
ckground-color: rgb(255, 255, 255); border-color: rgb(155, 155, 155); borde=
r-radius: 0px; border-width: 1px; font-size: 1rem; line-height: 1.5rem; pad=
ding: 0.5rem 0.75rem; }
  :is([type=3D"text"], [type=3D"email"], [type=3D"url"], [type=3D"password"=
], [type=3D"number"], [type=3D"date"], [type=3D"datetime-local"], [type=3D"=
month"], [type=3D"search"], [type=3D"tel"], [type=3D"time"], [type=3D"week"=
], [multiple], textarea, select):focus { --tw-ring-inset: var(--tw-empty, )=
; --tw-ring-offset-width: 0px; --tw-ring-offset-color: #fff; --tw-ring-colo=
r: #004f99; --tw-ring-offset-shadow: var(--tw-ring-inset)0 0 0 var(--tw-rin=
g-offset-width)var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset)0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color); b=
order-color: rgb(0, 79, 153); box-shadow: var(--tw-ring-offset-shadow),var(=
--tw-ring-shadow),var(--tw-shadow); outline: rgba(0, 0, 0, 0) solid 2px; ou=
tline-offset: 2px; }
  input::placeholder, textarea::placeholder { color: rgb(155, 155, 155); op=
acity: 1; }
  ::-webkit-datetime-edit-fields-wrapper { padding: 0px; }
  ::-webkit-date-and-time-value { min-height: 1.5em; }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field { padding-bot=
tom: 0px; padding-top: 0px; }
  ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-month-field { =
padding-bottom: 0px; padding-top: 0px; }
  ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field =
{ padding-bottom: 0px; padding-top: 0px; }
  ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-second=
-field { padding-bottom: 0px; padding-top: 0px; }
  ::-webkit-datetime-edit-meridiem-field { padding-bottom: 0px; padding-top=
: 0px; }
  select { background-image: url("data:image/svg+xml;charset=3Dutf-8,%3Csvg=
 xmlns=3D'http://www.w3.org/2000/svg' fill=3D'none' viewBox=3D'0 0 20 20'%3=
E%3Cpath stroke=3D'%239B9B9B' stroke-linecap=3D'round' stroke-linejoin=3D'r=
ound' stroke-width=3D'1.5' d=3D'm6 8 4 4 4-4'/%3E%3C/svg%3E"); background-r=
epeat: no-repeat; background-size: 1.5em 1.5em; -webkit-print-color-adjust:=
 exact; }
  [dir=3D"ltr"] select { background-position: right 0.5rem center; padding-=
right: 2.5rem; }
  [dir=3D"rtl"] select { background-position: left 0.5rem center; padding-l=
eft: 2.5rem; }
  [multiple] { background-image: none; background-position: 0px 0px; backgr=
ound-repeat: unset; background-size: initial; -webkit-print-color-adjust: u=
nset; }
  [dir=3D"ltr"] [multiple] { padding-right: 0.75rem; }
  [dir=3D"rtl"] [multiple] { padding-left: 0.75rem; }
  [type=3D"checkbox"], [type=3D"radio"] { --tw-shadow: 0 0 #0000; appearanc=
e: none; background-color: rgb(255, 255, 255); background-origin: border-bo=
x; border-color: rgb(155, 155, 155); border-width: 1px; color: rgb(0, 79, 1=
53); display: inline-block; flex-shrink: 0; height: 1rem; padding: 0px; -we=
bkit-print-color-adjust: exact; user-select: none; vertical-align: middle; =
width: 1rem; }
  [type=3D"checkbox"] { border-radius: 0px; }
  [type=3D"radio"] { border-radius: 100%; }
  [type=3D"checkbox"]:focus, [type=3D"radio"]:focus { --tw-ring-inset: var(=
--tw-empty, ); --tw-ring-offset-width: 2px; --tw-ring-offset-color: #fff; -=
-tw-ring-color: #004f99; --tw-ring-offset-shadow: var(--tw-ring-inset)0 0 0=
 var(--tw-ring-offset-width)var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-r=
ing-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),=
var(--tw-shadow); outline: rgba(0, 0, 0, 0) solid 2px; outline-offset: 2px;=
 }
  [type=3D"checkbox"]:checked, [type=3D"radio"]:checked { background-color:=
 currentcolor; background-position: 50% center; background-repeat: no-repea=
t; background-size: 100% 100%; border-color: rgba(0, 0, 0, 0); }
  [type=3D"checkbox"]:checked { background-image: url("data:image/svg+xml;c=
harset=3Dutf-8,%3Csvg viewBox=3D'0 0 16 16' fill=3D'%23fff' xmlns=3D'http:/=
/www.w3.org/2000/svg'%3E%3Cpath d=3D'M12.207 4.793a1 1 0 0 1 0 1.414l-5 5a1=
 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L6.5 9.086l4.293-4.293a1 1 0 0 1=
 1.414 0z'/%3E%3C/svg%3E"); }
  [type=3D"radio"]:checked { background-image: url("data:image/svg+xml;char=
set=3Dutf-8,%3Csvg viewBox=3D'0 0 16 16' fill=3D'%23fff' xmlns=3D'http://ww=
w.w3.org/2000/svg'%3E%3Ccircle cx=3D'8' cy=3D'8' r=3D'3'/%3E%3C/svg%3E"); }
  [type=3D"checkbox"]:checked:focus, [type=3D"checkbox"]:checked:hover, [ty=
pe=3D"radio"]:checked:focus, [type=3D"radio"]:checked:hover { background-co=
lor: currentcolor; border-color: rgba(0, 0, 0, 0); }
  [type=3D"checkbox"]:indeterminate { background-color: currentcolor; backg=
round-image: url("data:image/svg+xml;charset=3Dutf-8,%3Csvg xmlns=3D'http:/=
/www.w3.org/2000/svg' fill=3D'none' viewBox=3D'0 0 16 16'%3E%3Cpath stroke=
=3D'%23fff' stroke-linecap=3D'round' stroke-linejoin=3D'round' stroke-width=
=3D'2' d=3D'M4 8h8'/%3E%3C/svg%3E"); background-position: 50% center; backg=
round-repeat: no-repeat; background-size: 100% 100%; border-color: rgba(0, =
0, 0, 0); }
  [type=3D"checkbox"]:indeterminate:focus, [type=3D"checkbox"]:indeterminat=
e:hover { background-color: currentcolor; border-color: rgba(0, 0, 0, 0); }
  [type=3D"file"] { background: unset; border-color: inherit; border-radius=
: 0px; border-width: 0px; font-size: unset; line-height: inherit; padding: =
0px; }
  [type=3D"file"]:focus { outline: -webkit-focus-ring-color auto 1px; }
}

@layer components {
  .icon-xs { stroke-width: 1.5px; flex-shrink: 0; height: calc(var(--spacin=
g)*3); width: calc(var(--spacing)*3); }
  .icon-sm { stroke-width: 2px; flex-shrink: 0; height: calc(var(--spacing)=
*4); width: calc(var(--spacing)*4); }
  .icon-sm-adaptive { height: calc(var(--spacing)*5); width: calc(var(--spa=
cing)*5); }
  @media (min-width: 48rem) {
  .icon-sm-adaptive { height: calc(var(--spacing)*4); width: calc(var(--spa=
cing)*4); }
}
  .icon-sm-heavy { stroke-width: 2.5px; flex-shrink: 0; height: calc(var(--=
spacing)*4); width: calc(var(--spacing)*4); }
  .icon-md { height: 18px; width: 18px; }
  .icon-md, .icon-sidebar { stroke-width: 1.5px; flex-shrink: 0; }
  .icon-sidebar { height: 20px; width: 20px; }
  .icon-md-heavy { stroke-width: 2.5px; flex-shrink: 0; height: 18px; width=
: 18px; }
  .icon-lg { stroke-width: 1.5px; flex-shrink: 0; height: calc(var(--spacin=
g)*6); width: calc(var(--spacing)*6); }
  .icon-lg-heavy { stroke-width: 2px; flex-shrink: 0; height: 22px; width: =
22px; }
  .icon-xl { stroke-width: 1.5px; flex-shrink: 0; height: calc(var(--spacin=
g)*7); width: calc(var(--spacing)*7); }
  .icon-xl-heavy { stroke-width: 2px; flex-shrink: 0; height: 24px; width: =
24px; }
  .icon-2xl { stroke-width: 1.5px; flex-shrink: 0; height: calc(var(--spaci=
ng)*8); width: calc(var(--spacing)*8); }
  .icon-workspace-avatar-preview { stroke-width: 1.5px; height: 96px; width=
: 96px; }
  .icon-cover { stroke-width: 1.5px; height: 234px; width: 234px; }
  .loading-shimmer, .loading-shimmer-pure-text { --shimmer-contrast: #fffff=
fbf; }
  .dark .loading-shimmer, .dark .loading-shimmer-pure-text { --shimmer-cont=
rast: #0009; }
  .loading-shimmer, .loading-shimmer-pure-text { -webkit-text-fill-color: t=
ransparent; animation-delay: 0.5s; animation-duration: 3s; animation-iterat=
ion-count: infinite; animation-name: loading-shimmer; background-image: ; b=
ackground-position-x: ; background-position-y: ; background-attachment: ; b=
ackground-origin: ; background-color: ; background-clip: text; background-r=
epeat: no-repeat; background-size: 50% 200%; display: inline-block; }
  [dir=3D"ltr"] .loading-shimmer, [dir=3D"ltr"] .loading-shimmer-pure-text =
{ background-position: -100% 0px; }
  [dir=3D"rtl"] .loading-shimmer, [dir=3D"rtl"] .loading-shimmer-pure-text =
{ background-position: 200% 0px; }
  .loading-shimmer:hover { -webkit-text-fill-color: var(--text-primary); an=
imation: auto ease 0s 1 normal none running none; }
  [dir=3D"ltr"] .loading-shimmer:hover { background: 0px 0px; }
  [dir=3D"rtl"] .loading-shimmer:hover { background: 100% 0px; }
  .loading-shimmer-pure-text-inverted { -webkit-text-fill-color: transparen=
t; animation-delay: 0.5s; animation-duration: 3s; animation-iteration-count=
: infinite; animation-name: loading-shimmer; background-image: ; background=
-position-x: ; background-position-y: ; background-attachment: ; background=
-origin: ; background-color: ; background-clip: text; background-repeat: no=
-repeat; background-size: 50% 200%; display: inline-block; }
  [dir=3D"ltr"] .loading-shimmer-pure-text-inverted { background-position: =
-100% 0px; }
  [dir=3D"rtl"] .loading-shimmer-pure-text-inverted { background-position: =
200% 0px; }
  .gizmo-shadow-stroke { position: relative; }
  .gizmo-shadow-stroke::after { --tw-shadow: inset 0 0 0 1px var(--tw-shado=
w-color,#0000001a); border-radius: 3.40282e+38px; content: ""; inset: calc(=
var(--spacing)*0); position: absolute; }
  .dark .gizmo-shadow-stroke::after, .gizmo-shadow-stroke::after { box-shad=
ow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset=
-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark .gizmo-shadow-stroke::after { --tw-shadow: inset 0 0 0 1px var(--tw=
-shadow-color,#fff3); }
}

@layer utilities {
  .\@container\/thread { container: thread / inline-size; }
  .\@container { container-type: inline-size; }
  .btn { --tw-font-weight: var(--font-weight-medium); align-items: center; =
border-color: rgba(0, 0, 0, 0); border-radius: 3.40282e+38px; border-style:=
 var(--tw-border-style); border-width: 1px; display: inline-flex; flex-shri=
nk: 0; font-size: var(--text-sm); font-weight: var(--font-weight-medium); j=
ustify-content: center; line-height: var(--tw-leading,var(--text-sm--line-h=
eight)); min-height: 38px; padding-block: calc(var(--spacing)*2); padding-i=
nline: calc(var(--spacing)*3.5); pointer-events: auto; }
  .btn:focus { --tw-outline-style: none; outline-style: none; }
  @media (forced-colors: active) {
  .btn:focus { outline: rgba(0, 0, 0, 0) solid 2px; outline-offset: 2px; }
}
  .btn:focus-visible { --tw-outline-style: none; outline-style: none; }
  @media (forced-colors: active) {
  .btn:focus-visible { outline: rgba(0, 0, 0, 0) solid 2px; outline-offset:=
 2px; }
}
  .btn:disabled { cursor: not-allowed; opacity: 0.5; }
  .btn:active:not(:disabled) { opacity: 0.8; }
  .pointer-events-auto { pointer-events: auto; }
  .pointer-events-auto\! { pointer-events: auto !important; }
  .pointer-events-none { pointer-events: none; }
  .collapse { visibility: collapse; }
  .invisible { visibility: hidden; }
  .visible { visibility: visible; }
  .border-glowing-gradient { --tw-blur: blur(4px); filter: var(--tw-blur,)v=
ar(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rot=
ate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shad=
ow,); height: 120%; inset: 0px -10% 0px 0px; margin: auto; position: absolu=
te; width: 120%; z-index: 1; }
  [dir=3D"ltr"] .border-glowing-gradient { background: conic-gradient(var(-=
-glow-color-1,oklch(.63 .2 254.95))120deg,var(--glow-color-2,oklch(.7 .2 25=
4.95))150deg,var(--glow-color-3,oklch(.77 .2 254.95))200deg,var(--glow-colo=
r-4,oklch(.84 .2 254.95))240deg); }
  [dir=3D"rtl"] .border-glowing-gradient { background: conic-gradient(var(-=
-glow-color-1,oklch(.63 .2 254.95))-120deg,var(--glow-color-2,oklch(.7 .2 2=
54.95))150deg,var(--glow-color-3,oklch(.77 .2 254.95))200deg,var(--glow-col=
or-4,oklch(.84 .2 254.95))240deg); }
  @media (prefers-reduced-motion: no-preference) {
  .border-glowing-gradient { animation: 1.5s linear 0s infinite normal none=
 running spin; }
}
  .sr-only { clip: rect(0px, 0px, 0px, 0px); border-width: 0px; height: 1px=
; margin: -1px; overflow: hidden; padding: 0px; white-space: nowrap; width:=
 1px; }
  .absolute, .sr-only { position: absolute; }
  .fixed { position: fixed; }
  .relative { position: relative; }
  .static { position: static; }
  .static\! { position: static !important; }
  .sticky { position: sticky; }
  .-inset-4 { inset: calc(var(--spacing)*-4); }
  .inset-0 { inset: calc(var(--spacing)*0); }
  .inset-2 { inset: calc(var(--spacing)*2); }
  .inset-5 { inset: calc(var(--spacing)*5); }
  .inset-x-0 { inset-inline: calc(var(--spacing)*0); }
  .inset-x-\[15px\] { inset-inline: 15px; }
  .inset-x-px { inset-inline: 1px; }
  .inset-y-0 { inset-block: calc(var(--spacing)*0); }
  .-start-1 { inset-inline-start: calc(var(--spacing)*-1); }
  .-start-2 { inset-inline-start: calc(var(--spacing)*-2); }
  .-start-4 { inset-inline-start: calc(var(--spacing)*-4); }
  .-start-96 { inset-inline-start: calc(var(--spacing)*-96); }
  .start-0 { inset-inline-start: calc(var(--spacing)*0); }
  .start-1 { inset-inline-start: calc(var(--spacing)*1); }
  .start-1\/2 { inset-inline-start: 50%; }
  .start-2 { inset-inline-start: calc(var(--spacing)*2); }
  .start-3 { inset-inline-start: calc(var(--spacing)*3); }
  .start-4 { inset-inline-start: calc(var(--spacing)*4); }
  .start-5 { inset-inline-start: calc(var(--spacing)*5); }
  .start-6 { inset-inline-start: calc(var(--spacing)*6); }
  .start-10 { inset-inline-start: calc(var(--spacing)*10); }
  .start-\[-2px\] { inset-inline-start: -2px; }
  .start-\[-150\%\] { inset-inline-start: -150%; }
  .start-\[0\.81rem\] { inset-inline-start: 0.81rem; }
  .start-\[3\.25rem\] { inset-inline-start: 3.25rem; }
  .start-\[7px\] { inset-inline-start: 7px; }
  .start-\[calc\(\(\(100vw-450px-min\(100vw-450px\,850px\)\)\/2\)\)\] { ins=
et-inline-start: calc(-225px + 50vw + min(-450px + 100vw, 850px) / -2); }
  .start-full { inset-inline-start: 100%; }
  .-end-1 { inset-inline-end: calc(var(--spacing)*-1); }
  .-end-1\.5 { inset-inline-end: calc(var(--spacing)*-1.5); }
  .-end-2 { inset-inline-end: calc(var(--spacing)*-2); }
  .-end-4 { inset-inline-end: calc(var(--spacing)*-4); }
  .end-\(--thread-content-margin\) { inset-inline-end: var(--thread-content=
-margin); }
  .end-0 { inset-inline-end: calc(var(--spacing)*0); }
  .end-1 { inset-inline-end: calc(var(--spacing)*1); }
  .end-1\/2 { inset-inline-end: 50%; }
  .end-2 { inset-inline-end: calc(var(--spacing)*2); }
  .end-2\.5 { inset-inline-end: calc(var(--spacing)*2.5); }
  .end-3 { inset-inline-end: calc(var(--spacing)*3); }
  .end-4 { inset-inline-end: calc(var(--spacing)*4); }
  .end-5 { inset-inline-end: calc(var(--spacing)*5); }
  .end-14 { inset-inline-end: calc(var(--spacing)*14); }
  .end-\[-1px\] { inset-inline-end: -1px; }
  .end-\[-3px\] { inset-inline-end: -3px; }
  .end-\[-8px\] { inset-inline-end: -8px; }
  .end-\[-135px\] { inset-inline-end: -135px; }
  .end-\[4\.8px\] { inset-inline-end: 4.8px; }
  .end-\[12px\] { inset-inline-end: 12px; }
  .end-full { inset-inline-end: 100%; }
  .end-snc-1 { inset-inline-end: var(--snc-1); }
  .-top-0 { top: calc(var(--spacing)*0); }
  .-top-1 { top: calc(var(--spacing)*-1); }
  .-top-1\.5 { top: calc(var(--spacing)*-1.5); }
  .-top-2 { top: calc(var(--spacing)*-2); }
  .-top-3\! { top: calc(var(--spacing)*-3) !important; }
  .-top-4 { top: calc(var(--spacing)*-4); }
  .-top-5 { top: calc(var(--spacing)*-5); }
  .-top-96 { top: calc(var(--spacing)*-96); }
  .-top-px { top: -1px; }
  .top-0 { top: calc(var(--spacing)*0); }
  .top-1 { top: calc(var(--spacing)*1); }
  .top-1\/2 { top: 50%; }
  .top-2 { top: calc(var(--spacing)*2); }
  .top-2\.5 { top: calc(var(--spacing)*2.5); }
  .top-3 { top: calc(var(--spacing)*3); }
  .top-4 { top: calc(var(--spacing)*4); }
  .top-5 { top: calc(var(--spacing)*5); }
  .top-6 { top: calc(var(--spacing)*6); }
  .top-8 { top: calc(var(--spacing)*8); }
  .top-9 { top: calc(var(--spacing)*9); }
  .top-11 { top: calc(var(--spacing)*11); }
  .top-14 { top: calc(var(--spacing)*14); }
  .top-24 { top: calc(var(--spacing)*24); }
  .top-48 { top: calc(var(--spacing)*48); }
  .top-\[-0\.094rem\] { top: -0.094rem; }
  .top-\[-1px\] { top: -1px; }
  .top-\[-2px\] { top: -2px; }
  .top-\[-3px\] { top: -3px; }
  .top-\[-4px\] { top: -4px; }
  .top-\[-6px\] { top: -6px; }
  .top-\[-8px\] { top: -8px; }
  .top-\[-150\%\] { top: -150%; }
  .top-\[0\.55rem\] { top: 0.55rem; }
  .top-\[0\.125rem\] { top: 0.125rem; }
  .top-\[1px\] { top: 1px; }
  .top-\[9px\] { top: 9px; }
  .top-\[20px\] { top: 20px; }
  .top-\[21\.5px\] { top: 21.5px; }
  .top-full { top: 100%; }
  [dir=3D"ltr"] .right-0 { right: calc(var(--spacing)*0); }
  [dir=3D"rtl"] .right-0 { left: calc(var(--spacing)*0); }
  [dir=3D"ltr"] .right-0\! { right: calc(var(--spacing)*0) !important; }
  [dir=3D"rtl"] .right-0\! { left: calc(var(--spacing)*0) !important; }
  .-bottom-0\.5 { bottom: calc(var(--spacing)*-.5); }
  .-bottom-2 { bottom: calc(var(--spacing)*-2); }
  .-bottom-5 { bottom: calc(var(--spacing)*-5); }
  .-bottom-px { bottom: -1px; }
  .bottom-0 { bottom: calc(var(--spacing)*0); }
  .bottom-1 { bottom: calc(var(--spacing)*1); }
  .bottom-2 { bottom: calc(var(--spacing)*2); }
  .bottom-3 { bottom: calc(var(--spacing)*3); }
  .bottom-4 { bottom: calc(var(--spacing)*4); }
  .bottom-5 { bottom: calc(var(--spacing)*5); }
  .bottom-6 { bottom: calc(var(--spacing)*6); }
  .bottom-8 { bottom: calc(var(--spacing)*8); }
  .bottom-\[-2px\] { bottom: -2px; }
  .bottom-\[-3px\] { bottom: -3px; }
  .bottom-\[1px\] { bottom: 1px; }
  .bottom-\[3\.75rem\] { bottom: 3.75rem; }
  .bottom-\[8px\] { bottom: 8px; }
  .bottom-\[20px\] { bottom: 20px; }
  .bottom-\[64px\] { bottom: 64px; }
  .bottom-full { bottom: 100%; }
  .bottom-snc-1 { bottom: var(--snc-1); }
  [dir=3D"ltr"] .left-0\! { left: calc(var(--spacing)*0) !important; }
  [dir=3D"rtl"] .left-0\! { right: calc(var(--spacing)*0) !important; }
  [dir=3D"ltr"] .left-1\/2\!, [dir=3D"ltr"] .left-\[50\%\]\! { left: 50% !i=
mportant; }
  [dir=3D"rtl"] .left-1\/2\!, [dir=3D"rtl"] .left-\[50\%\]\! { right: 50% !=
important; }
  .isolate { isolation: isolate; }
  .-z-10 { z-index: -10; }
  .z-0 { z-index: 0; }
  .z-1 { z-index: 1; }
  .z-2 { z-index: 2; }
  .z-3 { z-index: 3; }
  .z-4 { z-index: 4; }
  .z-10 { z-index: 10; }
  .z-10\! { z-index: 10 !important; }
  .z-11 { z-index: 11; }
  .z-20 { z-index: 20; }
  .z-21 { z-index: 21; }
  .z-25 { z-index: 25; }
  .z-26 { z-index: 26; }
  .z-30 { z-index: 30; }
  .z-40 { z-index: 40; }
  .z-50 { z-index: 50; }
  .z-60 { z-index: 60; }
  .z-61 { z-index: 61; }
  .z-70 { z-index: 70; }
  .z-100 { z-index: 100; }
  .z-1000 { z-index: 1000; }
  .z-9999 { z-index: 9999; }
  .z-10000 { z-index: 10000; }
  .z-11000 { z-index: 11000; }
  .z-\[-1\] { z-index: -1; }
  .z-\[2\] { z-index: 2; }
  .order-1 { order: 1; }
  .order-2 { order: 2; }
  .order-4 { order: 4; }
  .order-5 { order: 5; }
  .order-10 { order: 10; }
  .order-last { order: 9999; }
  .col-auto { grid-column: auto; }
  .col-span-1 { grid-column: span 1 / span 1; }
  .col-span-2 { grid-column: span 2 / span 2; }
  .col-span-3 { grid-column: span 3 / span 3; }
  .col-start-1 { grid-column-start: 1; }
  .col-start-2 { grid-column-start: 2; }
  .col-end-2 { grid-column-end: 2; }
  .row-auto { grid-row: auto; }
  .row-span-2 { grid-row: span 2 / span 2; }
  .row-span-4 { grid-row: span 4 / span 4; }
  .row-start-1 { grid-row-start: 1; }
  .row-start-2 { grid-row-start: 2; }
  .row-end-2 { grid-row-end: 2; }
  .float-end { float: inline-end; }
  [dir=3D"ltr"] .float-left { float: left; }
  [dir=3D"ltr"] .float-right, [dir=3D"rtl"] .float-left { float: right; }
  [dir=3D"rtl"] .float-right { float: left; }
  .float-start { float: inline-start; }
  .clear-end { clear: inline-end; }
  [dir=3D"ltr"] .clear-left { clear: left; }
  [dir=3D"ltr"] .clear-right, [dir=3D"rtl"] .clear-left { clear: right; }
  [dir=3D"rtl"] .clear-right { clear: left; }
  .clear-start { clear: inline-start; }
  .container { width: 100%; }
  @media (min-width: 480px) {
  .container { max-width: 480px; }
}
  @media (min-width: 40rem) {
  .container { max-width: 40rem; }
}
  @media (min-width: 48rem) {
  .container { max-width: 48rem; }
}
  @media (min-width: 64rem) {
  .container { max-width: 64rem; }
}
  @media (min-width: 80rem) {
  .container { max-width: 80rem; }
}
  @media (min-width: 96rem) {
  .container { max-width: 96rem; }
}
  .prose { --tw-prose-body: var(--text-primary); --tw-prose-headings: var(-=
-text-primary); --tw-prose-lead: var(--text-primary); --tw-prose-links: var=
(--text-primary); --tw-prose-bold: var(--text-primary); --tw-prose-counters=
: var(--text-primary); --tw-prose-bullets: var(--text-primary); --tw-prose-=
hr: var(--border-xheavy); --tw-prose-quotes: var(--text-primary); --tw-pros=
e-quote-borders: oklch(.928 .006 264.531); --tw-prose-captions: var(--text-=
secondary); --tw-prose-code: var(--text-primary); --tw-prose-pre-code: oklc=
h(.928 .006 264.531); --tw-prose-pre-bg: oklch(.278 .033 256.848); --tw-pro=
se-th-borders: oklch(.872 .01 258.338); --tw-prose-td-borders: oklch(.928 .=
006 264.531); --tw-prose-invert-body: var(--text-primary); --tw-prose-inver=
t-headings: var(--text-primary); --tw-prose-invert-lead: var(--text-primary=
); --tw-prose-invert-links: var(--text-primary); --tw-prose-invert-bold: va=
r(--text-primary); --tw-prose-invert-counters: var(--text-primary); --tw-pr=
ose-invert-bullets: var(--text-primary); --tw-prose-invert-hr: var(--border=
-xheavy); --tw-prose-invert-quotes: var(--text-primary); --tw-prose-invert-=
quote-borders: oklch(.373 .034 259.733); --tw-prose-invert-captions: var(--=
text-secondary); --tw-prose-invert-code: var(--text-primary); --tw-prose-in=
vert-pre-code: oklch(.872 .01 258.338); --tw-prose-invert-pre-bg: #00000080=
; --tw-prose-invert-th-borders: oklch(.446 .03 256.802); --tw-prose-invert-=
td-borders: oklch(.373 .034 259.733); color: var(--tw-prose-body); font-siz=
e: 1rem; line-height: 1.75; max-width: 65ch; }
  .prose :where([class~=3D"lead"]):not(:where([class~=3D"not-prose"] *)) { =
color: var(--tw-prose-lead); font-size: 1.25em; line-height: 1.6; margin-bo=
ttom: 1.2em; margin-top: 1.2em; }
  .prose :where(a):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-=
prose-links); font-weight: 500; text-decoration: underline; }
  .prose :where(strong):not(:where([class~=3D"not-prose"] *)) { color: var(=
--tw-prose-bold); font-weight: 600; }
  .prose :where(a strong):not(:where([class~=3D"not-prose"] *)), .prose :wh=
ere(blockquote strong):not(:where([class~=3D"not-prose"] *)), .prose :where=
(thead th strong):not(:where([class~=3D"not-prose"] *)) { color: inherit; }
  .prose :where(ol):not(:where([class~=3D"not-prose"] *)) { list-style-type=
: decimal; margin-bottom: 1.25em; margin-top: 1.25em; }
  [dir=3D"ltr"] .prose :where(ol):not(:where([class~=3D"not-prose"] *)) { p=
adding-left: 1.625em; }
  [dir=3D"rtl"] .prose :where(ol):not(:where([class~=3D"not-prose"] *)) { p=
adding-right: 1.625em; }
  .prose :where(ol[type=3D"A"]):not(:where([class~=3D"not-prose"] *)) { lis=
t-style-type: upper-alpha; }
  .prose :where(ol[type=3D"a"]):not(:where([class~=3D"not-prose"] *)) { lis=
t-style-type: lower-alpha; }
  .prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: =
upper-alpha; }
  .prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: =
lower-alpha; }
  .prose :where(ol[type=3D"I"]):not(:where([class~=3D"not-prose"] *)) { lis=
t-style-type: upper-roman; }
  .prose :where(ol[type=3D"i"]):not(:where([class~=3D"not-prose"] *)) { lis=
t-style-type: lower-roman; }
  .prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: =
upper-roman; }
  .prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: =
lower-roman; }
  .prose :where(ol[type=3D"1"]):not(:where([class~=3D"not-prose"] *)) { lis=
t-style-type: decimal; }
  .prose :where(ul):not(:where([class~=3D"not-prose"] *)) { list-style-type=
: disc; margin-bottom: 1.25em; margin-top: 1.25em; }
  [dir=3D"ltr"] .prose :where(ul):not(:where([class~=3D"not-prose"] *)) { p=
adding-left: 1.625em; }
  [dir=3D"rtl"] .prose :where(ul):not(:where([class~=3D"not-prose"] *)) { p=
adding-right: 1.625em; }
  .prose :where(ol > li):not(:where([class~=3D"not-prose"] *))::marker { co=
lor: var(--tw-prose-counters); font-weight: 400; }
  .prose :where(ul > li):not(:where([class~=3D"not-prose"] *))::marker { co=
lor: var(--tw-prose-bullets); }
  .prose :where(hr):not(:where([class~=3D"not-prose"] *)) { border-color: v=
ar(--tw-prose-hr); border-top-width: 1px; margin-bottom: 3em; margin-top: 3=
em; }
  .prose :where(blockquote):not(:where([class~=3D"not-prose"] *)) { color: =
var(--tw-prose-quotes); font-style: normal; font-weight: 500; margin-bottom=
: 1.6em; margin-top: 1.6em; quotes: "=E2=80=9C" "=E2=80=9D" "=E2=80=98" "=
=E2=80=99"; }
  [dir=3D"ltr"] .prose :where(blockquote):not(:where([class~=3D"not-prose"]=
 *)) { border-left-color: var(--tw-prose-quote-borders); border-left-width:=
 0.25rem; padding-left: 1em; }
  [dir=3D"rtl"] .prose :where(blockquote):not(:where([class~=3D"not-prose"]=
 *)) { border-right-color: var(--tw-prose-quote-borders); border-right-widt=
h: 0.25rem; padding-right: 1em; }
  .prose :where(blockquote p:first-of-type):not(:where([class~=3D"not-prose=
"] *))::before { content: open-quote; }
  .prose :where(blockquote p:last-of-type):not(:where([class~=3D"not-prose"=
] *))::after { content: close-quote; }
  .prose :where(h1):not(:where([class~=3D"not-prose"] *)) { color: var(--tw=
-prose-headings); font-size: 2.25em; font-weight: 800; line-height: 1.11111=
; margin-bottom: 0.888889em; margin-top: 0px; }
  .prose :where(h1 strong):not(:where([class~=3D"not-prose"] *)) { color: i=
nherit; font-weight: 900; }
  .prose :where(h2):not(:where([class~=3D"not-prose"] *)) { color: var(--tw=
-prose-headings); font-size: 1.5em; font-weight: 700; line-height: 1.33333;=
 margin-bottom: 1em; margin-top: 2em; }
  .prose :where(h2 strong):not(:where([class~=3D"not-prose"] *)) { color: i=
nherit; font-weight: 800; }
  .prose :where(h3):not(:where([class~=3D"not-prose"] *)) { color: var(--tw=
-prose-headings); font-size: 1.25em; font-weight: 600; line-height: 1.6; ma=
rgin-bottom: 0.6em; margin-top: 1.6em; }
  .prose :where(h3 strong):not(:where([class~=3D"not-prose"] *)) { color: i=
nherit; font-weight: 700; }
  .prose :where(h4):not(:where([class~=3D"not-prose"] *)) { color: var(--tw=
-prose-headings); font-weight: 600; line-height: 1.5; margin-bottom: 0.5em;=
 margin-top: 1.5em; }
  .prose :where(h4 strong):not(:where([class~=3D"not-prose"] *)) { color: i=
nherit; font-weight: 700; }
  .prose :where(img):not(:where([class~=3D"not-prose"] *)) { margin-bottom:=
 2em; margin-top: 2em; }
  .prose :where(figure > *):not(:where([class~=3D"not-prose"] *)) { margin-=
bottom: 0px; margin-top: 0px; }
  .prose :where(figcaption):not(:where([class~=3D"not-prose"] *)) { color: =
var(--tw-prose-captions); font-size: 0.875em; line-height: 1.42857; margin-=
top: 0.857143em; }
  .prose :where(code):not(:where([class~=3D"not-prose"] *)) { background-co=
lor: var(--gray-100); border-radius: 0.25rem; color: var(--tw-prose-code); =
font-size: 0.875em; font-weight: 500; padding: 0.15rem 0.3rem; }
  .prose :where(code):not(:where([class~=3D"not-prose"] *))::after, .prose =
:where(code):not(:where([class~=3D"not-prose"] *))::before { content: none;=
 }
  .prose :where(a code):not(:where([class~=3D"not-prose"] *)), .prose :wher=
e(h1 code):not(:where([class~=3D"not-prose"] *)) { color: inherit; }
  .prose :where(h2 code):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-size: 0.875em; }
  .prose :where(h3 code):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-size: 0.9em; }
  .prose :where(blockquote code):not(:where([class~=3D"not-prose"] *)), .pr=
ose :where(h4 code):not(:where([class~=3D"not-prose"] *)), .prose :where(th=
ead th code):not(:where([class~=3D"not-prose"] *)) { color: inherit; }
  .prose :where(pre):not(:where([class~=3D"not-prose"] *)) { background-col=
or: rgba(0, 0, 0, 0); border-radius: 0.375rem; color: currentcolor; font-si=
ze: 0.875em; font-weight: 400; line-height: 1.71429; margin: 0px; overflow-=
x: auto; padding: 0px; }
  .prose :where(pre code):not(:where([class~=3D"not-prose"] *)) { backgroun=
d-color: rgba(0, 0, 0, 0); border-radius: 0px; border-width: 0px; color: in=
herit; font-family: inherit; font-size: inherit; font-weight: inherit; line=
-height: inherit; padding: 0px; }
  .prose :where(pre code):not(:where([class~=3D"not-prose"] *))::after, .pr=
ose :where(pre code):not(:where([class~=3D"not-prose"] *))::before { conten=
t: none; }
  .prose :where(table):not(:where([class~=3D"not-prose"] *)) { font-size: 0=
.875em; line-height: 1.71429; margin-bottom: 2em; margin-top: 2em; table-la=
yout: auto; width: 100%; }
  [dir=3D"ltr"] .prose :where(table):not(:where([class~=3D"not-prose"] *)) =
{ text-align: left; }
  [dir=3D"rtl"] .prose :where(table):not(:where([class~=3D"not-prose"] *)) =
{ text-align: right; }
  .prose :where(thead):not(:where([class~=3D"not-prose"] *)) { border-botto=
m-color: var(--tw-prose-th-borders); border-bottom-width: 1px; }
  .prose :where(thead th):not(:where([class~=3D"not-prose"] *)) { color: va=
r(--tw-prose-headings); font-weight: 600; padding-bottom: 0.571429em; paddi=
ng-left: 0.571429em; padding-right: 0.571429em; vertical-align: bottom; }
  .prose :where(tbody tr):not(:where([class~=3D"not-prose"] *)) { border-bo=
ttom-color: var(--tw-prose-td-borders); border-bottom-width: 1px; }
  .prose :where(tbody tr:last-child):not(:where([class~=3D"not-prose"] *)) =
{ border-bottom-width: 0px; }
  .prose :where(tbody td):not(:where([class~=3D"not-prose"] *)) { vertical-=
align: baseline; }
  .prose :where(tfoot):not(:where([class~=3D"not-prose"] *)) { border-top-c=
olor: var(--tw-prose-th-borders); border-top-width: 1px; }
  .prose :where(tfoot td):not(:where([class~=3D"not-prose"] *)) { vertical-=
align: top; }
  .prose :where(p):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 1=
.25em; margin-top: 1.25em; }
  .prose :where(figure):not(:where([class~=3D"not-prose"] *)), .prose :wher=
e(video):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 2em; margin=
-top: 2em; }
  .prose :where(li):not(:where([class~=3D"not-prose"] *)) { margin-bottom: =
0.5em; margin-top: 0.5em; }
  [dir=3D"ltr"] .prose :where(ol > li):not(:where([class~=3D"not-prose"] *)=
), [dir=3D"ltr"] .prose :where(ul > li):not(:where([class~=3D"not-prose"] *=
)) { padding-left: 0.375em; }
  [dir=3D"rtl"] .prose :where(ol > li):not(:where([class~=3D"not-prose"] *)=
), [dir=3D"rtl"] .prose :where(ul > li):not(:where([class~=3D"not-prose"] *=
)) { padding-right: 0.375em; }
  .prose :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) {=
 margin-bottom: 0.75em; margin-top: 0.75em; }
  .prose :where(.prose > ul > li > :first-child):not(:where([class~=3D"not-=
prose"] *)) { margin-top: 1.25em; }
  .prose :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-p=
rose"] *)) { margin-bottom: 1.25em; }
  .prose :where(.prose > ol > li > :first-child):not(:where([class~=3D"not-=
prose"] *)) { margin-top: 1.25em; }
  .prose :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-p=
rose"] *)) { margin-bottom: 1.25em; }
  .prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=3D"not-prose=
"] *)) { margin-bottom: 0.75em; margin-top: 0.75em; }
  .prose :where(h2 + *):not(:where([class~=3D"not-prose"] *)), .prose :wher=
e(h3 + *):not(:where([class~=3D"not-prose"] *)), .prose :where(h4 + *):not(=
:where([class~=3D"not-prose"] *)), .prose :where(hr + *):not(:where([class~=
=3D"not-prose"] *)) { margin-top: 0px; }
  [dir=3D"ltr"] .prose :where(thead th:first-child):not(:where([class~=3D"n=
ot-prose"] *)) { padding-left: 0px; }
  [dir=3D"rtl"] .prose :where(thead th:first-child):not(:where([class~=3D"n=
ot-prose"] *)) { padding-right: 0px; }
  [dir=3D"ltr"] .prose :where(thead th:last-child):not(:where([class~=3D"no=
t-prose"] *)) { padding-right: 0px; }
  [dir=3D"rtl"] .prose :where(thead th:last-child):not(:where([class~=3D"no=
t-prose"] *)) { padding-left: 0px; }
  .prose :where(tbody td, tfoot td):not(:where([class~=3D"not-prose"] *)) {=
 padding: 0.571429em; }
  [dir=3D"ltr"] .prose :where(tbody td:first-child, tfoot td:first-child):n=
ot(:where([class~=3D"not-prose"] *)) { padding-left: 0px; }
  [dir=3D"rtl"] .prose :where(tbody td:first-child, tfoot td:first-child):n=
ot(:where([class~=3D"not-prose"] *)) { padding-right: 0px; }
  [dir=3D"ltr"] .prose :where(tbody td:last-child, tfoot td:last-child):not=
(:where([class~=3D"not-prose"] *)) { padding-right: 0px; }
  [dir=3D"rtl"] .prose :where(tbody td:last-child, tfoot td:last-child):not=
(:where([class~=3D"not-prose"] *)) { padding-left: 0px; }
  .prose :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *)=
) { margin-top: 0px; }
  .prose :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *))=
 { margin-bottom: 0px; }
  .-m-0\.5 { margin: calc(var(--spacing)*-.5); }
  .-m-1\! { margin: calc(var(--spacing)*-1) !important; }
  .-m-2 { margin: calc(var(--spacing)*-2); }
  .m-0 { margin: calc(var(--spacing)*0); }
  .m-1 { margin: calc(var(--spacing)*1); }
  .m-1\.5 { margin: calc(var(--spacing)*1.5); }
  .m-2 { margin: calc(var(--spacing)*2); }
  .m-4 { margin: calc(var(--spacing)*4); }
  .m-8 { margin: calc(var(--spacing)*8); }
  .m-\[3px\] { margin: 3px; }
  .m-\[24px\] { margin: 24px; }
  .m-auto { margin: auto; }
  .-mx-0\.5 { margin-inline: calc(var(--spacing)*-.5); }
  .-mx-1 { margin-inline: calc(var(--spacing)*-1); }
  .-mx-2 { margin-inline: calc(var(--spacing)*-2); }
  .-mx-3 { margin-inline: calc(var(--spacing)*-3); }
  .-mx-4 { margin-inline: calc(var(--spacing)*-4); }
  .-mx-6 { margin-inline: calc(var(--spacing)*-6); }
  .-mx-px { margin-inline: -1px; }
  .mx-0 { margin-inline: calc(var(--spacing)*0); }
  .mx-0\! { margin-inline: calc(var(--spacing)*0) !important; }
  .mx-1 { margin-inline: calc(var(--spacing)*1); }
  .mx-1\.5 { margin-inline: calc(var(--spacing)*1.5); }
  .mx-2 { margin-inline: calc(var(--spacing)*2); }
  .mx-3 { margin-inline: calc(var(--spacing)*3); }
  .mx-3\.5 { margin-inline: calc(var(--spacing)*3.5); }
  .mx-4 { margin-inline: calc(var(--spacing)*4); }
  .mx-5 { margin-inline: calc(var(--spacing)*5); }
  .mx-6 { margin-inline: calc(var(--spacing)*6); }
  .mx-16 { margin-inline: calc(var(--spacing)*16); }
  .mx-24 { margin-inline: calc(var(--spacing)*24); }
  .mx-\[-1rem\] { margin-inline: -1rem; }
  .mx-\[-16px\] { margin-inline: -16px; }
  .mx-\[32px\] { margin-inline: 32px; }
  .mx-\[calc\(--spacing\(-2\)-1px\)\] { margin-inline: calc(var(--spacing)*=
-2 - 1px); }
  .mx-auto { margin-inline: auto; }
  .mx-snc-results-padding { margin-inline: var(--snc-results-padding); }
  .-my-1 { margin-block: calc(var(--spacing)*-1); }
  .-my-2 { margin-block: calc(var(--spacing)*-2); }
  .-my-\[1px\] { margin-block: -1px; }
  .my-0 { margin-block: calc(var(--spacing)*0); }
  .my-1 { margin-block: calc(var(--spacing)*1); }
  .my-1\.5 { margin-block: calc(var(--spacing)*1.5); }
  .my-2 { margin-block: calc(var(--spacing)*2); }
  .my-2\.5 { margin-block: calc(var(--spacing)*2.5); }
  .my-3 { margin-block: calc(var(--spacing)*3); }
  .my-4 { margin-block: calc(var(--spacing)*4); }
  .my-6 { margin-block: calc(var(--spacing)*6); }
  .my-8 { margin-block: calc(var(--spacing)*8); }
  .my-10 { margin-block: calc(var(--spacing)*10); }
  .my-12 { margin-block: calc(var(--spacing)*12); }
  .my-16 { margin-block: calc(var(--spacing)*16); }
  .my-\[-0\.2rem\] { margin-block: -0.2rem; }
  .my-\[-1px\] { margin-block: -1px; }
  .my-\[15px\] { margin-block: 15px; }
  .my-\[32px\] { margin-block: 32px; }
  .my-auto { margin-block: auto; }
  .-ms-0\.5 { margin-inline-start: calc(var(--spacing)*-.5); }
  .-ms-1 { margin-inline-start: calc(var(--spacing)*-1); }
  .-ms-1\.5 { margin-inline-start: calc(var(--spacing)*-1.5); }
  .-ms-2 { margin-inline-start: calc(var(--spacing)*-2); }
  .-ms-2\.5 { margin-inline-start: calc(var(--spacing)*-2.5); }
  .-ms-3 { margin-inline-start: calc(var(--spacing)*-3); }
  .-ms-3\.5 { margin-inline-start: calc(var(--spacing)*-3.5); }
  .-ms-4 { margin-inline-start: calc(var(--spacing)*-4); }
  .-ms-6 { margin-inline-start: calc(var(--spacing)*-6); }
  .ms-0 { margin-inline-start: calc(var(--spacing)*0); }
  .ms-0\.5 { margin-inline-start: calc(var(--spacing)*.5); }
  .ms-1 { margin-inline-start: calc(var(--spacing)*1); }
  .ms-1\.5 { margin-inline-start: calc(var(--spacing)*1.5); }
  .ms-2 { margin-inline-start: calc(var(--spacing)*2); }
  .ms-2\.5 { margin-inline-start: calc(var(--spacing)*2.5); }
  .ms-3 { margin-inline-start: calc(var(--spacing)*3); }
  .ms-4 { margin-inline-start: calc(var(--spacing)*4); }
  .ms-5 { margin-inline-start: calc(var(--spacing)*5); }
  .ms-6 { margin-inline-start: calc(var(--spacing)*6); }
  .ms-7 { margin-inline-start: calc(var(--spacing)*7); }
  .ms-8 { margin-inline-start: calc(var(--spacing)*8); }
  .ms-10 { margin-inline-start: calc(var(--spacing)*10); }
  .ms-14 { margin-inline-start: calc(var(--spacing)*14); }
  .ms-\[-2px\] { margin-inline-start: -2px; }
  .ms-\[-6px\] { margin-inline-start: -6px; }
  .ms-\[-12px\] { margin-inline-start: -12px; }
  .ms-\[-16px\] { margin-inline-start: -16px; }
  .ms-\[1px\] { margin-inline-start: 1px; }
  .ms-\[2px\] { margin-inline-start: 2px; }
  .ms-\[3px\] { margin-inline-start: 3px; }
  .ms-\[4px\] { margin-inline-start: 4px; }
  .ms-\[11px\] { margin-inline-start: 11px; }
  .ms-\[calc\(\(100vw-450px-min\(100vw-450px\,900px\)\)\/2\)\] { margin-inl=
ine-start: calc(-225px + 50vw + min(-450px + 100vw, 900px) / -2); }
  .ms-auto { margin-inline-start: auto; }
  .-me-1 { margin-inline-end: calc(var(--spacing)*-1); }
  .-me-1\.5 { margin-inline-end: calc(var(--spacing)*-1.5); }
  .-me-2 { margin-inline-end: calc(var(--spacing)*-2); }
  .-me-3\.5 { margin-inline-end: calc(var(--spacing)*-3.5); }
  .-me-6 { margin-inline-end: calc(var(--spacing)*-6); }
  .me-0 { margin-inline-end: calc(var(--spacing)*0); }
  .me-0\.5 { margin-inline-end: calc(var(--spacing)*.5); }
  .me-1 { margin-inline-end: calc(var(--spacing)*1); }
  .me-1\.5 { margin-inline-end: calc(var(--spacing)*1.5); }
  .me-2 { margin-inline-end: calc(var(--spacing)*2); }
  .me-3 { margin-inline-end: calc(var(--spacing)*3); }
  .me-4 { margin-inline-end: calc(var(--spacing)*4); }
  .me-5 { margin-inline-end: calc(var(--spacing)*5); }
  .me-6 { margin-inline-end: calc(var(--spacing)*6); }
  .me-8 { margin-inline-end: calc(var(--spacing)*8); }
  .me-12 { margin-inline-end: calc(var(--spacing)*12); }
  .me-\[-10px\] { margin-inline-end: -10px; }
  .me-\[0\.1875rem\] { margin-inline-end: 0.1875rem; }
  .me-\[1px\] { margin-inline-end: 1px; }
  .me-\[30px\] { margin-inline-end: 30px; }
  .me-px { margin-inline-end: 1px; }
  .-mt-0\.5 { margin-top: calc(var(--spacing)*-.5); }
  .-mt-1 { margin-top: calc(var(--spacing)*-1); }
  .-mt-2 { margin-top: calc(var(--spacing)*-2); }
  .-mt-3 { margin-top: calc(var(--spacing)*-3); }
  .-mt-4 { margin-top: calc(var(--spacing)*-4); }
  .-mt-5 { margin-top: calc(var(--spacing)*-5); }
  .-mt-6 { margin-top: calc(var(--spacing)*-6); }
  .mt-0 { margin-top: calc(var(--spacing)*0); }
  .mt-0\! { margin-top: calc(var(--spacing)*0) !important; }
  .mt-0\.5 { margin-top: calc(var(--spacing)*.5); }
  .mt-0\.25 { margin-top: calc(var(--spacing)*.25); }
  .mt-1 { margin-top: calc(var(--spacing)*1); }
  .mt-1\.5 { margin-top: calc(var(--spacing)*1.5); }
  .mt-2 { margin-top: calc(var(--spacing)*2); }
  .mt-2\.5 { margin-top: calc(var(--spacing)*2.5); }
  .mt-3 { margin-top: calc(var(--spacing)*3); }
  .mt-4 { margin-top: calc(var(--spacing)*4); }
  .mt-5 { margin-top: calc(var(--spacing)*5); }
  .mt-6 { margin-top: calc(var(--spacing)*6); }
  .mt-7 { margin-top: calc(var(--spacing)*7); }
  .mt-8 { margin-top: calc(var(--spacing)*8); }
  .mt-10 { margin-top: calc(var(--spacing)*10); }
  .mt-12 { margin-top: calc(var(--spacing)*12); }
  .mt-16 { margin-top: calc(var(--spacing)*16); }
  .mt-20 { margin-top: calc(var(--spacing)*20); }
  .mt-36 { margin-top: calc(var(--spacing)*36); }
  .mt-\[-2px\] { margin-top: -2px; }
  .mt-\[-3px\] { margin-top: -3px; }
  .mt-\[-4px\] { margin-top: -4px; }
  .mt-\[-8px\] { margin-top: -8px; }
  .mt-\[-10px\] { margin-top: -10px; }
  .mt-\[-32px\] { margin-top: -32px; }
  .mt-\[-100px\] { margin-top: -100px; }
  .mt-\[\.5px\] { margin-top: 0.5px; }
  .mt-\[0\.0625em\] { margin-top: 0.0625em; }
  .mt-\[0px\] { margin-top: 0px; }
  .mt-\[1px\] { margin-top: 1px; }
  .mt-\[2px\] { margin-top: 2px; }
  .mt-\[3px\] { margin-top: 3px; }
  .mt-\[11px\] { margin-top: 11px; }
  .mt-\[100px\] { margin-top: 100px; }
  .mt-\[calc\(var\(--threadFlyOut-leading-height\,57px\)\*-1\)\] { margin-t=
op: calc(var(--threadFlyOut-leading-height,57px)*-1); }
  .mt-\[var\(--screen-optical-compact-offset-amount\)\] { margin-top: var(-=
-screen-optical-compact-offset-amount); }
  .mt-auto { margin-top: auto; }
  .mt-px { margin-top: 1px; }
  .mt-snc-1 { margin-top: var(--snc-1); }
  .-mb-\(--composer-overlap-px\) { margin-bottom: calc(var(--composer-overl=
ap-px)*-1); }
  .-mb-0\.5 { margin-bottom: calc(var(--spacing)*-.5); }
  .-mb-1 { margin-bottom: calc(var(--spacing)*-1); }
  .-mb-2 { margin-bottom: calc(var(--spacing)*-2); }
  .-mb-4 { margin-bottom: calc(var(--spacing)*-4); }
  .-mb-5 { margin-bottom: calc(var(--spacing)*-5); }
  .-mb-6 { margin-bottom: calc(var(--spacing)*-6); }
  .-mb-10 { margin-bottom: calc(var(--spacing)*-10); }
  .mb-0 { margin-bottom: calc(var(--spacing)*0); }
  .mb-0\! { margin-bottom: calc(var(--spacing)*0) !important; }
  .mb-0\.5 { margin-bottom: calc(var(--spacing)*.5); }
  .mb-1 { margin-bottom: calc(var(--spacing)*1); }
  .mb-1\.5 { margin-bottom: calc(var(--spacing)*1.5); }
  .mb-2 { margin-bottom: calc(var(--spacing)*2); }
  .mb-3 { margin-bottom: calc(var(--spacing)*3); }
  .mb-4 { margin-bottom: calc(var(--spacing)*4); }
  .mb-5 { margin-bottom: calc(var(--spacing)*5); }
  .mb-6 { margin-bottom: calc(var(--spacing)*6); }
  .mb-7 { margin-bottom: calc(var(--spacing)*7); }
  .mb-8 { margin-bottom: calc(var(--spacing)*8); }
  .mb-9 { margin-bottom: calc(var(--spacing)*9); }
  .mb-10 { margin-bottom: calc(var(--spacing)*10); }
  .mb-12 { margin-bottom: calc(var(--spacing)*12); }
  .mb-14 { margin-bottom: calc(var(--spacing)*14); }
  .mb-16 { margin-bottom: calc(var(--spacing)*16); }
  .mb-36 { margin-bottom: calc(var(--spacing)*36); }
  .mb-\[-1px\] { margin-bottom: -1px; }
  .mb-\[-2px\] { margin-bottom: -2px; }
  .mb-\[-5px\] { margin-bottom: -5px; }
  .mb-\[-6px\] { margin-bottom: -6px; }
  .mb-\[0\.3125rem\] { margin-bottom: 0.3125rem; }
  .mb-\[1px\] { margin-bottom: 1px; }
  .mb-\[6px\] { margin-bottom: 6px; }
  .mb-\[8px\] { margin-bottom: 8px; }
  .mb-snc-1 { margin-bottom: var(--snc-1); }
  .box-border { box-sizing: border-box; }
  .box-content { box-sizing: content-box; }
  .line-clamp-1 { -webkit-line-clamp: 1; }
  .line-clamp-1, .line-clamp-2 { -webkit-box-orient: vertical; display: -we=
bkit-box; overflow: hidden; }
  .line-clamp-2 { -webkit-line-clamp: 2; }
  .line-clamp-3 { -webkit-line-clamp: 3; }
  .line-clamp-3, .line-clamp-4 { -webkit-box-orient: vertical; display: -we=
bkit-box; overflow: hidden; }
  .line-clamp-4 { -webkit-line-clamp: 4; }
  .line-clamp-5 { -webkit-line-clamp: 5; }
  .line-clamp-5, .line-clamp-6 { -webkit-box-orient: vertical; display: -we=
bkit-box; overflow: hidden; }
  .line-clamp-6 { -webkit-line-clamp: 6; }
  .line-clamp-12 { -webkit-line-clamp: 12; -webkit-box-orient: vertical; di=
splay: -webkit-box; overflow: hidden; }
  .\[display\:var\(--display-hidden-until-loaded\,block\)\] { display: var(=
--display-hidden-until-loaded,block); }
  .\[display\:var\(--display-hidden-until-loaded\,flex\)\] { display: var(-=
-display-hidden-until-loaded,flex); }
  .\[display\:var\(--force-hide-label\)\] { display: var(--force-hide-label=
); }
  .block { display: block; }
  .contents { display: contents; }
  .flex { display: flex; }
  .flow-root { display: flow-root; }
  .grid { display: grid; }
  .hidden { display: none; }
  .hidden\! { display: none !important; }
  .inline { display: inline; }
  .inline-block { display: inline-block; }
  .inline-flex { display: inline-flex; }
  .list-item { display: list-item; }
  .table { display: table; }
  .table-caption { display: table-caption; }
  .aspect-3\/2 { aspect-ratio: 3 / 2; }
  .aspect-4\/5 { aspect-ratio: 4 / 5; }
  .aspect-4\/7 { aspect-ratio: 4 / 7; }
  .aspect-7\/4 { aspect-ratio: 7 / 4; }
  .aspect-16\/9 { aspect-ratio: 16 / 9; }
  .aspect-\[9\/16\] { aspect-ratio: 9 / 16; }
  .aspect-square { aspect-ratio: 1 / 1; }
  .aspect-video { aspect-ratio: var(--aspect-video); }
  .size-1\.5 { height: calc(var(--spacing)*1.5); width: calc(var(--spacing)=
*1.5); }
  .size-\[10px\] { height: 10px; width: 10px; }
  .size-full { height: 100%; width: 100%; }
  .\!h-8 { height: calc(var(--spacing)*8) !important; }
  .h-0 { height: calc(var(--spacing)*0); }
  .h-0\.5 { height: calc(var(--spacing)*.5); }
  .h-1 { height: calc(var(--spacing)*1); }
  .h-1\.5 { height: calc(var(--spacing)*1.5); }
  .h-1\/4 { height: 25%; }
  .h-2 { height: calc(var(--spacing)*2); }
  .h-2\.5 { height: calc(var(--spacing)*2.5); }
  .h-2\/3 { height: 66.6667%; }
  .h-3 { height: calc(var(--spacing)*3); }
  .h-3\.5 { height: calc(var(--spacing)*3.5); }
  .h-3\/4 { height: 75%; }
  .h-3\/5 { height: 60%; }
  .h-4 { height: calc(var(--spacing)*4); }
  .h-4\.5 { height: calc(var(--spacing)*4.5); }
  .h-4\/5 { height: 80%; }
  .h-5 { height: calc(var(--spacing)*5); }
  .h-6 { height: calc(var(--spacing)*6); }
  .h-7 { height: calc(var(--spacing)*7); }
  .h-7\! { height: calc(var(--spacing)*7) !important; }
  .h-8 { height: calc(var(--spacing)*8); }
  .h-9 { height: calc(var(--spacing)*9); }
  .h-10 { height: calc(var(--spacing)*10); }
  .h-11 { height: calc(var(--spacing)*11); }
  .h-12 { height: calc(var(--spacing)*12); }
  .h-14 { height: calc(var(--spacing)*14); }
  .h-16 { height: calc(var(--spacing)*16); }
  .h-20 { height: calc(var(--spacing)*20); }
  .h-20\! { height: calc(var(--spacing)*20) !important; }
  .h-24 { height: calc(var(--spacing)*24); }
  .h-26 { height: calc(var(--spacing)*26); }
  .h-32 { height: calc(var(--spacing)*32); }
  .h-36 { height: calc(var(--spacing)*36); }
  .h-40 { height: calc(var(--spacing)*40); }
  .h-44 { height: calc(var(--spacing)*44); }
  .h-48 { height: calc(var(--spacing)*48); }
  .h-52 { height: calc(var(--spacing)*52); }
  .h-60 { height: calc(var(--spacing)*60); }
  .h-72 { height: calc(var(--spacing)*72); }
  .h-96 { height: calc(var(--spacing)*96); }
  .h-\[0\.75rem\] { height: 0.75rem; }
  .h-\[1em\] { height: 1em; }
  .h-\[1px\] { height: 1px; }
  .h-\[2px\] { height: 2px; }
  .h-\[3px\] { height: 3px; }
  .h-\[4px\] { height: 4px; }
  .h-\[6px\] { height: 6px; }
  .h-\[10px\] { height: 10px; }
  .h-\[11px\] { height: 11px; }
  .h-\[14px\] { height: 14px; }
  .h-\[15dvh\] { height: 15dvh; }
  .h-\[15px\] { height: 15px; }
  .h-\[16px\] { height: 16px; }
  .h-\[18px\] { height: 18px; }
  .h-\[19px\] { height: 19px; }
  .h-\[20px\] { height: 20px; }
  .h-\[22px\] { height: 22px; }
  .h-\[23px\] { height: 23px; }
  .h-\[24px\] { height: 24px; }
  .h-\[24rem\] { height: 24rem; }
  .h-\[25px\] { height: 25px; }
  .h-\[26px\] { height: 26px; }
  .h-\[28px\] { height: 28px; }
  .h-\[30px\] { height: 30px; }
  .h-\[30vh\] { height: 30vh; }
  .h-\[32px\] { height: 32px; }
  .h-\[34px\] { height: 34px; }
  .h-\[38px\] { height: 38px; }
  .h-\[38px\]\! { height: 38px !important; }
  .h-\[40px\] { height: 40px; }
  .h-\[42px\] { height: 42px; }
  .h-\[44px\] { height: 44px; }
  .h-\[45px\] { height: 45px; }
  .h-\[50dvh\] { height: 50dvh; }
  .h-\[50px\] { height: 50px; }
  .h-\[50vh\] { height: 50vh; }
  .h-\[54px\] { height: 54px; }
  .h-\[60px\] { height: 60px; }
  .h-\[60vh\] { height: 60vh; }
  .h-\[62px\] { height: 62px; }
  .h-\[64px\] { height: 64px; }
  .h-\[70px\] { height: 70px; }
  .h-\[70vh\] { height: 70vh; }
  .h-\[76px\] { height: 76px; }
  .h-\[100\%\] { height: 100%; }
  .h-\[100dvh\] { height: 100dvh; }
  .h-\[100px\] { height: 100px; }
  .h-\[100vh\] { height: 100vh; }
  .h-\[104px\] { height: 104px; }
  .h-\[116px\] { height: 116px; }
  .h-\[120px\] { height: 120px; }
  .h-\[132px\] { height: 132px; }
  .h-\[150px\] { height: 150px; }
  .h-\[160px\] { height: 160px; }
  .h-\[200px\] { height: 200px; }
  .h-\[205px\] { height: 205px; }
  .h-\[213px\] { height: 213px; }
  .h-\[234px\] { height: 234px; }
  .h-\[250px\] { height: 250px; }
  .h-\[300px\] { height: 300px; }
  .h-\[340px\] { height: 340px; }
  .h-\[378px\] { height: 378px; }
  .h-\[400\%\] { height: 400%; }
  .h-\[600px\] { height: 600px; }
  .h-\[860px\] { height: 860px; }
  .h-\[calc\(100\%\+var\(--snc-1\)\)\] { height: calc(100% + var(--snc-1));=
 }
  .h-\[calc\(100vh-25rem\)\] { height: calc(-25rem + 100vh); }
  .h-\[calc\(100vh-54px\)\] { height: calc(-54px + 100vh); }
  .h-\[calc\(100vh-325px\)\] { height: calc(-325px + 100vh); }
  .h-\[calc\(clamp\(150px\,1\/4\*var\(--thread-safe-area-height\,100lvh\)\,=
400px\)\)\] { height: clamp(150px,1/4*var(--thread-safe-area-height,100lvh)=
,400px); }
  .h-\[calc\(var\(--header-height\,3\.5rem\)\+1px\)\] { height: calc(var(--=
header-height,3.5rem) + 1px); }
  .h-\[max\(3rem\,18vh\)\] { height: max(3rem, 18vh); }
  .h-\[var\(--screen-height-override\,calc\(var\(--cqh-full\)-var\(--screen=
-height-offset\,0px\)\)\)\] { height: var(--screen-height-override,calc(var=
(--cqh-full) - var(--screen-height-offset,0px))); }
  .h-auto { height: auto; }
  .h-auto\! { height: auto !important; }
  .h-dvh { height: 100dvh; }
  .h-fit { height: fit-content; }
  .h-fit\! { height: fit-content !important; }
  .h-full { height: 100%; }
  .h-header-height { height: var(--header-height); }
  .h-max { height: max-content; }
  .h-min { height: min-content; }
  .h-px { height: 1px; }
  .h-screen { height: 100vh; }
  .h-snc-3 { height: var(--snc-3); }
  .h-snc-input-height { height: var(--snc-input-height); }
  .h-svh { height: 100svh; }
  .max-h-9 { max-height: calc(var(--spacing)*9); }
  .max-h-12 { max-height: calc(var(--spacing)*12); }
  .max-h-16 { max-height: calc(var(--spacing)*16); }
  .max-h-28 { max-height: calc(var(--spacing)*28); }
  .max-h-32 { max-height: calc(var(--spacing)*32); }
  .max-h-36 { max-height: calc(var(--spacing)*36); }
  .max-h-40 { max-height: calc(var(--spacing)*40); }
  .max-h-48 { max-height: calc(var(--spacing)*48); }
  .max-h-52 { max-height: calc(var(--spacing)*52); }
  .max-h-60 { max-height: calc(var(--spacing)*60); }
  .max-h-64 { max-height: calc(var(--spacing)*64); }
  .max-h-72 { max-height: calc(var(--spacing)*72); }
  .max-h-96 { max-height: calc(var(--spacing)*96); }
  .max-h-\[25dvh\] { max-height: 25dvh; }
  .max-h-\[28rem\] { max-height: 28rem; }
  .max-h-\[50dvh\] { max-height: 50dvh; }
  .max-h-\[50vh\] { max-height: 50vh; }
  .max-h-\[60vh\] { max-height: 60vh; }
  .max-h-\[64px\] { max-height: 64px; }
  .max-h-\[75vh\] { max-height: 75vh; }
  .max-h-\[80vh\] { max-height: 80vh; }
  .max-h-\[85vh\] { max-height: 85vh; }
  .max-h-\[90vh\] { max-height: 90vh; }
  .max-h-\[95\%\] { max-height: 95%; }
  .max-h-\[100vh\] { max-height: 100vh; }
  .max-h-\[100vh\]\! { max-height: 100vh !important; }
  .max-h-\[128px\] { max-height: 128px; }
  .max-h-\[188px\] { max-height: 188px; }
  .max-h-\[200px\] { max-height: 200px; }
  .max-h-\[220px\] { max-height: 220px; }
  .max-h-\[300px\] { max-height: 300px; }
  .max-h-\[400px\] { max-height: 400px; }
  .max-h-\[440px\] { max-height: 440px; }
  .max-h-\[550px\] { max-height: 550px; }
  .max-h-\[600px\] { max-height: 600px; }
  .max-h-\[700px\] { max-height: 700px; }
  .max-h-\[calc\(100vh-46px\)\] { max-height: calc(-46px + 100vh); }
  .max-h-\[calc\(100vh-150px\)\] { max-height: calc(-150px + 100vh); }
  .max-h-\[calc\(100vh-300px\)\] { max-height: calc(-300px + 100vh); }
  .max-h-\[calc\(clamp\(20px\,1\/4\*var\(--thread-safe-area-height\,100lvh\=
)\,400px\)\)\] { max-height: clamp(20px,1/4*var(--thread-safe-area-height,1=
00lvh),400px); }
  .max-h-\[calc\(clamp\(20px\,1\/8\*var\(--thread-safe-area-height\,100lvh\=
)\,200px\)\)\] { max-height: clamp(20px,1/8*var(--thread-safe-area-height,1=
00lvh),200px); }
  .max-h-\[calc\(var\(--radix-popper-available-height\)-2rem\)\] { max-heig=
ht: calc(var(--radix-popper-available-height) - 2rem); }
  .max-h-\[var\(--radix-dropdown-menu-content-available-height\)\] { max-he=
ight: var(--radix-dropdown-menu-content-available-height); }
  .max-h-dvh { max-height: 100dvh; }
  .max-h-full { max-height: 100%; }
  .max-h-screen { max-height: 100vh; }
  .max-h-svh { max-height: 100svh; }
  .btn-giant { --tw-font-weight: var(--font-weight-semibold); font-size: va=
r(--text-base); font-weight: var(--font-weight-semibold); line-height: var(=
--tw-leading,var(--text-base--line-height)); min-height: 46px; padding-bloc=
k: calc(var(--spacing)*2.5); padding-inline: calc(var(--spacing)*6); }
  .btn-xs { font-size: var(--text-xs); line-height: var(--tw-leading,var(--=
text-xs--line-height)); min-height: 26px; padding-block: calc(var(--spacing=
)*1); padding-inline: calc(var(--spacing)*3); }
  .btn-large { min-height: 46px; padding-block: calc(var(--spacing)*3); pad=
ding-inline: calc(var(--spacing)*4); }
  .btn-small { min-height: 30px; padding-block: calc(var(--spacing)*1); pad=
ding-inline: calc(var(--spacing)*3); }
  .min-h-0 { min-height: calc(var(--spacing)*0); }
  .min-h-0\! { min-height: calc(var(--spacing)*0) !important; }
  .min-h-5 { min-height: calc(var(--spacing)*5); }
  .min-h-6 { min-height: calc(var(--spacing)*6); }
  .min-h-7 { min-height: calc(var(--spacing)*7); }
  .min-h-8 { min-height: calc(var(--spacing)*8); }
  .min-h-9 { min-height: calc(var(--spacing)*9); }
  .min-h-10 { min-height: calc(var(--spacing)*10); }
  .min-h-12 { min-height: calc(var(--spacing)*12); }
  .min-h-16 { min-height: calc(var(--spacing)*16); }
  .min-h-20 { min-height: calc(var(--spacing)*20); }
  .min-h-24 { min-height: calc(var(--spacing)*24); }
  .min-h-36 { min-height: calc(var(--spacing)*36); }
  .min-h-60 { min-height: calc(var(--spacing)*60); }
  .min-h-72 { min-height: calc(var(--spacing)*72); }
  .min-h-80 { min-height: calc(var(--spacing)*80); }
  .min-h-96 { min-height: calc(var(--spacing)*96); }
  .min-h-\[0px\] { min-height: 0px; }
  .min-h-\[20px\] { min-height: 20px; }
  .min-h-\[22px\] { min-height: 22px; }
  .min-h-\[34px\] { min-height: 34px; }
  .min-h-\[36px\] { min-height: 36px; }
  .min-h-\[36px\]\! { min-height: 36px !important; }
  .min-h-\[38px\] { min-height: 38px; }
  .min-h-\[40px\] { min-height: 40px; }
  .min-h-\[40vh\] { min-height: 40vh; }
  .min-h-\[44px\] { min-height: 44px; }
  .min-h-\[50dvh\] { min-height: 50dvh; }
  .min-h-\[50px\] { min-height: 50px; }
  .min-h-\[50vh\] { min-height: 50vh; }
  .min-h-\[52px\] { min-height: 52px; }
  .min-h-\[56px\] { min-height: 56px; }
  .min-h-\[60px\] { min-height: 60px; }
  .min-h-\[62px\] { min-height: 62px; }
  .min-h-\[64px\] { min-height: 64px; }
  .min-h-\[75vh\] { min-height: 75vh; }
  .min-h-\[80px\] { min-height: 80px; }
  .min-h-\[80vh\] { min-height: 80vh; }
  .min-h-\[96px\] { min-height: 96px; }
  .min-h-\[100dvh\] { min-height: 100dvh; }
  .min-h-\[104px\] { min-height: 104px; }
  .min-h-\[108px\] { min-height: 108px; }
  .min-h-\[132px\] { min-height: 132px; }
  .min-h-\[193px\] { min-height: 193px; }
  .min-h-\[200px\] { min-height: 200px; }
  .min-h-\[320px\] { min-height: 320px; }
  .min-h-\[350px\] { min-height: 350px; }
  .min-h-\[360px\] { min-height: 360px; }
  .min-h-\[375px\] { min-height: 375px; }
  .min-h-\[440px\] { min-height: 440px; }
  .min-h-\[480px\] { min-height: 480px; }
  .min-h-\[560px\] { min-height: 560px; }
  .min-h-\[600px\] { min-height: 600px; }
  .min-h-\[calc\(var\(--header-height\,3\.5rem\)\+1px\)\] { min-height: cal=
c(var(--header-height,3.5rem) + 1px); }
  .min-h-\[max\(var\(--gutter-min-height\,0px\)\,var\(--gutter-remaining-he=
ight\,0px\)\)\] { min-height: max(var(--gutter-min-height,0px),var(--gutter=
-remaining-height,0px)); }
  .min-h-bloop { min-height: 227px; }
  .min-h-fit { min-height: fit-content; }
  .min-h-full { min-height: 100%; }
  .min-h-screen { min-height: 100vh; }
  .min-h-svh { min-height: 100svh; }
  .\!w-8 { width: calc(var(--spacing)*8) !important; }
  .\!w-full { width: 100% !important; }
  .w-0 { width: calc(var(--spacing)*0); }
  .w-0\! { width: calc(var(--spacing)*0) !important; }
  .w-1 { width: calc(var(--spacing)*1); }
  .w-1\.5 { width: calc(var(--spacing)*1.5); }
  .w-1\/2 { width: 50%; }
  .w-1\/3 { width: 33.3333%; }
  .w-1\/4 { width: 25%; }
  .w-2 { width: calc(var(--spacing)*2); }
  .w-2\.5 { width: calc(var(--spacing)*2.5); }
  .w-2\/3 { width: 66.6667%; }
  .w-2\/5 { width: 40%; }
  .w-3 { width: calc(var(--spacing)*3); }
  .w-3\.5 { width: calc(var(--spacing)*3.5); }
  .w-3\/4 { width: 75%; }
  .w-3\/4\! { width: 75% !important; }
  .w-4 { width: calc(var(--spacing)*4); }
  .w-4\.5 { width: calc(var(--spacing)*4.5); }
  .w-4\/5 { width: 80%; }
  .w-5 { width: calc(var(--spacing)*5); }
  .w-6 { width: calc(var(--spacing)*6); }
  .w-7 { width: calc(var(--spacing)*7); }
  .w-8 { width: calc(var(--spacing)*8); }
  .w-9 { width: calc(var(--spacing)*9); }
  .w-10 { width: calc(var(--spacing)*10); }
  .w-10\/12 { width: 83.3333%; }
  .w-11 { width: calc(var(--spacing)*11); }
  .w-12 { width: calc(var(--spacing)*12); }
  .w-14 { width: calc(var(--spacing)*14); }
  .w-16 { width: calc(var(--spacing)*16); }
  .w-20 { width: calc(var(--spacing)*20); }
  .w-20\! { width: calc(var(--spacing)*20) !important; }
  .w-24 { width: calc(var(--spacing)*24); }
  .w-28 { width: calc(var(--spacing)*28); }
  .w-32 { width: calc(var(--spacing)*32); }
  .w-36 { width: calc(var(--spacing)*36); }
  .w-40 { width: calc(var(--spacing)*40); }
  .w-44 { width: calc(var(--spacing)*44); }
  .w-48 { width: calc(var(--spacing)*48); }
  .w-52 { width: calc(var(--spacing)*52); }
  .w-56 { width: calc(var(--spacing)*56); }
  .w-60 { width: calc(var(--spacing)*60); }
  .w-64 { width: calc(var(--spacing)*64); }
  .w-72 { width: calc(var(--spacing)*72); }
  .w-80 { width: calc(var(--spacing)*80); }
  .w-96 { width: calc(var(--spacing)*96); }
  .w-\[0\.75rem\] { width: 0.75rem; }
  .w-\[1em\] { width: 1em; }
  .w-\[1px\] { width: 1px; }
  .w-\[3px\] { width: 3px; }
  .w-\[4px\] { width: 4px; }
  .w-\[6px\] { width: 6px; }
  .w-\[7\.5rem\] { width: 7.5rem; }
  .w-\[11px\] { width: 11px; }
  .w-\[12px\] { width: 12px; }
  .w-\[14px\] { width: 14px; }
  .w-\[14rem\] { width: 14rem; }
  .w-\[15px\] { width: 15px; }
  .w-\[16px\] { width: 16px; }
  .w-\[18px\] { width: 18px; }
  .w-\[20px\] { width: 20px; }
  .w-\[22px\] { width: 22px; }
  .w-\[23px\] { width: 23px; }
  .w-\[24px\] { width: 24px; }
  .w-\[25vw\] { width: 25vw; }
  .w-\[26px\] { width: 26px; }
  .w-\[30px\] { width: 30px; }
  .w-\[32px\] { width: 32px; }
  .w-\[34px\] { width: 34px; }
  .w-\[40px\] { width: 40px; }
  .w-\[42px\] { width: 42px; }
  .w-\[44px\] { width: 44px; }
  .w-\[48\%\] { width: 48%; }
  .w-\[48px\] { width: 48px; }
  .w-\[50\%\] { width: 50%; }
  .w-\[50px\] { width: 50px; }
  .w-\[50vw\] { width: 50vw; }
  .w-\[54px\] { width: 54px; }
  .w-\[55\%\] { width: 55%; }
  .w-\[55cqw\] { width: 55cqw; }
  .w-\[60\%\] { width: 60%; }
  .w-\[60px\] { width: 60px; }
  .w-\[64\%\] { width: 64%; }
  .w-\[66\%\] { width: 66%; }
  .w-\[70\%\] { width: 70%; }
  .w-\[75\%\] { width: 75%; }
  .w-\[75px\] { width: 75px; }
  .w-\[80\%\] { width: 80%; }
  .w-\[88px\] { width: 88px; }
  .w-\[90\%\] { width: 90%; }
  .w-\[90px\] { width: 90px; }
  .w-\[90vw\] { width: 90vw; }
  .w-\[100cqw\] { width: 100cqw; }
  .w-\[100px\] { width: 100px; }
  .w-\[100vw\] { width: 100vw; }
  .w-\[104px\] { width: 104px; }
  .w-\[105px\] { width: 105px; }
  .w-\[160px\] { width: 160px; }
  .w-\[180px\] { width: 180px; }
  .w-\[200px\] { width: 200px; }
  .w-\[210px\] { width: 210px; }
  .w-\[222px\] { width: 222px; }
  .w-\[232px\] { width: 232px; }
  .w-\[234px\] { width: 234px; }
  .w-\[240px\] { width: 240px; }
  .w-\[250px\] { width: 250px; }
  .w-\[280px\] { width: 280px; }
  .w-\[290px\] { width: 290px; }
  .w-\[294px\] { width: 294px; }
  .w-\[300px\] { width: 300px; }
  .w-\[304px\] { width: 304px; }
  .w-\[328px\] { width: 328px; }
  .w-\[350px\] { width: 350px; }
  .w-\[378px\] { width: 378px; }
  .w-\[400\%\] { width: 400%; }
  .w-\[400px\] { width: 400px; }
  .w-\[450px\] { width: 450px; }
  .w-\[620px\] { width: 620px; }
  .w-\[640px\] { width: 640px; }
  .w-\[700px\] { width: 700px; }
  .w-\[800px\] { width: 800px; }
  .w-\[calc\(\(100\%-768px\)\/2\)\] { width: calc(50% - 384px); }
  .w-\[calc\(100\%-1\.5rem\)\] { width: calc(100% - 1.5rem); }
  .w-\[calc\(100\%_-_32px\)\] { width: calc(100% - 32px); }
  .w-\[calc\(100vw-450px\)\] { width: calc(-450px + 100vw); }
  .w-\[fit-content\] { width: fit-content; }
  .w-\[max\(95vw\,300px\)\] { width: max(95vw, 300px); }
  .w-\[min\(400px\,100dvw\)\] { width: min(400px, 100dvw); }
  .w-\[var\(--radix-popper-anchor-width\)\] { width: var(--radix-popper-anc=
hor-width); }
  .w-\[var\(--sidebar-width\)\] { width: var(--sidebar-width); }
  .w-\[var\(--user-chat-width\,70\%\)\] { width: var(--user-chat-width,70%)=
; }
  .w-auto { width: auto; }
  .w-dvw { width: 100dvw; }
  .w-fit { width: fit-content; }
  .w-full { width: 100%; }
  .w-full\! { width: 100% !important; }
  .w-max { width: max-content; }
  .w-px { width: 1px; }
  .w-screen { width: 100vw; }
  .w-svw { width: 100svw; }
  .max-w-\(--breakpoint-2xl\) { max-width: var(--breakpoint-2xl); }
  .max-w-\(--breakpoint-md\) { max-width: var(--breakpoint-md); }
  .max-w-\(--thread-content-max-width\) { max-width: var(--thread-content-m=
ax-width); }
  .max-w-1\/2 { max-width: 50%; }
  .max-w-2xl { max-width: var(--container-2xl); }
  .max-w-2xs\! { max-width: 240px !important; }
  .max-w-3xl { max-width: var(--container-3xl); }
  .max-w-3xs { max-width: 256px; }
  .max-w-4xl { max-width: var(--container-4xl); }
  .max-w-5xl { max-width: var(--container-5xl); }
  .max-w-6xl { max-width: var(--container-6xl); }
  .max-w-16 { max-width: calc(var(--spacing)*16); }
  .max-w-20 { max-width: calc(var(--spacing)*20); }
  .max-w-28 { max-width: calc(var(--spacing)*28); }
  .max-w-32 { max-width: calc(var(--spacing)*32); }
  .max-w-48 { max-width: calc(var(--spacing)*48); }
  .max-w-52 { max-width: calc(var(--spacing)*52); }
  .max-w-60 { max-width: calc(var(--spacing)*60); }
  .max-w-64 { max-width: calc(var(--spacing)*64); }
  .max-w-72 { max-width: calc(var(--spacing)*72); }
  .max-w-80 { max-width: calc(var(--spacing)*80); }
  .max-w-96 { max-width: calc(var(--spacing)*96); }
  .max-w-100 { max-width: 25rem; }
  .max-w-\[22\%\] { max-width: 22%; }
  .max-w-\[48rem\] { max-width: 48rem; }
  .max-w-\[60\%\] { max-width: 60%; }
  .max-w-\[70\%\] { max-width: 70%; }
  .max-w-\[70dvw\] { max-width: 70dvw; }
  .max-w-\[75\%\] { max-width: 75%; }
  .max-w-\[80\%\] { max-width: 80%; }
  .max-w-\[80vw\]\! { max-width: 80vw !important; }
  .max-w-\[90\%\] { max-width: 90%; }
  .max-w-\[90vw\] { max-width: 90vw; }
  .max-w-\[100\%\] { max-width: 100%; }
  .max-w-\[100px\] { max-width: 100px; }
  .max-w-\[100vw\] { max-width: 100vw; }
  .max-w-\[120px\] { max-width: 120px; }
  .max-w-\[160px\] { max-width: 160px; }
  .max-w-\[200px\] { max-width: 200px; }
  .max-w-\[220px\] { max-width: 220px; }
  .max-w-\[240px\] { max-width: 240px; }
  .max-w-\[270px\] { max-width: 270px; }
  .max-w-\[300px\] { max-width: 300px; }
  .max-w-\[320px\] { max-width: 320px; }
  .max-w-\[328px\] { max-width: 328px; }
  .max-w-\[360px\] { max-width: 360px; }
  .max-w-\[372px\] { max-width: 372px; }
  .max-w-\[373px\] { max-width: 373px; }
  .max-w-\[390px\] { max-width: 390px; }
  .max-w-\[400px\] { max-width: 400px; }
  .max-w-\[402px\] { max-width: 402px; }
  .max-w-\[412px\] { max-width: 412px; }
  .max-w-\[416px\] { max-width: 416px; }
  .max-w-\[440px\] { max-width: 440px; }
  .max-w-\[450px\] { max-width: 450px; }
  .max-w-\[460px\] { max-width: 460px; }
  .max-w-\[480px\] { max-width: 480px; }
  .max-w-\[500px\] { max-width: 500px; }
  .max-w-\[550px\] { max-width: 550px; }
  .max-w-\[552px\] { max-width: 552px; }
  .max-w-\[555px\] { max-width: 555px; }
  .max-w-\[560px\] { max-width: 560px; }
  .max-w-\[596px\] { max-width: 596px; }
  .max-w-\[600px\] { max-width: 600px; }
  .max-w-\[640px\] { max-width: 640px; }
  .max-w-\[664px\] { max-width: 664px; }
  .max-w-\[680px\] { max-width: 680px; }
  .max-w-\[700px\] { max-width: 700px; }
  .max-w-\[720px\] { max-width: 720px; }
  .max-w-\[800px\] { max-width: 800px; }
  .max-w-\[820px\] { max-width: 820px; }
  .max-w-\[850px\] { max-width: 850px; }
  .max-w-\[900px\] { max-width: 900px; }
  .max-w-\[1000px\] { max-width: 1000px; }
  .max-w-\[1200px\] { max-width: 1200px; }
  .max-w-\[1300px\] { max-width: 1300px; }
  .max-w-\[calc\(0\.8\*var\(--thread-content-max-width\,40rem\)\)\] { max-w=
idth: calc(var(--thread-content-max-width,40rem)*.8); }
  .max-w-\[calc\(2\*var\(--thread-content-max-width\)\)\] { max-width: calc=
(var(--thread-content-max-width)*2); }
  .max-w-\[calc\(100vw-1\.5rem\)\] { max-width: calc(-1.5rem + 100vw); }
  .max-w-\[calc\(100vw-2rem\)\] { max-width: calc(-2rem + 100vw); }
  .max-w-\[var\(--user-chat-width\,70\%\)\] { max-width: var(--user-chat-wi=
dth,70%); }
  .max-w-fit { max-width: fit-content; }
  .max-w-full { max-width: 100%; }
  .max-w-lg { max-width: var(--container-lg); }
  .max-w-md { max-width: var(--container-md); }
  .max-w-none { max-width: none; }
  .max-w-screen-lg { max-width: var(--breakpoint-lg); }
  .max-w-screen-md { max-width: var(--breakpoint-md); }
  .max-w-sm { max-width: var(--container-sm); }
  .max-w-xl { max-width: var(--container-xl); }
  .max-w-xs { max-width: var(--container-xs); }
  .min-w-\(--thread-content-width\) { min-width: var(--thread-content-width=
); }
  .min-w-0 { min-width: calc(var(--spacing)*0); }
  .min-w-4 { min-width: calc(var(--spacing)*4); }
  .min-w-6 { min-width: calc(var(--spacing)*6); }
  .min-w-7 { min-width: calc(var(--spacing)*7); }
  .min-w-8 { min-width: calc(var(--spacing)*8); }
  .min-w-9 { min-width: calc(var(--spacing)*9); }
  .min-w-10 { min-width: calc(var(--spacing)*10); }
  .min-w-11 { min-width: calc(var(--spacing)*11); }
  .min-w-15 { min-width: calc(var(--spacing)*15); }
  .min-w-20 { min-width: calc(var(--spacing)*20); }
  .min-w-24 { min-width: calc(var(--spacing)*24); }
  .min-w-32 { min-width: calc(var(--spacing)*32); }
  .min-w-36 { min-width: calc(var(--spacing)*36); }
  .min-w-40 { min-width: calc(var(--spacing)*40); }
  .min-w-48 { min-width: calc(var(--spacing)*48); }
  .min-w-60 { min-width: calc(var(--spacing)*60); }
  .min-w-64 { min-width: calc(var(--spacing)*64); }
  .min-w-72 { min-width: calc(var(--spacing)*72); }
  .min-w-80 { min-width: calc(var(--spacing)*80); }
  .min-w-96 { min-width: calc(var(--spacing)*96); }
  .min-w-\[2em\] { min-width: 2em; }
  .min-w-\[7\.5rem\] { min-width: 7.5rem; }
  .min-w-\[18px\] { min-width: 18px; }
  .min-w-\[25vw\] { min-width: 25vw; }
  .min-w-\[32px\] { min-width: 32px; }
  .min-w-\[34px\] { min-width: 34px; }
  .min-w-\[40\%\] { min-width: 40%; }
  .min-w-\[50px\] { min-width: 50px; }
  .min-w-\[60px\] { min-width: 60px; }
  .min-w-\[62px\] { min-width: 62px; }
  .min-w-\[80px\] { min-width: 80px; }
  .min-w-\[86px\] { min-width: 86px; }
  .min-w-\[100px\] { min-width: 100px; }
  .min-w-\[120px\] { min-width: 120px; }
  .min-w-\[180px\] { min-width: 180px; }
  .min-w-\[200px\] { min-width: 200px; }
  .min-w-\[220px\] { min-width: 220px; }
  .min-w-\[224px\] { min-width: 224px; }
  .min-w-\[240px\] { min-width: 240px; }
  .min-w-\[320px\] { min-width: 320px; }
  .min-w-\[400px\] { min-width: 400px; }
  .min-w-\[680px\] { min-width: 680px; }
  .min-w-\[calc\(100vw-1\.5rem\)\] { min-width: calc(-1.5rem + 100vw); }
  .min-w-\[min\(125px\,95vw\)\] { min-width: min(125px, 95vw); }
  .min-w-\[min\(200px\,95vw\)\] { min-width: min(200px, 95vw); }
  .min-w-\[min\(280px\,95vw\)\] { min-width: min(280px, 95vw); }
  .min-w-\[min\(340px\,95vw\)\] { min-width: min(340px, 95vw); }
  .min-w-\[min\(450px\,80cqw\,80vw\)\] { min-width: min(450px, 80cqw, 80vw)=
; }
  .min-w-\[var\(--radix-select-trigger-width\)\] { min-width: var(--radix-s=
elect-trigger-width); }
  .min-w-bloop { min-width: 227px; }
  .min-w-fit { min-width: fit-content; }
  .min-w-full { min-width: 100%; }
  .min-w-min { min-width: min-content; }
  .flex-0 { flex: 0 1 0%; }
  .flex-1 { flex: 1 1 0%; }
  .flex-auto { flex: 1 1 auto; }
  .flex-initial { flex: 0 1 auto; }
  .flex-none { flex: 0 0 auto; }
  .flex-shrink { flex-shrink: 1; }
  .flex-shrink-0 { flex-shrink: 0; }
  .flex-shrink-1, .shrink { flex-shrink: 1; }
  .shrink-0 { flex-shrink: 0; }
  .flex-grow, .flex-grow-1, .grow { flex-grow: 1; }
  .grow-0 { flex-grow: 0; }
  .basis-0 { flex-basis: calc(var(--spacing)*0); }
  .basis-\[32px\] { flex-basis: 32px; }
  .basis-auto { flex-basis: auto; }
  .basis-full { flex-basis: 100%; }
  .table-auto { table-layout: auto; }
  .table-fixed { table-layout: fixed; }
  .border-separate { border-collapse: separate; }
  .border-spacing-0 { --tw-border-spacing-x: calc(var(--spacing)*0); --tw-b=
order-spacing-y: calc(var(--spacing)*0); border-spacing: var(--tw-border-sp=
acing-x)var(--tw-border-spacing-y); }
  .origin-\[14px_50\%\] { transform-origin: 14px center; }
  .origin-\[50\%_50\%\] { transform-origin: 50% center; }
  .origin-bottom { transform-origin: center bottom; }
  .origin-center { transform-origin: 50% center; }
  [dir=3D"ltr"] .origin-left { transform-origin: 0px center; }
  [dir=3D"rtl"] .origin-left { transform-origin: 100% center; }
  .origin-radix-popover { transform-origin: var(--radix-popover-content-tra=
nsform-origin); }
  [dir=3D"ltr"] .origin-top-left { transform-origin: 0px 0px; }
  [dir=3D"ltr"] .origin-top-right, [dir=3D"rtl"] .origin-top-left { transfo=
rm-origin: 100% 0px; }
  [dir=3D"rtl"] .origin-top-right { transform-origin: 0px 0px; }
  .-translate-x-1\/2 { --tw-translate-x: -50%; }
  .-translate-x-1\/2, .-translate-x-2 { translate: var(--tw-translate-x)var=
(--tw-translate-y); }
  .-translate-x-2 { --tw-translate-x: calc(var(--spacing)*-2); }
  .-translate-x-52 { --tw-translate-x: calc(var(--spacing)*-52); }
  .-translate-x-52, .-translate-x-96 { translate: var(--tw-translate-x)var(=
--tw-translate-y); }
  .-translate-x-96 { --tw-translate-x: calc(var(--spacing)*-96); }
  .-translate-x-full { --tw-translate-x: -100%; }
  .-translate-x-full, .translate-x-0 { translate: var(--tw-translate-x)var(=
--tw-translate-y); }
  .translate-x-0 { --tw-translate-x: calc(var(--spacing)*0); }
  .translate-x-1\/2 { --tw-translate-x: 50%; }
  .translate-x-1\/2, .translate-x-2 { translate: var(--tw-translate-x)var(-=
-tw-translate-y); }
  .translate-x-2 { --tw-translate-x: calc(var(--spacing)*2); }
  .translate-x-52 { --tw-translate-x: calc(var(--spacing)*52); }
  .translate-x-52, .translate-x-96 { translate: var(--tw-translate-x)var(--=
tw-translate-y); }
  .translate-x-96 { --tw-translate-x: calc(var(--spacing)*96); }
  .translate-x-\[-2\.5rem\] { --tw-translate-x: -2.5rem; }
  .translate-x-\[-2\.5rem\], .translate-x-\[-30\%\] { translate: var(--tw-t=
ranslate-x)var(--tw-translate-y); }
  .translate-x-\[-30\%\] { --tw-translate-x: -30%; }
  .translate-x-\[-50\%\] { --tw-translate-x: -50%; }
  .translate-x-\[-50\%\], .translate-x-\[2\.5rem\] { translate: var(--tw-tr=
anslate-x)var(--tw-translate-y); }
  .translate-x-\[2\.5rem\] { --tw-translate-x: 2.5rem; }
  .-translate-y-1 { --tw-translate-y: calc(var(--spacing)*-1); }
  .-translate-y-1, .-translate-y-1\/2 { translate: var(--tw-translate-x)var=
(--tw-translate-y); }
  .-translate-y-1\/2 { --tw-translate-y: -50%; }
  .-translate-y-2 { --tw-translate-y: calc(var(--spacing)*-2); }
  .-translate-y-12, .-translate-y-2 { translate: var(--tw-translate-x)var(-=
-tw-translate-y); }
  .-translate-y-12 { --tw-translate-y: calc(var(--spacing)*-12); }
  .-translate-y-full { --tw-translate-y: -100%; }
  .-translate-y-full, .translate-y-0 { translate: var(--tw-translate-x)var(=
--tw-translate-y); }
  .translate-y-0 { --tw-translate-y: calc(var(--spacing)*0); }
  .translate-y-0\.5 { --tw-translate-y: calc(var(--spacing)*.5); }
  .translate-y-0\.5, .translate-y-1 { translate: var(--tw-translate-x)var(-=
-tw-translate-y); }
  .translate-y-1 { --tw-translate-y: calc(var(--spacing)*1); }
  .translate-y-1\/2 { --tw-translate-y: 50%; }
  .translate-y-1\/2, .translate-y-2 { translate: var(--tw-translate-x)var(-=
-tw-translate-y); }
  .translate-y-2 { --tw-translate-y: calc(var(--spacing)*2); }
  .translate-y-\[-0\.5rem\] { --tw-translate-y: -.5rem; }
  .translate-y-\[-0\.5rem\], .translate-y-\[-100\%\] { translate: var(--tw-=
translate-x)var(--tw-translate-y); }
  .translate-y-\[-100\%\] { --tw-translate-y: -100%; }
  .translate-y-\[-100lvh\] { --tw-translate-y: -100lvh; }
  .translate-y-\[-100lvh\], .translate-y-\[0px\] { translate: var(--tw-tran=
slate-x)var(--tw-translate-y); }
  .translate-y-\[0px\] { --tw-translate-y: 0px; }
  .translate-y-\[2rem\] { --tw-translate-y: 2rem; }
  .translate-y-\[10px\], .translate-y-\[2rem\] { translate: var(--tw-transl=
ate-x)var(--tw-translate-y); }
  .translate-y-\[10px\] { --tw-translate-y: 10px; }
  .translate-y-\[12\%\] { --tw-translate-y: 12%; }
  .translate-y-\[12\%\], .translate-y-\[12px\] { translate: var(--tw-transl=
ate-x)var(--tw-translate-y); }
  .translate-y-\[12px\] { --tw-translate-y: 12px; }
  .translate-y-\[15\%\] { --tw-translate-y: 15%; translate: var(--tw-transl=
ate-x)var(--tw-translate-y); }
  .translate-y-\[100\%\], .translate-y-full { --tw-translate-y: 100%; trans=
late: var(--tw-translate-x)var(--tw-translate-y); }
  .scale-0 { --tw-scale-x: 0%; --tw-scale-y: 0%; --tw-scale-z: 0%; }
  .scale-0, .scale-90 { scale: var(--tw-scale-x)var(--tw-scale-y); }
  .scale-90 { --tw-scale-x: 90%; --tw-scale-y: 90%; --tw-scale-z: 90%; }
  .scale-100 { --tw-scale-x: 100%; --tw-scale-y: 100%; --tw-scale-z: 100%; =
}
  .scale-100, .scale-105 { scale: var(--tw-scale-x)var(--tw-scale-y); }
  .scale-105 { --tw-scale-x: 105%; --tw-scale-y: 105%; --tw-scale-z: 105%; =
}
  .scale-110 { --tw-scale-x: 110%; --tw-scale-y: 110%; --tw-scale-z: 110%; =
}
  .scale-110, .scale-200 { scale: var(--tw-scale-x)var(--tw-scale-y); }
  .scale-200 { --tw-scale-x: 200%; --tw-scale-y: 200%; --tw-scale-z: 200%; =
}
  .-scale-x-100 { --tw-scale-x: -100%; }
  .-scale-x-100, .scale-x-75 { scale: var(--tw-scale-x)var(--tw-scale-y); }
  .scale-x-75 { --tw-scale-x: 75%; }
  .scale-\[0\.9\] { scale: 0.9; }
  .scale-\[0\.95\] { scale: 0.95; }
  .scale-\[1\.015\] { scale: 1.015; }
  .-rotate-90 { rotate: -90deg; }
  .-rotate-180 { rotate: -180deg; }
  .rotate-0 { rotate: none; }
  .rotate-45 { rotate: 45deg; }
  .rotate-90 { rotate: 90deg; }
  .rotate-180 { rotate: 180deg; }
  .rotate-\[-3deg\] { rotate: -3deg; }
  .rotate-\[-4deg\] { rotate: -4deg; }
  .rotate-\[2deg\] { rotate: 2deg; }
  .rotate-\[4deg\] { rotate: 4deg; }
  .rotate-y-\[20deg\] { --tw-rotate-y: rotateY(20deg); }
  .rotate-y-\[20deg\], .rotate-z-\[-15deg\] { transform: var(--tw-rotate-x)=
var(--tw-rotate-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y); }
  .rotate-z-\[-15deg\] { --tw-rotate-z: rotateZ(-15deg); }
  .rotate-z-\[5deg\] { --tw-rotate-z: rotateZ(5deg); }
  .rotate-z-\[15deg\], .rotate-z-\[5deg\] { transform: var(--tw-rotate-x)va=
r(--tw-rotate-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y); }
  .rotate-z-\[15deg\] { --tw-rotate-z: rotateZ(15deg); }
  .transform { transform: var(--tw-rotate-x)var(--tw-rotate-y)var(--tw-rota=
te-z)var(--tw-skew-x)var(--tw-skew-y); }
  .animate-\[hive-log-fadeout_0\.3s_1\.5s_forwards\] { animation: 0.3s ease=
 1.5s 1 normal forwards running hive-log-fadeout; }
  .animate-\[show_150ms_ease-in\] { animation: 0.15s ease-in 0s 1 normal no=
ne running show; }
  .animate-bounce { animation: var(--animate-bounce); }
  .animate-ping { animation: var(--animate-ping); }
  .animate-pulse { animation: var(--animate-pulse); }
  .animate-pulsing { animation: 2s ease-in-out 0s infinite normal forwards =
running pulsing; }
  .animate-show { animation: 0.1s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal=
 none running show; }
  .animate-spin { animation: var(--animate-spin); }
  .cursor-auto { cursor: auto; }
  .cursor-default { cursor: default; }
  .cursor-default\! { cursor: default !important; }
  .cursor-e-resize { cursor: e-resize; }
  .cursor-ew-resize { cursor: ew-resize; }
  .cursor-grab { cursor: grab; }
  .cursor-none { cursor: none; }
  .cursor-not-allowed { cursor: not-allowed; }
  .cursor-ns-resize { cursor: ns-resize; }
  .cursor-pointer { cursor: pointer; }
  .cursor-progress { cursor: progress; }
  .cursor-text { cursor: text; }
  .cursor-w-resize { cursor: w-resize; }
  .cursor-wait { cursor: wait; }
  .cursor-zoom-in { cursor: zoom-in; }
  .cursor-zoom-out { cursor: zoom-out; }
  .touch-pan-y { --tw-pan-y: pan-y; touch-action: var(--tw-pan-x,)var(--tw-=
pan-y,)var(--tw-pinch-zoom,); }
  .resize { resize: both; }
  .resize-none { resize: none; }
  .resize-y { resize: vertical; }
  .snap-x { scroll-snap-type: x var(--tw-scroll-snap-strictness); }
  .snap-y { scroll-snap-type: y var(--tw-scroll-snap-strictness); }
  .snap-mandatory { --tw-scroll-snap-strictness: mandatory; }
  .snap-proximity { --tw-scroll-snap-strictness: proximity; }
  .snap-center { scroll-snap-align: center; }
  .snap-start { scroll-snap-align: start; }
  .snap-always { scroll-snap-stop: always; }
  .scroll-m-5 { scroll-margin: calc(var(--spacing)*5); }
  .scroll-mx-5 { scroll-margin-inline: calc(var(--spacing)*5); }
  .scroll-mt-28 { scroll-margin-top: calc(var(--spacing)*28); }
  .scroll-mt-\[44px\] { scroll-margin-top: 44px; }
  .scroll-ps-4 { scroll-padding-inline-start: calc(var(--spacing)*4); }
  .scroll-pt-\[30px\] { scroll-padding-top: 30px; }
  .list-inside { list-style-position: inside; }
  .list-decimal { list-style-type: decimal; }
  .list-disc { list-style-type: disc; }
  .list-none { list-style-type: none; }
  .form-textarea { --tw-shadow: 0 0 #0000; appearance: none; background-col=
or: rgb(255, 255, 255); border-color: rgb(155, 155, 155); border-radius: 0p=
x; border-width: 1px; font-size: 1rem; line-height: 1.5rem; padding: 0.5rem=
 0.75rem; }
  .form-textarea:focus { --tw-ring-inset: var(--tw-empty, ); --tw-ring-offs=
et-width: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: #004f99; --tw=
-ring-offset-shadow: var(--tw-ring-inset)0 0 0 var(--tw-ring-offset-width)v=
ar(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset)0 0 0 cal=
c(1px + var(--tw-ring-offset-width))var(--tw-ring-color); border-color: rgb=
(0, 79, 153); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow=
),var(--tw-shadow); outline: rgba(0, 0, 0, 0) solid 2px; outline-offset: 2p=
x; }
  .form-textarea::placeholder { color: rgb(155, 155, 155); opacity: 1; }
  .appearance-none { appearance: none; }
  .columns-1 { column-count: 1; }
  .break-inside-avoid { break-inside: avoid; }
  .grid-flow-col { grid-auto-flow: column; }
  .grid-flow-row { grid-auto-flow: row; }
  .auto-rows-min { grid-auto-rows: min-content; }
  .grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .grid-cols-\[1fr_auto\] { grid-template-columns: 1fr auto; }
  .grid-cols-\[1fr_auto_1fr\] { grid-template-columns: 1fr auto 1fr; }
  .grid-cols-\[1fr_auto_auto\] { grid-template-columns: 1fr auto auto; }
  .grid-cols-\[10px_1fr_10px\] { grid-template-columns: 10px 1fr 10px; }
  .grid-cols-\[50\%_50\%\] { grid-template-columns: 50% 50%; }
  .grid-cols-\[180px_1fr_32px\] { grid-template-columns: 180px 1fr 32px; }
  .grid-cols-\[200px_1fr_1fr\] { grid-template-columns: 200px 1fr 1fr; }
  .grid-cols-\[auto_1fr\] { grid-template-columns: auto 1fr; }
  .grid-cols-\[auto_1fr_auto\] { grid-template-columns: auto 1fr auto; }
  .grid-cols-\[auto_auto\] { grid-template-columns: auto auto; }
  .grid-cols-\[auto_auto_1fr\] { grid-template-columns: auto auto 1fr; }
  .grid-cols-\[auto_max-content\] { grid-template-columns: auto max-content=
; }
  .grid-cols-\[auto_minmax\(0\,1fr\)\] { grid-template-columns: auto minmax=
(0px, 1fr); }
  .grid-cols-\[minmax\(0\,1fr\)\] { grid-template-columns: minmax(0px, 1fr)=
; }
  .grid-cols-\[repeat\(auto-fit\,minmax\(250px\,1fr\)\)\] { grid-template-c=
olumns: repeat(auto-fit, minmax(250px, 1fr)); }
  .grid-rows-2 { grid-template-rows: repeat(2, minmax(0px, 1fr)); }
  .grid-rows-\[0fr\] { grid-template-rows: 0fr; }
  .grid-rows-\[1fr\] { grid-template-rows: 1fr; }
  .grid-rows-\[minmax\(10px\,1fr\)_auto_10px\] { grid-template-rows: minmax=
(10px, 1fr) auto 10px; }
  .grid-rows-\[minmax\(10px\,1fr\)_auto_minmax\(10px\,1fr\)\] { grid-templa=
te-rows: minmax(10px, 1fr) auto minmax(10px, 1fr); }
  .flex-col { flex-direction: column; }
  .flex-col-reverse { flex-direction: column-reverse; }
  .flex-row { flex-direction: row; }
  .flex-row-reverse { flex-direction: row-reverse; }
  .flex-nowrap { flex-wrap: nowrap; }
  .flex-wrap { flex-wrap: wrap; }
  .flex-wrap-reverse { flex-wrap: wrap-reverse; }
  .place-content-center { place-content: center; }
  .place-items-center { place-items: center; }
  .content-center { align-content: center; }
  .items-baseline { align-items: baseline; }
  .items-center { align-items: center; }
  .items-end { align-items: flex-end; }
  .items-start { align-items: flex-start; }
  .items-stretch { align-items: stretch; }
  .justify-around { justify-content: space-around; }
  .justify-between { justify-content: space-between; }
  .justify-center { justify-content: center; }
  .justify-end { justify-content: flex-end; }
  .justify-start { justify-content: flex-start; }
  .justify-stretch { justify-content: stretch; }
  .justify-items-center { justify-items: center; }
  .gap-0 { gap: calc(var(--spacing)*0); }
  .gap-0\.5 { gap: calc(var(--spacing)*.5); }
  .gap-1 { gap: calc(var(--spacing)*1); }
  .gap-1\.5 { gap: calc(var(--spacing)*1.5); }
  .gap-2 { gap: calc(var(--spacing)*2); }
  .gap-2\.5 { gap: calc(var(--spacing)*2.5); }
  .gap-3 { gap: calc(var(--spacing)*3); }
  .gap-3\.5 { gap: calc(var(--spacing)*3.5); }
  .gap-4 { gap: calc(var(--spacing)*4); }
  .gap-5 { gap: calc(var(--spacing)*5); }
  .gap-6 { gap: calc(var(--spacing)*6); }
  .gap-7 { gap: calc(var(--spacing)*7); }
  .gap-8 { gap: calc(var(--spacing)*8); }
  .gap-10 { gap: calc(var(--spacing)*10); }
  .gap-\[2px\] { gap: 2px; }
  .gap-\[10px\] { gap: 10px; }
  .gap-\[18px\] { gap: 18px; }
  .gap-\[min\(10dvw\,_200px\)\] { gap: min(10dvw, 200px); }
  .gap-bar { gap: var(--bar-gap,.25rem); }
  .gap-snc-1 { gap: var(--snc-1); }
  .gap-snc-results-padding { gap: var(--snc-results-padding); }
  :where(.-space-y-px > :not(:last-child)) { --tw-space-y-reverse: 0; margi=
n-block-end: calc(-1px*(1 - var(--tw-space-y-reverse))); margin-block-start=
: calc(-1px*var(--tw-space-y-reverse)); }
  :where(.space-y-0 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*0*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*0*var(--tw-space-y-reverse)); }
  :where(.space-y-1 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*1*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*1*var(--tw-space-y-reverse)); }
  :where(.space-y-1\.5 > :not(:last-child)) { --tw-space-y-reverse: 0; marg=
in-block-end: calc(var(--spacing)*1.5*(1 - var(--tw-space-y-reverse))); mar=
gin-block-start: calc(var(--spacing)*1.5*var(--tw-space-y-reverse)); }
  :where(.space-y-2 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*2*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*2*var(--tw-space-y-reverse)); }
  :where(.space-y-3 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*3*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*3*var(--tw-space-y-reverse)); }
  :where(.space-y-4 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*4*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*4*var(--tw-space-y-reverse)); }
  :where(.space-y-5 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*5*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*5*var(--tw-space-y-reverse)); }
  :where(.space-y-6 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*6*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*6*var(--tw-space-y-reverse)); }
  :where(.space-y-8 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*8*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*8*var(--tw-space-y-reverse)); }
  :where(.space-y-\[6px\] > :not(:last-child)) { --tw-space-y-reverse: 0; m=
argin-block-end: calc(6px*(1 - var(--tw-space-y-reverse))); margin-block-st=
art: calc(6px*var(--tw-space-y-reverse)); }
  :where(.space-y-reverse > :not(:last-child)) { --tw-space-y-reverse: 1; }
  .gap-x-1 { column-gap: calc(var(--spacing)*1); }
  .gap-x-1\.5 { column-gap: calc(var(--spacing)*1.5); }
  .gap-x-2 { column-gap: calc(var(--spacing)*2); }
  .gap-x-3 { column-gap: calc(var(--spacing)*3); }
  .gap-x-4 { column-gap: calc(var(--spacing)*4); }
  .gap-x-8 { column-gap: calc(var(--spacing)*8); }
  .gap-x-9 { column-gap: calc(var(--spacing)*9); }
  .gap-x-10 { column-gap: calc(var(--spacing)*10); }
  :where(.space-x-1 > :not(:last-child)) { --tw-space-x-reverse: 0; margin-=
inline-end: calc(var(--spacing)*1*(1 - var(--tw-space-x-reverse))); margin-=
inline-start: calc(var(--spacing)*1*var(--tw-space-x-reverse)); }
  :where(.space-x-2 > :not(:last-child)) { --tw-space-x-reverse: 0; margin-=
inline-end: calc(var(--spacing)*2*(1 - var(--tw-space-x-reverse))); margin-=
inline-start: calc(var(--spacing)*2*var(--tw-space-x-reverse)); }
  :where(.space-x-3 > :not(:last-child)) { --tw-space-x-reverse: 0; margin-=
inline-end: calc(var(--spacing)*3*(1 - var(--tw-space-x-reverse))); margin-=
inline-start: calc(var(--spacing)*3*var(--tw-space-x-reverse)); }
  :where(.space-x-4 > :not(:last-child)) { --tw-space-x-reverse: 0; margin-=
inline-end: calc(var(--spacing)*4*(1 - var(--tw-space-x-reverse))); margin-=
inline-start: calc(var(--spacing)*4*var(--tw-space-x-reverse)); }
  :where(.space-x-12 > :not(:last-child)) { --tw-space-x-reverse: 0; margin=
-inline-end: calc(var(--spacing)*12*(1 - var(--tw-space-x-reverse))); margi=
n-inline-start: calc(var(--spacing)*12*var(--tw-space-x-reverse)); }
  :where(.space-x-14 > :not(:last-child)) { --tw-space-x-reverse: 0; margin=
-inline-end: calc(var(--spacing)*14*(1 - var(--tw-space-x-reverse))); margi=
n-inline-start: calc(var(--spacing)*14*var(--tw-space-x-reverse)); }
  :where(.space-x-reverse > :not(:last-child)) { --tw-space-x-reverse: 1; }
  .gap-y-1 { row-gap: calc(var(--spacing)*1); }
  .gap-y-2 { row-gap: calc(var(--spacing)*2); }
  .gap-y-3 { row-gap: calc(var(--spacing)*3); }
  .gap-y-4 { row-gap: calc(var(--spacing)*4); }
  .gap-y-10 { row-gap: calc(var(--spacing)*10); }
  :where(.divide-x > :not(:last-child)) { --tw-divide-x-reverse: 0; border-=
inline-end-width: calc(1px*(1 - var(--tw-divide-x-reverse))); border-inline=
-start-width: calc(1px*var(--tw-divide-x-reverse)); border-inline-style: va=
r(--tw-border-style); }
  :where(.divide-y > :not(:last-child)) { --tw-divide-y-reverse: 0; border-=
bottom-style: var(--tw-border-style); border-bottom-width: calc(1px*(1 - va=
r(--tw-divide-y-reverse))); border-top-style: var(--tw-border-style); borde=
r-top-width: calc(1px*var(--tw-divide-y-reverse)); }
  :where(.divide-gray-200 > :not(:last-child)) { border-color: rgb(227, 227=
, 227); }
  :where(.divide-token-border-default > :not(:last-child)) { border-color: =
var(--border-default); }
  :where(.divide-token-border-medium > :not(:last-child)) { border-color: v=
ar(--border-medium); }
  :where(.divide-token-border-xlight > :not(:last-child)) { border-color: v=
ar(--border-xlight); }
  :where(.divide-white\/10 > :not(:last-child)) { border-color: rgba(255, 2=
55, 255, 0.1); }
  .self-center { align-self: center; }
  .self-end { align-self: flex-end; }
  .self-start { align-self: flex-start; }
  .self-stretch { align-self: stretch; }
  .justify-self-center { justify-self: center; }
  .justify-self-end { justify-self: flex-end; }
  .justify-self-start { justify-self: flex-start; }
  .justify-self-stretch { justify-self: stretch; }
  .\!truncate { overflow: hidden !important; text-overflow: ellipsis !impor=
tant; white-space: nowrap !important; }
  .truncate { overflow: hidden; text-overflow: ellipsis; white-space: nowra=
p; }
  .overflow-auto { overflow: auto; }
  .overflow-clip { overflow: clip; }
  .overflow-hidden { overflow: hidden; }
  .overflow-scroll { overflow: scroll; }
  .overflow-visible { overflow: visible; }
  .overflow-visible\! { overflow: visible !important; }
  .overflow-x-auto { overflow-x: auto; }
  .overflow-x-clip { overflow-x: clip; }
  .overflow-x-hidden { overflow-x: hidden; }
  .overflow-x-scroll { overflow-x: scroll; }
  .overflow-y-auto { overflow-y: auto; }
  .overflow-y-clip { overflow-y: clip; }
  .overflow-y-hidden { overflow-y: hidden; }
  .overflow-y-scroll { overflow-y: scroll; }
  .overflow-y-scroll\! { overflow-y: scroll !important; }
  .overflow-y-visible { overflow-y: visible; }
  .overscroll-contain { overscroll-behavior: contain; }
  .scroll-smooth { scroll-behavior: smooth; }
  .rounded { border-radius: 0.25rem; }
  .rounded-2xl { border-radius: var(--radius-2xl); }
  .rounded-3xl { border-radius: var(--radius-3xl); }
  .rounded-4xl { border-radius: var(--radius-4xl); }
  .rounded-\[0\.25rem\] { border-radius: 0.25rem; }
  .rounded-\[1px\] { border-radius: 1px; }
  .rounded-\[3px\] { border-radius: 3px; }
  .rounded-\[4px\] { border-radius: 4px; }
  .rounded-\[10px\] { border-radius: 10px; }
  .rounded-\[14px\] { border-radius: 14px; }
  .rounded-\[16px\] { border-radius: 16px; }
  .rounded-\[20px\] { border-radius: 20px; }
  .rounded-\[22px\] { border-radius: 22px; }
  .rounded-\[25px\] { border-radius: 25px; }
  .rounded-\[28px\] { border-radius: 28px; }
  .rounded-\[30px\] { border-radius: 30px; }
  .rounded-\[36px\] { border-radius: 36px; }
  .rounded-\[38px\] { border-radius: 38px; }
  .rounded-full { border-radius: 3.40282e+38px; }
  .rounded-full\! { border-radius: 3.40282e+38px !important; }
  .rounded-lg { border-radius: var(--radius-lg); }
  .rounded-lg\! { border-radius: var(--radius-lg) !important; }
  .rounded-md { border-radius: var(--radius-md); }
  .rounded-md\! { border-radius: var(--radius-md) !important; }
  .rounded-none { border-radius: 0px; }
  .rounded-sm { border-radius: var(--radius-sm); }
  .rounded-sm\! { border-radius: var(--radius-sm) !important; }
  .rounded-xl { border-radius: var(--radius-xl); }
  .rounded-xl\! { border-radius: var(--radius-xl) !important; }
  .rounded-xs { border-radius: var(--radius-xs); }
  .rounded-s-full { border-end-start-radius: 3.40282e+38px; border-start-st=
art-radius: 3.40282e+38px; }
  .rounded-s-none { border-end-start-radius: 0px; border-start-start-radius=
: 0px; }
  .rounded-s-xl { border-end-start-radius: var(--radius-xl); border-start-s=
tart-radius: var(--radius-xl); }
  .rounded-ss-2xl { border-start-start-radius: var(--radius-2xl); }
  .rounded-e-full { border-end-end-radius: 3.40282e+38px; border-start-end-=
radius: 3.40282e+38px; }
  .rounded-e-md { border-end-end-radius: var(--radius-md); border-start-end=
-radius: var(--radius-md); }
  .rounded-e-none { border-end-end-radius: 0px; border-start-end-radius: 0p=
x; }
  .rounded-e-xl { border-end-end-radius: var(--radius-xl); border-start-end=
-radius: var(--radius-xl); }
  .rounded-se-2xl { border-start-end-radius: var(--radius-2xl); }
  .rounded-se-\[1px\] { border-start-end-radius: 1px; }
  .rounded-se-lg { border-start-end-radius: var(--radius-lg); }
  .rounded-ee-full { border-end-end-radius: 3.40282e+38px; }
  .rounded-ee-sm { border-end-end-radius: var(--radius-sm); }
  .rounded-es-2xl { border-end-start-radius: var(--radius-2xl); }
  .rounded-es-\[1px\] { border-end-start-radius: 1px; }
  .rounded-t-2xl { border-top-left-radius: var(--radius-2xl); border-top-ri=
ght-radius: var(--radius-2xl); }
  .rounded-t-3xl { border-top-left-radius: var(--radius-3xl); border-top-ri=
ght-radius: var(--radius-3xl); }
  .rounded-t-\[5px\] { border-top-left-radius: 5px; border-top-right-radius=
: 5px; }
  .rounded-t-\[20px\] { border-top-left-radius: 20px; border-top-right-radi=
us: 20px; }
  .rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-radi=
us: 30px; }
  .rounded-t-lg { border-top-left-radius: var(--radius-lg); border-top-righ=
t-radius: var(--radius-lg); }
  .rounded-t-md { border-top-left-radius: var(--radius-md); border-top-righ=
t-radius: var(--radius-md); }
  .rounded-t-none { border-top-left-radius: 0px; border-top-right-radius: 0=
px; }
  .rounded-t-xl { border-top-left-radius: var(--radius-xl); border-top-righ=
t-radius: var(--radius-xl); }
  [dir=3D"ltr"] .rounded-l { border-bottom-left-radius: 0.25rem; border-top=
-left-radius: 0.25rem; }
  [dir=3D"ltr"] .rounded-r, [dir=3D"rtl"] .rounded-l { border-bottom-right-=
radius: 0.25rem; border-top-right-radius: 0.25rem; }
  [dir=3D"rtl"] .rounded-r { border-bottom-left-radius: 0.25rem; border-top=
-left-radius: 0.25rem; }
  .rounded-b-2xl { border-bottom-left-radius: var(--radius-2xl); border-bot=
tom-right-radius: var(--radius-2xl); }
  .rounded-b-3xl { border-bottom-left-radius: var(--radius-3xl); border-bot=
tom-right-radius: var(--radius-3xl); }
  .rounded-b-lg { border-bottom-left-radius: var(--radius-lg); border-botto=
m-right-radius: var(--radius-lg); }
  .rounded-b-md { border-bottom-left-radius: var(--radius-md); border-botto=
m-right-radius: var(--radius-md); }
  .rounded-b-none { border-bottom-left-radius: 0px; border-bottom-right-rad=
ius: 0px; }
  .rounded-b-xl { border-bottom-left-radius: var(--radius-xl); border-botto=
m-right-radius: var(--radius-xl); }
  .btn-secondary { background-color: var(--main-surface-primary); border-co=
lor: var(--border-medium); border-style: var(--tw-border-style); border-wid=
th: 1px; color: var(--text-primary); font-size: var(--text-sm); line-height=
: var(--tw-leading,var(--text-sm--line-height)); }
  @media (hover: hover) {
  .btn-secondary:hover { background-color: var(--main-surface-secondary); }
}
  .btn-secondary:focus-visible { --tw-ring-shadow: var(--tw-ring-inset,)0 0=
 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor)=
; --tw-ring-color: #676767; --tw-ring-offset-width: 2px; --tw-ring-offset-s=
hadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-=
offset-color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shado=
w),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .btn-danger-outline { background-color: var(--main-surface-primary); bord=
er-color: rgb(186, 38, 35); border-style: var(--tw-border-style); border-wi=
dth: 1px; color: rgb(186, 38, 35); }
  @media (hover: hover) {
  .btn-danger-outline:hover { background-color: var(--main-surface-secondar=
y); }
}
  .btn-danger-outline:focus-visible { --tw-ring-shadow: var(--tw-ring-inset=
,)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentC=
olor); --tw-ring-color: #ba2623; --tw-ring-offset-width: 2px; --tw-ring-off=
set-shadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-=
ring-offset-color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-=
shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)=
; }
  .border { border-width: 1px; }
  .border, .border-0 { border-style: var(--tw-border-style); }
  .border-0 { border-width: 0px; }
  .border-0\! { border-style: var(--tw-border-style) !important; border-wid=
th: 0px !important; }
  .border-1 { border-width: 1px; }
  .border-1, .border-2 { border-style: var(--tw-border-style); }
  .border-2 { border-width: 2px; }
  .border-4 { border-style: var(--tw-border-style); border-width: 4px; }
  .border-\[0\.5px\], .border-\[\.5px\] { border-style: var(--tw-border-sty=
le); border-width: 0.5px; }
  .border-\[1px\] { border-width: 1px; }
  .border-\[1px\], .border-\[3px\] { border-style: var(--tw-border-style); =
}
  .border-\[3px\] { border-width: 3px; }
  .border-\[4px\] { border-style: var(--tw-border-style); border-width: 4px=
; }
  .border-x-0 { border-inline-style: var(--tw-border-style); border-inline-=
width: 0px; }
  .border-y { border-block-style: var(--tw-border-style); border-block-widt=
h: 1px; }
  .border-s { border-inline-start-width: 1px; }
  .border-s, .border-s-0 { border-inline-start-style: var(--tw-border-style=
); }
  .border-s-0 { border-inline-start-width: 0px; }
  .border-s-0\! { border-inline-start-style: var(--tw-border-style) !import=
ant; border-inline-start-width: 0px !important; }
  .border-s-4 { border-inline-start-width: 4px; }
  .border-s-4, .border-s-8 { border-inline-start-style: var(--tw-border-sty=
le); }
  .border-s-8 { border-inline-start-width: 8px; }
  .border-e { border-inline-end-width: 1px; }
  .border-e, .border-e-0 { border-inline-end-style: var(--tw-border-style);=
 }
  .border-e-0 { border-inline-end-width: 0px; }
  .border-e-0\! { border-inline-end-style: var(--tw-border-style) !importan=
t; border-inline-end-width: 0px !important; }
  .border-e-2 { border-inline-end-width: 2px; }
  .border-e-2, .border-e-8 { border-inline-end-style: var(--tw-border-style=
); }
  .border-e-8 { border-inline-end-width: 8px; }
  .border-e-\[1px\] { border-inline-end-style: var(--tw-border-style); bord=
er-inline-end-width: 1px; }
  .border-t { border-top-width: 1px; }
  .border-t, .border-t-0 { border-top-style: var(--tw-border-style); }
  .border-t-0 { border-top-width: 0px; }
  .border-t-0\! { border-top-style: var(--tw-border-style) !important; bord=
er-top-width: 0px !important; }
  .border-t-8 { border-top-width: 8px; }
  .border-t-8, .border-t-\[0\.5px\] { border-top-style: var(--tw-border-sty=
le); }
  .border-t-\[0\.5px\] { border-top-width: 0.5px; }
  [dir=3D"ltr"] .border-r { border-right-style: var(--tw-border-style); bor=
der-right-width: 1px; }
  [dir=3D"rtl"] .border-r { border-left-style: var(--tw-border-style); bord=
er-left-width: 1px; }
  .border-b { border-bottom-width: 1px; }
  .border-b, .border-b-0 { border-bottom-style: var(--tw-border-style); }
  .border-b-0 { border-bottom-width: 0px; }
  .border-b-2 { border-bottom-width: 2px; }
  .border-b-2, .border-b-\[0\.5px\] { border-bottom-style: var(--tw-border-=
style); }
  .border-b-\[0\.5px\] { border-bottom-width: 0.5px; }
  [dir=3D"ltr"] .border-l, [dir=3D"ltr"] .border-l-\[1px\] { border-left-st=
yle: var(--tw-border-style); border-left-width: 1px; }
  [dir=3D"rtl"] .border-l, [dir=3D"rtl"] .border-l-\[1px\] { border-right-s=
tyle: var(--tw-border-style); border-right-width: 1px; }
  .border-dashed { --tw-border-style: dashed; border-style: dashed; }
  .border-dotted { --tw-border-style: dotted; border-style: dotted; }
  .border-none { --tw-border-style: none; border-style: none; }
  .border-solid { --tw-border-style: solid; border-style: solid; }
  .border-\[\#AF52DE\] { border-color: rgb(175, 82, 222); }
  .border-\[\#B3DBFF\] { border-color: rgb(179, 219, 255); }
  .border-\[\#EDEDF2\] { border-color: rgb(237, 237, 242); }
  .border-\[\#f4f4f4\] { border-color: rgb(244, 244, 244); }
  .border-\[rgba\(0\,0\,0\,0\.1\)\] { border-color: rgba(0, 0, 0, 0.1); }
  .border-\[rgba\(0\,0\,0\,0\.18\)\] { border-color: rgba(0, 0, 0, 0.18); }
  .border-black { border-color: rgb(0, 0, 0); }
  .border-black\/5 { border-color: oklab(0 none none / 0.05); }
  .border-black\/10 { border-color: oklab(0 none none / 0.1); }
  .border-black\/25 { border-color: oklab(0 none none / 0.25); }
  .border-black\/\[0\.12\] { border-color: oklab(0 none none / 0.12); }
  .border-blue-100 { border-color: rgb(153, 206, 255); }
  .border-blue-400 { border-color: rgb(2, 133, 255); }
  .border-blue-400\! { border-color: rgb(2, 133, 255) !important; }
  .border-blue-400\/10 { border-color: rgba(2, 133, 255, 0.1); }
  .border-blue-400\/\[\.3\] { border-color: rgba(2, 133, 255, 0.3); }
  .border-brand-green-800 { border-color: rgb(5, 167, 70); }
  .border-brand-purple { border-color: rgb(171, 104, 255); }
  .border-gray-100 { border-color: rgb(236, 236, 236); }
  .border-gray-200 { border-color: rgb(227, 227, 227); }
  .border-gray-300 { border-color: rgb(205, 205, 205); }
  .border-gray-400 { border-color: rgb(180, 180, 180); }
  .border-gray-500 { border-color: rgb(155, 155, 155); }
  .border-gray-700 { border-color: rgb(66, 66, 66); }
  .border-green-500 { border-color: rgb(0, 162, 64); }
  .border-green-600 { border-color: rgb(0, 134, 53); }
  .border-orange-400 { border-color: rgb(251, 106, 34); }
  .border-orange-400\/15 { border-color: rgba(251, 106, 34, 0.15); }
  .border-orange-500 { border-color: rgb(226, 85, 7); }
  .border-red-200 { border-color: rgb(255, 133, 131); }
  .border-red-400 { border-color: rgb(250, 66, 62); }
  .border-red-500 { border-color: rgb(224, 46, 42); }
  .border-red-500\! { border-color: rgb(224, 46, 42) !important; }
  .border-red-600 { border-color: rgb(186, 38, 35); }
  .border-red-700 { border-color: rgb(145, 30, 27); }
  .border-token-border-default { border-color: var(--border-default); }
  .border-token-border-default\! { border-color: var(--border-default) !imp=
ortant; }
  .border-token-border-heavy { border-color: var(--border-heavy); }
  .border-token-border-light { border-color: var(--border-light); }
  .border-token-border-light\! { border-color: var(--border-light) !importa=
nt; }
  .border-token-border-medium { border-color: var(--border-medium); }
  .border-token-border-medium\! { border-color: var(--border-medium) !impor=
tant; }
  .border-token-border-sharp { border-color: var(--border-sharp); }
  .border-token-border-xheavy { border-color: var(--border-xheavy); }
  .border-token-border-xlight { border-color: var(--border-xlight); }
  .border-token-border-xlight\! { border-color: var(--border-xlight) !impor=
tant; }
  .border-token-main-surface-primary { border-color: var(--main-surface-pri=
mary); }
  .border-token-main-surface-secondary { border-color: var(--main-surface-s=
econdary); }
  .border-token-main-surface-tertiary { border-color: var(--main-surface-te=
rtiary); }
  .border-token-sidebar-surface-primary { border-color: var(--sidebar-surfa=
ce-primary); }
  .border-token-surface-error\/5 { border-color: color-mix(in oklab,rgb(var=
(--surface-error)/1) 5%,transparent); }
  .border-token-surface-error\/15 { border-color: color-mix(in oklab,rgb(va=
r(--surface-error)/1) 15%,transparent); }
  .border-token-text-error { border-color: var(--text-error); }
  .border-token-text-primary { border-color: var(--text-primary); }
  .border-token-text-primary\! { border-color: var(--text-primary) !importa=
nt; }
  .border-token-text-secondary { border-color: var(--text-secondary); }
  .border-token-text-tertiary { border-color: var(--text-tertiary); }
  .border-transparent { border-color: rgba(0, 0, 0, 0); }
  .border-white { border-color: rgb(255, 255, 255); }
  .border-white\/10 { border-color: rgba(255, 255, 255, 0.1); }
  .border-white\/20 { border-color: rgba(255, 255, 255, 0.2); }
  .border-y-token-border-medium { border-block-color: var(--border-medium);=
 }
  .border-s-token-border-sharp { border-inline-start-color: var(--border-sh=
arp); }
  .border-s-token-sidebar-surface-secondary { border-inline-start-color: va=
r(--sidebar-surface-secondary); }
  .border-s-transparent { border-inline-start-color: rgba(0, 0, 0, 0); }
  .border-e-transparent { border-inline-end-color: rgba(0, 0, 0, 0); }
  .border-t-\[\#0077FF\] { border-top-color: rgb(0, 119, 255); }
  .border-t-token-border-xlight { border-top-color: var(--border-xlight); }
  .border-b-black { border-bottom-color: rgb(0, 0, 0); }
  .border-b-token-bg-secondary { border-bottom-color: var(--bg-secondary); =
}
  .border-b-token-border-default { border-bottom-color: var(--border-defaul=
t); }
  .border-b-transparent { border-bottom-color: rgba(0, 0, 0, 0); }
  .btn-primary { background-color: rgb(13, 13, 13); color: rgb(255, 255, 25=
5); }
  @media (hover: hover) {
  .btn-primary:hover { background-color: rgb(33, 33, 33); }
}
  .btn-primary:focus-visible { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0=
 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor); =
--tw-ring-color: #9b9b9b; --tw-ring-offset-width: 2px; --tw-ring-offset-sha=
dow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-of=
fset-color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow)=
,var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .btn-primary:is(.dark *) { background-color: rgb(249, 249, 249); color: r=
gb(13, 13, 13); }
  @media (hover: hover) {
  .btn-primary:is(.dark *):hover { background-color: rgb(236, 236, 236); }
}
  .btn-primary-inverse { background-color: rgb(249, 249, 249); color: rgb(1=
3, 13, 13); }
  @media (hover: hover) {
  .btn-primary-inverse:hover { background-color: rgb(236, 236, 236); }
}
  .btn-primary-inverse:focus-visible { --tw-ring-shadow: var(--tw-ring-inse=
t,)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,current=
Color); --tw-ring-color: #9b9b9b; --tw-ring-offset-width: 2px; --tw-ring-of=
fset-shadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw=
-ring-offset-color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring=
-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow=
); }
  .btn-primary-inverse:is(.dark *) { background-color: rgb(13, 13, 13); col=
or: rgb(255, 255, 255); }
  @media (hover: hover) {
  .btn-primary-inverse:is(.dark *):hover { background-color: rgb(33, 33, 33=
); }
}
  .btn-danger { background-color: rgb(224, 46, 42); color: rgb(255, 255, 25=
5); }
  @media (hover: hover) {
  .btn-danger:hover { background-color: rgb(145, 30, 27); }
}
  .btn-danger:focus-visible { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 =
calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor); -=
-tw-ring-color: #fa423e; --tw-ring-offset-width: 2px; --tw-ring-offset-shad=
ow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-off=
set-color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),=
var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  @media (hover: hover) {
  .btn-danger:disabled:hover { background-color: rgb(145, 30, 27); }
}
  .btn-blue { background-color: rgb(0, 102, 222); color: rgb(255, 255, 255)=
; }
  @media (hover: hover) {
  .btn-blue:hover { background-color: rgb(0, 63, 122); }
}
  .btn-blue:focus-visible { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 ca=
lc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor); --t=
w-ring-color: #003f7a; --tw-ring-offset-width: 2px; --tw-ring-offset-shadow=
: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offse=
t-color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),va=
r(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .btn-green { background-color: rgb(0, 134, 53); color: rgb(255, 255, 255)=
; }
  @media (hover: hover) {
  .btn-green:hover { background-color: rgb(0, 105, 42); }
}
  .btn-green:focus-visible { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 c=
alc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor); --=
tw-ring-color: #00a240; --tw-ring-offset-width: 2px; --tw-ring-offset-shado=
w: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offs=
et-color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),v=
ar(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  @media (hover: hover) {
  .btn-ghost:hover { background-color: oklab(0 none none / 0.05); }
}
  .btn-ghost:focus-visible { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 c=
alc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor); --=
tw-ring-color: oklab(0% none none/.05); --tw-outline-style: none; box-shado=
w: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-=
shadow),var(--tw-ring-shadow),var(--tw-shadow); outline-style: none; }
  @media (forced-colors: active) {
  .btn-ghost:focus-visible { outline: rgba(0, 0, 0, 0) solid 2px; outline-o=
ffset: 2px; }
}
  @media (hover: hover) {
  .btn-ghost:is(.dark *):hover { background-color: rgba(255, 255, 255, 0.1)=
; }
}
  .\!bg-token-interactive-bg-accent-default { background-color: var(--inter=
active-bg-accent-default) !important; }
  .bg-\(--task-bg\) { background-color: var(--task-bg); }
  .bg-\[\#1D53BF0D\] { background-color: rgba(29, 83, 191, 0.05); }
  .bg-\[\#007AFF\] { background-color: rgb(0, 122, 255); }
  .bg-\[\#8C43A00D\] { background-color: rgba(140, 67, 160, 0.05); }
  .bg-\[\#8E3CF320\] { background-color: rgba(142, 60, 243, 0.125); }
  .bg-\[\#10A37F\] { background-color: rgb(16, 163, 127); }
  .bg-\[\#0077FF\] { background-color: rgb(0, 119, 255); }
  .bg-\[\#0088FF\] { background-color: rgb(0, 136, 255); }
  .bg-\[\#129FBF\] { background-color: rgb(18, 159, 191); }
  .bg-\[\#59636E20\] { background-color: rgba(89, 99, 110, 0.125); }
  .bg-\[\#252525\] { background-color: rgb(37, 37, 37); }
  .bg-\[\#303030\] { background-color: rgb(48, 48, 48); }
  .bg-\[\#AF52DE\] { background-color: rgb(175, 82, 222); }
  .bg-\[\#B161FD\] { background-color: rgb(177, 97, 253); }
  .bg-\[\#C3DEC780\] { background-color: rgba(195, 222, 199, 0.5); }
  .bg-\[\#CEDFFE\] { background-color: rgb(206, 223, 254); }
  .bg-\[\#D6303D20\] { background-color: rgba(214, 48, 61, 0.125); }
  .bg-\[\#DAEEFF\] { background-color: rgb(218, 238, 255); }
  .bg-\[\#E5F3FF\] { background-color: rgb(229, 243, 255); }
  .bg-\[\#F1F1F1\] { background-color: rgb(241, 241, 241); }
  .bg-\[\#F4F4F4\]\! { background-color: rgb(244, 244, 244) !important; }
  .bg-\[\#F8CA27\] { background-color: rgb(248, 202, 39); }
  .bg-\[\#F9F9F9\] { background-color: rgb(249, 249, 249); }
  .bg-\[\#FCECC1\] { background-color: rgb(252, 236, 193); }
  .bg-\[\#FF6E3C\] { background-color: rgb(255, 110, 60); }
  .bg-\[\#FF5588\] { background-color: rgb(255, 85, 136); }
  .bg-\[\#e2c541\] { background-color: rgb(226, 197, 65); }
  .bg-\[\#f4f4f4\] { background-color: rgb(244, 244, 244); }
  .bg-\[\#fcf6e0\] { background-color: rgb(252, 246, 224); }
  .bg-\[Highlight\] { background-color: highlight; }
  .bg-\[Highlight\]\! { background-color: highlight !important; }
  .bg-\[rgba\(29\,155\,209\,0\.1\)\] { background-color: rgba(29, 155, 209,=
 0.1); }
  .bg-\[rgba\(229\,76\,66\,0\.16\)\] { background-color: rgba(229, 76, 66, =
0.16); }
  .bg-\[rgba\(249\,249\,249\,1\)\] { background-color: rgb(249, 249, 249); =
}
  .bg-\[rgba\(255\,255\,255\,0\.9\)\] { background-color: rgba(255, 255, 25=
5, 0.9); }
  .bg-\[var\(--item-background-color\)\] { background-color: var(--item-bac=
kground-color); }
  .bg-black { background-color: rgb(0, 0, 0); }
  .bg-black\! { background-color: rgb(0, 0, 0) !important; }
  .bg-black\/5 { background-color: oklab(0 none none / 0.05); }
  .bg-black\/5\! { background-color: oklab(0 none none / 0.05) !important; =
}
  .bg-black\/10 { background-color: oklab(0 none none / 0.1); }
  .bg-black\/25 { background-color: oklab(0 none none / 0.25); }
  .bg-black\/40 { background-color: oklab(0 none none / 0.4); }
  .bg-black\/50 { background-color: oklab(0 none none / 0.5); }
  .bg-black\/90 { background-color: oklab(0 none none / 0.9); }
  .bg-black\/95 { background-color: oklab(0 none none / 0.95); }
  .bg-black\/\[0\.025\] { background-color: oklab(0 none none / 0.025); }
  .bg-black\/\[0\.045\] { background-color: oklab(0 none none / 0.045); }
  .bg-blue-25 { background-color: rgb(245, 250, 255); }
  .bg-blue-50 { background-color: rgb(229, 243, 255); }
  .bg-blue-75 { background-color: rgb(204, 230, 255); }
  .bg-blue-100 { background-color: rgb(153, 206, 255); }
  .bg-blue-200 { background-color: rgb(102, 181, 255); }
  .bg-blue-300 { background-color: rgb(51, 156, 255); }
  .bg-blue-400 { background-color: rgb(2, 133, 255); }
  .bg-blue-400\/10 { background-color: rgba(2, 133, 255, 0.1); }
  .bg-blue-400\/10\! { background-color: rgba(2, 133, 255, 0.1) !important;=
 }
  .bg-blue-400\/15 { background-color: rgba(2, 133, 255, 0.15); }
  .bg-blue-400\/50 { background-color: rgba(2, 133, 255, 0.5); }
  .bg-blue-400\/\[\.08\] { background-color: rgba(2, 133, 255, 0.08); }
  .bg-blue-400\/\[0\.1\] { background-color: rgba(2, 133, 255, 0.1); }
  .bg-blue-500 { background-color: rgb(1, 105, 204); }
  .bg-blue-500\/10 { background-color: rgba(1, 105, 204, 0.1); }
  .bg-blue-500\/30 { background-color: rgba(1, 105, 204, 0.3); }
  .bg-blue-600 { background-color: rgb(0, 79, 153); }
  .bg-blue-700 { background-color: rgb(0, 63, 122); }
  .bg-blue-800 { background-color: rgb(1, 53, 102); }
  .bg-blue-900 { background-color: rgb(0, 40, 77); }
  .bg-blue-1000 { background-color: rgb(0, 13, 25); }
  .bg-brand-blue-800 { background-color: rgb(0, 102, 222); }
  .bg-brand-blue-800\/20 { background-color: rgba(0, 102, 222, 0.2); }
  .bg-brand-green { background-color: rgb(25, 195, 125); }
  .bg-brand-purple { background-color: rgb(171, 104, 255); }
  .bg-brand-purple-600 { background-color: rgb(113, 95, 222); }
  .bg-brand-purple-800 { background-color: rgb(84, 0, 222); }
  .bg-current { background-color: currentcolor; }
  .bg-gray-50 { background-color: rgb(249, 249, 249); }
  .bg-gray-50\/50 { background-color: rgba(249, 249, 249, 0.5); }
  .bg-gray-50\/75 { background-color: rgba(249, 249, 249, 0.75); }
  .bg-gray-100 { background-color: rgb(236, 236, 236); }
  .bg-gray-100\/50 { background-color: rgba(236, 236, 236, 0.5); }
  .bg-gray-200 { background-color: rgb(227, 227, 227); }
  .bg-gray-200\! { background-color: rgb(227, 227, 227) !important; }
  .bg-gray-200\/70 { background-color: rgba(227, 227, 227, 0.7); }
  .bg-gray-300 { background-color: rgb(205, 205, 205); }
  .bg-gray-300\! { background-color: rgb(205, 205, 205) !important; }
  .bg-gray-300\/60 { background-color: rgba(205, 205, 205, 0.6); }
  .bg-gray-400 { background-color: rgb(180, 180, 180); }
  .bg-gray-500 { background-color: rgb(155, 155, 155); }
  .bg-gray-600 { background-color: rgb(103, 103, 103); }
  .bg-gray-700 { background-color: rgb(66, 66, 66); }
  .bg-gray-800 { background-color: rgb(33, 33, 33); }
  .bg-gray-900 { background-color: rgb(23, 23, 23); }
  .bg-gray-900\/20 { background-color: rgba(23, 23, 23, 0.2); }
  .bg-gray-950 { background-color: rgb(13, 13, 13); }
  .bg-gray-950\/5 { background-color: rgba(13, 13, 13, 0.05); }
  .bg-gray-solid-0 { background-color: rgb(255, 255, 255); }
  .bg-gray-solid-50 { background-color: rgb(249, 249, 249); }
  .bg-gray-solid-75 { background-color: rgb(243, 243, 243); }
  .bg-gray-solid-100 { background-color: rgb(232, 232, 232); }
  .bg-gray-solid-200 { background-color: rgb(205, 205, 205); }
  .bg-gray-solid-300 { background-color: rgb(175, 175, 175); }
  .bg-gray-solid-400 { background-color: rgb(143, 143, 143); }
  .bg-gray-solid-500 { background-color: rgb(93, 93, 93); }
  .bg-gray-solid-600 { background-color: rgb(65, 65, 65); }
  .bg-gray-solid-700 { background-color: rgb(48, 48, 48); }
  .bg-gray-solid-800 { background-color: rgb(33, 33, 33); }
  .bg-gray-solid-900 { background-color: rgb(24, 24, 24); }
  .bg-gray-solid-1000 { background-color: rgb(13, 13, 13); }
  .bg-green-25 { background-color: rgb(237, 250, 242); }
  .bg-green-50 { background-color: rgb(217, 244, 228); }
  .bg-green-75 { background-color: rgb(184, 235, 204); }
  .bg-green-100 { background-color: rgb(140, 223, 173); }
  .bg-green-100\! { background-color: rgb(140, 223, 173) !important; }
  .bg-green-200 { background-color: rgb(102, 212, 146); }
  .bg-green-300 { background-color: rgb(64, 201, 119); }
  .bg-green-400 { background-color: rgb(4, 184, 76); }
  .bg-green-400\! { background-color: rgb(4, 184, 76) !important; }
  .bg-green-500 { background-color: rgb(0, 162, 64); }
  .bg-green-500\/10 { background-color: rgba(0, 162, 64, 0.1); }
  .bg-green-500\/30 { background-color: rgba(0, 162, 64, 0.3); }
  .bg-green-600 { background-color: rgb(0, 134, 53); }
  .bg-green-600\/5 { background-color: rgba(0, 134, 53, 0.05); }
  .bg-green-600\/10 { background-color: rgba(0, 134, 53, 0.1); }
  .bg-green-600\/15 { background-color: rgba(0, 134, 53, 0.15); }
  .bg-green-700 { background-color: rgb(0, 105, 42); }
  .bg-green-800 { background-color: rgb(0, 79, 31); }
  .bg-green-900 { background-color: rgb(0, 55, 22); }
  .bg-green-1000 { background-color: rgb(0, 18, 7); }
  .bg-orange-25 { background-color: rgb(255, 245, 240); }
  .bg-orange-50 { background-color: rgb(255, 231, 217); }
  .bg-orange-75 { background-color: rgb(255, 207, 180); }
  .bg-orange-100 { background-color: rgb(255, 183, 144); }
  .bg-orange-200 { background-color: rgb(255, 158, 108); }
  .bg-orange-300 { background-color: rgb(255, 133, 73); }
  .bg-orange-400 { background-color: rgb(251, 106, 34); }
  .bg-orange-400\/5 { background-color: rgba(251, 106, 34, 0.05); }
  .bg-orange-500 { background-color: rgb(226, 85, 7); }
  .bg-orange-600 { background-color: rgb(185, 72, 13); }
  .bg-orange-700 { background-color: rgb(146, 59, 15); }
  .bg-orange-800 { background-color: rgb(109, 46, 15); }
  .bg-orange-900 { background-color: rgb(74, 34, 6); }
  .bg-orange-1000 { background-color: rgb(33, 17, 7); }
  .bg-pink-25 { background-color: rgb(255, 244, 249); }
  .bg-pink-50 { background-color: rgb(255, 232, 243); }
  .bg-pink-75 { background-color: rgb(255, 212, 232); }
  .bg-pink-100 { background-color: rgb(255, 186, 218); }
  .bg-pink-200 { background-color: rgb(255, 163, 206); }
  .bg-pink-300 { background-color: rgb(255, 140, 193); }
  .bg-pink-400 { background-color: rgb(255, 102, 173); }
  .bg-pink-500 { background-color: rgb(224, 76, 145); }
  .bg-pink-600 { background-color: rgb(186, 67, 122); }
  .bg-pink-700 { background-color: rgb(150, 60, 103); }
  .bg-pink-800 { background-color: rgb(110, 44, 74); }
  .bg-pink-900 { background-color: rgb(77, 31, 52); }
  .bg-pink-1000 { background-color: rgb(26, 10, 17); }
  .bg-purple-25 { background-color: rgb(249, 245, 254); }
  .bg-purple-50 { background-color: rgb(239, 229, 254); }
  .bg-purple-75 { background-color: rgb(224, 206, 253); }
  .bg-purple-100 { background-color: rgb(206, 176, 251); }
  .bg-purple-200 { background-color: rgb(190, 149, 250); }
  .bg-purple-300 { background-color: rgb(173, 123, 249); }
  .bg-purple-400 { background-color: rgb(146, 79, 247); }
  .bg-purple-500 { background-color: rgb(128, 70, 217); }
  .bg-purple-600 { background-color: rgb(107, 58, 180); }
  .bg-purple-700 { background-color: rgb(83, 45, 141); }
  .bg-purple-800 { background-color: rgb(63, 34, 106); }
  .bg-purple-900 { background-color: rgb(44, 24, 74); }
  .bg-purple-1000 { background-color: rgb(16, 10, 25); }
  .bg-red-25 { background-color: rgb(255, 240, 240); }
  .bg-red-50 { background-color: rgb(255, 225, 224); }
  .bg-red-75 { background-color: rgb(255, 198, 197); }
  .bg-red-100 { background-color: rgb(255, 164, 162); }
  .bg-red-100\! { background-color: rgb(255, 164, 162) !important; }
  .bg-red-200 { background-color: rgb(255, 133, 131); }
  .bg-red-300 { background-color: rgb(255, 103, 100); }
  .bg-red-400 { background-color: rgb(250, 66, 62); }
  .bg-red-400\! { background-color: rgb(250, 66, 62) !important; }
  .bg-red-500 { background-color: rgb(224, 46, 42); }
  .bg-red-500\/10 { background-color: rgba(224, 46, 42, 0.1); }
  .bg-red-500\/30 { background-color: rgba(224, 46, 42, 0.3); }
  .bg-red-600 { background-color: rgb(186, 38, 35); }
  .bg-red-700 { background-color: rgb(145, 30, 27); }
  .bg-red-800 { background-color: rgb(110, 22, 21); }
  .bg-red-900 { background-color: rgb(77, 16, 14); }
  .bg-red-1000 { background-color: rgb(31, 9, 9); }
  .bg-token-bg-elevated-primary { background-color: var(--bg-elevated-prima=
ry); }
  .bg-token-bg-elevated-secondary { background-color: var(--bg-elevated-sec=
ondary); }
  .bg-token-bg-primary { background-color: var(--bg-primary); }
  .bg-token-bg-scrim { background-color: var(--bg-scrim); }
  .bg-token-bg-secondary { background-color: var(--bg-secondary); }
  .bg-token-bg-status-error { background-color: var(--bg-status-error); }
  .bg-token-bg-status-warning { background-color: var(--bg-status-warning);=
 }
  .bg-token-bg-tertiary { background-color: var(--bg-tertiary); }
  .bg-token-border-default { background-color: var(--border-default); }
  .bg-token-border-heavy { background-color: var(--border-heavy); }
  .bg-token-border-light { background-color: var(--border-light); }
  .bg-token-border-medium { background-color: var(--border-medium); }
  .bg-token-border-status-error { background-color: var(--border-status-err=
or); }
  .bg-token-border-status-warning { background-color: var(--border-status-w=
arning); }
  .bg-token-border-xlight { background-color: var(--border-xlight); }
  .bg-token-composer-blue-bg { background-color: var(--composer-blue-bg); }
  .bg-token-composer-surface { background-color: var(--composer-surface); }
  .bg-token-hint-bg { background-color: var(--hint-bg); }
  .bg-token-icon-accent { background-color: var(--icon-accent); }
  .bg-token-icon-inverted { background-color: var(--icon-inverted); }
  .bg-token-icon-inverted-static { background-color: var(--icon-inverted-st=
atic); }
  .bg-token-icon-primary { background-color: var(--icon-primary); }
  .bg-token-icon-secondary { background-color: var(--icon-secondary); }
  .bg-token-icon-status-error { background-color: var(--icon-status-error);=
 }
  .bg-token-icon-status-warning { background-color: var(--icon-status-warni=
ng); }
  .bg-token-icon-tertiary { background-color: var(--icon-tertiary); }
  .bg-token-interactive-bg-accent-default { background-color: var(--interac=
tive-bg-accent-default); }
  .bg-token-interactive-bg-accent-hover { background-color: var(--interacti=
ve-bg-accent-hover); }
  .bg-token-interactive-bg-accent-inactive { background-color: var(--intera=
ctive-bg-accent-inactive); }
  .bg-token-interactive-bg-accent-press { background-color: var(--interacti=
ve-bg-accent-press); }
  .bg-token-interactive-bg-danger-primary-default { background-color: var(-=
-interactive-bg-danger-primary-default); }
  .bg-token-interactive-bg-danger-primary-hover { background-color: var(--i=
nteractive-bg-danger-primary-hover); }
  .bg-token-interactive-bg-danger-primary-inactive { background-color: var(=
--interactive-bg-danger-primary-inactive); }
  .bg-token-interactive-bg-danger-primary-press { background-color: var(--i=
nteractive-bg-danger-primary-press); }
  .bg-token-interactive-bg-danger-secondary-default { background-color: var=
(--interactive-bg-danger-secondary-default); }
  .bg-token-interactive-bg-danger-secondary-hover { background-color: var(-=
-interactive-bg-danger-secondary-hover); }
  .bg-token-interactive-bg-danger-secondary-inactive { background-color: va=
r(--interactive-bg-danger-secondary-inactive); }
  .bg-token-interactive-bg-danger-secondary-press { background-color: var(-=
-interactive-bg-danger-secondary-press); }
  .bg-token-interactive-bg-primary-default { background-color: var(--intera=
ctive-bg-primary-default); }
  .bg-token-interactive-bg-primary-hover { background-color: var(--interact=
ive-bg-primary-hover); }
  .bg-token-interactive-bg-primary-inactive { background-color: var(--inter=
active-bg-primary-inactive); }
  .bg-token-interactive-bg-primary-press { background-color: var(--interact=
ive-bg-primary-press); }
  .bg-token-interactive-bg-primary-selected { background-color: var(--inter=
active-bg-primary-selected); }
  .bg-token-interactive-bg-secondary-default { background-color: var(--inte=
ractive-bg-secondary-default); }
  .bg-token-interactive-bg-secondary-hover { background-color: var(--intera=
ctive-bg-secondary-hover); }
  .bg-token-interactive-bg-secondary-inactive { background-color: var(--int=
eractive-bg-secondary-inactive); }
  .bg-token-interactive-bg-secondary-press { background-color: var(--intera=
ctive-bg-secondary-press); }
  .bg-token-interactive-bg-secondary-selected { background-color: var(--int=
eractive-bg-secondary-selected); }
  .bg-token-interactive-bg-tertiary-default { background-color: var(--inter=
active-bg-tertiary-default); }
  .bg-token-interactive-bg-tertiary-hover { background-color: var(--interac=
tive-bg-tertiary-hover); }
  .bg-token-interactive-bg-tertiary-inactive { background-color: var(--inte=
ractive-bg-tertiary-inactive); }
  .bg-token-interactive-bg-tertiary-press { background-color: var(--interac=
tive-bg-tertiary-press); }
  .bg-token-interactive-bg-tertiary-selected { background-color: var(--inte=
ractive-bg-tertiary-selected); }
  .bg-token-interactive-border-danger-secondary-default { background-color:=
 var(--interactive-border-danger-secondary-default); }
  .bg-token-interactive-border-danger-secondary-hover { background-color: v=
ar(--interactive-border-danger-secondary-hover); }
  .bg-token-interactive-border-danger-secondary-inactive { background-color=
: var(--interactive-border-danger-secondary-inactive); }
  .bg-token-interactive-border-danger-secondary-press { background-color: v=
ar(--interactive-border-danger-secondary-press); }
  .bg-token-interactive-border-focus { background-color: var(--interactive-=
border-focus); }
  .bg-token-interactive-border-secondary-default { background-color: var(--=
interactive-border-secondary-default); }
  .bg-token-interactive-border-secondary-hover { background-color: var(--in=
teractive-border-secondary-hover); }
  .bg-token-interactive-border-secondary-inactive { background-color: var(-=
-interactive-border-secondary-inactive); }
  .bg-token-interactive-border-secondary-press { background-color: var(--in=
teractive-border-secondary-press); }
  .bg-token-interactive-border-tertiary-default { background-color: var(--i=
nteractive-border-tertiary-default); }
  .bg-token-interactive-border-tertiary-hover { background-color: var(--int=
eractive-border-tertiary-hover); }
  .bg-token-interactive-border-tertiary-inactive { background-color: var(--=
interactive-border-tertiary-inactive); }
  .bg-token-interactive-border-tertiary-press { background-color: var(--int=
eractive-border-tertiary-press); }
  .bg-token-interactive-icon-accent-default { background-color: var(--inter=
active-icon-accent-default); }
  .bg-token-interactive-icon-accent-hover { background-color: var(--interac=
tive-icon-accent-hover); }
  .bg-token-interactive-icon-accent-inactive { background-color: var(--inte=
ractive-icon-accent-inactive); }
  .bg-token-interactive-icon-accent-press { background-color: var(--interac=
tive-icon-accent-press); }
  .bg-token-interactive-icon-accent-selected { background-color: var(--inte=
ractive-icon-accent-selected); }
  .bg-token-interactive-icon-danger-primary-default { background-color: var=
(--interactive-icon-danger-primary-default); }
  .bg-token-interactive-icon-danger-primary-hover { background-color: var(-=
-interactive-icon-danger-primary-hover); }
  .bg-token-interactive-icon-danger-primary-inactive { background-color: va=
r(--interactive-icon-danger-primary-inactive); }
  .bg-token-interactive-icon-danger-primary-press { background-color: var(-=
-interactive-icon-danger-primary-press); }
  .bg-token-interactive-icon-danger-secondary-default { background-color: v=
ar(--interactive-icon-danger-secondary-default); }
  .bg-token-interactive-icon-danger-secondary-hover { background-color: var=
(--interactive-icon-danger-secondary-hover); }
  .bg-token-interactive-icon-danger-secondary-inactive { background-color: =
var(--interactive-icon-danger-secondary-inactive); }
  .bg-token-interactive-icon-danger-secondary-press { background-color: var=
(--interactive-icon-danger-secondary-press); }
  .bg-token-interactive-icon-primary-default { background-color: var(--inte=
ractive-icon-primary-default); }
  .bg-token-interactive-icon-primary-hover { background-color: var(--intera=
ctive-icon-primary-hover); }
  .bg-token-interactive-icon-primary-inactive { background-color: var(--int=
eractive-icon-primary-inactive); }
  .bg-token-interactive-icon-primary-press { background-color: var(--intera=
ctive-icon-primary-press); }
  .bg-token-interactive-icon-primary-selected { background-color: var(--int=
eractive-icon-primary-selected); }
  .bg-token-interactive-icon-secondary-default { background-color: var(--in=
teractive-icon-secondary-default); }
  .bg-token-interactive-icon-secondary-hover { background-color: var(--inte=
ractive-icon-secondary-hover); }
  .bg-token-interactive-icon-secondary-inactive { background-color: var(--i=
nteractive-icon-secondary-inactive); }
  .bg-token-interactive-icon-secondary-press { background-color: var(--inte=
ractive-icon-secondary-press); }
  .bg-token-interactive-icon-secondary-selected { background-color: var(--i=
nteractive-icon-secondary-selected); }
  .bg-token-interactive-icon-tertiary-default { background-color: var(--int=
eractive-icon-tertiary-default); }
  .bg-token-interactive-icon-tertiary-hover { background-color: var(--inter=
active-icon-tertiary-hover); }
  .bg-token-interactive-icon-tertiary-inactive { background-color: var(--in=
teractive-icon-tertiary-inactive); }
  .bg-token-interactive-icon-tertiary-press { background-color: var(--inter=
active-icon-tertiary-press); }
  .bg-token-interactive-icon-tertiary-selected { background-color: var(--in=
teractive-icon-tertiary-selected); }
  .bg-token-interactive-label-accent-default { background-color: var(--inte=
ractive-label-accent-default); }
  .bg-token-interactive-label-accent-hover { background-color: var(--intera=
ctive-label-accent-hover); }
  .bg-token-interactive-label-accent-inactive { background-color: var(--int=
eractive-label-accent-inactive); }
  .bg-token-interactive-label-accent-press { background-color: var(--intera=
ctive-label-accent-press); }
  .bg-token-interactive-label-accent-selected { background-color: var(--int=
eractive-label-accent-selected); }
  .bg-token-interactive-label-danger-primary-default { background-color: va=
r(--interactive-label-danger-primary-default); }
  .bg-token-interactive-label-danger-primary-hover { background-color: var(=
--interactive-label-danger-primary-hover); }
  .bg-token-interactive-label-danger-primary-inactive { background-color: v=
ar(--interactive-label-danger-primary-inactive); }
  .bg-token-interactive-label-danger-primary-press { background-color: var(=
--interactive-label-danger-primary-press); }
  .bg-token-interactive-label-danger-secondary-default { background-color: =
var(--interactive-label-danger-secondary-default); }
  .bg-token-interactive-label-danger-secondary-hover { background-color: va=
r(--interactive-label-danger-secondary-hover); }
  .bg-token-interactive-label-danger-secondary-inactive { background-color:=
 var(--interactive-label-danger-secondary-inactive); }
  .bg-token-interactive-label-danger-secondary-press { background-color: va=
r(--interactive-label-danger-secondary-press); }
  .bg-token-interactive-label-primary-default { background-color: var(--int=
eractive-label-primary-default); }
  .bg-token-interactive-label-primary-hover { background-color: var(--inter=
active-label-primary-hover); }
  .bg-token-interactive-label-primary-inactive { background-color: var(--in=
teractive-label-primary-inactive); }
  .bg-token-interactive-label-primary-press { background-color: var(--inter=
active-label-primary-press); }
  .bg-token-interactive-label-primary-selected { background-color: var(--in=
teractive-label-primary-selected); }
  .bg-token-interactive-label-secondary-default { background-color: var(--i=
nteractive-label-secondary-default); }
  .bg-token-interactive-label-secondary-hover { background-color: var(--int=
eractive-label-secondary-hover); }
  .bg-token-interactive-label-secondary-inactive { background-color: var(--=
interactive-label-secondary-inactive); }
  .bg-token-interactive-label-secondary-press { background-color: var(--int=
eractive-label-secondary-press); }
  .bg-token-interactive-label-secondary-selected { background-color: var(--=
interactive-label-secondary-selected); }
  .bg-token-interactive-label-tertiary-default { background-color: var(--in=
teractive-label-tertiary-default); }
  .bg-token-interactive-label-tertiary-hover { background-color: var(--inte=
ractive-label-tertiary-hover); }
  .bg-token-interactive-label-tertiary-inactive { background-color: var(--i=
nteractive-label-tertiary-inactive); }
  .bg-token-interactive-label-tertiary-press { background-color: var(--inte=
ractive-label-tertiary-press); }
  .bg-token-interactive-label-tertiary-selected { background-color: var(--i=
nteractive-label-tertiary-selected); }
  .bg-token-main-surface-primary { background-color: var(--main-surface-pri=
mary); }
  .bg-token-main-surface-primary\! { background-color: var(--main-surface-p=
rimary) !important; }
  .bg-token-main-surface-primary-inverse { background-color: var(--main-sur=
face-primary-inverse); }
  .bg-token-main-surface-primary\/10 { background-color: color-mix(in oklab=
,var(--main-surface-primary)10%,transparent); }
  .bg-token-main-surface-secondary { background-color: var(--main-surface-s=
econdary); }
  .bg-token-main-surface-secondary\! { background-color: var(--main-surface=
-secondary) !important; }
  .bg-token-main-surface-secondary-selected { background-color: var(--main-=
surface-secondary-selected); }
  .bg-token-main-surface-tertiary { background-color: var(--main-surface-te=
rtiary); }
  .bg-token-main-surface-tertiary\! { background-color: var(--main-surface-=
tertiary) !important; }
  .bg-token-message-surface { background-color: var(--message-surface); }
  .bg-token-sidebar-surface { background-color: var(--sidebar-surface); }
  .bg-token-sidebar-surface-primary { background-color: var(--sidebar-surfa=
ce-primary); }
  .bg-token-sidebar-surface-secondary { background-color: var(--sidebar-sur=
face-secondary); }
  .bg-token-sidebar-surface-tertiary { background-color: var(--sidebar-surf=
ace-tertiary); }
  .bg-token-surface-error { background-color: rgb(var(--surface-error)/1); =
}
  .bg-token-surface-error\/5 { background-color: color-mix(in oklab,rgb(var=
(--surface-error)/1) 5%,transparent); }
  .bg-token-text-accent { background-color: var(--text-accent); }
  .bg-token-text-inverted { background-color: var(--text-inverted); }
  .bg-token-text-inverted-static { background-color: var(--text-inverted-st=
atic); }
  .bg-token-text-primary { background-color: var(--text-primary); }
  .bg-token-text-primary\! { background-color: var(--text-primary) !importa=
nt; }
  .bg-token-text-quaternary { background-color: var(--text-quaternary); }
  .bg-token-text-secondary { background-color: var(--text-secondary); }
  .bg-token-text-status-error { background-color: var(--text-status-error);=
 }
  .bg-token-text-status-warning { background-color: var(--text-status-warni=
ng); }
  .bg-token-text-tertiary { background-color: var(--text-tertiary); }
  .bg-token-utility-scrollbar { background-color: var(--utility-scrollbar);=
 }
  .bg-transparent { background-color: rgba(0, 0, 0, 0); }
  .bg-transparent\! { background-color: rgba(0, 0, 0, 0) !important; }
  .bg-white { background-color: rgb(255, 255, 255); }
  .bg-white\! { background-color: rgb(255, 255, 255) !important; }
  .bg-white\/10 { background-color: rgba(255, 255, 255, 0.1); }
  .bg-white\/25 { background-color: rgba(255, 255, 255, 0.25); }
  .bg-white\/50 { background-color: rgba(255, 255, 255, 0.5); }
  .bg-white\/60 { background-color: rgba(255, 255, 255, 0.6); }
  .bg-white\/70 { background-color: rgba(255, 255, 255, 0.7); }
  .bg-white\/80 { background-color: rgba(255, 255, 255, 0.8); }
  .bg-white\/95 { background-color: rgba(255, 255, 255, 0.95); }
  .bg-yellow-25 { background-color: rgb(255, 251, 237); }
  .bg-yellow-50 { background-color: rgb(255, 246, 217); }
  .bg-yellow-75 { background-color: rgb(255, 238, 184); }
  .bg-yellow-100 { background-color: rgb(255, 228, 140); }
  .bg-yellow-200 { background-color: rgb(255, 219, 102); }
  .bg-yellow-300 { background-color: rgb(255, 210, 64); }
  .bg-yellow-400 { background-color: rgb(255, 195, 0); }
  .bg-yellow-400\/40 { background-color: rgba(255, 195, 0, 0.4); }
  .bg-yellow-400\/60 { background-color: rgba(255, 195, 0, 0.6); }
  .bg-yellow-500 { background-color: rgb(224, 172, 0); }
  .bg-yellow-600 { background-color: rgb(186, 142, 0); }
  .bg-yellow-700 { background-color: rgb(145, 111, 0); }
  .bg-yellow-800 { background-color: rgb(110, 84, 0); }
  .bg-yellow-900 { background-color: rgb(77, 59, 0); }
  .bg-yellow-1000 { background-color: rgb(26, 20, 0); }
  .bg-gradient-to-r { --tw-gradient-position: to right in oklab; }
  .bg-gradient-to-r, .bg-gradient-to-t { background-image: linear-gradient(=
var(--tw-gradient-stops)); }
  .bg-gradient-to-t { --tw-gradient-position: to top in oklab; }
  .bg-linear-to-b { --tw-gradient-position: to bottom in oklab; }
  .bg-linear-to-b, .bg-linear-to-br { background-image: linear-gradient(var=
(--tw-gradient-stops)); }
  .bg-linear-to-br { --tw-gradient-position: to bottom right in oklab; }
  .bg-linear-to-l { --tw-gradient-position: to left in oklab; }
  .bg-linear-to-l, .bg-linear-to-r { background-image: linear-gradient(var(=
--tw-gradient-stops)); }
  .bg-linear-to-r { --tw-gradient-position: to right in oklab; }
  .bg-linear-to-t { --tw-gradient-position: to top in oklab; background-ima=
ge: linear-gradient(var(--tw-gradient-stops)); }
  .bg-none { background-image: none; }
  .bg-vert-light-gradient { background-image: linear-gradient(rgba(255, 255=
, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }
  .from-\[var\(--main-surface-background\)\] { --tw-gradient-from: var(--ma=
in-surface-background); --tw-gradient-stops: var(--tw-gradient-via-stops,va=
r(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-pos=
ition),var(--tw-gradient-to)var(--tw-gradient-to-position)); }
  .from-purple-400 { --tw-gradient-from: #924ff7; --tw-gradient-stops: var(=
--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)=
var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-=
position)); }
  .from-token-main-surface-primary { --tw-gradient-from: var(--main-surface=
-primary); --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradie=
nt-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--=
tw-gradient-to)var(--tw-gradient-to-position)); }
  .from-token-main-surface-secondary { --tw-gradient-from: var(--main-surfa=
ce-secondary); --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gr=
adient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),va=
r(--tw-gradient-to)var(--tw-gradient-to-position)); }
  .from-token-text-tertiary { --tw-gradient-from: var(--text-tertiary); --t=
w-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),v=
ar(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to=
)var(--tw-gradient-to-position)); }
  .from-transparent { --tw-gradient-from: transparent; --tw-gradient-stops:=
 var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-=
from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradien=
t-to-position)); }
  .from-white { --tw-gradient-from: #fff; --tw-gradient-stops: var(--tw-gra=
dient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw=
-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position=
)); }
  .from-white\/0 { --tw-gradient-from: oklab(0% 0 0/0); --tw-gradient-stops=
: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient=
-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradie=
nt-to-position)); }
  .from-10\% { --tw-gradient-from-position: 10%; }
  .from-50\% { --tw-gradient-from-position: 50%; }
  .from-60\% { --tw-gradient-from-position: 60%; }
  .via-\[rgba\(255\,255\,255\,0\.8\)\] { --tw-gradient-via: #fffc; --tw-gra=
dient-via-stops: var(--tw-gradient-position),var(--tw-gradient-from)var(--t=
w-gradient-from-position),var(--tw-gradient-via)var(--tw-gradient-via-posit=
ion),var(--tw-gradient-to)var(--tw-gradient-to-position); --tw-gradient-sto=
ps: var(--tw-gradient-via-stops); }
  .via-black\/20 { --tw-gradient-via: oklab(0% none none/.2); --tw-gradient=
-via-stops: var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gra=
dient-from-position),var(--tw-gradient-via)var(--tw-gradient-via-position),=
var(--tw-gradient-to)var(--tw-gradient-to-position); --tw-gradient-stops: v=
ar(--tw-gradient-via-stops); }
  .via-pink-500 { --tw-gradient-via: #e04c91; --tw-gradient-via-stops: var(=
--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-posit=
ion),var(--tw-gradient-via)var(--tw-gradient-via-position),var(--tw-gradien=
t-to)var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient=
-via-stops); }
  .via-token-border-heavy { --tw-gradient-via: var(--border-heavy); --tw-gr=
adient-via-stops: var(--tw-gradient-position),var(--tw-gradient-from)var(--=
tw-gradient-from-position),var(--tw-gradient-via)var(--tw-gradient-via-posi=
tion),var(--tw-gradient-to)var(--tw-gradient-to-position); --tw-gradient-st=
ops: var(--tw-gradient-via-stops); }
  .via-transparent { --tw-gradient-via: transparent; --tw-gradient-via-stop=
s: var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-fro=
m-position),var(--tw-gradient-via)var(--tw-gradient-via-position),var(--tw-=
gradient-to)var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-g=
radient-via-stops); }
  .via-30\% { --tw-gradient-via-position: 30%; }
  .to-black\/30 { --tw-gradient-to: oklab(0% none none/.3); --tw-gradient-s=
tops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-grad=
ient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gr=
adient-to-position)); }
  .to-red-500 { --tw-gradient-to: #e02e2a; --tw-gradient-stops: var(--tw-gr=
adient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--t=
w-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-positio=
n)); }
  .to-transparent { --tw-gradient-to: transparent; --tw-gradient-stops: var=
(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from=
)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to=
-position)); }
  .to-white\/20 { --tw-gradient-to: oklab(100% 0 5.96046e-8/.2); --tw-gradi=
ent-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw=
-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--=
tw-gradient-to-position)); }
  .to-100\% { --tw-gradient-to-position: 100%; }
  .bg-auto { background-size: auto; }
  .bg-contain { background-size: contain; }
  .bg-cover { background-size: cover; }
  .bg-clip-padding { background-clip: padding-box; }
  .bg-center { background-position: 50% center; }
  .bg-no-repeat { background-repeat: no-repeat; }
  .bg-repeat { background-repeat: repeat; }
  .fill-current { fill: currentcolor; }
  .fill-token-main-surface-primary { fill: var(--main-surface-primary); }
  .fill-transparent { fill: rgba(0, 0, 0, 0); }
  .fill-yellow-500 { fill: rgb(224, 172, 0); }
  .stroke-\[rgba\(0\,0\,0\,0\.1\)\] { stroke: rgba(0, 0, 0, 0.1); }
  .stroke-\[rgba\(0\,0\,0\,0\.32\)\] { stroke: rgba(0, 0, 0, 0.32); }
  .stroke-black { stroke: rgb(0, 0, 0); }
  .stroke-black\/10 { stroke: oklab(0 none none / 0.1); }
  .stroke-blue-200 { stroke: rgb(102, 181, 255); }
  .stroke-brand-purple\/25 { stroke: rgba(171, 104, 255, 0.25); }
  .stroke-gray-300 { stroke: rgb(205, 205, 205); }
  .stroke-gray-400 { stroke: rgb(180, 180, 180); }
  .stroke-token-main-surface-tertiary { stroke: var(--main-surface-tertiary=
); }
  .stroke-white { stroke: rgb(255, 255, 255); }
  .stroke-0 { stroke-width: 0; }
  .stroke-2 { stroke-width: 2px; }
  .stroke-3 { stroke-width: 3px; }
  .stroke-4 { stroke-width: 4px; }
  .object-contain { object-fit: contain; }
  .object-cover { object-fit: cover; }
  .object-fill { object-fit: fill; }
  .object-scale-down { object-fit: scale-down; }
  .object-bottom { object-position: center bottom; }
  .object-center { object-position: center center; }
  .p-0 { padding: calc(var(--spacing)*0); }
  .p-0\! { padding: calc(var(--spacing)*0) !important; }
  .p-0\.5 { padding: calc(var(--spacing)*.5); }
  .p-1 { padding: calc(var(--spacing)*1); }
  .p-1\! { padding: calc(var(--spacing)*1) !important; }
  .p-1\.5 { padding: calc(var(--spacing)*1.5); }
  .p-2 { padding: calc(var(--spacing)*2); }
  .p-2\.5 { padding: calc(var(--spacing)*2.5); }
  .p-3 { padding: calc(var(--spacing)*3); }
  .p-4 { padding: calc(var(--spacing)*4); }
  .p-5 { padding: calc(var(--spacing)*5); }
  .p-6 { padding: calc(var(--spacing)*6); }
  .p-7 { padding: calc(var(--spacing)*7); }
  .p-8 { padding: calc(var(--spacing)*8); }
  .p-9 { padding: calc(var(--spacing)*9); }
  .p-10 { padding: calc(var(--spacing)*10); }
  .p-14 { padding: calc(var(--spacing)*14); }
  .p-\[1px\] { padding: 1px; }
  .p-\[2px\] { padding: 2px; }
  .p-\[3px\] { padding: 3px; }
  .p-\[4px\] { padding: 4px; }
  .p-\[8rem\] { padding: 8rem; }
  .p-\[10px\] { padding: 10px; }
  .p-\[20px_20dvw\] { padding: 20px 20dvw; }
  .p-\[20vw\] { padding: 20vw; }
  .p-\[22px\] { padding: 22px; }
  .p-snc-1 { padding: var(--snc-1); }
  .px-\(--thread-content-margin\) { padding-inline: var(--thread-content-ma=
rgin); }
  .px-0 { padding-inline: calc(var(--spacing)*0); }
  .px-0\! { padding-inline: calc(var(--spacing)*0) !important; }
  .px-0\.5 { padding-inline: calc(var(--spacing)*.5); }
  .px-1 { padding-inline: calc(var(--spacing)*1); }
  .px-1\.5 { padding-inline: calc(var(--spacing)*1.5); }
  .px-2 { padding-inline: calc(var(--spacing)*2); }
  .px-2\.5 { padding-inline: calc(var(--spacing)*2.5); }
  .px-3 { padding-inline: calc(var(--spacing)*3); }
  .px-3\.5 { padding-inline: calc(var(--spacing)*3.5); }
  .px-4 { padding-inline: calc(var(--spacing)*4); }
  .px-5 { padding-inline: calc(var(--spacing)*5); }
  .px-6 { padding-inline: calc(var(--spacing)*6); }
  .px-7 { padding-inline: calc(var(--spacing)*7); }
  .px-8 { padding-inline: calc(var(--spacing)*8); }
  .px-10 { padding-inline: calc(var(--spacing)*10); }
  .px-12 { padding-inline: calc(var(--spacing)*12); }
  .px-16 { padding-inline: calc(var(--spacing)*16); }
  .px-20 { padding-inline: calc(var(--spacing)*20); }
  .px-24 { padding-inline: calc(var(--spacing)*24); }
  .px-\[1rem\] { padding-inline: 1rem; }
  .px-\[2px\] { padding-inline: 2px; }
  .px-\[4px\] { padding-inline: 4px; }
  .px-\[16px\] { padding-inline: 16px; }
  .px-\[22px\] { padding-inline: 22px; }
  .px-px { padding-inline: 1px; }
  .px-snc-1 { padding-inline: var(--snc-1); }
  .px-snc-2 { padding-inline: var(--snc-2); }
  .px-snc-results-padding { padding-inline: var(--snc-results-padding); }
  .py-0 { padding-block: calc(var(--spacing)*0); }
  .py-0\! { padding-block: calc(var(--spacing)*0) !important; }
  .py-0\.5 { padding-block: calc(var(--spacing)*.5); }
  .py-1 { padding-block: calc(var(--spacing)*1); }
  .py-1\.5 { padding-block: calc(var(--spacing)*1.5); }
  .py-2 { padding-block: calc(var(--spacing)*2); }
  .py-2\! { padding-block: calc(var(--spacing)*2) !important; }
  .py-2\.5 { padding-block: calc(var(--spacing)*2.5); }
  .py-3 { padding-block: calc(var(--spacing)*3); }
  .py-3\.5 { padding-block: calc(var(--spacing)*3.5); }
  .py-4 { padding-block: calc(var(--spacing)*4); }
  .py-5 { padding-block: calc(var(--spacing)*5); }
  .py-6 { padding-block: calc(var(--spacing)*6); }
  .py-8 { padding-block: calc(var(--spacing)*8); }
  .py-10 { padding-block: calc(var(--spacing)*10); }
  .py-12 { padding-block: calc(var(--spacing)*12); }
  .py-15 { padding-block: calc(var(--spacing)*15); }
  .py-16 { padding-block: calc(var(--spacing)*16); }
  .py-20 { padding-block: calc(var(--spacing)*20); }
  .py-24 { padding-block: calc(var(--spacing)*24); }
  .py-32 { padding-block: calc(var(--spacing)*32); }
  .py-\[0\.2rem\] { padding-block: 0.2rem; }
  .py-\[0\.108em\] { padding-block: 0.108em; }
  .py-\[1px\] { padding-block: 1px; }
  .py-\[5px\] { padding-block: 5px; }
  .py-\[7px\] { padding-block: 7px; }
  .py-\[12px\] { padding-block: 12px; }
  .py-\[15px\] { padding-block: 15px; }
  .py-snc-1 { padding-block: var(--snc-1); }
  .ps-0 { padding-inline-start: calc(var(--spacing)*0); }
  .ps-0\! { padding-inline-start: calc(var(--spacing)*0) !important; }
  .ps-0\.5 { padding-inline-start: calc(var(--spacing)*.5); }
  .ps-1 { padding-inline-start: calc(var(--spacing)*1); }
  .ps-1\.5 { padding-inline-start: calc(var(--spacing)*1.5); }
  .ps-2 { padding-inline-start: calc(var(--spacing)*2); }
  .ps-2\.5 { padding-inline-start: calc(var(--spacing)*2.5); }
  .ps-3 { padding-inline-start: calc(var(--spacing)*3); }
  .ps-4 { padding-inline-start: calc(var(--spacing)*4); }
  .ps-4\! { padding-inline-start: calc(var(--spacing)*4) !important; }
  .ps-5 { padding-inline-start: calc(var(--spacing)*5); }
  .ps-6 { padding-inline-start: calc(var(--spacing)*6); }
  .ps-7 { padding-inline-start: calc(var(--spacing)*7); }
  .ps-8 { padding-inline-start: calc(var(--spacing)*8); }
  .ps-10 { padding-inline-start: calc(var(--spacing)*10); }
  .ps-12 { padding-inline-start: calc(var(--spacing)*12); }
  .ps-16 { padding-inline-start: calc(var(--spacing)*16); }
  .ps-\[3\.25rem\] { padding-inline-start: 3.25rem; }
  .ps-\[14px\] { padding-inline-start: 14px; }
  .ps-\[20px\] { padding-inline-start: 20px; }
  .ps-\[22px\] { padding-inline-start: 22px; }
  .pe-0 { padding-inline-end: calc(var(--spacing)*0); }
  .pe-0\! { padding-inline-end: calc(var(--spacing)*0) !important; }
  .pe-1 { padding-inline-end: calc(var(--spacing)*1); }
  .pe-1\.5 { padding-inline-end: calc(var(--spacing)*1.5); }
  .pe-2 { padding-inline-end: calc(var(--spacing)*2); }
  .pe-2\.5 { padding-inline-end: calc(var(--spacing)*2.5); }
  .pe-3 { padding-inline-end: calc(var(--spacing)*3); }
  .pe-3\! { padding-inline-end: calc(var(--spacing)*3) !important; }
  .pe-3\.5 { padding-inline-end: calc(var(--spacing)*3.5); }
  .pe-4 { padding-inline-end: calc(var(--spacing)*4); }
  .pe-5 { padding-inline-end: calc(var(--spacing)*5); }
  .pe-6 { padding-inline-end: calc(var(--spacing)*6); }
  .pe-8 { padding-inline-end: calc(var(--spacing)*8); }
  .pe-9 { padding-inline-end: calc(var(--spacing)*9); }
  .pe-10 { padding-inline-end: calc(var(--spacing)*10); }
  .pe-12 { padding-inline-end: calc(var(--spacing)*12); }
  .pe-14 { padding-inline-end: calc(var(--spacing)*14); }
  .pe-\[15px\] { padding-inline-end: 15px; }
  .pt-0 { padding-top: calc(var(--spacing)*0); }
  .pt-0\.5 { padding-top: calc(var(--spacing)*.5); }
  .pt-1 { padding-top: calc(var(--spacing)*1); }
  .pt-1\.5 { padding-top: calc(var(--spacing)*1.5); }
  .pt-2 { padding-top: calc(var(--spacing)*2); }
  .pt-2\.5 { padding-top: calc(var(--spacing)*2.5); }
  .pt-3 { padding-top: calc(var(--spacing)*3); }
  .pt-3\! { padding-top: calc(var(--spacing)*3) !important; }
  .pt-3\.5 { padding-top: calc(var(--spacing)*3.5); }
  .pt-4 { padding-top: calc(var(--spacing)*4); }
  .pt-5 { padding-top: calc(var(--spacing)*5); }
  .pt-6 { padding-top: calc(var(--spacing)*6); }
  .pt-7 { padding-top: calc(var(--spacing)*7); }
  .pt-8 { padding-top: calc(var(--spacing)*8); }
  .pt-12 { padding-top: calc(var(--spacing)*12); }
  .pt-16 { padding-top: calc(var(--spacing)*16); }
  .pt-20 { padding-top: calc(var(--spacing)*20); }
  .pt-\[1\.125rem\] { padding-top: 1.125rem; }
  .pt-\[2px\] { padding-top: 2px; }
  .pt-\[3px\] { padding-top: 3px; }
  .pt-\[4\.5px\] { padding-top: 4.5px; }
  .pt-\[4px\] { padding-top: 4px; }
  .pt-\[13px\] { padding-top: 13px; }
  .pt-\[18px\] { padding-top: 18px; }
  .pt-\[71px\] { padding-top: 71px; }
  .pt-px { padding-top: 1px; }
  [dir=3D"ltr"] .pr-4 { padding-right: calc(var(--spacing)*4); }
  [dir=3D"rtl"] .pr-4 { padding-left: calc(var(--spacing)*4); }
  .pb-0 { padding-bottom: calc(var(--spacing)*0); }
  .pb-0\.5 { padding-bottom: calc(var(--spacing)*.5); }
  .pb-1 { padding-bottom: calc(var(--spacing)*1); }
  .pb-2 { padding-bottom: calc(var(--spacing)*2); }
  .pb-3 { padding-bottom: calc(var(--spacing)*3); }
  .pb-4 { padding-bottom: calc(var(--spacing)*4); }
  .pb-5 { padding-bottom: calc(var(--spacing)*5); }
  .pb-6 { padding-bottom: calc(var(--spacing)*6); }
  .pb-7 { padding-bottom: calc(var(--spacing)*7); }
  .pb-8 { padding-bottom: calc(var(--spacing)*8); }
  .pb-9 { padding-bottom: calc(var(--spacing)*9); }
  .pb-10 { padding-bottom: calc(var(--spacing)*10); }
  .pb-12 { padding-bottom: calc(var(--spacing)*12); }
  .pb-16 { padding-bottom: calc(var(--spacing)*16); }
  .pb-20 { padding-bottom: calc(var(--spacing)*20); }
  .pb-24 { padding-bottom: calc(var(--spacing)*24); }
  .pb-25 { padding-bottom: calc(var(--spacing)*25); }
  .pb-32 { padding-bottom: calc(var(--spacing)*32); }
  .pb-\[1px\] { padding-bottom: 1px; }
  .pb-\[5svh\] { padding-bottom: 5svh; }
  .pb-\[10px\] { padding-bottom: 10px; }
  .pb-\[22px\] { padding-bottom: 22px; }
  .pb-\[30vh\] { padding-bottom: 30vh; }
  .pb-\[200px\] { padding-bottom: 200px; }
  .pb-px { padding-bottom: 1px; }
  .pb-snc-1 { padding-bottom: var(--snc-1); }
  .pb-snc-2 { padding-bottom: var(--snc-2); }
  [dir=3D"ltr"] .pl-2 { padding-left: calc(var(--spacing)*2); }
  [dir=3D"rtl"] .pl-2 { padding-right: calc(var(--spacing)*2); }
  [dir=3D"ltr"] .pl-4 { padding-left: calc(var(--spacing)*4); }
  [dir=3D"rtl"] .pl-4 { padding-right: calc(var(--spacing)*4); }
  .text-center { text-align: center; }
  .text-end { text-align: end; }
  [dir=3D"ltr"] .text-left { text-align: left; }
  [dir=3D"ltr"] .text-right, [dir=3D"rtl"] .text-left { text-align: right; =
}
  [dir=3D"rtl"] .text-right { text-align: left; }
  .text-start { text-align: start; }
  .indent-\[0\.1em\] { text-indent: 0.1em; }
  .align-\[-0\.2em\] { vertical-align: -0.2em; }
  .align-baseline { vertical-align: baseline; }
  .align-middle { vertical-align: middle; }
  .align-top { vertical-align: top; }
  .font-circle { font-family: Circle, system-ui, sans-serif; }
  .font-mono { font-family: ui-monospace, SFMono-Regular, "SF Mono", Menlo,=
 Consolas, "Liberation Mono", monospace; }
  .font-oai { font-family: "OpenAI Sans", sans-serif; }
  .font-sans { font-family: ui-sans-serif, -apple-system, system-ui, "Segoe=
 UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", =
"Segoe UI Symbol"; }
  .text-body-small-regular { font-size: var(--text-body-small-regular); fon=
t-weight: var(--tw-font-weight,var(--text-body-small-regular--font-weight))=
; letter-spacing: var(--tw-tracking,var(--text-body-small-regular--letter-s=
pacing)); line-height: var(--tw-leading,var(--text-body-small-regular--line=
-height)); }
  .text-caption-regular { font-size: var(--text-caption-regular); font-weig=
ht: var(--tw-font-weight,var(--text-caption-regular--font-weight)); letter-=
spacing: var(--tw-tracking,var(--text-caption-regular--letter-spacing)); li=
ne-height: var(--tw-leading,var(--text-caption-regular--line-height)); }
  .text-heading-3 { font-size: var(--text-heading-3); font-weight: var(--tw=
-font-weight,var(--text-heading-3--font-weight)); letter-spacing: var(--tw-=
tracking,var(--text-heading-3--letter-spacing)); line-height: var(--tw-lead=
ing,var(--text-heading-3--line-height)); }
  .text-2xl { font-size: var(--text-2xl); line-height: var(--tw-leading,var=
(--text-2xl--line-height)); }
  .text-3xl { font-size: var(--text-3xl); line-height: var(--tw-leading,var=
(--text-3xl--line-height)); }
  .text-4xl { font-size: var(--text-4xl); line-height: var(--tw-leading,var=
(--text-4xl--line-height)); }
  .text-5xl { font-size: var(--text-5xl); line-height: var(--tw-leading,var=
(--text-5xl--line-height)); }
  .text-6xl { font-size: var(--text-6xl); line-height: var(--tw-leading,var=
(--text-6xl--line-height)); }
  .text-7xl { font-size: var(--text-7xl); line-height: var(--tw-leading,var=
(--text-7xl--line-height)); }
  .text-base { font-size: var(--text-base); line-height: var(--tw-leading,v=
ar(--text-base--line-height)); }
  .text-base\! { font-size: var(--text-base) !important; line-height: var(-=
-tw-leading,var(--text-base--line-height)) !important; }
  .text-lg { font-size: var(--text-lg); line-height: var(--tw-leading,var(-=
-text-lg--line-height)); }
  .text-sm { font-size: var(--text-sm); line-height: var(--tw-leading,var(-=
-text-sm--line-height)); }
  .text-sm\! { font-size: var(--text-sm) !important; line-height: var(--tw-=
leading,var(--text-sm--line-height)) !important; }
  .text-xl { font-size: var(--text-xl); line-height: var(--tw-leading,var(-=
-text-xl--line-height)); }
  .text-xs { font-size: var(--text-xs); line-height: var(--tw-leading,var(-=
-text-xs--line-height)); }
  .\[font-size\:var\(--pill-font-size\,14px\)\] { font-size: var(--pill-fon=
t-size,14px); }
  .text-\[0\.5em\] { font-size: 0.5em; }
  .text-\[0\.5rem\] { font-size: 0.5rem; }
  .text-\[0\.65rem\] { font-size: 0.65rem; }
  .text-\[0\.70rem\] { font-size: 0.7rem; }
  .text-\[0\.75rem\] { font-size: 0.75rem; }
  .text-\[0\.5625em\] { font-size: 0.5625em; }
  .text-\[5px\] { font-size: 5px; }
  .text-\[8px\] { font-size: 8px; }
  .text-\[9px\] { font-size: 9px; }
  .text-\[10px\] { font-size: 10px; }
  .text-\[11px\] { font-size: 11px; }
  .text-\[12px\] { font-size: 12px; }
  .text-\[13px\] { font-size: 13px; }
  .text-\[14px\] { font-size: 14px; }
  .text-\[15px\] { font-size: 15px; }
  .text-\[17px\] { font-size: 17px; }
  .text-\[18px\] { font-size: 18px; }
  .text-\[20px\] { font-size: 20px; }
  .text-\[22px\] { font-size: 22px; }
  .text-\[28px\] { font-size: 28px; }
  .text-\[32px\] { font-size: 32px; }
  .text-\[34px\] { font-size: 34px; }
  .text-\[40px\] { font-size: 40px; }
  .text-body { }
  .text-panel-title { }
  .leading-3 { --tw-leading: calc(var(--spacing)*3); line-height: calc(var(=
--spacing)*3); }
  .leading-4 { --tw-leading: calc(var(--spacing)*4); line-height: calc(var(=
--spacing)*4); }
  .leading-5 { --tw-leading: calc(var(--spacing)*5); line-height: calc(var(=
--spacing)*5); }
  .leading-6 { --tw-leading: calc(var(--spacing)*6); line-height: calc(var(=
--spacing)*6); }
  .leading-6\! { --tw-leading: calc(var(--spacing)*6) !important; line-heig=
ht: calc(var(--spacing)*6) !important; }
  .leading-7 { --tw-leading: calc(var(--spacing)*7); line-height: calc(var(=
--spacing)*7); }
  .leading-9 { --tw-leading: calc(var(--spacing)*9); line-height: calc(var(=
--spacing)*9); }
  .leading-\[0\] { --tw-leading: 0; line-height: 0; }
  .leading-\[1\.2\] { --tw-leading: 1.2; line-height: 1.2; }
  .leading-\[1\.4\] { --tw-leading: 1.4; line-height: 1.4; }
  .leading-\[15px\] { --tw-leading: 15px; line-height: 15px; }
  .leading-\[17px\] { --tw-leading: 17px; line-height: 17px; }
  .leading-\[18px\] { --tw-leading: 18px; line-height: 18px; }
  .leading-\[22px\] { --tw-leading: 22px; line-height: 22px; }
  .leading-\[34px\] { --tw-leading: 34px; line-height: 34px; }
  .leading-\[42px\] { --tw-leading: 42px; line-height: 42px; }
  .leading-\[50px\] { --tw-leading: 50px; line-height: 50px; }
  .leading-none { --tw-leading: 1; line-height: 1; }
  .leading-none\! { --tw-leading: 1 !important; line-height: 1 !important; =
}
  .leading-normal { --tw-leading: var(--leading-normal); line-height: var(-=
-leading-normal); }
  .leading-relaxed { --tw-leading: var(--leading-relaxed); line-height: var=
(--leading-relaxed); }
  .leading-snug { --tw-leading: var(--leading-snug); line-height: var(--lea=
ding-snug); }
  .leading-tight { --tw-leading: var(--leading-tight); line-height: var(--l=
eading-tight); }
  .font-\[550\] { --tw-font-weight: 550; font-weight: 550; }
  .font-black { --tw-font-weight: var(--font-weight-black); font-weight: va=
r(--font-weight-black); }
  .font-bold { --tw-font-weight: var(--font-weight-bold); font-weight: var(=
--font-weight-bold); }
  .font-extralight { --tw-font-weight: var(--font-weight-extralight); font-=
weight: var(--font-weight-extralight); }
  .font-light { --tw-font-weight: var(--font-weight-light); font-weight: va=
r(--font-weight-light); }
  .font-medium { --tw-font-weight: var(--font-weight-medium); font-weight: =
var(--font-weight-medium); }
  .font-medium\! { --tw-font-weight: var(--font-weight-medium) !important; =
font-weight: var(--font-weight-medium) !important; }
  .font-normal { --tw-font-weight: var(--font-weight-normal); font-weight: =
var(--font-weight-normal); }
  .font-normal\! { --tw-font-weight: var(--font-weight-normal) !important; =
font-weight: var(--font-weight-normal) !important; }
  .font-semibold { --tw-font-weight: var(--font-weight-semibold); font-weig=
ht: var(--font-weight-semibold); }
  .font-semibold\! { --tw-font-weight: var(--font-weight-semibold) !importa=
nt; font-weight: var(--font-weight-semibold) !important; }
  .\[font-weight\:700\] { font-weight: 700; }
  .tracking-\[-0\.18px\] { --tw-tracking: -.18px; letter-spacing: -0.18px; =
}
  .tracking-\[-0\.23px\] { --tw-tracking: -.23px; letter-spacing: -0.23px; =
}
  .tracking-\[-0\.28px\] { --tw-tracking: -.28px; letter-spacing: -0.28px; =
}
  .tracking-\[-0\.42px\] { --tw-tracking: -.42px; letter-spacing: -0.42px; =
}
  .tracking-\[-0\.197499px\] { --tw-tracking: -.197499px; letter-spacing: -=
0.197499px; }
  .tracking-\[0\.38px\] { --tw-tracking: .38px; letter-spacing: 0.38px; }
  .tracking-condensed { --tw-tracking: -.154px; letter-spacing: -0.154px; }
  .tracking-tight { --tw-tracking: var(--tracking-tight); letter-spacing: v=
ar(--tracking-tight); }
  .tracking-tighter { --tw-tracking: var(--tracking-tighter); letter-spacin=
g: var(--tracking-tighter); }
  .tracking-wide { --tw-tracking: var(--tracking-wide); letter-spacing: var=
(--tracking-wide); }
  .tracking-widest { --tw-tracking: var(--tracking-widest); letter-spacing:=
 var(--tracking-widest); }
  .\[text-wrap\:pretty\] { text-wrap: pretty; }
  .text-balance { text-wrap: balance; }
  .text-nowrap { text-wrap: nowrap; }
  .text-pretty { text-wrap: pretty; }
  .text-wrap { text-wrap: wrap; }
  .\[overflow-wrap\:anywhere\] { overflow-wrap: anywhere; }
  .break-words { overflow-wrap: break-word; }
  .break-all { word-break: break-all; }
  .overflow-ellipsis { text-overflow: ellipsis; }
  .text-clip { text-overflow: clip; }
  .text-ellipsis { text-overflow: ellipsis; }
  .whitespace-break-spaces { white-space: break-spaces; }
  .whitespace-normal { white-space: normal; }
  .whitespace-nowrap { white-space: nowrap; }
  .whitespace-pre { white-space: pre; }
  .whitespace-pre\! { white-space: pre !important; }
  .whitespace-pre-line { white-space: pre-line; }
  .whitespace-pre-wrap { white-space: pre-wrap; }
  .whitespace-pre-wrap\! { white-space: pre-wrap !important; }
  .\!text-\(--interactive-label-accent-default\) { color: var(--interactive=
-label-accent-default) !important; }
  .\[color\:var\(--pill-color\,var\(--text-secondary\)\)\] { color: var(--p=
ill-color,var(--text-secondary)); }
  .text-\[\#5D5D5D\] { color: rgb(93, 93, 93); }
  .text-\[\#007AFF\] { color: rgb(0, 122, 255); }
  .text-\[\#008C2E\] { color: rgb(0, 140, 46); }
  .text-\[\#8E3CF3\] { color: rgb(142, 60, 243); }
  .text-\[\#8F8F8F\] { color: rgb(143, 143, 143); }
  .text-\[\#10A37F\] { color: rgb(16, 163, 127); }
  .text-\[\#30a633\] { color: rgb(48, 166, 51); }
  .text-\[\#0088FF\] { color: rgb(0, 136, 255); }
  .text-\[\#0285ff\] { color: rgb(2, 133, 255); }
  .text-\[\#2964aa\]\! { color: rgb(41, 100, 170) !important; }
  .text-\[\#59636E\] { color: rgb(89, 99, 110); }
  .text-\[\#AF52DE\] { color: rgb(175, 82, 222); }
  .text-\[\#D6303D\] { color: rgb(214, 48, 61); }
  .text-\[\#DC2626\] { color: rgb(220, 38, 38); }
  .text-\[\#FE7600\] { color: rgb(254, 118, 0); }
  .text-\[\#f14d42\] { color: rgb(241, 77, 66); }
  .text-\[rgb\(18\,100\,163\)\] { color: rgb(18, 100, 163); }
  .text-\[var\(--main-surface-primary-inverse\)\] { color: var(--main-surfa=
ce-primary-inverse); }
  .text-\[var\(--sidebar-surface-secondary\)\] { color: var(--sidebar-surfa=
ce-secondary); }
  .text-black { color: rgb(0, 0, 0); }
  .text-black\! { color: rgb(0, 0, 0) !important; }
  .text-black\/50 { color: oklab(0 none none / 0.5); }
  .text-blue-100 { color: rgb(153, 206, 255); }
  .text-blue-400 { color: rgb(2, 133, 255); }
  .text-blue-400\! { color: rgb(2, 133, 255) !important; }
  .text-blue-500 { color: rgb(1, 105, 204); }
  .text-blue-600 { color: rgb(0, 79, 153); }
  .text-blue-800 { color: rgb(1, 53, 102); }
  .text-brand-blue-800 { color: rgb(0, 102, 222); }
  .text-brand-green-800 { color: rgb(5, 167, 70); }
  .text-brand-purple { color: rgb(171, 104, 255); }
  .text-current { color: currentcolor; }
  .text-danger { color: rgb(224, 46, 42); }
  .text-gray-100 { color: rgb(236, 236, 236); }
  .text-gray-200 { color: rgb(227, 227, 227); }
  .text-gray-300 { color: rgb(205, 205, 205); }
  .text-gray-400 { color: rgb(180, 180, 180); }
  .text-gray-500 { color: rgb(155, 155, 155); }
  .text-gray-600 { color: rgb(103, 103, 103); }
  .text-gray-700 { color: rgb(66, 66, 66); }
  .text-gray-800 { color: rgb(33, 33, 33); }
  .text-gray-900 { color: rgb(23, 23, 23); }
  .text-gray-950 { color: rgb(13, 13, 13); }
  .text-green-200 { color: rgb(102, 212, 146); }
  .text-green-500 { color: rgb(0, 162, 64); }
  .text-green-600 { color: rgb(0, 134, 53); }
  .text-green-700 { color: rgb(0, 105, 42); }
  .text-inherit { color: inherit; }
  .text-orange-300 { color: rgb(255, 133, 73); }
  .text-orange-400 { color: rgb(251, 106, 34); }
  .text-orange-500 { color: rgb(226, 85, 7); }
  .text-orange-600 { color: rgb(185, 72, 13); }
  .text-purple-600 { color: rgb(107, 58, 180); }
  .text-red-400 { color: rgb(250, 66, 62); }
  .text-red-500 { color: rgb(224, 46, 42); }
  .text-red-600 { color: rgb(186, 38, 35); }
  .text-red-700 { color: rgb(145, 30, 27); }
  .text-red-800 { color: rgb(110, 22, 21); }
  .text-red-900 { color: rgb(77, 16, 14); }
  .text-token-hint-text { color: var(--hint-text); }
  .text-token-icon-secondary { color: var(--icon-secondary); }
  .text-token-icon-tertiary { color: var(--icon-tertiary); }
  .text-token-interactive-label-accent-default { color: var(--interactive-l=
abel-accent-default); }
  .text-token-link { color: var(--link); }
  .text-token-main-surface-primary { color: var(--main-surface-primary); }
  .text-token-main-surface-primary\! { color: var(--main-surface-primary) !=
important; }
  .text-token-main-surface-primary-inverse { color: var(--main-surface-prim=
ary-inverse); }
  .text-token-main-surface-tertiary { color: var(--main-surface-tertiary); =
}
  .text-token-sidebar-icon { color: var(--sidebar-icon); }
  .text-token-sidebar-surface { color: var(--sidebar-surface); }
  .text-token-text-error { color: var(--text-error); }
  .text-token-text-inverted { color: var(--text-inverted); }
  .text-token-text-primary { color: var(--text-primary); }
  .text-token-text-primary\! { color: var(--text-primary) !important; }
  .text-token-text-quaternary { color: var(--text-quaternary); }
  .text-token-text-secondary { color: var(--text-secondary); }
  .text-token-text-secondary\! { color: var(--text-secondary) !important; }
  .text-token-text-tertiary { color: var(--text-tertiary); }
  .text-transparent { color: rgba(0, 0, 0, 0); }
  .text-white { color: rgb(255, 255, 255); }
  .text-white\! { color: rgb(255, 255, 255) !important; }
  .text-white\/25 { color: rgba(255, 255, 255, 0.25); }
  .text-yellow-500 { color: rgb(224, 172, 0); }
  .text-yellow-600 { color: rgb(186, 142, 0); }
  .text-yellow-700 { color: rgb(145, 111, 0); }
  .text-yellow-800 { color: rgb(110, 84, 0); }
  .capitalize { text-transform: capitalize; }
  .lowercase { text-transform: lowercase; }
  .normal-case { text-transform: none; }
  .uppercase { text-transform: uppercase; }
  .italic { font-style: italic; }
  .ordinal { --tw-ordinal: ordinal; }
  .ordinal, .tabular-nums { font-variant-numeric: var(--tw-ordinal,)var(--t=
w-slashed-zero,)var(--tw-numeric-figure,)var(--tw-numeric-spacing,)var(--tw=
-numeric-fraction,); }
  .tabular-nums { --tw-numeric-spacing: tabular-nums; }
  .line-through { text-decoration-line: line-through; }
  .no-underline { text-decoration-line: none; }
  .no-underline\! { text-decoration-line: none !important; }
  .underline { text-decoration-line: underline; }
  .underline\! { text-decoration-line: underline !important; }
  .decoration-token-link { text-decoration-color: var(--link); }
  .decoration-token-text-primary { text-decoration-color: var(--text-primar=
y); }
  .decoration-token-text-secondary { text-decoration-color: var(--text-seco=
ndary); }
  .decoration-dashed { text-decoration-style: dashed; }
  .decoration-\[4\%\] { text-decoration-thickness: 0.04em; }
  .underline-offset-1 { text-underline-offset: 1px; }
  .underline-offset-2 { text-underline-offset: 2px; }
  .underline-offset-4 { text-underline-offset: 4px; }
  .underline-offset-\[16\%\] { text-underline-offset: 16%; }
  .placeholder-gray-500::placeholder { color: rgb(155, 155, 155); }
  .placeholder-token-text-tertiary::placeholder { color: var(--text-tertiar=
y); }
  .opacity-0 { opacity: 0; }
  .opacity-5 { opacity: 0.05; }
  .opacity-10 { opacity: 0.1; }
  .opacity-20 { opacity: 0.2; }
  .opacity-25 { opacity: 0.25; }
  .opacity-30 { opacity: 0.3; }
  .opacity-35 { opacity: 0.35; }
  .opacity-40 { opacity: 0.4; }
  .opacity-45 { opacity: 0.45; }
  .opacity-50 { opacity: 0.5; }
  .opacity-60 { opacity: 0.6; }
  .opacity-65 { opacity: 0.65; }
  .opacity-70 { opacity: 0.7; }
  .opacity-75 { opacity: 0.75; }
  .opacity-80 { opacity: 0.8; }
  .opacity-85 { opacity: 0.85; }
  .opacity-90 { opacity: 0.9; }
  .opacity-100 { opacity: 1; }
  .opacity-100\! { opacity: 1 !important; }
  .opacity-\[0\.01\] { opacity: 0.01; }
  .mix-blend-darken { mix-blend-mode: darken; }
  .mix-blend-soft-light { mix-blend-mode: soft-light; }
  .shadow { --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color,#0000001a),0 1px=
 2px -1px var(--tw-shadow-color,#0000001a); }
  .shadow, .shadow-2xl { box-shadow: var(--tw-inset-shadow),var(--tw-inset-=
ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-sh=
adow); }
  .shadow-2xl { --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color,#00000=
040); }
  .shadow-\[0_-4px_32px_rgba\(0\,0\,0\,0\.08\)\] { --tw-shadow: 0 -4px 32px=
 var(--tw-shadow-color,#00000014); }
  .shadow-\[0_-4px_32px_rgba\(0\,0\,0\,0\.08\)\], .shadow-\[0_0_50px\] { bo=
x-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-=
offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .shadow-\[0_0_50px\] { --tw-shadow: 0 0 50px var(--tw-shadow-color,curren=
tcolor); }
  .shadow-\[0_0_64px_0_rgba\(0\,0\,0\,0\.07\)\] { --tw-shadow: 0 0 64px 0 v=
ar(--tw-shadow-color,#00000012); }
  .shadow-\[0_0_200px_0_rgba\(0\,0\,0\,0\.14\)\], .shadow-\[0_0_64px_0_rgba=
\(0\,0\,0\,0\.07\)\] { box-shadow: var(--tw-inset-shadow),var(--tw-inset-ri=
ng-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shad=
ow); }
  .shadow-\[0_0_200px_0_rgba\(0\,0\,0\,0\.14\)\] { --tw-shadow: 0 0 200px 0=
 var(--tw-shadow-color,#00000024); }
  .shadow-\[0_1px_0\] { --tw-shadow: 0 1px 0 var(--tw-shadow-color,currentc=
olor); }
  .shadow-\[0_1px_0\], .shadow-\[0_1px_1px_rgba\(0\,0\,0\,0\.03\)\,_0_4\.93=
747px_9\.05202px_rgba\(0\,0\,0\,0\.11\)\] { box-shadow: var(--tw-inset-shad=
ow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-=
shadow),var(--tw-shadow); }
  .shadow-\[0_1px_1px_rgba\(0\,0\,0\,0\.03\)\,_0_4\.93747px_9\.05202px_rgba=
\(0\,0\,0\,0\.11\)\] { --tw-shadow: 0 1px 1px var(--tw-shadow-color,#000000=
08),0 4.93747px 9.05202px var(--tw-shadow-color,#0000001c); }
  .shadow-\[0_1px_12px_0px_\#0000000B\] { --tw-shadow: 0 1px 12px 0px var(-=
-tw-shadow-color,#0000000b); }
  .shadow-\[0_1px_12px_0px_\#0000000B\], .shadow-\[0_2px_3px_0_rgba\(0\,0\,=
0\,0\.25\)\] { box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shado=
w),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .shadow-\[0_2px_3px_0_rgba\(0\,0\,0\,0\.25\)\] { --tw-shadow: 0 2px 3px 0=
 var(--tw-shadow-color,#00000040); }
  .shadow-\[0_2px_10px\] { --tw-shadow: 0 2px 10px var(--tw-shadow-color,cu=
rrentcolor); }
  .shadow-\[0_2px_10px\], .shadow-\[0_2px_16px_0_rgba\(0\,0\,0\,0\.04\)\] {=
 box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ri=
ng-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .shadow-\[0_2px_16px_0_rgba\(0\,0\,0\,0\.04\)\] { --tw-shadow: 0 2px 16px=
 0 var(--tw-shadow-color,#0000000a); }
  .shadow-\[0_4px_8px_-6px_rgb\(0_0_0_\/_0\.1\)\,0_0_1px_rgb\(0_0_0_\/_0\.4=
\)\] { --tw-shadow: 0 4px 8px -6px var(--tw-shadow-color,#0000001a),0 0 1px=
 var(--tw-shadow-color,#0006); }
  .shadow-\[0_4px_24px_-5px_rgba\(0\,0\,0\,0\.2\)\], .shadow-\[0_4px_8px_-6=
px_rgb\(0_0_0_\/_0\.1\)\,0_0_1px_rgb\(0_0_0_\/_0\.4\)\] { box-shadow: var(-=
-tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),=
var(--tw-ring-shadow),var(--tw-shadow); }
  .shadow-\[0_4px_24px_-5px_rgba\(0\,0\,0\,0\.2\)\] { --tw-shadow: 0 4px 24=
px -5px var(--tw-shadow-color,#0003); }
  .shadow-\[0_9px_9px_0px_rgba\(0\,0\,0\,0\.01\)\,_0_2px_5px_0px_rgba\(0\,0=
\,0\,0\.06\)\] { --tw-shadow: 0 9px 9px 0px var(--tw-shadow-color,#00000003=
),0 2px 5px 0px var(--tw-shadow-color,#0000000f); box-shadow: var(--tw-inse=
t-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw=
-ring-shadow),var(--tw-shadow); }
  .shadow-\[0_12px_24px_-6px_rgb\(0_0_0_\/_0\.1\)\,0_0_1px_rgb\(0_0_0_\/_0\=
.2\)\] { --tw-shadow: 0 12px 24px -6px var(--tw-shadow-color,#0000001a),0 0=
 1px var(--tw-shadow-color,#0003); box-shadow: var(--tw-inset-shadow),var(-=
-tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),v=
ar(--tw-shadow); }
  .shadow-\[0_12px_24px_-6px_rgb\(0_0_0_\/_0\.1\)\,0_0_12px_rgb\(0_0_0_\/_0=
\.2\)\] { --tw-shadow: 0 12px 24px -6px var(--tw-shadow-color,#0000001a),0 =
0 12px var(--tw-shadow-color,#0003); box-shadow: var(--tw-inset-shadow),var=
(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow)=
,var(--tw-shadow); }
  .shadow-\[0_12px_24px_-6px_rgb\(0_0_0_\/_0\.1\)\,_0_0_1px_rgb\(0_0_0_\/_0=
\.4\)\] { --tw-shadow: 0 12px 24px -6px var(--tw-shadow-color,#0000001a),0 =
0 1px var(--tw-shadow-color,#0006); box-shadow: var(--tw-inset-shadow),var(=
--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),=
var(--tw-shadow); }
  .shadow-\[0_12px_24px_-6px_rgb\(0_0_0_\/_0\.15\)\)\] { --tw-shadow: 0 12p=
x 24px -6px var(--tw-shadow-color,#00000026); box-shadow: var(--tw-inset-sh=
adow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-rin=
g-shadow),var(--tw-shadow); }
  .shadow-\[0_12px_32px_-12px_rgb\(0_0_0_\/_0\.2\)\,_0_0_1px_rgb\(0_0_0_\/_=
0\.3\)\] { --tw-shadow: 0 12px 32px -12px var(--tw-shadow-color,#0003),0 0 =
1px var(--tw-shadow-color,#0000004d); box-shadow: var(--tw-inset-shadow),va=
r(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow=
),var(--tw-shadow); }
  .shadow-\[0_12px_32px_-12px_rgb\(0_0_0_\/_0\.4\)\,0_0_1px_rgb\(0_0_0_\/_0=
\.2\)\] { --tw-shadow: 0 12px 32px -12px var(--tw-shadow-color,#0006),0 0 1=
px var(--tw-shadow-color,#0003); box-shadow: var(--tw-inset-shadow),var(--t=
w-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var=
(--tw-shadow); }
  .shadow-\[0_14px_62px_0_rgba\(0\,0\,0\,0\.25\)\] { --tw-shadow: 0 14px 62=
px 0 var(--tw-shadow-color,#00000040); }
  .shadow-\[0_14px_62px_0_rgba\(0\,0\,0\,0\.25\)\], .shadow-\[0_32px_48px_r=
gba\(0\,0\,0\,0\.175\)\,_0_0_1px_rgba\(0\,0\,0\,0\.2\)\] { box-shadow: var(=
--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow)=
,var(--tw-ring-shadow),var(--tw-shadow); }
  .shadow-\[0_32px_48px_rgba\(0\,0\,0\,0\.175\)\,_0_0_1px_rgba\(0\,0\,0\,0\=
.2\)\] { --tw-shadow: 0 32px 48px var(--tw-shadow-color,#0000002d),0 0 1px =
var(--tw-shadow-color,#0003); }
  .shadow-\[0px_0px_32px_rgba\(0\,0\,0\,0\.08\)\] { --tw-shadow: 0px 0px 32=
px var(--tw-shadow-color,#00000014); }
  .shadow-\[0px_0px_32px_rgba\(0\,0\,0\,0\.08\)\], .shadow-\[0px_0px_48px_r=
gba\(0\,0\,0\,0\.08\)\] { box-shadow: var(--tw-inset-shadow),var(--tw-inset=
-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-s=
hadow); }
  .shadow-\[0px_0px_48px_rgba\(0\,0\,0\,0\.08\)\] { --tw-shadow: 0px 0px 48=
px var(--tw-shadow-color,#00000014); }
  .shadow-\[0px_4px_14px_rgba\(0\,0\,0\,0\.06\)\] { --tw-shadow: 0px 4px 14=
px var(--tw-shadow-color,#0000000f); }
  .shadow-\[0px_4px_14px_rgba\(0\,0\,0\,0\.06\)\], .shadow-\[inset_0_0_0_1p=
x_rgba\(0\,0\,0\,0\.1\)\] { box-shadow: var(--tw-inset-shadow),var(--tw-ins=
et-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw=
-shadow); }
  .shadow-\[inset_0_0_0_1px_rgba\(0\,0\,0\,0\.1\)\] { --tw-shadow: inset 0 =
0 0 1px var(--tw-shadow-color,#0000001a); }
  .shadow-inner { --tw-shadow: inset 0 2px 4px 0 var(--tw-shadow-color,#000=
0000d); }
  .shadow-inner, .shadow-lg { box-shadow: var(--tw-inset-shadow),var(--tw-i=
nset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--=
tw-shadow); }
  .shadow-lg { --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color,#0000001=
a),0 4px 6px -4px var(--tw-shadow-color,#0000001a); }
  .shadow-md { --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color,#0000001a)=
,0 2px 4px -2px var(--tw-shadow-color,#0000001a); }
  .shadow-md, .shadow-none { box-shadow: var(--tw-inset-shadow),var(--tw-in=
set-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--t=
w-shadow); }
  .shadow-none { --tw-shadow: 0 0 #0000; }
  .shadow-none\! { --tw-shadow: 0 0 #0000 !important; box-shadow: var(--tw-=
inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(=
--tw-ring-shadow),var(--tw-shadow) !important; }
  .shadow-sm { --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color,#0000001a),0 =
1px 2px -1px var(--tw-shadow-color,#0000001a); }
  .shadow-sm, .shadow-xl { box-shadow: var(--tw-inset-shadow),var(--tw-inse=
t-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-=
shadow); }
  .shadow-xl { --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color,#0000001=
a),0 8px 10px -6px var(--tw-shadow-color,#0000001a); }
  .shadow-xs { --tw-shadow: 0 0 15px var(--tw-shadow-color,#0000001a); }
  .shadow-xs, .shadow-xxs { box-shadow: var(--tw-inset-shadow),var(--tw-ins=
et-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw=
-shadow); }
  .shadow-xxs { --tw-shadow: 0 0 2px 0 var(--tw-shadow-color,#0000000d),0 4=
px 6px 0 var(--tw-shadow-color,#00000005); }
  .ring { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(1px + var(--tw-=
ring-offset-width))var(--tw-ring-color,currentColor); }
  .ring, .ring-0 { box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-s=
hadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow);=
 }
  .ring-0 { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(var(--tw-ring=
-offset-width))var(--tw-ring-color,currentColor); }
  .ring-0\! { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(var(--tw-ri=
ng-offset-width))var(--tw-ring-color,currentColor) !important; box-shadow: =
var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-sha=
dow),var(--tw-ring-shadow),var(--tw-shadow) !important; }
  .ring-1 { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(1px + var(--t=
w-ring-offset-width))var(--tw-ring-color,currentColor); }
  .ring-1, .ring-2 { box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring=
-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow=
); }
  .ring-2 { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(2px + var(--t=
w-ring-offset-width))var(--tw-ring-color,currentColor); }
  .\[box-shadow\:var\(--sharp-edge-bottom-shadow-placeholder\)\] { box-shad=
ow: var(--sharp-edge-bottom-shadow-placeholder); }
  .\[box-shadow\:var\(--sharp-edge-top-shadow\)\] { box-shadow: var(--sharp=
-edge-top-shadow); }
  .\[box-shadow\:var\(--sharp-edge-top-shadow-placeholder\)\] { box-shadow:=
 var(--sharp-edge-top-shadow-placeholder); }
  .shadow-black\/3 { --tw-shadow-color: oklab(0% none none/.03); }
  .shadow-black\/5 { --tw-shadow-color: oklab(0% none none/.05); }
  .shadow-token-border-default { --tw-shadow-color: var(--border-default); =
}
  .ring-black { --tw-ring-color: #000; }
  .ring-transparent { --tw-ring-color: transparent; }
  .ring-white { --tw-ring-color: #fff; }
  .ring-offset-4 { --tw-ring-offset-width: 4px; --tw-ring-offset-shadow: va=
r(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-co=
lor); }
  .ring-offset-black { --tw-ring-offset-color: #000; }
  .outline-hidden { --tw-outline-style: none; outline-style: none; }
  @media (forced-colors: active) {
  .outline-hidden { outline: rgba(0, 0, 0, 0) solid 2px; outline-offset: 2p=
x; }
}
  .outline { outline-width: 1px; }
  .outline, .outline-0 { outline-style: var(--tw-outline-style); }
  .outline-0 { outline-width: 0px; }
  .outline-0\! { outline-style: var(--tw-outline-style) !important; outline=
-width: 0px !important; }
  .outline-1 { outline-width: 1px; }
  .outline-1, .outline-2 { outline-style: var(--tw-outline-style); }
  .outline-2 { outline-width: 2px; }
  .outline-offset-2 { outline-offset: 2px; }
  .outline-token-border-default { outline-color: var(--border-default); }
  .outline-token-border-medium { outline-color: var(--border-medium); }
  .outline-token-border-xlight { outline-color: var(--border-xlight); }
  .blur { --tw-blur: blur(8px); }
  .blur, .blur-2xl { filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-c=
ontrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw=
-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .blur-2xl { --tw-blur: blur(var(--blur-2xl)); }
  .blur-3xl { --tw-blur: blur(var(--blur-3xl)); }
  .blur-3xl, .blur-lg { filter: var(--tw-blur,)var(--tw-brightness,)var(--t=
w-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(-=
-tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .blur-lg { --tw-blur: blur(var(--blur-lg)); }
  .blur-sm { --tw-blur: blur(var(--blur-sm)); }
  .blur-sm, .blur-xl { filter: var(--tw-blur,)var(--tw-brightness,)var(--tw=
-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--=
tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .blur-xl { --tw-blur: blur(var(--blur-xl)); }
  .drop-shadow-\[0_6px_4px_var\(--shadow-color\)\] { --tw-drop-shadow: drop=
-shadow(0 6px 4px var(--shadow-color)); }
  .drop-shadow-\[0_12px_32px_rgba\(0\,0\,0\,0\.06\)\], .drop-shadow-\[0_6px=
_4px_var\(--shadow-color\)\] { filter: var(--tw-blur,)var(--tw-brightness,)=
var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert=
,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .drop-shadow-\[0_12px_32px_rgba\(0\,0\,0\,0\.06\)\] { --tw-drop-shadow: d=
rop-shadow(0 12px 32px #0000000f); }
  .drop-shadow-md { --tw-drop-shadow: drop-shadow(var(--drop-shadow-md)); }
  .drop-shadow-md, .drop-shadow-xs { filter: var(--tw-blur,)var(--tw-bright=
ness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-=
invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .drop-shadow-xs { --tw-drop-shadow: drop-shadow(var(--drop-shadow-xs)); }
  .grayscale { --tw-grayscale: grayscale(100%); }
  .grayscale, .grayscale-\[0\.6\] { filter: var(--tw-blur,)var(--tw-brightn=
ess,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-i=
nvert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .grayscale-\[0\.6\] { --tw-grayscale: grayscale(.6); }
  .invert { --tw-invert: invert(100%); }
  .invert, .sepia { filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-co=
ntrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-=
saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .sepia { --tw-sepia: sepia(100%); }
  .\[filter\:drop-shadow\(0_4px_4px_rgb\(0_0_0_\/0\.65\)\)\] { filter: drop=
-shadow(rgba(0, 0, 0, 0.65) 0px 4px 4px); }
  .filter { filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)=
var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate=
,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .backdrop-blur-3xl { --tw-backdrop-blur: blur(var(--blur-3xl)); }
  .backdrop-blur-3xl, .backdrop-blur-\[24px\] { backdrop-filter: var(--tw-b=
ackdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var=
(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-i=
nvert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-back=
drop-sepia,); }
  .backdrop-blur-\[24px\] { --tw-backdrop-blur: blur(24px); }
  .backdrop-blur-lg { --tw-backdrop-blur: blur(var(--blur-lg)); }
  .backdrop-blur-lg, .backdrop-blur-md { backdrop-filter: var(--tw-backdrop=
-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-b=
ackdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)=
var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-se=
pia,); }
  .backdrop-blur-md { --tw-backdrop-blur: blur(var(--blur-md)); }
  .backdrop-blur-xl { --tw-backdrop-blur: blur(var(--blur-xl)); }
  .backdrop-blur-xl, .backdrop-blur-xs { backdrop-filter: var(--tw-backdrop=
-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-b=
ackdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)=
var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-se=
pia,); }
  .backdrop-blur-xs { --tw-backdrop-blur: blur(var(--blur-xs)); }
  .backdrop-saturate-25 { --tw-backdrop-saturate: saturate(25%); backdrop-f=
ilter: var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backd=
rop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)va=
r(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-satura=
te,)var(--tw-backdrop-sepia,); }
  .transition { transition-duration: var(--tw-duration,var(--default-transi=
tion-duration)); transition-property: color, background-color, border-color=
, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, -=
-tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, transla=
te, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter; transi=
tion-timing-function: var(--tw-ease,var(--default-transition-timing-functio=
n)); }
  .transition-\[border-color\] { transition-duration: var(--tw-duration,var=
(--default-transition-duration)); transition-property: border-color; transi=
tion-timing-function: var(--tw-ease,var(--default-transition-timing-functio=
n)); }
  .transition-\[filter\] { transition-duration: var(--tw-duration,var(--def=
ault-transition-duration)); transition-property: filter; transition-timing-=
function: var(--tw-ease,var(--default-transition-timing-function)); }
  .transition-\[flex-basis\] { transition-duration: var(--tw-duration,var(-=
-default-transition-duration)); transition-property: flex-basis; transition=
-timing-function: var(--tw-ease,var(--default-transition-timing-function));=
 }
  .transition-\[mask\] { transition-duration: var(--tw-duration,var(--defau=
lt-transition-duration)); transition-property: -webkit-mask, mask; transiti=
on-timing-function: var(--tw-ease,var(--default-transition-timing-function)=
); }
  .transition-\[min-height\] { transition-duration: var(--tw-duration,var(-=
-default-transition-duration)); transition-property: min-height; transition=
-timing-function: var(--tw-ease,var(--default-transition-timing-function));=
 }
  .transition-\[opacity_transform\] { transition-duration: var(--tw-duratio=
n,var(--default-transition-duration)); transition-timing-function: var(--tw=
-ease,var(--default-transition-timing-function)); }
  .transition-\[stroke-dashoffset\] { transition-duration: var(--tw-duratio=
n,var(--default-transition-duration)); transition-property: stroke-dashoffs=
et; transition-timing-function: var(--tw-ease,var(--default-transition-timi=
ng-function)); }
  .transition-\[transform\,opacity\] { transition-duration: var(--tw-durati=
on,var(--default-transition-duration)); transition-property: transform, opa=
city; transition-timing-function: var(--tw-ease,var(--default-transition-ti=
ming-function)); }
  .transition-\[transform_--shadow-color\] { transition-duration: var(--tw-=
duration,var(--default-transition-duration)); transition-timing-function: v=
ar(--tw-ease,var(--default-transition-timing-function)); }
  .transition-\[transform_box-shadow\] { transition-duration: var(--tw-dura=
tion,var(--default-transition-duration)); transition-timing-function: var(-=
-tw-ease,var(--default-transition-timing-function)); }
  .transition-\[width\] { transition-duration: var(--tw-duration,var(--defa=
ult-transition-duration)); transition-property: width; transition-timing-fu=
nction: var(--tw-ease,var(--default-transition-timing-function)); }
  .transition-all { transition-duration: var(--tw-duration,var(--default-tr=
ansition-duration)); transition-property: all; transition-timing-function: =
var(--tw-ease,var(--default-transition-timing-function)); }
  .transition-colors { transition-duration: var(--tw-duration,var(--default=
-transition-duration)); transition-property: color, background-color, borde=
r-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-=
from, --tw-gradient-via, --tw-gradient-to; transition-timing-function: var(=
--tw-ease,var(--default-transition-timing-function)); }
  .transition-opacity { transition-duration: var(--tw-duration,var(--defaul=
t-transition-duration)); transition-property: opacity; transition-timing-fu=
nction: var(--tw-ease,var(--default-transition-timing-function)); }
  .transition-shadow { transition-duration: var(--tw-duration,var(--default=
-transition-duration)); transition-property: box-shadow; transition-timing-=
function: var(--tw-ease,var(--default-transition-timing-function)); }
  .transition-transform { transition-duration: var(--tw-duration,var(--defa=
ult-transition-duration)); transition-property: transform, translate, scale=
, rotate; transition-timing-function: var(--tw-ease,var(--default-transitio=
n-timing-function)); }
  .transition-width { transition-duration: var(--tw-duration,var(--default-=
transition-duration)); transition-property: width; transition-timing-functi=
on: var(--tw-ease,var(--default-transition-timing-function)); }
  .delay-0 { transition-delay: 0s; }
  .delay-75 { transition-delay: 75ms; }
  .delay-100 { transition-delay: 0.1s; }
  .duration-0 { --tw-duration: 0s; transition-duration: 0s; }
  .duration-50 { --tw-duration: 50ms; transition-duration: 50ms; }
  .duration-75 { --tw-duration: 75ms; transition-duration: 75ms; }
  .duration-100 { --tw-duration: .1s; transition-duration: 0.1s; }
  .duration-150 { --tw-duration: .15s; transition-duration: 0.15s; }
  .duration-175 { --tw-duration: .175s; transition-duration: 0.175s; }
  .duration-200 { --tw-duration: .2s; transition-duration: 0.2s; }
  .duration-300 { --tw-duration: .3s; transition-duration: 0.3s; }
  .duration-500 { --tw-duration: .5s; transition-duration: 0.5s; }
  .duration-700 { --tw-duration: .7s; transition-duration: 0.7s; }
  .duration-1000 { --tw-duration: 1s; transition-duration: 1s; }
  .duration-\[0\.24s\] { --tw-duration: .24s; transition-duration: 0.24s; }
  .duration-\[1\.5s\] { --tw-duration: 1.5s; transition-duration: 1.5s; }
  .ease-\[cubic-bezier\(0\.87\,_0\,_0\.13\,_1\)\] { --tw-ease: cubic-bezier=
(.87,0,.13,1); transition-timing-function: cubic-bezier(0.87, 0, 0.13, 1); =
}
  .ease-\[var\(--spring-bounce\)\] { --tw-ease: var(--spring-bounce); trans=
ition-timing-function: var(--spring-bounce); }
  .ease-in { --tw-ease: var(--ease-in); transition-timing-function: var(--e=
ase-in); }
  .ease-in-out { --tw-ease: var(--ease-in-out); transition-timing-function:=
 var(--ease-in-out); }
  .ease-linear { --tw-ease: linear; transition-timing-function: linear; }
  .ease-out { --tw-ease: var(--ease-out); transition-timing-function: var(-=
-ease-out); }
  .ease-spring-slow-bounce { --tw-ease: var(--spring-slow-bounce); transiti=
on-timing-function: var(--spring-slow-bounce); }
  .ease-spring-standard { --tw-ease: var(--spring-common); transition-timin=
g-function: var(--spring-common); }
  .will-change-\[opacity\,transform\] { will-change: opacity, transform; }
  .will-change-transform { will-change: transform; }
  .contain-inline-size { --tw-contain-size: inline-size; contain: var(--tw-=
contain-size,)var(--tw-contain-layout,)var(--tw-contain-paint,)var(--tw-con=
tain-style,); }
  .contain-content { contain: content; }
  .outline-none { --tw-outline-style: none; outline-style: none; }
  .select-none { user-select: none; }
  .select-text { user-select: text; }
  .\[--composer-overlap-px\:24px\] { --composer-overlap-px: 24px; }
  .\[--force-hide-label\:none\] { --force-hide-label: none; }
  .\[--panel-header-height\:var\(--screen-thread-header-min-height\)\] { --=
panel-header-height: var(--screen-thread-header-min-height); }
  .\[--pill-color\:var\(--text-secondary\)\] { --pill-color: var(--text-sec=
ondary); }
  .\[--pill-font-size\:13px\] { --pill-font-size: 13px; }
  .\[--shadow-color\:transparent\] { --shadow-color: transparent; }
  .\[--task-bg\:rgb\(250\,250\,250\)\] { --task-bg: #fafafa; }
  .\[--thread-content-margin\:--spacing\(4\)\] { --thread-content-margin: c=
alc(var(--spacing)*4); }
  .\[--thread-content-max-width\:32rem\] { --thread-content-max-width: 32re=
m; }
  .\[anchor-name\:--carousel\] { anchor-name: --carousel; }
  .\[grid-area\:_title\] { grid-area: title; }
  .\[grid-template-areas\:_\'title_action\'_\'description_action\'\] { grid=
-template-areas: "title action" "description action"; }
  .\[mask-image\:linear-gradient\(to_right\,black_33\%\,transparent_66\%\)\=
] { mask-image: linear-gradient(90deg, rgb(0, 0, 0) 33%, rgba(0, 0, 0, 0) 6=
6%); }
  .\[mask-position\:100\%_0\%\] { mask-position: 100% 0px; }
  .\[mask-size\:300\%_100\%\] { mask-size: 300% 100%; }
  .\[min-block-size\:6px\] { min-block-size: 6px; }
  .\[scrollbar-gutter\:stable\] { scrollbar-gutter: stable; }
  .\[scrollbar-width\:none\] { scrollbar-width: none; }
  .\[scrollbar-width\:thin\] { scrollbar-width: thin; }
  .\[text-box-trim\:trim-both\] { text-box-trim: trim-both; }
  .\[text-decoration-skip-ink\:auto\] { text-decoration-skip-ink: auto; }
  .\[text-underline-position\:from-font\] { text-underline-position: from-f=
ont; }
  .\[view-transition-name\:var\(--sidebar-popover\)\] { view-transition-nam=
e: var(--sidebar-popover); }
  .\[view-transition-name\:var\(--sidebar-slideover\)\] { view-transition-n=
ame: var(--sidebar-slideover); }
  .\[view-transition-name\:var\(--vt-active-image\)\] { view-transition-nam=
e: var(--vt-active-image); }
  .\[view-transition-name\:var\(--vt-composer\)\] { view-transition-name: v=
ar(--vt-composer); }
  .\[view-transition-name\:var\(--vt-composer-whisper-button\)\] { view-tra=
nsition-name: var(--vt-composer-whisper-button); }
  .\[view-transition-name\:var\(--vt-image-carousel\)\] { view-transition-n=
ame: var(--vt-image-carousel); }
  .\[view-transition-name\:var\(--vt-page-footer\)\] { view-transition-name=
: var(--vt-page-footer); }
  .\[view-transition-name\:var\(--vt-page-header\)\] { view-transition-name=
: var(--vt-page-header); }
  .\[view-transition-name\:var\(--vt-page-title\)\] { view-transition-name:=
 var(--vt-page-title); }
  .\[view-transition-name\:var\(--vt-scroll-buttons\)\] { view-transition-n=
ame: var(--vt-scroll-buttons); }
  .\[view-transition-name\:var\(--vt-tool-page-title\)\] { view-transition-=
name: var(--vt-tool-page-title); }
  .ring-inset { --tw-ring-inset: inset; }
  :is(.\*\:pointer-events-auto > *) { pointer-events: auto; }
  :is(.\*\:pointer-events-none > *) { pointer-events: none; }
  :is(.\*\:m-0 > *) { margin: calc(var(--spacing)*0); }
  :is(.\*\:h-full > *) { height: 100%; }
  :is(.\*\:w-full > *) { width: 100%; }
  :is(.\*\:flex-1 > *) { flex: 1 1 0%; }
  :is(.\*\:rounded-md > *) { border-radius: var(--radius-md); }
  :is(.\*\:bg-gray-300 > *) { background-color: rgb(205, 205, 205); }
  :is(.\*\:object-center > *) { object-position: center center; }
  :is(.\*\:p-4 > *) { padding: calc(var(--spacing)*4); }
  :is(.\*\:px-5 > *) { padding-inline: calc(var(--spacing)*5); }
  :is(.\*\:font-normal > *) { --tw-font-weight: var(--font-weight-normal); =
font-weight: var(--font-weight-normal); }
  :is(.\*\:shadow-lg > *) { --tw-shadow: 0 10px 15px -3px var(--tw-shadow-c=
olor,#0000001a),0 4px 6px -4px var(--tw-shadow-color,#0000001a); box-shadow=
: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-s=
hadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .group-focus-within\:text-token-text-secondary:is(:where(.group):focus-wi=
thin *) { color: var(--text-secondary); }
  .group-focus-within\/turn-messages\:pointer-events-auto:is(:where(.group\=
/turn-messages):focus-within *) { pointer-events: auto; }
  .group-focus-within\/turn-messages\:opacity-100:is(:where(.group\/turn-me=
ssages):focus-within *) { opacity: 1; }
  .group-focus-within\/turn-messages\:\[mask-position\:0_0\]:is(:where(.gro=
up\/turn-messages):focus-within *) { mask-position: 0px 0px; }
  @media (hover: hover) {
  .group-hover\:invisible:is(:where(.group):hover *) { visibility: hidden; =
}
  .group-hover\:visible:is(:where(.group):hover *) { visibility: visible; }
  .group-hover\:block:is(:where(.group):hover *) { display: block; }
  .group-hover\:flex:is(:where(.group):hover *) { display: flex; }
  .group-hover\:hidden:is(:where(.group):hover *) { display: none; }
  .group-hover\:-translate-y-\[1px\]:is(:where(.group):hover *) { --tw-tran=
slate-y: -1px; translate: var(--tw-translate-x)var(--tw-translate-y); }
  .group-hover\:translate-y-\[10px\]:is(:where(.group):hover *) { --tw-tran=
slate-y: 10px; translate: var(--tw-translate-x)var(--tw-translate-y); }
  .group-hover\:scale-100:is(:where(.group):hover *) { --tw-scale-x: 100%; =
--tw-scale-y: 100%; --tw-scale-z: 100%; scale: var(--tw-scale-x)var(--tw-sc=
ale-y); }
  .group-hover\:scale-\[1\.02\]:is(:where(.group):hover *) { scale: 1.02; }
  .group-hover\:rotate-\[-2deg\]:is(:where(.group):hover *) { rotate: -2deg=
; }
  .group-hover\:rotate-\[-5deg\]:is(:where(.group):hover *) { rotate: -5deg=
; }
  .group-hover\:border-token-text-primary:is(:where(.group):hover *) { bord=
er-color: var(--text-primary); }
  .group-hover\:border-t-\[\#0077FF\]:is(:where(.group):hover *) { border-t=
op-color: rgb(0, 119, 255); }
  .group-hover\:bg-gray-100:is(:where(.group):hover *) { background-color: =
rgb(236, 236, 236); }
  .group-hover\:bg-token-main-surface-primary:is(:where(.group):hover *) { =
background-color: var(--main-surface-primary); }
  .group-hover\:bg-token-main-surface-secondary:is(:where(.group):hover *) =
{ background-color: var(--main-surface-secondary); }
  .group-hover\:text-red-500:is(:where(.group):hover *) { color: rgb(224, 4=
6, 42); }
  .group-hover\:text-token-interactive-label-accent-default:is(:where(.grou=
p):hover *) { color: var(--interactive-label-accent-default); }
  .group-hover\:text-token-link:is(:where(.group):hover *) { color: var(--l=
ink); }
  .group-hover\:text-token-text-primary:is(:where(.group):hover *) { color:=
 var(--text-primary); }
  .group-hover\:text-token-text-secondary:is(:where(.group):hover *) { colo=
r: var(--text-secondary); }
  .group-hover\:underline:is(:where(.group):hover *) { text-decoration-line=
: underline; }
  .group-hover\:opacity-90:is(:where(.group):hover *) { opacity: 0.9; }
  .group-hover\:opacity-100:is(:where(.group):hover *) { opacity: 1; }
  .group-hover\:shadow-xl:is(:where(.group):hover *) { --tw-shadow: 0 20px =
25px -5px var(--tw-shadow-color,#0000001a),0 8px 10px -6px var(--tw-shadow-=
color,#0000001a); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-sh=
adow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); =
}
  .group-hover\:grayscale-0:is(:where(.group):hover *) { --tw-grayscale: gr=
ayscale(0%); filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,=
)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturat=
e,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .group-hover\/cards\:translate-x-\[-40\%\]:is(:where(.group\/cards):hover=
 *) { --tw-translate-x: -40%; translate: var(--tw-translate-x)var(--tw-tran=
slate-y); }
  .group-hover\/cards\:translate-x-\[4\%\]:is(:where(.group\/cards):hover *=
) { --tw-translate-x: 4%; translate: var(--tw-translate-x)var(--tw-translat=
e-y); }
  .group-hover\/cards\:translate-y-\[-2\%\]:is(:where(.group\/cards):hover =
*) { --tw-translate-y: -2%; translate: var(--tw-translate-x)var(--tw-transl=
ate-y); }
  .group-hover\/cards\:translate-y-\[10\%\]:is(:where(.group\/cards):hover =
*) { --tw-translate-y: 10%; translate: var(--tw-translate-x)var(--tw-transl=
ate-y); }
  .group-hover\/cards\:translate-y-\[12\%\]:is(:where(.group\/cards):hover =
*) { --tw-translate-y: 12%; translate: var(--tw-translate-x)var(--tw-transl=
ate-y); }
  .group-hover\/cards\:rotate-z-\[-16deg\]:is(:where(.group\/cards):hover *=
) { --tw-rotate-z: rotateZ(-16deg); transform: var(--tw-rotate-x)var(--tw-r=
otate-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y); }
  .group-hover\/cards\:rotate-z-\[1deg\]:is(:where(.group\/cards):hover *) =
{ --tw-rotate-z: rotateZ(1deg); transform: var(--tw-rotate-x)var(--tw-rotat=
e-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y); }
  .group-hover\/cards\:rotate-z-\[17deg\]:is(:where(.group\/cards):hover *)=
 { --tw-rotate-z: rotateZ(17deg); transform: var(--tw-rotate-x)var(--tw-rot=
ate-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y); }
  .group-hover\/cell\:opacity-0:is(:where(.group\/cell):hover *) { opacity:=
 0; }
  .group-hover\/cell\:opacity-100:is(:where(.group\/cell):hover *) { opacit=
y: 1; }
  .group-hover\/dalle-image\:visible:is(:where(.group\/dalle-image):hover *=
) { visibility: visible; }
  .group-hover\/dalle-image\:bg-black\/70:is(:where(.group\/dalle-image):ho=
ver *) { background-color: oklab(0 none none / 0.7); }
  .group-hover\/dalle-image\:bg-transparent:is(:where(.group\/dalle-image):=
hover *) { background-color: rgba(0, 0, 0, 0); }
  .group-hover\/file-tile\:block:is(:where(.group\/file-tile):hover *) { di=
splay: block; }
  .group-hover\/footnote\:border-token-main-surface-secondary:is(:where(.gr=
oup\/footnote):hover *) { border-color: var(--main-surface-secondary); }
  .group-hover\/imagegen-image\:opacity-100:is(:where(.group\/imagegen-imag=
e):hover *) { opacity: 1; }
  .group-hover\/nav-list\:underline:is(:where(.group\/nav-list):hover *) { =
text-decoration-line: underline; }
  .group-hover\/navigation\:bg-\[\#1D53BF1A\]:is(:where(.group\/navigation)=
:hover *) { background-color: rgba(29, 83, 191, 0.1); }
  .group-hover\/paragen-image\:visible:is(:where(.group\/paragen-image):hov=
er *) { visibility: visible; }
  .group-hover\/row\:bg-gray-50:is(:where(.group\/row):hover *) { backgroun=
d-color: rgb(249, 249, 249); }
  .group-hover\/row\:opacity-100:is(:where(.group\/row):hover *) { opacity:=
 1; }
  .group-hover\/row\:delay-500:is(:where(.group\/row):hover *) { transition=
-delay: 0.5s; }
  .group-hover\/snorlax-control-tile\:border-token-main-surface-secondary:i=
s(:where(.group\/snorlax-control-tile):hover *) { border-color: var(--main-=
surface-secondary); }
  .group-hover\/stack\:z-11:is(:where(.group\/stack):hover *) { z-index: 11=
; }
  .group-hover\/stack\:-translate-x-2:is(:where(.group\/stack):hover *) { -=
-tw-translate-x: calc(var(--spacing)*-2); translate: var(--tw-translate-x)v=
ar(--tw-translate-y); }
  .group-hover\/stack\:translate-x-2:is(:where(.group\/stack):hover *) { --=
tw-translate-x: calc(var(--spacing)*2); translate: var(--tw-translate-x)var=
(--tw-translate-y); }
  .group-hover\/stack\:translate-y-\[0px\]:is(:where(.group\/stack):hover *=
) { --tw-translate-y: 0px; translate: var(--tw-translate-x)var(--tw-transla=
te-y); }
  .group-hover\/stack\:rotate-\[-3deg\]:is(:where(.group\/stack):hover *) {=
 rotate: -3deg; }
  .group-hover\/stack\:rotate-\[4deg\]:is(:where(.group\/stack):hover *) { =
rotate: 4deg; }
  .group-hover\/stack\:shadow-md:is(:where(.group\/stack):hover *) { --tw-s=
hadow: 0 4px 6px -1px var(--tw-shadow-color,#0000001a),0 2px 4px -2px var(-=
-tw-shadow-color,#0000001a); box-shadow: var(--tw-inset-shadow),var(--tw-in=
set-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--t=
w-shadow); }
  .group-hover\/tldr\:opacity-70:is(:where(.group\/tldr):hover *) { opacity=
: 0.7; }
  .group-hover\/turn-messages\:pointer-events-auto:is(:where(.group\/turn-m=
essages):hover *) { pointer-events: auto; }
  .group-hover\/turn-messages\:opacity-100:is(:where(.group\/turn-messages)=
:hover *) { opacity: 1; }
  .group-hover\/turn-messages\:delay-300:is(:where(.group\/turn-messages):h=
over *) { transition-delay: 0.3s; }
  .group-hover\/turn-messages\:\[mask-position\:0_0\]:is(:where(.group\/tur=
n-messages):hover *) { mask-position: 0px 0px; }
}
  .group-focus\/imagegen-image\:opacity-100:is(:where(.group\/imagegen-imag=
e):focus *), .group-focus\:opacity-100:is(:where(.group):focus *) { opacity=
: 1; }
  @media (hover: hover) {
  .group-hover\:group-enabled\:text-token-text-primary:is(:where(.group):ho=
ver *):is(:where(.group):enabled *) { color: var(--text-primary); }
}
  .group-has-focus\:border-token-border-xheavy:is(:where(.group):has(:focus=
) *) { border-color: var(--border-xheavy); }
  .group-data-disabled\:opacity-50:is(:where(.group)[data-disabled] *) { op=
acity: 0.5; }
  .group-data-scroll-from-top\/thread\:\[box-shadow\:var\(--sharp-edge-top-=
shadow\)\]:is(:where(.group\/thread)[data-scroll-from-top] *) { box-shadow:=
 var(--sharp-edge-top-shadow); }
  .group-data-stream-active\/thread\:h-\(--thread-end-gutter-active-height\=
):is(:where(.group\/thread)[data-stream-active] *) { height: var(--thread-e=
nd-gutter-active-height); }
  .group-data-stream-active\/thread\:\[overflow-anchor\:none\]:is(:where(.g=
roup\/thread)[data-stream-active] *) { overflow-anchor: none; }
  .group-data-\[state\=3Dopen\]\:rotate-180:is(:where(.group)[data-state=3D=
"open"] *) { rotate: 180deg; }
  .group-radix-state-open\:bg-token-bg-tertiary:is(:where(.group)[data-stat=
e=3D"open"] *) { background-color: var(--bg-tertiary); }
  .group-radix-state-open\:bg-token-main-surface-tertiary:is(:where(.group)=
[data-state=3D"open"] *) { background-color: var(--main-surface-tertiary); =
}
  .group-\[\.skeleton\]\:animate-\[shimmer-skeleton_2s_infinite_ease-in-out=
\]:is(:where(.group).skeleton *) { animation: 2s ease-in-out 0s infinite no=
rmal none running shimmer-skeleton; }
  .group-\[\.skeleton\]\:rounded-md:is(:where(.group).skeleton *) { border-=
radius: var(--radius-md); }
  .group-\[\.skeleton\]\:bg-linear-to-r:is(:where(.group).skeleton *) { --t=
w-gradient-position: to right in oklab; background-image: linear-gradient(v=
ar(--tw-gradient-stops)); }
  .group-\[\.skeleton\]\:from-\[\#c1c0c0\]:is(:where(.group).skeleton *) { =
--tw-gradient-from: #c1c0c0; --tw-gradient-stops: var(--tw-gradient-via-sto=
ps,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-fro=
m-position),var(--tw-gradient-to)var(--tw-gradient-to-position)); }
  .group-\[\.skeleton\]\:via-\[\#f1f0f0\]:is(:where(.group).skeleton *) { -=
-tw-gradient-via: #f1f0f0; --tw-gradient-via-stops: var(--tw-gradient-posit=
ion),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradi=
ent-via)var(--tw-gradient-via-position),var(--tw-gradient-to)var(--tw-gradi=
ent-to-position); --tw-gradient-stops: var(--tw-gradient-via-stops); }
  .group-\[\.skeleton\]\:to-\[\#c1c0c0\:\]:is(:where(.group).skeleton *) { =
--tw-gradient-to: #c1c0c0:; --tw-gradient-stops: var(--tw-gradient-via-stop=
s,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from=
-position),var(--tw-gradient-to)var(--tw-gradient-to-position)); }
  .group-\[\.skeleton\]\:\[box-decoration-break\:clone\]:is(:where(.group).=
skeleton *) { -webkit-box-decoration-break: clone; box-decoration-break: cl=
one; }
  .group-\[\.skeleton\]\:bg-\[length\:300\%\]:is(:where(.group).skeleton *)=
 { background-size: 300%; }
  .group-\[\.skeleton\]\:leading-7:is(:where(.group).skeleton *) { --tw-lea=
ding: calc(var(--spacing)*7); line-height: calc(var(--spacing)*7); }
  .group-\[\.skeleton\]\:text-transparent:is(:where(.group).skeleton *) { c=
olor: rgba(0, 0, 0, 0); }
  .group-\[\.skeleton\]\:\[animation-direction\:alternate\]:is(:where(.grou=
p).skeleton *) { animation-direction: alternate; }
  .group-\[\:not\(\:hover\)\:not\(\:focus-within\)\]\:pointer-events-none:i=
s(:where(.group):not(:hover):not(:focus-within) *) { pointer-events: none; =
}
  .group-\[\:not\(\:hover\)\:not\(\:focus-within\)\]\:opacity-0:is(:where(.=
group):not(:hover):not(:focus-within) *) { opacity: 0; }
  .group-\[\:not\(\[data-scroll-from-end\]\)\]\/thread\:pointer-events-none=
:is(:where(.group\/thread):not([data-scroll-from-end]) *) { pointer-events:=
 none; }
  .group-\[\:not\(\[data-scroll-from-end\]\)\]\/thread\:scale-50:is(:where(=
.group\/thread):not([data-scroll-from-end]) *) { --tw-scale-x: 50%; --tw-sc=
ale-y: 50%; --tw-scale-z: 50%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .group-\[\:not\(\[data-scroll-from-end\]\)\]\/thread\:opacity-0:is(:where=
(.group\/thread):not([data-scroll-from-end]) *) { opacity: 0; }
  .group-\[\:not\(\[data-scroll-from-end\]\)\]\/thread\:delay-0:is(:where(.=
group\/thread):not([data-scroll-from-end]) *) { transition-delay: 0s; }
  .group-\[\:not\(\[data-scroll-from-end\]\)\]\/thread\:duration-100:is(:wh=
ere(.group\/thread):not([data-scroll-from-end]) *) { --tw-duration: .1s; tr=
ansition-duration: 0.1s; }
  .group-\[\:not\(\[data-scroll-from-top\]\)\]\/thread\:pointer-events-none=
:is(:where(.group\/thread):not([data-scroll-from-top]) *) { pointer-events:=
 none; }
  .group-\[\:not\(\[data-scroll-from-top\]\)\]\/thread\:scale-50:is(:where(=
.group\/thread):not([data-scroll-from-top]) *) { --tw-scale-x: 50%; --tw-sc=
ale-y: 50%; --tw-scale-z: 50%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .group-\[\:not\(\[data-scroll-from-top\]\)\]\/thread\:opacity-0:is(:where=
(.group\/thread):not([data-scroll-from-top]) *) { opacity: 0; }
  .group-\[\:not\(\[data-scroll-from-top\]\)\]\/thread\:delay-0:is(:where(.=
group\/thread):not([data-scroll-from-top]) *) { transition-delay: 0s; }
  .group-\[\:not\(\[data-scroll-from-top\]\)\]\/thread\:duration-100:is(:wh=
ere(.group\/thread):not([data-scroll-from-top]) *) { --tw-duration: .1s; tr=
ansition-duration: 0.1s; }
  .peer-disabled\:cursor-not-allowed:is(:where(.peer):disabled ~ *) { curso=
r: not-allowed; }
  .peer-disabled\:opacity-70:is(:where(.peer):disabled ~ *) { opacity: 0.7;=
 }
  .first-letter\:uppercase::first-letter { text-transform: uppercase; }
  .marker\:text-token-text-tertiary ::marker { color: var(--text-tertiary);=
 }
  .marker\:text-token-text-tertiary::marker { color: var(--text-tertiary); =
}
  .marker\:text-token-text-tertiary ::-webkit-details-marker, .marker\:text=
-token-text-tertiary::-webkit-details-marker { color: var(--text-tertiary);=
 }
  .placeholder\:ps-px::placeholder { padding-inline-start: 1px; }
  .placeholder\:text-gray-300::placeholder { color: rgb(205, 205, 205); }
  .placeholder\:text-gray-400::placeholder { color: rgb(180, 180, 180); }
  .placeholder\:text-gray-500::placeholder { color: rgb(155, 155, 155); }
  .placeholder\:text-gray-600::placeholder { color: rgb(103, 103, 103); }
  .placeholder\:text-token-text-quaternary::placeholder { color: var(--text=
-quaternary); }
  .placeholder\:text-token-text-secondary::placeholder { color: var(--text-=
secondary); }
  .placeholder\:text-token-text-tertiary::placeholder { color: var(--text-t=
ertiary); }
  .before\:pointer-events-none::before { content: var(--tw-content); pointe=
r-events: none; }
  .before\:absolute::before { content: var(--tw-content); position: absolut=
e; }
  .before\:inset-0::before { content: var(--tw-content); inset: calc(var(--=
spacing)*0); }
  .before\:-inset-x-1::before { content: var(--tw-content); inset-inline: c=
alc(var(--spacing)*-1); }
  .before\:-start-0\.5::before { content: var(--tw-content); inset-inline-s=
tart: calc(var(--spacing)*-.5); }
  .before\:-top-1::before { content: var(--tw-content); top: calc(var(--spa=
cing)*-1); }
  .before\:bottom-0::before { bottom: calc(var(--spacing)*0); content: var(=
--tw-content); }
  .before\:z-\[-1\]::before { content: var(--tw-content); z-index: -1; }
  .before\:bg-\(--task-bg\)::before { background-color: var(--task-bg); con=
tent: var(--tw-content); }
  .before\:bg-white\/50::before { background-color: rgba(255, 255, 255, 0.5=
); content: var(--tw-content); }
  .before\:bg-gradient-to-l::before { --tw-gradient-position: to left in ok=
lab; background-image: linear-gradient(var(--tw-gradient-stops)); content: =
var(--tw-content); }
  .before\:from-token-bg-tertiary::before { --tw-gradient-from: var(--bg-te=
rtiary); --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient=
-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw=
-gradient-to)var(--tw-gradient-to-position)); content: var(--tw-content); }
  .before\:via-token-bg-tertiary::before { --tw-gradient-via: var(--bg-tert=
iary); --tw-gradient-via-stops: var(--tw-gradient-position),var(--tw-gradie=
nt-from)var(--tw-gradient-from-position),var(--tw-gradient-via)var(--tw-gra=
dient-via-position),var(--tw-gradient-to)var(--tw-gradient-to-position); --=
tw-gradient-stops: var(--tw-gradient-via-stops); content: var(--tw-content)=
; }
  .before\:to-transparent::before { --tw-gradient-to: transparent; --tw-gra=
dient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--=
tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(=
--tw-gradient-to-position)); content: var(--tw-content); }
  .before\:content-\[\'\'\]::before { --tw-content: ""; content: var(--tw-c=
ontent); }
  .before\:content-\[\'\*\'\]::before { --tw-content: "*"; content: var(--t=
w-content); }
  .after\:pointer-events-none::after { content: var(--tw-content); pointer-=
events: none; }
  .after\:absolute::after { content: var(--tw-content); position: absolute;=
 }
  .after\:-inset-4::after { content: var(--tw-content); inset: calc(var(--s=
pacing)*-4); }
  .after\:inset-0::after { content: var(--tw-content); inset: calc(var(--sp=
acing)*0); }
  .after\:inset-\[-4px\]::after { content: var(--tw-content); inset: -4px; =
}
  .after\:-inset-x-2::after { content: var(--tw-content); inset-inline: cal=
c(var(--spacing)*-2); }
  .after\:inset-x-2::after { content: var(--tw-content); inset-inline: calc=
(var(--spacing)*2); }
  .after\:inset-x-\[-4px\]::after { content: var(--tw-content); inset-inlin=
e: -4px; }
  .after\:-inset-y-4::after { content: var(--tw-content); inset-block: calc=
(var(--spacing)*-4); }
  .after\:inset-y-0::after { content: var(--tw-content); inset-block: calc(=
var(--spacing)*0); }
  .after\:start-0::after { content: var(--tw-content); inset-inline-start: =
calc(var(--spacing)*0); }
  .after\:start-\[-15px\]::after { content: var(--tw-content); inset-inline=
-start: -15px; }
  .after\:start-\[calc\(100\%_\+_280px\)\]::after { content: var(--tw-conte=
nt); inset-inline-start: calc(100% + 280px); }
  .after\:start-\[calc\(100\%_-_25px\)\]::after { content: var(--tw-content=
); inset-inline-start: calc(100% - 25px); }
  .after\:end-0::after { content: var(--tw-content); inset-inline-end: calc=
(var(--spacing)*0); }
  .after\:end-\[-15\%\]::after { content: var(--tw-content); inset-inline-e=
nd: -15%; }
  .after\:top-0::after { content: var(--tw-content); top: calc(var(--spacin=
g)*0); }
  .after\:top-\[-30px\]::after { content: var(--tw-content); top: -30px; }
  .after\:top-\[-95px\]::after { content: var(--tw-content); top: -95px; }
  .after\:top-\[-100\%\]::after { content: var(--tw-content); top: -100%; }
  .after\:-right-4::after { content: var(--tw-content); }
  [dir=3D"ltr"] .after\:-right-4::after { right: calc(var(--spacing)*-4); }
  [dir=3D"rtl"] .after\:-right-4::after { left: calc(var(--spacing)*-4); }
  .after\:bottom-0::after { bottom: calc(var(--spacing)*0); content: var(--=
tw-content); }
  .after\:bottom-\[75\%\]::after { bottom: 75%; content: var(--tw-content);=
 }
  .after\:-left-1::after { content: var(--tw-content); }
  [dir=3D"ltr"] .after\:-left-1::after { left: calc(var(--spacing)*-1); }
  [dir=3D"rtl"] .after\:-left-1::after { right: calc(var(--spacing)*-1); }
  .after\:z-0::after { content: var(--tw-content); z-index: 0; }
  .after\:z-\[-1\]::after { content: var(--tw-content); z-index: -1; }
  .after\:mx-1::after { content: var(--tw-content); margin-inline: calc(var=
(--spacing)*1); }
  .after\:block::after { content: var(--tw-content); display: block; }
  .after\:h-2::after { content: var(--tw-content); height: calc(var(--spaci=
ng)*2); }
  .after\:h-\[1px\]::after { content: var(--tw-content); height: 1px; }
  .after\:h-\[64px\]::after { content: var(--tw-content); height: 64px; }
  .after\:h-\[120\%\]::after { content: var(--tw-content); height: 120%; }
  .after\:h-\[140px\]::after { content: var(--tw-content); height: 140px; }
  .after\:h-\[144px\]::after { content: var(--tw-content); height: 144px; }
  .after\:h-\[200px\]::after { content: var(--tw-content); height: 200px; }
  .after\:w-1::after { content: var(--tw-content); width: calc(var(--spacin=
g)*1); }
  .after\:w-2::after { content: var(--tw-content); width: calc(var(--spacin=
g)*2); }
  .after\:w-\[75px\]::after { content: var(--tw-content); width: 75px; }
  .after\:w-\[80\%\]::after { content: var(--tw-content); width: 80%; }
  .after\:w-\[113px\]::after { content: var(--tw-content); width: 113px; }
  .after\:w-\[120\%\]::after { content: var(--tw-content); width: 120%; }
  .after\:w-\[255px\]::after { content: var(--tw-content); width: 255px; }
  .after\:max-w-\[340px\]::after { content: var(--tw-content); max-width: 3=
40px; }
  .after\:rounded-\[50\%\]::after { border-radius: 50%; content: var(--tw-c=
ontent); }
  .after\:rounded-lg::after { border-radius: var(--radius-lg); content: var=
(--tw-content); }
  .after\:rounded-md::after { border-radius: var(--radius-md); content: var=
(--tw-content); }
  .after\:bg-\[Highlight\]::after { background-color: highlight; content: v=
ar(--tw-content); }
  .after\:bg-green-500::after { background-color: rgb(0, 162, 64); content:=
 var(--tw-content); }
  .after\:bg-red-500::after { background-color: rgb(224, 46, 42); content: =
var(--tw-content); }
  .after\:bg-token-border-light::after { background-color: var(--border-lig=
ht); content: var(--tw-content); }
  .after\:bg-token-main-surface-primary::after { background-color: var(--ma=
in-surface-primary); content: var(--tw-content); }
  .after\:bg-token-text-primary::after { background-color: var(--text-prima=
ry); content: var(--tw-content); }
  .after\:bg-\[url\(https\:\/\/cdn\.openai\.com\/chatgpt\/ctf-cdn\/student-=
landing\/cards-more-v2\.png\)\]::after { background-image: url("https://cdn=
.openai.com/chatgpt/ctf-cdn/student-landing/cards-more-v2.png"); content: v=
ar(--tw-content); }
  .after\:bg-\[url\(https\:\/\/cdn\.openai\.com\/chatgpt\/ctf-cdn\/student-=
landing\/faq-bubble-small-v2\.png\)\]::after { background-image: url("https=
://cdn.openai.com/chatgpt/ctf-cdn/student-landing/faq-bubble-small-v2.png")=
; content: var(--tw-content); }
  .after\:bg-\[url\(https\:\/\/cdn\.openai\.com\/chatgpt\/ctf-cdn\/student-=
landing\/offer-flowers-v2\.png\)\]::after { background-image: url("https://=
cdn.openai.com/chatgpt/ctf-cdn/student-landing/offer-flowers-v2.png"); cont=
ent: var(--tw-content); }
  .after\:bg-\[url\(https\:\/\/cdn\.openai\.com\/chatgpt\/ctf-cdn\/student-=
landing\/splash-scribble-v2\.png\)\]::after { background-image: url("https:=
//cdn.openai.com/chatgpt/ctf-cdn/student-landing/splash-scribble-v2.png"); =
content: var(--tw-content); }
  .after\:bg-\[url\(https\:\/\/cdn\.openai\.com\/chatgpt\/ctf-cdn\/student-=
landing\/splash-stars-v2\.png\)\]::after { background-image: url("https://c=
dn.openai.com/chatgpt/ctf-cdn/student-landing/splash-stars-v2.png"); conten=
t: var(--tw-content); }
  .after\:bg-contain::after { background-size: contain; content: var(--tw-c=
ontent); }
  .after\:bg-bottom::after { background-position: center bottom; content: v=
ar(--tw-content); }
  .after\:bg-center::after { background-position: 50% center; content: var(=
--tw-content); }
  .after\:bg-no-repeat::after { background-repeat: no-repeat; content: var(=
--tw-content); }
  .after\:opacity-0::after { content: var(--tw-content); opacity: 0; }
  .after\:opacity-80::after { content: var(--tw-content); opacity: 0.8; }
  .after\:opacity-100::after { content: var(--tw-content); opacity: 1; }
  .after\:content-\[\"=C2=B7\"\]::after { --tw-content: "=C2=B7"; content: =
var(--tw-content); }
  .after\:content-\[\'\'\]::after { --tw-content: ""; content: var(--tw-con=
tent); }
  .group-last\:after\:hidden:is(:where(.group):last-child *)::after { conte=
nt: var(--tw-content); display: none; }
  .first\:-ms-1:first-child { margin-inline-start: calc(var(--spacing)*-1);=
 }
  .first\:ms-0:first-child { margin-inline-start: calc(var(--spacing)*0); }
  .first\:ms-4:first-child { margin-inline-start: calc(var(--spacing)*4); }
  .first\:me-0:first-child { margin-inline-end: calc(var(--spacing)*0); }
  .first\:mt-0:first-child { margin-top: calc(var(--spacing)*0); }
  .first\:rounded-t:first-child { border-top-left-radius: 0.25rem; border-t=
op-right-radius: 0.25rem; }
  .first\:rounded-t-lg:first-child { border-top-left-radius: var(--radius-l=
g); border-top-right-radius: var(--radius-lg); }
  .first\:border-0:first-child { border-style: var(--tw-border-style); bord=
er-width: 0px; }
  .first\:border-none:first-child { --tw-border-style: none; border-style: =
none; }
  .first\:ps-0\!:first-child { padding-inline-start: calc(var(--spacing)*0)=
 !important; }
  .first\:pt-\[3px\]:first-child { padding-top: 3px; }
  .last\:me-0:last-child { margin-inline-end: calc(var(--spacing)*0); }
  .last\:me-1\.5:last-child { margin-inline-end: calc(var(--spacing)*1.5); =
}
  .last\:me-4:last-child { margin-inline-end: calc(var(--spacing)*4); }
  .last\:mb-0:last-child { margin-bottom: calc(var(--spacing)*0); }
  .last\:mb-2:last-child { margin-bottom: calc(var(--spacing)*2); }
  .last\:mb-5:last-child { margin-bottom: calc(var(--spacing)*5); }
  .last\:min-h-\[calc\(100vh-8rem\)\]:last-child { min-height: calc(-8rem +=
 100vh); }
  .last\:snap-end:last-child { scroll-snap-align: end; }
  .last\:scroll-mb-20:last-child { scroll-margin-bottom: calc(var(--spacing=
)*20); }
  .last\:scroll-pb-20:last-child { scroll-padding-bottom: calc(var(--spacin=
g)*20); }
  .last\:rounded-b:last-child { border-bottom-left-radius: 0.25rem; border-=
bottom-right-radius: 0.25rem; }
  .last\:rounded-b-lg:last-child { border-bottom-left-radius: var(--radius-=
lg); border-bottom-right-radius: var(--radius-lg); }
  .last\:border-e-0:last-child { border-inline-end-style: var(--tw-border-s=
tyle); border-inline-end-width: 0px; }
  .last\:border-b:last-child { border-bottom-style: var(--tw-border-style);=
 border-bottom-width: 1px; }
  .last\:border-b-0:last-child { border-bottom-style: var(--tw-border-style=
); border-bottom-width: 0px; }
  .last\:border-none:last-child { --tw-border-style: none; border-style: no=
ne; }
  .last\:pe-0:last-child { padding-inline-end: calc(var(--spacing)*0); }
  .last\:pe-0\!:last-child { padding-inline-end: calc(var(--spacing)*0) !im=
portant; }
  .last\:pb-20:last-child { padding-bottom: calc(var(--spacing)*20); }
  .last\:after\:content-\[none\]:last-child::after { --tw-content: none; co=
ntent: var(--tw-content); }
  .first-of-type\:border-none:first-of-type { --tw-border-style: none; bord=
er-style: none; }
  .last-of-type\:border-0:last-of-type { border-style: var(--tw-border-styl=
e); border-width: 0px; }
  .last-of-type\:border-b-0:last-of-type { border-bottom-style: var(--tw-bo=
rder-style); border-bottom-width: 0px; }
  .checked\:border-black\!:checked { border-color: rgb(0, 0, 0) !important;=
 }
  .checked\:border-blue-400\!:checked { border-color: rgb(2, 133, 255) !imp=
ortant; }
  .checked\:border-blue-600:checked { border-color: rgb(0, 79, 153); }
  .checked\:bg-black\!:checked { background-color: rgb(0, 0, 0) !important;=
 }
  .checked\:bg-blue-400\!:checked { background-color: rgb(2, 133, 255) !imp=
ortant; }
  .checked\:bg-blue-600:checked { background-color: rgb(0, 79, 153); }
  .empty\:hidden:empty { display: none; }
  .focus-within\:relative:focus-within { position: relative; }
  .focus-within\:z-10:focus-within { z-index: 10; }
  .focus-within\:border-green-500:focus-within { border-color: rgb(0, 162, =
64); }
  .focus-within\:border-green-600:focus-within { border-color: rgb(0, 134, =
53); }
  .focus-within\:border-token-border-heavy:focus-within { border-color: var=
(--border-heavy); }
  .focus-within\:border-token-border-xheavy:focus-within { border-color: va=
r(--border-xheavy); }
  .focus-within\:bg-token-main-surface-tertiary:focus-within { background-c=
olor: var(--main-surface-tertiary); }
  .focus-within\:opacity-100:focus-within { opacity: 1; }
  .focus-within\:shadow-\[0_0_0_2px\]:focus-within { --tw-shadow: 0 0 0 2px=
 var(--tw-shadow-color,currentcolor); box-shadow: var(--tw-inset-shadow),va=
r(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow=
),var(--tw-shadow); }
  .focus-within\:shadow-none:focus-within { --tw-shadow: 0 0 #0000; box-sha=
dow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offse=
t-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus-within\:ring-0:focus-within { --tw-ring-shadow: var(--tw-ring-inse=
t,)0 0 0 calc(var(--tw-ring-offset-width))var(--tw-ring-color,currentColor)=
; box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-r=
ing-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus-within\:ring-0\!:focus-within { --tw-ring-shadow: var(--tw-ring-in=
set,)0 0 0 calc(var(--tw-ring-offset-width))var(--tw-ring-color,currentColo=
r) !important; box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shado=
w),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow) !imp=
ortant; }
  .focus-within\:ring-1:focus-within { --tw-ring-shadow: var(--tw-ring-inse=
t,)0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color,current=
Color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(=
--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus-within\:ring-green-600:focus-within { --tw-ring-color: #008635; }
  .focus-within\:ring-token-text-secondary:focus-within { --tw-ring-color: =
var(--text-secondary); }
  .focus-within\:ring-transparent:focus-within { --tw-ring-color: transpare=
nt; }
  .focus-within\:outline-hidden:focus-within { --tw-outline-style: none; ou=
tline-style: none; }
  @media (forced-colors: active) {
  .focus-within\:outline-hidden:focus-within { outline: rgba(0, 0, 0, 0) so=
lid 2px; outline-offset: 2px; }
}
  .focus-within\:transition-none:focus-within { transition-property: none; =
}
  @media (hover: hover) {
  .hover\:visible:hover { visibility: visible; }
  .hover\:scale-105:hover { --tw-scale-x: 105%; --tw-scale-y: 105%; --tw-sc=
ale-z: 105%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .hover\:scale-110:hover { --tw-scale-x: 110%; --tw-scale-y: 110%; --tw-sc=
ale-z: 110%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .hover\:scale-\[1\.015\]:hover { scale: 1.015; }
  .hover\:scale-\[103\%\]:hover { scale: 1.03; }
  .hover\:cursor-default:hover { cursor: default; }
  .hover\:cursor-pointer:hover { cursor: pointer; }
  .hover\:border-black\/0:hover { border-color: oklab(0 none none / 0); }
  .hover\:border-gray-100:hover { border-color: rgb(236, 236, 236); }
  .hover\:border-gray-900:hover { border-color: rgb(23, 23, 23); }
  .hover\:border-token-border-heavy:hover { border-color: var(--border-heav=
y); }
  .hover\:border-token-border-medium:hover { border-color: var(--border-med=
ium); }
  .hover\:border-token-border-xheavy:hover { border-color: var(--border-xhe=
avy); }
  .hover\:border-token-border-xlight:hover { border-color: var(--border-xli=
ght); }
  .hover\:border-b-transparent:hover { border-bottom-color: rgba(0, 0, 0, 0=
); }
  .hover\:bg-\[\#0077FF\]:hover { background-color: rgb(0, 119, 255); }
  .hover\:bg-\[\#BDDCF4\]:hover { background-color: rgb(189, 220, 244); }
  .hover\:bg-\[\#f5f5f5\]:hover { background-color: rgb(245, 245, 245); }
  .hover\:bg-\[rgba\(29\,155\,209\,0\.2\)\]:hover { background-color: rgba(=
29, 155, 209, 0.2); }
  .hover\:bg-\[var\(--snc-hover\)\]:hover { background-color: var(--snc-hov=
er); }
  .hover\:bg-black:hover { background-color: rgb(0, 0, 0); }
  .hover\:bg-black\/5:hover { background-color: oklab(0 none none / 0.05); =
}
  .hover\:bg-black\/10:hover { background-color: oklab(0 none none / 0.1); =
}
  .hover\:bg-black\/\[0\.075\]\!:hover { background-color: oklab(0 none non=
e / 0.075) !important; }
  .hover\:bg-blue-600:hover { background-color: rgb(0, 79, 153); }
  .hover\:bg-blue-800:hover { background-color: rgb(1, 53, 102); }
  .hover\:bg-gray-50:hover { background-color: rgb(249, 249, 249); }
  .hover\:bg-gray-100:hover { background-color: rgb(236, 236, 236); }
  .hover\:bg-gray-100\/75:hover { background-color: rgba(236, 236, 236, 0.7=
5); }
  .hover\:bg-gray-200:hover { background-color: rgb(227, 227, 227); }
  .hover\:bg-gray-300:hover { background-color: rgb(205, 205, 205); }
  .hover\:bg-gray-500\/10:hover { background-color: rgba(155, 155, 155, 0.1=
); }
  .hover\:bg-gray-800:hover { background-color: rgb(33, 33, 33); }
  .hover\:bg-gray-800\/10:hover { background-color: rgba(33, 33, 33, 0.1); =
}
  .hover\:bg-gray-900:hover { background-color: rgb(23, 23, 23); }
  .hover\:bg-gray-900\/30:hover { background-color: rgba(23, 23, 23, 0.3); =
}
  .hover\:bg-orange-400\/10:hover { background-color: rgba(251, 106, 34, 0.=
1); }
  .hover\:bg-purple-100:hover { background-color: rgb(206, 176, 251); }
  .hover\:bg-purple-600:hover { background-color: rgb(107, 58, 180); }
  .hover\:bg-red-500\/10:hover { background-color: rgba(224, 46, 42, 0.1); =
}
  .hover\:bg-red-500\/15:hover { background-color: rgba(224, 46, 42, 0.15);=
 }
  .hover\:bg-token-bg-elevated-secondary:hover { background-color: var(--bg=
-elevated-secondary); }
  .hover\:bg-token-bg-primary:hover { background-color: var(--bg-primary); =
}
  .hover\:bg-token-bg-secondary:hover { background-color: var(--bg-secondar=
y); }
  .hover\:bg-token-bg-tertiary:hover { background-color: var(--bg-tertiary)=
; }
  .hover\:bg-token-border-light:hover { background-color: var(--border-ligh=
t); }
  .hover\:bg-token-border-xlight:hover { background-color: var(--border-xli=
ght); }
  .hover\:bg-token-icon-surface\/10:hover { background-color: color-mix(in =
oklab,rgb(var(--icon-surface)/1) 10%,transparent); }
  .hover\:bg-token-interactive-bg-secondary-hover:hover { background-color:=
 var(--interactive-bg-secondary-hover); }
  .hover\:bg-token-main-surface-primary\!:hover { background-color: var(--m=
ain-surface-primary) !important; }
  .hover\:bg-token-main-surface-primary-inverse:hover { background-color: v=
ar(--main-surface-primary-inverse); }
  .hover\:bg-token-main-surface-secondary:hover { background-color: var(--m=
ain-surface-secondary); }
  .hover\:bg-token-main-surface-secondary\!:hover { background-color: var(-=
-main-surface-secondary) !important; }
  .hover\:bg-token-main-surface-secondary-selected:hover { background-color=
: var(--main-surface-secondary-selected); }
  .hover\:bg-token-main-surface-tertiary:hover { background-color: var(--ma=
in-surface-tertiary); }
  .hover\:bg-token-sidebar-surface-secondary:hover { background-color: var(=
--sidebar-surface-secondary); }
  .hover\:bg-token-sidebar-surface-tertiary:hover { background-color: var(-=
-sidebar-surface-tertiary); }
  .hover\:bg-token-surface-error\/10:hover { background-color: color-mix(in=
 oklab,rgb(var(--surface-error)/1) 10%,transparent); }
  .hover\:bg-token-surface-hover:hover { background-color: var(--surface-ho=
ver); }
  .hover\:bg-token-text-primary:hover { background-color: var(--text-primar=
y); }
  .hover\:bg-token-text-secondary:hover { background-color: var(--text-seco=
ndary); }
  .hover\:bg-transparent:hover { background-color: rgba(0, 0, 0, 0); }
  .hover\:bg-white:hover { background-color: rgb(255, 255, 255); }
  .hover\:bg-white\/40:hover { background-color: rgba(255, 255, 255, 0.4); =
}
  .hover\:text-\[\#0285ff\]\/80:hover { color: rgba(2, 133, 255, 0.8); }
  .hover\:text-\[rgb\(11\,76\,140\)\]:hover { color: rgb(11, 76, 140); }
  .hover\:text-\[var\(--tag-blue-light\)\]:hover { color: var(--tag-blue-li=
ght); }
  .hover\:text-gray-700:hover { color: rgb(66, 66, 66); }
  .hover\:text-red-500:hover { color: rgb(224, 46, 42); }
  .hover\:text-red-700:hover { color: rgb(145, 30, 27); }
  .hover\:text-token-link-hover:hover { color: var(--link-hover); }
  .hover\:text-token-main-surface-secondary\!:hover { color: var(--main-sur=
face-secondary) !important; }
  .hover\:text-token-main-surface-tertiary:hover { color: var(--main-surfac=
e-tertiary); }
  .hover\:text-token-text-inverted:hover { color: var(--text-inverted); }
  .hover\:text-token-text-primary:hover { color: var(--text-primary); }
  .hover\:text-token-text-quaternary:hover { color: var(--text-quaternary);=
 }
  .hover\:text-token-text-secondary:hover { color: var(--text-secondary); }
  .hover\:text-token-text-tertiary:hover { color: var(--text-tertiary); }
  .hover\:text-white:hover { color: rgb(255, 255, 255); }
  .hover\:text-white\/40:hover { color: rgba(255, 255, 255, 0.4); }
  .hover\:no-underline:hover { text-decoration-line: none; }
  .hover\:underline:hover { text-decoration-line: underline; }
  .hover\:opacity-50:hover { opacity: 0.5; }
  .hover\:opacity-65:hover { opacity: 0.65; }
  .hover\:opacity-70:hover { opacity: 0.7; }
  .hover\:opacity-75:hover { opacity: 0.75; }
  .hover\:opacity-80:hover { opacity: 0.8; }
  .hover\:opacity-85:hover { opacity: 0.85; }
  .hover\:opacity-90:hover { opacity: 0.9; }
  .hover\:opacity-100:hover { opacity: 1; }
  .hover\:mix-blend-normal:hover { mix-blend-mode: normal; }
  .hover\:shadow-\[-1px_0_2px_2px_rgba\(255\,0\,0\,0\.4\)\]:hover { --tw-sh=
adow: -1px 0 2px 2px var(--tw-shadow-color,#f006); }
  .hover\:shadow-\[-1px_0_2px_2px_rgba\(255\,0\,0\,0\.4\)\]:hover, .hover\:=
shadow-lg:hover { box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-sh=
adow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); =
}
  .hover\:shadow-lg:hover { --tw-shadow: 0 10px 15px -3px var(--tw-shadow-c=
olor,#0000001a),0 4px 6px -4px var(--tw-shadow-color,#0000001a); }
  .hover\:shadow-md:hover { --tw-shadow: 0 4px 6px -1px var(--tw-shadow-col=
or,#0000001a),0 2px 4px -2px var(--tw-shadow-color,#0000001a); }
  .hover\:shadow-md:hover, .hover\:shadow-sm:hover { box-shadow: var(--tw-i=
nset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(-=
-tw-ring-shadow),var(--tw-shadow); }
  .hover\:shadow-sm:hover { --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color,=
#0000001a),0 1px 2px -1px var(--tw-shadow-color,#0000001a); }
  .hover\:shadow-xl:hover { --tw-shadow: 0 20px 25px -5px var(--tw-shadow-c=
olor,#0000001a),0 8px 10px -6px var(--tw-shadow-color,#0000001a); box-shado=
w: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-=
shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .hover\:shadow-token-border-default:hover { --tw-shadow-color: var(--bord=
er-default); }
  .hover\:transition-none:hover { transition-property: none; }
  .hover\:delay-0:hover { transition-delay: 0s; }
  .hover\:delay-300:hover { transition-delay: 0.3s; }
  .hover\:after\:bg-token-main-surface-tertiary:hover::after { background-c=
olor: var(--main-surface-tertiary); content: var(--tw-content); }
}
  .focus\:border-none:focus { --tw-border-style: none; border-style: none; =
}
  .focus\:border-black:focus { border-color: rgb(0, 0, 0); }
  .focus\:border-gray-200:focus { border-color: rgb(227, 227, 227); }
  .focus\:border-orange-400:focus { border-color: rgb(251, 106, 34); }
  .focus\:border-red-500:focus { border-color: rgb(224, 46, 42); }
  .focus\:border-token-border-medium:focus { border-color: var(--border-med=
ium); }
  .focus\:border-token-text-error:focus { border-color: var(--text-error); =
}
  .focus\:border-token-text-primary:focus { border-color: var(--text-primar=
y); }
  .focus\:border-transparent:focus { border-color: rgba(0, 0, 0, 0); }
  .focus\:bg-token-icon-surface\/10:focus { background-color: color-mix(in =
oklab,rgb(var(--icon-surface)/1) 10%,transparent); }
  .focus\:shadow-none:focus { --tw-shadow: 0 0 #0000; }
  .focus\:ring-0:focus, .focus\:shadow-none:focus { box-shadow: var(--tw-in=
set-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--=
tw-ring-shadow),var(--tw-shadow); }
  .focus\:ring-0:focus { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(=
var(--tw-ring-offset-width))var(--tw-ring-color,currentColor); }
  .focus\:ring-0\!:focus { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 cal=
c(var(--tw-ring-offset-width))var(--tw-ring-color,currentColor) !important;=
 box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ri=
ng-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow) !important; }
  .focus\:ring-2:focus { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(=
2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor); box-sh=
adow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offs=
et-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus\:ring-black:focus { --tw-ring-color: #000; }
  .focus\:ring-blue-400:focus { --tw-ring-color: #0285ff; }
  .focus\:ring-gray-200:focus { --tw-ring-color: #e3e3e3; }
  .focus\:ring-purple-500:focus { --tw-ring-color: #8046d9; }
  .focus\:ring-token-text-primary:focus { --tw-ring-color: var(--text-prima=
ry); }
  .focus\:ring-transparent:focus { --tw-ring-color: transparent; }
  .focus\:ring-white:focus { --tw-ring-color: #fff; }
  .focus\:ring-offset-0:focus { --tw-ring-offset-width: 0px; --tw-ring-offs=
et-shadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-r=
ing-offset-color); }
  .focus\:ring-offset-0\!:focus { --tw-ring-offset-width: 0px !important; -=
-tw-ring-offset-shadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-wid=
th)var(--tw-ring-offset-color) !important; }
  .focus\:outline-hidden:focus { --tw-outline-style: none; outline-style: n=
one; }
  @media (forced-colors: active) {
  .focus\:outline-hidden:focus { outline: rgba(0, 0, 0, 0) solid 2px; outli=
ne-offset: 2px; }
}
  .focus\:outline-0:focus { outline-style: var(--tw-outline-style); outline=
-width: 0px; }
  .focus\:outline-0\!:focus { outline-style: var(--tw-outline-style) !impor=
tant; outline-width: 0px !important; }
  .focus\:outline-none:focus { --tw-outline-style: none; outline-style: non=
e; }
  .focus\:ring-inset:focus { --tw-ring-inset: inset; }
  .focus-visible\:z-11:focus-visible { z-index: 11; }
  .focus-visible\:translate-y-0:focus-visible { --tw-translate-y: calc(var(=
--spacing)*0); translate: var(--tw-translate-x)var(--tw-translate-y); }
  .focus-visible\:rounded-\[inherit\]:focus-visible { border-radius: inheri=
t; }
  .focus-visible\:border-none:focus-visible { --tw-border-style: none; bord=
er-style: none; }
  .focus-visible\:border-token-border-default:focus-visible { border-color:=
 var(--border-default); }
  .focus-visible\:bg-\[\#f5f5f5\]:focus-visible { background-color: rgb(245=
, 245, 245); }
  .focus-visible\:bg-token-icon-surface\/10:focus-visible { background-colo=
r: color-mix(in oklab,rgb(var(--icon-surface)/1) 10%,transparent); }
  .focus-visible\:bg-token-main-surface-secondary:focus-visible { backgroun=
d-color: var(--main-surface-secondary); }
  .focus-visible\:bg-token-surface-hover:focus-visible { background-color: =
var(--surface-hover); }
  .focus-visible\:opacity-100:focus-visible { opacity: 1; }
  .focus-visible\:ring-0:focus-visible { --tw-ring-shadow: var(--tw-ring-in=
set,)0 0 0 calc(var(--tw-ring-offset-width))var(--tw-ring-color,currentColo=
r); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw=
-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus-visible\:ring-2:focus-visible { --tw-ring-shadow: var(--tw-ring-in=
set,)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,curre=
ntColor); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),va=
r(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus-visible\:ring-token-text-quaternary:focus-visible { --tw-ring-colo=
r: var(--text-quaternary); }
  .focus-visible\:ring-token-text-secondary:focus-visible { --tw-ring-color=
: var(--text-secondary); }
  .focus-visible\:ring-offset-1:focus-visible { --tw-ring-offset-width: 1px=
; --tw-ring-offset-shadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-=
width)var(--tw-ring-offset-color); }
  .focus-visible\:ring-offset-2:focus-visible { --tw-ring-offset-width: 2px=
; --tw-ring-offset-shadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-=
width)var(--tw-ring-offset-color); }
  .focus-visible\:ring-offset-transparent:focus-visible { --tw-ring-offset-=
color: transparent; }
  .focus-visible\:outline-hidden:focus-visible { --tw-outline-style: none; =
outline-style: none; }
  @media (forced-colors: active) {
  .focus-visible\:outline-hidden:focus-visible { outline: rgba(0, 0, 0, 0) =
solid 2px; outline-offset: 2px; }
}
  .focus-visible\:outline-0:focus-visible { outline-style: var(--tw-outline=
-style); outline-width: 0px; }
  .focus-visible\:-outline-offset-1:focus-visible { outline-offset: -1px; }
  .focus-visible\:outline-black:focus-visible { outline-color: rgb(0, 0, 0)=
; }
  .active\:scale-98:active { --tw-scale-x: 98%; --tw-scale-y: 98%; --tw-sca=
le-z: 98%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .active\:scale-\[0\.9\]:active { scale: 0.9; }
  .active\:scale-\[0\.98\]:active { scale: 0.98; }
  .active\:bg-black\/20:active { background-color: oklab(0 none none / 0.2)=
; }
  .active\:bg-gray-700:active { background-color: rgb(66, 66, 66); }
  .active\:bg-red-500\/20:active { background-color: rgba(224, 46, 42, 0.2)=
; }
  .active\:bg-token-main-surface-tertiary:active { background-color: var(--=
main-surface-tertiary); }
  .active\:opacity-50:active { opacity: 0.5; }
  .active\:opacity-90:active { opacity: 0.9; }
  .active\:drop-shadow-none:active { --tw-drop-shadow: ; filter: var(--tw-b=
lur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-h=
ue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-dro=
p-shadow,); }
  @media (hover: hover) {
  .enabled\:hover\:bg-black\/5:enabled:hover { background-color: oklab(0 no=
ne none / 0.05); }
  .enabled\:hover\:bg-token-main-surface-secondary:enabled:hover { backgrou=
nd-color: var(--main-surface-secondary); }
  .enabled\:hover\:bg-token-surface-hover:enabled:hover { background-color:=
 var(--surface-hover); }
  .enabled\:hover\:underline:enabled:hover { text-decoration-line: underlin=
e; }
}
  .disabled\:pointer-events-none:disabled { pointer-events: none; }
  .disabled\:cursor-not-allowed:disabled { cursor: not-allowed; }
  .disabled\:bg-\[\#D7D7D7\]:disabled { background-color: rgb(215, 215, 215=
); }
  .disabled\:bg-token-main-surface-tertiary:disabled { background-color: va=
r(--main-surface-tertiary); }
  .disabled\:bg-token-text-quaternary:disabled { background-color: var(--te=
xt-quaternary); }
  .disabled\:text-\[\#f4f4f4\]:disabled { color: rgb(244, 244, 244); }
  .disabled\:text-gray-50:disabled { color: rgb(249, 249, 249); }
  .disabled\:text-token-border-medium:disabled { color: var(--border-medium=
); }
  .disabled\:text-token-text-quaternary:disabled { color: var(--text-quater=
nary); }
  .disabled\:text-token-text-tertiary:disabled { color: var(--text-tertiary=
); }
  .disabled\:opacity-30:disabled { opacity: 0.3; }
  .disabled\:opacity-40:disabled { opacity: 0.4; }
  .disabled\:opacity-50:disabled { opacity: 0.5; }
  .disabled\:opacity-100:disabled { opacity: 1; }
  @media (hover: hover) {
  .disabled\:hover\:bg-transparent:disabled:hover { background-color: rgba(=
0, 0, 0, 0); }
  .disabled\:hover\:opacity-100:disabled:hover { opacity: 1; }
}
  .has-focus\:shadow-\[0_2px_12px_0px_rgba\(0\,0\,0\,0\.04\)\,0_9px_9px_0px=
_rgba\(0\,0\,0\,0\.01\)\,0_2px_5px_0px_rgba\(0\,0\,0\,0\.06\)\]:has(:focus)=
 { --tw-shadow: 0 2px 12px 0px var(--tw-shadow-color,#0000000a),0 9px 9px 0=
px var(--tw-shadow-color,#00000003),0 2px 5px 0px var(--tw-shadow-color,#00=
00000f); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var=
(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .has-focus-visible\:border-token-border-xheavy:has(:focus-visible) { bord=
er-color: var(--border-xheavy); }
  .has-data-has-thread-error\:pt-2:has([data-has-thread-error]) { padding-t=
op: calc(var(--spacing)*2); }
  .has-data-has-thread-error\:\[box-shadow\:var\(--sharp-edge-bottom-shadow=
\)\]:has([data-has-thread-error]) { box-shadow: var(--sharp-edge-bottom-sha=
dow); }
  .has-data-\[state\=3Dopen\]\:pointer-events-auto:has([data-state=3D"open"=
]) { pointer-events: auto; }
  .has-data-\[state\=3Dopen\]\:opacity-100:has([data-state=3D"open"]) { opa=
city: 1; }
  .has-data-\[state\=3Dopen\]\:\[mask-position\:0_0\]:has([data-state=3D"op=
en"]) { mask-position: 0px 0px; }
  .has-\[strong\]\:mb-0:has(:is(strong)) { margin-bottom: calc(var(--spacin=
g)*0); }
  .data-\[state\=3Dactive\]\:block[data-state=3D"active"] { display: block;=
 }
  .data-\[state\=3Dactive\]\:border-b-2[data-state=3D"active"] { border-bot=
tom-style: var(--tw-border-style); border-bottom-width: 2px; }
  .data-\[state\=3Dactive\]\:border-token-link-hover[data-state=3D"active"]=
 { border-color: var(--link-hover); }
  .data-\[state\=3Dactive\]\:text-token-link[data-state=3D"active"] { color=
: var(--link); }
  .data-\[state\=3Dchecked\]\:border-2[data-state=3D"checked"] { border-sty=
le: var(--tw-border-style); border-width: 2px; }
  .data-\[state\=3Dchecked\]\:border-black[data-state=3D"checked"] { border=
-color: rgb(0, 0, 0); }
  .data-\[state\=3Dchecked\]\:bg-black[data-state=3D"checked"] { background=
-color: rgb(0, 0, 0); }
  .data-\[state\=3Dunchecked\]\:m-\[1px\][data-state=3D"unchecked"] { margi=
n: 1px; }
  .data-\[state\=3Dunchecked\]\:border[data-state=3D"unchecked"] { border-s=
tyle: var(--tw-border-style); border-width: 1px; }
  .nth-1\:bg-\[\#FFF493\]:first-child { background-color: rgb(255, 244, 147=
); }
  .nth-2\:bg-\[\#EBEBEB\]:nth-child(2) { background-color: rgb(235, 235, 23=
5); }
  .nth-3\:bg-\[\#94E6FF\]:nth-child(3) { background-color: rgb(148, 230, 25=
5); }
  .nth-4\:bg-\[\#C8F7AB\]:nth-child(4) { background-color: rgb(200, 247, 17=
1); }
  .nth-5\:bg-\[\#B4A6FE\]:nth-child(5) { background-color: rgb(180, 166, 25=
4); }
  @media (prefers-reduced-motion: no-preference) {
  .motion-safe\:block { display: block; }
  .motion-safe\:transition { transition-duration: var(--tw-duration,var(--d=
efault-transition-duration)); transition-property: color, background-color,=
 border-color, outline-color, text-decoration-color, fill, stroke, --tw-gra=
dient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, trans=
form, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-f=
ilter; transition-timing-function: var(--tw-ease,var(--default-transition-t=
iming-function)); }
  .motion-safe\:transition-\[background-color\,transform\] { transition-dur=
ation: var(--tw-duration,var(--default-transition-duration)); transition-pr=
operty: background-color, transform; transition-timing-function: var(--tw-e=
ase,var(--default-transition-timing-function)); }
  .motion-safe\:transition-\[color\,background-color\,border-color\,text-de=
coration-color\,fill\,stroke\,box-shadow\,bottom\] { transition-duration: v=
ar(--tw-duration,var(--default-transition-duration)); transition-property: =
color, background-color, border-color, text-decoration-color, fill, stroke,=
 box-shadow, bottom; transition-timing-function: var(--tw-ease,var(--defaul=
t-transition-timing-function)); }
  .motion-safe\:transition-\[mask-position\] { transition-duration: var(--t=
w-duration,var(--default-transition-duration)); transition-property: -webki=
t-mask-position, mask-position; transition-timing-function: var(--tw-ease,v=
ar(--default-transition-timing-function)); }
  .motion-safe\:transition-all { transition-duration: var(--tw-duration,var=
(--default-transition-duration)); transition-property: all; transition-timi=
ng-function: var(--tw-ease,var(--default-transition-timing-function)); }
  .motion-safe\:transition-colors { transition-duration: var(--tw-duration,=
var(--default-transition-duration)); transition-property: color, background=
-color, border-color, outline-color, text-decoration-color, fill, stroke, -=
-tw-gradient-from, --tw-gradient-via, --tw-gradient-to; transition-timing-f=
unction: var(--tw-ease,var(--default-transition-timing-function)); }
  .motion-safe\:transition-opacity { transition-duration: var(--tw-duration=
,var(--default-transition-duration)); transition-property: opacity; transit=
ion-timing-function: var(--tw-ease,var(--default-transition-timing-function=
)); }
  .motion-safe\:transition-transform { transition-duration: var(--tw-durati=
on,var(--default-transition-duration)); transition-property: transform, tra=
nslate, scale, rotate; transition-timing-function: var(--tw-ease,var(--defa=
ult-transition-timing-function)); }
  .motion-safe\:transition-width { transition-duration: var(--tw-duration,v=
ar(--default-transition-duration)); transition-property: width; transition-=
timing-function: var(--tw-ease,var(--default-transition-timing-function)); =
}
  .motion-safe\:delay-300 { transition-delay: 0.3s; }
  .motion-safe\:duration-100 { --tw-duration: .1s; transition-duration: 0.1=
s; }
  .motion-safe\:duration-300 { --tw-duration: .3s; transition-duration: 0.3=
s; }
  .motion-safe\:\[transition\:0\.3s_transform_var\(--spring-standard\)\,0\.=
5s_opacity_var\(--spring-standard\)\,0\.5s_visibility_var\(--spring-standar=
d\)\] { transition: .3s transform var(--spring-standard),.5s opacity var(--=
spring-standard),.5s visibility var(--spring-standard); }
  .motion-safe\:\[transition\:border-color_0\.1s_ease-in-out\] { transition=
: border-color 0.1s ease-in-out; }
  .motion-safe\:\[transition\:height_0\.3s_var\(--easing-common\)\] { trans=
ition: height .3s var(--easing-common); }
}
  @media (hover: hover) {
  @media (prefers-reduced-motion: no-preference) {
  .hover\:motion-safe\:scale-105:hover { --tw-scale-x: 105%; --tw-scale-y: =
105%; --tw-scale-z: 105%; scale: var(--tw-scale-x)var(--tw-scale-y); }
}
}
  @media (prefers-reduced-motion: no-preference) {
  @media (hover: hover) {
  .motion-safe\:hover\:scale-105:hover { --tw-scale-x: 105%; --tw-scale-y: =
105%; --tw-scale-z: 105%; scale: var(--tw-scale-x)var(--tw-scale-y); }
}
  .motion-safe\:active\:scale-\[98\%\]:active { scale: 0.98; }
  .motion-safe\:active\:transition-transform:active { transition-duration: =
var(--tw-duration,var(--default-transition-duration)); transition-property:=
 transform, translate, scale, rotate; transition-timing-function: var(--tw-=
ease,var(--default-transition-timing-function)); }
}
  @media (max-width: 479px) {
  .max-xs\:hidden { display: none; }
  .max-xs\:max-h-\[260px\] { max-height: 260px; }
  .max-xs\:gap-1 { gap: calc(var(--spacing)*1); }
  .max-xs\:\[--force-hide-label\:none\] { --force-hide-label: none; }
}
  @media (max-width: 63.999rem) {
  .max-lg\:bottom-full { bottom: 100%; }
  .max-lg\:hidden { display: none; }
  .max-lg\:w-0\! { width: calc(var(--spacing)*0) !important; }
  .max-lg\:flex-col-reverse { flex-direction: column-reverse; }
}
  @media (max-width: 47.999rem) {
  .max-md\:sr-only { clip: rect(0px, 0px, 0px, 0px); border-width: 0px; hei=
ght: 1px; margin: -1px; overflow: hidden; padding: 0px; white-space: nowrap=
; width: 1px; }
  .max-md\:absolute, .max-md\:sr-only { position: absolute; }
  .max-md\:start-0 { inset-inline-start: calc(var(--spacing)*0); }
  .max-md\:end-0 { inset-inline-end: calc(var(--spacing)*0); }
  .max-md\:top-0 { top: calc(var(--spacing)*0); }
  .max-md\:mt-\[-80px\] { margin-top: -80px; }
  .max-md\:mb-6 { margin-bottom: calc(var(--spacing)*6); }
  .max-md\:flex { display: flex; }
  .max-md\:hidden { display: none; }
  .max-md\:aspect-square { aspect-ratio: 1 / 1; }
  .max-md\:h-full { height: 100%; }
  .max-md\:\!w-0, .max-md\:w-0\! { width: calc(var(--spacing)*0) !important=
; }
  .max-md\:w-10 { width: calc(var(--spacing)*10); }
  .max-md\:w-\[100dvw\] { width: 100dvw; }
  .max-md\:max-w-\[100dvw\] { max-width: 100dvw; }
  .max-md\:min-w-\[50vw\] { min-width: 50vw; }
  .max-md\:snap-always { scroll-snap-stop: always; }
  .max-md\:items-center { align-items: center; }
  .max-md\:gap-0 { gap: calc(var(--spacing)*0); }
  .max-md\:gap-0\.5 { gap: calc(var(--spacing)*.5); }
  .max-md\:rounded-none { border-radius: 0px; }
  .max-md\:px-0 { padding-inline: calc(var(--spacing)*0); }
  .max-md\:px-4 { padding-inline: calc(var(--spacing)*4); }
  .max-md\:ps-2 { padding-inline-start: calc(var(--spacing)*2); }
  .max-md\:pt-0 { padding-top: calc(var(--spacing)*0); }
  .max-md\:pb-6 { padding-bottom: calc(var(--spacing)*6); }
  .max-md\:opacity-100 { opacity: 1; }
  .max-md\:shadow-none { --tw-shadow: 0 0 #0000; box-shadow: var(--tw-inset=
-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-=
ring-shadow),var(--tw-shadow); }
}
  @media (max-width: 39.999rem) {
  .max-sm\:mt-6 { margin-top: calc(var(--spacing)*6); }
  .max-sm\:mb-3 { margin-bottom: calc(var(--spacing)*3); }
  .max-sm\:mb-4 { margin-bottom: calc(var(--spacing)*4); }
  .max-sm\:hidden { display: none; }
  .max-sm\:h-6 { height: calc(var(--spacing)*6); }
  .max-sm\:h-12 { height: calc(var(--spacing)*12); }
  .max-sm\:max-h-\[300px\] { max-height: 300px; }
  .max-sm\:min-h-\[84px\] { min-height: 84px; }
  .max-sm\:w-6 { width: calc(var(--spacing)*6); }
  .max-sm\:w-12 { width: calc(var(--spacing)*12); }
  .max-sm\:w-full { width: 100%; }
  :where(.max-sm\:space-x-6 > :not(:last-child)) { --tw-space-x-reverse: 0;=
 margin-inline-end: calc(var(--spacing)*6*(1 - var(--tw-space-x-reverse)));=
 margin-inline-start: calc(var(--spacing)*6*var(--tw-space-x-reverse)); }
  .max-sm\:gap-y-2 { row-gap: calc(var(--spacing)*2); }
  .max-sm\:overflow-y-auto { overflow-y: auto; }
  .max-sm\:p-1\.5 { padding: calc(var(--spacing)*1.5); }
  .max-sm\:px-5 { padding-inline: calc(var(--spacing)*5); }
  .max-sm\:py-4 { padding-block: calc(var(--spacing)*4); }
  .max-sm\:text-center { text-align: center; }
  .max-sm\:text-xl { font-size: var(--text-xl); line-height: var(--tw-leadi=
ng,var(--text-xl--line-height)); }
  .max-sm\:shadow-md { --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color,#0=
000001a),0 2px 4px -2px var(--tw-shadow-color,#0000001a); box-shadow: var(-=
-tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),=
var(--tw-ring-shadow),var(--tw-shadow); }
}
  @media (min-width: 480px) {
  .xs\:-mt-4 { margin-top: calc(var(--spacing)*-4); }
  .xs\:max-w-40 { max-width: calc(var(--spacing)*40); }
  .xs\:max-w-sm\! { max-width: var(--container-sm) !important; }
  .xs\:max-w-xs\! { max-width: var(--container-xs) !important; }
  .xs\:columns-2 { column-count: 2; }
  .xs\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .xs\:flex-col { flex-direction: column; }
  .xs\:pe-3 { padding-inline-end: calc(var(--spacing)*3); }
}
  @media (min-width: 1200px) {
  .min-\[1200px\]\:hidden { display: none; }
}
  @media (min-width: 40rem) {
  .sm\:absolute { position: absolute; }
  .sm\:inset-x-4 { inset-inline: calc(var(--spacing)*4); }
  .sm\:start-1\/2 { inset-inline-start: 50%; }
  .sm\:start-6 { inset-inline-start: calc(var(--spacing)*6); }
  .sm\:end-6 { inset-inline-end: calc(var(--spacing)*6); }
  .sm\:top-6 { top: calc(var(--spacing)*6); }
  .sm\:bottom-snc-1 { bottom: var(--snc-1); }
  .sm\:col-span-2 { grid-column: span 2 / span 2; }
  .sm\:-mx-6 { margin-inline: calc(var(--spacing)*-6); }
  .sm\:mx-16 { margin-inline: calc(var(--spacing)*16); }
  .sm\:mx-\[-32px\] { margin-inline: -32px; }
  .sm\:ms-8 { margin-inline-start: calc(var(--spacing)*8); }
  .sm\:me-8 { margin-inline-end: calc(var(--spacing)*8); }
  .sm\:-mt-7 { margin-top: calc(var(--spacing)*-7); }
  .sm\:-mt-12 { margin-top: calc(var(--spacing)*-12); }
  .sm\:mt-0 { margin-top: calc(var(--spacing)*0); }
  .sm\:mt-4 { margin-top: calc(var(--spacing)*4); }
  .sm\:mt-5 { margin-top: calc(var(--spacing)*5); }
  .sm\:mt-auto { margin-top: auto; }
  .sm\:mb-3 { margin-bottom: calc(var(--spacing)*3); }
  .sm\:mb-4 { margin-bottom: calc(var(--spacing)*4); }
  .sm\:mb-6 { margin-bottom: calc(var(--spacing)*6); }
  .sm\:line-clamp-3 { -webkit-line-clamp: 3; -webkit-box-orient: vertical; =
display: -webkit-box; overflow: hidden; }
  .sm\:block { display: block; }
  .sm\:flex { display: flex; }
  .sm\:grid { display: grid; }
  .sm\:hidden { display: none; }
  .sm\:inline { display: inline; }
  .sm\:h-10 { height: calc(var(--spacing)*10); }
  .sm\:h-32 { height: calc(var(--spacing)*32); }
  .sm\:h-\[172px\] { height: 172px; }
  .sm\:h-full { height: 100%; }
  .sm\:h-snc-input-height { height: var(--snc-input-height); }
  .sm\:max-h-80 { max-height: calc(var(--spacing)*80); }
  .sm\:w-10 { width: calc(var(--spacing)*10); }
  .sm\:w-32 { width: calc(var(--spacing)*32); }
  .sm\:w-\[380px\] { width: 380px; }
  .sm\:w-\[384px\] { width: 384px; }
  .sm\:w-\[460px\] { width: 460px; }
  .sm\:w-\[calc\(\(100\%-1rem\)\/4\)\] { width: calc(25% - 0.25rem); }
  .sm\:w-auto { width: auto; }
  .sm\:max-w-2xl { max-width: var(--container-2xl); }
  .sm\:max-w-60 { max-width: calc(var(--spacing)*60); }
  .sm\:max-w-100 { max-width: 25rem; }
  .sm\:max-w-\[400px\] { max-width: 400px; }
  .sm\:max-w-\[552px\] { max-width: 552px; }
  .sm\:max-w-\[700px\] { max-width: 700px; }
  .sm\:max-w-\[calc\(100vw-10rem\)\] { max-width: calc(-10rem + 100vw); }
  .sm\:max-w-md { max-width: var(--container-md); }
  .sm\:max-w-xs { max-width: var(--container-xs); }
  .sm\:min-w-\[300px\] { min-width: 300px; }
  .sm\:min-w-\[360px\] { min-width: 360px; }
  .sm\:grow { flex-grow: 1; }
  .sm\:-translate-x-1\/2 { --tw-translate-x: -50%; translate: var(--tw-tran=
slate-x)var(--tw-translate-y); }
  .sm\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .sm\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .sm\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .sm\:flex-row { flex-direction: row; }
  .sm\:flex-row-reverse { flex-direction: row-reverse; }
  .sm\:items-center { align-items: center; }
  .sm\:justify-center { justify-content: center; }
  .sm\:justify-start { justify-content: flex-start; }
  .sm\:gap-0 { gap: calc(var(--spacing)*0); }
  .sm\:gap-1 { gap: calc(var(--spacing)*1); }
  .sm\:gap-2\.5 { gap: calc(var(--spacing)*2.5); }
  .sm\:gap-3 { gap: calc(var(--spacing)*3); }
  .sm\:gap-4 { gap: calc(var(--spacing)*4); }
  .sm\:gap-6 { gap: calc(var(--spacing)*6); }
  .sm\:gap-x-2\.5 { column-gap: calc(var(--spacing)*2.5); }
  .sm\:gap-x-16 { column-gap: calc(var(--spacing)*16); }
  .sm\:gap-y-0 { row-gap: calc(var(--spacing)*0); }
  .sm\:gap-y-2 { row-gap: calc(var(--spacing)*2); }
  .sm\:gap-y-4 { row-gap: calc(var(--spacing)*4); }
  .sm\:gap-y-5 { row-gap: calc(var(--spacing)*5); }
  .sm\:overflow-hidden { overflow: hidden; }
  .sm\:rounded-\[28px\] { border-radius: 28px; }
  .sm\:rounded-\[30px\] { border-radius: 30px; }
  .sm\:rounded-full { border-radius: 3.40282e+38px; }
  .sm\:rounded-lg { border-radius: var(--radius-lg); }
  .sm\:rounded-md { border-radius: var(--radius-md); }
  .sm\:rounded-ss-xl { border-start-start-radius: var(--radius-xl); }
  .sm\:rounded-se-xl { border-start-end-radius: var(--radius-xl); }
  .sm\:rounded-ee-xl { border-end-end-radius: var(--radius-xl); }
  .sm\:rounded-es-xl { border-end-start-radius: var(--radius-xl); }
  .sm\:rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-=
radius: 30px; }
  .sm\:border-none { --tw-border-style: none; border-style: none; }
  .sm\:bg-token-main-surface-tertiary { background-color: var(--main-surfac=
e-tertiary); }
  .sm\:p-0 { padding: calc(var(--spacing)*0); }
  .sm\:p-2 { padding: calc(var(--spacing)*2); }
  .sm\:p-3 { padding: calc(var(--spacing)*3); }
  .sm\:p-6 { padding: calc(var(--spacing)*6); }
  .sm\:p-8 { padding: calc(var(--spacing)*8); }
  .sm\:p-10 { padding: calc(var(--spacing)*10); }
  .sm\:px-0 { padding-inline: calc(var(--spacing)*0); }
  .sm\:px-2 { padding-inline: calc(var(--spacing)*2); }
  .sm\:px-4 { padding-inline: calc(var(--spacing)*4); }
  .sm\:px-6 { padding-inline: calc(var(--spacing)*6); }
  .sm\:px-8 { padding-inline: calc(var(--spacing)*8); }
  .sm\:px-10 { padding-inline: calc(var(--spacing)*10); }
  .sm\:px-snc-results-padding { padding-inline: var(--snc-results-padding);=
 }
  .sm\:py-2\.5 { padding-block: calc(var(--spacing)*2.5); }
  .sm\:py-3 { padding-block: calc(var(--spacing)*3); }
  .sm\:py-6 { padding-block: calc(var(--spacing)*6); }
  .sm\:ps-2 { padding-inline-start: calc(var(--spacing)*2); }
  .sm\:ps-5 { padding-inline-start: calc(var(--spacing)*5); }
  .sm\:ps-\[3\.25rem\] { padding-inline-start: 3.25rem; }
  .sm\:pt-8 { padding-top: calc(var(--spacing)*8); }
  .sm\:pt-12 { padding-top: calc(var(--spacing)*12); }
  .sm\:pt-16 { padding-top: calc(var(--spacing)*16); }
  .sm\:pb-6 { padding-bottom: calc(var(--spacing)*6); }
  .sm\:pb-8 { padding-bottom: calc(var(--spacing)*8); }
  .sm\:pb-10 { padding-bottom: calc(var(--spacing)*10); }
  .sm\:pb-16 { padding-bottom: calc(var(--spacing)*16); }
  .sm\:text-center { text-align: center; }
  .sm\:text-2xl { font-size: var(--text-2xl); line-height: var(--tw-leading=
,var(--text-2xl--line-height)); }
  .sm\:text-base { font-size: var(--text-base); line-height: var(--tw-leadi=
ng,var(--text-base--line-height)); }
  .sm\:text-lg { font-size: var(--text-lg); line-height: var(--tw-leading,v=
ar(--text-lg--line-height)); }
  .sm\:text-sm { font-size: var(--text-sm); line-height: var(--tw-leading,v=
ar(--text-sm--line-height)); }
  .sm\:text-\[40px\] { font-size: 40px; }
  .sm\:text-token-main-surface-tertiary { color: var(--main-surface-tertiar=
y); }
  .sm\:shadow-lg { --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color,#000=
0001a),0 4px 6px -4px var(--tw-shadow-color,#0000001a); }
  .sm\:shadow-lg, .sm\:shadow-md { box-shadow: var(--tw-inset-shadow),var(-=
-tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),v=
ar(--tw-shadow); }
  .sm\:shadow-md { --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color,#00000=
01a),0 2px 4px -2px var(--tw-shadow-color,#0000001a); }
  @supports (min-height:100dvh) {
  .sm\:supports-\[min-height\:100dvh\]\:min-h-\[100dvh\] { min-height: 100d=
vh; }
}
}
  @media (min-width: 48rem) {
  .md\:absolute { position: absolute; }
  .md\:fixed { position: fixed; }
  .md\:relative { position: relative; }
  .md\:static { position: static; }
  .md\:start-0 { inset-inline-start: calc(var(--spacing)*0); }
  .md\:start-4 { inset-inline-start: calc(var(--spacing)*4); }
  .md\:end-0 { inset-inline-end: calc(var(--spacing)*0); }
  .md\:end-4 { inset-inline-end: calc(var(--spacing)*4); }
  .md\:end-6 { inset-inline-end: calc(var(--spacing)*6); }
  .md\:end-12 { inset-inline-end: calc(var(--spacing)*12); }
  .md\:top-4 { top: calc(var(--spacing)*4); }
  .md\:top-6 { top: calc(var(--spacing)*6); }
  .md\:top-\[22px\] { top: 22px; }
  .md\:top-header-height { top: var(--header-height); }
  .md\:bottom-4 { bottom: calc(var(--spacing)*4); }
  .md\:bottom-6 { bottom: calc(var(--spacing)*6); }
  .md\:col-span-1 { grid-column: span 1 / span 1; }
  .md\:col-span-2 { grid-column: span 2 / span 2; }
  .md\:m-0 { margin: calc(var(--spacing)*0); }
  .md\:mx-4 { margin-inline: calc(var(--spacing)*4); }
  .md\:my-4 { margin-block: calc(var(--spacing)*4); }
  .md\:ms-0 { margin-inline-start: calc(var(--spacing)*0); }
  .md\:ms-8 { margin-inline-start: calc(var(--spacing)*8); }
  .md\:ms-\[-8px\] { margin-inline-start: -8px; }
  .md\:-mt-4 { margin-top: calc(var(--spacing)*-4); }
  .md\:-mt-16 { margin-top: calc(var(--spacing)*-16); }
  .md\:-mt-48 { margin-top: calc(var(--spacing)*-48); }
  .md\:mt-0 { margin-top: calc(var(--spacing)*0); }
  .md\:mt-2 { margin-top: calc(var(--spacing)*2); }
  .md\:mt-3 { margin-top: calc(var(--spacing)*3); }
  .md\:mt-5 { margin-top: calc(var(--spacing)*5); }
  .md\:mt-6 { margin-top: calc(var(--spacing)*6); }
  .md\:mt-8 { margin-top: calc(var(--spacing)*8); }
  .md\:mt-10 { margin-top: calc(var(--spacing)*10); }
  .md\:mt-12 { margin-top: calc(var(--spacing)*12); }
  .md\:mt-\[-48px\] { margin-top: -48px; }
  .md\:mt-\[120px\] { margin-top: 120px; }
  .md\:mt-px { margin-top: 1px; }
  .md\:-mb-4 { margin-bottom: calc(var(--spacing)*-4); }
  .md\:mb-0 { margin-bottom: calc(var(--spacing)*0); }
  .md\:mb-8 { margin-bottom: calc(var(--spacing)*8); }
  .md\:mb-10 { margin-bottom: calc(var(--spacing)*10); }
  .md\:line-clamp-3 { -webkit-line-clamp: 3; -webkit-box-orient: vertical; =
display: -webkit-box; overflow: hidden; }
  .md\:block { display: block; }
  .md\:flex { display: flex; }
  .md\:grid { display: grid; }
  .md\:hidden { display: none; }
  .md\:inline-flex { display: inline-flex; }
  .md\:h-6 { height: calc(var(--spacing)*6); }
  .md\:h-7 { height: calc(var(--spacing)*7); }
  .md\:h-24 { height: calc(var(--spacing)*24); }
  .md\:h-32 { height: calc(var(--spacing)*32); }
  .md\:h-full { height: 100%; }
  .md\:max-h-\[80vh\] { max-height: 80vh; }
  .md\:max-h-\[600px\] { max-height: 600px; }
  .md\:max-h-\[625px\] { max-height: 625px; }
  .md\:max-h-\[calc\(100vh-300px\)\] { max-height: calc(-300px + 100vh); }
  .md\:min-h-\[20rem\] { min-height: 20rem; }
  .md\:min-h-\[30rem\] { min-height: 30rem; }
  .md\:min-h-\[300px\] { min-height: 300px; }
  .md\:min-h-\[380px\] { min-height: 380px; }
  .md\:min-h-\[600px\] { min-height: 600px; }
  .md\:min-h-\[625px\] { min-height: 625px; }
  .md\:w-0 { width: calc(var(--spacing)*0); }
  .md\:w-1\/2 { width: 50%; }
  .md\:w-1\/3 { width: 33.3333%; }
  .md\:w-3\/5 { width: 60%; }
  .md\:w-3xl { width: var(--container-3xl); }
  .md\:w-6 { width: calc(var(--spacing)*6); }
  .md\:w-24 { width: calc(var(--spacing)*24); }
  .md\:w-\[85\%\] { width: 85%; }
  .md\:w-\[100px\] { width: 100px; }
  .md\:w-\[370px\] { width: 370px; }
  .md\:w-\[500px\] { width: 500px; }
  .md\:w-\[720px\] { width: 720px; }
  .md\:w-\[calc\(100\%-\.5rem\)\] { width: calc(100% - 0.5rem); }
  .md\:w-\[calc\(100\%-16rem\)\] { width: calc(100% - 16rem); }
  .md\:w-\[calc\(100\%_-_64px\)\] { width: calc(100% - 64px); }
  .md\:w-auto { width: auto; }
  .md\:w-full { width: 100%; }
  .md\:max-w-3xl { max-width: var(--container-3xl); }
  .md\:max-w-4xl { max-width: var(--container-4xl); }
  .md\:max-w-96 { max-width: calc(var(--spacing)*96); }
  .md\:max-w-\[80\%\] { max-width: 80%; }
  .md\:max-w-\[672px\] { max-width: 672px; }
  .md\:max-w-\[680px\] { max-width: 680px; }
  .md\:max-w-none { max-width: none; }
  .md\:min-w-\[22rem\] { min-width: 22rem; }
  .md\:min-w-\[180px\] { min-width: 180px; }
  .md\:min-w-\[450px\] { min-width: 450px; }
  .md\:min-w-\[680px\] { min-width: 680px; }
  .md\:flex-1 { flex: 1 1 0%; }
  .md\:shrink { flex-shrink: 1; }
  .md\:grow-0 { flex-grow: 0; }
  .md\:basis-0 { flex-basis: calc(var(--spacing)*0); }
  .md\:basis-\[25vw\] { flex-basis: 25vw; }
  .md\:basis-\[75vw\] { flex-basis: 75vw; }
  .md\:translate-y-\[30px\] { --tw-translate-y: 30px; translate: var(--tw-t=
ranslate-x)var(--tw-translate-y); }
  .md\:scroll-ps-8 { scroll-padding-inline-start: calc(var(--spacing)*8); }
  .md\:columns-2 { column-count: 2; }
  .md\:columns-3 { column-count: 3; }
  .md\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .md\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .md\:grid-cols-\[1fr_auto_1fr\] { grid-template-columns: 1fr auto 1fr; }
  .md\:grid-rows-\[minmax\(20px\,1fr\)_auto_20px\] { grid-template-rows: mi=
nmax(20px, 1fr) auto 20px; }
  .md\:grid-rows-\[minmax\(20px\,1fr\)_auto_minmax\(20px\,1fr\)\] { grid-te=
mplate-rows: minmax(20px, 1fr) auto minmax(20px, 1fr); }
  .md\:flex-row { flex-direction: row; }
  .md\:flex-row-reverse { flex-direction: row-reverse; }
  .md\:items-center { align-items: center; }
  .md\:items-end { align-items: flex-end; }
  .md\:items-start { align-items: flex-start; }
  .md\:justify-between { justify-content: space-between; }
  .md\:justify-center { justify-content: center; }
  .md\:gap-0 { gap: calc(var(--spacing)*0); }
  .md\:gap-2 { gap: calc(var(--spacing)*2); }
  .md\:gap-3 { gap: calc(var(--spacing)*3); }
  .md\:gap-5 { gap: calc(var(--spacing)*5); }
  .md\:gap-6 { gap: calc(var(--spacing)*6); }
  .md\:gap-8 { gap: calc(var(--spacing)*8); }
  .md\:gap-10 { gap: calc(var(--spacing)*10); }
  .md\:gap-16 { gap: calc(var(--spacing)*16); }
  .md\:gap-x-2 { column-gap: calc(var(--spacing)*2); }
  .md\:gap-x-4 { column-gap: calc(var(--spacing)*4); }
  .md\:gap-y-1\.5 { row-gap: calc(var(--spacing)*1.5); }
  .md\:self-end { align-self: flex-end; }
  .md\:overflow-hidden { overflow: hidden; }
  .md\:rounded-3xl { border-radius: var(--radius-3xl); }
  .md\:rounded-lg { border-radius: var(--radius-lg); }
  .md\:rounded-none { border-radius: 0px; }
  .md\:border { border-style: var(--tw-border-style); border-width: 1px; }
  .md\:border-s { border-inline-start-style: var(--tw-border-style); border=
-inline-start-width: 1px; }
  .md\:border-e { border-inline-end-width: 1px; }
  .md\:border-e, .md\:border-e-0 { border-inline-end-style: var(--tw-border=
-style); }
  .md\:border-e-0 { border-inline-end-width: 0px; }
  .md\:border-t-0 { border-top-style: var(--tw-border-style); border-top-wi=
dth: 0px; }
  .md\:border-b { border-bottom-width: 1px; }
  .md\:border-b, .md\:border-b-2 { border-bottom-style: var(--tw-border-sty=
le); }
  .md\:border-b-2 { border-bottom-width: 2px; }
  .md\:border-gray-100 { border-color: rgb(236, 236, 236); }
  .md\:border-transparent { border-color: rgba(0, 0, 0, 0); }
  .md\:bg-token-main-surface-primary { background-color: var(--main-surface=
-primary); }
  .md\:bg-transparent { background-color: rgba(0, 0, 0, 0); }
  .md\:bg-transparent\! { background-color: rgba(0, 0, 0, 0) !important; }
  .md\:bg-vert-light-gradient { background-image: linear-gradient(rgba(255,=
 255, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }
  .md\:p-3 { padding: calc(var(--spacing)*3); }
  .md\:p-4 { padding: calc(var(--spacing)*4); }
  .md\:p-6 { padding: calc(var(--spacing)*6); }
  .md\:px-0 { padding-inline: calc(var(--spacing)*0); }
  .md\:px-2 { padding-inline: calc(var(--spacing)*2); }
  .md\:px-3 { padding-inline: calc(var(--spacing)*3); }
  .md\:px-3\.5 { padding-inline: calc(var(--spacing)*3.5); }
  .md\:px-4 { padding-inline: calc(var(--spacing)*4); }
  .md\:px-5 { padding-inline: calc(var(--spacing)*5); }
  .md\:px-6 { padding-inline: calc(var(--spacing)*6); }
  .md\:px-8 { padding-inline: calc(var(--spacing)*8); }
  .md\:px-12 { padding-inline: calc(var(--spacing)*12); }
  .md\:px-\[60px\] { padding-inline: 60px; }
  .md\:py-0 { padding-block: calc(var(--spacing)*0); }
  .md\:py-2 { padding-block: calc(var(--spacing)*2); }
  .md\:py-3 { padding-block: calc(var(--spacing)*3); }
  .md\:py-4 { padding-block: calc(var(--spacing)*4); }
  .md\:py-20 { padding-block: calc(var(--spacing)*20); }
  .md\:py-32 { padding-block: calc(var(--spacing)*32); }
  .md\:py-\[22px\] { padding-block: 22px; }
  .md\:ps-0 { padding-inline-start: calc(var(--spacing)*0); }
  .md\:ps-2 { padding-inline-start: calc(var(--spacing)*2); }
  .md\:ps-3 { padding-inline-start: calc(var(--spacing)*3); }
  .md\:ps-4 { padding-inline-start: calc(var(--spacing)*4); }
  .md\:ps-6 { padding-inline-start: calc(var(--spacing)*6); }
  .md\:ps-8 { padding-inline-start: calc(var(--spacing)*8); }
  .md\:pe-0 { padding-inline-end: calc(var(--spacing)*0); }
  .md\:pe-3 { padding-inline-end: calc(var(--spacing)*3); }
  .md\:pe-4 { padding-inline-end: calc(var(--spacing)*4); }
  .md\:pe-8 { padding-inline-end: calc(var(--spacing)*8); }
  .md\:pt-0 { padding-top: calc(var(--spacing)*0); }
  .md\:pt-0\! { padding-top: calc(var(--spacing)*0) !important; }
  .md\:pt-2 { padding-top: calc(var(--spacing)*2); }
  .md\:pt-4 { padding-top: calc(var(--spacing)*4); }
  .md\:pt-5 { padding-top: calc(var(--spacing)*5); }
  .md\:pt-\[3px\] { padding-top: 3px; }
  .md\:pt-\[4\.5rem\] { padding-top: 4.5rem; }
  .md\:pt-header-height { padding-top: var(--header-height); }
  .md\:pb-0 { padding-bottom: calc(var(--spacing)*0); }
  .md\:pb-2 { padding-bottom: calc(var(--spacing)*2); }
  .md\:pb-4 { padding-bottom: calc(var(--spacing)*4); }
  .md\:pb-5 { padding-bottom: calc(var(--spacing)*5); }
  .md\:pb-6 { padding-bottom: calc(var(--spacing)*6); }
  .md\:pb-10 { padding-bottom: calc(var(--spacing)*10); }
  [dir=3D"ltr"] .md\:pl-2 { padding-left: calc(var(--spacing)*2); }
  [dir=3D"rtl"] .md\:pl-2 { padding-right: calc(var(--spacing)*2); }
  [dir=3D"ltr"] .md\:pl-4 { padding-left: calc(var(--spacing)*4); }
  [dir=3D"rtl"] .md\:pl-4 { padding-right: calc(var(--spacing)*4); }
  .md\:text-justify { text-align: justify; }
  .md\:text-start { text-align: start; }
  .md\:text-2xl { font-size: var(--text-2xl); line-height: var(--tw-leading=
,var(--text-2xl--line-height)); }
  .md\:text-3xl { font-size: var(--text-3xl); line-height: var(--tw-leading=
,var(--text-3xl--line-height)); }
  .md\:text-5xl { font-size: var(--text-5xl); line-height: var(--tw-leading=
,var(--text-5xl--line-height)); }
  .md\:text-base { font-size: var(--text-base); line-height: var(--tw-leadi=
ng,var(--text-base--line-height)); }
  .md\:text-lg { font-size: var(--text-lg); line-height: var(--tw-leading,v=
ar(--text-lg--line-height)); }
  .md\:text-\[32px\] { font-size: 32px; }
  .md\:text-\[40px\] { font-size: 40px; }
  .md\:text-\[44px\] { font-size: 44px; }
  .md\:leading-8 { --tw-leading: calc(var(--spacing)*8); line-height: calc(=
var(--spacing)*8); }
  .md\:leading-tight { --tw-leading: var(--leading-tight); line-height: var=
(--leading-tight); }
  .md\:text-pretty { text-wrap: pretty; }
  .md\:text-token-text-primary { color: var(--text-primary); }
  .md\:text-token-text-tertiary { color: var(--text-tertiary); }
  .md\:opacity-0 { opacity: 0; }
  .md\:opacity-100 { opacity: 1; }
  .md\:shadow-\[0px_12px_24px_rgba\(0\,0\,0\,0\.032\)\] { --tw-shadow: 0px =
12px 24px var(--tw-shadow-color,#00000008); }
  .md\:shadow-\[0px_12px_24px_rgba\(0\,0\,0\,0\.032\)\], .md\:shadow-lg { b=
ox-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring=
-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .md\:shadow-lg { --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color,#000=
0001a),0 4px 6px -4px var(--tw-shadow-color,#0000001a); }
  .md\:\[--gutter-min-height\:2\.25rem\] { --gutter-min-height: 2.25rem; }
  .md\:after\:opacity-0::after { content: var(--tw-content); opacity: 0; }
  .md\:after\:opacity-100::after { content: var(--tw-content); opacity: 1; =
}
  .md\:first\:ms-0:first-child { margin-inline-start: calc(var(--spacing)*0=
); }
  .md\:first\:rounded-ss-xl:first-child { border-start-start-radius: var(--=
radius-xl); }
  .md\:first\:rounded-es-xl:first-child { border-end-start-radius: var(--ra=
dius-xl); }
  .md\:last\:me-0:last-child { margin-inline-end: calc(var(--spacing)*0); }
  .md\:last\:mb-6:last-child { margin-bottom: calc(var(--spacing)*6); }
  .md\:last\:rounded-se-xl:last-child { border-start-end-radius: var(--radi=
us-xl); }
  .md\:last\:rounded-ee-xl:last-child { border-end-end-radius: var(--radius=
-xl); }
  .md\:last\:border-e:last-child { border-inline-end-style: var(--tw-border=
-style); border-inline-end-width: 1px; }
  @media (hover: hover) {
  .md\:hover\:bg-gray-50:hover { background-color: rgb(249, 249, 249); }
}
}
  @media (min-width: 64rem) {
  .lg\:end-3 { inset-inline-end: calc(var(--spacing)*3); }
  .lg\:top-full { top: 100%; }
  .lg\:bottom-3 { bottom: calc(var(--spacing)*3); }
  .lg\:order-3 { order: 3; }
  .lg\:order-last { order: 9999; }
  .lg\:-mx-8 { margin-inline: calc(var(--spacing)*-8); }
  .lg\:mx-auto { margin-inline: auto; }
  .lg\:block { display: block; }
  .lg\:hidden { display: none; }
  .lg\:h-36 { height: calc(var(--spacing)*36); }
  .lg\:w-3xl { width: var(--container-3xl); }
  .lg\:w-\[53\%\] { width: 53%; }
  .lg\:w-\[80\%\] { width: 80%; }
  .lg\:w-full { width: 100%; }
  .lg\:max-w-2xl { max-width: var(--container-2xl); }
  .lg\:max-w-52 { max-width: calc(var(--spacing)*52); }
  .lg\:max-w-\[40rem\] { max-width: 40rem; }
  .lg\:max-w-\[796px\] { max-width: 796px; }
  .lg\:max-w-\[800px\] { max-width: 800px; }
  .lg\:max-w-md { max-width: var(--container-md); }
  .lg\:grow { flex-grow: 1; }
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .lg\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .lg\:grid-cols-\[60\%_40\%\] { grid-template-columns: 60% 40%; }
  .lg\:flex-row { flex-direction: row; }
  .lg\:items-end { align-items: flex-end; }
  .lg\:justify-between { justify-content: space-between; }
  .lg\:gap-6 { gap: calc(var(--spacing)*6); }
  .lg\:gap-x-3 { column-gap: calc(var(--spacing)*3); }
  .lg\:gap-x-6 { column-gap: calc(var(--spacing)*6); }
  .lg\:gap-y-2\.5 { row-gap: calc(var(--spacing)*2.5); }
  .lg\:border-s { border-inline-start-style: var(--tw-border-style); border=
-inline-start-width: 1px; }
  .lg\:border-e { border-inline-end-style: var(--tw-border-style); border-i=
nline-end-width: 1px; }
  .lg\:border-b-0 { border-bottom-style: var(--tw-border-style); border-bot=
tom-width: 0px; }
  .lg\:px-0 { padding-inline: calc(var(--spacing)*0); }
  .lg\:px-2 { padding-inline: calc(var(--spacing)*2); }
  .lg\:px-3 { padding-inline: calc(var(--spacing)*3); }
  .lg\:px-4 { padding-inline: calc(var(--spacing)*4); }
  .lg\:px-8 { padding-inline: calc(var(--spacing)*8); }
  .lg\:px-10 { padding-inline: calc(var(--spacing)*10); }
  .lg\:px-16 { padding-inline: calc(var(--spacing)*16); }
  .lg\:py-3 { padding-block: calc(var(--spacing)*3); }
  .lg\:py-6 { padding-block: calc(var(--spacing)*6); }
  .lg\:py-10 { padding-block: calc(var(--spacing)*10); }
  .lg\:ps-4 { padding-inline-start: calc(var(--spacing)*4); }
  .lg\:ps-10 { padding-inline-start: calc(var(--spacing)*10); }
  .lg\:pe-4 { padding-inline-end: calc(var(--spacing)*4); }
  .lg\:pt-8 { padding-top: calc(var(--spacing)*8); }
  .lg\:pb-4 { padding-bottom: calc(var(--spacing)*4); }
  .lg\:text-start { text-align: start; }
  .lg\:text-\[22px\] { font-size: 22px; }
}
  @media (min-width: 80rem) {
  .xl\:min-h-44 { min-height: calc(var(--spacing)*44); }
  .xl\:max-w-3xl { max-width: var(--container-3xl); }
  .xl\:max-w-4xl { max-width: var(--container-4xl); }
  .xl\:max-w-64 { max-width: calc(var(--spacing)*64); }
  .xl\:max-w-\[48rem\] { max-width: 48rem; }
  .xl\:max-w-xl { max-width: var(--container-xl); }
  .xl\:max-w-xs { max-width: var(--container-xs); }
  .xl\:gap-2 { gap: calc(var(--spacing)*2); }
  .xl\:gap-x-2\.5 { column-gap: calc(var(--spacing)*2.5); }
  .xl\:gap-y-2\.5 { row-gap: calc(var(--spacing)*2.5); }
  .xl\:px-2 { padding-inline: calc(var(--spacing)*2); }
  .xl\:px-3 { padding-inline: calc(var(--spacing)*3); }
  .xl\:px-24 { padding-inline: calc(var(--spacing)*24); }
  .xl\:pt-10 { padding-top: calc(var(--spacing)*10); }
  .xl\:text-\[14px\] { font-size: 14px; }
}
  @media (min-width: 96rem) {
  .\32 xl\:max-w-\[800px\] { max-width: 800px; }
  .\32 xl\:scroll-ps-\[calc\(\(100\%_-_96rem\)_\/_2_\+_32px\)\] { scroll-pa=
dding-inline-start: calc(50% + 32px - 48rem); }
  .\32 xl\:ps-\[calc\(\(100\%_-_96rem\)_\/_2_\+_32px\)\] { padding-inline-s=
tart: calc(50% + 32px - 48rem); }
  .\32 xl\:pt-12 { padding-top: calc(var(--spacing)*12); }
  .\32 xl\:text-xl { font-size: var(--text-xl); line-height: var(--tw-leadi=
ng,var(--text-xl--line-height)); }
}
  @container (width < 48rem) {
  .\@max-3xl\:-top-2 { top: calc(var(--spacing)*-2); }
}
  @container (width >=3D 0) {
  .\@\[0px\]\:hidden { display: none; }
}
  @container (width >=3D 150px) {
  .\@\[150px\]\:block { display: block; }
}
  @container composer (width >=3D 300px) {
  .\@\[300px\]\/composer\:flex { display: flex; }
}
  @container composer (width >=3D 310px) {
  .\@\[310px\]\/composer\:flex { display: flex; }
}
  @container composer (width >=3D 400px) {
  .\@\[400px\]\/composer\:flex { display: flex; }
}
  @container composer (width >=3D 800px) {
  .\@\[800px\]\/composer\:flex { display: flex; }
}
  @container thread (width >=3D 32rem) {
  .\@lg\/thread\:block { display: block; }
  .\@lg\/thread\:flex { display: flex; }
  .\@lg\/thread\:hidden { display: none; }
  .\@lg\/thread\:grow { flex-grow: 1; }
  .\@lg\/thread\:items-end { align-items: flex-end; }
}
  @container (width >=3D 34rem) {
  .\@\[34rem\]\:\[--thread-content-max-width\:40rem\] { --thread-content-ma=
x-width: 40rem; }
}
  @container (width >=3D 37rem) {
  .\@\[37rem\]\:\[--thread-content-margin\:--spacing\(6\)\] { --thread-cont=
ent-margin: calc(var(--spacing)*6); }
}
  @container (width >=3D 42rem) {
  .\@2xl\:flex-row { flex-direction: row; }
  .\@2xl\:justify-between { justify-content: space-between; }
  .\@2xl\:text-start { text-align: start; }
}
  @container (width >=3D 48rem) {
  .\@3xl\:-start-3 { inset-inline-start: calc(var(--spacing)*-3); }
  .\@3xl\:-top-4 { top: calc(var(--spacing)*-4); }
}
  @container (width >=3D 64rem) {
  .\@\[64rem\]\:\[--thread-content-max-width\:48rem\] { --thread-content-ma=
x-width: 48rem; }
}
  @container (width >=3D 72rem) {
  .\@\[72rem\]\:\[--thread-content-margin\:--spacing\(16\)\] { --thread-con=
tent-margin: calc(var(--spacing)*16); }
}
  @container thread (width >=3D 84rem) {
  .\@\[84rem\]\/thread\:absolute { position: absolute; }
  .\@\[84rem\]\/thread\:start-0 { inset-inline-start: calc(var(--spacing)*0=
); }
  .\@\[84rem\]\/thread\:end-0 { inset-inline-end: calc(var(--spacing)*0); }
  .\@\[84rem\]\/thread\:bg-transparent { background-color: rgba(0, 0, 0, 0)=
; }
  .\@\[84rem\]\/thread\:pt-\(--header-height\) { padding-top: var(--header-=
height); }
  .\@\[84rem\]\/thread\:shadow-none\! { --tw-shadow: 0 0 #0000 !important; =
box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-rin=
g-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow) !important; }
}
  .ltr\:end-0:where(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) { inset-inli=
ne-end: calc(var(--spacing)*0); }
  .ltr\:me-auto:where(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) { margin-i=
nline-end: auto; }
  .ltr\:-translate-x-1\/2:where(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) =
{ --tw-translate-x: -50%; translate: var(--tw-translate-x)var(--tw-translat=
e-y); }
  .ltr\:translate-x-0\.5:where(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) {=
 --tw-translate-x: calc(var(--spacing)*.5); translate: var(--tw-translate-x=
)var(--tw-translate-y); }
  .ltr\:-rotate-90:where(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) { rotat=
e: -90deg; }
  .rtl\:start-0:where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { inset-in=
line-start: calc(var(--spacing)*0); }
  .rtl\:ms-auto:where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { margin-i=
nline-start: auto; }
  .rtl\:-translate-x-0\.5:where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) =
{ --tw-translate-x: calc(var(--spacing)*-.5); translate: var(--tw-translate=
-x)var(--tw-translate-y); }
  .rtl\:translate-x-1\/2:where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) {=
 --tw-translate-x: 50%; translate: var(--tw-translate-x)var(--tw-translate-=
y); }
  .rtl\:-scale-x-100:where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { --t=
w-scale-x: -100%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .rtl\:rotate-90:where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { rotate=
: 90deg; }
  .rtl\:items-start:where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { alig=
n-items: flex-start; }
  :where(.dark\:divide-gray-900:is(.dark *) > :not(:last-child)) { border-c=
olor: rgb(23, 23, 23); }
  :where(.dark\:divide-token-border-heavy:is(.dark *) > :not(:last-child)) =
{ border-color: var(--border-heavy); }
  .dark\:border:is(.dark *) { border-style: var(--tw-border-style); border-=
width: 1px; }
  .dark\:border-e:is(.dark *) { border-inline-end-style: var(--tw-border-st=
yle); border-inline-end-width: 1px; }
  .dark\:border-b:is(.dark *) { border-bottom-style: var(--tw-border-style)=
; border-bottom-width: 1px; }
  .dark\:border-none:is(.dark *) { --tw-border-style: none; border-style: n=
one; }
  .dark\:border-\[\#0088FF\]:is(.dark *) { border-color: rgb(0, 136, 255); =
}
  .dark\:border-\[\#252525\]:is(.dark *) { border-color: rgb(37, 37, 37); }
  .dark\:border-\[rgba\(255\,255\,255\,0\.1\)\]:is(.dark *) { border-color:=
 rgba(255, 255, 255, 0.1); }
  .dark\:border-black\/20:is(.dark *) { border-color: oklab(0 none none / 0=
.2); }
  .dark\:border-gray-300:is(.dark *) { border-color: rgb(205, 205, 205); }
  .dark\:border-gray-500:is(.dark *) { border-color: rgb(155, 155, 155); }
  .dark\:border-gray-600:is(.dark *) { border-color: rgb(103, 103, 103); }
  .dark\:border-gray-700:is(.dark *) { border-color: rgb(66, 66, 66); }
  .dark\:border-gray-800:is(.dark *) { border-color: rgb(33, 33, 33); }
  .dark\:border-token-border-default:is(.dark *) { border-color: var(--bord=
er-default); }
  .dark\:border-token-border-heavy:is(.dark *) { border-color: var(--border=
-heavy); }
  .dark\:border-token-border-light:is(.dark *) { border-color: var(--border=
-light); }
  .dark\:border-token-border-medium:is(.dark *) { border-color: var(--borde=
r-medium); }
  .dark\:border-token-border-medium\!:is(.dark *) { border-color: var(--bor=
der-medium) !important; }
  .dark\:border-token-border-xheavy:is(.dark *) { border-color: var(--borde=
r-xheavy); }
  .dark\:border-token-border-xlight:is(.dark *) { border-color: var(--borde=
r-xlight); }
  .dark\:border-token-main-surface-secondary:is(.dark *) { border-color: va=
r(--main-surface-secondary); }
  .dark\:border-transparent:is(.dark *) { border-color: rgba(0, 0, 0, 0); }
  .dark\:border-white:is(.dark *) { border-color: rgb(255, 255, 255); }
  .dark\:border-white\/5:is(.dark *) { border-color: rgba(255, 255, 255, 0.=
05); }
  .dark\:border-white\/10:is(.dark *) { border-color: rgba(255, 255, 255, 0=
.1); }
  .dark\:border-white\/20:is(.dark *) { border-color: rgba(255, 255, 255, 0=
.2); }
  .dark\:border-x-token-border-xheavy:is(.dark *) { border-inline-color: va=
r(--border-xheavy); }
  .dark\:border-b-white:is(.dark *) { border-bottom-color: rgb(255, 255, 25=
5); }
  .dark\:prose-invert:is(.dark *) { --tw-prose-body: var(--tw-prose-invert-=
body); --tw-prose-headings: var(--tw-prose-invert-headings); --tw-prose-lea=
d: var(--tw-prose-invert-lead); --tw-prose-links: var(--tw-prose-invert-lin=
ks); --tw-prose-bold: var(--tw-prose-invert-bold); --tw-prose-counters: var=
(--tw-prose-invert-counters); --tw-prose-bullets: var(--tw-prose-invert-bul=
lets); --tw-prose-hr: var(--tw-prose-invert-hr); --tw-prose-quotes: var(--t=
w-prose-invert-quotes); --tw-prose-quote-borders: var(--tw-prose-invert-quo=
te-borders); --tw-prose-captions: var(--tw-prose-invert-captions); --tw-pro=
se-code: var(--tw-prose-invert-code); --tw-prose-pre-code: var(--tw-prose-i=
nvert-pre-code); --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg); --tw-pro=
se-th-borders: var(--tw-prose-invert-th-borders); --tw-prose-td-borders: va=
r(--tw-prose-invert-td-borders); }
  .dark\:prose-invert:is(.dark *) :where(pre):not(:where([class~=3D"not-pro=
se"] *)) code { background-color: rgba(0, 0, 0, 0); }
  .dark\:prose-invert:is(.dark *) :where(code):not(:where([class~=3D"not-pr=
ose"] *)) { background-color: var(--gray-700); }
  .dark\:bg-\(--gray-800\):is(.dark *) { background-color: var(--gray-800);=
 }
  .dark\:bg-\[\#2A4A6D\]:is(.dark *) { background-color: rgb(42, 74, 109); =
}
  .dark\:bg-\[\#6BBD6720\]:is(.dark *) { background-color: rgba(107, 189, 1=
03, 0.125); }
  .dark\:bg-\[\#7CA8FF33\]:is(.dark *) { background-color: rgba(124, 168, 2=
55, 0.2); }
  .dark\:bg-\[\#64572A\]:is(.dark *) { background-color: rgb(100, 87, 42); =
}
  .dark\:bg-\[\#171717\]:is(.dark *) { background-color: rgb(23, 23, 23); }
  .dark\:bg-\[\#252525\]:is(.dark *) { background-color: rgb(37, 37, 37); }
  .dark\:bg-\[\#303030\]:is(.dark *) { background-color: rgb(48, 48, 48); }
  .dark\:bg-\[\#303030\]\!:is(.dark *) { background-color: rgb(48, 48, 48) =
!important; }
  .dark\:bg-\[\#353535\]:is(.dark *) { background-color: rgb(53, 53, 53); }
  .dark\:bg-\[\#393939\]:is(.dark *) { background-color: rgb(57, 57, 57); }
  .dark\:bg-\[\#444444\]:is(.dark *) { background-color: rgb(68, 68, 68); }
  .dark\:bg-\[\#B2B2B220\]:is(.dark *) { background-color: rgba(178, 178, 1=
78, 0.125); }
  .dark\:bg-\[\#C26FFD20\]:is(.dark *) { background-color: rgba(194, 111, 2=
53, 0.125); }
  .dark\:bg-\[\#EA8444\]:is(.dark *) { background-color: rgb(234, 132, 68);=
 }
  .dark\:bg-\[\#FD756F20\]:is(.dark *) { background-color: rgba(253, 117, 1=
11, 0.125); }
  .dark\:bg-\[rgb\(33\,33\,33\,0\.9\)\]:is(.dark *) { background-color: rgb=
a(33, 33, 33, 0.9); }
  .dark\:bg-\[rgba\(33\,33\,33\,1\)\]:is(.dark *) { background-color: rgb(3=
3, 33, 33); }
  .dark\:bg-\[rgba\(48\,48\,48\,0\.8\)\]:is(.dark *) { background-color: rg=
ba(48, 48, 48, 0.8); }
  .dark\:bg-\[rgba\(202\,58\,49\,0\.16\)\]:is(.dark *) { background-color: =
rgba(202, 58, 49, 0.16); }
  .dark\:bg-\[rgba\(255\,255\,255\,0\.04\)\]:is(.dark *) { background-color=
: rgba(255, 255, 255, 0.04); }
  .dark\:bg-black:is(.dark *) { background-color: rgb(0, 0, 0); }
  .dark\:bg-black\/50:is(.dark *) { background-color: oklab(0 none none / 0=
.5); }
  .dark\:bg-black\/80:is(.dark *) { background-color: oklab(0 none none / 0=
.8); }
  .dark\:bg-black\/85:is(.dark *) { background-color: oklab(0 none none / 0=
.85); }
  .dark\:bg-gray-50:is(.dark *) { background-color: rgb(249, 249, 249); }
  .dark\:bg-gray-50\/5:is(.dark *) { background-color: rgba(249, 249, 249, =
0.05); }
  .dark\:bg-gray-100:is(.dark *) { background-color: rgb(236, 236, 236); }
  .dark\:bg-gray-500:is(.dark *) { background-color: rgb(155, 155, 155); }
  .dark\:bg-gray-600:is(.dark *) { background-color: rgb(103, 103, 103); }
  .dark\:bg-gray-700:is(.dark *) { background-color: rgb(66, 66, 66); }
  .dark\:bg-gray-700\/50:is(.dark *) { background-color: rgba(66, 66, 66, 0=
.5); }
  .dark\:bg-gray-700\/70:is(.dark *) { background-color: rgba(66, 66, 66, 0=
.7); }
  .dark\:bg-gray-700\/75:is(.dark *) { background-color: rgba(66, 66, 66, 0=
.75); }
  .dark\:bg-gray-750:is(.dark *) { background-color: rgb(47, 47, 47); }
  .dark\:bg-gray-800:is(.dark *) { background-color: rgb(33, 33, 33); }
  .dark\:bg-gray-800\/70:is(.dark *) { background-color: rgba(33, 33, 33, 0=
.7); }
  .dark\:bg-gray-900:is(.dark *) { background-color: rgb(23, 23, 23); }
  .dark\:bg-gray-950:is(.dark *) { background-color: rgb(13, 13, 13); }
  .dark\:bg-green-600:is(.dark *) { background-color: rgb(0, 134, 53); }
  .dark\:bg-green-600\/30:is(.dark *) { background-color: rgba(0, 134, 53, =
0.3); }
  .dark\:bg-green-800:is(.dark *) { background-color: rgb(0, 79, 31); }
  .dark\:bg-orange-500:is(.dark *) { background-color: rgb(226, 85, 7); }
  .dark\:bg-orange-800:is(.dark *) { background-color: rgb(109, 46, 15); }
  .dark\:bg-red-500\/10:is(.dark *) { background-color: rgba(224, 46, 42, 0=
.1); }
  .dark\:bg-red-600:is(.dark *) { background-color: rgb(186, 38, 35); }
  .dark\:bg-red-600\/30:is(.dark *) { background-color: rgba(186, 38, 35, 0=
.3); }
  .dark\:bg-red-800:is(.dark *) { background-color: rgb(110, 22, 21); }
  .dark\:bg-token-bg-secondary:is(.dark *) { background-color: var(--bg-sec=
ondary); }
  .dark\:bg-token-border-default:is(.dark *) { background-color: var(--bord=
er-default); }
  .dark\:bg-token-main-surface-primary-inverse:is(.dark *) { background-col=
or: var(--main-surface-primary-inverse); }
  .dark\:bg-token-main-surface-secondary:is(.dark *) { background-color: va=
r(--main-surface-secondary); }
  .dark\:bg-token-main-surface-tertiary:is(.dark *) { background-color: var=
(--main-surface-tertiary); }
  .dark\:bg-token-surface-error\/5:is(.dark *) { background-color: color-mi=
x(in oklab,rgb(var(--surface-error)/1) 5%,transparent); }
  .dark\:bg-token-text-primary:is(.dark *) { background-color: var(--text-p=
rimary); }
  .dark\:bg-token-text-tertiary:is(.dark *) { background-color: var(--text-=
tertiary); }
  .dark\:bg-transparent:is(.dark *) { background-color: rgba(0, 0, 0, 0); }
  .dark\:bg-white:is(.dark *) { background-color: rgb(255, 255, 255); }
  .dark\:bg-white\/5:is(.dark *) { background-color: rgba(255, 255, 255, 0.=
05); }
  .dark\:bg-white\/10:is(.dark *) { background-color: rgba(255, 255, 255, 0=
.1); }
  .dark\:bg-yellow-400:is(.dark *) { background-color: rgb(255, 195, 0); }
  .dark\:bg-yellow-400\/30:is(.dark *) { background-color: rgba(255, 195, 0=
, 0.3); }
  .dark\:bg-yellow-400\/50:is(.dark *) { background-color: rgba(255, 195, 0=
, 0.5); }
  .dark\:bg-yellow-500\/50:is(.dark *) { background-color: rgba(224, 172, 0=
, 0.5); }
  .dark\:bg-yellow-500\/70:is(.dark *) { background-color: rgba(224, 172, 0=
, 0.7); }
  .dark\:bg-yellow-600:is(.dark *) { background-color: rgb(186, 142, 0); }
  .dark\:bg-yellow-900:is(.dark *) { background-color: rgb(77, 59, 0); }
  .dark\:bg-linear-to-t:is(.dark *) { --tw-gradient-position: to top in okl=
ab; background-image: linear-gradient(var(--tw-gradient-stops)); }
  .dark\:from-\[\#2f2f2f\]:is(.dark *) { --tw-gradient-from: #2f2f2f; --tw-=
gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var=
(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)v=
ar(--tw-gradient-to-position)); }
  .dark\:from-gray-800:is(.dark *) { --tw-gradient-from: #212121; --tw-grad=
ient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--t=
w-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(-=
-tw-gradient-to-position)); }
  .dark\:from-token-main-surface-primary:is(.dark *) { --tw-gradient-from: =
var(--main-surface-primary); --tw-gradient-stops: var(--tw-gradient-via-sto=
ps,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-fro=
m-position),var(--tw-gradient-to)var(--tw-gradient-to-position)); }
  .dark\:via-token-main-surface-primary:is(.dark *) { --tw-gradient-via: va=
r(--main-surface-primary); --tw-gradient-via-stops: var(--tw-gradient-posit=
ion),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradi=
ent-via)var(--tw-gradient-via-position),var(--tw-gradient-to)var(--tw-gradi=
ent-to-position); --tw-gradient-stops: var(--tw-gradient-via-stops); }
  .dark\:via-white\/5:is(.dark *) { --tw-gradient-via: oklab(100% 0 5.96046=
e-8/.05); --tw-gradient-via-stops: var(--tw-gradient-position),var(--tw-gra=
dient-from)var(--tw-gradient-from-position),var(--tw-gradient-via)var(--tw-=
gradient-via-position),var(--tw-gradient-to)var(--tw-gradient-to-position);=
 --tw-gradient-stops: var(--tw-gradient-via-stops); }
  .dark\:to-transparent:is(.dark *) { --tw-gradient-to: transparent; --tw-g=
radient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(=
--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)va=
r(--tw-gradient-to-position)); }
  .dark\:to-white\/15:is(.dark *) { --tw-gradient-to: oklab(100% 0 5.96046e=
-8/.15); --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient=
-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw=
-gradient-to)var(--tw-gradient-to-position)); }
  .dark\:stroke-\[rgba\(0\,0\,0\,0\.32\)\]:is(.dark *) { stroke: rgba(0, 0,=
 0, 0.32); }
  .dark\:stroke-\[rgba\(255\,255\,255\,0\.4\)\]:is(.dark *) { stroke: rgba(=
255, 255, 255, 0.4); }
  .dark\:stroke-brand-purple\/50:is(.dark *) { stroke: rgba(171, 104, 255, =
0.5); }
  .dark\:stroke-white\/10:is(.dark *) { stroke: rgba(255, 255, 255, 0.1); }
  .dark\:text-\[\#6BBD67\]:is(.dark *) { color: rgb(107, 189, 103); }
  .dark\:text-\[\#48AAFF\]:is(.dark *) { color: rgb(72, 170, 255); }
  .dark\:text-\[\#B2B2B2\]:is(.dark *) { color: rgb(178, 178, 178); }
  .dark\:text-\[\#C4C4C4\]:is(.dark *) { color: rgb(196, 196, 196); }
  .dark\:text-\[\#C26FFD\]:is(.dark *) { color: rgb(194, 111, 253); }
  .dark\:text-\[\#D292FF\]:is(.dark *) { color: rgb(210, 146, 255); }
  .dark\:text-\[\#DC2626\]:is(.dark *) { color: rgb(220, 38, 38); }
  .dark\:text-\[\#FD756F\]:is(.dark *) { color: rgb(253, 117, 111); }
  .dark\:text-\[var\(--text-secondary\)\]:is(.dark *) { color: var(--text-s=
econdary); }
  .dark\:text-black:is(.dark *) { color: rgb(0, 0, 0); }
  .dark\:text-blue-75:is(.dark *) { color: rgb(204, 230, 255); }
  .dark\:text-blue-400:is(.dark *) { color: rgb(2, 133, 255); }
  .dark\:text-brand-purple-600:is(.dark *) { color: rgb(113, 95, 222); }
  .dark\:text-gray-100:is(.dark *) { color: rgb(236, 236, 236); }
  .dark\:text-gray-200:is(.dark *) { color: rgb(227, 227, 227); }
  .dark\:text-gray-300:is(.dark *) { color: rgb(205, 205, 205); }
  .dark\:text-gray-400:is(.dark *) { color: rgb(180, 180, 180); }
  .dark\:text-gray-500:is(.dark *) { color: rgb(155, 155, 155); }
  .dark\:text-gray-700:is(.dark *) { color: rgb(66, 66, 66); }
  .dark\:text-gray-800:is(.dark *) { color: rgb(33, 33, 33); }
  .dark\:text-gray-950:is(.dark *) { color: rgb(13, 13, 13); }
  .dark\:text-green-200:is(.dark *) { color: rgb(102, 212, 146); }
  .dark\:text-red-200:is(.dark *) { color: rgb(255, 133, 131); }
  .dark\:text-red-400:is(.dark *) { color: rgb(250, 66, 62); }
  .dark\:text-token-composer-blue-text:is(.dark *) { color: var(--composer-=
blue-text); }
  .dark\:text-token-main-surface-primary:is(.dark *) { color: var(--main-su=
rface-primary); }
  .dark\:text-token-main-surface-tertiary:is(.dark *) { color: var(--main-s=
urface-tertiary); }
  .dark\:text-token-text-primary:is(.dark *) { color: var(--text-primary); =
}
  .dark\:text-token-text-secondary:is(.dark *) { color: var(--text-secondar=
y); }
  .dark\:text-token-text-tertiary:is(.dark *) { color: var(--text-tertiary)=
; }
  .dark\:text-white:is(.dark *) { color: rgb(255, 255, 255); }
  .dark\:text-white\/30:is(.dark *) { color: rgba(255, 255, 255, 0.3); }
  .dark\:text-white\/50:is(.dark *) { color: rgba(255, 255, 255, 0.5); }
  .dark\:text-yellow-100:is(.dark *) { color: rgb(255, 228, 140); }
  .dark\:text-yellow-400:is(.dark *) { color: rgb(255, 195, 0); }
  .dark\:opacity-20:is(.dark *) { opacity: 0.2; }
  .dark\:opacity-60:is(.dark *) { opacity: 0.6; }
  .dark\:shadow-\[0_-4px_32px_rgba\(0\,0\,0\,0\.12\)\]:is(.dark *) { --tw-s=
hadow: 0 -4px 32px var(--tw-shadow-color,#0000001f); box-shadow: var(--tw-i=
nset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(-=
-tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-\[0_10px_20px_-6px_rgb\(20_20_20_\/_0\.5\)\,0_0_1px_rgb\(25=
5_255_255_\/_0\.7\)\]:is(.dark *), .dark\:shadow-\[0_10px_20px_-6px_rgb\(20=
_20_20_\/_0\.5\)\,_0_0_1px_rgb\(255_255_255_\/_0\.7\)\]:is(.dark *) { --tw-=
shadow: 0 10px 20px -6px var(--tw-shadow-color,#14141480),0 0 1px var(--tw-=
shadow-color,#ffffffb3); box-shadow: var(--tw-inset-shadow),var(--tw-inset-=
ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-sh=
adow); }
  .dark\:shadow-\[0_10px_20px_-6px_rgb\(20_20_20_\/_0\.5\)\,inset_0_0_1px_r=
gb\(255_255_255_\/_0\.3\)\]:is(.dark *) { --tw-shadow: 0 10px 20px -6px var=
(--tw-shadow-color,#14141480),inset 0 0 1px var(--tw-shadow-color,#ffffff4d=
); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-=
ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-\[0_10px_20px_-6px_rgb\(20_20_20_\/_0\.5\)\]:is(.dark *) { =
--tw-shadow: 0 10px 20px -6px var(--tw-shadow-color,#14141480); box-shadow:=
 var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-sh=
adow),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-\[0_12px_32px_-12px_rgb\(0_0_0_\/_1\)\,inset_0_0_1px_rgb\(2=
55_255_255_\/_0\.3\)\]:is(.dark *) { --tw-shadow: 0 12px 32px -12px var(--t=
w-shadow-color,#000),inset 0 0 1px var(--tw-shadow-color,#ffffff4d); box-sh=
adow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offs=
et-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-\[0_12px_32px_-12px_rgb\(20_20_20_\/_0\.5\)\,_0_0_1px_rgb\(=
255_255_255_\/_1\)\]:is(.dark *) { --tw-shadow: 0 12px 32px -12px var(--tw-=
shadow-color,#14141480),0 0 1px var(--tw-shadow-color,#fff); box-shadow: va=
r(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shado=
w),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-\[0_32px_48px_rgba\(0\,0\,0\,0\.175\)\,_0_0_1px_rgba\(255\,=
255\,255\,0\.4\)\]:is(.dark *) { --tw-shadow: 0 32px 48px var(--tw-shadow-c=
olor,#0000002d),0 0 1px var(--tw-shadow-color,#fff6); box-shadow: var(--tw-=
inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(=
--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-\[0px_24px_64px_rgba\(0\,0\,0\,0\.32\)\]:is(.dark *) { --tw=
-shadow: 0px 24px 64px var(--tw-shadow-color,#00000052); box-shadow: var(--=
tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),v=
ar(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-\[inset_0_0_0_1px_rgba\(255\,255\,255\,0\.1\)\]:is(.dark *)=
 { --tw-shadow: inset 0 0 0 1px var(--tw-shadow-color,#ffffff1a); box-shado=
w: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-=
shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-md:is(.dark *) { --tw-shadow: 0 4px 6px -1px var(--tw-shado=
w-color,#0000001a),0 2px 4px -2px var(--tw-shadow-color,#0000001a); box-sha=
dow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offse=
t-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-none:is(.dark *) { --tw-shadow: 0 0 #0000; box-shadow: var(=
--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow)=
,var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-none\!:is(.dark *) { --tw-shadow: 0 0 #0000 !important; box=
-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-o=
ffset-shadow),var(--tw-ring-shadow),var(--tw-shadow) !important; }
  .dark\:shadow-xl:is(.dark *) { --tw-shadow: 0 20px 25px -5px var(--tw-sha=
dow-color,#0000001a),0 8px 10px -6px var(--tw-shadow-color,#0000001a); box-=
shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-of=
fset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:backdrop-blur-lg:is(.dark *) { --tw-backdrop-blur: blur(var(--blur=
-lg)); backdrop-filter: var(--tw-backdrop-blur,)var(--tw-backdrop-brightnes=
s,)var(--tw-backdrop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdr=
op-hue-rotate,)var(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--t=
w-backdrop-saturate,)var(--tw-backdrop-sepia,); }
  .dark\:\[--task-bg\:rgb\(0\,0\,0\)\]:is(.dark *) { --task-bg: #000; }
  @media (hover: hover) {
  .dark\:group-hover\:border-token-text-primary:is(.dark *):is(:where(.grou=
p):hover *) { border-color: var(--text-primary); }
  .dark\:group-hover\/navigation\:bg-\[\#7CA8FF33\]:is(.dark *):is(:where(.=
group\/navigation):hover *) { background-color: rgba(124, 168, 255, 0.2); }
  .dark\:group-hover\/row\:bg-gray-700:is(.dark *):is(:where(.group\/row):h=
over *) { background-color: rgb(66, 66, 66); }
}
  .dark\:placeholder\:text-white:is(.dark *)::placeholder { color: rgb(255,=
 255, 255); }
  .dark\:before\:bg-gray-750\/50:is(.dark *)::before { background-color: rg=
ba(47, 47, 47, 0.5); content: var(--tw-content); }
  .dark\:after\:bg-\[Highlight\]:is(.dark *)::after { background-color: hig=
hlight; content: var(--tw-content); }
  .dark\:after\:invert:is(.dark *)::after { --tw-invert: invert(100%); cont=
ent: var(--tw-content); filter: var(--tw-blur,)var(--tw-brightness,)var(--t=
w-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(-=
-tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .dark\:focus-within\:border-token-border-xheavy:is(.dark *):focus-within =
{ border-color: var(--border-xheavy); }
  .dark\:focus-within\:ring-0:is(.dark *):focus-within { --tw-ring-shadow: =
var(--tw-ring-inset,)0 0 0 calc(var(--tw-ring-offset-width))var(--tw-ring-c=
olor,currentColor); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-=
shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)=
; }
  @media (hover: hover) {
  .dark\:hover\:border-gray-800:is(.dark *):hover { border-color: rgb(33, 3=
3, 33); }
  .dark\:hover\:bg-\[\#1A416A\]:is(.dark *):hover { background-color: rgb(2=
6, 65, 106); }
  .dark\:hover\:bg-gray-500\/10:is(.dark *):hover { background-color: rgba(=
155, 155, 155, 0.1); }
  .dark\:hover\:bg-gray-600:is(.dark *):hover { background-color: rgb(103, =
103, 103); }
  .dark\:hover\:bg-gray-700:is(.dark *):hover { background-color: rgb(66, 6=
6, 66); }
  .dark\:hover\:bg-red-500\/15:is(.dark *):hover { background-color: rgba(2=
24, 46, 42, 0.15); }
  .dark\:hover\:bg-token-bg-primary:is(.dark *):hover { background-color: v=
ar(--bg-primary); }
  .dark\:hover\:bg-token-main-surface-secondary:is(.dark *):hover { backgro=
und-color: var(--main-surface-secondary); }
  .dark\:hover\:bg-token-main-surface-tertiary:is(.dark *):hover { backgrou=
nd-color: var(--main-surface-tertiary); }
  .dark\:hover\:bg-token-text-primary:is(.dark *):hover { background-color:=
 var(--text-primary); }
  .dark\:hover\:bg-token-text-tertiary:is(.dark *):hover { background-color=
: var(--text-tertiary); }
  .dark\:hover\:bg-transparent:is(.dark *):hover { background-color: rgba(0=
, 0, 0, 0); }
  .dark\:hover\:bg-white:is(.dark *):hover { background-color: rgb(255, 255=
, 255); }
  .dark\:hover\:bg-white\/5:is(.dark *):hover { background-color: rgba(255,=
 255, 255, 0.05); }
  .dark\:hover\:bg-white\/10:is(.dark *):hover { background-color: rgba(255=
, 255, 255, 0.1); }
  .dark\:hover\:bg-white\/10\!:is(.dark *):hover { background-color: rgba(2=
55, 255, 255, 0.1) !important; }
  .dark\:hover\:bg-white\/20:is(.dark *):hover { background-color: rgba(255=
, 255, 255, 0.2); }
  .hover\:dark\:bg-gray-100\/10:hover:is(.dark *) { background-color: rgba(=
236, 236, 236, 0.1); }
  .dark\:hover\:text-black:is(.dark *):hover { color: rgb(0, 0, 0); }
  .dark\:hover\:text-gray-100:is(.dark *):hover { color: rgb(236, 236, 236)=
; }
  .dark\:hover\:text-token-main-surface-tertiary:is(.dark *):hover { color:=
 var(--main-surface-tertiary); }
  .dark\:hover\:opacity-100:is(.dark *):hover { opacity: 1; }
}
  .dark\:focus\:border-white:is(.dark *):focus { border-color: rgb(255, 255=
, 255); }
  .dark\:focus\:ring-white:is(.dark *):focus { --tw-ring-color: #fff; }
  .dark\:focus-visible\:bg-token-main-surface-secondary:is(.dark *):focus-v=
isible { background-color: var(--main-surface-secondary); }
  .dark\:focus-visible\:ring-token-main-surface-primary:is(.dark *):focus-v=
isible { --tw-ring-color: var(--main-surface-primary); }
  .dark\:focus-visible\:outline-white:is(.dark *):focus-visible { outline-c=
olor: rgb(255, 255, 255); }
  .dark\:active\:bg-red-500\/20:is(.dark *):active { background-color: rgba=
(224, 46, 42, 0.2); }
  .dark\:active\:bg-white\/10:is(.dark *):active { background-color: rgba(2=
55, 255, 255, 0.1); }
  @media (hover: hover) {
  .dark\:enabled\:hover\:bg-white\/10:is(.dark *):enabled:hover { backgroun=
d-color: rgba(255, 255, 255, 0.1); }
}
  .dark\:disabled\:bg-token-text-quaternary:is(.dark *):disabled { backgrou=
nd-color: var(--text-quaternary); }
  .dark\:disabled\:bg-token-text-tertiary:is(.dark *):disabled { background=
-color: var(--text-tertiary); }
  .dark\:disabled\:text-token-main-surface-secondary:is(.dark *):disabled {=
 color: var(--main-surface-secondary); }
  .dark\:data-\[state\=3Dchecked\]\:border-white:is(.dark *)[data-state=3D"=
checked"] { border-color: rgb(255, 255, 255); }
  .dark\:data-\[state\=3Dchecked\]\:bg-white:is(.dark *)[data-state=3D"chec=
ked"] { background-color: rgb(255, 255, 255); }
  @media (min-width: 48rem) {
  .md\:dark\:border-gray-700:is(.dark *) { border-color: rgb(66, 66, 66); }
  .md\:dark\:border-transparent:is(.dark *) { border-color: rgba(0, 0, 0, 0=
); }
  .dark\:md\:bg-transparent:is(.dark *) { background-color: rgba(0, 0, 0, 0=
); }
  .dark\:md\:bg-vert-dark-gradient:is(.dark *) { background-image: linear-g=
radient(rgba(53, 55, 64, 0), rgb(53, 55, 64) 58.85%); }
  @media (hover: hover) {
  .dark\:md\:hover\:bg-gray-700:is(.dark *):hover { background-color: rgb(6=
6, 66, 66); }
}
}
  @media print {
  .print\:hidden { display: none; }
  .print\:border-none { --tw-border-style: none; border-style: none; }
  .print\:pt-2 { padding-top: calc(var(--spacing)*2); }
  .print\:shadow-none { --tw-shadow: 0 0 #0000; box-shadow: var(--tw-inset-=
shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-r=
ing-shadow),var(--tw-shadow); }
}
  .radix-disabled\:pointer-events-auto[data-disabled] { pointer-events: aut=
o; }
  .radix-disabled\:pointer-events-none[data-disabled] { pointer-events: non=
e; }
  .radix-disabled\:cursor-auto[data-disabled] { cursor: auto; }
  .radix-disabled\:cursor-not-allowed[data-disabled] { cursor: not-allowed;=
 }
  .radix-disabled\:bg-transparent[data-disabled] { background-color: rgba(0=
, 0, 0, 0); }
  .radix-disabled\:text-token-text-tertiary[data-disabled] { color: var(--t=
ext-tertiary); }
  .radix-disabled\:opacity-50[data-disabled] { opacity: 0.5; }
  @media (hover: hover) {
  .radix-disabled\:hover\:bg-transparent[data-disabled]:hover { background-=
color: rgba(0, 0, 0, 0); }
}
  .dark\:radix-disabled\:bg-transparent:is(.dark *)[data-disabled] { backgr=
ound-color: rgba(0, 0, 0, 0); }
  .radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"active"=
] { background-color: var(--main-surface-tertiary); }
  .radix-state-active\:bg-white[data-state=3D"active"] { background-color: =
rgb(255, 255, 255); }
  .radix-state-active\:text-token-text-primary[data-state=3D"active"] { col=
or: var(--text-primary); }
  .radix-state-active\:text-token-text-secondary[data-state=3D"active"] { c=
olor: var(--text-secondary); }
  @media (min-width: 48rem) {
  .md\:radix-state-active\:bg-token-main-surface-secondary[data-state=3D"ac=
tive"] { background-color: var(--main-surface-secondary); }
  .md\:radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"act=
ive"] { background-color: var(--main-surface-tertiary); }
  .md\:radix-state-active\:text-token-text-primary[data-state=3D"active"] {=
 color: var(--text-primary); }
}
  .dark\:radix-state-active\:bg-token-main-surface-tertiary:is(.dark *)[dat=
a-state=3D"active"] { background-color: var(--main-surface-tertiary); }
  .radix-state-checked\:border[data-state=3D"checked"] { border-style: var(=
--tw-border-style); border-width: 1px; }
  .radix-state-checked\:border-green-500[data-state=3D"checked"] { border-c=
olor: rgb(0, 162, 64); }
  .radix-state-checked\:border-token-text-tertiary[data-state=3D"checked"] =
{ border-color: var(--text-tertiary); }
  .radix-state-checked\:bg-black[data-state=3D"checked"] { background-color=
: rgb(0, 0, 0); }
  .radix-state-checked\:bg-green-500[data-state=3D"checked"] { background-c=
olor: rgb(0, 162, 64); }
  .radix-state-checked\:bg-green-600\/15[data-state=3D"checked"] { backgrou=
nd-color: rgba(0, 134, 53, 0.15); }
  .radix-state-checked\:bg-token-main-surface-primary[data-state=3D"checked=
"] { background-color: var(--main-surface-primary); }
  .radix-state-checked\:bg-token-text-primary[data-state=3D"checked"] { bac=
kground-color: var(--text-primary); }
  .radix-state-checked\:font-semibold[data-state=3D"checked"] { --tw-font-w=
eight: var(--font-weight-semibold); font-weight: var(--font-weight-semibold=
); }
  .radix-state-checked\:text-token-main-surface-primary[data-state=3D"check=
ed"] { color: var(--main-surface-primary); }
  .radix-state-checked\:text-token-text-primary[data-state=3D"checked"] { c=
olor: var(--text-primary); }
  .radix-state-checked\:shadow-\[0_0_2px_rgba\(0\,0\,0\,\.03\)\][data-state=
=3D"checked"] { --tw-shadow: 0 0 2px var(--tw-shadow-color,#00000008); box-=
shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-of=
fset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus-visible\:radix-state-checked\:ring-black:focus-visible[data-state=
=3D"checked"] { --tw-ring-color: #000; }
  .radix-state-checked\:ltr\:translate-x-\[13px\][data-state=3D"checked"]:w=
here(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) { --tw-translate-x: 13px; t=
ranslate: var(--tw-translate-x)var(--tw-translate-y); }
  .radix-state-checked\:ltr\:translate-x-\[14px\][data-state=3D"checked"]:w=
here(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) { --tw-translate-x: 14px; t=
ranslate: var(--tw-translate-x)var(--tw-translate-y); }
  .radix-state-checked\:ltr\:translate-x-\[24px\][data-state=3D"checked"]:w=
here(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) { --tw-translate-x: 24px; t=
ranslate: var(--tw-translate-x)var(--tw-translate-y); }
  .radix-state-checked\:rtl\:translate-x-\[-13px\][data-state=3D"checked"]:=
where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { --tw-translate-x: -13px;=
 translate: var(--tw-translate-x)var(--tw-translate-y); }
  .radix-state-checked\:rtl\:translate-x-\[-14px\][data-state=3D"checked"]:=
where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { --tw-translate-x: -14px;=
 translate: var(--tw-translate-x)var(--tw-translate-y); }
  .radix-state-checked\:rtl\:translate-x-\[-24px\][data-state=3D"checked"]:=
where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { --tw-translate-x: -24px;=
 translate: var(--tw-translate-x)var(--tw-translate-y); }
  .dark\:radix-state-checked\:border-green-600:is(.dark *)[data-state=3D"ch=
ecked"] { border-color: rgb(0, 134, 53); }
  .dark\:radix-state-checked\:bg-green-600:is(.dark *)[data-state=3D"checke=
d"] { background-color: rgb(0, 134, 53); }
  .dark\:focus-visible\:radix-state-checked\:ring-green-600:is(.dark *):foc=
us-visible[data-state=3D"checked"] { --tw-ring-color: #008635; }
  .radix-state-open\:animate-show[data-state=3D"open"] { animation: 0.1s cu=
bic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running show; }
  .radix-state-open\:bg-\[\#f5f5f5\][data-state=3D"open"] { background-colo=
r: rgb(245, 245, 245); }
  .radix-state-open\:bg-black\/10[data-state=3D"open"] { background-color: =
oklab(0 none none / 0.1); }
  .radix-state-open\:bg-token-main-surface-secondary[data-state=3D"open"] {=
 background-color: var(--main-surface-secondary); }
  .radix-state-open\:bg-token-sidebar-surface-secondary[data-state=3D"open"=
] { background-color: var(--sidebar-surface-secondary); }
  .radix-state-open\:text-token-text-primary[data-state=3D"open"] { color: =
var(--text-primary); }
  .radix-state-open\:text-token-text-secondary[data-state=3D"open"] { color=
: var(--text-secondary); }
  .radix-state-open\:text-token-text-tertiary[data-state=3D"open"] { color:=
 var(--text-tertiary); }
  .dark\:radix-state-open\:bg-token-main-surface-secondary:is(.dark *)[data=
-state=3D"open"] { background-color: var(--main-surface-secondary); }
  .dark\:radix-state-open\:text-gray-400:is(.dark *)[data-state=3D"open"] {=
 color: rgb(180, 180, 180); }
  @media (hover: hover) and (pointer: fine) {
  .can-hover\:pointer-events-none { pointer-events: none; }
  .can-hover\:z-0 { z-index: 0; }
  .can-hover\:hidden { display: none; }
  .can-hover\:w-full { width: 100%; }
  .can-hover\:opacity-0 { opacity: 0; }
  @media (hover: hover) {
  .can-hover\:group-hover\:visible:is(:where(.group):hover *) { visibility:=
 visible; }
  .can-hover\:group-hover\:me-5:is(:where(.group):hover *) { margin-inline-=
end: calc(var(--spacing)*5); }
  .can-hover\:group-hover\:flex:is(:where(.group):hover *) { display: flex;=
 }
  .can-hover\:group-hover\:w-11\/12:is(:where(.group):hover *) { width: 91.=
6667%; }
  .can-hover\:group-hover\:scale-110:is(:where(.group):hover *) { --tw-scal=
e-x: 110%; --tw-scale-y: 110%; --tw-scale-z: 110%; scale: var(--tw-scale-x)=
var(--tw-scale-y); }
  .can-hover\:group-hover\:opacity-100:is(:where(.group):hover *) { opacity=
: 1; }
  .can-hover\:group-hover\/sidebar\:pointer-events-auto:is(:where(.group\/s=
idebar):hover *) { pointer-events: auto; }
  .can-hover\:group-hover\/sidebar\:opacity-100:is(:where(.group\/sidebar):=
hover *) { opacity: 1; }
  .can-hover\:hover\:scale-110:hover { --tw-scale-x: 110%; --tw-scale-y: 11=
0%; --tw-scale-z: 110%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .can-hover\:hover\:bg-\[\#BDDCF4\]:hover { background-color: rgb(189, 220=
, 244); }
  .can-hover\:hover\:bg-black\/5:hover { background-color: oklab(0 none non=
e / 0.05); }
  .can-hover\:hover\:bg-token-main-surface-secondary:hover { background-col=
or: var(--main-surface-secondary); }
  .can-hover\:hover\:bg-token-main-surface-tertiary:hover { background-colo=
r: var(--main-surface-tertiary); }
  .can-hover\:hover\:bg-token-sidebar-surface-secondary:hover { background-=
color: var(--sidebar-surface-secondary); }
  .can-hover\:hover\:text-token-link-hover:hover { color: var(--link-hover)=
; }
  .can-hover\:hover\:text-token-text-primary:hover { color: var(--text-prim=
ary); }
  .can-hover\:hover\:opacity-70:hover { opacity: 0.7; }
}
  .can-hover\:active\:scale-100:active { --tw-scale-x: 100%; --tw-scale-y: =
100%; --tw-scale-z: 100%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .can-hover\:active\:scale-\[0\.98\]:active { scale: 0.98; }
}
  @media (hover: hover) {
  @media (hover: hover) and (pointer: fine) {
  @media (prefers-reduced-motion: no-preference) {
  .group-hover\/app-icon\:can-hover\:motion-safe\:scale-\[0\.91\]:is(:where=
(.group\/app-icon):hover *) { scale: 0.91; }
  .group-hover\/app-icon\:can-hover\:motion-safe\:scale-\[1\.025\]:is(:wher=
e(.group\/app-icon):hover *) { scale: 1.025; }
  .group-hover\/app-icon\:can-hover\:motion-safe\:shadow-\[0px_4px_12px_rgb=
a\(0\,0\,0\,0\.08\)\]:is(:where(.group\/app-icon):hover *) { --tw-shadow: 0=
px 4px 12px var(--tw-shadow-color,#00000014); box-shadow: var(--tw-inset-sh=
adow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-rin=
g-shadow),var(--tw-shadow); }
  .group-hover\/app-icon\:can-hover\:motion-safe\:\[--shadow-color\:rgba\(0=
\,0\,0\,0\.1\)\]:is(:where(.group\/app-icon):hover *) { --shadow-color: #00=
00001a; }
}
}
}
  @media (hover: hover) and (pointer: fine) {
  @media (hover: hover) {
  .dark\:can-hover\:hover\:bg-\[\#1A416A\]:is(.dark *):hover { background-c=
olor: rgb(26, 65, 106); }
  .dark\:can-hover\:hover\:bg-gray-700:is(.dark *):hover { background-color=
: rgb(66, 66, 66); }
  .dark\:can-hover\:hover\:bg-white\/5:is(.dark *):hover { background-color=
: rgba(255, 255, 255, 0.05); }
}
}
  .screen-arch .screen-arch\:relative { position: relative; }
  .screen-arch .screen-arch\:static { position: static; }
  .screen-arch .screen-arch\:sticky { position: sticky; }
  .screen-arch .screen-arch\:top-12 { top: calc(var(--spacing)*12); }
  .screen-arch .screen-arch\:top-\[var\(--sticky-title-offset\)\] { top: va=
r(--sticky-title-offset); }
  .screen-arch .screen-arch\:-me-2 { margin-inline-end: calc(var(--spacing)=
*-2); }
  .screen-arch .screen-arch\:mb-3 { margin-bottom: calc(var(--spacing)*3); =
}
  .screen-arch .screen-arch\:flex { display: flex; }
  .screen-arch .screen-arch\:hidden { display: none; }
  .screen-arch .screen-arch\:h-10 { height: calc(var(--spacing)*10); }
  .screen-arch .screen-arch\:min-h-\[47px\] { min-height: 47px; }
  .screen-arch .screen-arch\:min-h-\[calc\(100dvh-var\(--thread-leading-hei=
ght\)-var\(--thread-trailing-height\)-12px\)\] { min-height: calc(100dvh - =
var(--thread-leading-height) - var(--thread-trailing-height) - 12px); }
  .screen-arch .screen-arch\:w-full { width: 100%; }
  .screen-arch .screen-arch\:min-w-\[50cqw\] { min-width: 50cqw; }
  .screen-arch .screen-arch\:-translate-x-2 { --tw-translate-x: calc(var(--=
spacing)*-2); translate: var(--tw-translate-x)var(--tw-translate-y); }
  .screen-arch .screen-arch\:items-center { align-items: center; }
  .screen-arch .screen-arch\:justify-evenly { justify-content: space-evenly=
; }
  .screen-arch .screen-arch\:gap-0\.5 { gap: calc(var(--spacing)*.5); }
  .screen-arch .screen-arch\:bg-\[var\(--sidebar-surface\)\] { background-c=
olor: var(--sidebar-surface); }
  .screen-arch .screen-arch\:bg-transparent { background-color: rgba(0, 0, =
0, 0); }
  .screen-arch .screen-arch\:bg-none { background-image: none; }
  .screen-arch .screen-arch\:px-2 { padding-inline: calc(var(--spacing)*2);=
 }
  .screen-arch .screen-arch\:py-1 { padding-block: calc(var(--spacing)*1); =
}
  .screen-arch .screen-arch\:py-1\.5 { padding-block: calc(var(--spacing)*1=
.5); }
  .screen-arch .screen-arch\:py-\[7px\] { padding-block: 7px; }
  .screen-arch .screen-arch\:ps-1 { padding-inline-start: calc(var(--spacin=
g)*1); }
  .screen-arch .screen-arch\:text-body { }
  .screen-arch .screen-arch\:text-token-text-secondary { color: var(--text-=
secondary); }
  @media (prefers-reduced-motion: no-preference) {
  .screen-arch .motion-safe\:group-active\:screen-arch\:scale-\[98\%\]:is(:=
where(.group):active *) { scale: 0.98; }
  .screen-arch .motion-safe\:group-active\:screen-arch\:transition-transfor=
m:is(:where(.group):active *) { transition-duration: var(--tw-duration,var(=
--default-transition-duration)); transition-property: transform, translate,=
 scale, rotate; transition-timing-function: var(--tw-ease,var(--default-tra=
nsition-timing-function)); }
  .screen-arch .motion-safe\:group-active\:screen-arch\:duration-100:is(:wh=
ere(.group):active *) { --tw-duration: .1s; transition-duration: 0.1s; }
}
  @media (min-width: 48rem) {
  .screen-arch .md\:screen-arch\:flex { display: flex; }
}
  @media (hover: hover) and (pointer: fine) {
  @media (hover: hover) {
  .screen-arch .can-hover\:hover\:screen-arch\:bg-token-main-surface-second=
ary:hover { background-color: var(--main-surface-secondary); }
}
}
  .keyboard-open .keyboard-open\:fixed { position: fixed; }
  .keyboard-open .keyboard-open\:start-3 { inset-inline-start: calc(var(--s=
pacing)*3); }
  .keyboard-open .keyboard-open\:end-3 { inset-inline-end: calc(var(--spaci=
ng)*3); }
  .keyboard-open .keyboard-open\:bottom-\[var\(--screen-keyboard-height\,0\=
)\] { bottom: var(--screen-keyboard-height,0); }
  .keyboard-open .keyboard-open\:z-50 { z-index: 50; }
  .keyboard-open .keyboard-open\:h-\[calc\(100\%-var\(--screen-keyboard-hei=
ght\,0px\)-var\(--composer-height\,100px\)\)\] { height: calc(100% - var(--=
screen-keyboard-height,0px) - var(--composer-height,100px)); }
  .keyboard-open .keyboard-open\:h-\[var\(--screen-height-override\,calc\(v=
ar\(--cqh-full\)-env\(keyboard-inset-height\,0px\)-var\(--screen-height-off=
set\,0px\)-var\(--force-redraw\,0px\)\)\)\] { height: var(--screen-height-o=
verride,calc(var(--cqh-full) - env(keyboard-inset-height,0px) - var(--scree=
n-height-offset,0px) - var(--force-redraw,0px))); }
  .keyboard-open .keyboard-open\:w-auto\! { width: auto !important; }
  .keyboard-open .keyboard-open\:-translate-y-2 { --tw-translate-y: calc(va=
r(--spacing)*-2); translate: var(--tw-translate-x)var(--tw-translate-y); }
  .keyboard-open .keyboard-open\:pb-\[calc\(var\(--composer-height\,100px\)=
\+var\(--screen-keyboard-height\,0\)\)\] { padding-bottom: calc(var(--compo=
ser-height,100px) + var(--screen-keyboard-height,0)); }
  .panel-has-scrolled\:\[box-shadow\:var\(--sharp-edge-top-shadow\)\].panel=
-has-scrolled { box-shadow: var(--sharp-edge-top-shadow); }
  .panel-is-scrolling-to-end\:\[box-shadow\:var\(--sharp-edge-bottom-shadow=
\)\].panel-is-scrolling-to-end { box-shadow: var(--sharp-edge-bottom-shadow=
); }
  .top-banner-visible .top-banner-visible\:top-\(--top-banner-height\,0px\)=
 { top: var(--top-banner-height,0); }
  .top-banner-visible .top-banner-visible\:bottom-0 { bottom: calc(var(--sp=
acing)*0); }
  .top-banner-visible .top-banner-visible\:h-auto { height: auto; }
  @media (pointer: coarse) {
  .touch\:-ms-3\.5 { margin-inline-start: calc(var(--spacing)*-3.5); }
  .touch\:-me-2 { margin-inline-end: calc(var(--spacing)*-2); }
  .touch\:w-\[32px\] { width: 32px; }
  .touch\:w-\[38px\] { width: 38px; }
  .touch\:px-2\.5 { padding-inline: calc(var(--spacing)*2.5); }
}
  .\[\&\]\:border-0 { border-style: var(--tw-border-style); border-width: 0=
px; }
  .\[\&_path\]\:stroke-current path { stroke: currentcolor; }
  .\[\&_svg\]\:h-full svg { height: 100%; }
  .\[\&_svg\]\:w-full svg { width: 100%; }
  .\[\&_tr\:last-child\]\:border-b-0 tr:last-child { border-bottom-style: v=
ar(--tw-border-style); border-bottom-width: 0px; }
  .\[\&\&\]\:text-black.\[\&\&\]\:text-black { color: rgb(0, 0, 0); }
  .\[\&\&\]\:underline.\[\&\&\]\:underline { text-decoration-line: underlin=
e; }
  @media (hover: hover) {
  .\[\&\&\]\:hover\:text-black.\[\&\&\]\:hover\:text-black:hover { color: r=
gb(0, 0, 0); }
}
  .dark\:\[\&\&\]\:text-white:is(.dark *).dark\:\[\&\&\]\:text-white:is(.da=
rk *) { color: rgb(255, 255, 255); }
  @media (hover: hover) {
  .dark\:\[\&\&\]\:hover\:text-white:is(.dark *).dark\:\[\&\&\]\:hover\:tex=
t-white:is(.dark *):hover { color: rgb(255, 255, 255); }
}
  .\[\&\:\:-webkit-search-cancel-button\]\:hidden::-webkit-search-cancel-bu=
tton { display: none; }
  .\[\&\:\:after\]\:content-\[\'\\\\a\'\]::after { --tw-content: "\\a"; con=
tent: var(--tw-content); }
  .\[\&\:not\(\:has\(strong\)\)\]\:mb-\[18px\]:not(:has(strong)) { margin-b=
ottom: 18px; }
  .\[\&\>\:last-child\]\:mb-0 > :last-child { margin-bottom: calc(var(--spa=
cing)*0); }
  .\[\&\>div\:nth-child\(2\)\]\:overflow-y-hidden > div:nth-child(2) { over=
flow-y: hidden; }
  .text-message + .\[\.text-message\+\&\]\:mt-5 { margin-top: calc(var(--sp=
acing)*5); }
  @media (min-width: 1560px) {
  .\[\@media\(min-width\:1560px\)\]\:top-0 { top: calc(var(--spacing)*0); }
}
  tr:last-child .\[tr\:last-child_\&\]\:border-b-0 { border-bottom-style: v=
ar(--tw-border-style); border-bottom-width: 0px; }
  tr[data-disabled=3D"true"] .\[tr\[data-disabled\=3Dtrue\]_\&\]\:opacity-5=
0 { opacity: 0.5; }
  .overflow-auto > *, .overflow-scroll > *, .overflow-x-auto > *, .overflow=
-y-auto > * { scrollbar-color: auto; }
  .overflow-auto, .overflow-scroll, .overflow-x-auto, .overflow-x-scroll, .=
overflow-y-auto, .overflow-y-scroll { scrollbar-color: var(--main-surface-t=
ertiary)transparent; }
  .overflow-auto:hover, .overflow-scroll:hover, .overflow-x-auto:hover, .ov=
erflow-y-auto:hover { scrollbar-color: var(--gray-200)transparent; }
  .dark .overflow-auto:hover, .dark .overflow-scroll:hover, .dark .overflow=
-x-auto:hover, .dark .overflow-y-auto:hover { scrollbar-color: var(--gray-6=
00)transparent; }
}

.dark .light, .light, html { --bg-primary: #fff; --bg-secondary: #e8e8e8; -=
-bg-tertiary: #f3f3f3; --bg-scrim: #0d0d0d80; --bg-elevated-primary: #fff; =
--bg-elevated-secondary: #f9f9f9; --bg-status-warning: #fff5f0; --bg-status=
-error: #fff0f0; --border-default: #0d0d0d1a; --border-heavy: #0d0d0d26; --=
border-light: #0d0d0d0d; --border-status-warning: #ffe7d9; --border-status-=
error: #ffe1e0; --text-primary: #0d0d0d; --text-secondary: #5d5d5d; --text-=
tertiary: #8f8f8f; --text-inverted: #fff; --text-inverted-static: #fff; --t=
ext-accent: #66b5ff; --text-status-warning: #e25507; --text-status-error: #=
e02e2a; --icon-primary: #0d0d0d; --icon-secondary: #5d5d5d; --icon-tertiary=
: #8f8f8f; --icon-inverted: #fff; --icon-inverted-static: #fff; --icon-acce=
nt: #0285ff; --icon-status-warning: #e25507; --icon-status-error: #e02e2a; =
--interactive-bg-primary-default: #0d0d0d; --interactive-bg-primary-hover: =
#0d0d0dcc; --interactive-bg-primary-press: #0d0d0de5; --interactive-bg-prim=
ary-inactive: #0d0d0d; --interactive-bg-primary-selected: #0d0d0d; --intera=
ctive-bg-secondary-default: #0d0d0d00; --interactive-bg-secondary-hover: #0=
d0d0d05; --interactive-bg-secondary-press: #0d0d0d0d; --interactive-bg-seco=
ndary-inactive: #0d0d0d00; --interactive-bg-secondary-selected: #0d0d0d0d; =
--interactive-bg-tertiary-default: #fff; --interactive-bg-tertiary-hover: #=
f9f9f9; --interactive-bg-tertiary-press: #f3f3f3; --interactive-bg-tertiary=
-inactive: #fff; --interactive-bg-tertiary-selected: #fff; --interactive-bg=
-accent-default: #e5f3ff; --interactive-bg-accent-hover: #cce6ff; --interac=
tive-bg-accent-press: #99ceff; --interactive-bg-accent-inactive: #e5f3ff; -=
-interactive-bg-danger-primary-default: #e02e2a; --interactive-bg-danger-pr=
imary-hover: #fa423e; --interactive-bg-danger-primary-press: #ba2623; --int=
eractive-bg-danger-primary-inactive: #e02e2a; --interactive-bg-danger-secon=
dary-default: #0d0d0d00; --interactive-bg-danger-secondary-hover: #0d0d0d00=
; --interactive-bg-danger-secondary-press: #0d0d0d00; --interactive-bg-dang=
er-secondary-inactive: #0d0d0d00; --interactive-border-focus: #0d0d0d; --in=
teractive-border-secondary-default: #0d0d0d1a; --interactive-border-seconda=
ry-hover: #0d0d0d0d; --interactive-border-secondary-press: #0d0d0d0d; --int=
eractive-border-secondary-inactive: #0d0d0d1a; --interactive-border-tertiar=
y-default: #0d0d0d1a; --interactive-border-tertiary-hover: #0d0d0d1a; --int=
eractive-border-tertiary-press: #0d0d0d0d; --interactive-border-tertiary-in=
active: #0d0d0d1a; --interactive-border-danger-secondary-default: #e02e2a; =
--interactive-border-danger-secondary-hover: #fa423e; --interactive-border-=
danger-secondary-press: #ba2623; --interactive-border-danger-secondary-inac=
tive: #e02e2a; --interactive-label-primary-default: #fff; --interactive-lab=
el-primary-hover: #fff; --interactive-label-primary-press: #fff; --interact=
ive-label-primary-inactive: #fff; --interactive-label-primary-selected: #ff=
f; --interactive-label-secondary-default: #0d0d0d; --interactive-label-seco=
ndary-hover: #0d0d0de5; --interactive-label-secondary-press: #0d0d0dcc; --i=
nteractive-label-secondary-inactive: #0d0d0d; --interactive-label-secondary=
-selected: #0d0d0d; --interactive-label-tertiary-default: #5d5d5d; --intera=
ctive-label-tertiary-hover: #5d5d5d; --interactive-label-tertiary-press: #5=
d5d5d; --interactive-label-tertiary-inactive: #5d5d5d; --interactive-label-=
tertiary-selected: #5d5d5d; --interactive-label-accent-default: #0285ff; --=
interactive-label-accent-hover: #0285ff; --interactive-label-accent-press: =
#0285ff; --interactive-label-accent-inactive: #0285ff; --interactive-label-=
accent-selected: #0285ff; --interactive-label-danger-primary-default: #fff;=
 --interactive-label-danger-primary-hover: #fff; --interactive-label-danger=
-primary-press: #fff; --interactive-label-danger-primary-inactive: #fff; --=
interactive-label-danger-secondary-default: #e02e2a; --interactive-label-da=
nger-secondary-hover: #fa423e; --interactive-label-danger-secondary-press: =
#ba2623; --interactive-label-danger-secondary-inactive: #e02e2a; --interact=
ive-icon-primary-default: #fff; --interactive-icon-primary-hover: #fff; --i=
nteractive-icon-primary-press: #fff; --interactive-icon-primary-selected: #=
fff; --interactive-icon-primary-inactive: #fff; --interactive-icon-secondar=
y-default: #0d0d0d; --interactive-icon-secondary-hover: #0d0d0de5; --intera=
ctive-icon-secondary-press: #0d0d0dcc; --interactive-icon-secondary-selecte=
d: #0d0d0d; --interactive-icon-secondary-inactive: #0d0d0d; --interactive-i=
con-tertiary-default: #5d5d5d; --interactive-icon-tertiary-hover: #5d5d5d; =
--interactive-icon-tertiary-press: #5d5d5d; --interactive-icon-tertiary-sel=
ected: #5d5d5d; --interactive-icon-tertiary-inactive: #5d5d5d; --interactiv=
e-icon-accent-default: #0285ff; --interactive-icon-accent-hover: #0285ff; -=
-interactive-icon-accent-press: #0285ff; --interactive-icon-accent-selected=
: #0285ff; --interactive-icon-accent-inactive: #0285ff; --interactive-icon-=
danger-primary-default: #fff; --interactive-icon-danger-primary-hover: #fff=
; --interactive-icon-danger-primary-press: #fff; --interactive-icon-danger-=
primary-inactive: #fff; --interactive-icon-danger-secondary-default: #e02e2=
a; --interactive-icon-danger-secondary-hover: #fa423e; --interactive-icon-d=
anger-secondary-press: #ba2623; --interactive-icon-danger-secondary-inactiv=
e: #e02e2a; --utility-scrollbar: #0000000a; }

.dark { --bg-primary: #212121; --bg-secondary: #303030; --bg-tertiary: #414=
141; --bg-scrim: #0d0d0d80; --bg-elevated-primary: #303030; --bg-elevated-s=
econdary: #181818; --bg-status-warning: #4a2206; --bg-status-error: #4d100e=
; --border-default: #ffffff26; --border-heavy: #fff3; --border-light: #ffff=
ff0d; --border-status-warning: #4a2206; --border-status-error: #4d100e; --t=
ext-primary: #fff; --text-secondary: #f3f3f3; --text-tertiary: #afafaf; --t=
ext-inverted: #0d0d0d; --text-inverted-static: #fff; --text-accent: #66b5ff=
; --text-status-warning: #ff9e6c; --text-status-error: #ff8583; --icon-prim=
ary: #e8e8e8; --icon-secondary: #cdcdcd; --icon-tertiary: #afafaf; --icon-i=
nverted: #0d0d0d; --icon-inverted-static: #fff; --icon-accent: #66b5ff; --i=
con-status-warning: #ff9e6c; --icon-status-error: #ff8583; --interactive-bg=
-primary-default: #fff; --interactive-bg-primary-hover: #fffc; --interactiv=
e-bg-primary-press: #ffffffe5; --interactive-bg-primary-inactive: #fff; --i=
nteractive-bg-primary-selected: #fff; --interactive-bg-secondary-default: #=
fff0; --interactive-bg-secondary-hover: #ffffff1a; --interactive-bg-seconda=
ry-press: #ffffff0d; --interactive-bg-secondary-inactive: #fff0; --interact=
ive-bg-secondary-selected: #ffffff1a; --interactive-bg-tertiary-default: #2=
12121; --interactive-bg-tertiary-hover: #181818; --interactive-bg-tertiary-=
press: #0d0d0d; --interactive-bg-tertiary-inactive: #212121; --interactive-=
bg-tertiary-selected: #212121; --interactive-bg-accent-default: #013566; --=
interactive-bg-accent-hover: #003f7a; --interactive-bg-accent-press: #004f9=
9; --interactive-bg-accent-inactive: #013566; --interactive-bg-danger-prima=
ry-default: #e02e2a; --interactive-bg-danger-primary-hover: #fa423e; --inte=
ractive-bg-danger-primary-press: #ba2623; --interactive-bg-danger-primary-i=
nactive: #e02e2a; --interactive-bg-danger-secondary-default: #fff0; --inter=
active-bg-danger-secondary-hover: #fff0; --interactive-bg-danger-secondary-=
press: #fff0; --interactive-bg-danger-secondary-inactive: #fff0; --interact=
ive-border-focus: #fff; --interactive-border-secondary-default: #ffffff26; =
--interactive-border-secondary-hover: #ffffff26; --interactive-border-secon=
dary-press: #fff3; --interactive-border-secondary-inactive: #ffffff1a; --in=
teractive-border-tertiary-default: #ffffff1a; --interactive-border-tertiary=
-hover: #ffffff26; --interactive-border-tertiary-press: #ffffff1a; --intera=
ctive-border-tertiary-inactive: #ffffff1a; --interactive-border-danger-seco=
ndary-default: #fa423e; --interactive-border-danger-secondary-hover: #ff676=
4; --interactive-border-danger-secondary-press: #e02e2a; --interactive-bord=
er-danger-secondary-inactive: #fa423e; --interactive-label-primary-default:=
 #0d0d0d; --interactive-label-primary-hover: #0d0d0d; --interactive-label-p=
rimary-press: #0d0d0d; --interactive-label-primary-inactive: #0d0d0d; --int=
eractive-label-primary-selected: #0d0d0d; --interactive-label-secondary-def=
ault: #f3f3f3; --interactive-label-secondary-hover: #ffffffe5; --interactiv=
e-label-secondary-press: #fffc; --interactive-label-secondary-inactive: #f3=
f3f3; --interactive-label-secondary-selected: #f3f3f3; --interactive-label-=
tertiary-default: #cdcdcd; --interactive-label-tertiary-hover: #cdcdcd; --i=
nteractive-label-tertiary-press: #cdcdcd; --interactive-label-tertiary-inac=
tive: #cdcdcd; --interactive-label-tertiary-selected: #cdcdcd; --interactiv=
e-label-accent-default: #99ceff; --interactive-label-accent-hover: #99ceff;=
 --interactive-label-accent-press: #99ceff; --interactive-label-accent-inac=
tive: #99ceff; --interactive-label-accent-selected: #99ceff; --interactive-=
label-danger-primary-default: #fff; --interactive-label-danger-primary-hove=
r: #fff; --interactive-label-danger-primary-press: #fff; --interactive-labe=
l-danger-primary-inactive: #fff; --interactive-label-danger-secondary-defau=
lt: #fa423e; --interactive-label-danger-secondary-hover: #ff6764; --interac=
tive-label-danger-secondary-press: #e02e2a; --interactive-label-danger-seco=
ndary-inactive: #fa423e; --interactive-icon-primary-default: #0d0d0d; --int=
eractive-icon-primary-hover: #0d0d0d; --interactive-icon-primary-press: #0d=
0d0d; --interactive-icon-primary-selected: #0d0d0d; --interactive-icon-prim=
ary-inactive: #0d0d0d; --interactive-icon-secondary-default: #f3f3f3; --int=
eractive-icon-secondary-hover: #ffffffe5; --interactive-icon-secondary-pres=
s: #fffc; --interactive-icon-secondary-selected: #f3f3f3; --interactive-ico=
n-secondary-inactive: #f3f3f3; --interactive-icon-tertiary-default: #cdcdcd=
; --interactive-icon-tertiary-hover: #cdcdcd; --interactive-icon-tertiary-p=
ress: #cdcdcd; --interactive-icon-tertiary-selected: #cdcdcd; --interactive=
-icon-tertiary-inactive: #cdcdcd; --interactive-icon-accent-default: #99cef=
f; --interactive-icon-accent-hover: #99ceff; --interactive-icon-accent-pres=
s: #99ceff; --interactive-icon-accent-selected: #99ceff; --interactive-icon=
-accent-inactive: #99ceff; --interactive-icon-danger-primary-default: #fff;=
 --interactive-icon-danger-primary-hover: #fff; --interactive-icon-danger-p=
rimary-press: #fff; --interactive-icon-danger-primary-inactive: #fff; --int=
eractive-icon-danger-secondary-default: #fa423e; --interactive-icon-danger-=
secondary-hover: #ff6764; --interactive-icon-danger-secondary-press: #e02e2=
a; --interactive-icon-danger-secondary-inactive: #fa423e; --utility-scrollb=
ar: #fff3; }

html:not(.screen-arch), html:not(.screen-arch) body { background-color: var=
(--main-surface-primary); height: 100%; }

html.screen-arch, html.screen-arch body { background-color: var(--main-surf=
ace-primary); min-height: 100%; }

#__next, #root { height: 100%; }

.markdown { max-width: unset; }

.markdown.streaming-animation.block-entry-animation pre, .markdown.streamin=
g-animation.block-entry-animation table { position: relative; overflow: cli=
p !important; }

:is(.markdown.streaming-animation.block-entry-animation pre, .markdown.stre=
aming-animation.block-entry-animation table)::after { --overlap-distance: 1=
0px; --overlap-negative-distance: -10px; content: ""; display: flex; height=
: calc(100% + var(--overlap-distance)*2); inset: 0px; position: absolute; t=
ranslate: 0 var(--streaming-reveal-amount,var(--overlap-negative-distance))=
; }

[dir=3D"ltr"] :is(.markdown.streaming-animation.block-entry-animation pre, =
.markdown.streaming-animation.block-entry-animation table)::after { backgro=
und-image: linear-gradient(180deg,transparent,var(--main-surface-primary)va=
r(--overlap-distance)); }

[dir=3D"rtl"] :is(.markdown.streaming-animation.block-entry-animation pre, =
.markdown.streaming-animation.block-entry-animation table)::after { backgro=
und-image: linear-gradient(-180deg,transparent,var(--main-surface-primary)v=
ar(--overlap-distance)); }

@media (prefers-reduced-motion: no-preference) {
  :is(.markdown.streaming-animation.block-entry-animation pre, .markdown.st=
reaming-animation.block-entry-animation table)::after { transition: .5s tra=
nslate var(--spring-standard); }
}

.markdown.streaming-animation h1, .markdown.streaming-animation h2, .markdo=
wn.streaming-animation h3, .markdown.streaming-animation h4, .markdown.stre=
aming-animation h5, .markdown.streaming-animation h6, .markdown.streaming-a=
nimation li:not(:has(pre)) { width: fit-content; }

.markdown pre { margin-top: calc(var(--spacing)*2); }

.markdown pre:first-child { margin-top: calc(var(--spacing)*0); }

.markdown h1 { --tw-font-weight: var(--font-weight-bold); --tw-tracking: -.=
04rem; font-weight: var(--font-weight-bold); letter-spacing: -0.04rem; }

.markdown h1:first-child { margin-top: calc(var(--spacing)*0); }

.markdown h2 { --tw-font-weight: var(--font-weight-semibold); font-weight: =
var(--font-weight-semibold); margin-bottom: calc(var(--spacing)*4); margin-=
top: calc(var(--spacing)*8); }

.markdown h2:first-child { margin-top: calc(var(--spacing)*0); }

.markdown h3 { --tw-font-weight: var(--font-weight-semibold); font-weight: =
var(--font-weight-semibold); margin-bottom: calc(var(--spacing)*2); margin-=
top: calc(var(--spacing)*4); }

.markdown h3:first-child { margin-top: calc(var(--spacing)*0); }

.markdown h4 { --tw-font-weight: var(--font-weight-semibold); font-weight: =
var(--font-weight-semibold); margin-bottom: calc(var(--spacing)*2); margin-=
top: calc(var(--spacing)*4); }

.markdown h4:first-child { margin-top: calc(var(--spacing)*0); }

.markdown h5 { --tw-font-weight: var(--font-weight-semibold); font-weight: =
var(--font-weight-semibold); }

.markdown h5:first-child { margin-top: calc(var(--spacing)*0); }

.markdown blockquote { --tw-leading: calc(var(--spacing)*6); border-style: =
var(--tw-border-style); border-width: 0px; line-height: calc(var(--spacing)=
*6); margin: calc(var(--spacing)*0); padding-block: calc(var(--spacing)*2);=
 position: relative; }

[dir=3D"ltr"] .markdown blockquote { padding-left: calc(var(--spacing)*6); =
}

[dir=3D"rtl"] .markdown blockquote { padding-right: calc(var(--spacing)*6);=
 }

.markdown blockquote > p { --tw-font-weight: var(--font-weight-normal); fon=
t-weight: var(--font-weight-normal); margin: calc(var(--spacing)*0); }

.markdown blockquote > p::after, .markdown blockquote > p::before { display=
: none; }

.markdown blockquote::after { background-color: var(--border-medium); borde=
r-radius: 2px; bottom: 0.5rem; content: ""; position: absolute; top: 0.5rem=
; width: 4px; }

[dir=3D"ltr"] .markdown blockquote::after { left: 0px; }

[dir=3D"rtl"] .markdown blockquote::after { right: 0px; }

.markdown p { margin-bottom: 0.5rem; }

.markdown p:not(:first-child) { margin-top: 0.5rem; }

.markdown p + :where(ol, ul) { margin-top: 0px; }

.markdown :where(ol, ul) > li > :last-child { margin-bottom: 0px; }

.markdown :where(ol, ul) > li > :first-child { margin-bottom: 0px; margin-t=
op: 0px; }

.markdown table { --tw-border-spacing-x: calc(var(--spacing)*0); --tw-borde=
r-spacing-y: calc(var(--spacing)*0); border-collapse: separate; border-spac=
ing: var(--tw-border-spacing-x)var(--tw-border-spacing-y); margin: calc(var=
(--spacing)*0); }

.markdown table [data-col-size=3D"sm"] { max-width: calc(var(--thread-conte=
nt-max-width)*6/24); }

.markdown table [data-col-size=3D"md"] { max-width: calc(var(--thread-conte=
nt-max-width)*8/24); min-width: calc(var(--thread-content-max-width)*6/24);=
 }

.markdown table [data-col-size=3D"lg"] { max-width: calc(var(--thread-conte=
nt-max-width)*12/24); min-width: calc(var(--thread-content-max-width)*8/24)=
; }

.markdown table [data-col-size=3D"xl"] { max-width: calc(var(--thread-conte=
nt-max-width)*18/24); min-width: calc(var(--thread-content-max-width)*14/24=
); }

.markdown th { --tw-leading: calc(var(--spacing)*4); border-bottom-style: v=
ar(--tw-border-style); border-bottom-width: 1px; border-color: var(--border=
-medium); line-height: calc(var(--spacing)*4); padding-block: calc(var(--sp=
acing)*2); }

.markdown th:not(:last-child) { padding-inline-end: calc(var(--spacing)*6);=
 }

.markdown tr:not(:last-child) td { border-bottom-style: var(--tw-border-sty=
le); border-bottom-width: 1px; border-color: var(--border-light); }

.markdown tr:last-child td { padding-bottom: calc(var(--spacing)*6); }

.markdown td { padding-block: calc(var(--spacing)*2.5); }

.markdown td:not(:last-child) { padding-inline-end: calc(var(--spacing)*6);=
 }

.markdown ol, .markdown ul { margin-bottom: calc(var(--spacing)*4); }

.markdown li::marker { --tw-font-weight: var(--font-weight-bold); color: va=
r(--text-secondary); font-weight: var(--font-weight-bold); }

.markdown a { --tw-font-weight: var(--font-weight-normal); color: var(--lin=
k); font-weight: var(--font-weight-normal); text-decoration-line: none; }

@media (hover: hover) {
  .markdown a:hover { color: var(--link-hover); }
}

.gizmo .markdown > :not(pre), .gizmo .markdown > :not(pre) > :not(a) { colo=
r: var(--text-primary); }

.markdown .float-image + p { margin-top: calc(var(--spacing)*0); }

.markdown hr { border-color: var(--border-light); margin-block: calc(var(--=
spacing)*10); }

.deep-research-result p { display: inline-block; vertical-align: top; width=
: 100%; }

@keyframes blink {=20
  100% { visibility: hidden; }
}

@keyframes show {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

.result-streaming > :not(ol, ul, pre, div):last-child::after, .result-strea=
ming > pre:last-child code::after { content: "=E2=97=8F"; font-family: Circ=
le, system-ui, sans-serif; line-height: normal; vertical-align: baseline; }

.result-streaming.no-flow > :not(ol, ul, pre):last-child::after, .result-st=
reaming.no-flow > pre:last-child code::after { margin-top: 0.25rem; positio=
n: absolute; }

.pulse > :not(ol, ul, pre, div):last-child::after, .pulse > pre:last-child =
code::after { -webkit-font-smoothing: subpixel-antialiased; animation: 1.25=
s ease-in-out 0s infinite normal none running pulseSize; backface-visibilit=
y: hidden; border-radius: 50%; content: "=E2=97=8F"; display: inline-block;=
 transform: translateZ(0px); transform-origin: 50% center; will-change: tra=
nsform; }

[dir=3D"ltr"] .pulse > :not(ol, ul, pre, div):last-child::after, [dir=3D"lt=
r"] .pulse > pre:last-child code::after { padding-left: 0.1em; }

[dir=3D"rtl"] .pulse > :not(ol, ul, pre, div):last-child::after, [dir=3D"rt=
l"] .pulse > pre:last-child code::after { padding-right: 0.1em; }

.result-thinking p:last-child::after { -webkit-font-smoothing: subpixel-ant=
ialiased; animation: 1.25s ease-in-out 0s infinite normal none running puls=
eSize; backface-visibility: hidden; background-color: var(--text-primary); =
border-radius: 50%; box-sizing: border-box; content: " "; display: block; h=
eight: 12px; position: absolute; top: 11px; transform: translateZ(0px); tra=
nsform-origin: 50% center; width: 12px; will-change: transform; }

:root { --sharp-edge-top-shadow: 0 1px 0 var(--border-sharp); --sharp-edge-=
top-shadow-placeholder: 0 1px 0 transparent; --sharp-edge-bottom-shadow: 0 =
-1px 0 var(--border-sharp); --sharp-edge-bottom-shadow-placeholder: 0 -1px =
0 transparent; }

@keyframes add-top-shadow {=20
  0% { box-shadow: var(--sharp-edge-top-shadow-placeholder); }
  0.1%, 100% { box-shadow: var(--sharp-edge-top-shadow); }
}

@keyframes add-bottom-shadow {=20
  0%, 99.9% { box-shadow: var(--sharp-edge-bottom-shadow); }
  100% { box-shadow: var(--sharp-edge-bottom-shadow-placeholder); }
}

.sharp-edge-on-scroll-start { box-shadow: rgba(0, 0, 0, 0) 0px 1px; }

@supports (animation-timeline:--agi) {
  .sharp-edge-on-scroll-start { animation: 1ms linear 0s 1 normal both runn=
ing add-top-shadow; }
}

.sharp-edge-on-scroll-end { box-shadow: rgba(0, 0, 0, 0) 0px -1px; }

.sharp-edge-on-scroll-end, .sharp-edge-on-scroll-start { animation-timeline=
: scroll(); }

@keyframes shimmer-skeleton {=20
  0% { background-position: 100% center; }
  100% { background-position: 0px center; }
}

@supports selector(:has(*)) {
  .result-streaming:not(.streaming-animation) > :is(ul, ol):last-child > li=
:last-child:not(:has(* > li))::after, .result-streaming:not(.streaming-anim=
ation) > :is(ul, ol):last-child > li:last-child > :is(ul, ol):last-child > =
li:last-child::after, .result-streaming:not(.streaming-animation) > :is(ul,=
 ol):last-child > li:last-child > :is(ul, ol):last-child > li:last-child > =
:is(ul, ol):last-child > li:last-child::after { content: "=E2=97=8F"; font-=
family: Circle, system-ui, sans-serif; line-height: normal; vertical-align:=
 baseline; }
  [dir=3D"ltr"] .result-streaming:not(.streaming-animation) > :is(ul, ol):l=
ast-child > li:last-child:not(:has(* > li))::after, [dir=3D"ltr"] .result-s=
treaming:not(.streaming-animation) > :is(ul, ol):last-child > li:last-child=
 > :is(ul, ol):last-child > li:last-child::after, [dir=3D"ltr"] .result-str=
eaming:not(.streaming-animation) > :is(ul, ol):last-child > li:last-child >=
 :is(ul, ol):last-child > li:last-child > :is(ul, ol):last-child > li:last-=
child::after { margin-left: 0.25rem; }
  [dir=3D"rtl"] .result-streaming:not(.streaming-animation) > :is(ul, ol):l=
ast-child > li:last-child:not(:has(* > li))::after, [dir=3D"rtl"] .result-s=
treaming:not(.streaming-animation) > :is(ul, ol):last-child > li:last-child=
 > :is(ul, ol):last-child > li:last-child::after, [dir=3D"rtl"] .result-str=
eaming:not(.streaming-animation) > :is(ul, ol):last-child > li:last-child >=
 :is(ul, ol):last-child > li:last-child > :is(ul, ol):last-child > li:last-=
child::after { margin-right: 0.25rem; }
}

@supports not selector(:has(*)) {
  .result-streaming > ol:last-child > li:last-child::after, .result-streami=
ng > ul:last-child > li:last-child::after { content: "=E2=97=8F"; font-fami=
ly: Circle, system-ui, sans-serif; line-height: normal; vertical-align: bas=
eline; }
  [dir=3D"ltr"] .result-streaming > ol:last-child > li:last-child::after, [=
dir=3D"ltr"] .result-streaming > ul:last-child > li:last-child::after { mar=
gin-left: 0.25rem; }
  [dir=3D"rtl"] .result-streaming > ol:last-child > li:last-child::after, [=
dir=3D"rtl"] .result-streaming > ul:last-child > li:last-child::after { mar=
gin-right: 0.25rem; }
}

.result-streaming .katex-error { display: none; }

@keyframes pulse-dot {=20
  100% { transform: scale(var(--pulse-scale,1.3)); }
}

@keyframes float-sidebar-in {=20
  0% { opacity: 0; translate: -60%; }
  70% { opacity: 1; }
  100% { translate: 0px; }
}

@keyframes float-sidebar-out {=20
  0% { translate: 0px; }
  30% { opacity: 1; }
  100% { opacity: 0; translate: -60%; }
}

.pulsing-dot { aspect-ratio: 1 / 1; background: var(--dot-color); border-ra=
dius: 50%; opacity: var(--dot-opacity,1); width: 1rem; }

@media (prefers-reduced-motion: no-preference) {
  .pulsing-dot { animation: pulse-dot 1s infinite var(--easing-common)alter=
nate-reverse; transition: .2s opacity var(--easing-common); translate: 0px =
3px; }
}

@keyframes pulseSize {=20
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.25); }
}

@keyframes toast-open {=20
  0% { opacity: 0; transform: translateY(-100%); }
  100% { transform: translateY(0px); }
}

@keyframes toast-close {=20
  0% { opacity: 1; }
  100% { opacity: 0; }
}

.toast-root { align-items: center; display: flex; flex-direction: column; h=
eight: 0px; transition: 0.24s cubic-bezier(0, 0, 0.2, 1); }

.toast-root[data-state=3D"entered"], .toast-root[data-state=3D"entering"] {=
 animation: 0.24s cubic-bezier(0.175, 0.885, 0.32, 1) 0s 1 normal both runn=
ing toast-open; }

.toast-root[data-state=3D"exiting"] { animation: 0.12s cubic-bezier(0.4, 0,=
 1, 1) 0s 1 normal both running toast-close; }

.toast-root .alert-root { box-shadow: rgba(67, 90, 111, 0.3) 0px 0px 1px, r=
gba(67, 90, 111, 0.3) 0px 5px 8px -4px; flex-shrink: 0; pointer-events: all=
; }

.title { font-feature-settings: normal; font-family: ui-sans-serif, system-=
ui, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color E=
moji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; font-variat=
ion-settings: normal; }

.icon-shimmer { animation: 5s cubic-bezier(0.2, 0.44, 0.38, 1.02) 0s infini=
te normal none running icon-shimmer; background-repeat: no-repeat; mask: li=
near-gradient(80deg, currentcolor 30%, rgba(0, 0, 0, 0.333), currentcolor 7=
0%) 100% center / 300% 100%; }

@keyframes icon-shimmer {=20
  0% { mask-position: 100% center; }
  20% { mask-position: 0px center; }
  100% { mask-position: 0px center; }
}

@keyframes loading-results-shimmer {=20
  0% { background-position: -1000px 0px; }
  100% { background-position: 1000px 0px; }
}

@keyframes diagonalSweep {=20
  0% { transform: translate(-100%, -100%); }
  100% { transform: translate(100%, 100%); }
}

.diagonal-sweep-gradient { animation: 4s ease-out 0s infinite normal none r=
unning diagonalSweep; }

[dir=3D"ltr"] .diagonal-sweep-gradient { background-image: linear-gradient(=
135deg, rgba(255, 255, 255, 0) 46%, rgba(255, 255, 255, 0.2), rgba(255, 255=
, 255, 0) 54%); }

[dir=3D"rtl"] .diagonal-sweep-gradient { background-image: linear-gradient(=
-135deg, rgba(255, 255, 255, 0) 46%, rgba(255, 255, 255, 0.2), rgba(255, 25=
5, 255, 0) 54%); }

.loading-results-shimmer { animation: 3s linear 0s infinite normal none run=
ning loading-results-shimmer; background-image: ; background-position-x: ; =
background-position-y: ; background-repeat: ; background-attachment: ; back=
ground-origin: ; background-clip: ; background-color: ; background-size: 10=
00px 100%; }

.hint-pill { --tw-font-weight: var(--font-weight-semibold); color: var(--hi=
nt-text); font-weight: var(--font-weight-semibold); }

@keyframes loading-shimmer {=20
  0% { background-position: -100% 0px; }
  100% { background-position: 250% 0px; }
}

.no-scrollbar::-webkit-scrollbar { display: none; }

.no-scrollbar { scrollbar-width: none; }

.gizmo-bot-avatar { outline: solid 1px var(--main-surface-tertiary); }

[dir=3D"ltr"] div[data-radix-popper-content-wrapper]:has(> div[data-side=3D=
"right"]) { left: min(0px,var(--radix-popper-available-width) + (-1*var(--r=
adix-popper-anchor-width))) !important; }

[dir=3D"rtl"] div[data-radix-popper-content-wrapper]:has(> div[data-side=3D=
"right"]) { right: min(0px,var(--radix-popper-available-width) + (-1*var(--=
radix-popper-anchor-width))) !important; }

[dir=3D"ltr"] div[data-radix-popper-content-wrapper]:has(> div[data-side=3D=
"left"]) { left: max(0px,(-1*var(--radix-popper-available-width)) + var(--r=
adix-popper-anchor-width)) !important; }

[dir=3D"rtl"] div[data-radix-popper-content-wrapper]:has(> div[data-side=3D=
"left"]) { right: max(0px,(-1*var(--radix-popper-available-width)) + var(--=
radix-popper-anchor-width)) !important; }

#sidebar-summarizer p:not(:first-child) { margin-top: 0px; }

@property --tw-border-style { syntax: "*"; inherits: false; initial-value: =
solid; }

@property --tw-blur { syntax: "*"; inherits: false; }

@property --tw-brightness { syntax: "*"; inherits: false; }

@property --tw-contrast { syntax: "*"; inherits: false; }

@property --tw-grayscale { syntax: "*"; inherits: false; }

@property --tw-hue-rotate { syntax: "*"; inherits: false; }

@property --tw-invert { syntax: "*"; inherits: false; }

@property --tw-opacity { syntax: "*"; inherits: false; }

@property --tw-saturate { syntax: "*"; inherits: false; }

@property --tw-sepia { syntax: "*"; inherits: false; }

@property --tw-drop-shadow { syntax: "*"; inherits: false; }

@property --tw-border-spacing-x { syntax: "<length>"; inherits: false; init=
ial-value: 0; }

@property --tw-border-spacing-y { syntax: "<length>"; inherits: false; init=
ial-value: 0; }

@property --tw-translate-x { syntax: "*"; inherits: false; initial-value: 0=
; }

@property --tw-translate-y { syntax: "*"; inherits: false; initial-value: 0=
; }

@property --tw-translate-z { syntax: "*"; inherits: false; initial-value: 0=
; }

@property --tw-scale-x { syntax: "*"; inherits: false; initial-value: 1; }

@property --tw-scale-y { syntax: "*"; inherits: false; initial-value: 1; }

@property --tw-scale-z { syntax: "*"; inherits: false; initial-value: 1; }

@property --tw-rotate-x { syntax: "*"; inherits: false; initial-value: rota=
teX(0); }

@property --tw-rotate-y { syntax: "*"; inherits: false; initial-value: rota=
teY(0); }

@property --tw-rotate-z { syntax: "*"; inherits: false; initial-value: rota=
teZ(0); }

@property --tw-skew-x { syntax: "*"; inherits: false; initial-value: skewX(=
0); }

@property --tw-skew-y { syntax: "*"; inherits: false; initial-value: skewY(=
0); }

@property --tw-pan-x { syntax: "*"; inherits: false; }

@property --tw-pan-y { syntax: "*"; inherits: false; }

@property --tw-pinch-zoom { syntax: "*"; inherits: false; }

@property --tw-scroll-snap-strictness { syntax: "*"; inherits: false; initi=
al-value: proximity; }

@property --tw-space-y-reverse { syntax: "*"; inherits: false; initial-valu=
e: 0; }

@property --tw-space-x-reverse { syntax: "*"; inherits: false; initial-valu=
e: 0; }

@property --tw-divide-x-reverse { syntax: "*"; inherits: false; initial-val=
ue: 0; }

@property --tw-divide-y-reverse { syntax: "*"; inherits: false; initial-val=
ue: 0; }

@property --tw-gradient-position { syntax: "*"; inherits: false; }

@property --tw-gradient-from { syntax: "<color>"; inherits: false; initial-=
value: #0000; }

@property --tw-gradient-via { syntax: "<color>"; inherits: false; initial-v=
alue: #0000; }

@property --tw-gradient-to { syntax: "<color>"; inherits: false; initial-va=
lue: #0000; }

@property --tw-gradient-stops { syntax: "*"; inherits: false; }

@property --tw-gradient-via-stops { syntax: "*"; inherits: false; }

@property --tw-gradient-from-position { syntax: "<length-percentage>"; inhe=
rits: false; initial-value: 0; }

@property --tw-gradient-via-position { syntax: "<length-percentage>"; inher=
its: false; initial-value: 50%; }

@property --tw-gradient-to-position { syntax: "<length-percentage>"; inheri=
ts: false; initial-value: 100%; }

@property --tw-leading { syntax: "*"; inherits: false; }

@property --tw-tracking { syntax: "*"; inherits: false; }

@property --tw-ordinal { syntax: "*"; inherits: false; }

@property --tw-slashed-zero { syntax: "*"; inherits: false; }

@property --tw-numeric-figure { syntax: "*"; inherits: false; }

@property --tw-numeric-spacing { syntax: "*"; inherits: false; }

@property --tw-numeric-fraction { syntax: "*"; inherits: false; }

@property --tw-outline-style { syntax: "*"; inherits: false; initial-value:=
 solid; }

@property --tw-backdrop-blur { syntax: "*"; inherits: false; }

@property --tw-backdrop-brightness { syntax: "*"; inherits: false; }

@property --tw-backdrop-contrast { syntax: "*"; inherits: false; }

@property --tw-backdrop-grayscale { syntax: "*"; inherits: false; }

@property --tw-backdrop-hue-rotate { syntax: "*"; inherits: false; }

@property --tw-backdrop-invert { syntax: "*"; inherits: false; }

@property --tw-backdrop-opacity { syntax: "*"; inherits: false; }

@property --tw-backdrop-saturate { syntax: "*"; inherits: false; }

@property --tw-backdrop-sepia { syntax: "*"; inherits: false; }

@property --tw-duration { syntax: "*"; inherits: false; }

@property --tw-ease { syntax: "*"; inherits: false; }

@property --tw-contain-size { syntax: "*"; inherits: false; }

@property --tw-contain-layout { syntax: "*"; inherits: false; }

@property --tw-contain-paint { syntax: "*"; inherits: false; }

@property --tw-contain-style { syntax: "*"; inherits: false; }

@property --tw-content { syntax: "*"; inherits: false; initial-value: ""; }

@keyframes spin {=20
  100% { transform: rotate(1turn); }
}

@keyframes ping {=20
  75%, 100% { opacity: 0; transform: scale(2); }
}

@keyframes pulse {=20
  50% { opacity: 0.5; }
}

@keyframes bounce {=20
  0%, 100% { animation-timing-function: cubic-bezier(0.8, 0, 1, 1); transfo=
rm: translateY(-25%); }
  50% { animation-timing-function: cubic-bezier(0, 0, 0.2, 1); transform: n=
one; }
}

@keyframes pulsing {=20
  0% { opacity: 1; scale: 1; }
  50% { opacity: 0.9; scale: 0.875; }
  100% { opacity: 1; scale: 1; }
}

@font-face { font-family: KaTeX_AMS; font-style: normal; font-weight: 400; =
src: url("https://cdn.oaistatic.com/assets/KaTeX_AMS-Regular-e1why8ff.woff2=
") format("woff2"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 700; src: url("https://cdn.oaistatic.com/assets/KaTeX_Caligraphic-Bold-n=
63xiolk.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 400; src: url("https://cdn.oaistatic.com/assets/KaTeX_Caligraphic-Regula=
r-npwmqylf.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 7=
00; src: url("https://cdn.oaistatic.com/assets/KaTeX_Fraktur-Bold-ikhebgtj.=
woff2") format("woff2"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 4=
00; src: url("https://cdn.oaistatic.com/assets/KaTeX_Fraktur-Regular-i0egur=
y6.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Main-Bold-ktk38ybk.woff2"=
) format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Main-BoldItalic-oj033t4i.=
woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Main-Italic-2p4bq1jf.woff=
2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Main-Regular-hbkzldb8.wof=
f2") format("woff2"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Math-BoldItalic-jdo1yxu8.=
woff2") format("woff2"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Math-Italic-cz4b2ure.woff=
2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 700; src: url("https://cdn.oaistatic.com/assets/KaTeX_SansSerif-Bold-otxc8=
itm.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: italic; font-weight:=
 400; src: url("https://cdn.oaistatic.com/assets/KaTeX_SansSerif-Italic-k4k=
ksncm.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 400; src: url("https://cdn.oaistatic.com/assets/KaTeX_SansSerif-Regular-lt=
w53ck4.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Script; font-style: normal; font-weight: 40=
0; src: url("https://cdn.oaistatic.com/assets/KaTeX_Script-Regular-oybd33cp=
.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size1; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/assets/KaTeX_Size1-Regular-cjccv44r.w=
off2") format("woff2"); }

@font-face { font-family: KaTeX_Size2; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/assets/KaTeX_Size2-Regular-onxq3bzc.w=
off2") format("woff2"); }

@font-face { font-family: KaTeX_Size3; font-style: normal; font-weight: 400=
; src: url("data:font/woff2;base64,d09GMgABAAAAAA4oAA4AAAAAHbQAAA3TAAEAAAAA=
AAAAAAAAAAAAAAAAAAAAAAAABmAAgRQIDgmcDBEICo1oijYBNgIkA14LMgAEIAWJAAeBHAyBHBv=
bGiMRdnO0IkRRkiYDgr9KsJ1NUAf2kILNxgUmgqIgq1P89vcbIcmsQbRps3vCcXdYOKSWEPEKgZ=
gQkprQQsxIXUgq0DqpGKmIvrgkeVGtEQD9DzAO29fM9jYhxZEsL2FeURH2JN4MIcTdO049NCVdx=
Q/w9NrSYFEBKTDKpLKfNkCGDc1RwjZLQcm3vqJ2UW9Xfa3tgAHz6ivp6vgC2yD4/6352ndnN0X0=
TL7seypkjZlMsjmZnf0Mm5Q+JykRWQBKCVCVPbARPXWyQtb5VgLB6Biq7/Uixcj2WGqdI8tGSgk=
uRG+t910GKP2D7AQH0DB9FMDW/obJZ8giFI3Wg8Cvevz0M+5m0rTh7XDBlvo9Y4vm13EXmfttwI=
4mBo1EG15fxJhUiCLbiiyCf/ZA6MFAhg3pGIZGdGIVjtPn6UcMk9A/UUr9PhoNsCENw1APAq0gp=
H73e+M+0ueyHbabc3vkbcdtzcf/fiy+NxQEjf9ud/ELBHAXJ0nk4z+MXH2Ev/kWyV4k7SkvpPc9=
Qr38F6RPWnM9cN6DJ0AdD1BhtgABtmoRoFCvPsBAumNm6soZG2Gk5GyVTo2sJncSyp0jQTYoR6W=
DvTwaaEcHsxHfvuWhHA3a6bN7twRKtcGok6NsCi7jYRrM2jExsUFMxMQYuJbMhuWNOumEJy9hi2=
9Dmg5zMp/A5+hhPG19j1vBrq8JTLr8ki5VLPmG/PynJHVul440bxg5xuymHUFPBshC+nA9I1Fmw=
bRBTNHAcik3Oae0cxKoI3MOriM42UrPe51nsaGxJ+WfXubAsP84aabUlQSJ1IiE0iPETLUU4CAT=
gfXSCSpuRFRmCGbO+wSpAnzaeaCYW1VNEysRtuXCEL1kUFUbbtMv3Tilt/1c11jt3Q5bbMa84cp=
Wipp8Elw3MZhOHsOlwwVUQM3lAR35JiFQbaYCRnMF2lxAWoOg2gyoIV4PouX8HytNIfLhqpJtXB=
4vjiViUI8IJ7bkC4ikkQvKksnOTKICwnqWSZ9YS5f0WCxmpgjbIq7EJcM4aI2nmhLNY2JIUgOjX=
ZFWBHb+x5oh6cwb0Tv1ackHdKi0I9OO2wE9aogIOn540CCCziyhN+IaejtgAONKznHlHyutPrHG=
wCx9S6B8kfS4Mfi4Eyv7OU730bT1SCBjt834cXsf43zVjPUqqJjgrjeGnBxSG4aYAKFuVbeCfkD=
IjAqMb6yLNIbCuvXhMH2/+k2vkNpkORhR59N1CkzoOENvneIosjYmuTxlhUzaGEJQ/iWqx4dmwp=
mKjrwTiTGTCVozNAYqk/zXOndWxuWSmJkQpJw3pK5KX6QrLt5LATMqpmPAQhkhK6PUjzHUn7E0g=
HE0kPE0iKkolgkUx9SZmVAdDgpffdyJKg3k7VmzYGCwVXGz/tXmkOIp+vcWs+EMuhhvN0h9uhfz=
WJziBQmCREGSIFmQIkgVpAnSBRmC//6hkLZwaVhwxlrJSOdqlFtOYxlau9F2QN5Y98xmIAsiM1H=
Vp2VFX+DHHGg6Ecjh3vmqtidX3qHI2qycTk/iwxSt5UzTmEP92ZBnEWTk4Mx8Mpl78ZDokxg/KW=
b+Q0QkvdKVmq3TMW+RXEgrsziSAfNXFMhDc60N5N9jQzjfO0kBKpUZl0ZmwJ41j/B9Hz6wmRaJB=
84niNmQrzp9eSlQCDDzazGDdVi3P36VZQ+Jy4f9UBNp+3zTjqI4abaFAm+GShVaXlsGdF3FYzZc=
DI6cori4kMxUECl9IjJZpzkvitAoxKue+90pDMvcKRxLl53TmOKCmV/xRolNKSqqUxc6LStOETm=
FOiLZZptlZepcKiAzteG8PEdpnQpbOMNcMsR4RR2Bs0cKFEvSmIjAFcnarqwUL4lDhHmnVkwu1I=
wshbiCcgvOheZuYyOteufZZwlcTlLgnZ3o/WcYdzZHW/WGaqaVfmTZ1aWCceJjkbZqsfbkOtcFl=
UZM/jy+hXHDbaUobWqqXaeWobbLO99yG5N3U4wxco0rQGGcOLASFMXeJoham8M+/x6O2WywK2l4=
HGbq1CoUyC/IZikQhdq3SiuNrvAEj0AVu9x2x3lp/xWzahaxidezFVtdcb5uEnzyl0ZmYiuKI0e=
xvCd4Xc9CV1KB0db00z92wDPde0kukbvZIWN6jUWFTmPIC/Y4UPCm8UfDTFZpZNon1qLFTkBhxz=
B+FjQRA2Q/YRJT8pQigslMaUpFyAG8TMlXigiqmAZX4xgijKjRlGpLE0GdplRfCaJo0JQaSxNBk=
6ZmMzcya0FmrcisDdn0Q3HI2sWSppYigmlM1XT/kLQZSNpMJG0WkjYbSZuDpM1F0uYhFc1HxU4m=
1QJjDK6iL0S5uSj5rgXc3RejEigtcRBtqYPQsiTskmO5vosV+q4VGIKbOkDg0jtRrq+Em1YloaT=
Far3EGr1EUC8R0kus1Uus00usL97ABr2BjXoDm/QGNhuWtMVBKOwg/i78lT7hBsAvDmwHc/ao3v=
mUbBmhjeYySZNWvGkfZAgISDSaDo1SVpzGDsAEkF8B+gEapViUoZgUWXcRIGFZNm6gWbAKk0bp0=
k1MHG9fLYtV4iS2SmLEQFARzRcnf9PUS0LVn05/J9MiRRBU3v2IrvW974v4N00L7ZMk0wXP1409=
CHo/an8zTRHD3eSJ6m8D4YMkZNl3M79sqeuAsr/m3f+8/yl7A50aiAEJgeBeMWzu7ui9UfUBCe2=
TIqZIoOd/3/udRBOQidQZUERzb2/VwZN1H/Sju82ew2H2Wfr6qvfVf3hqwDvAIpkQVFy4B9Pe9e=
4/XvPeceu7h3dvO56iJPf0+A6cqA2ip18ER+iFgggiuOkvj24bby0N9j2UHIkgqIt+sVgfodC4Y=
ghLSMjSZbH0VR/6dMDrYJeKHilKTemt6v6kvzvn3/RrdWtr0GoN/xL+Sex/cPYLUpepx9cz/D46=
UPU5KXgAQa+NDps1v6J3xP1i2HtaDB0M9aX2deA7SYff//+gUCovMmIK/qfsFcOk+4Y5ZN97XlG=
6zebqtMbKgeRFi51vnxTQYBUik2rS/Cn6PC8ADR8FGxsRPB82dzfND90gIcshOcYUkfjherBz53=
odpm6TP8txlwOZ71xmfHHOvq053qFF/MRlS3jP0ELudrf2OeN8DHvp6ZceLe8qKYvWz/7yp0u4d=
KPfli3CYq0O13Ih71mylJ80tOi10On8wi+F4+LWgDPeJ30msSQt9/vkmHq9/Lvo2b461mP801v3=
W4xTcs6CbvF9UDdrSt+A8OUbpSh55qAUFXWznBBfdeJ8a4d7ugT5tvxUza3h9m4H7ptTqiG4z0g=
5dc0X29OcGlhpGFMpQo9ytTS+NViZpNdvU4kWx+LKxNY10kQ1yqGXrhe4/1nvP7E+nd5A92TtaR=
plbHSqoIdOqtRWti+fkB5/n1+/VvCmz12pG1kpQWsfi1ftlBobm0bpngs16CHkbIwdLnParxtTV=
3QYRlfJ0KFskH7pdN/YDn+yRuSd7sNH3aO0DYPggk6uWuXrfOc+fa3VTxFVvKaNxHsiHmsXyCLI=
E5yuOeN3/Jdf8HBL/5M6shjyhxHx9BjB1O0+4NLOnjLLSxwO7ukN4jMbOIcD879KLSi6Pk61Oqm=
2377n8079PXEEQ7cy7OKEC9nbpet118fxweTafpt69x/Bt8UqGzNQt7aelpc44dn5cqhwf71+qK=
p/Zf/+a0zcizOUWpl/iBcSXip0pplkatCchoH5c5aUM8I7/dWxAej8WicPL1URFZ9BDJelUwEwT=
kGqUhgSlydVes95YdXvhh9Gfz/aeFWvgVb4tuLbcv4+wLdutVZv/cUonwBD/6eDlE0aSiKK/uoH=
3+J1wDE/jMVqY2ysGufN84oIXB0sPzy8ollX/LegY74DgJXJR57sn+VGza0x3DnuIgABFM15Lma=
jjjsNlYj+JEZGbuRYcAMOWxFkPN2w6Wd46xo4gVWQR/X4lyI/R6K/YK0110GzudPRW7Y+UOBGTf=
NNzHeYT0fiH0taunBpq9HEW8OKSaBGj21L0MqenEmNRWBAWDWAk4CpNoEZJ2tTaPFgbQYj8HxtF=
ilErs3BTRwT8uO1NXQaWfIotchmPkAF5mMBAliEmZiOGVgCG9LgRzpscMAOOwowlT3JhusdazXG=
SC/hxR3UlmWVwWHpOIKheqONvjyhSiTHIkVUco5bnji8m//zL7PKaT1Vl5I6UE609f+gkr6MZKV=
yKc7zJRmCahLsdlyA5fdQkRSan9LgnnLEyGSkaKJCJog0wAgvepWBt80+1yKln1bMVtCljfNWDu=
eKLsWwaEbBSfSPTEmVRsUcYYMnEjcjeyCZzBXK9E9BYBXLKjOSpUDR+nEV3TFSUdQaz+ot98Qxg=
Xwx0GQ+EEUAKB2qZPkQQ0GqFD8UPFMqyaCHM24BZmSGic9EYMagKizOw9Hz50DMrDLrqqLkTAhp=
lMictiCAx5S3BIUQdeJeLnBy2CNtMfz6cV4u8XKoFZQesbf9YZiIERiHjaNodDW6LgcirX/mPnJ=
IkBGDUpTBhSa0EIr38D5hCIszhCM8URGBqImoWjpvpt1ebu/v3Gl3qJfMnNM+9V+kiRFyROTPHQ=
WOcs1dNW94/ukKMPZBvDi55i5CttdeJz84DLngLqjcdwEZ87bFFR8CIG35OAkDVN6VRDZ7aq67N=
teYqZ2lpT8oYB2CytoBd6VuAx4WgiAsnuj3WohG+LugzXiQRDeM3XYXlULv4dp5VFYC") forma=
t("woff2"); }

@font-face { font-family: KaTeX_Size4; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/assets/KaTeX_Size4-Regular-nv9nppzf.w=
off2") format("woff2"); }

@font-face { font-family: KaTeX_Typewriter; font-style: normal; font-weight=
: 400; src: url("https://cdn.oaistatic.com/assets/KaTeX_Typewriter-Regular-=
iqvr3vwu.woff2") format("woff2"); }

.katex { font: 1.21em / 1.2 KaTeX_Main, "Times New Roman", serif; text-inde=
nt: 0px; text-rendering: auto; }

.katex * { border-color: currentcolor; }

.katex .katex-version::after { content: "0.16.0"; }

.katex .katex-mathml { clip: rect(1px, 1px, 1px, 1px); border: 0px; height:=
 1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; }

.katex .katex-html > .newline { display: block; }

.katex .base { position: relative; white-space: nowrap; width: min-content;=
 }

.katex .base, .katex .strut { display: inline-block; }

.katex .textbf { font-weight: 700; }

.katex .textit { font-style: italic; }

.katex .textrm { font-family: KaTeX_Main; }

.katex .textsf { font-family: KaTeX_SansSerif; }

.katex .texttt { font-family: KaTeX_Typewriter; }

.katex .mathnormal { font-family: KaTeX_Math; font-style: italic; }

.katex .mathit { font-family: KaTeX_Main; font-style: italic; }

.katex .mathrm { font-style: normal; }

.katex .mathbf { font-family: KaTeX_Main; font-weight: 700; }

.katex .boldsymbol { font-family: KaTeX_Math; font-style: italic; font-weig=
ht: 700; }

.katex .amsrm, .katex .mathbb, .katex .textbb { font-family: KaTeX_AMS; }

.katex .mathcal { font-family: KaTeX_Caligraphic; }

.katex .mathfrak, .katex .textfrak { font-family: KaTeX_Fraktur; }

.katex .mathtt { font-family: KaTeX_Typewriter; }

.katex .mathscr, .katex .textscr { font-family: KaTeX_Script; }

.katex .mathsf, .katex .textsf { font-family: KaTeX_SansSerif; }

.katex .mathboldsf, .katex .textboldsf { font-family: KaTeX_SansSerif; font=
-weight: 700; }

.katex .mathitsf, .katex .textitsf { font-family: KaTeX_SansSerif; font-sty=
le: italic; }

.katex .mainrm { font-family: KaTeX_Main; font-style: normal; }

.katex .vlist-t { border-collapse: collapse; display: inline-table; table-l=
ayout: fixed; }

.katex .vlist-r { display: table-row; }

.katex .vlist { display: table-cell; position: relative; vertical-align: bo=
ttom; }

.katex .vlist > span { display: block; height: 0px; position: relative; }

.katex .vlist > span > span { display: inline-block; }

.katex .vlist > span > .pstrut { overflow: hidden; width: 0px; }

[dir=3D"ltr"] .katex .vlist-t2 { margin-right: -2px; }

[dir=3D"rtl"] .katex .vlist-t2 { margin-left: -2px; }

.katex .vlist-s { display: table-cell; font-size: 1px; min-width: 2px; vert=
ical-align: bottom; width: 2px; }

.katex .vbox { align-items: baseline; display: inline-flex; flex-direction:=
 column; }

.katex .hbox { width: 100%; }

.katex .hbox, .katex .thinbox { display: inline-flex; flex-direction: row; =
}

.katex .thinbox { max-width: 0px; width: 0px; }

[dir=3D"ltr"] .katex .msupsub { text-align: left; }

[dir=3D"rtl"] .katex .msupsub { text-align: right; }

.katex .mfrac > span > span { text-align: center; }

.katex .mfrac .frac-line { border-bottom-style: solid; display: inline-bloc=
k; width: 100%; }

.katex .hdashline, .katex .hline, .katex .mfrac .frac-line, .katex .overlin=
e .overline-line, .katex .rule, .katex .underline .underline-line { min-hei=
ght: 1px; }

.katex .mspace { display: inline-block; }

.katex .clap, .katex .llap, .katex .rlap { position: relative; width: 0px; =
}

.katex .clap > .inner, .katex .llap > .inner, .katex .rlap > .inner { posit=
ion: absolute; }

.katex .clap > .fix, .katex .llap > .fix, .katex .rlap > .fix { display: in=
line-block; }

[dir=3D"ltr"] .katex .llap > .inner { right: 0px; }

[dir=3D"ltr"] .katex .clap > .inner, [dir=3D"ltr"] .katex .rlap > .inner, [=
dir=3D"rtl"] .katex .llap > .inner { left: 0px; }

[dir=3D"rtl"] .katex .clap > .inner, [dir=3D"rtl"] .katex .rlap > .inner { =
right: 0px; }

[dir=3D"ltr"] .katex .clap > .inner > span { margin-left: -50%; margin-righ=
t: 50%; }

[dir=3D"rtl"] .katex .clap > .inner > span { margin-left: 50%; margin-right=
: -50%; }

.katex .rule { border: 0px solid; display: inline-block; position: relative=
; }

.katex .hline, .katex .overline .overline-line, .katex .underline .underlin=
e-line { border-bottom-style: solid; display: inline-block; width: 100%; }

.katex .hdashline { border-bottom-style: dashed; display: inline-block; wid=
th: 100%; }

[dir=3D"ltr"] .katex .sqrt > .root { margin-left: 0.277778em; margin-right:=
 -0.555556em; }

[dir=3D"rtl"] .katex .sqrt > .root { margin-left: -0.555556em; margin-right=
: 0.277778em; }

.katex .fontsize-ensurer.reset-size1.size1, .katex .sizing.reset-size1.size=
1 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size1.size2, .katex .sizing.reset-size1.size=
2 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size1.size3, .katex .sizing.reset-size1.size=
3 { font-size: 1.4em; }

.katex .fontsize-ensurer.reset-size1.size4, .katex .sizing.reset-size1.size=
4 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size1.size5, .katex .sizing.reset-size1.size=
5 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size1.size6, .katex .sizing.reset-size1.size=
6 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size1.size7, .katex .sizing.reset-size1.size=
7 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size1.size8, .katex .sizing.reset-size1.size=
8 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size1.size9, .katex .sizing.reset-size1.size=
9 { font-size: 3.456em; }

.katex .fontsize-ensurer.reset-size1.size10, .katex .sizing.reset-size1.siz=
e10 { font-size: 4.148em; }

.katex .fontsize-ensurer.reset-size1.size11, .katex .sizing.reset-size1.siz=
e11 { font-size: 4.976em; }

.katex .fontsize-ensurer.reset-size2.size1, .katex .sizing.reset-size2.size=
1 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size2.size2, .katex .sizing.reset-size2.size=
2 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size2.size3, .katex .sizing.reset-size2.size=
3 { font-size: 1.16667em; }

.katex .fontsize-ensurer.reset-size2.size4, .katex .sizing.reset-size2.size=
4 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size2.size5, .katex .sizing.reset-size2.size=
5 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size2.size6, .katex .sizing.reset-size2.size=
6 { font-size: 1.66667em; }

.katex .fontsize-ensurer.reset-size2.size7, .katex .sizing.reset-size2.size=
7 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size2.size8, .katex .sizing.reset-size2.size=
8 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size2.size9, .katex .sizing.reset-size2.size=
9 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size2.size10, .katex .sizing.reset-size2.siz=
e10 { font-size: 3.45667em; }

.katex .fontsize-ensurer.reset-size2.size11, .katex .sizing.reset-size2.siz=
e11 { font-size: 4.14667em; }

.katex .fontsize-ensurer.reset-size3.size1, .katex .sizing.reset-size3.size=
1 { font-size: 0.714286em; }

.katex .fontsize-ensurer.reset-size3.size2, .katex .sizing.reset-size3.size=
2 { font-size: 0.857143em; }

.katex .fontsize-ensurer.reset-size3.size3, .katex .sizing.reset-size3.size=
3 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size3.size4, .katex .sizing.reset-size3.size=
4 { font-size: 1.14286em; }

.katex .fontsize-ensurer.reset-size3.size5, .katex .sizing.reset-size3.size=
5 { font-size: 1.28571em; }

.katex .fontsize-ensurer.reset-size3.size6, .katex .sizing.reset-size3.size=
6 { font-size: 1.42857em; }

.katex .fontsize-ensurer.reset-size3.size7, .katex .sizing.reset-size3.size=
7 { font-size: 1.71429em; }

.katex .fontsize-ensurer.reset-size3.size8, .katex .sizing.reset-size3.size=
8 { font-size: 2.05714em; }

.katex .fontsize-ensurer.reset-size3.size9, .katex .sizing.reset-size3.size=
9 { font-size: 2.46857em; }

.katex .fontsize-ensurer.reset-size3.size10, .katex .sizing.reset-size3.siz=
e10 { font-size: 2.96286em; }

.katex .fontsize-ensurer.reset-size3.size11, .katex .sizing.reset-size3.siz=
e11 { font-size: 3.55429em; }

.katex .fontsize-ensurer.reset-size4.size1, .katex .sizing.reset-size4.size=
1 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size4.size2, .katex .sizing.reset-size4.size=
2 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size4.size3, .katex .sizing.reset-size4.size=
3 { font-size: 0.875em; }

.katex .fontsize-ensurer.reset-size4.size4, .katex .sizing.reset-size4.size=
4 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size4.size5, .katex .sizing.reset-size4.size=
5 { font-size: 1.125em; }

.katex .fontsize-ensurer.reset-size4.size6, .katex .sizing.reset-size4.size=
6 { font-size: 1.25em; }

.katex .fontsize-ensurer.reset-size4.size7, .katex .sizing.reset-size4.size=
7 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size4.size8, .katex .sizing.reset-size4.size=
8 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size4.size9, .katex .sizing.reset-size4.size=
9 { font-size: 2.16em; }

.katex .fontsize-ensurer.reset-size4.size10, .katex .sizing.reset-size4.siz=
e10 { font-size: 2.5925em; }

.katex .fontsize-ensurer.reset-size4.size11, .katex .sizing.reset-size4.siz=
e11 { font-size: 3.11em; }

.katex .fontsize-ensurer.reset-size5.size1, .katex .sizing.reset-size5.size=
1 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size5.size2, .katex .sizing.reset-size5.size=
2 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size5.size3, .katex .sizing.reset-size5.size=
3 { font-size: 0.777778em; }

.katex .fontsize-ensurer.reset-size5.size4, .katex .sizing.reset-size5.size=
4 { font-size: 0.888889em; }

.katex .fontsize-ensurer.reset-size5.size5, .katex .sizing.reset-size5.size=
5 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size5.size6, .katex .sizing.reset-size5.size=
6 { font-size: 1.11111em; }

.katex .fontsize-ensurer.reset-size5.size7, .katex .sizing.reset-size5.size=
7 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size5.size8, .katex .sizing.reset-size5.size=
8 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size5.size9, .katex .sizing.reset-size5.size=
9 { font-size: 1.92em; }

.katex .fontsize-ensurer.reset-size5.size10, .katex .sizing.reset-size5.siz=
e10 { font-size: 2.30444em; }

.katex .fontsize-ensurer.reset-size5.size11, .katex .sizing.reset-size5.siz=
e11 { font-size: 2.76444em; }

.katex .fontsize-ensurer.reset-size6.size1, .katex .sizing.reset-size6.size=
1 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size6.size2, .katex .sizing.reset-size6.size=
2 { font-size: 0.6em; }

.katex .fontsize-ensurer.reset-size6.size3, .katex .sizing.reset-size6.size=
3 { font-size: 0.7em; }

.katex .fontsize-ensurer.reset-size6.size4, .katex .sizing.reset-size6.size=
4 { font-size: 0.8em; }

.katex .fontsize-ensurer.reset-size6.size5, .katex .sizing.reset-size6.size=
5 { font-size: 0.9em; }

.katex .fontsize-ensurer.reset-size6.size6, .katex .sizing.reset-size6.size=
6 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size6.size7, .katex .sizing.reset-size6.size=
7 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size6.size8, .katex .sizing.reset-size6.size=
8 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size6.size9, .katex .sizing.reset-size6.size=
9 { font-size: 1.728em; }

.katex .fontsize-ensurer.reset-size6.size10, .katex .sizing.reset-size6.siz=
e10 { font-size: 2.074em; }

.katex .fontsize-ensurer.reset-size6.size11, .katex .sizing.reset-size6.siz=
e11 { font-size: 2.488em; }

.katex .fontsize-ensurer.reset-size7.size1, .katex .sizing.reset-size7.size=
1 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size7.size2, .katex .sizing.reset-size7.size=
2 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size7.size3, .katex .sizing.reset-size7.size=
3 { font-size: 0.583333em; }

.katex .fontsize-ensurer.reset-size7.size4, .katex .sizing.reset-size7.size=
4 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size7.size5, .katex .sizing.reset-size7.size=
5 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size7.size6, .katex .sizing.reset-size7.size=
6 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size7.size7, .katex .sizing.reset-size7.size=
7 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size7.size8, .katex .sizing.reset-size7.size=
8 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size7.size9, .katex .sizing.reset-size7.size=
9 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size7.size10, .katex .sizing.reset-size7.siz=
e10 { font-size: 1.72833em; }

.katex .fontsize-ensurer.reset-size7.size11, .katex .sizing.reset-size7.siz=
e11 { font-size: 2.07333em; }

.katex .fontsize-ensurer.reset-size8.size1, .katex .sizing.reset-size8.size=
1 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size8.size2, .katex .sizing.reset-size8.size=
2 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size8.size3, .katex .sizing.reset-size8.size=
3 { font-size: 0.486111em; }

.katex .fontsize-ensurer.reset-size8.size4, .katex .sizing.reset-size8.size=
4 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size8.size5, .katex .sizing.reset-size8.size=
5 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size8.size6, .katex .sizing.reset-size8.size=
6 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size8.size7, .katex .sizing.reset-size8.size=
7 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size8.size8, .katex .sizing.reset-size8.size=
8 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size8.size9, .katex .sizing.reset-size8.size=
9 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size8.size10, .katex .sizing.reset-size8.siz=
e10 { font-size: 1.44028em; }

.katex .fontsize-ensurer.reset-size8.size11, .katex .sizing.reset-size8.siz=
e11 { font-size: 1.72778em; }

.katex .fontsize-ensurer.reset-size9.size1, .katex .sizing.reset-size9.size=
1 { font-size: 0.289352em; }

.katex .fontsize-ensurer.reset-size9.size2, .katex .sizing.reset-size9.size=
2 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size9.size3, .katex .sizing.reset-size9.size=
3 { font-size: 0.405093em; }

.katex .fontsize-ensurer.reset-size9.size4, .katex .sizing.reset-size9.size=
4 { font-size: 0.462963em; }

.katex .fontsize-ensurer.reset-size9.size5, .katex .sizing.reset-size9.size=
5 { font-size: 0.520833em; }

.katex .fontsize-ensurer.reset-size9.size6, .katex .sizing.reset-size9.size=
6 { font-size: 0.578704em; }

.katex .fontsize-ensurer.reset-size9.size7, .katex .sizing.reset-size9.size=
7 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size9.size8, .katex .sizing.reset-size9.size=
8 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size9.size9, .katex .sizing.reset-size9.size=
9 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size9.size10, .katex .sizing.reset-size9.siz=
e10 { font-size: 1.20023em; }

.katex .fontsize-ensurer.reset-size9.size11, .katex .sizing.reset-size9.siz=
e11 { font-size: 1.43981em; }

.katex .fontsize-ensurer.reset-size10.size1, .katex .sizing.reset-size10.si=
ze1 { font-size: 0.24108em; }

.katex .fontsize-ensurer.reset-size10.size2, .katex .sizing.reset-size10.si=
ze2 { font-size: 0.289296em; }

.katex .fontsize-ensurer.reset-size10.size3, .katex .sizing.reset-size10.si=
ze3 { font-size: 0.337512em; }

.katex .fontsize-ensurer.reset-size10.size4, .katex .sizing.reset-size10.si=
ze4 { font-size: 0.385728em; }

.katex .fontsize-ensurer.reset-size10.size5, .katex .sizing.reset-size10.si=
ze5 { font-size: 0.433944em; }

.katex .fontsize-ensurer.reset-size10.size6, .katex .sizing.reset-size10.si=
ze6 { font-size: 0.48216em; }

.katex .fontsize-ensurer.reset-size10.size7, .katex .sizing.reset-size10.si=
ze7 { font-size: 0.578592em; }

.katex .fontsize-ensurer.reset-size10.size8, .katex .sizing.reset-size10.si=
ze8 { font-size: 0.694311em; }

.katex .fontsize-ensurer.reset-size10.size9, .katex .sizing.reset-size10.si=
ze9 { font-size: 0.833173em; }

.katex .fontsize-ensurer.reset-size10.size10, .katex .sizing.reset-size10.s=
ize10 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size10.size11, .katex .sizing.reset-size10.s=
ize11 { font-size: 1.19961em; }

.katex .fontsize-ensurer.reset-size11.size1, .katex .sizing.reset-size11.si=
ze1 { font-size: 0.200965em; }

.katex .fontsize-ensurer.reset-size11.size2, .katex .sizing.reset-size11.si=
ze2 { font-size: 0.241158em; }

.katex .fontsize-ensurer.reset-size11.size3, .katex .sizing.reset-size11.si=
ze3 { font-size: 0.28135em; }

.katex .fontsize-ensurer.reset-size11.size4, .katex .sizing.reset-size11.si=
ze4 { font-size: 0.321543em; }

.katex .fontsize-ensurer.reset-size11.size5, .katex .sizing.reset-size11.si=
ze5 { font-size: 0.361736em; }

.katex .fontsize-ensurer.reset-size11.size6, .katex .sizing.reset-size11.si=
ze6 { font-size: 0.401929em; }

.katex .fontsize-ensurer.reset-size11.size7, .katex .sizing.reset-size11.si=
ze7 { font-size: 0.482315em; }

.katex .fontsize-ensurer.reset-size11.size8, .katex .sizing.reset-size11.si=
ze8 { font-size: 0.578778em; }

.katex .fontsize-ensurer.reset-size11.size9, .katex .sizing.reset-size11.si=
ze9 { font-size: 0.694534em; }

.katex .fontsize-ensurer.reset-size11.size10, .katex .sizing.reset-size11.s=
ize10 { font-size: 0.833601em; }

.katex .fontsize-ensurer.reset-size11.size11, .katex .sizing.reset-size11.s=
ize11 { font-size: 1em; }

.katex .delimsizing.size1 { font-family: KaTeX_Size1; }

.katex .delimsizing.size2 { font-family: KaTeX_Size2; }

.katex .delimsizing.size3 { font-family: KaTeX_Size3; }

.katex .delimsizing.size4 { font-family: KaTeX_Size4; }

.katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; }

.katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; }

.katex .nulldelimiter { display: inline-block; width: 0.12em; }

.katex .delimcenter, .katex .op-symbol { position: relative; }

.katex .op-symbol.small-op { font-family: KaTeX_Size1; }

.katex .op-symbol.large-op { font-family: KaTeX_Size2; }

.katex .accent > .vlist-t, .katex .op-limits > .vlist-t { text-align: cente=
r; }

.katex .accent .accent-body { position: relative; }

.katex .accent .accent-body:not(.accent-full) { width: 0px; }

.katex .overlay { display: block; }

.katex .mtable .vertical-separator { display: inline-block; min-width: 1px;=
 }

.katex .mtable .arraycolsep { display: inline-block; }

.katex .mtable .col-align-c > .vlist-t { text-align: center; }

[dir=3D"ltr"] .katex .mtable .col-align-l > .vlist-t { text-align: left; }

[dir=3D"ltr"] .katex .mtable .col-align-r > .vlist-t, [dir=3D"rtl"] .katex =
.mtable .col-align-l > .vlist-t { text-align: right; }

[dir=3D"ltr"] .katex .svg-align, [dir=3D"rtl"] .katex .mtable .col-align-r =
> .vlist-t { text-align: left; }

[dir=3D"rtl"] .katex .svg-align { text-align: right; }

.katex svg { fill: currentcolor; stroke: currentcolor; fill-rule: nonzero; =
fill-opacity: 1; stroke-width: 1; stroke-linecap: butt; stroke-linejoin: mi=
ter; stroke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; st=
roke-opacity: 1; display: block; height: inherit; position: absolute; width=
: 100%; }

.katex svg path { stroke: none; }

.katex img { border-style: none; max-height: none; max-width: none; min-hei=
ght: 0px; min-width: 0px; }

.katex .stretchy { display: block; overflow: hidden; position: relative; wi=
dth: 100%; }

.katex .stretchy::after, .katex .stretchy::before { content: ""; }

.katex .hide-tail { overflow: hidden; position: relative; width: 100%; }

.katex .halfarrow-left { overflow: hidden; position: absolute; width: 50.2%=
; }

[dir=3D"ltr"] .katex .halfarrow-left { left: 0px; }

[dir=3D"rtl"] .katex .halfarrow-left { right: 0px; }

.katex .halfarrow-right { overflow: hidden; position: absolute; width: 50.2=
%; }

[dir=3D"ltr"] .katex .halfarrow-right { right: 0px; }

[dir=3D"rtl"] .katex .halfarrow-right { left: 0px; }

.katex .brace-left { overflow: hidden; position: absolute; width: 25.1%; }

[dir=3D"ltr"] .katex .brace-left { left: 0px; }

[dir=3D"rtl"] .katex .brace-left { right: 0px; }

.katex .brace-center { overflow: hidden; position: absolute; width: 50%; }

[dir=3D"ltr"] .katex .brace-center { left: 25%; }

[dir=3D"rtl"] .katex .brace-center { right: 25%; }

.katex .brace-right { overflow: hidden; position: absolute; width: 25.1%; }

[dir=3D"ltr"] .katex .brace-right { right: 0px; }

[dir=3D"rtl"] .katex .brace-right { left: 0px; }

.katex .x-arrow-pad { padding: 0px 0.5em; }

[dir=3D"ltr"] .katex .cd-arrow-pad { padding: 0px 0.55556em 0px 0.27778em; =
}

[dir=3D"rtl"] .katex .cd-arrow-pad { padding: 0px 0.27778em 0px 0.55556em; =
}

.katex .mover, .katex .munder, .katex .x-arrow { text-align: center; }

.katex .boxpad { padding: 0px 0.3em; }

.katex .fbox, .katex .fcolorbox { border: 0.04em solid; box-sizing: border-=
box; }

.katex .cancel-pad { padding: 0px 0.2em; }

.katex .cancel-lap { margin-left: -0.2em; margin-right: -0.2em; }

.katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; }

.katex .angl { border-top: 0.049em solid; box-sizing: border-box; }

[dir=3D"ltr"] .katex .angl { border-right: 0.049em solid; margin-right: 0.0=
3889em; }

[dir=3D"rtl"] .katex .angl { border-left: 0.049em solid; margin-left: 0.038=
89em; }

.katex .anglpad { padding: 0px 0.03889em; }

.katex .eqn-num::before { content: "(" counter(katexEqnNo) ")"; counter-inc=
rement: katexEqnNo 1; }

.katex .mml-eqn-num::before { content: "(" counter(mmlEqnNo) ")"; counter-i=
ncrement: mmlEqnNo 1; }

.katex .mtr-glue { width: 50%; }

.katex .cd-vert-arrow { display: inline-block; position: relative; }

.katex .cd-label-left { display: inline-block; position: absolute; }

[dir=3D"ltr"] .katex .cd-label-left { right: calc(50% + 0.3em); text-align:=
 left; }

[dir=3D"rtl"] .katex .cd-label-left { left: calc(50% + 0.3em); text-align: =
right; }

.katex .cd-label-right { display: inline-block; position: absolute; }

[dir=3D"ltr"] .katex .cd-label-right { left: calc(50% + 0.3em); text-align:=
 right; }

[dir=3D"rtl"] .katex .cd-label-right { right: calc(50% + 0.3em); text-align=
: left; }

.katex-display { display: block; margin: 1em 0px; text-align: center; }

.katex-display > .katex { display: block; text-align: center; white-space: =
nowrap; }

.katex-display > .katex > .katex-html { display: block; position: relative;=
 }

.katex-display > .katex > .katex-html > .tag { position: absolute; }

[dir=3D"ltr"] .katex-display > .katex > .katex-html > .tag { right: 0px; }

[dir=3D"rtl"] .katex-display > .katex > .katex-html > .tag { left: 0px; }

[dir=3D"ltr"] .katex-display.leqno > .katex > .katex-html > .tag { left: 0p=
x; right: auto; }

[dir=3D"rtl"] .katex-display.leqno > .katex > .katex-html > .tag { left: au=
to; right: 0px; }

[dir=3D"ltr"] .katex-display.fleqn > .katex { padding-left: 2em; text-align=
: left; }

[dir=3D"rtl"] .katex-display.fleqn > .katex { padding-right: 2em; text-alig=
n: right; }

body { counter-reset: katexEqnNo 0 mmlEqnNo 0; }

.sdtrn-root { font-size: 14px; line-height: 20px; background: unset !import=
ant; }

.sdtrn-root .draggable { app-region: drag; }

.sdtrn-root .no-draggable { app-region: no-drag; }

.sdtrn-root .no-draggable-children * { app-region: no-drag; user-select: no=
ne; }

.sdtrn-root [data-radix-popper-content-wrapper], .sdtrn-root [role=3D"dialo=
g"] { app-region: no-drag; }

.sdtrn-root [data-radix-popper-content-wrapper] li a, .sdtrn-root [role=3D"=
button"], .sdtrn-root button, .sdtrn-root div[role=3D"menu"], .sdtrn-root i=
nput[type=3D"button"], .sdtrn-root input[type=3D"reset"], .sdtrn-root input=
[type=3D"submit"], .sdtrn-root label { cursor: default; }

.sdtrn-root nav a { cursor: default; user-select: none; }

.snc-root { font-size: var(--snc-text-base); }

.snc { --snc-1: 1.5rem; --snc-2: 1.75rem; --snc-3: 3rem; --snc-results-padd=
ing: 1rem; --snc-input-height: 2.875rem; --snc-text-base: 16px; --snc-hover=
: #00000008; --main-surface-secondary: #f7f7f7; --main-surface-tertiary: #f=
1f1f1; --text-secondary: var(--gray-600); --text-tertiary: var(--gray-500);=
 --snc-result-search-input-shadow: 0 12px 20px -8px; --snc-answer-followup-=
input-shadow: 0 -12px 20px -8px; --snc-input-shadow-mult: 0; }

.snc .snc-accent-border { border: 0px; }

.snc ::-webkit-scrollbar { width: 16px; }

[dir=3D"ltr"] .snc ::-webkit-scrollbar { background: 0px 0px; }

[dir=3D"rtl"] .snc ::-webkit-scrollbar { background: 100% 0px; }

.snc ::-webkit-scrollbar-thumb { background: var(--main-surface-tertiary); =
border: 4px solid var(--main-surface-primary); border-radius: 8px; }

.snc ::-webkit-scrollbar-thumb:hover { background: var(--gray-200); }

.dark .snc ::-webkit-scrollbar-thumb:hover { background: var(--gray-600); }

.dark .snc, .dark .snc .dark { --snc-hover: #ffffff08; --snc-focus-border: =
#ffffffbf; --main-surface-primary: var(--gray-950); --main-surface-secondar=
y: var(--gray-900); --main-surface-tertiary: var(--gray-700); --text-second=
ary: var(--gray-300); --text-tertiary: var(--gray-500); --border-light: #ff=
ffff0d; --border-medium: #ffffff1f; --border-xheavy: #fff3; --gray-950: #14=
1414; --snc-result-search-input-shadow: 0 8px 12px -8px; --snc-answer-follo=
wup-input-shadow: 0 -8px 12px -8px; }

:is(.dark .snc .dark, .dark .snc) .snc-accent-border { border: .5px solid v=
ar(--border-xheavy); }

.snc .user-query .prose p:first-child { margin-bottom: calc(var(--spacing,.=
25rem)*0); }

.snc .prose :not(.not-prose, .not-prose *) { max-width: 100%; }

.snc .prose :not(.not-prose, .not-prose *) a { --tw-font-weight: var(--font=
-weight-normal,400); color: var(--link); font-weight: var(--font-weight-nor=
mal,400); text-decoration-line: none; text-underline-offset: 2px; }

.snc .prose :not(.not-prose, .not-prose *) > h1:first-child { font-size: 1.=
125rem; }

.snc .prose :not(.not-prose, .not-prose *) h1, .snc .prose :not(.not-prose,=
 .not-prose *) h2, .snc .prose :not(.not-prose, .not-prose *) h3, .snc .pro=
se :not(.not-prose, .not-prose *) h4, .snc .prose :not(.not-prose, .not-pro=
se *) h5 { --tw-font-weight: var(--font-weight-semibold,600); font-size: 1r=
em; font-weight: var(--font-weight-semibold,600); }

.snc .prose :not(.not-prose, .not-prose *) h3, .snc .prose :not(.not-prose,=
 .not-prose *) h4 { margin-bottom: calc(var(--spacing,.25rem)*1); }

.snc .prose :not(.not-prose, .not-prose *) h3:first-child a { font-size: 1.=
25rem; font-weight: 500; }

.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-prose,=
 .not-prose *) p, .snc .prose :not(.not-prose, .not-prose *) ul { margin-bo=
ttom: calc(var(--spacing,.25rem)*4); }

:is(.snc .prose :not(.not-prose, .not-prose *) p, .snc .prose :not(.not-pro=
se, .not-prose *) ol, .snc .prose :not(.not-prose, .not-prose *) ul):last-c=
hild { margin-bottom: calc(var(--spacing,.25rem)*0); }

.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-prose,=
 .not-prose *) ul { display: contents; list-style-position: inside; list-st=
yle-type: none; margin-top: calc(var(--spacing,.25rem)*0); }

:is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-pr=
ose, .not-prose *) ul) > li { position: relative; }

:is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-pr=
ose, .not-prose *) ul) > li:has(.title-citation) { margin-bottom: calc(var(=
--spacing,.25rem)*3); }

:is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-pr=
ose, .not-prose *) ul) > li:has(.title-citation):last-child { margin-bottom=
: calc(var(--spacing,.25rem)*0); }

:is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-pr=
ose, .not-prose *) ul) > li::before { position: absolute; }

[dir=3D"ltr"] :is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .pros=
e :not(.not-prose, .not-prose *) ul) > li::before { left: calc(var(--spacin=
g,.25rem)*0); }

[dir=3D"rtl"] :is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .pros=
e :not(.not-prose, .not-prose *) ul) > li::before { right: calc(var(--spaci=
ng,.25rem)*0); }

:is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-pr=
ose, .not-prose *) ul) > li button, :is(.snc .prose :not(.not-prose, .not-p=
rose *) ol, .snc .prose :not(.not-prose, .not-prose *) ul) > li > a { margi=
n-block: calc(var(--spacing,.25rem)*0); }

:is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-pr=
ose, .not-prose *) ul) > li p { margin-bottom: calc(var(--spacing,.25rem)*2=
); margin-top: calc(var(--spacing,.25rem)*0); }

:is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-pr=
ose, .not-prose *) ul) > li ol, :is(.snc .prose :not(.not-prose, .not-prose=
 *) ol, .snc .prose :not(.not-prose, .not-prose *) ul) > li ul { display: b=
lock; margin-block: calc(var(--spacing,.25rem)*0); padding: calc(var(--spac=
ing,.25rem)*0); }

[dir=3D"ltr"] :is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .pros=
e :not(.not-prose, .not-prose *) ul) > li ol, [dir=3D"ltr"] :is(.snc .prose=
 :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-prose, .not-prose=
 *) ul) > li ul { margin-left: calc(var(--spacing,.25rem)*4); }

[dir=3D"rtl"] :is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .pros=
e :not(.not-prose, .not-prose *) ul) > li ol, [dir=3D"rtl"] :is(.snc .prose=
 :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-prose, .not-prose=
 *) ul) > li ul { margin-right: calc(var(--spacing,.25rem)*4); }

.snc .prose :not(.not-prose, .not-prose *) ol { counter-reset: list-counter=
 0; }

.snc .prose :not(.not-prose, .not-prose *) ol > li { counter-increment: lis=
t-counter 1; }

[dir=3D"ltr"] .snc .prose :not(.not-prose, .not-prose *) ol > li { padding-=
left: calc(var(--spacing,.25rem)*8); }

[dir=3D"rtl"] .snc .prose :not(.not-prose, .not-prose *) ol > li { padding-=
right: calc(var(--spacing,.25rem)*8); }

.snc .prose :not(.not-prose, .not-prose *) ol > li::before { color: var(--t=
ext-secondary); content: counter(list-counter) "."; }

[dir=3D"ltr"] .snc .prose :not(.not-prose, .not-prose *) ul > li { padding-=
left: calc(var(--spacing,.25rem)*6); }

[dir=3D"rtl"] .snc .prose :not(.not-prose, .not-prose *) ul > li { padding-=
right: calc(var(--spacing,.25rem)*6); }

.snc .prose :not(.not-prose, .not-prose *) ul > li::before { content: "=E2=
=80=A2"; }

.snc .prose :not(.not-prose, .not-prose *) strong { --tw-font-weight: var(-=
-font-weight-medium,500); font-weight: var(--font-weight-medium,500); }

.snc .prose.result-streaming .context-list:last-child:has(p)::after { displ=
ay: none; }

.snc .prose.result-streaming .context-list:last-child p:last-child::after {=
 content: "=E2=97=8F"; display: inline; font-family: Circle, system-ui, san=
s-serif; line-height: normal; vertical-align: baseline; }

[dir=3D"ltr"] .snc .prose.result-streaming .context-list:last-child p:last-=
child::after { margin-left: 0.25rem; }

[dir=3D"rtl"] .snc .prose.result-streaming .context-list:last-child p:last-=
child::after { margin-right: 0.25rem; }

@property --tw-font-weight { syntax: "*"; inherits: false; }

code, pre { font-family: ui-monospace, SFMono-Regular, "SF Mono", Menlo, Co=
nsolas, "Liberation Mono", monospace !important; }

code[class=3D"language-plaintext"] { white-space: pre-line; }

code.hljs, code[class*=3D"language-"], pre[class*=3D"language-"] { overflow=
-wrap: normal; background: none; hyphens: none; line-height: 1.5; tab-size:=
 4; white-space: pre; word-break: normal; word-spacing: normal; }

[dir=3D"ltr"] code.hljs, [dir=3D"ltr"] code[class*=3D"language-"], [dir=3D"=
ltr"] pre[class*=3D"language-"] { text-align: left; }

[dir=3D"rtl"] code.hljs, [dir=3D"rtl"] code[class*=3D"language-"], [dir=3D"=
rtl"] pre[class*=3D"language-"] { text-align: right; }

pre[class*=3D"language-"] { border-radius: 0.3em; overflow: auto; }

:not(pre) > code.hljs, :not(pre) > code[class*=3D"language-"] { border-radi=
us: 0.3em; padding: 0.1em; white-space: normal; }

:is(.light .dark, .dark) code.hljs, :is(.light .dark, .dark) code[class*=3D=
"language-"], :is(.light .dark, .dark) pre[class*=3D"language-"] { color: r=
gb(255, 255, 255); }

:is(.light .dark, .dark) .hljs-comment { color: rgba(255, 255, 255, 0.5); }

:is(.light .dark, .dark) .hljs-meta { color: rgba(255, 255, 255, 0.6); }

:is(.light .dark, .dark) .hljs-built_in, :is(.light .dark, .dark) .hljs-cla=
ss .hljs-title { color: rgb(233, 149, 12); }

:is(.light .dark, .dark) .hljs-doctag, :is(.light .dark, .dark) .hljs-formu=
la, :is(.light .dark, .dark) .hljs-keyword, :is(.light .dark, .dark) .hljs-=
literal { color: rgb(46, 149, 211); }

:is(.light .dark, .dark) .hljs-addition, :is(.light .dark, .dark) .hljs-att=
ribute, :is(.light .dark, .dark) .hljs-meta-string, :is(.light .dark, .dark=
) .hljs-regexp, :is(.light .dark, .dark) .hljs-string { color: rgb(0, 166, =
125); }

:is(.light .dark, .dark) .hljs-attr, :is(.light .dark, .dark) .hljs-number,=
 :is(.light .dark, .dark) .hljs-selector-attr, :is(.light .dark, .dark) .hl=
js-selector-class, :is(.light .dark, .dark) .hljs-selector-pseudo, :is(.lig=
ht .dark, .dark) .hljs-template-variable, :is(.light .dark, .dark) .hljs-ty=
pe, :is(.light .dark, .dark) .hljs-variable { color: rgb(223, 48, 121); }

:is(.light .dark, .dark) .hljs-bullet, :is(.light .dark, .dark) .hljs-link,=
 :is(.light .dark, .dark) .hljs-selector-id, :is(.light .dark, .dark) .hljs=
-symbol, :is(.light .dark, .dark) .hljs-title { color: rgb(242, 44, 61); }

.light code.hljs, .light code[class*=3D"language-"], .light pre[class*=3D"l=
anguage-"] { color: rgb(56, 58, 66); }

.light .hljs-comment, .light .hljs-quote { color: rgb(160, 161, 167); font-=
style: italic; }

.light .hljs-doctag, .light .hljs-formula, .light .hljs-keyword { color: rg=
b(166, 38, 164); }

.light .hljs-deletion, .light .hljs-name, .light .hljs-section, .light .hlj=
s-selector-tag, .light .hljs-subst { color: rgb(228, 86, 73); }

.light .hljs-literal { color: rgb(1, 132, 187); }

.light .hljs-addition, .light .hljs-attribute, .light .hljs-meta-string, .l=
ight .hljs-regexp, .light .hljs-string { color: rgb(80, 161, 79); }

.light .hljs-built_in, .light .hljs-class .hljs-title { color: rgb(193, 132=
, 1); }

.light .hljs-attr, .light .hljs-number, .light .hljs-selector-attr, .light =
.hljs-selector-class, .light .hljs-selector-pseudo, .light .hljs-template-v=
ariable, .light .hljs-type, .light .hljs-variable { color: rgb(152, 104, 1)=
; }

.light .hljs-bullet, .light .hljs-link, .light .hljs-meta, .light .hljs-sel=
ector-id, .light .hljs-symbol, .light .hljs-title { color: rgb(64, 120, 242=
); }

.light .hljs-emphasis { font-style: italic; }

.light .hljs-strong { font-weight: 700; }

.light .hljs-link { text-decoration: underline; }

.token.cdata, .token.comment, .token.doctype, .token.prolog { color: rgb(16=
9, 174, 193); }

.token.punctuation { color: rgb(254, 254, 254); }

.token.constant, .token.deleted, .token.property, .token.symbol, .token.tag=
 { color: rgb(255, 160, 122); }

.token.boolean, .token.number { color: rgb(0, 224, 224); }

.token.attr-name, .token.builtin, .token.char, .token.inserted, .token.sele=
ctor, .token.string { color: rgb(171, 227, 56); }

.language-css .token.string, .style .token.string, .token.entity, .token.op=
erator, .token.url, .token.variable { color: rgb(0, 224, 224); }

.token.atrule, .token.attr-value, .token.function { color: gold; }

.token.keyword { color: rgb(0, 224, 224); }

.token.important, .token.regex { color: gold; }

.token.bold, .token.important { font-weight: 700; }

.token.italic { font-style: italic; }

.token.entity { cursor: help; }

@media screen and (-ms-high-contrast:active) {
  code[class*=3D"language-"], pre[class*=3D"language-"] { background: windo=
w; color: windowtext; }
  :not(pre) > code[class*=3D"language-"], pre[class*=3D"language-"] { backg=
round: window; }
  .token.important { background: highlight; color: window; font-weight: 400=
; }
  .token.atrule, .token.attr-value, .token.function, .token.keyword, .token=
.operator, .token.selector { font-weight: 700; }
  .token.attr-value, .token.comment, .token.doctype, .token.function, .toke=
n.keyword, .token.operator, .token.property, .token.string { color: highlig=
ht; }
  .token.attr-value, .token.url { font-weight: 400; }
}

.react-select-container input:focus { --tw-ring-shadow: var(--tw-ring-inset=
,)0 0 0 calc(var(--tw-ring-offset-width))var(--tw-ring-color,currentColor);=
 box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ri=
ng-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }

.react-select-container .react-select__control { align-items: flex-start; b=
order-color: rgb(236, 236, 236); border-radius: var(--radius-lg,.5rem); fon=
t-size: var(--text-sm,.875rem); height: 192px; line-height: var(--tw-leadin=
g,var(--text-sm--line-height,1.42857)); min-height: 192px; overflow: auto; =
padding: calc(var(--spacing,.25rem)*2); }

@media (hover: hover) {
  .react-select-container .react-select__control:hover { border-color: rgb(=
227, 227, 227); }
}

.react-select-container .react-select__control:is(.dark *) { background-col=
or: rgb(23, 23, 23); border-color: rgba(255, 255, 255, 0.1); }

@media (hover: hover) {
  .react-select-container .react-select__control:hover:is(.dark *) { border=
-color: rgba(255, 255, 255, 0.2); }
}

.react-select-container.react-select--invalid .react-select__control, .reac=
t-select-container.react-select--invalid .react-select__control:is(.dark *)=
 { border-color: rgb(224, 46, 42); }

.react-select-container .react-select__placeholder { padding-inline: calc(v=
ar(--spacing,.25rem)*2); }

.react-select-container .react-select__input-container { color: var(--text-=
secondary); padding-inline: calc(var(--spacing,.25rem)*2); }

.react-select-container .react-select__input { height: calc(var(--spacing,.=
25rem)*8); }

.react-select-container .react-select__control--is-focused { --tw-ring-shad=
ow: var(--tw-ring-inset,)0 0 0 calc(var(--tw-ring-offset-width))var(--tw-ri=
ng-color,currentColor); box-shadow: var(--tw-inset-shadow),var(--tw-inset-r=
ing-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-sha=
dow); border-color: rgb(227, 227, 227) !important; }

.react-select-container .react-select__control--is-focused:is(.dark *) { bo=
rder-color: rgba(255, 255, 255, 0.2) !important; }

.react-select-container .react-select__value-container { padding: calc(var(=
--spacing,.25rem)*0); }

.react-select-container .react-select__indicators:empty { display: none; }

.react-select-container .react-select__multi-value { background-color: rgba=
(0, 0, 0, 0); margin: calc(var(--spacing,.25rem)*0); }

.react-select-container .react-select__multi-value__label { padding: calc(v=
ar(--spacing,.25rem)*0); }

#intercom-container { display: none; }

@property --tw-shadow { syntax: "*"; inherits: false; initial-value: 0 0 #0=
000; }

@property --tw-shadow-color { syntax: "*"; inherits: false; }

@property --tw-inset-shadow { syntax: "*"; inherits: false; initial-value: =
0 0 #0000; }

@property --tw-inset-shadow-color { syntax: "*"; inherits: false; }

@property --tw-ring-color { syntax: "*"; inherits: false; }

@property --tw-ring-shadow { syntax: "*"; inherits: false; initial-value: 0=
 0 #0000; }

@property --tw-inset-ring-color { syntax: "*"; inherits: false; }

@property --tw-inset-ring-shadow { syntax: "*"; inherits: false; initial-va=
lue: 0 0 #0000; }

@property --tw-ring-inset { syntax: "*"; inherits: false; }

@property --tw-ring-offset-width { syntax: "<length>"; inherits: false; ini=
tial-value: 0; }

@property --tw-ring-offset-color { syntax: "*"; inherits: false; initial-va=
lue: #fff; }

@property --tw-ring-offset-shadow { syntax: "*"; inherits: false; initial-v=
alue: 0 0 #0000; }
------MultipartBoundary--zIanXexzKz9mlCBi1F8XbId4LZxMLKaXDSXMumdjRh------
