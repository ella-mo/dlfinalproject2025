From: <Saved by Blink>
Snapshot-Content-Location: https://chatgpt.com/c/680b8d1a-d7f4-800f-b1f2-0287eb5c2631
Subject: Deep Learning Final 2025 - Dimensionality Reduction for Grouping
Date: Thu, 1 May 2025 12:04:45 -0400
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--JeftemRFv6yz4tcA0Is1dkAJcckJ66FI5kZlNzJQ4K----"


------MultipartBoundary--JeftemRFv6yz4tcA0Is1dkAJcckJ66FI5kZlNzJQ4K----
Content-Type: text/html
Content-ID: <frame-AE908E00C1E6D3FF4F9A114FF11D2AE5@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://chatgpt.com/c/680b8d1a-d7f4-800f-b1f2-0287eb5c2631

<!DOCTYPE html><html lang=3D"en-US" data-build=3D"prod-d7e0958d3627644494d7=
3b22b50f8068e6c9c99e" dir=3D"ltr" class=3D"_page-to-page-transition_m3fum_1=
4 dark" style=3D"color-scheme: dark;"><head><meta http-equiv=3D"Content-Typ=
e" content=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" href=3D"=
https://cdn.oaistatic.com/assets/root-bpcp30ia.css"><link rel=3D"stylesheet=
" href=3D"https://cdn.oaistatic.com/assets/conversation-small-dextt2zw.css"=
><meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1=
"><title>Deep Learning Final 2025 - Dimensionality Reduction for Grouping</=
title><meta name=3D"description" content=3D"ChatGPT helps you get answers, =
find inspiration and be more productive. It is free to use and easy to try.=
 Just ask and ChatGPT can help with writing, learning, brainstorming and mo=
re."><meta name=3D"keyword" content=3D"ai chat,ai,chap gpt,chat gbt,chat gp=
t 3,chat gpt login,chat gpt website,chat gpt,chat gtp,chat openai,chat,chat=
ai,chatbot gpt,chatg,chatgpt login,chatgpt,gpt chat,open ai,openai chat,ope=
nai chatgpt,openai"><meta property=3D"og:description" content=3D"A conversa=
tional AI system that listens, learns, and challenges"><meta property=3D"og=
:title" content=3D"ChatGPT"><meta property=3D"og:image" content=3D"https://=
cdn.oaistatic.com/assets/chatgpt-share-og-u7j5uyao.webp"><meta property=3D"=
og:url" content=3D"https://chatgpt.com"><link rel=3D"preconnect" href=3D"ht=
tps://cdn.oaistatic.com/"><link rel=3D"preconnect" href=3D"https://ab.chatg=
pt.com/"><meta name=3D"robots" content=3D"index, follow"><meta name=3D"appl=
e-itunes-app" content=3D"app-id=3D6448311069"><meta name=3D"dd-trace-id" co=
ntent=3D"9753907750718086766"><meta name=3D"dd-trace-time" content=3D"17461=
14965739"><link rel=3D"icon" href=3D"https://cdn.oaistatic.com/assets/favic=
on-miwirzcw.ico" sizes=3D"32x32"><link rel=3D"icon" href=3D"data:image/svg+=
xml,%3csvg%20xmlns=3D'http://www.w3.org/2000/svg'%20width=3D'180'%20height=
=3D'180'%20fill=3D'none'%3e%3cstyle%3e%20:root%20{%20--primary-fill:%20%230=
00;%20--secondary-fill:%20%23fff;%20}%20@media%20(prefers-color-scheme:%20d=
ark)%20{%20:root%20{%20--primary-fill:%20%23fff;%20--secondary-fill:%20%230=
00;%20}%20}%20%3c/style%3e%3cg%20clip-path=3D'url(%23a)'%3e%3crect%20width=
=3D'180'%20height=3D'180'%20fill=3D'var(--primary-fill)'%20rx=3D'90'%20/%3e=
%3cg%20clip-path=3D'url(%23b)'%3e%3cpath%20fill=3D'var(--secondary-fill)'%2=
0d=3D'M75.91%2073.628V62.232c0-.96.36-1.68%201.199-2.16l22.912-13.194c3.119=
-1.8%206.838-2.639%2010.676-2.639%2014.394%200%2023.511%2011.157%2023.511%2=
023.032%200%20.839%200%201.799-.12%202.758l-23.752-13.914c-1.439-.84-2.879-=
.84-4.318%200L75.91%2073.627Zm53.499%2044.383v-27.23c0-1.68-.72-2.88-2.159-=
3.719L97.142%2069.55l9.836-5.638c.839-.48%201.559-.48%202.399%200l22.912%20=
13.195c6.598%203.839%2011.035%2011.995%2011.035%2019.912%200%209.116-5.397%=
2017.513-13.915%2020.992v.001Zm-60.577-23.99-9.836-5.758c-.84-.48-1.2-1.2-1=
.2-2.16v-26.39c0-12.834%209.837-22.55%2023.152-22.55%205.039%200%209.716%20=
1.679%2013.676%204.678L70.993%2055.516c-1.44.84-2.16%202.039-2.16%203.719v3=
4.787-.002Zm21.173%2012.234L75.91%2098.339V81.546l14.095-7.917%2014.094%207=
.917v16.793l-14.094%207.916Zm9.056%2036.467c-5.038%200-9.716-1.68-13.675-4.=
678l23.631-13.676c1.439-.839%202.159-2.038%202.159-3.718V85.863l9.956%205.7=
57c.84.48%201.2%201.2%201.2%202.16v26.389c0%2012.835-9.957%2022.552-23.27%2=
022.552v.001Zm-28.43-26.75L47.72%20102.778c-6.599-3.84-11.036-11.996-11.036=
-19.913%200-9.236%205.518-17.513%2014.034-20.992v27.35c0%201.68.72%202.879%=
202.16%203.718l29.989%2017.393-9.837%205.638c-.84.48-1.56.48-2.399%200Zm-1.=
318%2019.673c-13.555%200-23.512-10.196-23.512-22.792%200-.959.12-1.919.24-2=
.879l23.63%2013.675c1.44.84%202.88.84%204.32%200l30.108-17.392v11.395c0%20.=
96-.361%201.68-1.2%202.16l-22.912%2013.194c-3.119%201.8-6.837%202.639-10.67=
5%202.639Zm29.748%2014.274c14.515%200%2026.63-10.316%2029.39-23.991%2013.43=
4-3.479%2022.071-16.074%2022.071-28.91%200-8.396-3.598-16.553-10.076-22.43.=
6-2.52.96-5.039.96-7.557%200-17.153-13.915-29.99-29.989-29.99-3.239%200-6.3=
58.48-9.477%201.56-5.398-5.278-12.835-8.637-20.992-8.637-14.515%200-26.63%2=
010.316-29.39%2023.991-13.434%203.48-22.07%2016.074-22.07%2028.91%200%208.3=
96%203.598%2016.553%2010.075%2022.431-.6%202.519-.96%205.038-.96%207.556%20=
0%2017.154%2013.915%2029.989%2029.99%2029.989%203.238%200%206.357-.479%209.=
476-1.559%205.397%205.278%2012.835%208.637%2020.992%208.637Z'%20/%3e%3c/g%3=
e%3c/g%3e%3cdefs%3e%3cclipPath%20id=3D'a'%3e%3cpath%20d=3D'M0%200h180v180H0=
z'%20/%3e%3c/clipPath%3e%3cclipPath%20id=3D'b'%3e%3cpath%20d=3D'M29.487%202=
9.964h121.035v119.954H29.487z'%20/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e" =
type=3D"image/svg+xml"><link rel=3D"apple-touch-icon" sizes=3D"180x180" hre=
f=3D"https://cdn.oaistatic.com/assets/favicon-180x180-od45eci6.webp"><link =
rel=3D"stylesheet" href=3D"https://cdn.oaistatic.com/assets/root-bpcp30ia.c=
ss"><link rel=3D"stylesheet" href=3D"https://cdn.oaistatic.com/assets/conve=
rsation-small-dextt2zw.css"><link rel=3D"modulepreload" as=3D"script" cross=
origin=3D"" href=3D"https://cdn.oaistatic.com/assets/ftmj33yld5w0a4bp.js"><=
link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://c=
dn.oaistatic.com/assets/c6vr8ewbqday3p4k.js"><link rel=3D"modulepreload" as=
=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/jkrt6=
3xnfex3ww16.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" =
href=3D"https://cdn.oaistatic.com/assets/nmij2gpodjf9i725.js"><link rel=3D"=
modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic=
.com/assets/do1r2cmg1c0u4c7z.js"><link rel=3D"modulepreload" as=3D"script" =
crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/kwzgjsq0t4viaybb.=
js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"http=
s://cdn.oaistatic.com/assets/ev5509lfm876lu05.js"><link rel=3D"modulepreloa=
d" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/=
n46pds673olfpoid.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=
=3D"" href=3D"https://cdn.oaistatic.com/assets/m89x2zftpo6hrypr.js"><link r=
el=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oai=
static.com/assets/mkjf8o8cybmz7mzv.js"><link rel=3D"modulepreload" as=3D"sc=
ript" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/ddpcjqlsf5a=
ppiwy.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=
=3D"https://cdn.oaistatic.com/assets/equgbtn6oy5b3yaw.js"><link rel=3D"modu=
lepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com=
/assets/hpccygchj576ezyo.js"><link rel=3D"modulepreload" as=3D"script" cros=
sorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/cduhrn1yn6by4d84.js">=
<link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://=
cdn.oaistatic.com/assets/pc2givv05uuq8g6l.js"><link rel=3D"modulepreload" a=
s=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/ckfi=
3gd8ughhxujr.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D""=
 href=3D"https://cdn.oaistatic.com/assets/ojrz9oez3fopl8f9.js"><link rel=3D=
"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistati=
c.com/assets/e2rjag9iypzkh178.js"><link rel=3D"modulepreload" as=3D"script"=
 crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/e6aw6n9lemijyn9a=
.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"htt=
ps://cdn.oaistatic.com/assets/jbffhp2asmiyt4g3.js"><link rel=3D"moduleprelo=
ad" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets=
/gdo1b4xt4rq78pao.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=
=3D"" href=3D"https://cdn.oaistatic.com/assets/n4idafuhdh5bmwv5.js"><link r=
el=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oai=
static.com/assets/abd9awqn4iu9c35l.js"><link rel=3D"stylesheet" crossorigin=
=3D"" href=3D"https://cdn.oaistatic.com/assets/FormattedText-kb0ehjj7.css">=
<link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://=
cdn.oaistatic.com/assets/cq3z04gt9zxde03v.js"><link rel=3D"modulepreload" a=
s=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/dtu7=
l9hhym5ioyti.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D""=
 href=3D"https://cdn.oaistatic.com/assets/irwpwuaa7shf2frm.js"><link rel=3D=
"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistati=
c.com/assets/cs6hunfqt2k681m8.js"><link rel=3D"modulepreload" as=3D"script"=
 crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/igfi5q9kefx0f961=
.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"htt=
ps://cdn.oaistatic.com/assets/gqbbt3jgrtwgc8wq.js"><link rel=3D"moduleprelo=
ad" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets=
/nab5tn6ip6356dbf.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=
=3D"" href=3D"https://cdn.oaistatic.com/assets/eht9de3h1ffmicmq.js"><link r=
el=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oai=
static.com/assets/dwf35rdrgqb8fwha.js"><link rel=3D"modulepreload" as=3D"sc=
ript" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/pfu3bo8vb67=
acu3l.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=
=3D"https://cdn.oaistatic.com/assets/f7s0uldost2uo2pm.js"><link rel=3D"modu=
lepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com=
/assets/nm04jgpfyxi6pn12.js"><link rel=3D"modulepreload" as=3D"script" cros=
sorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/jpj8xsxdtxbcvk0e.js">=
<link rel=3D"stylesheet" crossorigin=3D"" href=3D"https://cdn.oaistatic.com=
/assets/ADAVisualizationComponent-b5feuqnm.css"><link rel=3D"modulepreload"=
 as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/dm=
q3kq4a2b2ukac3.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D=
"" href=3D"https://cdn.oaistatic.com/assets/kguc6la4tbphhein.js"><link rel=
=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://cdn.oaist=
atic.com/assets/n6ni7r3on425rufz.js"><link rel=3D"modulepreload" as=3D"scri=
pt" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/di7e6cp6pe73e=
c62.js"><link rel=3D"stylesheet" crossorigin=3D"" href=3D"https://cdn.oaist=
atic.com/assets/cot-message-lf3q5fj1.css"><link rel=3D"modulepreload" as=3D=
"script" crossorigin=3D"" href=3D"https://cdn.oaistatic.com/assets/oi2gqiok=
kmbus7n3.js"></head><body class=3D"" style=3D""><span data-radix-focus-guar=
d=3D"" tabindex=3D"0" style=3D"outline: none; opacity: 0; position: fixed; =
pointer-events: none;"></span><span data-testid=3D"blocking-initial-modals-=
done" class=3D"hidden"></span><a class=3D"bg-token-main-surface-primary fix=
ed start-1/2 top-1 z-50 mx-auto w-fit -translate-x-1/2 translate-y-[-100lvh=
] rounded-full px-3 py-2 focus-visible:translate-y-0" href=3D"https://chatg=
pt.com/c/680b8d1a-d7f4-800f-b1f2-0287eb5c2631#main">Skip to content</a><div=
 class=3D"flex h-full w-full flex-col"><div class=3D"relative flex h-full w=
-full flex-1 overflow-hidden transition-colors z-0"><div class=3D"relative =
flex h-full w-full flex-row overflow-hidden"><div class=3D"relative flex h-=
full max-w-full flex-1 flex-col overflow-hidden"><div class=3D"draggable h-=
header-height bg-token-main-surface-primary sticky top-0 z-10 flex items-ce=
nter justify-center border-transparent ps-0 md:hidden [box-shadow:var(--sha=
rp-edge-top-shadow)]"><div class=3D"no-draggable absolute start-0 top-0 bot=
tom-0 ms-3 inline-flex items-center justify-center"><button type=3D"button"=
 class=3D"hover:text-token-text-primary inline-flex rounded-md focus:ring-2=
 focus:ring-white focus:outline-hidden focus:ring-inset active:opacity-50" =
data-testid=3D"open-sidebar-button"><span class=3D"sr-only">Open sidebar</s=
pan><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xml=
ns=3D"http://www.w3.org/2000/svg" class=3D"icon-lg text-token-text-secondar=
y mx-2"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 8C3 7.447=
72 3.44772 7 4 7H20C20.5523 7 21 7.44772 21 8C21 8.55228 20.5523 9 20 9H4C3=
.44772 9 3 8.55228 3 8ZM3 16C3 15.4477 3.44772 15 4 15H14C14.5523 15 15 15.=
4477 15 16C15 16.5523 14.5523 17 14 17H4C3.44772 17 3 16.5523 3 16Z" fill=
=3D"currentColor"></path></svg></button></div><div class=3D"no-draggable"><=
div class=3D"flex items-center gap-0 overflow-hidden px-2 py-1.5 whitespace=
-nowrap"><button class=3D"max-w-28 xs:max-w-40 sm:max-w-60 md:max-w-none gr=
oup flex cursor-pointer items-center gap-1 rounded-lg py-1.5 px-1 text-lg h=
over:bg-token-main-surface-secondary radix-state-open:bg-token-main-surface=
-secondary font-semibold text-token-text-secondary overflow-hidden whitespa=
ce-nowrap"><a class=3D"truncate" href=3D"https://chatgpt.com/g/g-p-68000427=
d1e081919dbdd27ce95eb4fd-deep-learning-final-2025/project" data-discover=3D=
"true">Deep Learning Final 2025</a></button><svg width=3D"24" height=3D"24"=
 viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" c=
lass=3D"icon-md text-token-text-tertiary"><path fill-rule=3D"evenodd" clip-=
rule=3D"evenodd" d=3D"M9.29289 18.7071C8.90237 18.3166 8.90237 17.6834 9.29=
289 17.2929L14.5858 12L9.29289 6.70711C8.90237 6.31658 8.90237 5.68342 9.29=
289 5.29289C9.68342 4.90237 10.3166 4.90237 10.7071 5.29289L16.7071 11.2929=
C16.8946 11.4804 17 11.7348 17 12C17 12.2652 16.8946 12.5196 16.7071 12.707=
1L10.7071 18.7071C10.3166 19.0976 9.68342 19.0976 9.29289 18.7071Z" fill=3D=
"currentColor"></path></svg><button type=3D"button" id=3D"radix-=C2=ABr40r=
=C2=BB" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"closed=
" class=3D"max-w-28 xs:max-w-40 sm:max-w-60 md:max-w-none group flex cursor=
-pointer items-center gap-1 rounded-lg py-1.5 px-1 text-lg hover:bg-token-m=
ain-surface-secondary radix-state-open:bg-token-main-surface-secondary font=
-semibold text-token-text-secondary overflow-hidden whitespace-nowrap"><div=
 class=3D"truncate">Dimensionality Reduction for Grouping<span class=3D"bg-=
token-main-surface-secondary text-token-text-secondary relative bottom-[1px=
] mx-1 inline-block rounded-md px-1 text-xs leading-4">4o</span></div><svg =
width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"htt=
p://www.w3.org/2000/svg" class=3D"icon-md text-token-text-tertiary"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M5.29289 9.29289C5.68342 8.=
90237 6.31658 8.90237 6.70711 9.29289L12 14.5858L17.2929 9.29289C17.6834 8.=
90237 18.3166 8.90237 18.7071 9.29289C19.0976 9.68342 19.0976 10.3166 18.70=
71 10.7071L12.7071 16.7071C12.5196 16.8946 12.2652 17 12 17C11.7348 17 11.4=
804 16.8946 11.2929 16.7071L5.29289 10.7071C4.90237 10.3166 4.90237 9.68342=
 5.29289 9.29289Z" fill=3D"currentColor"></path></svg></button></div></div>=
<div class=3D"no-draggable absolute end-0 top-0 bottom-0 me-3 inline-flex i=
tems-center justify-center"><span class=3D"flex" data-state=3D"closed"><a a=
ria-label=3D"New chat" class=3D"text-token-text-secondary hover:bg-token-su=
rface-hover focus-visible:bg-token-surface-hover flex h-10 items-center jus=
tify-center rounded-lg px-2 focus-visible:outline-0" href=3D"https://chatgp=
t.com/" data-discover=3D"true"><svg width=3D"24" height=3D"24" viewBox=3D"0=
 0 24 24" fill=3D"currentColor" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-xl-heavy"><path d=3D"M15.6729 3.91287C16.8918 2.69392 18.8682 2.69=
392 20.0871 3.91287C21.3061 5.13182 21.3061 7.10813 20.0871 8.32708L14.1499=
 14.2643C13.3849 15.0293 12.3925 15.5255 11.3215 15.6785L9.14142 15.9899C8.=
82983 16.0344 8.51546 15.9297 8.29289 15.7071C8.07033 15.4845 7.96554 15.17=
01 8.01005 14.8586L8.32149 12.6785C8.47449 11.6075 8.97072 10.615 9.7357 9.=
85006L15.6729 3.91287ZM18.6729 5.32708C18.235 4.88918 17.525 4.88918 17.087=
1 5.32708L11.1499 11.2643C10.6909 11.7233 10.3932 12.3187 10.3014 12.9613L1=
0.1785 13.8215L11.0386 13.6986C11.6812 13.6068 12.2767 13.3091 12.7357 12.8=
501L18.6729 6.91287C19.1108 6.47497 19.1108 5.76499 18.6729 5.32708ZM11 3.9=
9929C11.0004 4.55157 10.5531 4.99963 10.0008 5.00007C9.00227 5.00084 8.2976=
9 5.00827 7.74651 5.06064C7.20685 5.11191 6.88488 5.20117 6.63803 5.32695C6=
.07354 5.61457 5.6146 6.07351 5.32698 6.63799C5.19279 6.90135 5.10062 7.249=
04 5.05118 7.8542C5.00078 8.47105 5 9.26336 5 10.4V13.6C5 14.7366 5.00078 1=
5.5289 5.05118 16.1457C5.10062 16.7509 5.19279 17.0986 5.32698 17.3619C5.61=
46 17.9264 6.07354 18.3854 6.63803 18.673C6.90138 18.8072 7.24907 18.8993 7=
.85424 18.9488C8.47108 18.9992 9.26339 19 10.4 19H13.6C14.7366 19 15.5289 1=
8.9992 16.1458 18.9488C16.7509 18.8993 17.0986 18.8072 17.362 18.673C17.926=
5 18.3854 18.3854 17.9264 18.673 17.3619C18.7988 17.1151 18.8881 16.7931 18=
.9393 16.2535C18.9917 15.7023 18.9991 14.9977 18.9999 13.9992C19.0003 13.44=
69 19.4484 12.9995 20.0007 13C20.553 13.0004 21.0003 13.4485 20.9999 14.000=
7C20.9991 14.9789 20.9932 15.7808 20.9304 16.4426C20.8664 17.116 20.7385 17=
.7136 20.455 18.2699C19.9757 19.2107 19.2108 19.9756 18.27 20.455C17.6777 2=
0.7568 17.0375 20.8826 16.3086 20.9421C15.6008 21 14.7266 21 13.6428 21H10.=
3572C9.27339 21 8.39925 21 7.69138 20.9421C6.96253 20.8826 6.32234 20.7568 =
5.73005 20.455C4.78924 19.9756 4.02433 19.2107 3.54497 18.2699C3.24318 17.6=
776 3.11737 17.0374 3.05782 16.3086C2.99998 15.6007 2.99999 14.7266 3 13.64=
28V10.3572C2.99999 9.27337 2.99998 8.39922 3.05782 7.69134C3.11737 6.96249 =
3.24318 6.3223 3.54497 5.73001C4.02433 4.7892 4.78924 4.0243 5.73005 3.5449=
3C6.28633 3.26149 6.88399 3.13358 7.55735 3.06961C8.21919 3.00673 9.02103 3=
.00083 9.99922 3.00007C10.5515 2.99964 10.9996 3.447 11 3.99929Z" fill=3D"c=
urrentColor"></path></svg></a></span></div></div><div class=3D"no-draggable=
 bg-token-main-surface-primary flex w-full items-center justify-center md:h=
idden"></div><main class=3D"transition-width relative h-full w-full flex-1 =
overflow-auto" id=3D"main" z-index=3D"-1"><div id=3D"thread" class=3D"group=
/thread @container/thread h-full w-full"><div role=3D"presentation" class=
=3D"composer-parent flex flex-col focus-visible:outline-0 h-full"><div id=
=3D"page-header" class=3D"draggable no-draggable-children sticky top-0 p-3 =
flex items-center justify-between z-20 h-header-height font-semibold bg-tok=
en-main-surface-primary pointer-events-none [view-transition-name:var(--vt-=
page-header)] select-none *:pointer-events-auto motion-safe:transition max-=
md:hidden [box-shadow:var(--sharp-edge-top-shadow)]"><div class=3D"absolute=
 start-1/2 ltr:-translate-x-1/2 rtl:translate-x-1/2"></div><div class=3D"fl=
ex items-center gap-0 overflow-hidden"><div class=3D"flex items-center"><sp=
an class=3D"flex" data-state=3D"closed"><button aria-label=3D"Open sidebar"=
 class=3D"text-token-text-secondary focus-visible:bg-token-surface-hover en=
abled:hover:bg-token-surface-hover disabled:text-token-text-quaternary h-10=
 rounded-lg px-2 focus-visible:outline-0"><svg width=3D"24" height=3D"24" v=
iewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cla=
ss=3D"icon-xl-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M8.85719 3H15.1428C16.2266 2.99999 17.1007 2.99998 17.8086 3.05782C18.5375=
 3.11737 19.1777 3.24318 19.77 3.54497C20.7108 4.02433 21.4757 4.78924 21.9=
55 5.73005C22.2568 6.32234 22.3826 6.96253 22.4422 7.69138C22.5 8.39925 22.=
5 9.27339 22.5 10.3572V13.6428C22.5 14.7266 22.5 15.6008 22.4422 16.3086C22=
.3826 17.0375 22.2568 17.6777 21.955 18.27C21.4757 19.2108 20.7108 19.9757 =
19.77 20.455C19.1777 20.7568 18.5375 20.8826 17.8086 20.9422C17.1008 21 16.=
2266 21 15.1428 21H8.85717C7.77339 21 6.89925 21 6.19138 20.9422C5.46253 20=
.8826 4.82234 20.7568 4.23005 20.455C3.28924 19.9757 2.52433 19.2108 2.0449=
7 18.27C1.74318 17.6777 1.61737 17.0375 1.55782 16.3086C1.49998 15.6007 1.4=
9999 14.7266 1.5 13.6428V10.3572C1.49999 9.27341 1.49998 8.39926 1.55782 7.=
69138C1.61737 6.96253 1.74318 6.32234 2.04497 5.73005C2.52433 4.78924 3.289=
24 4.02433 4.23005 3.54497C4.82234 3.24318 5.46253 3.11737 6.19138 3.05782C=
6.89926 2.99998 7.77341 2.99999 8.85719 3ZM6.35424 5.05118C5.74907 5.10062 =
5.40138 5.19279 5.13803 5.32698C4.57354 5.6146 4.1146 6.07354 3.82698 6.638=
03C3.69279 6.90138 3.60062 7.24907 3.55118 7.85424C3.50078 8.47108 3.5 9.26=
339 3.5 10.4V13.6C3.5 14.7366 3.50078 15.5289 3.55118 16.1458C3.60062 16.75=
09 3.69279 17.0986 3.82698 17.362C4.1146 17.9265 4.57354 18.3854 5.13803 18=
.673C5.40138 18.8072 5.74907 18.8994 6.35424 18.9488C6.97108 18.9992 7.7633=
9 19 8.9 19H9.5V5H8.9C7.76339 5 6.97108 5.00078 6.35424 5.05118ZM11.5 5V19H=
15.1C16.2366 19 17.0289 18.9992 17.6458 18.9488C18.2509 18.8994 18.5986 18.=
8072 18.862 18.673C19.4265 18.3854 19.8854 17.9265 20.173 17.362C20.3072 17=
.0986 20.3994 16.7509 20.4488 16.1458C20.4992 15.5289 20.5 14.7366 20.5 13.=
6V10.4C20.5 9.26339 20.4992 8.47108 20.4488 7.85424C20.3994 7.24907 20.3072=
 6.90138 20.173 6.63803C19.8854 6.07354 19.4265 5.6146 18.862 5.32698C18.59=
86 5.19279 18.2509 5.10062 17.6458 5.05118C17.0289 5.00078 16.2366 5 15.1 5=
H11.5ZM5 8.5C5 7.94772 5.44772 7.5 6 7.5H7C7.55229 7.5 8 7.94772 8 8.5C8 9.=
05229 7.55229 9.5 7 9.5H6C5.44772 9.5 5 9.05229 5 8.5ZM5 12C5 11.4477 5.447=
72 11 6 11H7C7.55229 11 8 11.4477 8 12C8 12.5523 7.55229 13 7 13H6C5.44772 =
13 5 12.5523 5 12Z" fill=3D"currentColor"></path></svg></button></span><spa=
n class=3D"flex" data-state=3D"closed"><a aria-label=3D"New chat" class=3D"=
text-token-text-secondary hover:bg-token-surface-hover focus-visible:bg-tok=
en-surface-hover flex h-10 items-center justify-center rounded-lg px-2 focu=
s-visible:outline-0" href=3D"https://chatgpt.com/" data-discover=3D"true"><=
svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"currentColor" =
xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-xl-heavy"><path d=3D"M15=
.6729 3.91287C16.8918 2.69392 18.8682 2.69392 20.0871 3.91287C21.3061 5.131=
82 21.3061 7.10813 20.0871 8.32708L14.1499 14.2643C13.3849 15.0293 12.3925 =
15.5255 11.3215 15.6785L9.14142 15.9899C8.82983 16.0344 8.51546 15.9297 8.2=
9289 15.7071C8.07033 15.4845 7.96554 15.1701 8.01005 14.8586L8.32149 12.678=
5C8.47449 11.6075 8.97072 10.615 9.7357 9.85006L15.6729 3.91287ZM18.6729 5.=
32708C18.235 4.88918 17.525 4.88918 17.0871 5.32708L11.1499 11.2643C10.6909=
 11.7233 10.3932 12.3187 10.3014 12.9613L10.1785 13.8215L11.0386 13.6986C11=
.6812 13.6068 12.2767 13.3091 12.7357 12.8501L18.6729 6.91287C19.1108 6.474=
97 19.1108 5.76499 18.6729 5.32708ZM11 3.99929C11.0004 4.55157 10.5531 4.99=
963 10.0008 5.00007C9.00227 5.00084 8.29769 5.00827 7.74651 5.06064C7.20685=
 5.11191 6.88488 5.20117 6.63803 5.32695C6.07354 5.61457 5.6146 6.07351 5.3=
2698 6.63799C5.19279 6.90135 5.10062 7.24904 5.05118 7.8542C5.00078 8.47105=
 5 9.26336 5 10.4V13.6C5 14.7366 5.00078 15.5289 5.05118 16.1457C5.10062 16=
.7509 5.19279 17.0986 5.32698 17.3619C5.6146 17.9264 6.07354 18.3854 6.6380=
3 18.673C6.90138 18.8072 7.24907 18.8993 7.85424 18.9488C8.47108 18.9992 9.=
26339 19 10.4 19H13.6C14.7366 19 15.5289 18.9992 16.1458 18.9488C16.7509 18=
.8993 17.0986 18.8072 17.362 18.673C17.9265 18.3854 18.3854 17.9264 18.673 =
17.3619C18.7988 17.1151 18.8881 16.7931 18.9393 16.2535C18.9917 15.7023 18.=
9991 14.9977 18.9999 13.9992C19.0003 13.4469 19.4484 12.9995 20.0007 13C20.=
553 13.0004 21.0003 13.4485 20.9999 14.0007C20.9991 14.9789 20.9932 15.7808=
 20.9304 16.4426C20.8664 17.116 20.7385 17.7136 20.455 18.2699C19.9757 19.2=
107 19.2108 19.9756 18.27 20.455C17.6777 20.7568 17.0375 20.8826 16.3086 20=
.9421C15.6008 21 14.7266 21 13.6428 21H10.3572C9.27339 21 8.39925 21 7.6913=
8 20.9421C6.96253 20.8826 6.32234 20.7568 5.73005 20.455C4.78924 19.9756 4.=
02433 19.2107 3.54497 18.2699C3.24318 17.6776 3.11737 17.0374 3.05782 16.30=
86C2.99998 15.6007 2.99999 14.7266 3 13.6428V10.3572C2.99999 9.27337 2.9999=
8 8.39922 3.05782 7.69134C3.11737 6.96249 3.24318 6.3223 3.54497 5.73001C4.=
02433 4.7892 4.78924 4.0243 5.73005 3.54493C6.28633 3.26149 6.88399 3.13358=
 7.55735 3.06961C8.21919 3.00673 9.02103 3.00083 9.99922 3.00007C10.5515 2.=
99964 10.9996 3.447 11 3.99929Z" fill=3D"currentColor"></path></svg></a></s=
pan></div><div class=3D"flex items-center gap-0 overflow-hidden px-2 py-1.5=
 whitespace-nowrap"><button class=3D"max-w-28 xs:max-w-40 sm:max-w-60 md:ma=
x-w-none group flex cursor-pointer items-center gap-1 rounded-lg py-1.5 px-=
1 text-lg hover:bg-token-main-surface-secondary radix-state-open:bg-token-m=
ain-surface-secondary font-semibold text-token-text-secondary overflow-hidd=
en whitespace-nowrap"><a class=3D"truncate" href=3D"https://chatgpt.com/g/g=
-p-68000427d1e081919dbdd27ce95eb4fd-deep-learning-final-2025/project" data-=
discover=3D"true">Deep Learning Final 2025</a></button><svg width=3D"24" he=
ight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/=
2000/svg" class=3D"icon-md text-token-text-tertiary"><path fill-rule=3D"eve=
nodd" clip-rule=3D"evenodd" d=3D"M9.29289 18.7071C8.90237 18.3166 8.90237 1=
7.6834 9.29289 17.2929L14.5858 12L9.29289 6.70711C8.90237 6.31658 8.90237 5=
.68342 9.29289 5.29289C9.68342 4.90237 10.3166 4.90237 10.7071 5.29289L16.7=
071 11.2929C16.8946 11.4804 17 11.7348 17 12C17 12.2652 16.8946 12.5196 16.=
7071 12.7071L10.7071 18.7071C10.3166 19.0976 9.68342 19.0976 9.29289 18.707=
1Z" fill=3D"currentColor"></path></svg><button type=3D"button" id=3D"radix-=
=C2=ABr40u=C2=BB" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=
=3D"closed" class=3D"max-w-28 xs:max-w-40 sm:max-w-60 md:max-w-none group f=
lex cursor-pointer items-center gap-1 rounded-lg py-1.5 px-1 text-lg hover:=
bg-token-main-surface-secondary radix-state-open:bg-token-main-surface-seco=
ndary font-semibold text-token-text-secondary overflow-hidden whitespace-no=
wrap"><div class=3D"truncate">Dimensionality Reduction for Grouping<span cl=
ass=3D"bg-token-main-surface-secondary text-token-text-secondary relative b=
ottom-[1px] mx-1 inline-block rounded-md px-1 text-xs leading-4">4o</span><=
/div><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xm=
lns=3D"http://www.w3.org/2000/svg" class=3D"icon-md text-token-text-tertiar=
y"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M5.29289 9.29289C=
5.68342 8.90237 6.31658 8.90237 6.70711 9.29289L12 14.5858L17.2929 9.29289C=
17.6834 8.90237 18.3166 8.90237 18.7071 9.29289C19.0976 9.68342 19.0976 10.=
3166 18.7071 10.7071L12.7071 16.7071C12.5196 16.8946 12.2652 17 12 17C11.73=
48 17 11.4804 16.8946 11.2929 16.7071L5.29289 10.7071C4.90237 10.3166 4.902=
37 9.68342 5.29289 9.29289Z" fill=3D"currentColor"></path></svg></button></=
div></div><div class=3D"flex items-center gap-2 pe-1 leading-[0]" id=3D"con=
versation-header-actions"><button type=3D"button" aria-label=3D"Open conver=
sation options" data-testid=3D"conversation-options-button" id=3D"radix-=C2=
=ABr403=C2=BB" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D=
"closed" class=3D"text-token-text-secondary hover:text-token-text-primary h=
over:bg-token-surface-hover radix-state-open:text-token-text-secondary flex=
 aspect-square h-10 items-center justify-center rounded-full transition foc=
us-visible:outline-0"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24"=
 fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"h-[22px] w-[22=
px]"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 21C10.8954 =
21 10 20.1046 10 19C10 17.8954 10.8954 17 12 17C13.1046 17 14 17.8954 14 19=
C14 20.1046 13.1046 21 12 21ZM12 14C10.8954 14 10 13.1046 10 12C10 10.8954 =
10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14ZM1=
2 7C10.8954 7 10 6.10457 10 5C10 3.89543 10.8954 3 12 3C13.1046 3 14 3.8954=
3 14 5C14 6.10457 13.1046 7 12 7Z" fill=3D"currentColor"></path></svg></but=
ton><button aria-label=3D"Open Profile Menu" data-testid=3D"profile-button"=
 class=3D"text-token-text-secondary hover:text-token-text-primary hover:bg-=
token-surface-hover radix-state-open:text-token-text-secondary flex h-10 w-=
10 items-center justify-center rounded-full px-1 transition focus-visible:o=
utline-0" type=3D"button" id=3D"radix-=C2=ABr405=C2=BB" aria-haspopup=3D"me=
nu" aria-expanded=3D"false" data-state=3D"closed"><div class=3D"relative"><=
div class=3D"relative"><div class=3D"relative flex overflow-hidden rounded-=
full"><img alt=3D"User" width=3D"32" height=3D"32" class=3D"rounded-xs" ref=
errerpolicy=3D"no-referrer" src=3D"https://lh3.googleusercontent.com/a/ACg8=
ocIw_6Y0QIlqJ43kXC1E-kh6ZjVz5hWW_HbZNMDy8hMaPVkAnQ=3Ds96-c"></div></div><sp=
an class=3D"absolute end-[4.8px] top-[21.5px] -me-2 flex h-3 items-center j=
ustify-center rounded-full bg-white text-[8px] font-medium text-black" styl=
e=3D"width: 1.6rem; box-shadow: rgba(128, 128, 128, 0.1) 0px 0px 0px 1.1px;=
 letter-spacing: -0.5px;">PLUS</span></div></button></div></div><div class=
=3D"flex shrink basis-auto flex-col overflow-hidden -mb-(--composer-overlap=
-px) [--composer-overlap-px:24px] grow"><div class=3D"relative h-full"><div=
 class=3D"flex h-full flex-col overflow-y-auto [scrollbar-gutter:stable] @[=
84rem]/thread:pt-(--header-height)"><div aria-hidden=3D"true" data-edge=3D"=
true" class=3D"pointer-events-none h-px w-px"></div><div class=3D"@thread-x=
l/thread:pt-header-height mt-1.5 flex flex-col text-sm pb-25"><article clas=
s=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversati=
on-turn-1" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5=
><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--sp=
acing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--threa=
d-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D=
"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40=
rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thre=
ad-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-m=
essages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/c=
onversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"relat=
ive flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><=
div data-message-author-role=3D"user" data-message-id=3D"aa66d042-facd-498d=
-87d9-c6d6f32ded14" dir=3D"auto" class=3D"min-h-8 text-message relative fle=
x w-full flex-col items-end gap-2 text-start break-words whitespace-normal =
[.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:=
hidden items-end rtl:items-start"><div class=3D"flex gap-2 flex-wrap mt-1 m=
ax-w-[80%] justify-end"></div><div class=3D"flex flex-col gap-2 w-[80%]"><d=
iv class=3D"w-full rounded-2xl border border-red-600 p-3"><div class=3D"my-=
0 flex items-center justify-between"><div class=3D"flex items-center gap-2"=
><p class=3D"m-0 p-0 text-lg font-semibold capitalize">preprocessed raster =
data</p></div><span class=3D"text-sm text-red-600">Unable to display visual=
ization</span></div></div></div><div class=3D"relative max-w-[var(--user-ch=
at-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5 rounded-se-=
lg"><div class=3D"whitespace-pre-wrap">Can you help me make this a visual r=
epresentation? Do dimensionaltiy reduction so you group certain times toget=
her, give me code to do so
</div></div></div></div></div></div></div></div></div></article><article cl=
ass=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversa=
tion-turn-2" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT sai=
d:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margi=
n:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[-=
-thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div cl=
ass=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-wi=
dth:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(=
--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/=
turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><d=
iv class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full=
 flex-col grow"><p class=3D"first:mt-0 my-1.5 h-8 flex items-center ltr:me-=
auto rtl:ms-auto empty:hidden text-token-text-secondary"></p><div data-mess=
age-author-role=3D"assistant" data-message-id=3D"33ed13ab-9be6-4faa-ab01-be=
3d85f13aef" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full=
 flex-col items-end gap-2 text-start break-words whitespace-normal [.text-m=
essage+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w=
-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown pr=
ose dark:prose-invert w-full break-words dark"><p data-start=3D"0" data-end=
=3D"123" class=3D"">The CSV file is too large to load directly due to memor=
y constraints. To proceed with PCA and visualization, we'll need to:</p>
<ol data-start=3D"125" data-end=3D"265">
<li data-start=3D"125" data-end=3D"152" class=3D"">
<p data-start=3D"128" data-end=3D"152" class=3D"">Load the file in chunks.<=
/p>
</li>
<li data-start=3D"153" data-end=3D"229" class=3D"">
<p data-start=3D"156" data-end=3D"229" class=3D"">Downsample the data (e.g.=
, average over time windows or sample a subset).</p>
</li>
<li data-start=3D"230" data-end=3D"265" class=3D"">
<p data-start=3D"233" data-end=3D"265" class=3D"">Perform PCA on the reduce=
d data.</p>
</li>
</ol>
<p data-start=3D"267" data-end=3D"302" class=3D"">I'll now implement a stra=
tegy that:</p>
<ul data-start=3D"303" data-end=3D"432">
<li data-start=3D"303" data-end=3D"363" class=3D"">
<p data-start=3D"305" data-end=3D"363" class=3D"">Loads only a portion of t=
he data to avoid memory overload.</p>
</li>
<li data-start=3D"364" data-end=3D"432" class=3D"">
<p data-start=3D"366" data-end=3D"432" class=3D"">Computes PCA on a managea=
ble sample of the data for visualization.</p>
</li>
</ul>
<p data-start=3D"434" data-end=3D"510" class=3D"">Let me handle that next. =
=E2=80=8B<span class=3D"" data-state=3D"closed"><button><svg xmlns=3D"http:=
//www.w3.org/2000/svg" viewBox=3D"0 0 19 15" fill=3D"none" class=3D"text-to=
ken-link hover:text-token-link-hover ms-0.5 -mt-0.5 inline-block" width=3D"=
19" height=3D"15"><path d=3D"M4.42 0.75H2.8625H2.75C1.64543 0.75 0.75 1.645=
43 0.75 2.75V11.65C0.75 12.7546 1.64543 13.65 2.75 13.65H2.8625C2.8625 13.6=
5 2.8625 13.65 2.8625 13.65C2.8625 13.65 4.00751 13.65 4.42 13.65M13.98 13.=
65H15.5375H15.65C16.7546 13.65 17.65 12.7546 17.65 11.65V2.75C17.65 1.64543=
 16.7546 0.75 15.65 0.75H15.5375H13.98" stroke=3D"currentColor" stroke-widt=
h=3D"1.5" stroke-linecap=3D"round" stroke-linejoin=3D"round"></path><path d=
=3D"M5.55283 4.21963C5.25993 3.92674 4.78506 3.92674 4.49217 4.21963C4.1992=
7 4.51252 4.19927 4.9874 4.49217 5.28029L6.36184 7.14996L4.49217 9.01963C4.=
19927 9.31252 4.19927 9.7874 4.49217 10.0803C4.78506 10.3732 5.25993 10.373=
2 5.55283 10.0803L7.95283 7.68029C8.24572 7.3874 8.24572 6.91252 7.95283 6.=
61963L5.55283 4.21963Z" fill=3D"currentColor" stroke=3D"currentColor" strok=
e-width=3D"0.2" stroke-linecap=3D"round" stroke-linejoin=3D"round"></path><=
path d=3D"M9.77753 8.75003C9.3357 8.75003 8.97753 9.10821 8.97753 9.55003C8=
.97753 9.99186 9.3357 10.35 9.77753 10.35H13.2775C13.7194 10.35 14.0775 9.9=
9186 14.0775 9.55003C14.0775 9.10821 13.7194 8.75003 13.2775 8.75003H9.7775=
3Z" fill=3D"currentColor" stroke=3D"currentColor" stroke-width=3D"0.1"></pa=
th></svg></button></span>=E2=80=8B</p></div></div></div><div data-message-a=
uthor-role=3D"assistant" data-message-id=3D"52452d35-1e5f-4fb3-9e96-c0db104=
9e4e4" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex=
-col items-end gap-2 text-start break-words whitespace-normal [.text-messag=
e+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full=
 flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose d=
ark:prose-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"2=
52" class=3D"">The file seems to be very large or possibly malformed (e.g. =
inconsistent row lengths). To work around this, I=E2=80=99ll try reading a =
small sample using Python=E2=80=99s built-in file handling and parse a few =
lines manually before loading it into a DataFrame for PCA.</p>
<p data-start=3D"254" data-end=3D"325" class=3D"">Let=E2=80=99s do that nex=
t. =E2=80=8B<span class=3D"" data-state=3D"closed"><button><svg xmlns=3D"ht=
tp://www.w3.org/2000/svg" viewBox=3D"0 0 19 15" fill=3D"none" class=3D"text=
-token-link hover:text-token-link-hover ms-0.5 -mt-0.5 inline-block" width=
=3D"19" height=3D"15"><path d=3D"M4.42 0.75H2.8625H2.75C1.64543 0.75 0.75 1=
.64543 0.75 2.75V11.65C0.75 12.7546 1.64543 13.65 2.75 13.65H2.8625C2.8625 =
13.65 2.8625 13.65 2.8625 13.65C2.8625 13.65 4.00751 13.65 4.42 13.65M13.98=
 13.65H15.5375H15.65C16.7546 13.65 17.65 12.7546 17.65 11.65V2.75C17.65 1.6=
4543 16.7546 0.75 15.65 0.75H15.5375H13.98" stroke=3D"currentColor" stroke-=
width=3D"1.5" stroke-linecap=3D"round" stroke-linejoin=3D"round"></path><pa=
th d=3D"M5.55283 4.21963C5.25993 3.92674 4.78506 3.92674 4.49217 4.21963C4.=
19927 4.51252 4.19927 4.9874 4.49217 5.28029L6.36184 7.14996L4.49217 9.0196=
3C4.19927 9.31252 4.19927 9.7874 4.49217 10.0803C4.78506 10.3732 5.25993 10=
.3732 5.55283 10.0803L7.95283 7.68029C8.24572 7.3874 8.24572 6.91252 7.9528=
3 6.61963L5.55283 4.21963Z" fill=3D"currentColor" stroke=3D"currentColor" s=
troke-width=3D"0.2" stroke-linecap=3D"round" stroke-linejoin=3D"round"></pa=
th><path d=3D"M9.77753 8.75003C9.3357 8.75003 8.97753 9.10821 8.97753 9.550=
03C8.97753 9.99186 9.3357 10.35 9.77753 10.35H13.2775C13.7194 10.35 14.0775=
 9.99186 14.0775 9.55003C14.0775 9.10821 13.7194 8.75003 13.2775 8.75003H9.=
77753Z" fill=3D"currentColor" stroke=3D"currentColor" stroke-width=3D"0.1">=
</path></svg></button></span>=E2=80=8B</p></div></div></div><div data-messa=
ge-author-role=3D"assistant" data-message-id=3D"e8f5fb64-19bc-40e1-aa7a-8f1=
abfd321e2" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full =
flex-col items-end gap-2 text-start break-words whitespace-normal [.text-me=
ssage+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-=
full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown pro=
se dark:prose-invert w-full break-words dark"><p data-start=3D"0" data-end=
=3D"97" class=3D"">The file is too large to even read line-by-line into mem=
ory directly, which suggests it's either:</p>
<ul data-start=3D"98" data-end=3D"250">
<li data-start=3D"98" data-end=3D"119" class=3D"">
<p data-start=3D"100" data-end=3D"119" class=3D"">Extremely large, or</p>
</li>
<li data-start=3D"120" data-end=3D"250" class=3D"">
<p data-start=3D"122" data-end=3D"250" class=3D"">Structured in a way that =
standard line-based parsing fails (e.g. huge rows, improper delimiters, or =
binary masquerading as CSV).</p>
</li>
</ul>
<p data-start=3D"252" data-end=3D"275" class=3D"">Let's try this instead:</=
p>
<ul data-start=3D"276" data-end=3D"349">
<li data-start=3D"276" data-end=3D"349" class=3D"">
<p data-start=3D"278" data-end=3D"349" class=3D"">Use Python's <code data-s=
tart=3D"291" data-end=3D"296">csv</code> module to read and parse only a fe=
w rows <strong data-start=3D"338" data-end=3D"348">safely</strong>.</p>
</li>
</ul>
<p data-start=3D"351" data-end=3D"426" class=3D"">I'll attempt that next. =
=E2=80=8B<span class=3D"" data-state=3D"closed"><button><svg xmlns=3D"http:=
//www.w3.org/2000/svg" viewBox=3D"0 0 19 15" fill=3D"none" class=3D"text-to=
ken-link hover:text-token-link-hover ms-0.5 -mt-0.5 inline-block" width=3D"=
19" height=3D"15"><path d=3D"M4.42 0.75H2.8625H2.75C1.64543 0.75 0.75 1.645=
43 0.75 2.75V11.65C0.75 12.7546 1.64543 13.65 2.75 13.65H2.8625C2.8625 13.6=
5 2.8625 13.65 2.8625 13.65C2.8625 13.65 4.00751 13.65 4.42 13.65M13.98 13.=
65H15.5375H15.65C16.7546 13.65 17.65 12.7546 17.65 11.65V2.75C17.65 1.64543=
 16.7546 0.75 15.65 0.75H15.5375H13.98" stroke=3D"currentColor" stroke-widt=
h=3D"1.5" stroke-linecap=3D"round" stroke-linejoin=3D"round"></path><path d=
=3D"M5.55283 4.21963C5.25993 3.92674 4.78506 3.92674 4.49217 4.21963C4.1992=
7 4.51252 4.19927 4.9874 4.49217 5.28029L6.36184 7.14996L4.49217 9.01963C4.=
19927 9.31252 4.19927 9.7874 4.49217 10.0803C4.78506 10.3732 5.25993 10.373=
2 5.55283 10.0803L7.95283 7.68029C8.24572 7.3874 8.24572 6.91252 7.95283 6.=
61963L5.55283 4.21963Z" fill=3D"currentColor" stroke=3D"currentColor" strok=
e-width=3D"0.2" stroke-linecap=3D"round" stroke-linejoin=3D"round"></path><=
path d=3D"M9.77753 8.75003C9.3357 8.75003 8.97753 9.10821 8.97753 9.55003C8=
.97753 9.99186 9.3357 10.35 9.77753 10.35H13.2775C13.7194 10.35 14.0775 9.9=
9186 14.0775 9.55003C14.0775 9.10821 13.7194 8.75003 13.2775 8.75003H9.7775=
3Z" fill=3D"currentColor" stroke=3D"currentColor" stroke-width=3D"0.1"></pa=
th></svg></button></span>=E2=80=8B</p></div></div></div><div data-message-a=
uthor-role=3D"assistant" data-message-id=3D"3a5833a7-7f85-431b-91fe-898b7c2=
11264" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex=
-col items-end gap-2 text-start break-words whitespace-normal [.text-messag=
e+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full=
 flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose d=
ark:prose-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"1=
08" class=3D"">Even reading just a few rows from the file results in a memo=
ry error, which strongly suggests that the file:</p>
<ul data-start=3D"110" data-end=3D"264">
<li data-start=3D"110" data-end=3D"182" class=3D"">
<p data-start=3D"112" data-end=3D"182" class=3D"">May not be a valid CSV at=
 all (e.g. it could be binary or compressed),</p>
</li>
<li data-start=3D"183" data-end=3D"245" class=3D"">
<p data-start=3D"185" data-end=3D"245" class=3D"">May have extraordinarily =
long lines or malformed delimiters,</p>
</li>
<li data-start=3D"246" data-end=3D"264" class=3D"">
<p data-start=3D"248" data-end=3D"264" class=3D"">Or is corrupted.</p>
</li>
</ul>
<p data-start=3D"266" data-end=3D"311" class=3D"">To proceed, I recommend o=
ne of these options:</p>
<h3 data-start=3D"313" data-end=3D"342" class=3D"">Option 1: Check File Typ=
e</h3>
<p data-start=3D"343" data-end=3D"411" class=3D"">Run this in your terminal=
 to inspect what kind of file it really is:</p>
<pre class=3D"overflow-visible!" data-start=3D"412" data-end=3D"516"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">bash</div><div class=3D"sticky top-9"><div cla=
ss=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"bg-=
token-sidebar-surface-primary text-token-text-secondary dark:bg-token-main-=
surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><spa=
n class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center=
 select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"24"=
 viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" c=
lass=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 =
5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.65=
69 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V1=
0C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5=
523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 =
9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523=
 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"=
></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"><b=
utton class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=3D=
"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.=
w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5 2.=
5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fill=
=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke-l=
inejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1220=
3 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007 5=
.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.837=
2C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19.2=
549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.5C=
21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15 5=
.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513 1=
4.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.66=
282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"=
round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" stroke=
=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-linejo=
in=3D"round"></path></svg>Edit</button></span></div></div></div><div class=
=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! languag=
e-bash"><span><span>file /mnt/data/preprocessed_raster_data.csv
</span><span><span class=3D"hljs-built_in">head</span></span><span> -n 5 /m=
nt/data/preprocessed_raster_data.csv
</span></span></code></div></div></pre>
<h3 data-start=3D"518" data-end=3D"555" class=3D"">Option 2: Upload a Small=
er Sample</h3>
<p data-start=3D"556" data-end=3D"677" class=3D"">If you created this CSV f=
rom your own data, try exporting a subset (e.g., the first 100 rows) and up=
loading that instead.</p>
<h3 data-start=3D"679" data-end=3D"720" class=3D"">Option 3: Re-export with=
 Clean Format</h3>
<p data-start=3D"721" data-end=3D"797" class=3D"">If this came from another=
 software (e.g., MATLAB, NumPy, NWB), it=E2=80=99s best to:</p>
<ul data-start=3D"798" data-end=3D"919">
<li data-start=3D"798" data-end=3D"845" class=3D"">
<p data-start=3D"800" data-end=3D"845" class=3D"">Re-export it as a well-fo=
rmatted CSV or HDF5,</p>
</li>
<li data-start=3D"846" data-end=3D"919" class=3D"">
<p data-start=3D"848" data-end=3D"919" class=3D"">Or upload the <code data-=
start=3D"862" data-end=3D"868">.nwb</code> file directly, which I can alrea=
dy help you parse.</p>
</li>
</ul>
<p data-start=3D"921" data-end=3D"1047" class=3D"">Would you like help extr=
acting data directly from the <code data-start=3D"975" data-end=3D"981">.nw=
b</code> file instead? =E2=80=8B<span class=3D"" data-state=3D"closed"><but=
ton><svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 19 15" fill=3D=
"none" class=3D"text-token-link hover:text-token-link-hover ms-0.5 -mt-0.5 =
inline-block" width=3D"19" height=3D"15"><path d=3D"M4.42 0.75H2.8625H2.75C=
1.64543 0.75 0.75 1.64543 0.75 2.75V11.65C0.75 12.7546 1.64543 13.65 2.75 1=
3.65H2.8625C2.8625 13.65 2.8625 13.65 2.8625 13.65C2.8625 13.65 4.00751 13.=
65 4.42 13.65M13.98 13.65H15.5375H15.65C16.7546 13.65 17.65 12.7546 17.65 1=
1.65V2.75C17.65 1.64543 16.7546 0.75 15.65 0.75H15.5375H13.98" stroke=3D"cu=
rrentColor" stroke-width=3D"1.5" stroke-linecap=3D"round" stroke-linejoin=
=3D"round"></path><path d=3D"M5.55283 4.21963C5.25993 3.92674 4.78506 3.926=
74 4.49217 4.21963C4.19927 4.51252 4.19927 4.9874 4.49217 5.28029L6.36184 7=
.14996L4.49217 9.01963C4.19927 9.31252 4.19927 9.7874 4.49217 10.0803C4.785=
06 10.3732 5.25993 10.3732 5.55283 10.0803L7.95283 7.68029C8.24572 7.3874 8=
.24572 6.91252 7.95283 6.61963L5.55283 4.21963Z" fill=3D"currentColor" stro=
ke=3D"currentColor" stroke-width=3D"0.2" stroke-linecap=3D"round" stroke-li=
nejoin=3D"round"></path><path d=3D"M9.77753 8.75003C9.3357 8.75003 8.97753 =
9.10821 8.97753 9.55003C8.97753 9.99186 9.3357 10.35 9.77753 10.35H13.2775C=
13.7194 10.35 14.0775 9.99186 14.0775 9.55003C14.0775 9.10821 13.7194 8.750=
03 13.2775 8.75003H9.77753Z" fill=3D"currentColor" stroke=3D"currentColor" =
stroke-width=3D"0.1"></path></svg></button></span>=E2=80=8B</p></div></div>=
</div></div></div></div></div></div></article><article class=3D"text-token-=
text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-3" data-=
scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"t=
ext-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37re=
m]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin=
:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-conte=
nt-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[-=
-thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-w=
idth) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-vi=
sible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn=
 relative flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap=
-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message=
-author-role=3D"user" data-message-id=3D"73f75eb5-22ff-4e77-ac27-e6fd558024=
72" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-co=
l items-end gap-2 text-start break-words whitespace-normal [.text-message+&=
amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end=
 rtl:items-start"><div class=3D"flex gap-2 flex-wrap mt-1 max-w-[80%] justi=
fy-end"><div class=3D"group text-token-text-primary relative inline-block t=
ext-sm"><span class=3D"" data-state=3D"closed"><a target=3D"_blank" rel=3D"=
noreferrer" class=3D"cursor-pointer"><div class=3D"border-token-border-defa=
ult bg-token-main-surface-primary relative overflow-hidden border rounded-x=
l"><div class=3D"p-2 w-80"><div class=3D"flex flex-row items-center gap-2">=
<div class=3D"relative h-10 w-10 shrink-0 overflow-hidden rounded-lg"><svg =
xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 36 36" fill=3D"none" cl=
ass=3D"h-10 w-10 shrink-0" width=3D"36" height=3D"36"><rect width=3D"36" he=
ight=3D"36" rx=3D"6" fill=3D"#0088FF"></rect><path d=3D"M18.833 9.66663H12.=
9997C12.5576 9.66663 12.1337 9.84222 11.8212 10.1548C11.5086 10.4673 11.333=
 10.8913 11.333 11.3333V24.6666C11.333 25.1087 11.5086 25.5326 11.8212 25.8=
451C12.1337 26.1577 12.5576 26.3333 12.9997 26.3333H22.9997C23.4417 26.3333=
 23.8656 26.1577 24.1782 25.8451C24.4907 25.5326 24.6663 25.1087 24.6663 24=
.6666V15.5L18.833 9.66663Z" stroke=3D"white" stroke-width=3D"1.66667" strok=
e-linecap=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M18.833 9.6=
6663V15.5H24.6663" stroke=3D"white" stroke-width=3D"1.66667" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path></svg></div><div class=3D"overf=
low-hidden"><div class=3D"truncate font-semibold">sub-An_ses-20220105T17392=
9.nwb</div><div class=3D"text-token-text-secondary truncate">File</div></di=
v></div></div></div></a></span></div><div class=3D"group text-token-text-pr=
imary relative inline-block text-sm"><span class=3D"" data-state=3D"closed"=
><a target=3D"_blank" rel=3D"noreferrer" class=3D"cursor-pointer"><div clas=
s=3D"border-token-border-default bg-token-main-surface-primary relative ove=
rflow-hidden border rounded-xl"><div class=3D"p-2 w-80"><div class=3D"flex =
flex-row items-center gap-2"><div class=3D"relative h-10 w-10 shrink-0 over=
flow-hidden rounded-lg"><svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 36 36" fill=3D"none" class=3D"h-10 w-10 shrink-0" width=3D"36" heig=
ht=3D"36"><rect width=3D"36" height=3D"36" rx=3D"6" fill=3D"#FF6E3C"></rect=
><path d=3D"M21.333 23L26.333 18L21.333 13" stroke=3D"white" stroke-width=
=3D"1.66667" stroke-linecap=3D"round" stroke-linejoin=3D"round"></path><pat=
h d=3D"M14.667 13L9.66699 18L14.667 23" stroke=3D"white" stroke-width=3D"1.=
66667" stroke-linecap=3D"round" stroke-linejoin=3D"round"></path></svg></di=
v><div class=3D"overflow-hidden"><div class=3D"truncate font-semibold">rast=
er_extractions.py</div><div class=3D"text-token-text-secondary truncate">Py=
thon</div></div></div></div></div></a></span></div><div class=3D"group text=
-token-text-primary relative inline-block text-sm"><span class=3D"" data-st=
ate=3D"closed"><a target=3D"_blank" rel=3D"noreferrer" class=3D"cursor-poin=
ter"><div class=3D"border-token-border-default bg-token-main-surface-primar=
y relative overflow-hidden border rounded-xl"><div class=3D"p-2 w-80"><div =
class=3D"flex flex-row items-center gap-2"><div class=3D"relative h-10 w-10=
 shrink-0 overflow-hidden rounded-lg"><svg xmlns=3D"http://www.w3.org/2000/=
svg" viewBox=3D"0 0 36 36" fill=3D"none" class=3D"h-10 w-10 shrink-0" width=
=3D"36" height=3D"36"><rect width=3D"36" height=3D"36" rx=3D"6" fill=3D"#00=
88FF"></rect><path d=3D"M18.833 9.66663H12.9997C12.5576 9.66663 12.1337 9.8=
4222 11.8212 10.1548C11.5086 10.4673 11.333 10.8913 11.333 11.3333V24.6666C=
11.333 25.1087 11.5086 25.5326 11.8212 25.8451C12.1337 26.1577 12.5576 26.3=
333 12.9997 26.3333H22.9997C23.4417 26.3333 23.8656 26.1577 24.1782 25.8451=
C24.4907 25.5326 24.6663 25.1087 24.6663 24.6666V15.5L18.833 9.66663Z" stro=
ke=3D"white" stroke-width=3D"1.66667" stroke-linecap=3D"round" stroke-linej=
oin=3D"round"></path><path d=3D"M18.833 9.66663V15.5H24.6663" stroke=3D"whi=
te" stroke-width=3D"1.66667" stroke-linecap=3D"round" stroke-linejoin=3D"ro=
und"></path></svg></div><div class=3D"overflow-hidden"><div class=3D"trunca=
te font-semibold">sub-An_ses-20220105T173929_image.nwb</div><div class=3D"t=
ext-token-text-secondary truncate">File</div></div></div></div></div></a></=
span></div></div><div class=3D"flex flex-col gap-2 w-[80%]"><div class=3D"w=
-full rounded-2xl border border-red-600 p-3"><div class=3D"my-0 flex items-=
center justify-between"><div class=3D"flex items-center gap-2"><p class=3D"=
m-0 p-0 text-lg font-semibold capitalize">fixations with image index and pa=
th</p></div><span class=3D"text-sm text-red-600">Unable to display visualiz=
ation</span></div></div></div><div class=3D"relative max-w-[var(--user-chat=
-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5 rounded-se-lg=
"><div class=3D"whitespace-pre-wrap">I have this file that extracts the ras=
ter from the .nwb file; however i'm confused by how many time steps i have =
because my fixations csv doesn't have that many timesteps</div></div></div>=
</div></div></div></div></div></div></article><article class=3D"text-token-=
text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-4" data-=
scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=
=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @=
[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-m=
argin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-=
content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64re=
m]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-=
max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages foc=
us-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation=
-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"relat=
ive flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><=
p class=3D"first:mt-0 my-1.5 h-8 flex items-center ltr:me-auto rtl:ms-auto =
empty:hidden text-token-text-secondary"></p><div data-message-author-role=
=3D"assistant" data-message-id=3D"b062907f-4a1f-4c36-9bed-b33fa95c4b09" dir=
=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col items=
-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:m=
t-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col =
gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-=
invert w-full break-words dark"><p data-start=3D"0" data-end=3D"68" class=
=3D"">Thanks for sharing everything. Here's a breakdown of your situation:<=
/p>
<hr data-start=3D"70" data-end=3D"73" class=3D"">
<h3 data-start=3D"75" data-end=3D"105" class=3D""><strong data-start=3D"79"=
 data-end=3D"105">Raster Time Resolution</strong></h3>
<p data-start=3D"106" data-end=3D"179" class=3D"">From <code data-start=3D"=
111" data-end=3D"134">raster_extractions.py</code>=E2=80=8B<span class=3D"t=
ext-token-text-secondary inline-flex items-center rounded-full bg-[#f4f4f4]=
 select-none dark:bg-token-main-surface-secondary  h-[22px] px-2 text-[0.5e=
m] font-medium ms-1" title=3D"raster_extractions.py">raster_extractions</sp=
an>:</p>
<pre class=3D"overflow-visible!" data-start=3D"180" data-end=3D"293"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>rate =3D rasters.rate  </span><span><span class=3D"=
hljs-comment"># e.g., 1000 Hz means 1 ms per time step</span></span><span>
num_timepoints =3D raster_data.shape[</span><span><span class=3D"hljs-numbe=
r">0</span></span><span>]
</span></span></code></div></div></pre>
<p data-start=3D"294" data-end=3D"444" class=3D"">You are extracting <stron=
g data-start=3D"313" data-end=3D"338">rasterized spike data</strong> with a=
 time resolution determined by the NWB <code data-start=3D"384" data-end=3D=
"390">rate</code> field. If <code data-start=3D"401" data-end=3D"414">rate =
=3D 1000</code>, then each time point =3D 1 ms.</p>
<p data-start=3D"446" data-end=3D"449" class=3D"">So:</p>
<ul data-start=3D"450" data-end=3D"576">
<li data-start=3D"450" data-end=3D"513" class=3D"">
<p data-start=3D"452" data-end=3D"513" class=3D"">If <code data-start=3D"45=
5" data-end=3D"479">num_timepoints =3D 15000</code> =E2=86=92 that's 15 sec=
onds of recording.</p>
</li>
<li data-start=3D"514" data-end=3D"576" class=3D"">
<p data-start=3D"516" data-end=3D"576" class=3D"">You get <strong data-star=
t=3D"524" data-end=3D"556">one time bin per millisecond</strong> (assuming =
1000 Hz).</p>
</li>
</ul>
<hr data-start=3D"578" data-end=3D"581" class=3D"">
<h3 data-start=3D"583" data-end=3D"603" class=3D""><strong data-start=3D"58=
7" data-end=3D"603">Fixation CSV</strong></h3>
<p data-start=3D"604" data-end=3D"827" class=3D"">Your fixation file (<code=
 data-start=3D"624" data-end=3D"665">fixations_with_image_index_and_path.cs=
v</code>) likely contains one row per fixation, and does <strong data-start=
=3D"714" data-end=3D"721">not</strong> have the same temporal resolution. E=
ach fixation might span <strong data-start=3D"782" data-end=3D"807">hundred=
s of time bins</strong> in the raster data.</p>
<p data-start=3D"829" data-end=3D"855" class=3D"">This mismatch is expected=
:</p>
<ul data-start=3D"856" data-end=3D"967">
<li data-start=3D"856" data-end=3D"912" class=3D"">
<p data-start=3D"858" data-end=3D"912" class=3D"">Raster data =3D high temp=
oral resolution (e.g., 1000 Hz)</p>
</li>
<li data-start=3D"913" data-end=3D"967" class=3D"">
<p data-start=3D"915" data-end=3D"967" class=3D"">Fixation data =3D behavio=
ral events (e.g., 200=E2=80=93400 ms)</p>
</li>
</ul>
<hr data-start=3D"969" data-end=3D"972" class=3D"">
<h3 data-start=3D"974" data-end=3D"995" class=3D"">=E2=9C=85 What You Can D=
o</h3>
<p data-start=3D"996" data-end=3D"1031" class=3D"">To relate raster data to=
 fixations:</p>
<ol data-start=3D"1032" data-end=3D"1297">
<li data-start=3D"1032" data-end=3D"1078" class=3D"">
<p data-start=3D"1035" data-end=3D"1078" class=3D""><strong data-start=3D"1=
035" data-end=3D"1063">Get fixation onset times</strong> from your CSV.</p>
</li>
<li data-start=3D"1079" data-end=3D"1205" class=3D"">
<p data-start=3D"1082" data-end=3D"1125" class=3D"">Convert each fixation t=
ime to raster index:</p>
<pre class=3D"overflow-visible!" data-start=3D"1129" data-end=3D"1205"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>raster_idx =3D </span><span><span class=3D"hljs-bui=
lt_in">int</span></span><span>((fixation_time - starting_time) * rate)
</span></span></code></div></div></pre>
</li>
<li data-start=3D"1206" data-end=3D"1297" class=3D"">
<p data-start=3D"1209" data-end=3D"1297" class=3D"">Extract slices of <code=
 data-start=3D"1227" data-end=3D"1283">raster_data[raster_idx : raster_idx =
+ duration * rate]</code> per fixation.</p>
</li>
</ol>
<hr data-start=3D"1299" data-end=3D"1302" class=3D"">
<p data-start=3D"1304" data-end=3D"1345" class=3D"">Would you like me to wr=
ite a script that:</p>
<ul data-start=3D"1346" data-end=3D"1461">
<li data-start=3D"1346" data-end=3D"1368" class=3D"">
<p data-start=3D"1348" data-end=3D"1368" class=3D"">Loads the fixations,</p=
>
</li>
<li data-start=3D"1369" data-end=3D"1412" class=3D"">
<p data-start=3D"1371" data-end=3D"1412" class=3D"">Converts each fixation =
to raster indices,</p>
</li>
<li data-start=3D"1413" data-end=3D"1461" class=3D"">
<p data-start=3D"1415" data-end=3D"1461" class=3D"">Extracts aligned raster=
 snippets per fixation?</p>
</li>
</ul>
<p data-start=3D"1463" data-end=3D"1576" class=3D"">Let me know how you wan=
t to align or group the rasters (e.g., full fixation duration, fixed 200 ms=
 window, etc.).</p></div></div></div></div></div></div></div></div></articl=
e><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-testi=
d=3D"conversation-turn-5" data-scroll-anchor=3D"false"><h5 class=3D"sr-only=
">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-cont=
ent-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[=
72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-margin)=
"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-conte=
nt-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto fle=
x max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap=
-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div c=
lass=3D"group/conversation-turn relative flex w-full min-w-0 flex-col"><div=
 class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full f=
lex-col grow"><div data-message-author-role=3D"user" data-message-id=3D"f92=
214ac-6fb4-4a0c-87c5-dc26a1dfa7d7" dir=3D"auto" class=3D"min-h-8 text-messa=
ge relative flex w-full flex-col items-end gap-2 text-start break-words whi=
tespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-c=
ol gap-1 empty:hidden items-end rtl:items-start"><div class=3D"relative max=
-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 p=
y-2.5"><div class=3D"whitespace-pre-wrap">I have a csv file preprocessing/p=
reprocessed_raster_data.csv that holds the raster data at msec timesteps. i=
 have another csv file preprocessing/fixations_with_image_index_and_path.cs=
v that has the id,ord_in_trial,start_time,stop_time,trial_id,x,y,image_inde=
x,image_path. write me a python script that takes both csvs, combines the n=
euron activations during the fixation time, and create a color visualizatio=
n that is [neuron, fixations] size. ask me any questions before teh cod</di=
v></div></div></div></div></div></div></div></div></article><article class=
=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversatio=
n-turn-6" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:<=
/h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:-=
-spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--th=
read-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div =
class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full fl=
ex-col grow"><div data-message-author-role=3D"assistant" data-message-id=3D=
"edd9c89b-5a9a-484c-ada8-84a2f25004cc" dir=3D"auto" class=3D"min-h-8 text-m=
essage relative flex w-full flex-col items-end gap-2 text-start break-words=
 whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"g=
pt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]=
"><div class=3D"markdown prose dark:prose-invert w-full break-words dark"><=
p data-start=3D"0" data-end=3D"132" class=3D"">Thanks =E2=80=94 before I wr=
ite the script, here are <strong data-start=3D"45" data-end=3D"77">two impo=
rtant clarifications</strong> I need to make sure it aligns exactly with yo=
ur needs:</p>
<hr data-start=3D"134" data-end=3D"137" class=3D"">
<h3 data-start=3D"139" data-end=3D"213" class=3D"">=E2=9D=931. <strong data=
-start=3D"147" data-end=3D"213">How should we aggregate time into a single =
value per fixation?</strong></h3>
<p data-start=3D"215" data-end=3D"382" class=3D"">Since your raster data is=
 <code data-start=3D"241" data-end=3D"264">[neuron, millisecond]</code>, an=
d fixations span many milliseconds, we need to <strong data-start=3D"315" d=
ata-end=3D"372">compress each fixation into a single value per neuron</stro=
ng>. Options:</p>
<ul data-start=3D"384" data-end=3D"505">
<li data-start=3D"384" data-end=3D"428" class=3D"">
<p data-start=3D"386" data-end=3D"428" class=3D""><code data-start=3D"386" =
data-end=3D"392">mean</code>: Average firing across the fixation</p>
</li>
<li data-start=3D"429" data-end=3D"466" class=3D"">
<p data-start=3D"431" data-end=3D"466" class=3D""><code data-start=3D"431" =
data-end=3D"436">sum</code>: Total spikes during fixation</p>
</li>
<li data-start=3D"467" data-end=3D"505" class=3D"">
<p data-start=3D"469" data-end=3D"505" class=3D""><code data-start=3D"469" =
data-end=3D"474">max</code>: Peak activity during fixation</p>
</li>
</ul>
<p data-start=3D"507" data-end=3D"530" class=3D""><strong data-start=3D"507=
" data-end=3D"530">Which should I use?</strong></p>
<hr data-start=3D"532" data-end=3D"535" class=3D"">
<h3 data-start=3D"537" data-end=3D"652" class=3D"">=E2=9D=932. <strong data=
-start=3D"545" data-end=3D"652">Should we include all fixations, or filter =
by something (e.g., ord_in_trial =3D=3D 0, or only face images)?</strong></=
h3>
<p data-start=3D"654" data-end=3D"737" class=3D"">Your fixation file has fi=
elds like <code data-start=3D"689" data-end=3D"703">ord_in_trial</code> and=
 <code data-start=3D"708" data-end=3D"720">image_path</code>. Do you want t=
o:</p>
<ul data-start=3D"738" data-end=3D"824">
<li data-start=3D"738" data-end=3D"762" class=3D"">
<p data-start=3D"740" data-end=3D"762" class=3D"">Use <strong data-start=3D=
"744" data-end=3D"761">all fixations</strong>?</p>
</li>
<li data-start=3D"763" data-end=3D"824" class=3D"">
<p data-start=3D"765" data-end=3D"824" class=3D"">Or filter (e.g., zeroth f=
ixation only, or specific images)?</p>
</li>
</ul>
<hr data-start=3D"826" data-end=3D"829" class=3D"">
<p data-start=3D"831" data-end=3D"843" class=3D"">Once I know:</p>
<ul data-start=3D"844" data-end=3D"913">
<li data-start=3D"844" data-end=3D"868" class=3D"">
<p data-start=3D"846" data-end=3D"868" class=3D"">the aggregation method</p=
>
</li>
<li data-start=3D"869" data-end=3D"913" class=3D"">
<p data-start=3D"871" data-end=3D"913" class=3D"">whether you want all fixa=
tions or a filter</p>
</li>
</ul>
<p data-start=3D"915" data-end=3D"943" class=3D"">I'll generate a script th=
at:</p>
<ul data-start=3D"944" data-end=3D"1063">
<li data-start=3D"944" data-end=3D"961" class=3D"">
<p data-start=3D"946" data-end=3D"961" class=3D"">Loads both CSVs</p>
</li>
<li data-start=3D"962" data-end=3D"1002" class=3D"">
<p data-start=3D"964" data-end=3D"1002" class=3D"">Aggregates <code data-st=
art=3D"975" data-end=3D"995">[neuron, fixation]</code> matrix</p>
</li>
<li data-start=3D"1003" data-end=3D"1063" class=3D"">
<p data-start=3D"1005" data-end=3D"1063" class=3D"">Plots it with <code dat=
a-start=3D"1019" data-end=3D"1031">matplotlib</code> or <code data-start=3D=
"1035" data-end=3D"1044">seaborn</code> as a color heatmap</p>
</li>
</ul>
<p data-start=3D"1065" data-end=3D"1077" class=3D"">Let me know!</p></div><=
/div></div></div></div></div></div></div></article><article class=3D"text-t=
oken-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-7" =
data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=
=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @=
[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-m=
argin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-=
content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64re=
m]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-=
max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages foc=
us-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation=
-turn relative flex w-full min-w-0 flex-col"><div class=3D"relative flex-co=
l gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-me=
ssage-author-role=3D"user" data-message-id=3D"3925a837-73fb-41dc-815b-25793=
bb18b68" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full fl=
ex-col items-end gap-2 text-start break-words whitespace-normal [.text-mess=
age+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden item=
s-end rtl:items-start"><div class=3D"relative max-w-[var(--user-chat-width,=
70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"white=
space-pre-wrap">1. use the mean
2. use all the fixations

just write the code, i don't expect you to run it
</div></div></div></div></div></div></div></div></div></article><article cl=
ass=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversa=
tion-turn-8" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT sai=
d:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margi=
n:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[-=
-thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div cl=
ass=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-wi=
dth:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(=
--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/=
turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><d=
iv class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full=
 flex-col grow"><div data-message-author-role=3D"assistant" data-message-id=
=3D"4adf04a9-36e2-48f8-8188-970229668eba" dir=3D"auto" class=3D"min-h-8 tex=
t-message relative flex w-full flex-col items-end gap-2 text-start break-wo=
rds whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=
=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-=
[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-words da=
rk"><p data-start=3D"0" data-end=3D"32" class=3D"">Perfect. Here's the full=
 script:</p>
<pre class=3D"overflow-visible!" data-start=3D"34" data-end=3D"1650"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> pandas </span><span><span class=3D"hljs-keyword">as</span></span><span=
> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> numpy =
</span><span><span class=3D"hljs-keyword">as</span></span><span> np
</span><span><span class=3D"hljs-keyword">import</span></span><span> matplo=
tlib.pyplot </span><span><span class=3D"hljs-keyword">as</span></span><span=
> plt
</span><span><span class=3D"hljs-keyword">import</span></span><span> seabor=
n </span><span><span class=3D"hljs-keyword">as</span></span><span> sns

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Load CSVs =3D=3D=3D</=
span></span><span>
raster_df =3D pd.read_csv(</span><span><span class=3D"hljs-string">"preproc=
essing/preprocessed_raster_data.csv"</span></span><span>)
fixations_df =3D pd.read_csv(</span><span><span class=3D"hljs-string">"prep=
rocessing/fixations_with_image_index_and_path.csv"</span></span><span>)

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Extract time vector f=
rom column names =3D=3D=3D</span></span><span>
</span><span><span class=3D"hljs-comment"># Assumes columns are named like =
'time_0.000s', 'time_0.001s', ...</span></span><span>
time_cols =3D [col </span><span><span class=3D"hljs-keyword">for</span></sp=
an><span> col </span><span><span class=3D"hljs-keyword">in</span></span><sp=
an> raster_df.columns </span><span><span class=3D"hljs-keyword">if</span></=
span><span> col.startswith(</span><span><span class=3D"hljs-string">"time_"=
</span></span><span>)]
time_values =3D np.array([</span><span><span class=3D"hljs-built_in">float<=
/span></span><span>(col.split(</span><span><span class=3D"hljs-string">"_"<=
/span></span><span>)[</span><span><span class=3D"hljs-number">1</span></spa=
n><span>][:-</span><span><span class=3D"hljs-number">1</span></span><span>]=
) </span><span><span class=3D"hljs-keyword">for</span></span><span> col </s=
pan><span><span class=3D"hljs-keyword">in</span></span><span> time_cols])  =
</span><span><span class=3D"hljs-comment"># seconds</span></span><span>

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Prepare output matrix=
 =3D=3D=3D</span></span><span>
fixation_matrix =3D []

</span><span><span class=3D"hljs-keyword">for</span></span><span> _, row </=
span><span><span class=3D"hljs-keyword">in</span></span><span> fixations_df=
.iterrows():
    start_time =3D row[</span><span><span class=3D"hljs-string">"start_time=
"</span></span><span>]
    stop_time =3D row[</span><span><span class=3D"hljs-string">"stop_time"<=
/span></span><span>]

    </span><span><span class=3D"hljs-comment"># Get the column indices in r=
aster_df corresponding to the fixation window</span></span><span>
    mask =3D (time_values &gt;=3D start_time) &amp; (time_values &lt;=3D st=
op_time)
    selected_cols =3D np.array(time_cols)[mask]

    </span><span><span class=3D"hljs-comment"># Mean firing rate per neuron=
 for this fixation</span></span><span>
    </span><span><span class=3D"hljs-keyword">if</span></span><span> </span=
><span><span class=3D"hljs-built_in">len</span></span><span>(selected_cols)=
 &gt; </span><span><span class=3D"hljs-number">0</span></span><span>:
        mean_activity =3D raster_df[selected_cols].mean(axis=3D</span><span=
><span class=3D"hljs-number">1</span></span><span>).values  </span><span><s=
pan class=3D"hljs-comment"># shape: [n_neurons]</span></span><span>
    </span><span><span class=3D"hljs-keyword">else</span></span><span>:
        mean_activity =3D np.zeros(</span><span><span class=3D"hljs-built_i=
n">len</span></span><span>(raster_df))  </span><span><span class=3D"hljs-co=
mment"># fallback for empty windows</span></span><span>

    fixation_matrix.append(mean_activity)

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Convert to [neurons x=
 fixations] matrix =3D=3D=3D</span></span><span>
fixation_matrix =3D np.array(fixation_matrix).T  </span><span><span class=
=3D"hljs-comment"># shape: [neurons, fixations]</span></span><span>

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Plot heatmap =3D=3D=
=3D</span></span><span>
plt.figure(figsize=3D(</span><span><span class=3D"hljs-number">15</span></s=
pan><span>, </span><span><span class=3D"hljs-number">8</span></span><span>)=
)
sns.heatmap(fixation_matrix, cmap=3D</span><span><span class=3D"hljs-string=
">'viridis'</span></span><span>, cbar_kws=3D{</span><span><span class=3D"hl=
js-string">'label'</span></span><span>: </span><span><span class=3D"hljs-st=
ring">'Mean Activity'</span></span><span>})
plt.xlabel(</span><span><span class=3D"hljs-string">"Fixation Index"</span>=
</span><span>)
plt.ylabel(</span><span><span class=3D"hljs-string">"Neuron Index"</span></=
span><span>)
plt.title(</span><span><span class=3D"hljs-string">"Neural Activity Across =
Fixations"</span></span><span>)
plt.tight_layout()
plt.show()
</span></span></code></div></div></pre>
<hr data-start=3D"1652" data-end=3D"1655" class=3D"">
<h3 data-start=3D"1657" data-end=3D"1670" class=3D"">=F0=9F=93=8C Notes:</h=
3>
<ul data-start=3D"1671" data-end=3D"1903">
<li data-start=3D"1671" data-end=3D"1736" class=3D"">
<p data-start=3D"1673" data-end=3D"1736" class=3D"">Expects time in seconds=
 in column headers (as in <code data-start=3D"1722" data-end=3D"1735">time_=
0.123s</code>)</p>
</li>
<li data-start=3D"1737" data-end=3D"1807" class=3D"">
<p data-start=3D"1739" data-end=3D"1807" class=3D"">You=E2=80=99ll get a 2D=
 heatmap of <code data-start=3D"1766" data-end=3D"1787">[neuron x fixation]=
</code> using mean activity</p>
</li>
<li data-start=3D"1808" data-end=3D"1903" class=3D"">
<p data-start=3D"1810" data-end=3D"1903" class=3D"">If no raster columns fa=
ll within a fixation window, a row of zeros is added for that fixation</p>
</li>
</ul>
<p data-start=3D"1905" data-end=3D"1987" class=3D"">Let me know if you want=
 to group by trial/image/etc. or export the matrix to file.</p></div></div>=
</div></div></div></div></div></div></article><article class=3D"text-token-=
text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-9" data-=
scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"t=
ext-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37re=
m]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin=
:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-conte=
nt-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[-=
-thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-w=
idth) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-vi=
sible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn=
 relative flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap=
-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message=
-author-role=3D"user" data-message-id=3D"bf5f4295-c888-4857-8bb3-03d03029e6=
41" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-co=
l items-end gap-2 text-start break-words whitespace-normal [.text-message+&=
amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end=
 rtl:items-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)]=
 bg-token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace=
-pre-wrap">unit_id,unit_name,time_0.000s,time_1000.000s,time_2000.000s,time=
_3000.000s,time_4000.000s,

it looks like this
</div></div></div></div></div></div></div></div></div></article><article cl=
ass=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversa=
tion-turn-10" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT sa=
id:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-marg=
in:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[=
--thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div c=
lass=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-w=
idth:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-=
(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group=
/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"=
group/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><=
div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-ful=
l flex-col grow"><div data-message-author-role=3D"assistant" data-message-i=
d=3D"eec32630-a4b3-44ec-bf45-1bc311e4fb3c" dir=3D"auto" class=3D"min-h-8 te=
xt-message relative flex w-full flex-col items-end gap-2 text-start break-w=
ords whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=
=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-=
[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-words da=
rk"><p data-start=3D"0" data-end=3D"216" class=3D"">Thanks =E2=80=94 that c=
onfirms the time resolution is <strong data-start=3D"46" data-end=3D"69">1 =
second per column</strong> (not 1 ms). So instead of 1000 Hz raster data, y=
ou=E2=80=99re working with <strong data-start=3D"137" data-end=3D"175">1 Hz=
 downsampled mean firing rates</strong>, where each column is <strong data-=
start=3D"198" data-end=3D"215">1-second long</strong>.</p>
<hr data-start=3D"218" data-end=3D"221" class=3D"">
<p data-start=3D"223" data-end=3D"271" class=3D"">Here=E2=80=99s the update=
d script to handle that format:</p>
<pre class=3D"overflow-visible!" data-start=3D"273" data-end=3D"1821"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> pandas </span><span><span class=3D"hljs-keyword">as</span></span><span=
> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> numpy =
</span><span><span class=3D"hljs-keyword">as</span></span><span> np
</span><span><span class=3D"hljs-keyword">import</span></span><span> matplo=
tlib.pyplot </span><span><span class=3D"hljs-keyword">as</span></span><span=
> plt
</span><span><span class=3D"hljs-keyword">import</span></span><span> seabor=
n </span><span><span class=3D"hljs-keyword">as</span></span><span> sns

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Load CSVs =3D=3D=3D</=
span></span><span>
raster_df =3D pd.read_csv(</span><span><span class=3D"hljs-string">"preproc=
essing/preprocessed_raster_data.csv"</span></span><span>)
fixations_df =3D pd.read_csv(</span><span><span class=3D"hljs-string">"prep=
rocessing/fixations_with_image_index_and_path.csv"</span></span><span>)

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Parse time columns (a=
ssumes time_X.000s format) =3D=3D=3D</span></span><span>
time_cols =3D [col </span><span><span class=3D"hljs-keyword">for</span></sp=
an><span> col </span><span><span class=3D"hljs-keyword">in</span></span><sp=
an> raster_df.columns </span><span><span class=3D"hljs-keyword">if</span></=
span><span> col.startswith(</span><span><span class=3D"hljs-string">"time_"=
</span></span><span>)]
time_values =3D np.array([</span><span><span class=3D"hljs-built_in">float<=
/span></span><span>(col.split(</span><span><span class=3D"hljs-string">"_"<=
/span></span><span>)[</span><span><span class=3D"hljs-number">1</span></spa=
n><span>][:-</span><span><span class=3D"hljs-number">1</span></span><span>]=
) </span><span><span class=3D"hljs-keyword">for</span></span><span> col </s=
pan><span><span class=3D"hljs-keyword">in</span></span><span> time_cols])  =
</span><span><span class=3D"hljs-comment"># in seconds</span></span><span>

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Prepare output matrix=
 =3D=3D=3D</span></span><span>
fixation_matrix =3D []

</span><span><span class=3D"hljs-keyword">for</span></span><span> _, fixati=
on </span><span><span class=3D"hljs-keyword">in</span></span><span> fixatio=
ns_df.iterrows():
    start_time =3D fixation[</span><span><span class=3D"hljs-string">"start=
_time"</span></span><span>]
    stop_time =3D fixation[</span><span><span class=3D"hljs-string">"stop_t=
ime"</span></span><span>]

    </span><span><span class=3D"hljs-comment"># Select raster columns withi=
n the fixation window</span></span><span>
    mask =3D (time_values &gt;=3D start_time) &amp; (time_values &lt;=3D st=
op_time)
    selected_cols =3D np.array(time_cols)[mask]

    </span><span><span class=3D"hljs-comment"># If at least one matching co=
lumn, compute mean</span></span><span>
    </span><span><span class=3D"hljs-keyword">if</span></span><span> </span=
><span><span class=3D"hljs-built_in">len</span></span><span>(selected_cols)=
 &gt; </span><span><span class=3D"hljs-number">0</span></span><span>:
        mean_firing =3D raster_df[selected_cols].mean(axis=3D</span><span><=
span class=3D"hljs-number">1</span></span><span>).values
    </span><span><span class=3D"hljs-keyword">else</span></span><span>:
        mean_firing =3D np.zeros(</span><span><span class=3D"hljs-built_in"=
>len</span></span><span>(raster_df))  </span><span><span class=3D"hljs-comm=
ent"># fallback if no overlap</span></span><span>

    fixation_matrix.append(mean_firing)

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Convert to numpy arra=
y and transpose to [neuron x fixation] =3D=3D=3D</span></span><span>
fixation_matrix =3D np.array(fixation_matrix).T

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Plot heatmap =3D=3D=
=3D</span></span><span>
plt.figure(figsize=3D(</span><span><span class=3D"hljs-number">15</span></s=
pan><span>, </span><span><span class=3D"hljs-number">8</span></span><span>)=
)
sns.heatmap(fixation_matrix, cmap=3D</span><span><span class=3D"hljs-string=
">'viridis'</span></span><span>, cbar_kws=3D{</span><span><span class=3D"hl=
js-string">'label'</span></span><span>: </span><span><span class=3D"hljs-st=
ring">'Mean Firing Rate (Hz)'</span></span><span>})
plt.xlabel(</span><span><span class=3D"hljs-string">"Fixation Index"</span>=
</span><span>)
plt.ylabel(</span><span><span class=3D"hljs-string">"Neuron Index"</span></=
span><span>)
plt.title(</span><span><span class=3D"hljs-string">"Neuron Activity Across =
Fixations (Mean within fixation window)"</span></span><span>)
plt.tight_layout()
plt.show()
</span></span></code></div></div></pre>
<hr data-start=3D"1823" data-end=3D"1826" class=3D"">
<h3 data-start=3D"1828" data-end=3D"1851" class=3D"">=E2=9C=85 Summary of F=
ixes:</h3>
<ul data-start=3D"1852" data-end=3D"2056">
<li data-start=3D"1852" data-end=3D"1882" class=3D"">
<p data-start=3D"1854" data-end=3D"1882" class=3D"">Works with <strong data=
-start=3D"1865" data-end=3D"1882">1-second bins</strong></p>
</li>
<li data-start=3D"1883" data-end=3D"2000" class=3D"">
<p data-start=3D"1885" data-end=3D"2000" class=3D"">Aggregates neuron activ=
ity during fixation based on which <code data-start=3D"1943" data-end=3D"19=
56">time_X.000s</code> bins overlap with <code data-start=3D"1975" data-end=
=3D"2000">[start_time, stop_time]</code></p>
</li>
<li data-start=3D"2001" data-end=3D"2056" class=3D"">
<p data-start=3D"2003" data-end=3D"2056" class=3D"">Fallbacks to zeros if n=
o time bins fall in a fixation</p>
</li>
</ul>
<p data-start=3D"2058" data-end=3D"2085" class=3D"">Let me know if you want=
 to:</p>
<ul data-start=3D"2086" data-end=3D"2200" data-is-last-node=3D"" data-is-on=
ly-node=3D"">
<li data-start=3D"2086" data-end=3D"2115" class=3D"">
<p data-start=3D"2088" data-end=3D"2115" class=3D"">Interpolate finer time =
bins</p>
</li>
<li data-start=3D"2116" data-end=3D"2155" class=3D"">
<p data-start=3D"2118" data-end=3D"2155" class=3D"">Normalize across fixati=
ons or neurons</p>
</li>
<li data-start=3D"2156" data-end=3D"2200" class=3D"">
<p data-start=3D"2158" data-end=3D"2200" class=3D"">Save the matrix to a <c=
ode data-start=3D"2179" data-end=3D"2185">.csv</code> or <code data-start=
=3D"2189" data-end=3D"2195">.npy</code> file</p>
</li>
</ul></div></div></div></div></div></div></div></div></article><article cla=
ss=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversat=
ion-turn-11" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</=
h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--=
spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thr=
ead-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"re=
lative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow=
"><div data-message-author-role=3D"user" data-message-id=3D"3baa8ea2-afa3-4=
8ea-9321-ae137b811f72" dir=3D"auto" class=3D"min-h-8 text-message relative =
flex w-full flex-col items-end gap-2 text-start break-words whitespace-norm=
al [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 emp=
ty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[var(--us=
er-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div =
class=3D"whitespace-pre-wrap">can you add tqdm so i can see the progress an=
d save the image to the same folder that this file is in</div></div></div><=
/div></div></div></div></div></div></article><article class=3D"text-token-t=
ext-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-12" data-=
scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=
=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @=
[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-m=
argin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-=
content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64re=
m]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-=
max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages foc=
us-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation=
-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"relat=
ive flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><=
div data-message-author-role=3D"assistant" data-message-id=3D"5d31a085-345b=
-4578-b0c6-e8681e40a69e" dir=3D"auto" class=3D"min-h-8 text-message relativ=
e flex w-full flex-col items-end gap-2 text-start break-words whitespace-no=
rmal [.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div cl=
ass=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=
=3D"markdown prose dark:prose-invert w-full break-words dark"><p data-start=
=3D"0" data-end=3D"130" class=3D"">Absolutely =E2=80=94 here's the final ve=
rsion with <code data-start=3D"43" data-end=3D"49">tqdm</code> progress tra=
cking and saving the heatmap image to the same folder as the script:</p>
<pre class=3D"overflow-visible!" data-start=3D"132" data-end=3D"1886"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> pandas </span><span><span class=3D"hljs-keyword">as</span></span><span=
> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> numpy =
</span><span><span class=3D"hljs-keyword">as</span></span><span> np
</span><span><span class=3D"hljs-keyword">import</span></span><span> matplo=
tlib.pyplot </span><span><span class=3D"hljs-keyword">as</span></span><span=
> plt
</span><span><span class=3D"hljs-keyword">import</span></span><span> seabor=
n </span><span><span class=3D"hljs-keyword">as</span></span><span> sns
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span><span><span class=3D"hljs-keyword">import</span></span><span> os

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Load CSVs =3D=3D=3D</=
span></span><span>
raster_path =3D </span><span><span class=3D"hljs-string">"preprocessing/pre=
processed_raster_data.csv"</span></span><span>
fixations_path =3D </span><span><span class=3D"hljs-string">"preprocessing/=
fixations_with_image_index_and_path.csv"</span></span><span>

raster_df =3D pd.read_csv(raster_path)
fixations_df =3D pd.read_csv(fixations_path)

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Parse time columns =
=3D=3D=3D</span></span><span>
time_cols =3D [col </span><span><span class=3D"hljs-keyword">for</span></sp=
an><span> col </span><span><span class=3D"hljs-keyword">in</span></span><sp=
an> raster_df.columns </span><span><span class=3D"hljs-keyword">if</span></=
span><span> col.startswith(</span><span><span class=3D"hljs-string">"time_"=
</span></span><span>)]
time_values =3D np.array([</span><span><span class=3D"hljs-built_in">float<=
/span></span><span>(col.split(</span><span><span class=3D"hljs-string">"_"<=
/span></span><span>)[</span><span><span class=3D"hljs-number">1</span></spa=
n><span>][:-</span><span><span class=3D"hljs-number">1</span></span><span>]=
) </span><span><span class=3D"hljs-keyword">for</span></span><span> col </s=
pan><span><span class=3D"hljs-keyword">in</span></span><span> time_cols])  =
</span><span><span class=3D"hljs-comment"># in seconds</span></span><span>

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Prepare output matrix=
 =3D=3D=3D</span></span><span>
fixation_matrix =3D []

</span><span><span class=3D"hljs-built_in">print</span></span><span>(</span=
><span><span class=3D"hljs-string">"Processing fixations..."</span></span><=
span>)
</span><span><span class=3D"hljs-keyword">for</span></span><span> _, fixati=
on </span><span><span class=3D"hljs-keyword">in</span></span><span> tqdm(fi=
xations_df.iterrows(), total=3D</span><span><span class=3D"hljs-built_in">l=
en</span></span><span>(fixations_df)):
    start_time =3D fixation[</span><span><span class=3D"hljs-string">"start=
_time"</span></span><span>]
    stop_time =3D fixation[</span><span><span class=3D"hljs-string">"stop_t=
ime"</span></span><span>]

    </span><span><span class=3D"hljs-comment"># Find time bins that overlap=
 with the fixation window</span></span><span>
    mask =3D (time_values &gt;=3D start_time) &amp; (time_values &lt;=3D st=
op_time)
    selected_cols =3D np.array(time_cols)[mask]

    </span><span><span class=3D"hljs-keyword">if</span></span><span> </span=
><span><span class=3D"hljs-built_in">len</span></span><span>(selected_cols)=
 &gt; </span><span><span class=3D"hljs-number">0</span></span><span>:
        mean_firing =3D raster_df[selected_cols].mean(axis=3D</span><span><=
span class=3D"hljs-number">1</span></span><span>).values
    </span><span><span class=3D"hljs-keyword">else</span></span><span>:
        mean_firing =3D np.zeros(</span><span><span class=3D"hljs-built_in"=
>len</span></span><span>(raster_df))

    fixation_matrix.append(mean_firing)

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Convert and transpose=
 =3D=3D=3D</span></span><span>
fixation_matrix =3D np.array(fixation_matrix).T  </span><span><span class=
=3D"hljs-comment"># shape: [neurons, fixations]</span></span><span>

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Plot and save heatmap=
 =3D=3D=3D</span></span><span>
plt.figure(figsize=3D(</span><span><span class=3D"hljs-number">15</span></s=
pan><span>, </span><span><span class=3D"hljs-number">8</span></span><span>)=
)
sns.heatmap(fixation_matrix, cmap=3D</span><span><span class=3D"hljs-string=
">'viridis'</span></span><span>, cbar_kws=3D{</span><span><span class=3D"hl=
js-string">'label'</span></span><span>: </span><span><span class=3D"hljs-st=
ring">'Mean Firing Rate (Hz)'</span></span><span>})
plt.xlabel(</span><span><span class=3D"hljs-string">"Fixation Index"</span>=
</span><span>)
plt.ylabel(</span><span><span class=3D"hljs-string">"Neuron Index"</span></=
span><span>)
plt.title(</span><span><span class=3D"hljs-string">"Neuron Activity Across =
Fixations"</span></span><span>)
plt.tight_layout()

</span><span><span class=3D"hljs-comment"># Save image to same folder as sc=
ript</span></span><span>
output_path =3D os.path.join(os.path.dirname(__file__), </span><span><span =
class=3D"hljs-string">"neural_fixation_heatmap.png"</span></span><span>)
plt.savefig(output_path)
</span><span><span class=3D"hljs-built_in">print</span></span><span>(</span=
><span><span class=3D"hljs-string">f"=E2=9C=85 Heatmap saved to: <span clas=
s=3D"hljs-subst">{output_path}</span></span></span><span>")
</span></span></code></div></div></pre>
<hr data-start=3D"1888" data-end=3D"1891" class=3D"">
<h3 data-start=3D"1893" data-end=3D"1914" class=3D"">=E2=9C=85 Features Add=
ed:</h3>
<ul data-start=3D"1915" data-end=3D"2042">
<li data-start=3D"1915" data-end=3D"1952" class=3D"">
<p data-start=3D"1917" data-end=3D"1952" class=3D""><code data-start=3D"191=
7" data-end=3D"1923">tqdm</code> to track fixation processing</p>
</li>
<li data-start=3D"1953" data-end=3D"2042" class=3D"">
<p data-start=3D"1955" data-end=3D"2042" class=3D"">Image saved as <code da=
ta-start=3D"1970" data-end=3D"1999">neural_fixation_heatmap.png</code> in t=
he script's directory using <code data-start=3D"2032" data-end=3D"2042">__f=
ile__</code></p>
</li>
</ul>
<p data-start=3D"2044" data-end=3D"2102" class=3D"">Let me know if you also=
 want to save the matrix as a file!</p></div></div></div></div></div></div>=
</div></div></article><article class=3D"text-token-text-primary w-full" dir=
=3D"auto" data-testid=3D"conversation-turn-13" data-scroll-anchor=3D"false"=
><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-aut=
o py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-ma=
rgin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--t=
hread-content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[3=
4rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-wid=
th:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base =
gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" t=
abindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-full m=
in-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=
=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"user" d=
ata-message-id=3D"b392f43e-f439-445c-8812-e231515d527d" dir=3D"auto" class=
=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 text=
-start break-words whitespace-normal [.text-message+&amp;]:mt-5"><div class=
=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><div=
 class=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-surf=
ace rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">DtypeWarnin=
g: Columns (1) have mixed types. Specify dtype option on import or set low_=
memory=3DFalse.</div></div></div></div></div></div></div></div></div></arti=
cle><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-tes=
tid=3D"conversation-turn-14" data-scroll-anchor=3D"false"><h6 class=3D"sr-o=
nly">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thre=
ad-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing=
(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-=
margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--threa=
d-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-a=
uto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5=
 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"=
><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-co=
l agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D=
"flex max-w-full flex-col grow"><div data-message-author-role=3D"assistant"=
 data-message-id=3D"ebf6327d-0165-439a-941a-5f245218f1ed" dir=3D"auto" clas=
s=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 tex=
t-start break-words whitespace-normal [.text-message+&amp;]:mt-5" data-mess=
age-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hi=
dden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full =
break-words dark"><p data-start=3D"0" data-end=3D"261" class=3D"">That warn=
ing means column 1 (likely <code data-start=3D"36" data-end=3D"49">"unit_na=
me"</code>) in your raster CSV has <strong data-start=3D"74" data-end=3D"94=
">mixed data types</strong> =E2=80=94 for example, some values might be str=
ings and others are <code data-start=3D"154" data-end=3D"159">NaN</code>, n=
umbers, or even byte strings. This won=E2=80=99t usually break the code, bu=
t it=E2=80=99s good to make it explicit.</p>
<hr data-start=3D"263" data-end=3D"266" class=3D"">
<h3 data-start=3D"268" data-end=3D"316" class=3D"">=E2=9C=85 Fix: Explicitl=
y set column types on import</h3>
<p data-start=3D"318" data-end=3D"410" class=3D"">Since <code data-start=3D=
"324" data-end=3D"335">"unit_id"</code> is numeric and <code data-start=3D"=
351" data-end=3D"364">"unit_name"</code> is string, you can fix the warning=
 like this:</p>
<pre class=3D"overflow-visible!" data-start=3D"412" data-end=3D"536"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>raster_df =3D pd.read_csv(
    raster_path,
    dtype=3D{</span><span><span class=3D"hljs-string">"unit_id"</span></spa=
n><span>: </span><span><span class=3D"hljs-built_in">int</span></span><span=
>, </span><span><span class=3D"hljs-string">"unit_name"</span></span><span>=
: </span><span><span class=3D"hljs-built_in">str</span></span><span>},
    low_memory=3D</span><span><span class=3D"hljs-literal">False</span></sp=
an><span>
)
</span></span></code></div></div></pre>
<p data-start=3D"538" data-end=3D"627" class=3D"">Just swap this into the s=
cript where <code data-start=3D"575" data-end=3D"586">raster_df</code> is l=
oaded. The warning should disappear.</p>
<p data-start=3D"629" data-end=3D"790" class=3D"">Let me know if you want t=
o also exclude <code data-start=3D"669" data-end=3D"678">unit_id</code> and=
 <code data-start=3D"683" data-end=3D"694">unit_name</code> from processing=
 entirely (they aren't used in the heatmap matrix unless you want labeled r=
ows).</p></div></div></div></div></div></div></div></div></article><article=
 class=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conve=
rsation-turn-15" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You sai=
d:</h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margi=
n:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[-=
-thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div cl=
ass=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-wi=
dth:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(=
--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/=
turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D=
"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col g=
row"><div data-message-author-role=3D"user" data-message-id=3D"31efae2d-0e4=
4-420e-9ebb-e23085e5d4ed" dir=3D"auto" class=3D"min-h-8 text-message relati=
ve flex w-full flex-col items-end gap-2 text-start break-words whitespace-n=
ormal [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 =
empty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[var(-=
-user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><d=
iv class=3D"whitespace-pre-wrap">import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from tqdm import tqdm
import os

# =3D=3D=3D Load CSVs =3D=3D=3D
raster_path =3D "preprocessing/preprocessed_raster_data.csv"
fixations_path =3D "preprocessing/fixations_with_image_index_and_path.csv"

raster_df =3D pd.read_csv(
    raster_path,
    dtype=3D{"unit_id": int, "unit_name": str},
    low_memory=3DFalse
)

fixations_df =3D pd.read_csv(fixations_path)

# =3D=3D=3D Parse time columns =3D=3D=3D
time_cols =3D [col for col in raster_df.columns if col.startswith("time_")]
time_values =3D np.array([float(col.split("_")[1][:-1]) for col in time_col=
s])  # in seconds

# =3D=3D=3D Prepare output matrix =3D=3D=3D
fixation_matrix =3D []

print("Processing fixations...")
for _, fixation in tqdm(fixations_df.iterrows(), total=3Dlen(fixations_df))=
:
    start_time =3D fixation["start_time"]
    stop_time =3D fixation["stop_time"]

    # Find time bins that overlap with the fixation window
    mask =3D (time_values &gt;=3D start_time) &amp; (time_values &lt;=3D st=
op_time)
    selected_cols =3D np.array(time_cols)[mask]

    if len(selected_cols) &gt; 0:
        mean_firing =3D raster_df[selected_cols].mean(axis=3D1).values
    else:
        mean_firing =3D np.zeros(len(raster_df))

    fixation_matrix.append(mean_firing)

# =3D=3D=3D Convert and transpose =3D=3D=3D
fixation_matrix =3D np.array(fixation_matrix).T  # shape: [neurons, fixatio=
ns]

# =3D=3D=3D Plot and save heatmap =3D=3D=3D
plt.figure(figsize=3D(15, 8))
sns.heatmap(fixation_matrix, cmap=3D'viridis', cbar_kws=3D{'label': 'Mean F=
iring Rate (Hz)'})
plt.xlabel("Fixation Index")
plt.ylabel("Neuron Index")
plt.title("Neuron Activity Across Fixations")
plt.tight_layout()

# Save image to same folder as script
output_path =3D os.path.join(os.path.dirname(__file__), "neural_fixation_he=
atmap.png")
plt.savefig(output_path)
print(f"=E2=9C=85 Heatmap saved to: {output_path}")

Can you change this so that each neuron fixation activation is relative to =
each other. so i think that means take the sum and then divide by the max</=
div></div></div></div></div></div></div></div></div></article><article clas=
s=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversati=
on-turn-16" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said=
:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin=
:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--=
thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div cla=
ss=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-wid=
th:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(-=
-thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/t=
urn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"gr=
oup/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><di=
v class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full =
flex-col grow"><div data-message-author-role=3D"assistant" data-message-id=
=3D"11c791ee-4a02-40c5-bcc8-3aa6364518e5" dir=3D"auto" class=3D"min-h-8 tex=
t-message relative flex w-full flex-col items-end gap-2 text-start break-wo=
rds whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=
=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-=
[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-words da=
rk"><p data-start=3D"0" data-end=3D"134" class=3D"">Absolutely =E2=80=94 if=
 you want to normalize each neuron's activation across fixations <strong da=
ta-start=3D"80" data-end=3D"107">relative to its own max</strong>, you can =
do the following:</p>
<ol data-start=3D"136" data-end=3D"259">
<li data-start=3D"136" data-end=3D"188" class=3D"">
<p data-start=3D"139" data-end=3D"188" class=3D"">After building the <code =
data-start=3D"158" data-end=3D"180">[neurons, fixations]</code> matrix,</p>
</li>
<li data-start=3D"189" data-end=3D"259" class=3D"">
<p data-start=3D"192" data-end=3D"259" class=3D"">Normalize <strong data-st=
art=3D"202" data-end=3D"214">each row</strong> (i.e., each neuron's values)=
 by its maximum.</p>
</li>
</ol>
<p data-start=3D"261" data-end=3D"316" class=3D"">Here's your updated scrip=
t with just that change added:</p>
<hr data-start=3D"318" data-end=3D"321" class=3D"">
<pre class=3D"overflow-visible!" data-start=3D"323" data-end=3D"2352"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> pandas </span><span><span class=3D"hljs-keyword">as</span></span><span=
> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> numpy =
</span><span><span class=3D"hljs-keyword">as</span></span><span> np
</span><span><span class=3D"hljs-keyword">import</span></span><span> matplo=
tlib.pyplot </span><span><span class=3D"hljs-keyword">as</span></span><span=
> plt
</span><span><span class=3D"hljs-keyword">import</span></span><span> seabor=
n </span><span><span class=3D"hljs-keyword">as</span></span><span> sns
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span><span><span class=3D"hljs-keyword">import</span></span><span> os

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Load CSVs =3D=3D=3D</=
span></span><span>
raster_path =3D </span><span><span class=3D"hljs-string">"preprocessing/pre=
processed_raster_data.csv"</span></span><span>
fixations_path =3D </span><span><span class=3D"hljs-string">"preprocessing/=
fixations_with_image_index_and_path.csv"</span></span><span>

raster_df =3D pd.read_csv(
    raster_path,
    dtype=3D{</span><span><span class=3D"hljs-string">"unit_id"</span></spa=
n><span>: </span><span><span class=3D"hljs-built_in">int</span></span><span=
>, </span><span><span class=3D"hljs-string">"unit_name"</span></span><span>=
: </span><span><span class=3D"hljs-built_in">str</span></span><span>},
    low_memory=3D</span><span><span class=3D"hljs-literal">False</span></sp=
an><span>
)

fixations_df =3D pd.read_csv(fixations_path)

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Parse time columns =
=3D=3D=3D</span></span><span>
time_cols =3D [col </span><span><span class=3D"hljs-keyword">for</span></sp=
an><span> col </span><span><span class=3D"hljs-keyword">in</span></span><sp=
an> raster_df.columns </span><span><span class=3D"hljs-keyword">if</span></=
span><span> col.startswith(</span><span><span class=3D"hljs-string">"time_"=
</span></span><span>)]
time_values =3D np.array([</span><span><span class=3D"hljs-built_in">float<=
/span></span><span>(col.split(</span><span><span class=3D"hljs-string">"_"<=
/span></span><span>)[</span><span><span class=3D"hljs-number">1</span></spa=
n><span>][:-</span><span><span class=3D"hljs-number">1</span></span><span>]=
) </span><span><span class=3D"hljs-keyword">for</span></span><span> col </s=
pan><span><span class=3D"hljs-keyword">in</span></span><span> time_cols])  =
</span><span><span class=3D"hljs-comment"># in seconds</span></span><span>

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Prepare output matrix=
 =3D=3D=3D</span></span><span>
fixation_matrix =3D []

</span><span><span class=3D"hljs-built_in">print</span></span><span>(</span=
><span><span class=3D"hljs-string">"Processing fixations..."</span></span><=
span>)
</span><span><span class=3D"hljs-keyword">for</span></span><span> _, fixati=
on </span><span><span class=3D"hljs-keyword">in</span></span><span> tqdm(fi=
xations_df.iterrows(), total=3D</span><span><span class=3D"hljs-built_in">l=
en</span></span><span>(fixations_df)):
    start_time =3D fixation[</span><span><span class=3D"hljs-string">"start=
_time"</span></span><span>]
    stop_time =3D fixation[</span><span><span class=3D"hljs-string">"stop_t=
ime"</span></span><span>]

    </span><span><span class=3D"hljs-comment"># Find time bins that overlap=
 with the fixation window</span></span><span>
    mask =3D (time_values &gt;=3D start_time) &amp; (time_values &lt;=3D st=
op_time)
    selected_cols =3D np.array(time_cols)[mask]

    </span><span><span class=3D"hljs-keyword">if</span></span><span> </span=
><span><span class=3D"hljs-built_in">len</span></span><span>(selected_cols)=
 &gt; </span><span><span class=3D"hljs-number">0</span></span><span>:
        mean_firing =3D raster_df[selected_cols].mean(axis=3D</span><span><=
span class=3D"hljs-number">1</span></span><span>).values
    </span><span><span class=3D"hljs-keyword">else</span></span><span>:
        mean_firing =3D np.zeros(</span><span><span class=3D"hljs-built_in"=
>len</span></span><span>(raster_df))

    fixation_matrix.append(mean_firing)

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Convert and transpose=
 =3D=3D=3D</span></span><span>
fixation_matrix =3D np.array(fixation_matrix).T  </span><span><span class=
=3D"hljs-comment"># shape: [neurons, fixations]</span></span><span>

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Normalize each neuron=
 by its own max =3D=3D=3D</span></span><span>
row_max =3D fixation_matrix.</span><span><span class=3D"hljs-built_in">max<=
/span></span><span>(axis=3D</span><span><span class=3D"hljs-number">1</span=
></span><span>, keepdims=3D</span><span><span class=3D"hljs-literal">True</=
span></span><span>)
normalized_matrix =3D fixation_matrix / (row_max + </span><span><span class=
=3D"hljs-number">1e-8</span></span><span>)  </span><span><span class=3D"hlj=
s-comment"># avoid div-by-zero</span></span><span>

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Plot and save heatmap=
 =3D=3D=3D</span></span><span>
plt.figure(figsize=3D(</span><span><span class=3D"hljs-number">15</span></s=
pan><span>, </span><span><span class=3D"hljs-number">8</span></span><span>)=
)
sns.heatmap(normalized_matrix, cmap=3D</span><span><span class=3D"hljs-stri=
ng">'viridis'</span></span><span>, cbar_kws=3D{</span><span><span class=3D"=
hljs-string">'label'</span></span><span>: </span><span><span class=3D"hljs-=
string">'Normalized Activity'</span></span><span>})
plt.xlabel(</span><span><span class=3D"hljs-string">"Fixation Index"</span>=
</span><span>)
plt.ylabel(</span><span><span class=3D"hljs-string">"Neuron Index"</span></=
span><span>)
plt.title(</span><span><span class=3D"hljs-string">"Neuron Activity Across =
Fixations (Normalized by neuron)"</span></span><span>)
plt.tight_layout()

</span><span><span class=3D"hljs-comment"># Save image to same folder as sc=
ript</span></span><span>
output_path =3D os.path.join(os.path.dirname(__file__), </span><span><span =
class=3D"hljs-string">"neural_fixation_heatmap.png"</span></span><span>)
plt.savefig(output_path)
</span><span><span class=3D"hljs-built_in">print</span></span><span>(</span=
><span><span class=3D"hljs-string">f"=E2=9C=85 Heatmap saved to: <span clas=
s=3D"hljs-subst">{output_path}</span></span></span><span>")
</span></span></code></div></div></pre>
<hr data-start=3D"2354" data-end=3D"2357" class=3D"">
<p data-start=3D"2359" data-end=3D"2524" class=3D"">This will show you how =
active each neuron was during each fixation, <strong data-start=3D"2427" da=
ta-end=3D"2470">scaled relative to its own max activity</strong>, so you ca=
n visually compare patterns across neurons.</p>
<p data-start=3D"2526" data-end=3D"2637" class=3D"">Let me know if you=E2=
=80=99d also like a z-score version (mean subtraction &amp; std normalizati=
on) or per-trial breakdown!</p></div></div></div></div></div></div></div></=
div></article><article class=3D"text-token-text-primary w-full" dir=3D"auto=
" data-testid=3D"conversation-turn-17" data-scroll-anchor=3D"false"><h5 cla=
ss=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [=
--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--s=
pacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-co=
ntent-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[-=
-thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem=
] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md=
:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=
=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0 =
flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"fle=
x max-w-full flex-col grow"><div data-message-author-role=3D"user" data-mes=
sage-id=3D"3208775d-68c4-4c49-bccd-95e6918b2840" dir=3D"auto" class=3D"min-=
h-8 text-message relative flex w-full flex-col items-end gap-2 text-start b=
reak-words whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex=
 w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><div class=
=3D"relative max-w-[var(--user-chat-width,70%)] bg-token-message-surface ro=
unded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">instead of normal=
izing across all fixations can you do it by fixation</div></div></div></div=
></div></div></div></div></div></article><article class=3D"text-token-text-=
primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-18" data-scro=
ll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"t=
ext-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37re=
m]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin=
:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-conte=
nt-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[-=
-thread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-w=
idth) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-vi=
sible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn=
 relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"relative f=
lex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"><div d=
ata-message-author-role=3D"assistant" data-message-id=3D"1033f8f4-23cc-41b6=
-a324-febfcdda7ec2" dir=3D"auto" class=3D"min-h-8 text-message relative fle=
x w-full flex-col items-end gap-2 text-start break-words whitespace-normal =
[.text-message+&amp;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=
=3D"flex w-full flex-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"m=
arkdown prose dark:prose-invert w-full break-words dark"><p data-start=3D"0=
" data-end=3D"148" class=3D"">Yep =E2=80=94 if you want to <strong data-sta=
rt=3D"21" data-end=3D"62">normalize each fixation independently</strong>, t=
hen you're normalizing <strong data-start=3D"88" data-end=3D"103">each colu=
mn</strong> (i.e. across neurons), not rows. That means:</p>
<ul data-start=3D"150" data-end=3D"254">
<li data-start=3D"150" data-end=3D"254" class=3D"">
<p data-start=3D"152" data-end=3D"254" class=3D"">For each fixation (column=
), divide all neuron values by the maximum neuron value <strong data-start=
=3D"233" data-end=3D"253">in that fixation</strong>.</p>
</li>
</ul>
<hr data-start=3D"256" data-end=3D"259" class=3D"">
<p data-start=3D"261" data-end=3D"301" class=3D"">Here=E2=80=99s the modifi=
ed part of your script:</p>
<pre class=3D"overflow-visible!" data-start=3D"303" data-end=3D"508"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-comment"># =3D=3D=3D Normalize =
each fixation (column-wise) by its own max =3D=3D=3D</span></span><span>
col_max =3D fixation_matrix.</span><span><span class=3D"hljs-built_in">max<=
/span></span><span>(axis=3D</span><span><span class=3D"hljs-number">0</span=
></span><span>, keepdims=3D</span><span><span class=3D"hljs-literal">True</=
span></span><span>)
normalized_matrix =3D fixation_matrix / (col_max + </span><span><span class=
=3D"hljs-number">1e-8</span></span><span>)  </span><span><span class=3D"hlj=
s-comment"># avoid div-by-zero</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"510" data-end=3D"555" class=3D"">And here=E2=80=99s the fu=
ll script with that applied:</p>
<hr data-start=3D"557" data-end=3D"560" class=3D"">
<pre class=3D"overflow-visible!" data-start=3D"562" data-end=3D"2623"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> pandas </span><span><span class=3D"hljs-keyword">as</span></span><span=
> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> numpy =
</span><span><span class=3D"hljs-keyword">as</span></span><span> np
</span><span><span class=3D"hljs-keyword">import</span></span><span> matplo=
tlib.pyplot </span><span><span class=3D"hljs-keyword">as</span></span><span=
> plt
</span><span><span class=3D"hljs-keyword">import</span></span><span> seabor=
n </span><span><span class=3D"hljs-keyword">as</span></span><span> sns
</span><span><span class=3D"hljs-keyword">from</span></span><span> tqdm </s=
pan><span><span class=3D"hljs-keyword">import</span></span><span> tqdm
</span><span><span class=3D"hljs-keyword">import</span></span><span> os

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Load CSVs =3D=3D=3D</=
span></span><span>
raster_path =3D </span><span><span class=3D"hljs-string">"preprocessing/pre=
processed_raster_data.csv"</span></span><span>
fixations_path =3D </span><span><span class=3D"hljs-string">"preprocessing/=
fixations_with_image_index_and_path.csv"</span></span><span>

raster_df =3D pd.read_csv(
    raster_path,
    dtype=3D{</span><span><span class=3D"hljs-string">"unit_id"</span></spa=
n><span>: </span><span><span class=3D"hljs-built_in">int</span></span><span=
>, </span><span><span class=3D"hljs-string">"unit_name"</span></span><span>=
: </span><span><span class=3D"hljs-built_in">str</span></span><span>},
    low_memory=3D</span><span><span class=3D"hljs-literal">False</span></sp=
an><span>
)

fixations_df =3D pd.read_csv(fixations_path)

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Parse time columns =
=3D=3D=3D</span></span><span>
time_cols =3D [col </span><span><span class=3D"hljs-keyword">for</span></sp=
an><span> col </span><span><span class=3D"hljs-keyword">in</span></span><sp=
an> raster_df.columns </span><span><span class=3D"hljs-keyword">if</span></=
span><span> col.startswith(</span><span><span class=3D"hljs-string">"time_"=
</span></span><span>)]
time_values =3D np.array([</span><span><span class=3D"hljs-built_in">float<=
/span></span><span>(col.split(</span><span><span class=3D"hljs-string">"_"<=
/span></span><span>)[</span><span><span class=3D"hljs-number">1</span></spa=
n><span>][:-</span><span><span class=3D"hljs-number">1</span></span><span>]=
) </span><span><span class=3D"hljs-keyword">for</span></span><span> col </s=
pan><span><span class=3D"hljs-keyword">in</span></span><span> time_cols])  =
</span><span><span class=3D"hljs-comment"># in seconds</span></span><span>

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Prepare output matrix=
 =3D=3D=3D</span></span><span>
fixation_matrix =3D []

</span><span><span class=3D"hljs-built_in">print</span></span><span>(</span=
><span><span class=3D"hljs-string">"Processing fixations..."</span></span><=
span>)
</span><span><span class=3D"hljs-keyword">for</span></span><span> _, fixati=
on </span><span><span class=3D"hljs-keyword">in</span></span><span> tqdm(fi=
xations_df.iterrows(), total=3D</span><span><span class=3D"hljs-built_in">l=
en</span></span><span>(fixations_df)):
    start_time =3D fixation[</span><span><span class=3D"hljs-string">"start=
_time"</span></span><span>]
    stop_time =3D fixation[</span><span><span class=3D"hljs-string">"stop_t=
ime"</span></span><span>]

    </span><span><span class=3D"hljs-comment"># Find time bins that overlap=
 with the fixation window</span></span><span>
    mask =3D (time_values &gt;=3D start_time) &amp; (time_values &lt;=3D st=
op_time)
    selected_cols =3D np.array(time_cols)[mask]

    </span><span><span class=3D"hljs-keyword">if</span></span><span> </span=
><span><span class=3D"hljs-built_in">len</span></span><span>(selected_cols)=
 &gt; </span><span><span class=3D"hljs-number">0</span></span><span>:
        mean_firing =3D raster_df[selected_cols].mean(axis=3D</span><span><=
span class=3D"hljs-number">1</span></span><span>).values
    </span><span><span class=3D"hljs-keyword">else</span></span><span>:
        mean_firing =3D np.zeros(</span><span><span class=3D"hljs-built_in"=
>len</span></span><span>(raster_df))

    fixation_matrix.append(mean_firing)

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Convert and transpose=
 =3D=3D=3D</span></span><span>
fixation_matrix =3D np.array(fixation_matrix).T  </span><span><span class=
=3D"hljs-comment"># shape: [neurons, fixations]</span></span><span>

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Normalize each fixati=
on (column-wise) by its own max =3D=3D=3D</span></span><span>
col_max =3D fixation_matrix.</span><span><span class=3D"hljs-built_in">max<=
/span></span><span>(axis=3D</span><span><span class=3D"hljs-number">0</span=
></span><span>, keepdims=3D</span><span><span class=3D"hljs-literal">True</=
span></span><span>)
normalized_matrix =3D fixation_matrix / (col_max + </span><span><span class=
=3D"hljs-number">1e-8</span></span><span>)  </span><span><span class=3D"hlj=
s-comment"># avoid div-by-zero</span></span><span>

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Plot and save heatmap=
 =3D=3D=3D</span></span><span>
plt.figure(figsize=3D(</span><span><span class=3D"hljs-number">15</span></s=
pan><span>, </span><span><span class=3D"hljs-number">8</span></span><span>)=
)
sns.heatmap(normalized_matrix, cmap=3D</span><span><span class=3D"hljs-stri=
ng">'viridis'</span></span><span>, cbar_kws=3D{</span><span><span class=3D"=
hljs-string">'label'</span></span><span>: </span><span><span class=3D"hljs-=
string">'Normalized Activity (by fixation)'</span></span><span>})
plt.xlabel(</span><span><span class=3D"hljs-string">"Fixation Index"</span>=
</span><span>)
plt.ylabel(</span><span><span class=3D"hljs-string">"Neuron Index"</span></=
span><span>)
plt.title(</span><span><span class=3D"hljs-string">"Neuron Activity Across =
Fixations (Normalized by fixation)"</span></span><span>)
plt.tight_layout()

</span><span><span class=3D"hljs-comment"># Save image to same folder as sc=
ript</span></span><span>
output_path =3D os.path.join(os.path.dirname(__file__), </span><span><span =
class=3D"hljs-string">"neural_fixation_heatmap.png"</span></span><span>)
plt.savefig(output_path)
</span><span><span class=3D"hljs-built_in">print</span></span><span>(</span=
><span><span class=3D"hljs-string">f"=E2=9C=85 Heatmap saved to: <span clas=
s=3D"hljs-subst">{output_path}</span></span></span><span>")
</span></span></code></div></div></pre>
<hr data-start=3D"2625" data-end=3D"2628" class=3D"">
<p data-start=3D"2630" data-end=3D"2752" class=3D"">Let me know if you want=
 to annotate the heatmap with trial/image info or draw horizontal lines bet=
ween sessions or blocks.</p></div></div></div></div></div></div></div></div=
></article><article class=3D"text-token-text-primary w-full" dir=3D"auto" d=
ata-testid=3D"conversation-turn-19" data-scroll-anchor=3D"false"><h5 class=
=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-auto py-5 [--=
thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spa=
cing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-cont=
ent-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--t=
hread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] =
mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:g=
ap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D=
"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0 fle=
x-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex m=
ax-w-full flex-col grow"><div data-message-author-role=3D"user" data-messag=
e-id=3D"53822907-ee74-4739-8bd8-ae8c94915b65" dir=3D"auto" class=3D"min-h-8=
 text-message relative flex w-full flex-col items-end gap-2 text-start brea=
k-words whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"flex w-=
full flex-col gap-1 empty:hidden items-end rtl:items-start"><div class=3D"r=
elative max-w-[var(--user-chat-width,70%)] bg-token-message-surface rounded=
-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wrap">unit_id,unit_name,time=
_0.000s,time_1000.000s,time_2000.000s,

based on what i understand about the raster data, this is misname and its i=
n hz. does that mean that the time_values are not correctly parsed since th=
e columns are in msec but being interpreted as seconds, while the fixations=
 are in seconds</div></div></div></div></div></div></div></div></div></arti=
cle><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-tes=
tid=3D"conversation-turn-20" data-scroll-anchor=3D"false"><h6 class=3D"sr-o=
nly">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thre=
ad-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing=
(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-=
margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--threa=
d-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-a=
uto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5=
 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1"=
><div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-co=
l agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D=
"flex max-w-full flex-col grow"><div data-message-author-role=3D"assistant"=
 data-message-id=3D"f683cdd8-4cfb-4eb3-b5f8-ef6e2a89de75" dir=3D"auto" clas=
s=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 tex=
t-start break-words whitespace-normal [.text-message+&amp;]:mt-5" data-mess=
age-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hi=
dden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full =
break-words dark"><p data-start=3D"0" data-end=3D"52" class=3D"">You're exa=
ctly right =E2=80=94 and this is a critical catch.</p>
<hr data-start=3D"54" data-end=3D"57" class=3D"">
<h3 data-start=3D"59" data-end=3D"73" class=3D"">=F0=9F=94=8D Problem</h3>
<p data-start=3D"74" data-end=3D"102" class=3D"">Your column names look lik=
e:</p>
<pre class=3D"overflow-visible!" data-start=3D"103" data-end=3D"159"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]"></div><div class=3D"sticky top-9"><div class=
=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"bg-to=
ken-sidebar-surface-primary text-token-text-secondary dark:bg-token-main-su=
rface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><span =
class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center s=
elect-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"24" v=
iewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cla=
ss=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C=
7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569=
 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C=
2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.552=
3 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 =
5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 2=
0 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"><=
/path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"><but=
ton class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=3D"2=
4" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3=
.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5 2.5C=
5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fill=3D=
"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke-line=
join=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12203 1=
9.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007 5.41=
118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8372C9=
.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19.2549=
 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.5C21.=
3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15 5.5L=
7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513 14.4=
392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.66282=
 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"rou=
nd" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" stroke=3D"=
currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-linejoin=
=3D"round"></path></svg>Edit</button></span></div></div></div><div class=3D=
"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><span><sp=
an>time_0.000s, time_1000.000s, time_2000.000s, ...
</span></span></code></div></div></pre>
<p data-start=3D"161" data-end=3D"190" class=3D"">You initially parsed them=
 as:</p>
<pre class=3D"overflow-visible!" data-start=3D"191" data-end=3D"300"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>time_values =3D np.array([</span><span><span class=
=3D"hljs-built_in">float</span></span><span>(col.split(</span><span><span c=
lass=3D"hljs-string">"_"</span></span><span>)[</span><span><span class=3D"h=
ljs-number">1</span></span><span>][:-</span><span><span class=3D"hljs-numbe=
r">1</span></span><span>]) </span><span><span class=3D"hljs-keyword">for</s=
pan></span><span> col </span><span><span class=3D"hljs-keyword">in</span></=
span><span> time_cols])  </span><span><span class=3D"hljs-comment"># assume=
s seconds</span></span><span>
</span></span></code></div></div></pre>
<p data-start=3D"302" data-end=3D"531" class=3D"">But based on your format,=
 <code data-start=3D"328" data-end=3D"344">time_1000.000s</code> probably m=
eans <strong data-start=3D"360" data-end=3D"392">1000 milliseconds =3D 1 se=
cond</strong>. So you're accidentally treating milliseconds as seconds, whi=
ch throws off alignment with the fixation times (which are truly in seconds=
).</p>
<hr data-start=3D"533" data-end=3D"536" class=3D"">
<h3 data-start=3D"538" data-end=3D"547" class=3D"">=E2=9C=85 Fix</h3>
<p data-start=3D"549" data-end=3D"619" class=3D"">To convert the column tim=
e labels (in milliseconds) to actual seconds:</p>
<pre class=3D"overflow-visible!" data-start=3D"620" data-end=3D"736"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>time_values =3D np.array([</span><span><span class=
=3D"hljs-built_in">float</span></span><span>(col.split(</span><span><span c=
lass=3D"hljs-string">"_"</span></span><span>)[</span><span><span class=3D"h=
ljs-number">1</span></span><span>][:-</span><span><span class=3D"hljs-numbe=
r">1</span></span><span>]) / </span><span><span class=3D"hljs-number">1000<=
/span></span><span> </span><span><span class=3D"hljs-keyword">for</span></s=
pan><span> col </span><span><span class=3D"hljs-keyword">in</span></span><s=
pan> time_cols])  </span><span><span class=3D"hljs-comment"># convert ms to=
 s</span></span><span>
</span></span></code></div></div></pre>
<hr data-start=3D"738" data-end=3D"741" class=3D"">
<h3 data-start=3D"743" data-end=3D"768" class=3D"">=E2=9C=85 Final Clarific=
ation</h3>
<ul data-start=3D"769" data-end=3D"787" data-is-last-node=3D"" data-is-only=
-node=3D"">
<li data-start=3D"769" data-end=3D"787" class=3D"">
<p data-start=3D"771" data-end=3D"787" class=3D"">`fixation["start</p>
</li>
</ul></div></div></div></div></div></div></div></div></article><article cla=
ss=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversat=
ion-turn-21" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</=
h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--=
spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thr=
ead-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"re=
lative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow=
"><div data-message-author-role=3D"user" data-message-id=3D"5424b5ad-d8c3-4=
392-ab67-347cc3a97918" dir=3D"auto" class=3D"min-h-8 text-message relative =
flex w-full flex-col items-end gap-2 text-start break-words whitespace-norm=
al [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 emp=
ty:hidden items-end rtl:items-start"><div class=3D"flex gap-2 flex-wrap mt-=
1 max-w-[80%] justify-end"><div class=3D"group text-token-text-primary rela=
tive inline-block text-sm"><span class=3D"" data-state=3D"closed"><a target=
=3D"_blank" rel=3D"noreferrer" class=3D"cursor-pointer"><div class=3D"borde=
r-token-border-default bg-token-main-surface-primary relative overflow-hidd=
en border rounded-xl"><div class=3D"p-2 w-80"><div class=3D"flex flex-row i=
tems-center gap-2"><div class=3D"relative h-10 w-10 shrink-0 overflow-hidde=
n rounded-lg"><svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 36 3=
6" fill=3D"none" class=3D"h-10 w-10 shrink-0" width=3D"36" height=3D"36"><r=
ect width=3D"36" height=3D"36" rx=3D"6" fill=3D"#0088FF"></rect><path d=3D"=
M18.833 9.66663H12.9997C12.5576 9.66663 12.1337 9.84222 11.8212 10.1548C11.=
5086 10.4673 11.333 10.8913 11.333 11.3333V24.6666C11.333 25.1087 11.5086 2=
5.5326 11.8212 25.8451C12.1337 26.1577 12.5576 26.3333 12.9997 26.3333H22.9=
997C23.4417 26.3333 23.8656 26.1577 24.1782 25.8451C24.4907 25.5326 24.6663=
 25.1087 24.6663 24.6666V15.5L18.833 9.66663Z" stroke=3D"white" stroke-widt=
h=3D"1.66667" stroke-linecap=3D"round" stroke-linejoin=3D"round"></path><pa=
th d=3D"M18.833 9.66663V15.5H24.6663" stroke=3D"white" stroke-width=3D"1.66=
667" stroke-linecap=3D"round" stroke-linejoin=3D"round"></path></svg></div>=
<div class=3D"overflow-hidden"><div class=3D"truncate font-semibold">sub-An=
_ses-20220105T173929.nwb</div><div class=3D"text-token-text-secondary trunc=
ate">File</div></div></div></div></div></a></span></div><div class=3D"group=
 text-token-text-primary relative inline-block text-sm"><span class=3D"" da=
ta-state=3D"closed"><a target=3D"_blank" rel=3D"noreferrer" class=3D"cursor=
-pointer"><div class=3D"border-token-border-default bg-token-main-surface-p=
rimary relative overflow-hidden border rounded-xl"><div class=3D"p-2 w-80">=
<div class=3D"flex flex-row items-center gap-2"><div class=3D"relative h-10=
 w-10 shrink-0 overflow-hidden rounded-lg"><svg xmlns=3D"http://www.w3.org/=
2000/svg" viewBox=3D"0 0 36 36" fill=3D"none" class=3D"h-10 w-10 shrink-0" =
width=3D"36" height=3D"36"><rect width=3D"36" height=3D"36" rx=3D"6" fill=
=3D"#FF6E3C"></rect><path d=3D"M21.333 23L26.333 18L21.333 13" stroke=3D"wh=
ite" stroke-width=3D"1.66667" stroke-linecap=3D"round" stroke-linejoin=3D"r=
ound"></path><path d=3D"M14.667 13L9.66699 18L14.667 23" stroke=3D"white" s=
troke-width=3D"1.66667" stroke-linecap=3D"round" stroke-linejoin=3D"round">=
</path></svg></div><div class=3D"overflow-hidden"><div class=3D"truncate fo=
nt-semibold">raster_extractions.py</div><div class=3D"text-token-text-secon=
dary truncate">Python</div></div></div></div></div></a></span></div></div><=
div class=3D"flex flex-col gap-2 w-[80%]"></div><div class=3D"relative max-=
w-[var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py=
-2.5 rounded-se-lg"><div class=3D"whitespace-pre-wrap">no, i'm saying that =
the column labels are wrong. give me an updated raster_extractions that cor=
rectly labels the columns so that they are in msec. not sec</div></div></di=
v></div></div></div></div></div></div></article><article class=3D"text-toke=
n-text-primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-22" da=
ta-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:</h6><div cla=
ss=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)]=
 @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content=
-margin:--spacing(16)] px-(--thread-content-margin)"><div class=3D"[--threa=
d-content-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64=
rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--thread-conten=
t-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages f=
ocus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversati=
on-turn relative flex w-full min-w-0 flex-col agent-turn"><div class=3D"rel=
ative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow"=
><p class=3D"first:mt-0 my-1.5 h-8 flex items-center ltr:me-auto rtl:ms-aut=
o empty:hidden text-token-text-secondary"></p><div data-message-author-role=
=3D"assistant" data-message-id=3D"37fe60a0-72b1-4710-b165-31bc929defb1" dir=
=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col items=
-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:m=
t-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col =
gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-=
invert w-full break-words dark"><p data-start=3D"0" data-end=3D"195" class=
=3D"">Thanks for the clarification. You're correct =E2=80=94 the current sc=
ript names the columns like <code data-start=3D"89" data-end=3D"102">time_0=
.000s</code>, <code data-start=3D"104" data-end=3D"120">time_1000.000s</cod=
e>, etc., which <strong data-start=3D"134" data-end=3D"154">suggests second=
s</strong>, but they are actually <strong data-start=3D"178" data-end=3D"19=
4">milliseconds</strong>.</p>
<hr data-start=3D"197" data-end=3D"200" class=3D"">
<h3 data-start=3D"202" data-end=3D"211" class=3D"">=E2=9C=85 Fix</h3>
<p data-start=3D"212" data-end=3D"327" class=3D"">You should multiply the t=
ime values by 1000 and label them in <strong data-start=3D"274" data-end=3D=
"290">milliseconds</strong> (e.g., <code data-start=3D"298" data-end=3D"308=
">time_0ms</code>, <code data-start=3D"310" data-end=3D"320">time_1ms</code=
>, ...).</p>
<p data-start=3D"329" data-end=3D"375" class=3D"">Here=E2=80=99s your corre=
cted <code data-start=3D"351" data-end=3D"374">raster_extractions.py</code>=
:</p>
<hr data-start=3D"377" data-end=3D"380" class=3D"">
<pre class=3D"overflow-visible!" data-start=3D"382" data-end=3D"2274"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">from</span></span><spa=
n> pynwb </span><span><span class=3D"hljs-keyword">import</span></span><spa=
n> NWBHDF5IO
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> numpy =
</span><span><span class=3D"hljs-keyword">as</span></span><span> np

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Load NWB File =3D=3D=
=3D</span></span><span>
nwb_file_path =3D </span><span><span class=3D"hljs-string">"preprocessing/s=
ub-Bf_ses-20211114T152023.nwb"</span></span><span>

</span><span><span class=3D"hljs-keyword">with</span></span><span> NWBHDF5I=
O(nwb_file_path, </span><span><span class=3D"hljs-string">'r'</span></span>=
<span>) </span><span><span class=3D"hljs-keyword">as</span></span><span> io=
:
    nwbfile =3D io.read()
   =20
    rasters =3D nwbfile.processing[</span><span><span class=3D"hljs-string"=
>'ecephys'</span></span><span>][</span><span><span class=3D"hljs-string">'r=
asters'</span></span><span>]
    raster_data =3D rasters.data[:]  </span><span><span class=3D"hljs-comme=
nt"># shape: (time, units)</span></span><span>
    starting_time =3D rasters.starting_time
    rate =3D rasters.rate  </span><span><span class=3D"hljs-comment"># e.g.=
 1000 Hz</span></span><span>

    </span><span><span class=3D"hljs-comment"># =3D=3D=3D Corrected Time Ve=
ctor: in milliseconds =3D=3D=3D</span></span><span>
    num_timepoints =3D raster_data.shape[</span><span><span class=3D"hljs-n=
umber">0</span></span><span>]
    time_vector_ms =3D np.array([</span><span><span class=3D"hljs-built_in"=
>int</span></span><span>((starting_time + i / rate) * </span><span><span cl=
ass=3D"hljs-number">1000</span></span><span>) </span><span><span class=3D"h=
ljs-keyword">for</span></span><span> i </span><span><span class=3D"hljs-key=
word">in</span></span><span> </span><span><span class=3D"hljs-built_in">ran=
ge</span></span><span>(num_timepoints)])  </span><span><span class=3D"hljs-=
comment"># integer ms</span></span><span>

    unit_table =3D nwbfile.processing[</span><span><span class=3D"hljs-stri=
ng">'ecephys'</span></span><span>][</span><span><span class=3D"hljs-string"=
>'unit_names'</span></span><span>]
    unit_ids =3D unit_table[</span><span><span class=3D"hljs-string">'id'</=
span></span><span>].data[:]
    unit_names =3D [
        x.decode(</span><span><span class=3D"hljs-string">'utf-8'</span></s=
pan><span>) </span><span><span class=3D"hljs-keyword">if</span></span><span=
> </span><span><span class=3D"hljs-built_in">isinstance</span></span><span>=
(x, </span><span><span class=3D"hljs-built_in">bytes</span></span><span>) <=
/span><span><span class=3D"hljs-keyword">else</span></span><span> </span><s=
pan><span class=3D"hljs-built_in">str</span></span><span>(x)
        </span><span><span class=3D"hljs-keyword">for</span></span><span> x=
 </span><span><span class=3D"hljs-keyword">in</span></span><span> unit_tabl=
e[</span><span><span class=3D"hljs-string">'unit_name'</span></span><span>]=
.data[:]
    ]

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Preprocessing Criteri=
a =3D=3D=3D</span></span><span>
halfway =3D num_timepoints // </span><span><span class=3D"hljs-number">2</s=
pan></span><span>
first_half =3D raster_data[:halfway, :]
second_half =3D raster_data[halfway:, :]

mean_first =3D np.mean(first_half, axis=3D</span><span><span class=3D"hljs-=
number">0</span></span><span>)
mean_second =3D np.mean(second_half, axis=3D</span><span><span class=3D"hlj=
s-number">0</span></span><span>)

nonzero_in_second_half =3D mean_second &gt; </span><span><span class=3D"hlj=
s-number">0</span></span><span>
within_50_percent =3D np.</span><span><span class=3D"hljs-built_in">abs</sp=
an></span><span>(mean_first - mean_second) / np.maximum(mean_first, </span>=
<span><span class=3D"hljs-number">1e-8</span></span><span>) &lt;=3D </span>=
<span><span class=3D"hljs-number">0.5</span></span><span>
valid_units =3D nonzero_in_second_half &amp; within_50_percent

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Filter Rasters and Me=
tadata =3D=3D=3D</span></span><span>
filtered_rasters =3D raster_data[:, valid_units]
filtered_ids =3D unit_ids[valid_units]
filtered_names =3D np.array(unit_names)[valid_units]

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Build DataFrame =3D=
=3D=3D</span></span><span>
time_cols =3D [</span><span><span class=3D"hljs-string">f"time_<span class=
=3D"hljs-subst">{t}</span></span></span><span>ms" </span><span><span class=
=3D"hljs-keyword">for</span></span><span> t </span><span><span class=3D"hlj=
s-keyword">in</span></span><span> time_vector_ms]  </span><span><span class=
=3D"hljs-comment"># =E2=86=90 updated to use ms</span></span><span>
df =3D pd.DataFrame(filtered_rasters.T, columns=3Dtime_cols)
df.insert(</span><span><span class=3D"hljs-number">0</span></span><span>, <=
/span><span><span class=3D"hljs-string">"unit_name"</span></span><span>, fi=
ltered_names)
df.insert(</span><span><span class=3D"hljs-number">0</span></span><span>, <=
/span><span><span class=3D"hljs-string">"unit_id"</span></span><span>, filt=
ered_ids)

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Save =3D=3D=3D</span>=
</span><span>
save_path =3D </span><span><span class=3D"hljs-string">"preprocessing/csv_f=
iles/sub-Bf_ses-20211114T152023_preprocessed_raster_data.csv"</span></span>=
<span>
df.to_csv(save_path, index=3D</span><span><span class=3D"hljs-literal">Fals=
e</span></span><span>)
</span><span><span class=3D"hljs-built_in">print</span></span><span>(</span=
><span><span class=3D"hljs-string">f"=E2=9C=85 Saved to <span class=3D"hljs=
-subst">{save_path}</span></span></span><span>")
</span></span></code></div></div></pre>
<hr data-start=3D"2276" data-end=3D"2279" class=3D"">
<h3 data-start=3D"2281" data-end=3D"2314" class=3D"">=E2=9C=85 Example Outp=
ut Column Names</h3>
<pre class=3D"overflow-visible!" data-start=3D"2315" data-end=3D"2389"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]"></div><div class=3D"sticky top-9"><div class=
=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"bg-to=
ken-sidebar-surface-primary text-token-text-secondary dark:bg-token-main-su=
rface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><span =
class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center s=
elect-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"24" v=
iewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cla=
ss=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C=
7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569=
 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C=
2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.552=
3 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 =
5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 2=
0 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"><=
/path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"><but=
ton class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=3D"2=
4" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3=
.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5 2.5C=
5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fill=3D=
"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke-line=
join=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12203 1=
9.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007 5.41=
118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8372C9=
.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19.2549=
 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.5C21.=
3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15 5.5L=
7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513 14.4=
392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.66282=
 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"rou=
nd" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" stroke=3D"=
currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-linejoin=
=3D"round"></path></svg>Edit</button></span></div></div></div><div class=3D=
"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><span><sp=
an>unit_id, unit_name, time_0ms, time_1ms, time_2ms, ..., time_1499ms
</span></span></code></div></div></pre>
<p data-start=3D"2391" data-end=3D"2423" class=3D"">Let me know if you also=
 want to:</p>
<ul data-start=3D"2424" data-end=3D"2566" data-is-last-node=3D"" data-is-on=
ly-node=3D"">
<li data-start=3D"2424" data-end=3D"2462" class=3D"">
<p data-start=3D"2426" data-end=3D"2462" class=3D"">Downsample it to 10ms o=
r 100ms bins,</p>
</li>
<li data-start=3D"2463" data-end=3D"2505" class=3D"">
<p data-start=3D"2465" data-end=3D"2505" class=3D"">Clip to image onset/off=
set windows only,</p>
</li>
<li data-start=3D"2506" data-end=3D"2566" class=3D"">
<p data-start=3D"2508" data-end=3D"2566" class=3D"">Or reshape the output f=
ormat for alignment with fixations.</p>
</li>
</ul></div></div></div></div></div></div></div></div></article><article cla=
ss=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversat=
ion-turn-23" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</=
h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--=
spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thr=
ead-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"re=
lative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow=
"><div data-message-author-role=3D"user" data-message-id=3D"4d92a419-82ef-4=
91a-a2b5-d5b9356695da" dir=3D"auto" class=3D"min-h-8 text-message relative =
flex w-full flex-col items-end gap-2 text-start break-words whitespace-norm=
al [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 emp=
ty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[var(--us=
er-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div =
class=3D"whitespace-pre-wrap">make sure the preprocessing still exists</div=
></div></div></div></div></div></div></div></div></article><article class=
=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversatio=
n-turn-24" data-scroll-anchor=3D"false"><h6 class=3D"sr-only">ChatGPT said:=
</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:=
--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--t=
hread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div clas=
s=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-widt=
h:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--=
thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tu=
rn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"gro=
up/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><div=
 class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full f=
lex-col grow"><div data-message-author-role=3D"assistant" data-message-id=
=3D"c691846a-f1c5-499c-956f-93d5356c08bc" dir=3D"auto" class=3D"min-h-8 tex=
t-message relative flex w-full flex-col items-end gap-2 text-start break-wo=
rds whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=
=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-=
[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-words da=
rk"><p data-start=3D"0" data-end=3D"39" class=3D"">Got it. Here's the updat=
ed script that:</p>
<ul data-start=3D"41" data-end=3D"305">
<li data-start=3D"41" data-end=3D"118" class=3D"">
<p data-start=3D"43" data-end=3D"118" class=3D"">=E2=9C=85 Renames columns =
using <strong data-start=3D"67" data-end=3D"83">milliseconds</strong> (e.g.=
, <code data-start=3D"91" data-end=3D"101">time_0ms</code>, <code data-star=
t=3D"103" data-end=3D"113">time_1ms</code>, =E2=80=A6),</p>
</li>
<li data-start=3D"119" data-end=3D"209" class=3D"">
<p data-start=3D"121" data-end=3D"209" class=3D"">=E2=9C=85 Keeps the <stro=
ng data-start=3D"133" data-end=3D"159">preprocessing criteria</strong> (non=
zero in second half, and stable mean firing),</p>
</li>
<li data-start=3D"210" data-end=3D"240" class=3D"">
<p data-start=3D"212" data-end=3D"240" class=3D"">=E2=9C=85 Saves to the co=
rrect path,</p>
</li>
<li data-start=3D"241" data-end=3D"305" class=3D"">
<p data-start=3D"243" data-end=3D"305" class=3D"">=E2=9C=85 Ensures the <co=
de data-start=3D"257" data-end=3D"273">preprocessing/</code> directory exis=
ts before saving.</p>
</li>
</ul>
<hr data-start=3D"307" data-end=3D"310" class=3D"">
<h3 data-start=3D"312" data-end=3D"347" class=3D"">=E2=9C=85 Final <code da=
ta-start=3D"324" data-end=3D"347">raster_extractions.py</code></h3>
<pre class=3D"overflow-visible!" data-start=3D"349" data-end=3D"2303"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-keyword">import</span></span><s=
pan> os
</span><span><span class=3D"hljs-keyword">from</span></span><span> pynwb </=
span><span><span class=3D"hljs-keyword">import</span></span><span> NWBHDF5I=
O
</span><span><span class=3D"hljs-keyword">import</span></span><span> pandas=
 </span><span><span class=3D"hljs-keyword">as</span></span><span> pd
</span><span><span class=3D"hljs-keyword">import</span></span><span> numpy =
</span><span><span class=3D"hljs-keyword">as</span></span><span> np

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Load NWB File =3D=3D=
=3D</span></span><span>
nwb_file_path =3D </span><span><span class=3D"hljs-string">"preprocessing/s=
ub-Bf_ses-20211114T152023.nwb"</span></span><span>

</span><span><span class=3D"hljs-keyword">with</span></span><span> NWBHDF5I=
O(nwb_file_path, </span><span><span class=3D"hljs-string">'r'</span></span>=
<span>) </span><span><span class=3D"hljs-keyword">as</span></span><span> io=
:
    nwbfile =3D io.read()
   =20
    rasters =3D nwbfile.processing[</span><span><span class=3D"hljs-string"=
>'ecephys'</span></span><span>][</span><span><span class=3D"hljs-string">'r=
asters'</span></span><span>]
    raster_data =3D rasters.data[:]  </span><span><span class=3D"hljs-comme=
nt"># shape: (time, units)</span></span><span>
    starting_time =3D rasters.starting_time
    rate =3D rasters.rate  </span><span><span class=3D"hljs-comment"># Hz</=
span></span><span>

    </span><span><span class=3D"hljs-comment"># Build time vector in millis=
econds</span></span><span>
    num_timepoints =3D raster_data.shape[</span><span><span class=3D"hljs-n=
umber">0</span></span><span>]
    time_vector_ms =3D np.array([</span><span><span class=3D"hljs-built_in"=
>int</span></span><span>((starting_time + i / rate) * </span><span><span cl=
ass=3D"hljs-number">1000</span></span><span>) </span><span><span class=3D"h=
ljs-keyword">for</span></span><span> i </span><span><span class=3D"hljs-key=
word">in</span></span><span> </span><span><span class=3D"hljs-built_in">ran=
ge</span></span><span>(num_timepoints)])

    unit_table =3D nwbfile.processing[</span><span><span class=3D"hljs-stri=
ng">'ecephys'</span></span><span>][</span><span><span class=3D"hljs-string"=
>'unit_names'</span></span><span>]
    unit_ids =3D unit_table[</span><span><span class=3D"hljs-string">'id'</=
span></span><span>].data[:]
    unit_names =3D [
        x.decode(</span><span><span class=3D"hljs-string">'utf-8'</span></s=
pan><span>) </span><span><span class=3D"hljs-keyword">if</span></span><span=
> </span><span><span class=3D"hljs-built_in">isinstance</span></span><span>=
(x, </span><span><span class=3D"hljs-built_in">bytes</span></span><span>) <=
/span><span><span class=3D"hljs-keyword">else</span></span><span> </span><s=
pan><span class=3D"hljs-built_in">str</span></span><span>(x)
        </span><span><span class=3D"hljs-keyword">for</span></span><span> x=
 </span><span><span class=3D"hljs-keyword">in</span></span><span> unit_tabl=
e[</span><span><span class=3D"hljs-string">'unit_name'</span></span><span>]=
.data[:]
    ]

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Preprocessing Criteri=
a =3D=3D=3D</span></span><span>
halfway =3D num_timepoints // </span><span><span class=3D"hljs-number">2</s=
pan></span><span>
first_half =3D raster_data[:halfway, :]
second_half =3D raster_data[halfway:, :]

mean_first =3D np.mean(first_half, axis=3D</span><span><span class=3D"hljs-=
number">0</span></span><span>)
mean_second =3D np.mean(second_half, axis=3D</span><span><span class=3D"hlj=
s-number">0</span></span><span>)

nonzero_in_second_half =3D mean_second &gt; </span><span><span class=3D"hlj=
s-number">0</span></span><span>
within_50_percent =3D np.</span><span><span class=3D"hljs-built_in">abs</sp=
an></span><span>(mean_first - mean_second) / np.maximum(mean_first, </span>=
<span><span class=3D"hljs-number">1e-8</span></span><span>) &lt;=3D </span>=
<span><span class=3D"hljs-number">0.5</span></span><span>
valid_units =3D nonzero_in_second_half &amp; within_50_percent

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Filter Rasters and Me=
tadata =3D=3D=3D</span></span><span>
filtered_rasters =3D raster_data[:, valid_units]
filtered_ids =3D unit_ids[valid_units]
filtered_names =3D np.array(unit_names)[valid_units]

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Build DataFrame =3D=
=3D=3D</span></span><span>
time_cols =3D [</span><span><span class=3D"hljs-string">f"time_<span class=
=3D"hljs-subst">{t}</span></span></span><span>ms" </span><span><span class=
=3D"hljs-keyword">for</span></span><span> t </span><span><span class=3D"hlj=
s-keyword">in</span></span><span> time_vector_ms]
df =3D pd.DataFrame(filtered_rasters.T, columns=3Dtime_cols)
df.insert(</span><span><span class=3D"hljs-number">0</span></span><span>, <=
/span><span><span class=3D"hljs-string">"unit_name"</span></span><span>, fi=
ltered_names)
df.insert(</span><span><span class=3D"hljs-number">0</span></span><span>, <=
/span><span><span class=3D"hljs-string">"unit_id"</span></span><span>, filt=
ered_ids)

</span><span><span class=3D"hljs-comment"># =3D=3D=3D Ensure preprocessing =
path exists and save =3D=3D=3D</span></span><span>
save_dir =3D </span><span><span class=3D"hljs-string">"preprocessing/csv_fi=
les"</span></span><span>
os.makedirs(save_dir, exist_ok=3D</span><span><span class=3D"hljs-literal">=
True</span></span><span>)
save_path =3D os.path.join(save_dir, </span><span><span class=3D"hljs-strin=
g">"sub-Bf_ses-20211114T152023_preprocessed_raster_data.csv"</span></span><=
span>)

df.to_csv(save_path, index=3D</span><span><span class=3D"hljs-literal">Fals=
e</span></span><span>)
</span><span><span class=3D"hljs-built_in">print</span></span><span>(</span=
><span><span class=3D"hljs-string">f"=E2=9C=85 Saved to <span class=3D"hljs=
-subst">{save_path}</span></span></span><span>")
</span></span></code></div></div></pre>
<hr data-start=3D"2305" data-end=3D"2308" class=3D"">
<p data-start=3D"2310" data-end=3D"2334" class=3D"">Let me know if you want=
:</p>
<ul data-start=3D"2335" data-end=3D"2435" data-is-last-node=3D"" data-is-on=
ly-node=3D"">
<li data-start=3D"2335" data-end=3D"2369" class=3D"">
<p data-start=3D"2337" data-end=3D"2369" class=3D"">Smoothed or downsampled=
 rasters,</p>
</li>
<li data-start=3D"2370" data-end=3D"2394" class=3D"">
<p data-start=3D"2372" data-end=3D"2394" class=3D"">Firing rate z-scoring,<=
/p>
</li>
<li data-start=3D"2395" data-end=3D"2435" class=3D"">
<p data-start=3D"2397" data-end=3D"2435" class=3D"">Additional metadata per=
 unit included.</p>
</li>
</ul></div></div></div></div></div></div></div></div></article><article cla=
ss=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversat=
ion-turn-25" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:</=
h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:--=
spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--thr=
ead-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"re=
lative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow=
"><div data-message-author-role=3D"user" data-message-id=3D"00486c48-e08e-4=
14a-bdc1-e01e07e94565" dir=3D"auto" class=3D"min-h-8 text-message relative =
flex w-full flex-col items-end gap-2 text-start break-words whitespace-norm=
al [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 emp=
ty:hidden items-end rtl:items-start"><div class=3D"relative max-w-[var(--us=
er-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5"><div =
class=3D"whitespace-pre-wrap">unit_id,unit_name,time_0ms,time_1000000ms,tim=
e_2000000ms,time_3000000ms

Why do i have seconds?</div></div></div></div></div></div></div></div></div=
></article><article class=3D"text-token-text-primary w-full" dir=3D"auto" d=
ata-testid=3D"conversation-turn-26" data-scroll-anchor=3D"false"><h6 class=
=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5=
 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:-=
-spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-=
content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:=
[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48r=
em] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 =
md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabinde=
x=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0=
 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div =
class=3D"flex max-w-full flex-col grow"><div data-message-author-role=3D"as=
sistant" data-message-id=3D"2b6a7177-b607-4962-b304-ba8f94ebfb68" dir=3D"au=
to" class=3D"min-h-8 text-message relative flex w-full flex-col items-end g=
ap-2 text-start break-words whitespace-normal [.text-message+&amp;]:mt-5" d=
ata-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 =
empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert=
 w-full break-words dark"><p data-start=3D"0" data-end=3D"203" class=3D"">T=
hat format =E2=80=94 <code data-start=3D"14" data-end=3D"24">time_0ms</code=
>, <code data-start=3D"26" data-end=3D"42">time_1000000ms</code>, <code dat=
a-start=3D"44" data-end=3D"60">time_2000000ms</code> =E2=80=94 suggests tha=
t the time points are being <strong data-start=3D"103" data-end=3D"139">inc=
orrectly scaled by 1000 twice</strong>, leading to values in <strong data-s=
tart=3D"162" data-end=3D"178">microseconds</strong> instead of milliseconds=
.</p>
<hr data-start=3D"205" data-end=3D"208" class=3D"">
<h3 data-start=3D"210" data-end=3D"235" class=3D"">=F0=9F=94=8D What's goin=
g wrong</h3>
<p data-start=3D"236" data-end=3D"261" class=3D"">This line in your script:=
</p>
<pre class=3D"overflow-visible!" data-start=3D"262" data-end=3D"374"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>time_vector_ms =3D np.array([</span><span><span cla=
ss=3D"hljs-built_in">int</span></span><span>((starting_time + i / rate) * <=
/span><span><span class=3D"hljs-number">1000</span></span><span>) </span><s=
pan><span class=3D"hljs-keyword">for</span></span><span> i </span><span><sp=
an class=3D"hljs-keyword">in</span></span><span> </span><span><span class=
=3D"hljs-built_in">range</span></span><span>(num_timepoints)])
</span></span></code></div></div></pre>
<p data-start=3D"375" data-end=3D"398" class=3D"">is correct <strong data-s=
tart=3D"386" data-end=3D"397">only if</strong>:</p>
<ul data-start=3D"399" data-end=3D"533">
<li data-start=3D"399" data-end=3D"435" class=3D"">
<p data-start=3D"401" data-end=3D"435" class=3D""><code data-start=3D"401" =
data-end=3D"416">starting_time</code> is in <strong data-start=3D"423" data=
-end=3D"434">seconds</strong>,</p>
</li>
<li data-start=3D"436" data-end=3D"483" class=3D"">
<p data-start=3D"438" data-end=3D"483" class=3D""><code data-start=3D"438" =
data-end=3D"448">i / rate</code> gives <strong data-start=3D"455" data-end=
=3D"466">seconds</strong> (which it does),</p>
</li>
<li data-start=3D"484" data-end=3D"533" class=3D"">
<p data-start=3D"486" data-end=3D"533" class=3D"">And multiplying by 1000 g=
ives <strong data-start=3D"516" data-end=3D"532">milliseconds</strong>.</p>
</li>
</ul>
<p data-start=3D"535" data-end=3D"677" class=3D"">But if <code data-start=
=3D"542" data-end=3D"557">starting_time</code> is already in milliseconds, =
or very large (e.g., <code data-start=3D"607" data-end=3D"613">1000</code> =
meaning 1000 seconds), then multiplying by 1000 is the problem.</p>
<hr data-start=3D"679" data-end=3D"682" class=3D"">
<h3 data-start=3D"684" data-end=3D"693" class=3D"">=E2=9C=85 Fix</h3>
<p data-start=3D"694" data-end=3D"777" class=3D"">Inspect <code data-start=
=3D"702" data-end=3D"717">starting_time</code>. It's probably in <strong da=
ta-start=3D"736" data-end=3D"747">seconds</strong>, but very large (like 10=
00s).</p>
<p data-start=3D"779" data-end=3D"851" class=3D"">Instead of using the abso=
lute time, just build the relative time vector:</p>
<pre class=3D"overflow-visible!" data-start=3D"853" data-end=3D"988"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-comment"># Time in milliseconds=
 relative to start</span></span><span>
time_vector_ms =3D np.array([</span><span><span class=3D"hljs-built_in">int=
</span></span><span>(i * </span><span><span class=3D"hljs-number">1000</spa=
n></span><span> / rate) </span><span><span class=3D"hljs-keyword">for</span=
></span><span> i </span><span><span class=3D"hljs-keyword">in</span></span>=
<span> </span><span><span class=3D"hljs-built_in">range</span></span><span>=
(num_timepoints)])
</span></span></code></div></div></pre>
<p data-start=3D"990" data-end=3D"1003" class=3D"">This ensures:</p>
<ul data-start=3D"1004" data-end=3D"1061">
<li data-start=3D"1004" data-end=3D"1021" class=3D"">
<p data-start=3D"1006" data-end=3D"1021" class=3D""><code data-start=3D"100=
6" data-end=3D"1013">i =3D 0</code> =E2=86=92 <code data-start=3D"1016" dat=
a-end=3D"1021">0ms</code></p>
</li>
<li data-start=3D"1022" data-end=3D"1061" class=3D"">
<p data-start=3D"1024" data-end=3D"1061" class=3D""><code data-start=3D"102=
4" data-end=3D"1037">rate =3D 1000</code> =E2=86=92 <code data-start=3D"104=
0" data-end=3D"1050">i =3D 1000</code> =E2=86=92 <code data-start=3D"1053" =
data-end=3D"1061">1000ms</code></p>
</li>
</ul>
<hr data-start=3D"1063" data-end=3D"1066" class=3D"">
<h3 data-start=3D"1068" data-end=3D"1088" class=3D"">=F0=9F=94=81 Replace t=
his:</h3>
<pre class=3D"overflow-visible!" data-start=3D"1089" data-end=3D"1201"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>time_vector_ms =3D np.array([</span><span><span cla=
ss=3D"hljs-built_in">int</span></span><span>((starting_time + i / rate) * <=
/span><span><span class=3D"hljs-number">1000</span></span><span>) </span><s=
pan><span class=3D"hljs-keyword">for</span></span><span> i </span><span><sp=
an class=3D"hljs-keyword">in</span></span><span> </span><span><span class=
=3D"hljs-built_in">range</span></span><span>(num_timepoints)])
</span></span></code></div></div></pre>
<h3 data-start=3D"1203" data-end=3D"1219" class=3D"">=E2=9C=85 With this:</=
h3>
<pre class=3D"overflow-visible!" data-start=3D"1220" data-end=3D"1314"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>time_vector_ms =3D np.array([</span><span><span cla=
ss=3D"hljs-built_in">int</span></span><span>(i * </span><span><span class=
=3D"hljs-number">1000</span></span><span> / rate) </span><span><span class=
=3D"hljs-keyword">for</span></span><span> i </span><span><span class=3D"hlj=
s-keyword">in</span></span><span> </span><span><span class=3D"hljs-built_in=
">range</span></span><span>(num_timepoints)])
</span></span></code></div></div></pre>
<p data-start=3D"1316" data-end=3D"1353" class=3D"">This will give you colu=
mn names like:</p>
<pre class=3D"overflow-visible!" data-start=3D"1354" data-end=3D"1408"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]"></div><div class=3D"sticky top-9"><div class=
=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"bg-to=
ken-sidebar-surface-primary text-token-text-secondary dark:bg-token-main-su=
rface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><span =
class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center s=
elect-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"24" v=
iewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cla=
ss=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C=
7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569=
 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C=
2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.552=
3 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 =
5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 2=
0 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"><=
/path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"><but=
ton class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=3D"2=
4" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3=
.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5 2.5C=
5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fill=3D=
"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke-line=
join=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12203 1=
9.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007 5.41=
118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8372C9=
.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19.2549=
 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.5C21.=
3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15 5.5L=
7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513 14.4=
392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.66282=
 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"rou=
nd" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" stroke=3D"=
currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-linejoin=
=3D"round"></path></svg>Edit</button></span></div></div></div><div class=3D=
"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><span><sp=
an>time_0ms, time_1ms, time_2ms, ..., time_1499ms
</span></span></code></div></div></pre>
<p data-start=3D"1410" data-end=3D"1508" class=3D"">Let me know if you'd li=
ke to start the times from actual <code data-start=3D"1467" data-end=3D"148=
2">starting_time</code> but with correct scaling.</p></div></div></div></di=
v></div></div></div></div></article><article class=3D"text-token-text-prima=
ry w-full" dir=3D"auto" data-testid=3D"conversation-turn-27" data-scroll-an=
chor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-base =
my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thr=
ead-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacin=
g(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-max-wi=
dth:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-c=
ontent-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width) fle=
x-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:out=
line-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn relative=
 flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 md:gap=
-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author-r=
ole=3D"user" data-message-id=3D"92712145-c0e2-4daf-8d2d-54c2bf2c8247" dir=
=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col items=
-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;]:m=
t-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl:it=
ems-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-tok=
en-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre-wr=
ap">yes pelase</div></div></div></div></div></div></div></div></div></artic=
le><article class=3D"text-token-text-primary w-full" dir=3D"auto" data-test=
id=3D"conversation-turn-28" data-scroll-anchor=3D"false"><h6 class=3D"sr-on=
ly">ChatGPT said:</h6><div class=3D"text-base my-auto mx-auto py-5 [--threa=
d-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(=
6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-content-m=
argin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread=
-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-au=
to flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 =
lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabindex=3D"-1">=
<div class=3D"group/conversation-turn relative flex w-full min-w-0 flex-col=
 agent-turn"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"=
flex max-w-full flex-col grow"><div data-message-author-role=3D"assistant" =
data-message-id=3D"5db9e595-2569-4636-9403-ef40f4d6a090" dir=3D"auto" class=
=3D"min-h-8 text-message relative flex w-full flex-col items-end gap-2 text=
-start break-words whitespace-normal [.text-message+&amp;]:mt-5" data-messa=
ge-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hid=
den first:pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full b=
reak-words dark"><p data-start=3D"0" data-end=3D"180" class=3D"">Great =E2=
=80=94 if you want the column names to reflect the <strong data-start=3D"52=
" data-end=3D"98">true time relative to the experiment start</strong>, usin=
g <code data-start=3D"106" data-end=3D"121">starting_time</code>, but still=
 correctly in <strong data-start=3D"146" data-end=3D"162">milliseconds</str=
ong>, then the fix is:</p>
<hr data-start=3D"182" data-end=3D"185" class=3D"">
<h3 data-start=3D"187" data-end=3D"212" class=3D"">=E2=9C=85 Correct Time V=
ector</h3>
<pre class=3D"overflow-visible!" data-start=3D"213" data-end=3D"325"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>time_vector_ms =3D np.array([</span><span><span cla=
ss=3D"hljs-built_in">int</span></span><span>((starting_time + i / rate) * <=
/span><span><span class=3D"hljs-number">1000</span></span><span>) </span><s=
pan><span class=3D"hljs-keyword">for</span></span><span> i </span><span><sp=
an class=3D"hljs-keyword">in</span></span><span> </span><span><span class=
=3D"hljs-built_in">range</span></span><span>(num_timepoints)])
</span></span></code></div></div></pre>
<h3 data-start=3D"327" data-end=3D"413" class=3D"">=E2=9C=85 And then clip =
to 3 decimal places in milliseconds format (optional but cleaner):</h3>
<pre class=3D"overflow-visible!" data-start=3D"414" data-end=3D"479"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>time_cols =3D [</span><span><span class=3D"hljs-str=
ing">f"time_<span class=3D"hljs-subst">{t}</span></span></span><span>ms" </=
span><span><span class=3D"hljs-keyword">for</span></span><span> t </span><s=
pan><span class=3D"hljs-keyword">in</span></span><span> time_vector_ms]
</span></span></code></div></div></pre>
<p data-start=3D"481" data-end=3D"514" class=3D"">This will give column nam=
es like:</p>
<pre class=3D"overflow-visible!" data-start=3D"515" data-end=3D"569"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]"></div><div class=3D"sticky top-9"><div class=
=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"bg-to=
ken-sidebar-surface-primary text-token-text-secondary dark:bg-token-main-su=
rface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><span =
class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center s=
elect-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"24" v=
iewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cla=
ss=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C=
7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569=
 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C=
2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.552=
3 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 =
5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 2=
0 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"><=
/path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"><but=
ton class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=3D"2=
4" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3=
.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5 2.5C=
5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fill=3D=
"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke-line=
join=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12203 1=
9.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007 5.41=
118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8372C9=
.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19.2549=
 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.5C21.=
3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15 5.5L=
7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513 14.4=
392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.66282=
 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"rou=
nd" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" stroke=3D"=
currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-linejoin=
=3D"round"></path></svg>Edit</button></span></div></div></div><div class=3D=
"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><span><sp=
an>time_0ms, time_1ms, time_2ms, ..., time_1500ms
</span></span></code></div></div></pre>
<p data-start=3D"570" data-end=3D"613" class=3D""><em data-start=3D"570" da=
ta-end=3D"612">if <code data-start=3D"574" data-end=3D"593">starting_time =
=3D 0</code> and <code data-start=3D"598" data-end=3D"611">rate =3D 1000</c=
ode></em>.</p>
<hr data-start=3D"615" data-end=3D"618" class=3D"">
<h3 data-start=3D"620" data-end=3D"650" class=3D"">=E2=9C=85 Final Drop-in =
Code Block</h3>
<p data-start=3D"652" data-end=3D"699" class=3D"">Replace your time vector =
and column setup with:</p>
<pre class=3D"overflow-visible!" data-start=3D"701" data-end=3D"929"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-comment"># Build time vector in=
 milliseconds, using actual starting_time</span></span><span>
time_vector_ms =3D np.array([</span><span><span class=3D"hljs-built_in">int=
</span></span><span>((starting_time + i / rate) * </span><span><span class=
=3D"hljs-number">1000</span></span><span>) </span><span><span class=3D"hljs=
-keyword">for</span></span><span> i </span><span><span class=3D"hljs-keywor=
d">in</span></span><span> </span><span><span class=3D"hljs-built_in">range<=
/span></span><span>(num_timepoints)])
time_cols =3D [</span><span><span class=3D"hljs-string">f"time_<span class=
=3D"hljs-subst">{t}</span></span></span><span>ms" </span><span><span class=
=3D"hljs-keyword">for</span></span><span> t </span><span><span class=3D"hlj=
s-keyword">in</span></span><span> time_vector_ms]
</span></span></code></div></div></pre>
<p data-start=3D"931" data-end=3D"1023" class=3D"">This will reflect accura=
te timing, in <strong data-start=3D"969" data-end=3D"985">milliseconds</str=
ong>, aligned with your actual start time.</p>
<p data-start=3D"1025" data-end=3D"1129" class=3D"">Let me know if you'd li=
ke to round or format the ms labels differently (e.g., <code data-start=3D"=
1103" data-end=3D"1117">time_00123ms</code> or <code data-start=3D"1121" da=
ta-end=3D"1127">t123</code>).</p></div></div></div></div></div></div></div>=
</div></article><article class=3D"text-token-text-primary w-full" dir=3D"au=
to" data-testid=3D"conversation-turn-29" data-scroll-anchor=3D"false"><h5 c=
lass=3D"sr-only">You said:</h5><div class=3D"text-base my-auto mx-auto py-5=
 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-content-margin:-=
-spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px-(--thread-=
content-margin)"><div class=3D"[--thread-content-max-width:32rem] @[34rem]:=
[--thread-content-max-width:40rem] @[64rem]:[--thread-content-max-width:48r=
em] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-base gap-4 =
md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidden" tabinde=
x=3D"-1"><div class=3D"group/conversation-turn relative flex w-full min-w-0=
 flex-col"><div class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"fl=
ex max-w-full flex-col grow"><div data-message-author-role=3D"user" data-me=
ssage-id=3D"323a011d-b37e-4065-88d2-0b462e9b904f" dir=3D"auto" class=3D"min=
-h-8 text-message relative flex w-full flex-col items-end gap-2 text-start =
break-words whitespace-normal [.text-message+&amp;]:mt-5"><div class=3D"fle=
x w-full flex-col gap-1 empty:hidden items-end rtl:items-start"><div class=
=3D"flex gap-2 flex-wrap mt-1 max-w-[80%] justify-end"><div class=3D"group =
text-token-text-primary relative inline-block text-sm"><span class=3D"" dat=
a-state=3D"closed"><a target=3D"_blank" rel=3D"noreferrer" class=3D"cursor-=
pointer"><div class=3D"border-token-border-default bg-token-main-surface-pr=
imary relative overflow-hidden border rounded-xl"><div class=3D"p-2 w-80"><=
div class=3D"flex flex-row items-center gap-2"><div class=3D"relative h-10 =
w-10 shrink-0 overflow-hidden rounded-lg"><svg xmlns=3D"http://www.w3.org/2=
000/svg" viewBox=3D"0 0 36 36" fill=3D"none" class=3D"h-10 w-10 shrink-0" w=
idth=3D"36" height=3D"36"><rect width=3D"36" height=3D"36" rx=3D"6" fill=3D=
"#FF6E3C"></rect><path d=3D"M21.333 23L26.333 18L21.333 13" stroke=3D"white=
" stroke-width=3D"1.66667" stroke-linecap=3D"round" stroke-linejoin=3D"roun=
d"></path><path d=3D"M14.667 13L9.66699 18L14.667 23" stroke=3D"white" stro=
ke-width=3D"1.66667" stroke-linecap=3D"round" stroke-linejoin=3D"round"></p=
ath></svg></div><div class=3D"overflow-hidden"><div class=3D"truncate font-=
semibold">raster_extractions.py</div><div class=3D"text-token-text-secondar=
y truncate">Python</div></div></div></div></div></a></span></div></div><div=
 class=3D"flex flex-col gap-2 w-[80%]"></div><div class=3D"relative max-w-[=
var(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.=
5 rounded-se-lg"><div class=3D"whitespace-pre-wrap">unit_id,unit_name,time_=
0ms,time_1000000ms,time_2000000ms,time_3000000ms,

i'm still getting labels like this</div></div></div></div></div></div></div=
></div></div></article><article class=3D"text-token-text-primary w-full" di=
r=3D"auto" data-testid=3D"conversation-turn-30" data-scroll-anchor=3D"false=
"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto m=
x-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-conte=
nt-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px=
-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem=
] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-ma=
x-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-=
base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidd=
en" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-f=
ull min-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:g=
ap-3"><div class=3D"flex max-w-full flex-col grow"><p class=3D"first:mt-0 m=
y-1.5 h-8 flex items-center ltr:me-auto rtl:ms-auto empty:hidden text-token=
-text-secondary"></p><div data-message-author-role=3D"assistant" data-messa=
ge-id=3D"6b0806f6-502a-4b63-b556-1620e0b07d8d" dir=3D"auto" class=3D"min-h-=
8 text-message relative flex w-full flex-col items-end gap-2 text-start bre=
ak-words whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-s=
lug=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:=
pt-[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-words=
 dark"><p data-start=3D"0" data-end=3D"47" class=3D"">Thanks =E2=80=94 base=
d on your current code and result:</p>
<pre class=3D"overflow-visible!" data-start=3D"49" data-end=3D"106"><div cl=
ass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-me=
dium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-ce=
nter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between =
h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary s=
elect-none rounded-t-[5px]"></div><div class=3D"sticky top-9"><div class=3D=
"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"bg-token=
-sidebar-surface-primary text-token-text-secondary dark:bg-token-main-surfa=
ce-secondary flex items-center rounded-sm px-2 font-sans text-xs"><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center sele=
ct-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"24" view=
Box=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C7 =
3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 1=
7 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 =
8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 =
15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V=
7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 =
15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"></p=
ath></svg>Copy</button></span><span class=3D"" data-state=3D"closed"><butto=
n class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=3D"24"=
 height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.o=
rg/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5 2.5C5.=
8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fill=3D"c=
urrentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke-linejo=
in=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12203 19.=
7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007 5.4111=
8 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8372C9.7=
2813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19.2549 1=
1.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.5C21.38=
07 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15 5.5L7.=
45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513 14.439=
2 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.66282 1=
6.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round=
" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" stroke=3D"cu=
rrentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-linejoin=3D"=
round"></path></svg>Edit</button></span></div></div></div><div class=3D"ove=
rflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><span><span>u=
nit_id, unit_name, time_0ms, time_1000000ms, ...
</span></span></code></div></div></pre>
<p data-start=3D"108" data-end=3D"276" class=3D"">you're still seeing <stro=
ng data-start=3D"128" data-end=3D"180">time columns labeled in millions of =
milliseconds</strong>, which strongly suggests that <code data-start=3D"211=
" data-end=3D"226">starting_time</code> is a large number in <strong data-s=
tart=3D"248" data-end=3D"259">seconds</strong>, e.g., <code data-start=3D"2=
67" data-end=3D"275">1000.0</code>.</p>
<p data-start=3D"278" data-end=3D"296" class=3D"">So even this line:</p>
<pre class=3D"overflow-visible!" data-start=3D"297" data-end=3D"349"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-built_in">int</span></span><spa=
n>((starting_time + i / rate) * </span><span><span class=3D"hljs-number">10=
00</span></span><span>)
</span></span></code></div></div></pre>
<p data-start=3D"350" data-end=3D"357" class=3D"">yields:</p>
<pre class=3D"overflow-visible!" data-start=3D"358" data-end=3D"408"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>(</span><span><span class=3D"hljs-number">1000.0</s=
pan></span><span> + </span><span><span class=3D"hljs-number">0</span></span=
><span>/</span><span><span class=3D"hljs-number">1000</span></span><span>) =
* </span><span><span class=3D"hljs-number">1000</span></span><span> =3D </s=
pan><span><span class=3D"hljs-number">1</span></span><span>,</span><span><s=
pan class=3D"hljs-number">000</span></span><span>,</span><span><span class=
=3D"hljs-number">000</span></span><span>
</span></span></code></div></div></pre>
<hr data-start=3D"410" data-end=3D"413" class=3D"">
<h3 data-start=3D"415" data-end=3D"502" class=3D"">=E2=9C=85 Best Fix: Use =
relative time, then add <code data-start=3D"459" data-end=3D"474">starting_=
time</code> offset (converted properly)</h3>
<pre class=3D"overflow-visible!" data-start=3D"504" data-end=3D"621"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>time_vector_ms =3D np.array([</span><span><span cla=
ss=3D"hljs-built_in">int</span></span><span>(i * </span><span><span class=
=3D"hljs-number">1000</span></span><span> / rate + starting_time * </span><=
span><span class=3D"hljs-number">1000</span></span><span>) </span><span><sp=
an class=3D"hljs-keyword">for</span></span><span> i </span><span><span clas=
s=3D"hljs-keyword">in</span></span><span> </span><span><span class=3D"hljs-=
built_in">range</span></span><span>(num_timepoints)])
</span></span></code></div></div></pre>
<p data-start=3D"623" data-end=3D"640" class=3D"">Or, even clearer:</p>
<pre class=3D"overflow-visible!" data-start=3D"641" data-end=3D"778"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>start_ms =3D starting_time * </span><span><span cla=
ss=3D"hljs-number">1000</span></span><span>
time_vector_ms =3D np.array([</span><span><span class=3D"hljs-built_in">int=
</span></span><span>(start_ms + i * </span><span><span class=3D"hljs-number=
">1000</span></span><span> / rate) </span><span><span class=3D"hljs-keyword=
">for</span></span><span> i </span><span><span class=3D"hljs-keyword">in</s=
pan></span><span> </span><span><span class=3D"hljs-built_in">range</span></=
span><span>(num_timepoints)])
</span></span></code></div></div></pre>
<hr data-start=3D"780" data-end=3D"783" class=3D"">
<h3 data-start=3D"785" data-end=3D"819" class=3D"">=E2=9C=85 Replace this i=
n your script:</h3>
<pre class=3D"overflow-visible!" data-start=3D"820" data-end=3D"932"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>time_vector_ms =3D np.array([</span><span><span cla=
ss=3D"hljs-built_in">int</span></span><span>((starting_time + i / rate) * <=
/span><span><span class=3D"hljs-number">1000</span></span><span>) </span><s=
pan><span class=3D"hljs-keyword">for</span></span><span> i </span><span><sp=
an class=3D"hljs-keyword">in</span></span><span> </span><span><span class=
=3D"hljs-built_in">range</span></span><span>(num_timepoints)])
</span></span></code></div></div></pre>
<h3 data-start=3D"934" data-end=3D"945" class=3D"">=E2=9C=85 With:</h3>
<pre class=3D"overflow-visible!" data-start=3D"946" data-end=3D"1083"><div =
class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-=
medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-=
center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwee=
n h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary=
 select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div =
class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"=
bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-ma=
in-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><=
span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cen=
ter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"=
24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg=
" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"=
M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20=
.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 1=
9V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C1=
9.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.447=
72 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5=
523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCol=
or"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"=
><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>start_ms =3D starting_time * </span><span><span cla=
ss=3D"hljs-number">1000</span></span><span>
time_vector_ms =3D np.array([</span><span><span class=3D"hljs-built_in">int=
</span></span><span>(start_ms + i * </span><span><span class=3D"hljs-number=
">1000</span></span><span> / rate) </span><span><span class=3D"hljs-keyword=
">for</span></span><span> i </span><span><span class=3D"hljs-keyword">in</s=
pan></span><span> </span><span><span class=3D"hljs-built_in">range</span></=
span><span>(num_timepoints)])
</span></span></code></div></div></pre>
<p data-start=3D"1085" data-end=3D"1131" class=3D"">This will correctly pro=
duce column names like:</p>
<pre class=3D"overflow-visible!" data-start=3D"1132" data-end=3D"1175"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]"></div><div class=3D"sticky top-9"><div class=
=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"bg-to=
ken-sidebar-surface-primary text-token-text-secondary dark:bg-token-main-su=
rface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><span =
class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center s=
elect-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"24" v=
iewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cla=
ss=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C=
7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569=
 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C=
2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.552=
3 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 =
5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 2=
0 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"><=
/path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"><but=
ton class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=3D"2=
4" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3=
.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5 2.5C=
5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fill=3D=
"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke-line=
join=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12203 1=
9.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007 5.41=
118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8372C9=
.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19.2549=
 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.5C21.=
3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15 5.5L=
7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513 14.4=
392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.66282=
 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"rou=
nd" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" stroke=3D"=
currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-linejoin=
=3D"round"></path></svg>Edit</button></span></div></div></div><div class=3D=
"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><span><sp=
an>time_1000000ms, time_1000001ms, ...
</span></span></code></div></div></pre>
<p data-start=3D"1176" data-end=3D"1285" class=3D""><strong data-start=3D"1=
176" data-end=3D"1187">only if</strong> your data actually starts at 1000 s=
econds. That=E2=80=99s expected and correct if <code data-start=3D"1262" da=
ta-end=3D"1284">starting_time =3D 1000</code>.</p>
<p data-start=3D"1287" data-end=3D"1356" class=3D"">If you want time to sta=
rt at 0 regardless, just drop <code data-start=3D"1340" data-end=3D"1355">s=
tarting_time</code>:</p>
<pre class=3D"overflow-visible!" data-start=3D"1358" data-end=3D"1452"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>time_vector_ms =3D np.array([</span><span><span cla=
ss=3D"hljs-built_in">int</span></span><span>(i * </span><span><span class=
=3D"hljs-number">1000</span></span><span> / rate) </span><span><span class=
=3D"hljs-keyword">for</span></span><span> i </span><span><span class=3D"hlj=
s-keyword">in</span></span><span> </span><span><span class=3D"hljs-built_in=
">range</span></span><span>(num_timepoints)])
</span></span></code></div></div></pre>
<p data-start=3D"1454" data-end=3D"1546" class=3D"">Let me know which time =
reference you prefer =E2=80=94 absolute (true to file) or relative (0-based=
).</p></div></div></div></div></div></div></div></div></article><article cl=
ass=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversa=
tion-turn-31" data-scroll-anchor=3D"false"><h5 class=3D"sr-only">You said:<=
/h5><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margin:-=
-spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[--th=
read-content-margin:--spacing(16)] px-(--thread-content-margin)"><div class=
=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-width=
:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(--t=
hread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/tur=
n-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"grou=
p/conversation-turn relative flex w-full min-w-0 flex-col"><div class=3D"re=
lative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full flex-col grow=
"><div data-message-author-role=3D"user" data-message-id=3D"302457ae-3037-4=
681-9cd0-0a83012da473" dir=3D"auto" class=3D"min-h-8 text-message relative =
flex w-full flex-col items-end gap-2 text-start break-words whitespace-norm=
al [.text-message+&amp;]:mt-5"><div class=3D"flex w-full flex-col gap-1 emp=
ty:hidden items-end rtl:items-start"><div class=3D"flex gap-2 flex-wrap mt-=
1 max-w-[80%] justify-end"><div class=3D"group text-token-text-primary rela=
tive inline-block text-sm"><span class=3D"" data-state=3D"closed"><a target=
=3D"_blank" rel=3D"noreferrer" class=3D"cursor-pointer"><div class=3D"borde=
r-token-border-default bg-token-main-surface-primary relative overflow-hidd=
en border rounded-xl"><div class=3D"p-2 w-80"><div class=3D"flex flex-row i=
tems-center gap-2"><div class=3D"relative h-10 w-10 shrink-0 overflow-hidde=
n rounded-lg"><svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 36 3=
6" fill=3D"none" class=3D"h-10 w-10 shrink-0" width=3D"36" height=3D"36"><r=
ect width=3D"36" height=3D"36" rx=3D"6" fill=3D"#0088FF"></rect><path d=3D"=
M18.833 9.66663H12.9997C12.5576 9.66663 12.1337 9.84222 11.8212 10.1548C11.=
5086 10.4673 11.333 10.8913 11.333 11.3333V24.6666C11.333 25.1087 11.5086 2=
5.5326 11.8212 25.8451C12.1337 26.1577 12.5576 26.3333 12.9997 26.3333H22.9=
997C23.4417 26.3333 23.8656 26.1577 24.1782 25.8451C24.4907 25.5326 24.6663=
 25.1087 24.6663 24.6666V15.5L18.833 9.66663Z" stroke=3D"white" stroke-widt=
h=3D"1.66667" stroke-linecap=3D"round" stroke-linejoin=3D"round"></path><pa=
th d=3D"M18.833 9.66663V15.5H24.6663" stroke=3D"white" stroke-width=3D"1.66=
667" stroke-linecap=3D"round" stroke-linejoin=3D"round"></path></svg></div>=
<div class=3D"overflow-hidden"><div class=3D"truncate font-semibold">sub-An=
_ses-20220105T173929_image.nwb</div><div class=3D"text-token-text-secondary=
 truncate">File</div></div></div></div></div></a></span></div></div><div cl=
ass=3D"flex flex-col gap-2 w-[80%]"></div><div class=3D"relative max-w-[var=
(--user-chat-width,70%)] bg-token-message-surface rounded-3xl px-5 py-2.5 r=
ounded-se-lg"><div class=3D"whitespace-pre-wrap">make it so that the fixati=
on times align with the ephys data</div></div></div></div></div></div></div=
></div></div></article><article class=3D"text-token-text-primary w-full" di=
r=3D"auto" data-testid=3D"conversation-turn-32" data-scroll-anchor=3D"false=
"><h6 class=3D"sr-only">ChatGPT said:</h6><div class=3D"text-base my-auto m=
x-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[--thread-conte=
nt-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--spacing(16)] px=
-(--thread-content-margin)"><div class=3D"[--thread-content-max-width:32rem=
] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thread-content-ma=
x-width:48rem] mx-auto flex max-w-(--thread-content-max-width) flex-1 text-=
base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visible:outline-hidd=
en" tabindex=3D"-1"><div class=3D"group/conversation-turn relative flex w-f=
ull min-w-0 flex-col agent-turn"><div class=3D"relative flex-col gap-1 md:g=
ap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-author=
-role=3D"assistant" data-message-id=3D"bc333945-8790-447f-868b-5b37226e93c5=
" dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col =
items-end gap-2 text-start break-words whitespace-normal [.text-message+&am=
p;]:mt-5" data-message-model-slug=3D"gpt-4o"><div class=3D"flex w-full flex=
-col gap-1 empty:hidden first:pt-[3px]"><div class=3D"markdown prose dark:p=
rose-invert w-full break-words dark"><p data-start=3D"0" data-end=3D"132" c=
lass=3D"">Perfect =E2=80=94 since you want the <strong data-start=3D"29" da=
ta-end=3D"78">fixation times to align with the ephys raster</strong>, the k=
ey is to <strong data-start=3D"94" data-end=3D"123">ensure a shared time ba=
se</strong> between:</p>
<ul data-start=3D"134" data-end=3D"296">
<li data-start=3D"134" data-end=3D"221" class=3D"">
<p data-start=3D"136" data-end=3D"221" class=3D""><code data-start=3D"136" =
data-end=3D"177">fixations_with_image_index_and_path.csv</code> (with <code=
 data-start=3D"184" data-end=3D"196">start_time</code>, <code data-start=3D=
"198" data-end=3D"209">stop_time</code> in seconds)</p>
</li>
<li data-start=3D"222" data-end=3D"296" class=3D"">
<p data-start=3D"224" data-end=3D"296" class=3D""><code data-start=3D"224" =
data-end=3D"237">raster_data</code> (aligned to the <code data-start=3D"254=
" data-end=3D"269">starting_time</code> from the <code data-start=3D"279" d=
ata-end=3D"288">rasters</code> object)</p>
</li>
</ul>
<hr data-start=3D"298" data-end=3D"301" class=3D"">
<h3 data-start=3D"303" data-end=3D"413" class=3D"">=E2=9C=85 Solution: Shif=
t raster time vector to be <strong data-start=3D"350" data-end=3D"380">rela=
tive to the experiment</strong>, not relative to <code data-start=3D"398" d=
ata-end=3D"413">starting_time</code></h3>
<p data-start=3D"415" data-end=3D"429" class=3D"">Fix this line:</p>
<pre class=3D"overflow-visible!" data-start=3D"430" data-end=3D"578"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-comment"># CURRENT (incorrect f=
or alignment)</span></span><span>
time_vector_ms =3D np.array([</span><span><span class=3D"hljs-built_in">int=
</span></span><span>((starting_time + i / rate) * </span><span><span class=
=3D"hljs-number">1000</span></span><span>) </span><span><span class=3D"hljs=
-keyword">for</span></span><span> i </span><span><span class=3D"hljs-keywor=
d">in</span></span><span> </span><span><span class=3D"hljs-built_in">range<=
/span></span><span>(num_timepoints)])
</span></span></code></div></div></pre>
<p data-start=3D"580" data-end=3D"583" class=3D"">To:</p>
<pre class=3D"overflow-visible!" data-start=3D"584" data-end=3D"829"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div c=
lass=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"b=
g-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-mai=
n-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"2=
4" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M=
7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.=
6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19=
V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19=
.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.4477=
2 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.55=
23 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColo=
r"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5=
 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fi=
ll=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke=
-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12=
203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007=
 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8=
372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19=
.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.=
5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15=
 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513=
 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.=
66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span><span class=3D"hljs-comment"># =E2=9C=85 CORRECT: M=
atch fixation timestamps that are in experiment time (e.g., relative to ima=
ge onset, not to raster starting_time)</span></span><span>
time_vector_ms =3D np.array([</span><span><span class=3D"hljs-built_in">int=
</span></span><span>(i * </span><span><span class=3D"hljs-number">1000</spa=
n></span><span> / rate + starting_time * </span><span><span class=3D"hljs-n=
umber">1000</span></span><span>) </span><span><span class=3D"hljs-keyword">=
for</span></span><span> i </span><span><span class=3D"hljs-keyword">in</spa=
n></span><span> </span><span><span class=3D"hljs-built_in">range</span></sp=
an><span>(num_timepoints)])
</span></span></code></div></div></pre>
<p data-start=3D"831" data-end=3D"869" class=3D"">Then your raster columns =
will be like:</p>
<pre class=3D"overflow-visible!" data-start=3D"870" data-end=3D"911"><div c=
lass=3D"contain-inline-size rounded-md border-[0.5px] border-token-border-m=
edium relative bg-token-sidebar-surface-primary"><div class=3D"flex items-c=
enter text-token-text-secondary px-4 py-2 text-xs font-sans justify-between=
 h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondary =
select-none rounded-t-[5px]"></div><div class=3D"sticky top-9"><div class=
=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D"bg-to=
ken-sidebar-surface-primary text-token-text-secondary dark:bg-token-main-su=
rface-secondary flex items-center rounded-sm px-2 font-sans text-xs"><span =
class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center s=
elect-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D"24" v=
iewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cla=
ss=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M7 5C=
7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569=
 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C=
2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.552=
3 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 =
5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 2=
0 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentColor"><=
/path></svg>Copy</button></span><span class=3D"" data-state=3D"closed"><but=
ton class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg width=3D"2=
4" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3=
.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.5 2.5C=
5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" fill=3D=
"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" stroke-line=
join=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.12203 1=
9.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.3007 5.41=
118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.8372C9=
.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 19.2549=
 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10.5C21.=
3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 15 5.5L=
7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.24513 14.4=
392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5.66282=
 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"rou=
nd" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" stroke=3D"=
currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-linejoin=
=3D"round"></path></svg>Edit</button></span></div></div></div><div class=3D=
"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre!"><span><sp=
an>time_239812ms, time_239813ms, ...
</span></span></code></div></div></pre>
<p data-start=3D"912" data-end=3D"986" class=3D"">which corresponds directl=
y to fixation <code data-start=3D"951" data-end=3D"963">start_time</code> v=
alues like <code data-start=3D"976" data-end=3D"985">239.812</code>.</p>
<hr data-start=3D"988" data-end=3D"991" class=3D"">
<h3 data-start=3D"993" data-end=3D"1007" class=3D"">=F0=9F=94=84 Summary</h=
3>
<p data-start=3D"1008" data-end=3D"1134" class=3D"">If your fixation CSV <c=
ode data-start=3D"1029" data-end=3D"1041">start_time</code> and <code data-=
start=3D"1046" data-end=3D"1057">stop_time</code> are in <strong data-start=
=3D"1065" data-end=3D"1095">experiment time in seconds</strong>, then this =
is the exact change needed:</p>
<h4 data-start=3D"1136" data-end=3D"1154" class=3D"">Replace this:</h4>
<pre class=3D"overflow-visible!" data-start=3D"1155" data-end=3D"1267"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>time_vector_ms =3D np.array([</span><span><span cla=
ss=3D"hljs-built_in">int</span></span><span>((starting_time + i / rate) * <=
/span><span><span class=3D"hljs-number">1000</span></span><span>) </span><s=
pan><span class=3D"hljs-keyword">for</span></span><span> i </span><span><sp=
an class=3D"hljs-keyword">in</span></span><span> </span><span><span class=
=3D"hljs-built_in">range</span></span><span>(num_timepoints)])
</span></span></code></div></div></pre>
<h4 data-start=3D"1269" data-end=3D"1284" class=3D"">With this:</h4>
<pre class=3D"overflow-visible!" data-start=3D"1285" data-end=3D"1422"><div=
 class=3D"contain-inline-size rounded-md border-[0.5px] border-token-border=
-medium relative bg-token-sidebar-surface-primary"><div class=3D"flex items=
-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-betwe=
en h-9 bg-token-sidebar-surface-primary dark:bg-token-main-surface-secondar=
y select-none rounded-t-[5px]">python</div><div class=3D"sticky top-9"><div=
 class=3D"absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class=3D=
"bg-token-sidebar-surface-primary text-token-text-secondary dark:bg-token-m=
ain-surface-secondary flex items-center rounded-sm px-2 font-sans text-xs">=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter select-none px-4 py-1" aria-label=3D"Copy"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-xs"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 2=
0.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 =
19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C=
19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44=
772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.=
5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" fill=3D"currentCo=
lor"></path></svg>Copy</button></span><span class=3D"" data-state=3D"closed=
"><button class=3D"flex items-center gap-1 px-4 py-1 select-none"><svg widt=
h=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://=
www.w3.org/2000/svg" class=3D"icon-xs"><path d=3D"M2.5 5.5C4.3 5.2 5.2 4 5.=
5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 4.3 5.8 2.5 5.5Z" f=
ill=3D"currentColor" stroke=3D"currentColor" stroke-linecap=3D"round" strok=
e-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L5.18413 19.3952C5.1=
2203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.2067 5.29328 20.300=
7 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 20.3159L8.97693 19.=
8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.7652 19.407 11.0608 1=
9.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12.4503 18.0497L20 10=
.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.11929 16.3807 4.11929 1=
5 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.43197 14.1657C6.2451=
3 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.3963 5.78802 15.7719 5=
.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M14.5 7L18.5 11" str=
oke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></svg>Edit</button></span></div></div></div><div cla=
ss=3D"overflow-y-auto p-4" dir=3D"ltr"><code class=3D"whitespace-pre! langu=
age-python"><span><span>start_ms =3D starting_time * </span><span><span cla=
ss=3D"hljs-number">1000</span></span><span>
time_vector_ms =3D np.array([</span><span><span class=3D"hljs-built_in">int=
</span></span><span>(start_ms + i * </span><span><span class=3D"hljs-number=
">1000</span></span><span> / rate) </span><span><span class=3D"hljs-keyword=
">for</span></span><span> i </span><span><span class=3D"hljs-keyword">in</s=
pan></span><span> </span><span><span class=3D"hljs-built_in">range</span></=
span><span>(num_timepoints)])
</span></span></code></div></div></pre>
<p data-start=3D"1424" data-end=3D"1512" class=3D"">This ensures all <code =
data-start=3D"1441" data-end=3D"1452">time_*.ms</code> columns will line up=
 directly with the fixation timestamps.</p>
<p data-start=3D"1514" data-end=3D"1628" class=3D"">Let me know if you'd li=
ke help verifying the alignment between specific fixation rows and the rast=
er column names.</p></div></div></div></div><div class=3D"flex absolute sta=
rt-0 end-0 flex justify-start"><div class=3D"touch:-me-2 touch:-ms-3.5 -ms-=
2.5 -me-1 flex items-center p-1 select-none -mt-1 focus-within:transition-n=
one hover:transition-none duration-500 group-hover/turn-messages:delay-300 =
pointer-events-none [mask-image:linear-gradient(to_right,black_33%,transpar=
ent_66%)] [mask-position:100%_0%] [mask-size:300%_100%] motion-safe:transit=
ion-[mask-position] group-hover/turn-messages:pointer-events-auto group-hov=
er/turn-messages:[mask-position:0_0] group-focus-within/turn-messages:point=
er-events-auto group-focus-within/turn-messages:[mask-position:0_0] has-dat=
a-[state=3Dopen]:pointer-events-auto has-data-[state=3Dopen]:[mask-position=
:0_0]"><span class=3D"" data-state=3D"closed"><button class=3D"text-token-t=
ext-secondary hover:bg-token-main-surface-secondary rounded-lg" aria-label=
=3D"Copy" data-testid=3D"copy-turn-action-button"><span class=3D"touch:w-[3=
8px] flex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" =
height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.or=
g/2000/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 =
5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.3431=
5 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.3=
4315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10=
C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.447=
72 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z" =
fill=3D"currentColor"></path></svg></span></button></span><span class=3D"" =
data-state=3D"closed"><button class=3D"text-token-text-secondary hover:bg-t=
oken-main-surface-secondary rounded-lg" aria-label=3D"Good response" data-t=
estid=3D"good-response-turn-action-button"><span class=3D"touch:w-[38px] fl=
ex h-[30px] w-[30px] items-center justify-center"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"icon-md-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"even=
odd" d=3D"M12.1318 2.50389C12.3321 2.15338 12.7235 1.95768 13.124 2.00775L1=
3.5778 2.06447C16.0449 2.37286 17.636 4.83353 16.9048 7.20993L16.354 8.9999=
9H17.0722C19.7097 8.99999 21.6253 11.5079 20.9313 14.0525L19.5677 19.0525C1=
9.0931 20.7927 17.5124 22 15.7086 22H6C4.34315 22 3 20.6568 3 19V12C3 10.34=
31 4.34315 8.99999 6 8.99999H8C8.25952 8.99999 8.49914 8.86094 8.6279 8.635=
61L12.1318 2.50389ZM10 20H15.7086C16.6105 20 17.4008 19.3964 17.6381 18.526=
2L19.0018 13.5262C19.3488 12.2539 18.391 11 17.0722 11H15C14.6827 11 14.384=
1 10.8494 14.1956 10.5941C14.0071 10.3388 13.9509 10.0092 14.0442 9.70591L1=
4.9932 6.62175C15.3384 5.49984 14.6484 4.34036 13.5319 4.08468L10.3644 9.62=
789C10.0522 10.1742 9.56691 10.5859 9 10.8098V19C9 19.5523 9.44772 20 10 20=
ZM7 11V19C7 19.3506 7.06015 19.6872 7.17071 20H6C5.44772 20 5 19.5523 5 19V=
12C5 11.4477 5.44772 11 6 11H7Z" fill=3D"currentColor"></path></svg></span>=
</button></span><span class=3D"" data-state=3D"closed"><button class=3D"tex=
t-token-text-secondary hover:bg-token-main-surface-secondary rounded-lg" ar=
ia-label=3D"Bad response" data-testid=3D"bad-response-turn-action-button"><=
span class=3D"touch:w-[38px] flex h-[30px] w-[30px] items-center justify-ce=
nter"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" x=
mlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md-heavy"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11.8727 21.4961C11.6725 21.8466 11=
.2811 22.0423 10.8805 21.9922L10.4267 21.9355C7.95958 21.6271 6.36855 19.16=
65 7.09975 16.7901L7.65054 15H6.93226C4.29476 15 2.37923 12.4921 3.0732 9.9=
4753L4.43684 4.94753C4.91145 3.20728 6.49209 2 8.29589 2H18.0045C19.6614 2 =
21.0045 3.34315 21.0045 5V12C21.0045 13.6569 19.6614 15 18.0045 15H16.0045C=
15.745 15 15.5054 15.1391 15.3766 15.3644L11.8727 21.4961ZM14.0045 4H8.2958=
9C7.39399 4 6.60367 4.60364 6.36637 5.47376L5.00273 10.4738C4.65574 11.746 =
5.61351 13 6.93226 13H9.00451C9.32185 13 9.62036 13.1506 9.8089 13.4059C9.9=
9743 13.6612 10.0536 13.9908 9.96028 14.2941L9.01131 17.3782C8.6661 18.5002=
 9.35608 19.6596 10.4726 19.9153L13.6401 14.3721C13.9523 13.8258 14.4376 13=
.4141 15.0045 13.1902V5C15.0045 4.44772 14.5568 4 14.0045 4ZM17.0045 13V5C1=
7.0045 4.64937 16.9444 4.31278 16.8338 4H18.0045C18.5568 4 19.0045 4.44772 =
19.0045 5V12C19.0045 12.5523 18.5568 13 18.0045 13H17.0045Z" fill=3D"curren=
tColor"></path></svg></span></button></span><span class=3D"" data-state=3D"=
closed"><button class=3D"text-token-text-secondary hover:bg-token-main-surf=
ace-secondary rounded-lg" aria-label=3D"Read aloud" data-testid=3D"voice-pl=
ay-turn-action-button"><span class=3D"touch:w-[38px] flex h-[30px] w-[30px]=
 items-center justify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 =
0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-m=
d-heavy"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M11 4.9099C=
11 4.47485 10.4828 4.24734 10.1621 4.54132L6.67572 7.7372C6.49129 7.90626 6=
.25019 8.00005 6 8.00005H4C3.44772 8.00005 3 8.44776 3 9.00005V15C3 15.5523=
 3.44772 16 4 16H6C6.25019 16 6.49129 16.0938 6.67572 16.2629L10.1621 19.45=
88C10.4828 19.7527 11 19.5252 11 19.0902V4.9099ZM8.81069 3.06701C10.4142 1.=
59714 13 2.73463 13 4.9099V19.0902C13 21.2655 10.4142 22.403 8.81069 20.933=
1L5.61102 18H4C2.34315 18 1 16.6569 1 15V9.00005C1 7.34319 2.34315 6.00005 =
4 6.00005H5.61102L8.81069 3.06701ZM20.3166 6.35665C20.8019 6.09313 21.409 6=
.27296 21.6725 6.75833C22.5191 8.3176 22.9996 10.1042 22.9996 12.0001C22.99=
96 13.8507 22.5418 15.5974 21.7323 17.1302C21.4744 17.6185 20.8695 17.8054 =
20.3811 17.5475C19.8927 17.2896 19.7059 16.6846 19.9638 16.1962C20.6249 14.=
9444 20.9996 13.5175 20.9996 12.0001C20.9996 10.4458 20.6064 8.98627 19.914=
9 7.71262C19.6514 7.22726 19.8312 6.62017 20.3166 6.35665ZM15.7994 7.90049C=
16.241 7.5688 16.8679 7.65789 17.1995 8.09947C18.0156 9.18593 18.4996 10.53=
79 18.4996 12.0001C18.4996 13.3127 18.1094 14.5372 17.4385 15.5604C17.1357 =
16.0222 16.5158 16.1511 16.0539 15.8483C15.5921 15.5455 15.4632 14.9255 15.=
766 14.4637C16.2298 13.7564 16.4996 12.9113 16.4996 12.0001C16.4996 10.9859=
 16.1653 10.0526 15.6004 9.30063C15.2687 8.85905 15.3578 8.23218 15.7994 7.=
90049Z" fill=3D"currentColor"></path></svg></span></button></span><span cla=
ss=3D"" data-state=3D"closed"><button class=3D"text-token-text-secondary ho=
ver:bg-token-main-surface-secondary rounded-lg" aria-label=3D"Edit in canva=
s"><span class=3D"touch:w-[38px] flex h-[30px] w-[30px] items-center justif=
y-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"non=
e" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-md"><path d=3D"M2.5 5=
.5C4.3 5.2 5.2 4 5.5 2.5C5.8 4 6.7 5.2 8.5 5.5C6.7 5.8 5.8 7 5.5 8.5C5.2 7 =
4.3 5.8 2.5 5.5Z" fill=3D"currentColor" stroke=3D"currentColor" stroke-line=
cap=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M5.66282 16.5231L=
5.18413 19.3952C5.12203 19.7678 5.09098 19.9541 5.14876 20.0888C5.19933 20.=
2067 5.29328 20.3007 5.41118 20.3512C5.54589 20.409 5.73218 20.378 6.10476 =
20.3159L8.97693 19.8372C9.72813 19.712 10.1037 19.6494 10.4542 19.521C10.76=
52 19.407 11.0608 19.2549 11.3343 19.068C11.6425 18.8575 11.9118 18.5882 12=
.4503 18.0497L20 10.5C21.3807 9.11929 21.3807 6.88071 20 5.5C18.6193 4.1192=
9 16.3807 4.11929 15 5.5L7.45026 13.0497C6.91175 13.5882 6.6425 13.8575 6.4=
3197 14.1657C6.24513 14.4392 6.09299 14.7348 5.97903 15.0458C5.85062 15.396=
3 5.78802 15.7719 5.66282 16.5231Z" stroke=3D"currentColor" stroke-width=3D=
"2" stroke-linecap=3D"round" stroke-linejoin=3D"round"></path><path d=3D"M1=
4.5 7L18.5 11" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D=
"round" stroke-linejoin=3D"round"></path></svg></span></button></span></div=
></div></div></div></div></div></article><article class=3D"text-token-text-=
primary w-full" dir=3D"auto" data-testid=3D"conversation-turn-33" data-scro=
ll-anchor=3D"false"><h5 class=3D"sr-only">You said:</h5><div class=3D"text-=
base my-auto mx-auto py-5 [--thread-content-margin:--spacing(4)] @[37rem]:[=
--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:--s=
pacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content-m=
ax-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--thr=
ead-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-width=
) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/turn-messages focus-visibl=
e:outline-hidden" tabindex=3D"-1"><div class=3D"group/conversation-turn rel=
ative flex w-full min-w-0 flex-col"><div class=3D"relative flex-col gap-1 m=
d:gap-3"><div class=3D"flex max-w-full flex-col grow"><div data-message-aut=
hor-role=3D"user" data-message-id=3D"0fed53b6-90fe-4a3a-934b-60b24918f2f8" =
dir=3D"auto" class=3D"min-h-8 text-message relative flex w-full flex-col it=
ems-end gap-2 text-start break-words whitespace-normal [.text-message+&amp;=
]:mt-5"><div class=3D"flex w-full flex-col gap-1 empty:hidden items-end rtl=
:items-start"><div class=3D"relative max-w-[var(--user-chat-width,70%)] bg-=
token-message-surface rounded-3xl px-5 py-2.5"><div class=3D"whitespace-pre=
-wrap">never mind
</div></div></div></div></div></div></div></div></div></article><article cl=
ass=3D"text-token-text-primary w-full" dir=3D"auto" data-testid=3D"conversa=
tion-turn-34" data-scroll-anchor=3D"true"><h6 class=3D"sr-only">ChatGPT sai=
d:</h6><div class=3D"text-base my-auto mx-auto py-5 [--thread-content-margi=
n:--spacing(4)] @[37rem]:[--thread-content-margin:--spacing(6)] @[72rem]:[-=
-thread-content-margin:--spacing(16)] px-(--thread-content-margin)"><div cl=
ass=3D"[--thread-content-max-width:32rem] @[34rem]:[--thread-content-max-wi=
dth:40rem] @[64rem]:[--thread-content-max-width:48rem] mx-auto flex max-w-(=
--thread-content-max-width) flex-1 text-base gap-4 md:gap-5 lg:gap-6 group/=
turn-messages focus-visible:outline-hidden" tabindex=3D"-1"><div class=3D"g=
roup/conversation-turn relative flex w-full min-w-0 flex-col agent-turn"><d=
iv class=3D"relative flex-col gap-1 md:gap-3"><div class=3D"flex max-w-full=
 flex-col grow"><div data-message-author-role=3D"assistant" data-message-id=
=3D"19a39573-851e-4f3c-9dae-3f1ae2ed3fa7" dir=3D"auto" class=3D"min-h-8 tex=
t-message relative flex w-full flex-col items-end gap-2 text-start break-wo=
rds whitespace-normal [.text-message+&amp;]:mt-5" data-message-model-slug=
=3D"gpt-4o"><div class=3D"flex w-full flex-col gap-1 empty:hidden first:pt-=
[3px]"><div class=3D"markdown prose dark:prose-invert w-full break-words da=
rk"><p data-start=3D"0" data-end=3D"174" class=3D"">No problem =E2=80=94 if=
 you change your mind or want to double-check the raster/fixation alignment=
 later, just let me know!<br data-start=3D"115" data-end=3D"118">
I'm ready to help whenever you're ready to move forward.</p></div></div></d=
iv></div></div></div></div></div></article><div aria-hidden=3D"true" data-e=
dge=3D"true" class=3D"pointer-events-none h-px w-px"></div><div></div><div =
style=3D"opacity: 1;"><button class=3D"cursor-pointer absolute z-10 rounded=
-full bg-clip-padding border text-token-text-secondary border-token-border-=
default end-1/2 translate-x-1/2 bg-token-main-surface-primary w-8 h-8 flex =
items-center justify-center bottom-8"><svg width=3D"24" height=3D"24" viewB=
ox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-md text-token-text-primary"><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M12 21C11.7348 21 11.4804 20.8946 11.2929 20.7071L4.29289=
 13.7071C3.90237 13.3166 3.90237 12.6834 4.29289 12.2929C4.68342 11.9024 5.=
31658 11.9024 5.70711 12.2929L11 17.5858V4C11 3.44772 11.4477 3 12 3C12.552=
3 3 13 3.44772 13 4V17.5858L18.2929 12.2929C18.6834 11.9024 19.3166 11.9024=
 19.7071 12.2929C20.0976 12.6834 20.0976 13.3166 19.7071 13.7071L12.7071 20=
.7071C12.5196 20.8946 12.2652 21 12 21Z" fill=3D"currentColor"></path></svg=
></button></div></div></div></div></div><div id=3D"thread-bottom-container"=
 class=3D"isolate z-3 w-full basis-auto has-data-has-thread-error:pt-2 has-=
data-has-thread-error:[box-shadow:var(--sharp-edge-bottom-shadow)] md:borde=
r-transparent md:pt-0 dark:border-white/20 md:dark:border-transparent"><div=
 class=3D"text-base mx-auto [--thread-content-margin:--spacing(4)] @[37rem]=
:[--thread-content-margin:--spacing(6)] @[72rem]:[--thread-content-margin:-=
-spacing(16)] px-(--thread-content-margin)"><div class=3D"[--thread-content=
-max-width:32rem] @[34rem]:[--thread-content-max-width:40rem] @[64rem]:[--t=
hread-content-max-width:48rem] mx-auto flex max-w-(--thread-content-max-wid=
th) flex-1 text-base gap-4 md:gap-5 lg:gap-6"><div class=3D"flex justify-ce=
nter empty:hidden"></div><div class=3D"relative z-1 flex max-w-full flex-1 =
flex-col h-full max-xs:[--force-hide-label:none]" type=3D"button" aria-hasp=
opup=3D"dialog" aria-expanded=3D"false" aria-controls=3D"radix-=C2=ABr43t=
=C2=BB" data-state=3D"closed"><div class=3D"absolute start-0 end-0 bottom-f=
ull z-20"></div><form class=3D"w-full [view-transition-name:var(--vt-compos=
er)]" data-type=3D"unified-composer"><div class=3D"border-token-border-defa=
ult flex w-full cursor-text flex-col items-center justify-center rounded-[2=
8px] border bg-clip-padding contain-inline-size overflow-clip shadow-sm sm:=
shadow-lg dark:shadow-none! bg-token-main-surface-primary dark:bg-[#303030]=
"><div class=3D"relative flex w-full items-end px-3 py-3"><div class=3D"rel=
ative flex w-full flex-auto flex-col"><div class=3D"relative ms-1.5 grid gr=
id-cols-[auto_minmax(0,1fr)]"><div class=3D"items-top flex justify-center">=
<div style=3D"opacity: 1;"></div></div><div class=3D"relative flex-auto bg-=
transparent pt-0.5" style=3D"margin-bottom: -20px; transform: translateY(-7=
px);"><div class=3D"flex flex-col justify-start" style=3D"min-height: 0px;"=
><div class=3D"flex min-h-12 items-start"><div class=3D"max-w-full min-w-0 =
flex-1"><div class=3D"_prosemirror-parent_k4nam_2 text-token-text-primary m=
ax-h-[25dvh] max-h-52 overflow-auto [scrollbar-width:thin] default-browser =
min-h-12 pe-3"><textarea class=3D"text-token-text-primary placeholder:text-=
token-text-tertiary block h-10 w-full resize-none border-0 bg-transparent p=
x-0 py-2 ring-0 placeholder:ps-px" placeholder=3D"Ask anything" data-virtua=
lkeyboard=3D"true" style=3D"display: none;"></textarea><div contenteditable=
=3D"true" translate=3D"no" class=3D"ProseMirror" id=3D"prompt-textarea" dat=
a-virtualkeyboard=3D"true"><p data-placeholder=3D"Ask anything" class=3D"pl=
aceholder"><br class=3D"ProseMirror-trailingBreak"></p></div></div></div></=
div></div></div></div><div class=3D"justify-content-end relative ms-2 flex =
w-full flex-auto flex-col"><div class=3D"flex-auto"></div></div><div style=
=3D"height: 48px;"></div></div><div class=3D"bg-primary-surface-primary abs=
olute start-3 end-0 bottom-3 z-2 flex items-center"><div class=3D"w-full"><=
div data-testid=3D"composer-footer-actions" class=3D"max-xs:gap-1 flex item=
s-center gap-2 overflow-x-auto [scrollbar-width:none]" style=3D"margin-righ=
t: 102px;"><div data-testid=3D"composer-action-file-upload" style=3D"view-t=
ransition-name: var(--vt-composer-attach-file-action);"><div class=3D"relat=
ive"><div class=3D"relative"><div class=3D"flex flex-col"><input multiple=
=3D"" tabindex=3D"-1" class=3D"hidden" type=3D"file" style=3D"display: none=
;"><span class=3D"hidden"></span><button type=3D"button" id=3D"radix-=C2=AB=
r43u=C2=BB" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=3D"cl=
osed" class=3D"text-token-text-primary border border-transparent inline-fle=
x items-center justify-center gap-1 rounded-lg text-sm dark:transparent dar=
k:bg-transparent leading-none outline-hidden cursor-pointer hover:bg-token-=
main-surface-secondary dark:hover:bg-token-main-surface-secondary focus-vis=
ible:bg-token-main-surface-secondary radix-state-active:text-token-text-sec=
ondary radix-disabled:cursor-auto radix-disabled:bg-transparent radix-disab=
led:text-token-text-tertiary dark:radix-disabled:bg-transparent m-0 h-0 w-0=
 border-none bg-transparent p-0"></button><span class=3D"flex" data-state=
=3D"closed"><button aria-disabled=3D"false" aria-label=3D"Upload files and =
more" class=3D"flex items-center justify-center h-9 rounded-full border bor=
der-token-border-default text-token-text-secondary w-9 can-hover:hover:bg-t=
oken-main-surface-secondary"><svg width=3D"24" height=3D"24" viewBox=3D"0 0=
 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" aria-label=3D"" =
class=3D"h-[18px] w-[18px]"><path fill-rule=3D"evenodd" clip-rule=3D"evenod=
d" d=3D"M12 3C12.5523 3 13 3.44772 13 4L13 11H20C20.5523 11 21 11.4477 21 1=
2C21 12.5523 20.5523 13 20 13L13 13L13 20C13 20.5523 12.5523 21 12 21C11.44=
77 21 11 20.5523 11 20L11 13L4 13C3.44772 13 3 12.5523 3 12C3 11.4477 3.447=
72 11 4 11L11 11L11 4C11 3.44772 11.4477 3 12 3Z" fill=3D"currentColor"></p=
ath></svg></button></span><div class=3D"w-fit" type=3D"button" aria-haspopu=
p=3D"dialog" aria-expanded=3D"false" aria-controls=3D"radix-=C2=ABr441=C2=
=BB" data-state=3D"closed"><div></div></div></div></div></div></div><div da=
ta-testid=3D"system-hint-search" style=3D"view-transition-name: var(--vt-co=
mposer-search-action);"><div><span class=3D"inline-block" data-state=3D"clo=
sed"><div class=3D"radix-state-open:bg-black/10 inline-flex h-9 rounded-ful=
l border text-[13px] font-medium text-token-text-secondary border-token-bor=
der-default can-hover:hover:bg-token-main-surface-secondary focus-visible:o=
utline-black dark:focus-visible:outline-white"><button class=3D"flex h-full=
 min-w-8 items-center justify-center p-2" data-testid=3D"composer-button-se=
arch" aria-pressed=3D"false" aria-label=3D"Search"><svg width=3D"24" height=
=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000=
/svg" class=3D"h-[18px] w-[18px]"><path fill-rule=3D"evenodd" clip-rule=3D"=
evenodd" d=3D"M2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 =
17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12ZM11.9851 4.00291C11.9933=
 4.00046 11.9982 4.00006 11.9996 4C12.001 4.00006 12.0067 4.00046 12.0149 4=
.00291C12.0256 4.00615 12.047 4.01416 12.079 4.03356C12.2092 4.11248 12.425=
8 4.32444 12.675 4.77696C12.9161 5.21453 13.1479 5.8046 13.3486 6.53263C13.=
6852 7.75315 13.9156 9.29169 13.981 11H10.019C10.0844 9.29169 10.3148 7.753=
15 10.6514 6.53263C10.8521 5.8046 11.0839 5.21453 11.325 4.77696C11.5742 4.=
32444 11.7908 4.11248 11.921 4.03356C11.953 4.01416 11.9744 4.00615 11.9851=
 4.00291ZM8.01766 11C8.08396 9.13314 8.33431 7.41167 8.72334 6.00094C8.8736=
6 5.45584 9.04762 4.94639 9.24523 4.48694C6.48462 5.49946 4.43722 7.9901 4.=
06189 11H8.01766ZM4.06189 13H8.01766C8.09487 15.1737 8.42177 17.1555 8.93 1=
8.6802C9.02641 18.9694 9.13134 19.2483 9.24522 19.5131C6.48461 18.5005 4.43=
722 16.0099 4.06189 13ZM10.019 13H13.981C13.9045 14.9972 13.6027 16.7574 13=
.1726 18.0477C12.9206 18.8038 12.6425 19.3436 12.3823 19.6737C12.2545 19.83=
59 12.1506 19.9225 12.0814 19.9649C12.0485 19.9852 12.0264 19.9935 12.0153 =
19.9969C12.0049 20.0001 11.9999 20 11.9999 20C11.9999 20 11.9948 20 11.9847=
 19.9969C11.9736 19.9935 11.9515 19.9852 11.9186 19.9649C11.8494 19.9225 11=
.7455 19.8359 11.6177 19.6737C11.3575 19.3436 11.0794 18.8038 10.8274 18.04=
77C10.3973 16.7574 10.0955 14.9972 10.019 13ZM15.9823 13C15.9051 15.1737 15=
.5782 17.1555 15.07 18.6802C14.9736 18.9694 14.8687 19.2483 14.7548 19.5131=
C17.5154 18.5005 19.5628 16.0099 19.9381 13H15.9823ZM19.9381 11C19.5628 7.9=
9009 17.5154 5.49946 14.7548 4.48694C14.9524 4.94639 15.1263 5.45584 15.276=
7 6.00094C15.6657 7.41167 15.916 9.13314 15.9823 11H19.9381Z" fill=3D"curre=
ntColor"></path></svg><span style=3D"width: fit-content; opacity: 1; transf=
orm: none;"><div class=3D"[display:var(--force-hide-label)] ps-1 pe-1 white=
space-nowrap">Search</div></span></button></div></span></div></div><div dat=
a-testid=3D"composer-action-system-hint-button" style=3D"view-transition-na=
me: var(--vt-composer-system-hint-action);"><span class=3D"hidden"></span><=
span class=3D"" data-state=3D"closed"><button type=3D"button" id=3D"radix-=
=C2=ABr444=C2=BB" aria-haspopup=3D"menu" aria-expanded=3D"false" data-state=
=3D"closed" class=3D"_toolsButton_d2h2h_8 border-token-border-default text-=
token-text-secondary radix-state-open:bg-black/10 can-hover:hover:bg-token-=
main-surface-secondary flex h-9 min-w-9 items-center justify-center rounded=
-full border p-1 text-xs font-semibold focus-visible:outline-black disabled=
:opacity-30 dark:focus-visible:outline-white" aria-label=3D"Use a tool"><sv=
g width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"h=
ttp://www.w3.org/2000/svg" class=3D"pointer-events-none h-5 w-5"><path fill=
-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M3 12C3 10.8954 3.89543 10 5 1=
0C6.10457 10 7 10.8954 7 12C7 13.1046 6.10457 14 5 14C3.89543 14 3 13.1046 =
3 12ZM10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12C14 13.1=
046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12ZM17 12C17 10.8954 17.8954 =
10 19 10C20.1046 10 21 10.8954 21 12C21 13.1046 20.1046 14 19 14C17.8954 14=
 17 13.1046 17 12Z" fill=3D"currentColor"></path></svg></button></span></di=
v></div><div class=3D"absolute end-3 bottom-0 flex items-center gap-2" data=
-testid=3D"composer-trailing-actions"><div class=3D"ms-auto flex items-cent=
er gap-1.5"><span class=3D"" data-state=3D"closed"><button class=3D"btn rel=
ative btn-primary btn-small flex items-center justify-center rounded-full b=
order border-token-border-default p-1 text-token-text-secondary focus-visib=
le:outline-black dark:text-token-text-secondary dark:focus-visible:outline-=
white bg-transparent dark:bg-transparent [view-transition-name:var(--vt-com=
poser-whisper-button)] can-hover:hover:bg-token-main-surface-secondary dark=
:hover:bg-transparent dark:hover:opacity-100 h-9 min-h-9 w-9 min-w-9" aria-=
label=3D"Dictate button" type=3D"button"><div class=3D"flex items-center ju=
stify-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" aria-label=3D"Mic icon" class=
=3D"h-[18px] w-[18px]" font-size=3D"inherit"><path d=3D"M18.9953 11.5415C19=
.5246 11.6991 19.826 12.2559 19.6685 12.7852C18.7771 15.7804 16.179 18.0417=
 13 18.4381V19.5H14.5C15.0523 19.5 15.5 19.9477 15.5 20.5C15.5 21.0523 15.0=
523 21.5 14.5 21.5H9.50002C8.94773 21.5 8.50002 21.0523 8.50002 20.5C8.5000=
2 19.9477 8.94773 19.5 9.50002 19.5H11V18.4381C7.82093 18.0418 5.22279 15.7=
805 4.33136 12.7852C4.17382 12.2559 4.47522 11.6991 5.00456 11.5415C5.5339 =
11.384 6.09073 11.6854 6.24827 12.2148C6.98609 14.6939 9.28339 16.5 11.9999=
 16.5C14.7165 16.5 17.0138 14.6939 17.7516 12.2148C17.9091 11.6854 18.466 1=
1.384 18.9953 11.5415Z" fill=3D"currentColor"></path><path fill-rule=3D"eve=
nodd" clip-rule=3D"evenodd" d=3D"M14.5 10.5V7C14.5 5.61929 13.3807 4.5 12 4=
.5C10.6193 4.5 9.5 5.61929 9.5 7V10.5C9.5 11.8807 10.6193 13 12 13C13.3807 =
13 14.5 11.8807 14.5 10.5ZM12 2.5C9.51472 2.5 7.5 4.51472 7.5 7V10.5C7.5 12=
.9853 9.51472 15 12 15C14.4853 15 16.5 12.9853 16.5 10.5V7C16.5 4.51472 14.=
4853 2.5 12 2.5Z" fill=3D"currentColor"></path></svg></div></button></span>=
<span class=3D"" data-state=3D"closed"><button disabled=3D"" id=3D"composer=
-submit-button" aria-label=3D"Send prompt" data-testid=3D"send-button" clas=
s=3D"dark:disabled:bg-token-text-quaternary dark:disabled:text-token-main-s=
urface-secondary flex items-center justify-center rounded-full transition-c=
olors hover:opacity-70 disabled:text-[#f4f4f4] disabled:hover:opacity-100 d=
ark:focus-visible:outline-white bg-black text-white disabled:bg-[#D7D7D7] d=
ark:bg-white dark:text-black h-9 w-9"><svg width=3D"32" height=3D"32" viewB=
ox=3D"0 0 32 32" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-2xl"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M15.19=
18 8.90615C15.6381 8.45983 16.3618 8.45983 16.8081 8.90615L21.9509 14.049C2=
2.3972 14.4953 22.3972 15.2189 21.9509 15.6652C21.5046 16.1116 20.781 16.11=
16 20.3347 15.6652L17.1428 12.4734V22.2857C17.1428 22.9169 16.6311 23.4286 =
15.9999 23.4286C15.3688 23.4286 14.8571 22.9169 14.8571 22.2857V12.4734L11.=
6652 15.6652C11.2189 16.1116 10.4953 16.1116 10.049 15.6652C9.60265 15.2189=
 9.60265 14.4953 10.049 14.049L15.1918 8.90615Z" fill=3D"currentColor"></pa=
th></svg></button></span></div></div></div></div><div class=3D"absolute sta=
rt-4 top-3 ms-[1px] flex items-center pb-px"></div></div></div><div class=
=3D"w-full"></div></form></div></div></div><div class=3D"text-token-text-se=
condary relative mt-auto flex min-h-8 w-full items-center justify-center p-=
2 text-center text-xs md:px-[60px]"><div>ChatGPT can make mistakes. Check i=
mportant info.</div></div></div></div></div><div class=3D"group absolute en=
d-2 bottom-2 z-20 flex flex-col gap-1 md:flex lg:end-3 lg:bottom-3"><button=
 type=3D"button" id=3D"radix-=C2=ABr3ru=C2=BB" aria-haspopup=3D"menu" aria-=
expanded=3D"false" data-state=3D"closed" class=3D"border-token-border-defau=
lt text-token-text-secondary flex h-6 w-6 items-center justify-center round=
ed-full border text-xs">?</button></div></main></div></div><div class=3D"bg=
-token-sidebar-surface-primary relative z-1 shrink-0 overflow-x-hidden max-=
lg:w-0!" style=3D"width: 0px;"><div class=3D"absolute h-full pointer-events=
-none" style=3D"width: 400px;"><div class=3D"flex h-full flex-col"></div></=
div></div></div></div><div aria-live=3D"assertive" aria-atomic=3D"true" cla=
ss=3D"sr-only"></div><div aria-live=3D"polite" aria-atomic=3D"true" class=
=3D"sr-only"></div><audio class=3D"fixed start-0 bottom-0 hidden h-0 w-0" a=
utoplay=3D"" crossorigin=3D"anonymous"></audio><span class=3D"pointer-event=
s-none fixed inset-0 z-60 mx-auto my-2 flex max-w-[560px] flex-col items-st=
retch justify-start md:pb-5"></span><iframe height=3D"1" width=3D"1" style=
=3D"position: absolute; top: 0px; left: 0px; border: none; visibility: hidd=
en;"></iframe><div style=3D"opacity: 0; pointer-events: none; position: fix=
ed; color: rgb(33, 33, 33);"></div><div data-radix-popper-content-wrapper=
=3D"" style=3D"position: fixed; left: 0px; top: 0px; transform: translate(4=
81px, 811px); min-width: max-content; --radix-popper-transform-origin: 0% 0=
px; will-change: transform; z-index: auto; --radix-popper-available-width: =
989px; --radix-popper-available-height: 20px; --radix-popper-anchor-width: =
768px; --radix-popper-anchor-height: 0px;"><div data-side=3D"bottom" data-a=
lign=3D"start" data-state=3D"open" role=3D"dialog" id=3D"radix-=C2=ABr449=
=C2=BB" tabindex=3D"-1" style=3D"--radix-popover-content-transform-origin: =
var(--radix-popper-transform-origin); --radix-popover-content-available-wid=
th: var(--radix-popper-available-width); --radix-popover-content-available-=
height: var(--radix-popper-available-height); --radix-popover-trigger-width=
: var(--radix-popper-anchor-width); --radix-popover-trigger-height: var(--r=
adix-popper-anchor-height);"><div></div></div></div><span data-radix-focus-=
guard=3D"" tabindex=3D"0" style=3D"outline: none; opacity: 0; position: fix=
ed; pointer-events: none;"></span></body></html>
------MultipartBoundary--JeftemRFv6yz4tcA0Is1dkAJcckJ66FI5kZlNzJQ4K----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://lh3.googleusercontent.com/a/ACg8ocIw_6Y0QIlqJ43kXC1E-kh6ZjVz5hWW_HbZNMDy8hMaPVkAnQ=s96-c

iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAIAAABt+uBvAAAAA3NCSVQICAjb4U/gAAAABmJLR0QA
UQAtAKgUqKNtAAABpklEQVR4nO3cLU4DQRxA8e7HBcCCAtcESwjBkJ6ABImDIyCK4gIIOEWxeAKS
FEkNAYHCkJQPQ0qhXTzJ9nW37Q6Q9/P/mcnLjNiKRlsrpzXli0Mf4LczEDAQMBAwEDAQMBAwEDAQ
MBAwEDAQMBAwEDAQMBAwEDAQMBAwEDAQMBAwEDAQMBAwEDAQMBAwEEgr22n/aH2tsTj5Om/PH7uN
s8nXGVN1geIkipNoKutMvkiB7arc7C+q7gb9kGW1bJiVGBwOykyVFizQfafb3DkPtfv4fGLAQMBA
wEDAQMBAwEDAQMBAwEAg2KdGmsarmwuFRl67vbub7ozOkydYoKX6XPNko9BI5/rpcO9yRufJ4xMD
BgLBnthnf9jvDQqN9N6/ZnSYEYIFerh98feg/8BAwEDAQMBAwEDAQMBAwEDAQMBAwEAg2Mfqcn2+
1d4uN3t8cNW+eJzuefIEC5SkUZImZWeru/g+MWAgEPkXXaN5g4CBgIGAgYCBgIGAgYCBgIGAgYCB
gIGAgYCBgIGAgYCBgIGAgYCBgIGAgYCBgIGAgYCBgIGAgcA3OnM0oYFCdmoAAAAASUVORK5CYII=

------MultipartBoundary--JeftemRFv6yz4tcA0Is1dkAJcckJ66FI5kZlNzJQ4K----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.oaistatic.com/assets/cot-message-lf3q5fj1.css

@charset "utf-8";

@keyframes _fade_1frq2_1 {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

._markdown_1frq2_10.markdown .katex-error { display: none; }

._markdown_1frq2_10.markdown .katex-display { animation: 0.4s ease 50ms 1 n=
ormal forwards running _fade_1frq2_1; opacity: 0; }

._markdown_1frq2_10.markdown p { margin-bottom: 0px !important; }
------MultipartBoundary--JeftemRFv6yz4tcA0Is1dkAJcckJ66FI5kZlNzJQ4K----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.oaistatic.com/assets/ADAVisualizationComponent-b5feuqnm.css

@charset "utf-8";

.gdg-r17m35ur { -webkit-box-flex: 1; background-color: var(--gdg-bg-header-=
has-focus); border: none; border-radius: 9px; box-shadow: 0 0 0 1px var(--g=
dg-border-color); color: var(--gdg-text-group-header); flex-grow: 1; font: =
var(--gdg-header-font-style) var(--gdg-font-family); min-height: var(--r17m=
35ur-0); outline: none; padding: 0px 8px; }

.gdg-c1tqibwd { -webkit-box-align: center; align-items: center; background-=
color: var(--gdg-bg-header); display: flex; padding: 0px 8px; }

.gdg-seveqep { animation: 0.15s ease 0s 1 normal forwards running gdg-searc=
h-fadein-gdg-seveqep; background-color: var(--gdg-bg-cell); border: 1px sol=
id var(--gdg-border-color); border-radius: 6px; color: var(--gdg-text-dark)=
; font-size: var(--gdg-editor-font-size); padding: 8px; position: absolute;=
 top: 4px; }

[dir=3D"ltr"] .gdg-seveqep { right: 20px; }

[dir=3D"rtl"] .gdg-seveqep { left: 20px; }

.gdg-seveqep.out { animation: 0.15s ease 0s 1 normal forwards running gdg-s=
earch-fadeout-gdg-seveqep; }

.gdg-seveqep .gdg-search-bar-inner { display: flex; }

.gdg-seveqep .gdg-search-status { font-size: 11px; padding-top: 4px; }

.gdg-seveqep .gdg-search-progress { background-color: var(--gdg-text-light)=
; bottom: 0px; height: 4px; position: absolute; }

[dir=3D"ltr"] .gdg-seveqep .gdg-search-progress { left: 0px; }

[dir=3D"rtl"] .gdg-seveqep .gdg-search-progress { right: 0px; }

.gdg-seveqep input { background-color: var(--gdg-bg-cell); border: 0px; col=
or: var(--gdg-textDark); outline: none; width: 220px; }

.gdg-seveqep button { -webkit-box-pack: center; -webkit-box-align: center; =
align-items: center; background: none; border: none; color: var(--gdg-text-=
medium); cursor: pointer; display: flex; height: 24px; justify-content: cen=
ter; outline: none; padding: 0px; width: 24px; }

.gdg-seveqep button:hover { color: var(--gdg-text-dark); }

.gdg-seveqep button .button-icon { height: 16px; width: 16px; }

.gdg-seveqep button:disabled { opacity: 0.4; pointer-events: none; }

@-webkit-keyframes gdg-search-fadeout-gdg-seveqep {=20
  0% { transform: translate(0px); }
  100% { transform: translate(400px); }
}

@keyframes gdg-search-fadeout-gdg-seveqep {=20
  0% { transform: translate(0px); }
  100% { transform: translate(400px); }
}

@-webkit-keyframes gdg-search-fadein-gdg-seveqep {=20
  0% { transform: translate(400px); }
  100% { transform: translate(0px); }
}

@keyframes gdg-search-fadein-gdg-seveqep {=20
  0% { transform: translate(400px); }
  100% { transform: translate(0px); }
}

.gdg-n15fjm3e { color: var(--gdg-text-dark); display: flex; margin: 6px 0px=
 3px; }

.gdg-n15fjm3e > input { background-color: var(--gdg-bg-cell); color: var(--=
gdg-text-dark); font-family: var(--gdg-font-family); font-size: var(--gdg-e=
ditor-font-size); padding: 0px; }

.gdg-i2iowwq, .gdg-i2iowwq .gdg-centering-container { display: flex; height=
: 100%; }

.gdg-i2iowwq .gdg-centering-container { -webkit-box-pack: center; -webkit-b=
ox-align: center; align-items: center; justify-content: center; }

.gdg-i2iowwq .gdg-centering-container canvas, .gdg-i2iowwq .gdg-centering-c=
ontainer img { max-height: calc(100vh - var(--overlay-top) - 20px); object-=
fit: contain; user-select: none; }

.gdg-i2iowwq .gdg-centering-container canvas { max-width: 380px; }

.gdg-i2iowwq .gdg-edit-icon { -webkit-box-pack: center; -webkit-box-align: =
center; align-items: center; color: var(--gdg-accent-color); cursor: pointe=
r; display: flex; height: 48px; justify-content: center; position: absolute=
; top: 12px; width: 48px; }

[dir=3D"ltr"] .gdg-i2iowwq .gdg-edit-icon { right: 0px; }

[dir=3D"rtl"] .gdg-i2iowwq .gdg-edit-icon { left: 0px; }

.gdg-i2iowwq .gdg-edit-icon > * { height: 24px; width: 24px; }

.gdg-i2iowwq textarea { height: 0px; opacity: 0; position: absolute; top: 0=
px; width: 0px; }

[dir=3D"ltr"] .gdg-i2iowwq textarea { left: 0px; }

[dir=3D"rtl"] .gdg-i2iowwq textarea { right: 0px; }

.gdg-u1rrojo { -webkit-box-align: center; align-items: center; display: fle=
x; min-height: 21px; }

.gdg-u1rrojo, .gdg-u1rrojo .gdg-link-area { -webkit-box-flex: 1; flex-grow:=
 1; }

.gdg-u1rrojo .gdg-link-area { color: var(--gdg-link-color); cursor: pointer=
; flex-shrink: 1; overflow: hidden; text-overflow: ellipsis; white-space: n=
owrap; text-decoration: underline !important; }

[dir=3D"ltr"] .gdg-u1rrojo .gdg-link-area { margin-right: 8px; }

[dir=3D"rtl"] .gdg-u1rrojo .gdg-link-area { margin-left: 8px; }

.gdg-u1rrojo .gdg-edit-icon { -webkit-box-pack: center; -webkit-box-align: =
center; align-items: center; color: var(--gdg-accent-color); cursor: pointe=
r; display: flex; flex-shrink: 0; justify-content: center; width: 32px; }

.gdg-u1rrojo .gdg-edit-icon > * { height: 24px; width: 24px; }

.gdg-u1rrojo textarea { height: 0px; opacity: 0; position: absolute; top: 0=
px; width: 0px; }

[dir=3D"ltr"] .gdg-u1rrojo textarea { left: 0px; }

[dir=3D"rtl"] .gdg-u1rrojo textarea { right: 0px; }

.gdg-d4zsq0x { flex-wrap: wrap; }

.gdg-d4zsq0x, .gdg-d4zsq0x .doe-bubble { display: flex; }

.gdg-d4zsq0x .doe-bubble { -webkit-box-pack: center; -webkit-box-align: cen=
ter; align-items: center; background-color: var(--gdg-bg-cell); border-radi=
us: var(--gdg-rounding-radius,6px); box-shadow: rgba(62, 65, 86, 0.4) 0px 0=
px 1px, rgba(62, 65, 86, 0.4) 0px 1px 3px; color: var(--gdg-text-dark); hei=
ght: 24px; justify-content: center; margin: 2px; padding: 0px 8px; }

.gdg-d4zsq0x .doe-bubble img { height: 16px; object-fit: contain; }

[dir=3D"ltr"] .gdg-d4zsq0x .doe-bubble img { margin-right: 4px; }

[dir=3D"rtl"] .gdg-d4zsq0x .doe-bubble img { margin-left: 4px; }

.gdg-d4zsq0x textarea { height: 0px; opacity: 0; position: absolute; top: 0=
px; width: 0px; }

[dir=3D"ltr"] .gdg-d4zsq0x textarea { left: 0px; }

[dir=3D"rtl"] .gdg-d4zsq0x textarea { right: 0px; }

.gdg-m1pnx84e { -webkit-box-pack: justify; align-items: flex-start; color: =
var(--gdg-text-dark); display: flex; justify-content: space-between; min-wi=
dth: var(--m1pnx84e-0); position: relative; width: 100%; }

.gdg-m1pnx84e .gdg-g1y0xocz { flex-shrink: 1; min-width: 0px; }

.gdg-m1pnx84e .gdg-spacer { flex: 1 1 0%; }

.gdg-m1pnx84e .gdg-edit-icon { -webkit-box-pack: center; -webkit-box-align:=
 center; align-items: center; border-radius: 6px; color: var(--gdg-accent-c=
olor); cursor: pointer; display: flex; flex-shrink: 0; height: 24px; justif=
y-content: center; padding: 0px; position: relative; width: 24px; }

.gdg-m1pnx84e .gdg-edit-icon > * { height: 16px; width: 16px; }

.gdg-m1pnx84e .gdg-edit-hover:hover { background-color: var(--gdg-accent-li=
ght); transition: background-color 0.15s; }

.gdg-m1pnx84e .gdg-checkmark-hover:hover { background-color: var(--gdg-acce=
nt-color); color: rgb(255, 255, 255); }

.gdg-m1pnx84e .gdg-md-edit-textarea { height: 0px; margin-top: 25px; opacit=
y: 0; padding: 0px; position: relative; top: 0px; width: 0px; }

[dir=3D"ltr"] .gdg-m1pnx84e .gdg-md-edit-textarea { left: 0px; }

[dir=3D"rtl"] .gdg-m1pnx84e .gdg-md-edit-textarea { right: 0px; }

[dir=3D"ltr"] .gdg-m1pnx84e .gdg-ml-6 { margin-left: 6px; }

[dir=3D"rtl"] .gdg-m1pnx84e .gdg-ml-6 { margin-right: 6px; }

.gdg-b1ygi5by { flex-wrap: wrap; margin-bottom: auto; margin-top: auto; }

.gdg-b1ygi5by, .gdg-b1ygi5by .boe-bubble { display: flex; }

.gdg-b1ygi5by .boe-bubble { -webkit-box-pack: center; -webkit-box-align: ce=
nter; align-items: center; background-color: var(--gdg-bg-bubble); border-r=
adius: var(--gdg-rounding-radius,10px); color: var(--gdg-text-dark); height=
: 20px; justify-content: center; margin: 2px; padding: 0px 8px; }

.gdg-b1ygi5by textarea { height: 0px; opacity: 0; position: absolute; top: =
0px; width: 0px; }

[dir=3D"ltr"] .gdg-b1ygi5by textarea { left: 0px; }

[dir=3D"rtl"] .gdg-b1ygi5by textarea { right: 0px; }

.gdg-d19meir1 { --overlay-top: var(--d19meir1-0); box-sizing: border-box; d=
isplay: flex; flex-direction: column; font-family: var(--gdg-font-family); =
font-size: var(--gdg-editor-font-size); max-height: calc(100vh - var(--d19m=
eir1-5)); max-width: 400px; min-height: var(--d19meir1-4); min-width: var(-=
-d19meir1-3); overflow: hidden; position: absolute; text-align: start; top:=
 var(--d19meir1-2); width: max-content; }

[dir=3D"ltr"] .gdg-d19meir1 { left: var(--d19meir1-1); }

[dir=3D"rtl"] .gdg-d19meir1 { right: var(--d19meir1-1); }

@-webkit-keyframes glide_fade_in-gdg-d19meir1 {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes glide_fade_in-gdg-d19meir1 {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

.gdg-d19meir1.gdg-style { animation: 60ms ease 0s 1 normal none running gli=
de_fade_in-gdg-d19meir1; background-color: var(--gdg-bg-cell); border-radiu=
s: 2px; box-shadow: 0 0 0 1px var(--gdg-accent-color),0 0 1px #3e415666,0 6=
px 12px #3e415626; }

.gdg-d19meir1.gdg-pad { padding: var(--d19meir1-6) 8.5px 3px; }

.gdg-d19meir1 .gdg-clip-region { -webkit-box-flex: 1; border-radius: 2px; d=
isplay: flex; flex-direction: column; flex-grow: 1; overflow: hidden auto; =
}

.gdg-d19meir1 .gdg-clip-region .gdg-growing-entry { height: 100%; }

.gdg-d19meir1 .gdg-clip-region input.gdg-input { border: 0px; outline: none=
; width: 100%; }

.gdg-d19meir1 .gdg-clip-region textarea.gdg-input { border: 0px; outline: n=
one; }

.gdg-wmyidgi { height: var(--wmyidgi-1); max-height: 100%; max-width: 100%;=
 min-height: 10px; min-width: 10px; overflow: clip; position: relative; wid=
th: var(--wmyidgi-0); }

[dir=3D"ltr"] .gdg-wmyidgi { direction: ltr; }

[dir=3D"rtl"] .gdg-wmyidgi { direction: rtl; }

.gdg-wmyidgi > :first-child { height: 100%; position: absolute; top: 0px; w=
idth: 100%; }

[dir=3D"ltr"] .gdg-wmyidgi > :first-child { left: 0px; }

[dir=3D"rtl"] .gdg-wmyidgi > :first-child { right: 0px; }

.gdg-s1dgczr6 .dvn-scroller { overflow: var(--s1dgczr6-0); transform: trans=
lateZ(0px); }

.gdg-s1dgczr6 .dvn-hidden { visibility: hidden; }

.gdg-s1dgczr6 .dvn-scroll-inner { display: flex; pointer-events: none; }

.gdg-s1dgczr6 .dvn-scroll-inner > * { flex-shrink: 0; }

.gdg-s1dgczr6 .dvn-scroll-inner .dvn-spacer { -webkit-box-flex: 1; flex-gro=
w: 1; }

.gdg-s1dgczr6 .dvn-scroll-inner .dvn-stack { display: flex; flex-direction:=
 column; }

.gdg-s1dgczr6 .dvn-underlay > * { position: absolute; top: 0px; }

[dir=3D"ltr"] .gdg-s1dgczr6 .dvn-underlay > * { left: 0px; }

[dir=3D"rtl"] .gdg-s1dgczr6 .dvn-underlay > * { right: 0px; }

.gdg-s1dgczr6 canvas { outline: none; }

.gdg-s1dgczr6 canvas * { height: 0px; }

.gdg-mnuv029 { padding-top: 6px; word-break: break-word; }

.gdg-mnuv029 > * { margin: 0px; }

.gdg-mnuv029 :last-child { margin-bottom: 0px; }

.gdg-mnuv029 p img { width: 100%; }

.gdg-izpuzkl { -webkit-text-fill-color: var(--gdg-text-dark); background-co=
lor: transparent; border: 0px; border-radius: 0px; color: var(--gdg-text-da=
rk); font-family: var(--gdg-font-family); font-size: var(--gdg-editor-font-=
size); height: 100%; inset: 0px; line-height: 16px; margin: 0px; min-width:=
 100%; overflow: hidden; padding: 0px; position: absolute; resize: none; wh=
ite-space: pre-wrap; width: 100%; }

.gdg-izpuzkl::-webkit-input-placeholder { color: var(--gdg-text-light); }

.gdg-izpuzkl::placeholder { color: var(--gdg-text-light); }

.gdg-invalid .gdg-izpuzkl { text-decoration: underline rgb(214, 6, 6); }

.gdg-s69h75o { overflow-wrap: break-word; color: var(--gdg-text-dark); font=
-family: var(--gdg-font-family); font-size: var(--gdg-editor-font-size); li=
ne-height: 16px; margin: 0px; max-width: 100%; min-width: 100%; padding: 0p=
x 0px 2px; visibility: hidden; white-space: pre-wrap; width: max-content; }

.gdg-g1y0xocz { margin-top: 6px; position: relative; }
------MultipartBoundary--JeftemRFv6yz4tcA0Is1dkAJcckJ66FI5kZlNzJQ4K----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.oaistatic.com/assets/FormattedText-kb0ehjj7.css

@charset "utf-8";

._tableContainer_16hzy_1 { --thread-content-width: min(calc(100cqw - var(--=
thread-content-margin, 0)*2),var(--thread-content-max-width)); --thread-gut=
ter-size: calc((100cqw - var(--thread-content-width))/2); margin-inline: ca=
lc(var(--thread-gutter-size)*-1); overflow-x: auto; pointer-events: none; s=
crollbar-width: none; width: 100cqw; }

._tableWrapper_16hzy_14 { margin-inline: var(--thread-gutter-size) var(--th=
read-content-margin); pointer-events: auto; }
------MultipartBoundary--JeftemRFv6yz4tcA0Is1dkAJcckJ66FI5kZlNzJQ4K----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.oaistatic.com/assets/conversation-small-dextt2zw.css

@charset "utf-8";

._lockSidebarAnimation_15e8l_1 { --sidebar-slideover: sidebar-slideover; --=
sidebar-popover: sidebar-popover; }

._lockSidebarAnimation_15e8l_1::view-transition-group(sidebar-slideover) { =
display: none; }

._lockSidebarAnimation_15e8l_1::view-transition-old(sidebar-popover) { anim=
ation: auto ease 0s 1 normal none running none; }

._lockSidebarAnimation_15e8l_1::view-transition-old(root) { display: none; =
}

._lockSidebarAnimation_15e8l_1::view-transition-new(root) { animation: auto=
 ease 0s 1 normal none running none; }

@media (prefers-reduced-motion: reduce) {
  ._lockSidebarAnimation_15e8l_1 ::view-transition { display: none; }
}

.active-view-transition.close-thread-sidebar, .active-view-transition.open-=
thread-sidebar { --vt_model_picker: model-picker; --vt_share_chat_wide_butt=
on: share-chat-wide-button; --vt_share_chat_compact_button: share-chat-comp=
act-button; --vt_thread_tools: thread-tools; --thread-extended-info-transit=
ion-name: thread-extended-info; --vt-disable-screen-column-transition: none=
; --vt_toggle_sidebar_opened: toggle-sidebar-icon-opened; --vt_toggle_sideb=
ar_closed: toggle-sidebar-icon-closed; --vt-thread-header-open-canvas: open=
-canvas-button; --vt-composer-speech-button: composer-speech-button; --vt_n=
ew_chat_thread: new-chat-thread; --vt-profile-avatar-thread: profile-avatar=
-active; }

@media (prefers-reduced-motion: reduce) {
  :is(.active-view-transition.open-thread-sidebar, .active-view-transition.=
close-thread-sidebar)::view-transition { display: none; }
}

:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-group(*), :is(.active-view-transition.=
open-thread-sidebar, .active-view-transition.close-thread-sidebar)::view-tr=
ansition-new(*), :is(.active-view-transition.open-thread-sidebar, .active-v=
iew-transition.close-thread-sidebar)::view-transition-old(*) { animation-du=
ration: var(--vt-duration,.3s); animation-timing-function: var(--vt-timing-=
function,var(--spring-common)); }

:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-old(composer-speech-button), :is(.acti=
ve-view-transition.open-thread-sidebar, .active-view-transition.close-threa=
d-sidebar)::view-transition-old(model-picker), :is(.active-view-transition.=
open-thread-sidebar, .active-view-transition.close-thread-sidebar)::view-tr=
ansition-old(open-canvas-button), :is(.active-view-transition.open-thread-s=
idebar, .active-view-transition.close-thread-sidebar)::view-transition-old(=
share-chat-compact-button), :is(.active-view-transition.open-thread-sidebar=
, .active-view-transition.close-thread-sidebar)::view-transition-old(share-=
chat-wide-button), :is(.active-view-transition.open-thread-sidebar, .active=
-view-transition.close-thread-sidebar)::view-transition-old(thread-tools), =
:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-old(toggle-sidebar-icon) { display: no=
ne; }

:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-new(composer-speech-button), :is(.acti=
ve-view-transition.open-thread-sidebar, .active-view-transition.close-threa=
d-sidebar)::view-transition-new(model-picker), :is(.active-view-transition.=
open-thread-sidebar, .active-view-transition.close-thread-sidebar)::view-tr=
ansition-new(open-canvas-button), :is(.active-view-transition.open-thread-s=
idebar, .active-view-transition.close-thread-sidebar)::view-transition-new(=
share-chat-compact-button), :is(.active-view-transition.open-thread-sidebar=
, .active-view-transition.close-thread-sidebar)::view-transition-new(share-=
chat-wide-button), :is(.active-view-transition.open-thread-sidebar, .active=
-view-transition.close-thread-sidebar)::view-transition-new(thread-tools), =
:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-old(toggle-sidebar-icon) { animation: =
auto ease 0s 1 normal none running none; height: 100%; }

:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-group(profile-avatar-active) { animati=
on: auto ease 0s 1 normal none running none; z-index: 2; }

:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-new(profile-avatar-active) { animation=
: auto ease 0s 1 normal none running none; }

:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-new(thread-extended-info), :is(.active=
-view-transition.open-thread-sidebar, .active-view-transition.close-thread-=
sidebar)::view-transition-old(thread-extended-info) { height: 100%; object-=
fit: none; overflow: clip; }

:is(.active-view-transition.open-thread-sidebar, .active-view-transition.cl=
ose-thread-sidebar)::view-transition-new(thread), :is(.active-view-transiti=
on.open-thread-sidebar, .active-view-transition.close-thread-sidebar)::view=
-transition-old(thread) { height: 100%; object-fit: none; overflow: clip; }

:is(.active-view-transition.open-thread-sidebar)::view-transition-old(threa=
d-extended-info) { display: none; }

:is(.active-view-transition.close-thread-sidebar)::view-transition-new(thre=
ad-extended-info) { display: none; }

@keyframes _fade-in_pfttw_1 {=20
  100% { opacity: 1; }
}

._root_pfttw_7 ._fadeIn_pfttw_8, ._root_pfttw_7 blockquote, ._root_pfttw_7 =
code, ._root_pfttw_7 hr, ._root_pfttw_7 li, ._root_pfttw_7 pre, ._root_pftt=
w_7 pre code span, ._root_pfttw_7 tr { animation: _fade-in_pfttw_1 var(--du=
ration,.7s) cubic-bezier(.37,.55,.86,.88) forwards; opacity: 0; }

@media (prefers-reduced-motion: reduce) {
  ._root_pfttw_7 ._fadeIn_pfttw_8, ._root_pfttw_7 blockquote, ._root_pfttw_=
7 code, ._root_pfttw_7 hr, ._root_pfttw_7 li, ._root_pfttw_7 pre, ._root_pf=
ttw_7 pre code span, ._root_pfttw_7 tr { --duration: 0s; opacity: 1; }
}

@keyframes _slideUp_1kuxv_21 {=20
  0% { pointer-events: none; transform: translateY(30vh); }
  100% { pointer-events: auto; transform: translateY(0px); }
}

@keyframes _fadeIn_1kuxv_1 {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@media (prefers-reduced-motion: no-preference) {
  ._slideUp_1kuxv_21 { animation: _fadeIn_1kuxv_1 .2s linear forwards,_slid=
eUp_1kuxv_21 .7s var(--spring-common) forwards; }
}

._wrapper_4j5pz_1 { border-radius: 8px; cursor: pointer; display: inline-fl=
ex; height: 44px; user-select: none; width: 44px; }

._wrapper_4j5pz_1 > input[type=3D"checkbox"] { display: none; }

._wrapper_4j5pz_1 { color: var(--icon-secondary); }

@media (hover: hover) and (pointer: fine) {
  ._wrapper_4j5pz_1:hover { --hover-background: var(--main-surface-secondar=
y); }
}

._label_4j5pz_22 { align-items: center; background-color: var(--hover-backg=
round); border-radius: 8px; color: var(--text-secondary); display: flex; fl=
ex: 1 1 0%; justify-content: center; transition: background-color 0.1s line=
ar; }

._leadingBar_sbmq2_1 { box-shadow: transparent 0px 1px 0px; animation: auto=
 linear 0s 1 normal both running _add-top-shadow_sbmq2_1; }

._leadingBarScrollAnimation_sbmq2_19 { animation-timeline: scroll(); }

._trailingBar_sbmq2_23 { box-shadow: transparent 0px -1px 0px; animation: a=
uto linear 0s 1 normal both running _add-bottom-shadow_sbmq2_1; }

._trailingBarScrollAnimation_sbmq2_41 { animation-timeline: scroll(); }

._primary_sbmq2_45 { background-color: var(--bar-background-color,var(--mai=
n-surface-primary)); }

._screen_c7xqp_1 { display: var(--screen-display,grid); grid-template: "lea=
ding" max-content "content" 1fr "trailing" max-content "keyboard" / minmax(=
0px, 1fr); }

@supports not (overflow:clip) {
  ._screen_c7xqp_1 { overflow: var(--screen-overflow,hidden auto); }
}

@supports (overflow:clip) {
  ._screen_c7xqp_1 { overflow: var(--screen-overflow,clip auto); }
}

._screen_c7xqp_1 { padding-top: calc(var(--screen-anchor-top) + var(--scree=
n-top-offset, 0px)); scrollbar-gutter: var(--screen-scrollbar-gutter-overri=
de,stable); width: 100%; }

._screen_c7xqp_1 [slot=3D"content"] { grid-area: content; padding-inline: v=
ar( --screen-content-inline-padding,var(--screen-inline-padding) ); positio=
n: var(--screen-content-position,relative); }

._screen_c7xqp_1 [slot=3D"leading"] { grid-area: leading; min-width: var(--=
screen-leading-slot-min-width); overflow: var(--screen-leading-slot-overflo=
w); position: sticky; top: var(--screen-leading-slot-top,0); z-index: var(-=
-screen-leading-slot-z-index,20); }

._screen_c7xqp_1 [slot=3D"trailing"] { bottom: var(--keyboard-safe-area-bot=
tom,0); grid-area: trailing; padding-inline: var( --screen-trailing-inline-=
padding,var(--screen-inline-padding) ); position: sticky; z-index: var(--sc=
reen-leading-slot-z-index,20); }

._screen_c7xqp_1 [slot=3D"keyboard"] { background: rgb(252, 252, 252); bott=
om: 0px; grid-area: keyboard; height: var(--keyboard-safe-area-bottom,0); p=
osition: sticky; }

._screen_c7xqp_1:where([screen-anchor=3D"vertical"], [screen-anchor=3D"top"=
]) { --safe-area-top: calc(env(titlebar-area-y, 0px) + env(safe-area-inset-=
top, 0px)); --screen-anchor-top: var(--safe-area-top); }

._screen_c7xqp_1:where([screen-anchor=3D"vertical"], [screen-anchor=3D"bott=
om"]) { --safe-area-bottom: env(safe-area-inset-bottom,0px); --keyboard-saf=
e-area-bottom: max(var(--screen-keyboard-height),env(keyboard-inset-height,=
0px)); --screen-anchor-bottom: var(--safe-area-bottom); }

@keyframes _fade_4f9by_7 {=20
  100% { opacity: 1; }
}

._fadeIn_4f9by_7 { animation-duration: ; animation-timing-function: ; anima=
tion-delay: ; animation-direction: ; animation-fill-mode: ; animation-play-=
state: ; animation-name: ; animation-timeline: ; animation-range-start: ; a=
nimation-range-end: ; animation-iteration-count: 1; opacity: 0; }

@media (prefers-reduced-motion: reduce) {
  ._fadeIn_4f9by_7 { --duration: 0s; opacity: 1; }
}

._marker_4f9by_21._hidden_4f9by_21 { display: none; }

._marker_4f9by_21._animate_4f9by_25 { animation-duration: ; animation-timin=
g-function: ; animation-delay: ; animation-direction: ; animation-fill-mode=
: ; animation-play-state: ; animation-name: ; animation-timeline: ; animati=
on-range-start: ; animation-range-end: ; animation-iteration-count: 1; opac=
ity: 0; }

@media (prefers-reduced-motion: reduce) {
  ._marker_4f9by_21._animate_4f9by_25 { --duration: 0s; opacity: 1; }
}

@keyframes _slide-up_m3fum_1 {=20
  0% { opacity: 0; translate: 0px 20vw; }
}

@keyframes _slide-down_m3fum_1 {=20
  100% { opacity: 0; translate: 0px 20vw; }
}

._page-to-page-transition_m3fum_14:not(.active-view-transition) {
  @view-transition { navigation: auto; }
}

._page-to-page-transition_m3fum_14 { view-transition-name: none; }

._page-to-page-transition_m3fum_14 body { view-transition-name: page; }

@media (prefers-reduced-motion: reduce) {
  ._page-to-page-transition_m3fum_14::view-transition { display: none; }
}

._page-to-page-transition_m3fum_14::view-transition-old(header), ._page-to-=
page-transition_m3fum_14::view-transition-old(sidebar) { display: none; }

._page-to-page-transition_m3fum_14::view-transition-new(header), ._page-to-=
page-transition_m3fum_14::view-transition-new(sidebar) { animation: auto ea=
se 0s 1 normal none running none; }

._page-to-page-transition_m3fum_14::view-transition-image-pair(active-image=
), ._page-to-page-transition_m3fum_14::view-transition-new(active-image), .=
_page-to-page-transition_m3fum_14::view-transition-old(active-image) { heig=
ht: 100%; }

._page-to-page-transition_m3fum_14::view-transition-image-pair(page-title),=
 ._page-to-page-transition_m3fum_14::view-transition-new(page-title), ._pag=
e-to-page-transition_m3fum_14::view-transition-old(page-title) { height: 10=
0%; }

._page-to-page-transition_m3fum_14::view-transition-image-pair(acive-image)=
, ._page-to-page-transition_m3fum_14::view-transition-new(acive-image), ._p=
age-to-page-transition_m3fum_14::view-transition-old(acive-image) { height:=
 100%; }

._page-to-page-transition_m3fum_14::view-transition-group(*), ._page-to-pag=
e-transition_m3fum_14::view-transition-new(*), ._page-to-page-transition_m3=
fum_14::view-transition-old(*) { animation-duration: 0.4s; animation-timing=
-function: var(--spring-fast); }

._page-to-page-transition_m3fum_14.to-lightbox { --vt-scroll-buttons: scrol=
l-buttons; }

._page-to-page-transition_m3fum_14.to-lightbox::view-transition-group(scrol=
l-buttons) { z-index: 3; }

._page-to-page-transition_m3fum_14from.library.to-conversation, ._page-to-p=
age-transition_m3fum_14from.lightbox.to-conversation { --vt-active-image: a=
ctive-image; }

._page-to-page-transition_m3fum_14.from-lightbox, ._page-to-page-transition=
_m3fum_14.to-lightbox { --vt-active-image: active-image; --vt-page-title: p=
age-title; --vt-page-footer: page-footer; }

:is(._page-to-page-transition_m3fum_14.from-lightbox, ._page-to-page-transi=
tion_m3fum_14.to-lightbox)::view-transition-new(backdrop) { animation: auto=
 ease 0s 1 normal none running none; }

:is(._page-to-page-transition_m3fum_14.from-lightbox, ._page-to-page-transi=
tion_m3fum_14.to-lightbox)::view-transition-group(active-image) { z-index: =
2; }

:is(._page-to-page-transition_m3fum_14.from-lightbox, ._page-to-page-transi=
tion_m3fum_14.to-lightbox)::view-transition-group(active-image), :is(._page=
-to-page-transition_m3fum_14.from-lightbox, ._page-to-page-transition_m3fum=
_14.to-lightbox)::view-transition-group(page-title), :is(._page-to-page-tra=
nsition_m3fum_14.from-lightbox, ._page-to-page-transition_m3fum_14.to-light=
box)::view-transition-new(backdrop), :is(._page-to-page-transition_m3fum_14=
.from-lightbox, ._page-to-page-transition_m3fum_14.to-lightbox)::view-trans=
ition-new(page-footer), :is(._page-to-page-transition_m3fum_14.from-lightbo=
x, ._page-to-page-transition_m3fum_14.to-lightbox)::view-transition-new(pag=
e-title), :is(._page-to-page-transition_m3fum_14.from-lightbox, ._page-to-p=
age-transition_m3fum_14.to-lightbox)::view-transition-new(scroll-buttons), =
:is(._page-to-page-transition_m3fum_14.from-lightbox, ._page-to-page-transi=
tion_m3fum_14.to-lightbox)::view-transition-old(page-title) { animation-dur=
ation: 0.3s; }

:is(._page-to-page-transition_m3fum_14.to-home, ._page-to-page-transition_m=
3fum_14.from-landing-page)::view-transition-new(composer) { animation: auto=
 ease 0s 1 normal none running none; }

._page-to-page-transition_m3fum_14.from-landing-page:not(.to-lightbox), ._p=
age-to-page-transition_m3fum_14.to-landing-page:not(.to-lightbox) { --vt-pa=
ge-header: header; --vt-splash-screen-headline: page-title; --vt-tool-page-=
title: page-title; --vt-composer: composer; --sidebar-slideover: sidebar; }

._page-to-page-transition_m3fum_14.to-landing-page::view-transition-new(pag=
e) { animation: _slide-up_m3fum_1 .4s var(--spring-fast); }

._composer-slide_m3fum_129 { --vt-composer: composer; }

._composer-slide_m3fum_129::view-transition-group(composer), ._composer-sli=
de_m3fum_129::view-transition-old(composer) { animation-duration: 0.5s; ani=
mation-timing-function: var(--spring-fast); }

@keyframes _fade_1dg3p_1 {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes _scaleSlide_1dg3p_1 {=20
  0% { transform: translateY(25px) scale(0.95); }
  100% { transform: translateY(0px) scale(1); }
}

@media (prefers-reduced-motion: no-preference) {
  ._main_1dg3p_20 { animation: _fade_1dg3p_1 .5s var(--spring-common) var(-=
-animation-delay,0s) forwards,_scaleSlide_1dg3p_1 .75s var(--spring-common)=
 var(--animation-delay,0s); opacity: 0; transition: transform .3s var(--spr=
ing-common),box-shadow .3s var(--spring-common); }
}

._lightbox_1ruyj_1 { transition-behavior: allow-discrete; }

._lightbox_1ruyj_1::backdrop { view-transition-name: backdrop; opacity: 0; =
transition: .4s opacity var(--spring-fast); }

@media (prefers-reduced-motion: reduce) {
  ._lightbox_1ruyj_1::backdrop { transition-duration: 0.1s; }
}

._lightbox_1ruyj_1[open]::backdrop { opacity: 1; }

@starting-style {
  ._lightbox_1ruyj_1[open]::backdrop { opacity: 0; }
}

._carousel_1ruyj_26::scroll-button(left), ._carousel_1ruyj_26::scroll-butto=
n(right) { position-anchor: --carousel; aspect-ratio: 1 / 1; background-col=
or: var(--main-surface-primary); border: 1px solid var(--color-token-border=
-default); border-radius: 50%; color: var(--marker-color,var(--main-surface=
-primary-inverse)); cursor: pointer; display: grid; margin-inline: 12px; pa=
dding-block-start: 4px; place-items: center; position: fixed; transition: o=
pacity .4s var(--ease-spring-standard); width: 44px; }

@starting-style {
  ._carousel_1ruyj_26::scroll-button(left), ._carousel_1ruyj_26::scroll-but=
ton(right) { opacity: 0.3; }
}

._carousel_1ruyj_26::scroll-button(right) { --_inner: center span-inline-st=
art; --_outer: inline-end center; position-area: var(--_inner); content: ur=
l("data:image/svg+xml;utf8,<svg xmlns=3D'http://www.w3.org/2000/svg' width=
=3D'24' height=3D'24' viewBox=3D'0 0 24 24' fill=3D'none'><path fill-rule=
=3D'evenodd' clip-rule=3D'evenodd' d=3D'M18.7071 12.7071C19.0976 12.3166 19=
.0976 11.6834 18.7071 11.2929L13.7071 6.29289C13.3166 5.90237 12.6834 5.902=
37 12.2929 6.29289C11.9024 6.68342 11.9024 7.31658 12.2929 7.70711L15.5858 =
11H6C5.44771 11 5 11.4477 5 12C5 12.5523 5.44771 13 6 13H15.5858L12.2929 16=
.2929C11.9024 16.6834 11.9024 17.3166 12.2929 17.7071C12.6834 18.0976 13.31=
66 18.0976 13.7071 17.7071L18.7071 12.7071Z' fill=3D'currentColor'/></svg>"=
) / "Next"; }

._carousel_1ruyj_26::scroll-button(*):disabled { opacity: 0.3; }

._carousel_1ruyj_26::scroll-button(left) { --_inner: center span-inline-end=
; --_outer: inline-start center; position-area: var(--_inner); content: url=
("data:image/svg+xml;utf8,<svg xmlns=3D'http://www.w3.org/2000/svg' width=
=3D'24' height=3D'24' viewBox=3D'0 0 24 24' fill=3D'none'><path fill-rule=
=3D'evenodd' clip-rule=3D'evenodd' d=3D'M18.7071 12.7071C19.0976 12.3166 19=
.0976 11.6834 18.7071 11.2929L13.7071 6.29289C13.3166 5.90237 12.6834 5.902=
37 12.2929 6.29289C11.9024 6.68342 11.9024 7.31658 12.2929 7.70711L15.5858 =
11H6C5.44771 11 5 11.4477 5 12C5 12.5523 5.44771 13 6 13H15.5858L12.2929 16=
.2929C11.9024 16.6834 11.9024 17.3166 12.2929 17.7071C12.6834 18.0976 13.31=
66 18.0976 13.7071 17.7071L18.7071 12.7071Z' fill=3D'currentColor'/></svg>"=
) / "Previous"; scale: -1 1; }

.CircularProgressbar { vertical-align: middle; width: 100%; }

.CircularProgressbar .CircularProgressbar-path { stroke: rgb(62, 152, 199);=
 stroke-linecap: round; transition: stroke-dashoffset 0.5s; }

.CircularProgressbar .CircularProgressbar-trail { stroke: rgb(214, 214, 214=
); stroke-linecap: round; }

.CircularProgressbar .CircularProgressbar-text { fill: rgb(62, 152, 199); d=
ominant-baseline: middle; text-anchor: middle; font-size: 20px; }

.CircularProgressbar .CircularProgressbar-background { fill: rgb(214, 214, =
214); }

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-back=
ground { fill: rgb(62, 152, 199); }

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-text=
 { fill: rgb(255, 255, 255); }

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-path=
 { stroke: rgb(255, 255, 255); }

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-trai=
l { stroke: transparent; }

._rangeSelector_10acs_2 { align-items: center; appearance: none; box-sizing=
: content-box; padding: 20px 10px; width: 12px; }

[dir=3D"ltr"] ._rangeSelector_10acs_2 { margin-left: -10px; }

[dir=3D"rtl"] ._rangeSelector_10acs_2 { margin-right: -10px; }

._rangeSelector_10acs_2::-webkit-slider-thumb { --tw-pan-y: pan-y; --tw-sha=
dow: 0 4px 6px -1px var(--tw-shadow-color,#0000001a),0 2px 4px -2px var(--t=
w-shadow-color,#0000001a); appearance: none; aspect-ratio: 1 / 1; backgroun=
d-color: var(--main-surface-primary); border-width: 1px; border-style: soli=
d; border-image: initial; border-color: var(--border-default); border-radiu=
s: var(--radius-2xl,1rem); box-shadow: var(--tw-inset-shadow),var(--tw-inse=
t-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-=
shadow); cursor: grab; height: calc(var(--spacing,.25rem)*6); touch-action:=
 var(--tw-pan-x,)var(--tw-pan-y,)var(--tw-pinch-zoom,); transform: translat=
eY(var(--slider-thumb-translate-y)); }

._vertical-slider_10acs_2 { width: 16px; writing-mode: vertical-lr; }

[dir=3D"ltr"] ._vertical-slider_10acs_2 { direction: rtl; }

[dir=3D"rtl"] ._vertical-slider_10acs_2 { direction: ltr; }

._vertical-slider_10acs_2::-webkit-slider-thumb { appearance: none; }

._hiddenThumb_10acs_2::-webkit-slider-thumb { display: none !important; }

@property --tw-pan-x { syntax: "*"; inherits: false; }

@property --tw-pan-y { syntax: "*"; inherits: false; }

@property --tw-pinch-zoom { syntax: "*"; inherits: false; }

@property --tw-shadow { syntax: "*"; inherits: false; initial-value: 0 0 #0=
000; }

@property --tw-shadow-color { syntax: "*"; inherits: false; }

@property --tw-inset-shadow { syntax: "*"; inherits: false; initial-value: =
0 0 #0000; }

@property --tw-inset-shadow-color { syntax: "*"; inherits: false; }

@property --tw-ring-color { syntax: "*"; inherits: false; }

@property --tw-ring-shadow { syntax: "*"; inherits: false; initial-value: 0=
 0 #0000; }

@property --tw-inset-ring-color { syntax: "*"; inherits: false; }

@property --tw-inset-ring-shadow { syntax: "*"; inherits: false; initial-va=
lue: 0 0 #0000; }

@property --tw-ring-inset { syntax: "*"; inherits: false; }

@property --tw-ring-offset-width { syntax: "<length>"; inherits: false; ini=
tial-value: 0; }

@property --tw-ring-offset-color { syntax: "*"; inherits: false; initial-va=
lue: #fff; }

@property --tw-ring-offset-shadow { syntax: "*"; inherits: false; initial-v=
alue: 0 0 #0000; }

._prosemirror-parent_k4nam_2 .ProseMirror[contenteditable] { --tw-outline-s=
tyle: none; outline-style: none; outline-width: 0px; }

._prosemirror-parent_k4nam_2 .ProseMirror { overflow-wrap: break-word; font=
-feature-settings: "liga" 0; font-variant-ligatures: none; margin-block: ca=
lc(var(--spacing,.25rem)*2); padding-inline: calc(var(--spacing,.25rem)*0);=
 white-space: break-spaces; }

._prosemirror-parent_k4nam_2.ProseMirror br { --tw-leading: normal; line-he=
ight: normal; }

._prosemirror-parent_k4nam_2.default-browser .placeholder::after { --tw-con=
tent: attr(data-placeholder); color: var(--text-tertiary); content: var(--t=
w-content); cursor: text; pointer-events: none; position: relative; }

[dir=3D"ltr"] ._prosemirror-parent_k4nam_2.default-browser .placeholder::af=
ter { padding-left: 1px; }

[dir=3D"rtl"] ._prosemirror-parent_k4nam_2.default-browser .placeholder::af=
ter { padding-right: 1px; }

._prosemirror-parent_k4nam_2.default-browser .placeholder .ProseMirror-trai=
lingBreak { display: none !important; }

._prosemirror-parent_k4nam_2.firefox .placeholder::before { --tw-content: a=
ttr(data-placeholder); color: var(--text-secondary); content: var(--tw-cont=
ent); cursor: text; pointer-events: none; position: absolute; }

._prosemirror-parent_k4nam_2 p { white-space: pre-wrap; }

._prosemirror-parent_k4nam_2 p.placeholder { overflow: hidden; text-overflo=
w: ellipsis; white-space: nowrap; }

.screen-arch ._prosemirror-parent_k4nam_2 p.placeholder { view-transition-n=
ame: var(--vt-composer-placeholder); width: fit-content; }

._prosemirror-parent_k4nam_2 .ProseMirror-separator { display: none !import=
ant; }

@property --tw-outline-style { syntax: "*"; inherits: false; initial-value:=
 solid; }

@property --tw-leading { syntax: "*"; inherits: false; }

@property --tw-content { syntax: "*"; inherits: false; initial-value: ""; }

.stuff-part-pen, .stuff-part-star { transition: transform 0.2s ease-out, op=
acity 0.2s ease-out; }

._toolsButton_d2h2h_8:not(:disabled) { --part-rotation: 0; --part-spin: 0; =
}

._toolsButton_d2h2h_8:not(:disabled):hover { --part-rotation: .02rad; --par=
t-spin: .05rad; }

._toolsButton_d2h2h_8[data-opened]:not(:disabled) { --part-rotation: .07rad=
; --part-spin: .14rad; }

._toolsButton_d2h2h_8[data-jack]:not(:disabled) .stuff-part-jack { transiti=
on: transform 0.3s cubic-bezier(0, 0.5, 0.6, 1.8); }

._toolsButton_d2h2h_8[data-jack][data-opened]:not(:disabled) { --part-rotat=
ion: .15rad; --part-spin: .2rad; }

._toolsButton_d2h2h_8[data-jack][data-opened]:not(:disabled) .stuff-part-pe=
n, ._toolsButton_d2h2h_8[data-jack][data-opened]:not(:disabled) .stuff-part=
-star { opacity: 0; }

._toolsButton_d2h2h_8[data-jack][data-opened]:not(:disabled) .stuff-part-ja=
ck { transform: translateY(-16px); }

:is([dir=3D"ltr"] ._toolsButton_d2h2h_8:not(:disabled)) .stuff-part-star { =
transform: translate(-30px,40px) rotate(calc(var(--part-rotation)*-1.2)) tr=
anslate(30px,-40px) translate(10px,9px) rotate(calc(var(--part-spin)*-2)) t=
ranslate(-10px,-9px); }

:is([dir=3D"ltr"] ._toolsButton_d2h2h_8:not(:disabled)) .stuff-part-pen { t=
ransform: translate(70px,40px) rotate(var(--part-rotation)) translate(-70px=
,-40px) translate(15.5px,9px) rotate(var(--part-spin)) translate(-15.5px,-9=
px); }

:is([dir=3D"rtl"] ._toolsButton_d2h2h_8:not(:disabled)) .stuff-part-star { =
transform: translate(30px,40px) rotate(calc((-1.2*var(--part-rotation))*-1)=
) translate(-30px,-40px) translate(-10px,9px) rotate(calc((-2*var(--part-sp=
in))*-1)) translate(10px,-9px); }

:is([dir=3D"rtl"] ._toolsButton_d2h2h_8:not(:disabled)) .stuff-part-pen { t=
ransform: translate(-70px,40px) rotate(var(--part-rotation)) translate(70px=
,-40px) translate(-15.5px,9px) rotate(var(--part-spin)) translate(15.5px,-9=
px); }

._revealDown_1le9t_1 > * { animation: 0.3s ease-out 0s 1 normal both runnin=
g _fadeAndSlideDown_1le9t_1; }

._revealDown_1le9t_1 > :first-child { animation-delay: 0s; }

._revealDown_1le9t_1 > :nth-child(2) { animation-delay: 50ms; }

._revealDown_1le9t_1 > :nth-child(3) { animation-delay: 0.1s; }

._revealDown_1le9t_1 > :nth-child(4) { animation-delay: 0.15s; }

._revealDown_1le9t_1 > :nth-child(5) { animation-delay: 0.2s; }

._revealDown_1le9t_1 > :nth-child(n+5) { animation-delay: 0.25s; }

@keyframes _fadeAndSlideDown_1le9t_1 {=20
  0% { opacity: 0; transform: translateY(-4px); }
}

._threadRoot_1y3t0_1 { --thread-safe-area-height: calc(100lvh - var(--threa=
d-safe-area-inset-top) - var(--thread-safe-area-inset-bottom)); --thread-sa=
fe-area-inset-top: calc(var(--header-height) + env(safe-area-inset-top, 0px=
)); --thread-safe-area-inset-bottom: calc(var(--thread-footer-height, 150px=
) + var(--screen-keyboard-height, 0px) + env(safe-area-inset-bottom, 0px));=
 }

._threadGutter_1y3t0_22 { --thread-end-gutter-active-height: calc(var(--thr=
ead-safe-area-height) - var(--thread-stream-context-height) - var(--thread-=
turn-vertical-padding)*2); --thread-stream-context-height: max(2.75rem + 2 =
* var(--thread-turn-vertical-padding),1/3 * var(--thread-safe-area-height))=
; --thread-turn-vertical-padding: 1.25rem; }

._vanguardAppLaunchers_1ra5o_1 { bottom: calc(-10rem + 50dvh); }

@media (max-height: 730px) {
  ._vanguardAppLaunchers_1ra5o_1 { bottom: calc(-10rem + 50dvh); }
}

@media (min-height: 800px) {
  ._vanguardAppLaunchers_1ra5o_1 { bottom: calc(-13rem + 50dvh); }
}

@media (max-height: 800px) {
  ._vanguardAppLaunchersContainer_1ra5o_18 { height: 4rem; }
}

@keyframes _fadeScale_1r3gn_12 {=20
  0% { opacity: 0; transform: scale(0.98); }
  100% { opacity: 1; transform: scale(1); }
}

._fadeScale_1r3gn_12 { animation: 0.3s ease-in-out 0s 1 normal forwards run=
ning _fadeScale_1r3gn_12; }
------MultipartBoundary--JeftemRFv6yz4tcA0Is1dkAJcckJ66FI5kZlNzJQ4K----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.oaistatic.com/assets/root-bpcp30ia.css

@charset "utf-8";

.composer-parent { --composer-footer_height: var(--composer-bar_footer-curr=
ent-height,32px); --composer-bar_height: var(--composer-bar_current-height,=
52px); --composer-bar_width: var(--composer-bar_current-width,768px); --mas=
k-fill: linear-gradient(180deg,#fff 0%,#fff); --mask-erase: linear-gradient=
(180deg,#000 0%,#000); }

.masked-content { --content-gradient: linear-gradient(0deg,color(display-p3=
 .851 .851 .851),color(display-p3 .8488 .8488 .8488/.99) 8.07%,color(displa=
y-p3 .8423 .8423 .8423/.98) 15.54%,color(display-p3 .8317 .8317 .8317/.95) =
22.5%,color(display-p3 .8171 .8171 .8171/.92) 29.04%,color(display-p3 .7988=
 .7988 .7988/.87) 35.26%,color(display-p3 .777 .777 .777/.82) 41.25%,color(=
display-p3 .7518 .7518 .7518/.75) 47.1%,color(display-p3 .7234 .7234 .7234/=
.68) 52.9%,color(display-p3 .692 .692 .692/.6) 58.75%,color(display-p3 .657=
8 .6578 .6578/.52) 64.74%,color(display-p3 .621 .621 .621/.42) 70.96%,color=
(display-p3 .5817 .5817 .5817/.33) 77.5%,color(display-p3 .5401 .5401 .5401=
/.22) 84.46%,color(display-p3 .4965 .4965 .4965/.11) 91.93%,color(display-p=
3 .451 .451 .451/0)); --composer-bar_safe-margins: 20px; mask-composite: su=
btract; mask-image: var(--mask-fill),var(--content-gradient),var(--composer=
-bar_skeleton); mask-mode: luminance; mask-position: top center,center calc=
(100% - var(--composer-footer_height)),center calc(100% - var(--composer-fo=
oter_height)); mask-repeat: no-repeat; mask-size: auto,calc(100% - var(--co=
mposer-bar_safe-margins)) calc(var(--composer-bar_height) + var(--composer-=
bar_mask-grace-area)),var(--composer-bar_width) var(--composer-bar_height);=
 }

@media (prefers-reduced-transparency: reduce) {
  .masked-content { mask-image: none; }
}

.mask-scrollbars { --scrollbar-width: 10px; clip-path: inset(-100svh var(--=
scrollbar-width) 0 0); }

.bg-thread--header { background: linear-gradient(to bottom,transparent 0,tr=
ansparent 50%,var(--main-surface-primary) 50%,var(--main-surface-primary) 1=
00%); height: var(--composer-bar_height); mask-composite: subtract; mask-im=
age: var(--mask-fill),var(--composer-bar_skeleton); mask-mode: luminance; m=
ask-position: center top, center top; mask-repeat: no-repeat; mask-size: au=
to; }

@media (prefers-reduced-transparency: reduce) {
  .bg-thread--header { mask-image: none; }
}

.bg-thread--footer { background: var(--main-surface-primary); flex: 1 1 0%;=
 }

:root { --spring-fast-duration: 667ms; --spring-fast: linear(0,.01942 1.83%=
,.07956 4.02%,.47488 13.851%,.65981 19.572%,.79653 25.733%,.84834 29.083%,.=
89048 32.693%,.9246 36.734%,.95081 41.254%,.97012 46.425%,.98361 52.535%,.9=
9665 68.277%,.99988); --spring-common-duration: 667ms; --spring-common: lin=
ear(0,.00506 1.18%,.02044 2.46%,.08322 5.391%,.46561 17.652%,.63901 24.342%=
,.76663 31.093%,.85981 38.454%,.89862 42.934%,.92965 47.845%,.95366 53.305%=
,.97154 59.516%,.99189 74.867%,.9991); --spring-standard: var(--spring-comm=
on); --spring-slow-bounce-duration: 1167ms; --spring-slow-bounce: linear(0,=
.00172 .51%,.00682 1.03%,.02721 2.12%,.06135 3.29%,.11043 4.58%,.21945 6.91=
1%,.59552 14.171%,.70414 16.612%,.79359 18.962%,.86872 21.362%,.92924 23.82=
2%,.97589 26.373%,1.01 29.083%,1.0264 31.043%,1.03767 33.133%,1.04411 35.40=
4%,1.04597 37.944%,1.04058 42.454%,1.01119 55.646%,1.00137 63.716%,.99791 7=
4.127%,.99988); --spring-bounce-duration: 833ms; --spring-bounce: linear(0,=
.00541 1.29%,.02175 2.68%,.04923 4.19%,.08852 5.861%,.17388 8.851%,.48317 1=
8.732%,.57693 22.162%,.65685 25.503%,.72432 28.793%,.78235 32.163%,.83182 3=
5.664%,.87356 39.354%,.91132 43.714%,.94105 48.455%,.96361 53.705%,.97991 5=
9.676%,.9903 66.247%,.99664 74.237%,.99968 84.358%,1.00048); --spring-fast-=
bounce-duration: 1s; --spring-fast-bounce: linear(0,.00683 1.14%,.02731 2.3=
5%,.11137 5.091%,.59413 15.612%,.78996 20.792%,.92396 25.953%,.97109 28.653=
%,1.00624 31.503%,1.03801 36.154%,1.0477 41.684%,1.00242 68.787%,.99921); -=
-easing-common: linear(0,0,.0001,.0002,.0003,.0005,.0007,.001,.0013,.0016,.=
002,.0024,.0029,.0033,.0039,.0044,.005,.0057,.0063,.007,.0079,.0086,.0094,.=
0103,.0112,.0121,.0132 1.84%,.0153,.0175,.0201,.0226,.0253,.0283,.0313,.034=
5,.038,.0416,.0454,.0493,.0535,.0576,.0621,.0667,.0714,.0764,.0816 5.04%,.0=
897,.098 5.62%,.1071,.1165,.1263 6.56%,.137,.1481 7.25%,.1601 7.62%,.1706 7=
.94%,.1819 8.28%,.194,.2068 9.02%,.2331 9.79%,.2898 11.44%,.3151 12.18%,.34=
12 12.95%,.3533,.365 13.66%,.3786,.3918,.4045,.4167,.4288,.4405,.452,.4631 =
16.72%,.4759,.4884,.5005,.5124,.5242,.5354,.5467,.5576,.5686,.5791,.5894,.5=
995,.6094,.6194,.6289,.6385,.6477,.6569,.6659 24.45%,.6702,.6747,.6789,.683=
3,.6877,.6919,.696,.7002,.7043,.7084,.7125,.7165,.7205,.7244,.7283,.7321,.7=
358,.7396,.7433,.7471,.7507,.7544,.7579,.7615,.7649,.7685,.7718,.7752,.7786=
,.782,.7853,.7885,.7918,.7951,.7982,.8013,.8043,.8075,.8104,.8135,.8165,.81=
95,.8224,.8253,.8281,.8309,.8336,.8365,.8391,.8419,.8446,.8472,.8499,.8524,=
.855,.8575,.8599,.8625 37.27%,.8651,.8678,.8703,.8729,.8754,.8779,.8803,.88=
27,.8851,.8875,.8898,.892,.8942,.8965,.8987,.9009,.903,.9051,.9071,.9092,.9=
112,.9132,.9151,.9171,.919,.9209,.9227,.9245,.9262,.928,.9297,.9314,.9331,.=
9347,.9364,.9379,.9395,.941,.9425,.944,.9454,.9469,.9483,.9497,.951,.9524,.=
9537,.955,.9562,.9574,.9586,.9599,.961,.9622,.9633,.9644,.9655,.9665,.9676,=
.9686,.9696,.9705,.9715,.9724,.9733,.9742,.975,.9758,.9766,.9774,.9782,.978=
9,.9796,.9804,.9811,.9817,.9824,.9831,.9837,.9843,.9849,.9855,.986,.9866,.9=
871,.9877,.9882,.9887,.9892,.9896 70.56%,.9905 71.67%,.9914 72.82%,.9922,.9=
929 75.2%,.9936 76.43%,.9942 77.71%,.9948 79.03%,.9954 80.39%,.9959 81.81%,=
.9963 83.28%,.9968 84.82%,.9972 86.41%,.9975 88.07%,.9979 89.81%,.9982 91.6=
4%,.9984 93.56%,.9987 95.58%,.9989 97.72%,.9991); }

@supports not (white-space-collapse:collapse) {
  :root :root { --easing-common: ease-in-out; --spring-common: ease-in-out;=
 --spring-bounce: ease-in-out; --spring-fast: ease-in-out; --spring-fast-bo=
unce: ease-in-out; --spring-slow-bounce: ease-in-out; }
}

@supports not (transition-timing-function:linear(0,0 0%)) {
  :root :root { --easing-common: ease-in-out; --spring-common: ease-in-out;=
 --spring-bounce: ease-in-out; --spring-fast: ease-in-out; --spring-fast-bo=
unce: ease-in-out; --spring-slow-bounce: ease-in-out; }
}

@font-face { font-display: swap; font-family: Circle; font-style: normal; f=
ont-weight: 400; src: url("data:font/woff2;base64,d09GMk9UVE8AAAM0AAkAAAAAB=
cgAAALuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYJIBmAAfgE2AiQDDAQGBYRyByAbIwVRlKvJ=
FsDPBJtObcFDgzooFmKOOuZpZMG4Jg7aB8Nn8fzDvXrufz9r8tgCAU4XFVvjosSo0yqWv9Z+b8+=
+or6Y3y3ikk0laqIkfBkSQzINien2vweAH79N8JdohCbbWndr/HZ5v86kXxrEqV+cqnlKNBcLjY=
0Bj8Ka512LSgsolgt1Wa1Wr27atM/jBW21RrW55g21jw81IoJNHn2c/z24BlCQTVVvW09zVvtAY=
1dzeOZwYxugoDCNO2g8kMZDDRpPRuPFajC3qWY31RzV9+loj/h/e6ud/0/bfxcbEILkKpVrQNhw=
TzuJycoVI0S9RjZZES7WjkQvApCsAhsUn3SuWdP3UZ0zRZT+X1OW1h0OGr9NflM3xRvmiClHqQO=
Rzvz/tQbQb7L8b7XUFdZrb+h13MhqctFw/8PP+snI1CnebrExOvET/Fh/hn+knPwQZw89wnNvi+=
62ERUZoHLr9BC1nCwROqghul1go6hTCVTs54ZppNw6x+jkYtzYdoEMTuGT8KCP/A/hDIeWUloqM=
4VXWm2g5T0CrvPF5g3kAs04zXJGkI7P96za7LmtKwgBAmhGzB07gBpPeEUAKyzEwwWJxIBzFaQe=
HZwg6BYQxo6W2Qwz739fUTpv+v/c+Xy3Sv6VF/uN3w8uFpdbNkDuXnWVGkBhvGn75R1LYEgq295=
Z+QHimbpBIbxAAQtPAhA2QAAaMjYQQHHzONnK8R1EFN9lrZmfUxvmFzjzl5dsLLNQqwDEx+49z7=
B0yrNi3SQ58LwmAy/AqeOtOWduzoY8+2s/wMFgbxAWiEesMNZAalIE2r8JllitrXeokZEbwVJpR=
0hSXFLwa+wftjSPNWMSERMRGxMrEi0DVYcfdnhxQ66Eqt62nmYsq32gsaspM4cb2ypPtQ531Q+I=
Ioj9J0lKy0pzkjTFKxoOtd8ODLb39mD0t/UONT71Ry6QDBlaIonr767vbJaUtzSPNQOBmOXFihF=
LROyYXvXnrUOTszoAAA=3D=3D") format("woff2"); }

@font-face { font-display: swap; font-family: Circle; font-style: normal; f=
ont-weight: 600; src: url("data:font/woff2;base64,d09GMk9UVE8AAANIAAkAAAAAB=
kwAAAMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYJQBmAAfgE2AiQDDAQGBYVwByAbqQVRlMVN=
BfiRkLl5oxlVNKr4xQKiOJqYMp0zZd4iyiabvWs/aWpaEhyiBiMQGoNCIoys0xiDZnJteLRGXET=
3IpoQq697VFOmBlImcVhpy3pWuy6ZGDJnDoFpIwM96olCINQDUebsKzfc8cml+mMBP82Lfx5kKv=
x3Td2DFtCONwWq1Ru/VIs7/gTVpl7hgkiHscva/P1RKvnkOj2uDshaX5Id6vvRLs7Q7ZY7RUIph=
hAYQskQ6gJDmGIIZ4YIVbgw4aJK86iJ8ai2EeK+a2PFayPSEw4h7uwclpQxdejLyi11M9Iy2h0j=
4eJMBI28mehJINkCFioovm/Yah6VpgBJUm48kUyWnPA1xAhNmKY1S5qwFaT01WKAtvHEg6QZc9t=
odjOVtRlP+hmjzDDS5vtMPD748Cgn0q2zV69y9Mytow/50QcHH4tnHBQWHuslA/3B8O2e6uPdV9=
vO1B/lSKo5WCl4o2ahQUcDvW2kuxvh3SOtegPX6+drRCVHhYM1R9HgaP3ZtqvIQwHcGn6o8wf64=
4VngrsJ4QBWcbQHGrW2K7XgmT5uPpAHTOivlgPGIeL+mbnYY7xhj5AEAtSqfMIBaNDgjWfcMFRm=
HIrAIqAO7J4cqgRylIjSHx27HeBe+8o/qp1Xbb/IqsC9ZI03+w/fbWoexLpPI+sf04PMBbjGKDw=
6XInbdQiytiHo/3RWkeUd9IkyXjTYfUMA4QsCKCpfBGjhAhFgEqQAAWZZygUw+FhGgI2LIwiw40=
4iwEWQixiaHEGSvMqDgqv5QpHqDyV0WChLs4GKVj5Q18zvoKFe1Xk/BxaI0I2NKfxfK8J/W710U=
VzebArQ6NFEpCWN1fGWFBQegKAjSBCctI7wij+coRcCJGQgy7A42Q3Te14v7+6FuamjlQMEsKxd=
JHYlel9kJ5adv7kxHe2kcBAeviIZGBpwSO2aZ7b9TXUzD/i7C8jF1drRAeiL2ZWjm6Rq8sFp4jK=
IQOBI9iJbyNGt7alX974oJIgBsRgsHDkMjr/FbPeiAAAA") format("woff2"); }

@font-face { font-display: swap; font-family: "OpenAI Sans"; font-weight: 3=
00 700; src: url("https://cdn.openai.com/common/fonts/openai-sans-variable/=
OpenAISansVariableVF.woff2") format("woff2"), url("https://cdn.openai.com/c=
ommon/fonts/openai-sans-variable/OpenAISansVariableVF.woff") format("woff")=
; }

@layer theme {
  :host, :root { --spacing: .25rem; --breakpoint-md: 48rem; --breakpoint-lg=
: 64rem; --breakpoint-2xl: 96rem; --container-xs: 20rem; --container-sm: 24=
rem; --container-md: 28rem; --container-lg: 32rem; --container-xl: 36rem; -=
-container-2xl: 42rem; --container-3xl: 48rem; --container-4xl: 56rem; --co=
ntainer-5xl: 64rem; --container-6xl: 72rem; --text-xs: .75rem; --text-xs--l=
ine-height: 1.33333; --text-sm: .875rem; --text-sm--line-height: 1.42857; -=
-text-base: 1rem; --text-base--line-height: 1.5; --text-lg: 1.125rem; --tex=
t-lg--line-height: 1.55556; --text-xl: 1.25rem; --text-xl--line-height: 1.4=
; --text-2xl: 1.5rem; --text-2xl--line-height: 1.33333; --text-3xl: 1.875re=
m; --text-3xl--line-height: 1.2; --text-4xl: 2.25rem; --text-4xl--line-heig=
ht: 1.11111; --text-5xl: 3rem; --text-5xl--line-height: 1; --text-6xl: 3.75=
rem; --text-6xl--line-height: 1; --text-7xl: 4.5rem; --text-7xl--line-heigh=
t: 1; --font-weight-extralight: 200; --font-weight-light: 300; --font-weigh=
t-normal: 400; --font-weight-medium: 500; --font-weight-semibold: 600; --fo=
nt-weight-bold: 700; --font-weight-black: 900; --tracking-tighter: -.05em; =
--tracking-tight: -.025em; --tracking-wide: .025em; --tracking-widest: .1em=
; --leading-tight: 1.25; --leading-snug: 1.375; --leading-normal: 1.5; --le=
ading-relaxed: 1.625; --radius-xs: .125rem; --radius-sm: .25rem; --radius-m=
d: .375rem; --radius-lg: .5rem; --radius-xl: .75rem; --radius-2xl: 1rem; --=
radius-3xl: 1.5rem; --radius-4xl: 2rem; --drop-shadow-xs: 0 1px 1px #000000=
0d; --drop-shadow-md: 0 3px 3px #0000001f; --ease-in: cubic-bezier(.4,0,1,1=
); --ease-out: cubic-bezier(0,0,.2,1); --ease-in-out: cubic-bezier(.4,0,.2,=
1); --animate-spin: spin 1s linear infinite; --animate-ping: ping 1s cubic-=
bezier(0,0,.2,1)infinite; --animate-pulse: pulse 2s cubic-bezier(.4,0,.6,1)=
infinite; --animate-bounce: bounce 1s infinite; --blur-xs: 4px; --blur-sm: =
8px; --blur-md: 12px; --blur-lg: 16px; --blur-xl: 24px; --blur-2xl: 40px; -=
-blur-3xl: 64px; --aspect-video: 16/9; --default-transition-duration: .15s;=
 --default-transition-timing-function: cubic-bezier(.4,0,.2,1); --default-f=
ont-family: ui-sans-serif,-apple-system,system-ui,Segoe UI,Helvetica,Apple =
Color Emoji,Arial,sans-serif,Segoe UI Emoji,Segoe UI Symbol; --default-font=
-feature-settings: normal; --default-font-variation-settings: normal; --def=
ault-mono-font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,L=
iberation Mono,monospace; --default-mono-font-feature-settings: normal; --d=
efault-mono-font-variation-settings: normal; --text-heading-3: 1.125rem; --=
text-heading-3--line-height: 1.625rem; --text-heading-3--letter-spacing: -.=
028125rem; --text-heading-3--font-weight: 600; --text-body-small-regular: .=
875rem; --text-body-small-regular--line-height: 1.125rem; --text-body-small=
-regular--letter-spacing: -.01875rem; --text-body-small-regular--font-weigh=
t: 400; --text-caption-regular: .75rem; --text-caption-regular--line-height=
: 1rem; --text-caption-regular--letter-spacing: -.00625rem; --text-caption-=
regular--font-weight: 400; }
}

@layer base {
  *, ::backdrop, ::after, ::before { border: 0px solid; box-sizing: border-=
box; margin: 0px; padding: 0px; }
  ::file-selector-button { border: 0px solid; box-sizing: border-box; margi=
n: 0px; padding: 0px; }
  :host, html { text-size-adjust: 100%; font-feature-settings: var(--defaul=
t-font-feature-settings,normal); -webkit-tap-highlight-color: transparent; =
font-family: var(--default-font-family,ui-sans-serif,system-ui,sans-serif,"=
Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"); =
font-variation-settings: var(--default-font-variation-settings,normal); lin=
e-height: 1.5; tab-size: 4; }
  body { line-height: inherit; }
  hr { border-top-width: 1px; color: inherit; height: 0px; }
  abbr:where([title]) { text-decoration: underline dotted; }
  h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }
  a { color: inherit; text-decoration: inherit; }
  b, strong { font-weight: bolder; }
  code, kbd, pre, samp { font-feature-settings: var(--default-mono-font-fea=
ture-settings,normal); font-family: var(--default-mono-font-family,ui-monos=
pace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",m=
onospace); font-size: 1em; font-variation-settings: var(--default-mono-font=
-variation-settings,normal); }
  small { font-size: 80%; }
  sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-a=
lign: baseline; }
  sub { bottom: -0.25em; }
  sup { top: -0.5em; }
  table { border-collapse: collapse; border-color: inherit; text-indent: 0p=
x; }
  progress { vertical-align: baseline; }
  summary { display: list-item; }
  menu, ol, ul { list-style: none; }
  audio, canvas, embed, iframe, img, object, svg, video { display: block; v=
ertical-align: middle; }
  img, video { height: auto; max-width: 100%; }
  button, input, optgroup, select, textarea { background-color: rgba(0, 0, =
0, 0); border-radius: 0px; color: inherit; font: inherit; letter-spacing: i=
nherit; opacity: 1; }
  ::file-selector-button { background-color: rgba(0, 0, 0, 0); border-radiu=
s: 0px; color: inherit; font: inherit; letter-spacing: inherit; opacity: 1;=
 }
  :where(select:is([multiple], [size])) optgroup { font-weight: bolder; }
  :where(select:is([multiple], [size])) optgroup option { padding-inline-st=
art: 20px; }
  ::file-selector-button { margin-inline-end: 4px; }
  ::placeholder { color: color-mix(in oklab, currentcolor, transparent); op=
acity: 1; }
  textarea { resize: vertical; }
  ::-webkit-search-decoration { appearance: none; }
  ::-webkit-date-and-time-value { min-height: 1lh; text-align: inherit; }
  ::-webkit-datetime-edit { display: inline-flex; padding-block: 0px; }
  ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-year-field {=
 padding-block: 0px; }
  ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field { p=
adding-block: 0px; }
  ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-fiel=
d { padding-block: 0px; }
  ::-webkit-datetime-edit-meridiem-field, ::-webkit-datetime-edit-milliseco=
nd-field { padding-block: 0px; }
  button, input:where([type=3D"button"], [type=3D"reset"], [type=3D"submit"=
]) { appearance: button; }
  ::file-selector-button { appearance: button; }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; =
}
  [hidden]:where(:not([hidden=3D"until-found"])) { display: none !important=
; }
  *, ::backdrop, ::after, ::before { border-color: var(--border-light,curre=
ntColor); }
  ::file-selector-button { border-color: var(--border-light,currentColor); =
}
  [role=3D"button"]:not(:disabled), button:not(:disabled) { cursor: pointer=
; }
  h1 { font-size: var(--text-3xl); line-height: var(--tw-leading,var(--text=
-3xl--line-height)); }
  h1, h2, h3 { --tw-font-weight: var(--font-weight-semibold); font-weight: =
var(--font-weight-semibold); }
  h2, h3 { font-size: var(--text-2xl); line-height: var(--tw-leading,var(--=
text-2xl--line-height)); }
  input[type=3D"number"]::-webkit-inner-spin-button, input[type=3D"number"]=
::-webkit-outer-spin-button { appearance: none; margin: 0px; }
  .mask-fade { mask-image: none; transition: -webkit-mask-image 0.2s, mask-=
image 0.2s; }
  .active-mask-fade, .group:hover .mask-fade { mask-image: linear-gradient(=
90deg, rgb(0, 0, 0) 0px, rgb(0, 0, 0) 75%, rgba(0, 0, 0, 0)); }
  @keyframes hive-log-fadeout {=20
  0% { background: rgba(2, 133, 255, 0.1); }
  100% { background-color: rgba(0, 0, 0, 0); }
}
  .hive-log { --tw-font-weight: var(--font-weight-medium); background-color=
: rgba(0, 0, 0, 0.05); border-radius: 3.40282e+38px; color: rgb(143, 143, 1=
43); cursor: pointer; font-size: 10px; font-weight: var(--font-weight-mediu=
m); padding-block: calc(var(--spacing)*.5); padding-inline: calc(var(--spac=
ing)*1.5); }
  @media (hover: hover) {
  .hive-log:hover { background-color: var(--main-surface-tertiary); color: =
var(--text-primary); }
}
  :root, [dir=3D"ltr"] { --start: left; --end: right; --to-end-unit: 1; --i=
s-ltr: unset; --is-rtl: ; }
  [dir=3D"rtl"] { --start: right; --end: left; --to-end-unit: -1; --is-ltr:=
 ; --is-rtl: unset; }
  :root { --user-chat-width: 70%; --sidebar-width: 260px; --sidebar-inline-=
padding: 12px; --sidebar-mask: linear-gradient(to var(--end),#000,#000 84%,=
transparent 89%,transparent 100%); --header-height: 60px; --white: #fff; --=
black: #000; --gray-50: #f9f9f9; --gray-100: #ececec; --gray-200: #e3e3e3; =
--gray-300: #cdcdcd; --gray-400: #b4b4b4; --gray-500: #9b9b9b; --gray-600: =
#676767; --gray-700: #424242; --gray-750: #2f2f2f; --gray-800: #212121; --g=
ray-900: #171717; --gray-950: #0d0d0d; --red-500: #e02e2a; --red-700: #911e=
1b; --brand-purple: #ab68ff; --yellow-900: #4d3b00; }
  @media (min-width: 768px) {
  :root { --header-height: 3.5rem; }
}
  @media (-moz-device-pixel-ratio>=3D2), (-o-min-device-pixel-ratio:2), (-w=
ebkit-device-pixel-ratio >=3D 2), (min-device-pixel-ratio:2), (min-resoluti=
on: 192dpi), (min-resolution: 2x) {
  :root { -webkit-font-smoothing: antialiased; }
}
  .dark .light, .light, html { --main-surface-background: #fffffff2; --mess=
age-surface: #e9e9e980; --composer-surface: var(--message-surface); --compo=
ser-blue-bg: #daeeff; --composer-blue-hover: #bddcf4; --composer-blue-hover=
-tint: #0084ff24; --composer-surface-primary: var(--main-surface-primary); =
--dot-color: var(--black); --text-primary: var(--gray-950); --icon-surface:=
 13 13 13; --text-primary-inverse: var(--gray-100); --content-primary: #011=
72b; --content-secondary: #44505b; --text-secondary: #5d5d5d; --text-tertia=
ry: var(--gray-400); --text-quaternary: var(--gray-300); --text-placeholder=
: #000000b3; --tag-blue: #08f; --tag-blue-light: #0af; --text-error: #f93a3=
7; --text-danger: var(--red-500); --surface-error: 249 58 55; --border-xlig=
ht: #0000000d; --border-light: #0000001a; --border-medium: #00000026; --bor=
der-heavy: #0003; --border-xheavy: #00000040; --hint-text: #08f; --hint-bg:=
 #b3dbff; --border-sharp: #0000000d; --icon-secondary: #676767; --main-surf=
ace-primary: var(--white); --main-surface-primary-inverse: var(--gray-800);=
 --main-surface-secondary: var(--gray-50); --main-surface-secondary-selecte=
d: #0000001a; --main-surface-tertiary: var(--gray-100); --sidebar-surface-p=
rimary: var(--gray-50); --sidebar-surface-secondary: var(--gray-100); --sid=
ebar-surface-tertiary: var(--gray-200); --sidebar-title-primary: #28282880;=
 --sidebar-surface: #fcfcfc; --sidebar-body-primary: #0d0d0d; --sidebar-ico=
n: #7d7d7d; --surface-hover: #00000012; --link: #2964aa; --link-hover: #749=
ac8; --selection: #007aff; }
  @supports (color:oklch(.99 0 0)) {
  .dark .light, .light, html { --sidebar-surface-floating-lightness: 1; --s=
idebar-surface-floating-alpha: 1; --sidebar-surface-pinned-lightness: .99; =
--sidebar-surface-pinned-alpha: 1; }
}
  @media (prefers-reduced-transparency: reduce) {
  .dark .light, .light, html { --message-surface: #f4f4f4; }
}
  .dark { --main-surface-background: #212121e6; --message-surface: #323232d=
9; --composer-blue-bg: #2a4a6d; --composer-blue-hover: #1a416a; --composer-=
blue-text: #48aaff; --composer-surface-primary: #303030; --dot-color: var(-=
-white); --text-primary: var(--gray-100); --icon-surface: 240 240 240; --te=
xt-primary-inverse: var(--gray-950); --text-secondary: var(--gray-400); --t=
ext-tertiary: var(--gray-500); --text-quaternary: var(--gray-600); --text-p=
laceholder: #fffc; --content-primary: #f2f6fa; --content-secondary: #dbe2e8=
; --text-error: #f93a37; --border-xlight: #ffffff0d; --border-light: #fffff=
f1a; --border-medium: #ffffff26; --border-heavy: #fff3; --border-xheavy: #f=
fffff40; --border-sharp: #ffffff0d; --main-surface-primary: var(--gray-800)=
; --main-surface-primary-inverse: var(--white); --main-surface-secondary: v=
ar(--gray-750); --main-surface-secondary-selected: #ffffff26; --main-surfac=
e-tertiary: var(--gray-700); --sidebar-surface-primary: var(--gray-900); --=
sidebar-surface-secondary: var(--gray-800); --sidebar-surface-tertiary: var=
(--gray-750); --sidebar-title-primary: #f0f0f080; --sidebar-surface: #2b2b2=
b; --sidebar-body-primary: #ededed; --sidebar-icon: #a4a4a4; --surface-hove=
r: #ffffff26; --link: #7ab7ff; --link-hover: #5e83b3; --surface-error: 249 =
58 55; }
  @supports (color:oklch(.99 0 0)) {
  .dark { --sidebar-surface-floating-lightness: .3; --sidebar-surface-float=
ing-alpha: 1; --sidebar-surface-pinned-lightness: .29; --sidebar-surface-pi=
nned-alpha: 1; }
}
  @media (prefers-reduced-transparency: reduce) {
  .dark { --message-surface: #2f2f2f; }
}
  .dark :not(.light).popover, .dark.popover, .popover .dark { --main-surfac=
e-primary: var(--gray-750); --main-surface-secondary: var(--gray-700); --ma=
in-surface-tertiary: var(--gray-600); --text-primary: var(--gray-50); --tex=
t-secondary: var(--gray-200); --text-tertiary: var(--gray-400); --text-quat=
ernary: var(--gray-500); --sidebar-surface-primary: var(--gray-750); }
  .dark .light.popover, .light .popover, .light.popover, .popover { --main-=
surface-primary: var(--white); --main-surface-secondary: var(--gray-100); -=
-main-surface-tertiary: var(--gray-200); --sidebar-surface-primary: var(--w=
hite); }
  .dark .popover.sidebar { --main-surface-secondary: #393939 !important; }
  .light .canvas-open { --main-surface-primary: #f9f9f9; --message-surface:=
 #eee; }
  textarea:focus { border-color: inherit; box-shadow: none; outline: none; =
}
  @supports (height:100cqh) {
  :root { --cqh-full: 100cqh; --cqw-full: 100cqw; }
}
  @supports not (height:100cqh) {
  :root { --cqh-full: 100dvh; --cqw-full: 100dvw; }
}
  [multiple], [type=3D"date"], [type=3D"datetime-local"], [type=3D"email"],=
 [type=3D"month"], [type=3D"number"], [type=3D"password"], [type=3D"search"=
], [type=3D"tel"], [type=3D"text"], [type=3D"time"], [type=3D"url"], [type=
=3D"week"], select, textarea { --tw-shadow: 0 0 #0000; appearance: none; ba=
ckground-color: rgb(255, 255, 255); border-color: rgb(155, 155, 155); borde=
r-radius: 0px; border-width: 1px; font-size: 1rem; line-height: 1.5rem; pad=
ding: 0.5rem 0.75rem; }
  :is([type=3D"text"], [type=3D"email"], [type=3D"url"], [type=3D"password"=
], [type=3D"number"], [type=3D"date"], [type=3D"datetime-local"], [type=3D"=
month"], [type=3D"search"], [type=3D"tel"], [type=3D"time"], [type=3D"week"=
], [multiple], textarea, select):focus { --tw-ring-inset: var(--tw-empty, )=
; --tw-ring-offset-width: 0px; --tw-ring-offset-color: #fff; --tw-ring-colo=
r: #004f99; --tw-ring-offset-shadow: var(--tw-ring-inset)0 0 0 var(--tw-rin=
g-offset-width)var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset)0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color); b=
order-color: rgb(0, 79, 153); box-shadow: var(--tw-ring-offset-shadow),var(=
--tw-ring-shadow),var(--tw-shadow); outline: rgba(0, 0, 0, 0) solid 2px; ou=
tline-offset: 2px; }
  input::placeholder, textarea::placeholder { color: rgb(155, 155, 155); op=
acity: 1; }
  ::-webkit-datetime-edit-fields-wrapper { padding: 0px; }
  ::-webkit-date-and-time-value { min-height: 1.5em; }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field { padding-bot=
tom: 0px; padding-top: 0px; }
  ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-month-field { =
padding-bottom: 0px; padding-top: 0px; }
  ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field =
{ padding-bottom: 0px; padding-top: 0px; }
  ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-second=
-field { padding-bottom: 0px; padding-top: 0px; }
  ::-webkit-datetime-edit-meridiem-field { padding-bottom: 0px; padding-top=
: 0px; }
  select { background-image: url("data:image/svg+xml;charset=3Dutf-8,%3Csvg=
 xmlns=3D'http://www.w3.org/2000/svg' fill=3D'none' viewBox=3D'0 0 20 20'%3=
E%3Cpath stroke=3D'%239B9B9B' stroke-linecap=3D'round' stroke-linejoin=3D'r=
ound' stroke-width=3D'1.5' d=3D'm6 8 4 4 4-4'/%3E%3C/svg%3E"); background-r=
epeat: no-repeat; background-size: 1.5em 1.5em; -webkit-print-color-adjust:=
 exact; }
  [dir=3D"ltr"] select { background-position: right 0.5rem center; padding-=
right: 2.5rem; }
  [dir=3D"rtl"] select { background-position: left 0.5rem center; padding-l=
eft: 2.5rem; }
  [multiple] { background-image: none; background-position: 0px 0px; backgr=
ound-repeat: unset; background-size: initial; -webkit-print-color-adjust: u=
nset; }
  [dir=3D"ltr"] [multiple] { padding-right: 0.75rem; }
  [dir=3D"rtl"] [multiple] { padding-left: 0.75rem; }
  [type=3D"checkbox"], [type=3D"radio"] { --tw-shadow: 0 0 #0000; appearanc=
e: none; background-color: rgb(255, 255, 255); background-origin: border-bo=
x; border-color: rgb(155, 155, 155); border-width: 1px; color: rgb(0, 79, 1=
53); display: inline-block; flex-shrink: 0; height: 1rem; padding: 0px; -we=
bkit-print-color-adjust: exact; user-select: none; vertical-align: middle; =
width: 1rem; }
  [type=3D"checkbox"] { border-radius: 0px; }
  [type=3D"radio"] { border-radius: 100%; }
  [type=3D"checkbox"]:focus, [type=3D"radio"]:focus { --tw-ring-inset: var(=
--tw-empty, ); --tw-ring-offset-width: 2px; --tw-ring-offset-color: #fff; -=
-tw-ring-color: #004f99; --tw-ring-offset-shadow: var(--tw-ring-inset)0 0 0=
 var(--tw-ring-offset-width)var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-r=
ing-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),=
var(--tw-shadow); outline: rgba(0, 0, 0, 0) solid 2px; outline-offset: 2px;=
 }
  [type=3D"checkbox"]:checked, [type=3D"radio"]:checked { background-color:=
 currentcolor; background-position: 50% center; background-repeat: no-repea=
t; background-size: 100% 100%; border-color: rgba(0, 0, 0, 0); }
  [type=3D"checkbox"]:checked { background-image: url("data:image/svg+xml;c=
harset=3Dutf-8,%3Csvg viewBox=3D'0 0 16 16' fill=3D'%23fff' xmlns=3D'http:/=
/www.w3.org/2000/svg'%3E%3Cpath d=3D'M12.207 4.793a1 1 0 0 1 0 1.414l-5 5a1=
 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L6.5 9.086l4.293-4.293a1 1 0 0 1=
 1.414 0z'/%3E%3C/svg%3E"); }
  [type=3D"radio"]:checked { background-image: url("data:image/svg+xml;char=
set=3Dutf-8,%3Csvg viewBox=3D'0 0 16 16' fill=3D'%23fff' xmlns=3D'http://ww=
w.w3.org/2000/svg'%3E%3Ccircle cx=3D'8' cy=3D'8' r=3D'3'/%3E%3C/svg%3E"); }
  [type=3D"checkbox"]:checked:focus, [type=3D"checkbox"]:checked:hover, [ty=
pe=3D"radio"]:checked:focus, [type=3D"radio"]:checked:hover { background-co=
lor: currentcolor; border-color: rgba(0, 0, 0, 0); }
  [type=3D"checkbox"]:indeterminate { background-color: currentcolor; backg=
round-image: url("data:image/svg+xml;charset=3Dutf-8,%3Csvg xmlns=3D'http:/=
/www.w3.org/2000/svg' fill=3D'none' viewBox=3D'0 0 16 16'%3E%3Cpath stroke=
=3D'%23fff' stroke-linecap=3D'round' stroke-linejoin=3D'round' stroke-width=
=3D'2' d=3D'M4 8h8'/%3E%3C/svg%3E"); background-position: 50% center; backg=
round-repeat: no-repeat; background-size: 100% 100%; border-color: rgba(0, =
0, 0, 0); }
  [type=3D"checkbox"]:indeterminate:focus, [type=3D"checkbox"]:indeterminat=
e:hover { background-color: currentcolor; border-color: rgba(0, 0, 0, 0); }
  [type=3D"file"] { background: unset; border-color: inherit; border-radius=
: 0px; border-width: 0px; font-size: unset; line-height: inherit; padding: =
0px; }
  [type=3D"file"]:focus { outline: -webkit-focus-ring-color auto 1px; }
}

@layer components {
  .icon-xs { stroke-width: 1.5px; flex-shrink: 0; height: calc(var(--spacin=
g)*3); width: calc(var(--spacing)*3); }
  .icon-sm { stroke-width: 2px; flex-shrink: 0; height: calc(var(--spacing)=
*4); width: calc(var(--spacing)*4); }
  .icon-sm-adaptive { height: calc(var(--spacing)*5); width: calc(var(--spa=
cing)*5); }
  @media (min-width: 48rem) {
  .icon-sm-adaptive { height: calc(var(--spacing)*4); width: calc(var(--spa=
cing)*4); }
}
  .icon-sm-heavy { stroke-width: 2.5px; flex-shrink: 0; height: calc(var(--=
spacing)*4); width: calc(var(--spacing)*4); }
  .icon-md { height: 18px; width: 18px; }
  .icon-md, .icon-sidebar { stroke-width: 1.5px; flex-shrink: 0; }
  .icon-sidebar { height: 20px; width: 20px; }
  .icon-md-heavy { stroke-width: 2.5px; flex-shrink: 0; height: 18px; width=
: 18px; }
  .icon-lg { stroke-width: 1.5px; flex-shrink: 0; height: calc(var(--spacin=
g)*6); width: calc(var(--spacing)*6); }
  .icon-lg-heavy { stroke-width: 2px; flex-shrink: 0; height: 22px; width: =
22px; }
  .icon-xl { stroke-width: 1.5px; flex-shrink: 0; height: calc(var(--spacin=
g)*7); width: calc(var(--spacing)*7); }
  .icon-xl-heavy { stroke-width: 2px; flex-shrink: 0; height: 24px; width: =
24px; }
  .icon-2xl { stroke-width: 1.5px; flex-shrink: 0; height: calc(var(--spaci=
ng)*8); width: calc(var(--spacing)*8); }
  .icon-workspace-avatar-preview { stroke-width: 1.5px; height: 96px; width=
: 96px; }
  .icon-cover { stroke-width: 1.5px; height: 234px; width: 234px; }
  .loading-shimmer, .loading-shimmer-pure-text { --shimmer-contrast: #fffff=
fbf; }
  .dark .loading-shimmer, .dark .loading-shimmer-pure-text { --shimmer-cont=
rast: #0009; }
  .loading-shimmer, .loading-shimmer-pure-text { -webkit-text-fill-color: t=
ransparent; animation-delay: 0.5s; animation-duration: 3s; animation-iterat=
ion-count: infinite; animation-name: loading-shimmer; background-image: ; b=
ackground-position-x: ; background-position-y: ; background-attachment: ; b=
ackground-origin: ; background-color: ; background-clip: text; background-r=
epeat: no-repeat; background-size: 50% 200%; display: inline-block; }
  [dir=3D"ltr"] .loading-shimmer, [dir=3D"ltr"] .loading-shimmer-pure-text =
{ background-position: -100% 0px; }
  [dir=3D"rtl"] .loading-shimmer, [dir=3D"rtl"] .loading-shimmer-pure-text =
{ background-position: 200% 0px; }
  .loading-shimmer:hover { -webkit-text-fill-color: var(--text-primary); an=
imation: auto ease 0s 1 normal none running none; }
  [dir=3D"ltr"] .loading-shimmer:hover { background: 0px 0px; }
  [dir=3D"rtl"] .loading-shimmer:hover { background: 100% 0px; }
  .loading-shimmer-pure-text-inverted { -webkit-text-fill-color: transparen=
t; animation-delay: 0.5s; animation-duration: 3s; animation-iteration-count=
: infinite; animation-name: loading-shimmer; background-image: ; background=
-position-x: ; background-position-y: ; background-attachment: ; background=
-origin: ; background-color: ; background-clip: text; background-repeat: no=
-repeat; background-size: 50% 200%; display: inline-block; }
  [dir=3D"ltr"] .loading-shimmer-pure-text-inverted { background-position: =
-100% 0px; }
  [dir=3D"rtl"] .loading-shimmer-pure-text-inverted { background-position: =
200% 0px; }
  .gizmo-shadow-stroke { position: relative; }
  .gizmo-shadow-stroke::after { --tw-shadow: inset 0 0 0 1px var(--tw-shado=
w-color,#0000001a); border-radius: 3.40282e+38px; content: ""; inset: calc(=
var(--spacing)*0); position: absolute; }
  .dark .gizmo-shadow-stroke::after, .gizmo-shadow-stroke::after { box-shad=
ow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset=
-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark .gizmo-shadow-stroke::after { --tw-shadow: inset 0 0 0 1px var(--tw=
-shadow-color,#fff3); }
}

@layer utilities {
  .\@container\/thread { container: thread / inline-size; }
  .\@container { container-type: inline-size; }
  .btn { --tw-font-weight: var(--font-weight-medium); align-items: center; =
border-color: rgba(0, 0, 0, 0); border-radius: 3.40282e+38px; border-style:=
 var(--tw-border-style); border-width: 1px; display: inline-flex; flex-shri=
nk: 0; font-size: var(--text-sm); font-weight: var(--font-weight-medium); j=
ustify-content: center; line-height: var(--tw-leading,var(--text-sm--line-h=
eight)); min-height: 38px; padding-block: calc(var(--spacing)*2); padding-i=
nline: calc(var(--spacing)*3.5); pointer-events: auto; }
  .btn:focus { --tw-outline-style: none; outline-style: none; }
  @media (forced-colors: active) {
  .btn:focus { outline: rgba(0, 0, 0, 0) solid 2px; outline-offset: 2px; }
}
  .btn:focus-visible { --tw-outline-style: none; outline-style: none; }
  @media (forced-colors: active) {
  .btn:focus-visible { outline: rgba(0, 0, 0, 0) solid 2px; outline-offset:=
 2px; }
}
  .btn:disabled { cursor: not-allowed; opacity: 0.5; }
  .btn:active:not(:disabled) { opacity: 0.8; }
  .pointer-events-auto { pointer-events: auto; }
  .pointer-events-auto\! { pointer-events: auto !important; }
  .pointer-events-none { pointer-events: none; }
  .collapse { visibility: collapse; }
  .invisible { visibility: hidden; }
  .visible { visibility: visible; }
  .border-glowing-gradient { --tw-blur: blur(4px); filter: var(--tw-blur,)v=
ar(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rot=
ate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shad=
ow,); height: 120%; inset: 0px -10% 0px 0px; margin: auto; position: absolu=
te; width: 120%; z-index: 1; }
  [dir=3D"ltr"] .border-glowing-gradient { background: conic-gradient(var(-=
-glow-color-1,oklch(.63 .2 254.95))120deg,var(--glow-color-2,oklch(.7 .2 25=
4.95))150deg,var(--glow-color-3,oklch(.77 .2 254.95))200deg,var(--glow-colo=
r-4,oklch(.84 .2 254.95))240deg); }
  [dir=3D"rtl"] .border-glowing-gradient { background: conic-gradient(var(-=
-glow-color-1,oklch(.63 .2 254.95))-120deg,var(--glow-color-2,oklch(.7 .2 2=
54.95))150deg,var(--glow-color-3,oklch(.77 .2 254.95))200deg,var(--glow-col=
or-4,oklch(.84 .2 254.95))240deg); }
  @media (prefers-reduced-motion: no-preference) {
  .border-glowing-gradient { animation: 1.5s linear 0s infinite normal none=
 running spin; }
}
  .sr-only { clip: rect(0px, 0px, 0px, 0px); border-width: 0px; height: 1px=
; margin: -1px; overflow: hidden; padding: 0px; white-space: nowrap; width:=
 1px; }
  .absolute, .sr-only { position: absolute; }
  .fixed { position: fixed; }
  .relative { position: relative; }
  .static { position: static; }
  .static\! { position: static !important; }
  .sticky { position: sticky; }
  .-inset-4 { inset: calc(var(--spacing)*-4); }
  .inset-0 { inset: calc(var(--spacing)*0); }
  .inset-2 { inset: calc(var(--spacing)*2); }
  .inset-5 { inset: calc(var(--spacing)*5); }
  .inset-x-0 { inset-inline: calc(var(--spacing)*0); }
  .inset-x-\[15px\] { inset-inline: 15px; }
  .inset-x-px { inset-inline: 1px; }
  .inset-y-0 { inset-block: calc(var(--spacing)*0); }
  .-start-1 { inset-inline-start: calc(var(--spacing)*-1); }
  .-start-2 { inset-inline-start: calc(var(--spacing)*-2); }
  .-start-4 { inset-inline-start: calc(var(--spacing)*-4); }
  .-start-96 { inset-inline-start: calc(var(--spacing)*-96); }
  .start-0 { inset-inline-start: calc(var(--spacing)*0); }
  .start-1 { inset-inline-start: calc(var(--spacing)*1); }
  .start-1\/2 { inset-inline-start: 50%; }
  .start-2 { inset-inline-start: calc(var(--spacing)*2); }
  .start-3 { inset-inline-start: calc(var(--spacing)*3); }
  .start-4 { inset-inline-start: calc(var(--spacing)*4); }
  .start-5 { inset-inline-start: calc(var(--spacing)*5); }
  .start-6 { inset-inline-start: calc(var(--spacing)*6); }
  .start-10 { inset-inline-start: calc(var(--spacing)*10); }
  .start-\[-2px\] { inset-inline-start: -2px; }
  .start-\[-150\%\] { inset-inline-start: -150%; }
  .start-\[0\.81rem\] { inset-inline-start: 0.81rem; }
  .start-\[3\.25rem\] { inset-inline-start: 3.25rem; }
  .start-\[7px\] { inset-inline-start: 7px; }
  .start-\[calc\(\(\(100vw-450px-min\(100vw-450px\,850px\)\)\/2\)\)\] { ins=
et-inline-start: calc(-225px + 50vw + min(-450px + 100vw, 850px) / -2); }
  .start-full { inset-inline-start: 100%; }
  .-end-1 { inset-inline-end: calc(var(--spacing)*-1); }
  .-end-1\.5 { inset-inline-end: calc(var(--spacing)*-1.5); }
  .-end-2 { inset-inline-end: calc(var(--spacing)*-2); }
  .-end-4 { inset-inline-end: calc(var(--spacing)*-4); }
  .end-\(--thread-content-margin\) { inset-inline-end: var(--thread-content=
-margin); }
  .end-0 { inset-inline-end: calc(var(--spacing)*0); }
  .end-1 { inset-inline-end: calc(var(--spacing)*1); }
  .end-1\/2 { inset-inline-end: 50%; }
  .end-2 { inset-inline-end: calc(var(--spacing)*2); }
  .end-2\.5 { inset-inline-end: calc(var(--spacing)*2.5); }
  .end-3 { inset-inline-end: calc(var(--spacing)*3); }
  .end-4 { inset-inline-end: calc(var(--spacing)*4); }
  .end-5 { inset-inline-end: calc(var(--spacing)*5); }
  .end-14 { inset-inline-end: calc(var(--spacing)*14); }
  .end-\[-1px\] { inset-inline-end: -1px; }
  .end-\[-3px\] { inset-inline-end: -3px; }
  .end-\[-8px\] { inset-inline-end: -8px; }
  .end-\[-135px\] { inset-inline-end: -135px; }
  .end-\[4\.8px\] { inset-inline-end: 4.8px; }
  .end-\[12px\] { inset-inline-end: 12px; }
  .end-full { inset-inline-end: 100%; }
  .end-snc-1 { inset-inline-end: var(--snc-1); }
  .-top-0 { top: calc(var(--spacing)*0); }
  .-top-1 { top: calc(var(--spacing)*-1); }
  .-top-1\.5 { top: calc(var(--spacing)*-1.5); }
  .-top-2 { top: calc(var(--spacing)*-2); }
  .-top-3\! { top: calc(var(--spacing)*-3) !important; }
  .-top-4 { top: calc(var(--spacing)*-4); }
  .-top-5 { top: calc(var(--spacing)*-5); }
  .-top-96 { top: calc(var(--spacing)*-96); }
  .-top-px { top: -1px; }
  .top-0 { top: calc(var(--spacing)*0); }
  .top-1 { top: calc(var(--spacing)*1); }
  .top-1\/2 { top: 50%; }
  .top-2 { top: calc(var(--spacing)*2); }
  .top-2\.5 { top: calc(var(--spacing)*2.5); }
  .top-3 { top: calc(var(--spacing)*3); }
  .top-4 { top: calc(var(--spacing)*4); }
  .top-5 { top: calc(var(--spacing)*5); }
  .top-6 { top: calc(var(--spacing)*6); }
  .top-8 { top: calc(var(--spacing)*8); }
  .top-9 { top: calc(var(--spacing)*9); }
  .top-11 { top: calc(var(--spacing)*11); }
  .top-14 { top: calc(var(--spacing)*14); }
  .top-24 { top: calc(var(--spacing)*24); }
  .top-48 { top: calc(var(--spacing)*48); }
  .top-\[-0\.094rem\] { top: -0.094rem; }
  .top-\[-1px\] { top: -1px; }
  .top-\[-2px\] { top: -2px; }
  .top-\[-3px\] { top: -3px; }
  .top-\[-4px\] { top: -4px; }
  .top-\[-6px\] { top: -6px; }
  .top-\[-8px\] { top: -8px; }
  .top-\[-150\%\] { top: -150%; }
  .top-\[0\.55rem\] { top: 0.55rem; }
  .top-\[0\.125rem\] { top: 0.125rem; }
  .top-\[1px\] { top: 1px; }
  .top-\[9px\] { top: 9px; }
  .top-\[20px\] { top: 20px; }
  .top-\[21\.5px\] { top: 21.5px; }
  .top-full { top: 100%; }
  [dir=3D"ltr"] .right-0 { right: calc(var(--spacing)*0); }
  [dir=3D"rtl"] .right-0 { left: calc(var(--spacing)*0); }
  [dir=3D"ltr"] .right-0\! { right: calc(var(--spacing)*0) !important; }
  [dir=3D"rtl"] .right-0\! { left: calc(var(--spacing)*0) !important; }
  .-bottom-0\.5 { bottom: calc(var(--spacing)*-.5); }
  .-bottom-2 { bottom: calc(var(--spacing)*-2); }
  .-bottom-5 { bottom: calc(var(--spacing)*-5); }
  .-bottom-px { bottom: -1px; }
  .bottom-0 { bottom: calc(var(--spacing)*0); }
  .bottom-1 { bottom: calc(var(--spacing)*1); }
  .bottom-2 { bottom: calc(var(--spacing)*2); }
  .bottom-3 { bottom: calc(var(--spacing)*3); }
  .bottom-4 { bottom: calc(var(--spacing)*4); }
  .bottom-5 { bottom: calc(var(--spacing)*5); }
  .bottom-6 { bottom: calc(var(--spacing)*6); }
  .bottom-8 { bottom: calc(var(--spacing)*8); }
  .bottom-\[-2px\] { bottom: -2px; }
  .bottom-\[-3px\] { bottom: -3px; }
  .bottom-\[1px\] { bottom: 1px; }
  .bottom-\[3\.75rem\] { bottom: 3.75rem; }
  .bottom-\[8px\] { bottom: 8px; }
  .bottom-\[20px\] { bottom: 20px; }
  .bottom-\[64px\] { bottom: 64px; }
  .bottom-full { bottom: 100%; }
  .bottom-snc-1 { bottom: var(--snc-1); }
  [dir=3D"ltr"] .left-0\! { left: calc(var(--spacing)*0) !important; }
  [dir=3D"rtl"] .left-0\! { right: calc(var(--spacing)*0) !important; }
  [dir=3D"ltr"] .left-1\/2\!, [dir=3D"ltr"] .left-\[50\%\]\! { left: 50% !i=
mportant; }
  [dir=3D"rtl"] .left-1\/2\!, [dir=3D"rtl"] .left-\[50\%\]\! { right: 50% !=
important; }
  .isolate { isolation: isolate; }
  .-z-10 { z-index: -10; }
  .z-0 { z-index: 0; }
  .z-1 { z-index: 1; }
  .z-2 { z-index: 2; }
  .z-3 { z-index: 3; }
  .z-4 { z-index: 4; }
  .z-10 { z-index: 10; }
  .z-10\! { z-index: 10 !important; }
  .z-11 { z-index: 11; }
  .z-20 { z-index: 20; }
  .z-21 { z-index: 21; }
  .z-25 { z-index: 25; }
  .z-26 { z-index: 26; }
  .z-30 { z-index: 30; }
  .z-40 { z-index: 40; }
  .z-50 { z-index: 50; }
  .z-60 { z-index: 60; }
  .z-61 { z-index: 61; }
  .z-70 { z-index: 70; }
  .z-100 { z-index: 100; }
  .z-1000 { z-index: 1000; }
  .z-9999 { z-index: 9999; }
  .z-10000 { z-index: 10000; }
  .z-11000 { z-index: 11000; }
  .z-\[-1\] { z-index: -1; }
  .z-\[2\] { z-index: 2; }
  .order-1 { order: 1; }
  .order-2 { order: 2; }
  .order-4 { order: 4; }
  .order-5 { order: 5; }
  .order-10 { order: 10; }
  .order-last { order: 9999; }
  .col-auto { grid-column: auto; }
  .col-span-1 { grid-column: span 1 / span 1; }
  .col-span-2 { grid-column: span 2 / span 2; }
  .col-span-3 { grid-column: span 3 / span 3; }
  .col-start-1 { grid-column-start: 1; }
  .col-start-2 { grid-column-start: 2; }
  .col-end-2 { grid-column-end: 2; }
  .row-auto { grid-row: auto; }
  .row-span-2 { grid-row: span 2 / span 2; }
  .row-span-4 { grid-row: span 4 / span 4; }
  .row-start-1 { grid-row-start: 1; }
  .row-start-2 { grid-row-start: 2; }
  .row-end-2 { grid-row-end: 2; }
  .float-end { float: inline-end; }
  [dir=3D"ltr"] .float-left { float: left; }
  [dir=3D"ltr"] .float-right, [dir=3D"rtl"] .float-left { float: right; }
  [dir=3D"rtl"] .float-right { float: left; }
  .float-start { float: inline-start; }
  .clear-end { clear: inline-end; }
  [dir=3D"ltr"] .clear-left { clear: left; }
  [dir=3D"ltr"] .clear-right, [dir=3D"rtl"] .clear-left { clear: right; }
  [dir=3D"rtl"] .clear-right { clear: left; }
  .clear-start { clear: inline-start; }
  .container { width: 100%; }
  @media (min-width: 480px) {
  .container { max-width: 480px; }
}
  @media (min-width: 40rem) {
  .container { max-width: 40rem; }
}
  @media (min-width: 48rem) {
  .container { max-width: 48rem; }
}
  @media (min-width: 64rem) {
  .container { max-width: 64rem; }
}
  @media (min-width: 80rem) {
  .container { max-width: 80rem; }
}
  @media (min-width: 96rem) {
  .container { max-width: 96rem; }
}
  .prose { --tw-prose-body: var(--text-primary); --tw-prose-headings: var(-=
-text-primary); --tw-prose-lead: var(--text-primary); --tw-prose-links: var=
(--text-primary); --tw-prose-bold: var(--text-primary); --tw-prose-counters=
: var(--text-primary); --tw-prose-bullets: var(--text-primary); --tw-prose-=
hr: var(--border-xheavy); --tw-prose-quotes: var(--text-primary); --tw-pros=
e-quote-borders: oklch(.928 .006 264.531); --tw-prose-captions: var(--text-=
secondary); --tw-prose-code: var(--text-primary); --tw-prose-pre-code: oklc=
h(.928 .006 264.531); --tw-prose-pre-bg: oklch(.278 .033 256.848); --tw-pro=
se-th-borders: oklch(.872 .01 258.338); --tw-prose-td-borders: oklch(.928 .=
006 264.531); --tw-prose-invert-body: var(--text-primary); --tw-prose-inver=
t-headings: var(--text-primary); --tw-prose-invert-lead: var(--text-primary=
); --tw-prose-invert-links: var(--text-primary); --tw-prose-invert-bold: va=
r(--text-primary); --tw-prose-invert-counters: var(--text-primary); --tw-pr=
ose-invert-bullets: var(--text-primary); --tw-prose-invert-hr: var(--border=
-xheavy); --tw-prose-invert-quotes: var(--text-primary); --tw-prose-invert-=
quote-borders: oklch(.373 .034 259.733); --tw-prose-invert-captions: var(--=
text-secondary); --tw-prose-invert-code: var(--text-primary); --tw-prose-in=
vert-pre-code: oklch(.872 .01 258.338); --tw-prose-invert-pre-bg: #00000080=
; --tw-prose-invert-th-borders: oklch(.446 .03 256.802); --tw-prose-invert-=
td-borders: oklch(.373 .034 259.733); color: var(--tw-prose-body); font-siz=
e: 1rem; line-height: 1.75; max-width: 65ch; }
  .prose :where([class~=3D"lead"]):not(:where([class~=3D"not-prose"] *)) { =
color: var(--tw-prose-lead); font-size: 1.25em; line-height: 1.6; margin-bo=
ttom: 1.2em; margin-top: 1.2em; }
  .prose :where(a):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-=
prose-links); font-weight: 500; text-decoration: underline; }
  .prose :where(strong):not(:where([class~=3D"not-prose"] *)) { color: var(=
--tw-prose-bold); font-weight: 600; }
  .prose :where(a strong):not(:where([class~=3D"not-prose"] *)), .prose :wh=
ere(blockquote strong):not(:where([class~=3D"not-prose"] *)), .prose :where=
(thead th strong):not(:where([class~=3D"not-prose"] *)) { color: inherit; }
  .prose :where(ol):not(:where([class~=3D"not-prose"] *)) { list-style-type=
: decimal; margin-bottom: 1.25em; margin-top: 1.25em; }
  [dir=3D"ltr"] .prose :where(ol):not(:where([class~=3D"not-prose"] *)) { p=
adding-left: 1.625em; }
  [dir=3D"rtl"] .prose :where(ol):not(:where([class~=3D"not-prose"] *)) { p=
adding-right: 1.625em; }
  .prose :where(ol[type=3D"A"]):not(:where([class~=3D"not-prose"] *)) { lis=
t-style-type: upper-alpha; }
  .prose :where(ol[type=3D"a"]):not(:where([class~=3D"not-prose"] *)) { lis=
t-style-type: lower-alpha; }
  .prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: =
upper-alpha; }
  .prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: =
lower-alpha; }
  .prose :where(ol[type=3D"I"]):not(:where([class~=3D"not-prose"] *)) { lis=
t-style-type: upper-roman; }
  .prose :where(ol[type=3D"i"]):not(:where([class~=3D"not-prose"] *)) { lis=
t-style-type: lower-roman; }
  .prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: =
upper-roman; }
  .prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: =
lower-roman; }
  .prose :where(ol[type=3D"1"]):not(:where([class~=3D"not-prose"] *)) { lis=
t-style-type: decimal; }
  .prose :where(ul):not(:where([class~=3D"not-prose"] *)) { list-style-type=
: disc; margin-bottom: 1.25em; margin-top: 1.25em; }
  [dir=3D"ltr"] .prose :where(ul):not(:where([class~=3D"not-prose"] *)) { p=
adding-left: 1.625em; }
  [dir=3D"rtl"] .prose :where(ul):not(:where([class~=3D"not-prose"] *)) { p=
adding-right: 1.625em; }
  .prose :where(ol > li):not(:where([class~=3D"not-prose"] *))::marker { co=
lor: var(--tw-prose-counters); font-weight: 400; }
  .prose :where(ul > li):not(:where([class~=3D"not-prose"] *))::marker { co=
lor: var(--tw-prose-bullets); }
  .prose :where(hr):not(:where([class~=3D"not-prose"] *)) { border-color: v=
ar(--tw-prose-hr); border-top-width: 1px; margin-bottom: 3em; margin-top: 3=
em; }
  .prose :where(blockquote):not(:where([class~=3D"not-prose"] *)) { color: =
var(--tw-prose-quotes); font-style: normal; font-weight: 500; margin-bottom=
: 1.6em; margin-top: 1.6em; quotes: "=E2=80=9C" "=E2=80=9D" "=E2=80=98" "=
=E2=80=99"; }
  [dir=3D"ltr"] .prose :where(blockquote):not(:where([class~=3D"not-prose"]=
 *)) { border-left-color: var(--tw-prose-quote-borders); border-left-width:=
 0.25rem; padding-left: 1em; }
  [dir=3D"rtl"] .prose :where(blockquote):not(:where([class~=3D"not-prose"]=
 *)) { border-right-color: var(--tw-prose-quote-borders); border-right-widt=
h: 0.25rem; padding-right: 1em; }
  .prose :where(blockquote p:first-of-type):not(:where([class~=3D"not-prose=
"] *))::before { content: open-quote; }
  .prose :where(blockquote p:last-of-type):not(:where([class~=3D"not-prose"=
] *))::after { content: close-quote; }
  .prose :where(h1):not(:where([class~=3D"not-prose"] *)) { color: var(--tw=
-prose-headings); font-size: 2.25em; font-weight: 800; line-height: 1.11111=
; margin-bottom: 0.888889em; margin-top: 0px; }
  .prose :where(h1 strong):not(:where([class~=3D"not-prose"] *)) { color: i=
nherit; font-weight: 900; }
  .prose :where(h2):not(:where([class~=3D"not-prose"] *)) { color: var(--tw=
-prose-headings); font-size: 1.5em; font-weight: 700; line-height: 1.33333;=
 margin-bottom: 1em; margin-top: 2em; }
  .prose :where(h2 strong):not(:where([class~=3D"not-prose"] *)) { color: i=
nherit; font-weight: 800; }
  .prose :where(h3):not(:where([class~=3D"not-prose"] *)) { color: var(--tw=
-prose-headings); font-size: 1.25em; font-weight: 600; line-height: 1.6; ma=
rgin-bottom: 0.6em; margin-top: 1.6em; }
  .prose :where(h3 strong):not(:where([class~=3D"not-prose"] *)) { color: i=
nherit; font-weight: 700; }
  .prose :where(h4):not(:where([class~=3D"not-prose"] *)) { color: var(--tw=
-prose-headings); font-weight: 600; line-height: 1.5; margin-bottom: 0.5em;=
 margin-top: 1.5em; }
  .prose :where(h4 strong):not(:where([class~=3D"not-prose"] *)) { color: i=
nherit; font-weight: 700; }
  .prose :where(img):not(:where([class~=3D"not-prose"] *)) { margin-bottom:=
 2em; margin-top: 2em; }
  .prose :where(figure > *):not(:where([class~=3D"not-prose"] *)) { margin-=
bottom: 0px; margin-top: 0px; }
  .prose :where(figcaption):not(:where([class~=3D"not-prose"] *)) { color: =
var(--tw-prose-captions); font-size: 0.875em; line-height: 1.42857; margin-=
top: 0.857143em; }
  .prose :where(code):not(:where([class~=3D"not-prose"] *)) { background-co=
lor: var(--gray-100); border-radius: 0.25rem; color: var(--tw-prose-code); =
font-size: 0.875em; font-weight: 500; padding: 0.15rem 0.3rem; }
  .prose :where(code):not(:where([class~=3D"not-prose"] *))::after, .prose =
:where(code):not(:where([class~=3D"not-prose"] *))::before { content: none;=
 }
  .prose :where(a code):not(:where([class~=3D"not-prose"] *)), .prose :wher=
e(h1 code):not(:where([class~=3D"not-prose"] *)) { color: inherit; }
  .prose :where(h2 code):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-size: 0.875em; }
  .prose :where(h3 code):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-size: 0.9em; }
  .prose :where(blockquote code):not(:where([class~=3D"not-prose"] *)), .pr=
ose :where(h4 code):not(:where([class~=3D"not-prose"] *)), .prose :where(th=
ead th code):not(:where([class~=3D"not-prose"] *)) { color: inherit; }
  .prose :where(pre):not(:where([class~=3D"not-prose"] *)) { background-col=
or: rgba(0, 0, 0, 0); border-radius: 0.375rem; color: currentcolor; font-si=
ze: 0.875em; font-weight: 400; line-height: 1.71429; margin: 0px; overflow-=
x: auto; padding: 0px; }
  .prose :where(pre code):not(:where([class~=3D"not-prose"] *)) { backgroun=
d-color: rgba(0, 0, 0, 0); border-radius: 0px; border-width: 0px; color: in=
herit; font-family: inherit; font-size: inherit; font-weight: inherit; line=
-height: inherit; padding: 0px; }
  .prose :where(pre code):not(:where([class~=3D"not-prose"] *))::after, .pr=
ose :where(pre code):not(:where([class~=3D"not-prose"] *))::before { conten=
t: none; }
  .prose :where(table):not(:where([class~=3D"not-prose"] *)) { font-size: 0=
.875em; line-height: 1.71429; margin-bottom: 2em; margin-top: 2em; table-la=
yout: auto; width: 100%; }
  [dir=3D"ltr"] .prose :where(table):not(:where([class~=3D"not-prose"] *)) =
{ text-align: left; }
  [dir=3D"rtl"] .prose :where(table):not(:where([class~=3D"not-prose"] *)) =
{ text-align: right; }
  .prose :where(thead):not(:where([class~=3D"not-prose"] *)) { border-botto=
m-color: var(--tw-prose-th-borders); border-bottom-width: 1px; }
  .prose :where(thead th):not(:where([class~=3D"not-prose"] *)) { color: va=
r(--tw-prose-headings); font-weight: 600; padding-bottom: 0.571429em; paddi=
ng-left: 0.571429em; padding-right: 0.571429em; vertical-align: bottom; }
  .prose :where(tbody tr):not(:where([class~=3D"not-prose"] *)) { border-bo=
ttom-color: var(--tw-prose-td-borders); border-bottom-width: 1px; }
  .prose :where(tbody tr:last-child):not(:where([class~=3D"not-prose"] *)) =
{ border-bottom-width: 0px; }
  .prose :where(tbody td):not(:where([class~=3D"not-prose"] *)) { vertical-=
align: baseline; }
  .prose :where(tfoot):not(:where([class~=3D"not-prose"] *)) { border-top-c=
olor: var(--tw-prose-th-borders); border-top-width: 1px; }
  .prose :where(tfoot td):not(:where([class~=3D"not-prose"] *)) { vertical-=
align: top; }
  .prose :where(p):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 1=
.25em; margin-top: 1.25em; }
  .prose :where(figure):not(:where([class~=3D"not-prose"] *)), .prose :wher=
e(video):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 2em; margin=
-top: 2em; }
  .prose :where(li):not(:where([class~=3D"not-prose"] *)) { margin-bottom: =
0.5em; margin-top: 0.5em; }
  [dir=3D"ltr"] .prose :where(ol > li):not(:where([class~=3D"not-prose"] *)=
), [dir=3D"ltr"] .prose :where(ul > li):not(:where([class~=3D"not-prose"] *=
)) { padding-left: 0.375em; }
  [dir=3D"rtl"] .prose :where(ol > li):not(:where([class~=3D"not-prose"] *)=
), [dir=3D"rtl"] .prose :where(ul > li):not(:where([class~=3D"not-prose"] *=
)) { padding-right: 0.375em; }
  .prose :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) {=
 margin-bottom: 0.75em; margin-top: 0.75em; }
  .prose :where(.prose > ul > li > :first-child):not(:where([class~=3D"not-=
prose"] *)) { margin-top: 1.25em; }
  .prose :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-p=
rose"] *)) { margin-bottom: 1.25em; }
  .prose :where(.prose > ol > li > :first-child):not(:where([class~=3D"not-=
prose"] *)) { margin-top: 1.25em; }
  .prose :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-p=
rose"] *)) { margin-bottom: 1.25em; }
  .prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=3D"not-prose=
"] *)) { margin-bottom: 0.75em; margin-top: 0.75em; }
  .prose :where(h2 + *):not(:where([class~=3D"not-prose"] *)), .prose :wher=
e(h3 + *):not(:where([class~=3D"not-prose"] *)), .prose :where(h4 + *):not(=
:where([class~=3D"not-prose"] *)), .prose :where(hr + *):not(:where([class~=
=3D"not-prose"] *)) { margin-top: 0px; }
  [dir=3D"ltr"] .prose :where(thead th:first-child):not(:where([class~=3D"n=
ot-prose"] *)) { padding-left: 0px; }
  [dir=3D"rtl"] .prose :where(thead th:first-child):not(:where([class~=3D"n=
ot-prose"] *)) { padding-right: 0px; }
  [dir=3D"ltr"] .prose :where(thead th:last-child):not(:where([class~=3D"no=
t-prose"] *)) { padding-right: 0px; }
  [dir=3D"rtl"] .prose :where(thead th:last-child):not(:where([class~=3D"no=
t-prose"] *)) { padding-left: 0px; }
  .prose :where(tbody td, tfoot td):not(:where([class~=3D"not-prose"] *)) {=
 padding: 0.571429em; }
  [dir=3D"ltr"] .prose :where(tbody td:first-child, tfoot td:first-child):n=
ot(:where([class~=3D"not-prose"] *)) { padding-left: 0px; }
  [dir=3D"rtl"] .prose :where(tbody td:first-child, tfoot td:first-child):n=
ot(:where([class~=3D"not-prose"] *)) { padding-right: 0px; }
  [dir=3D"ltr"] .prose :where(tbody td:last-child, tfoot td:last-child):not=
(:where([class~=3D"not-prose"] *)) { padding-right: 0px; }
  [dir=3D"rtl"] .prose :where(tbody td:last-child, tfoot td:last-child):not=
(:where([class~=3D"not-prose"] *)) { padding-left: 0px; }
  .prose :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *)=
) { margin-top: 0px; }
  .prose :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *))=
 { margin-bottom: 0px; }
  .-m-0\.5 { margin: calc(var(--spacing)*-.5); }
  .-m-1\! { margin: calc(var(--spacing)*-1) !important; }
  .-m-2 { margin: calc(var(--spacing)*-2); }
  .m-0 { margin: calc(var(--spacing)*0); }
  .m-1 { margin: calc(var(--spacing)*1); }
  .m-1\.5 { margin: calc(var(--spacing)*1.5); }
  .m-2 { margin: calc(var(--spacing)*2); }
  .m-4 { margin: calc(var(--spacing)*4); }
  .m-8 { margin: calc(var(--spacing)*8); }
  .m-\[3px\] { margin: 3px; }
  .m-\[24px\] { margin: 24px; }
  .m-auto { margin: auto; }
  .-mx-0\.5 { margin-inline: calc(var(--spacing)*-.5); }
  .-mx-1 { margin-inline: calc(var(--spacing)*-1); }
  .-mx-2 { margin-inline: calc(var(--spacing)*-2); }
  .-mx-3 { margin-inline: calc(var(--spacing)*-3); }
  .-mx-4 { margin-inline: calc(var(--spacing)*-4); }
  .-mx-6 { margin-inline: calc(var(--spacing)*-6); }
  .-mx-px { margin-inline: -1px; }
  .mx-0 { margin-inline: calc(var(--spacing)*0); }
  .mx-0\! { margin-inline: calc(var(--spacing)*0) !important; }
  .mx-1 { margin-inline: calc(var(--spacing)*1); }
  .mx-1\.5 { margin-inline: calc(var(--spacing)*1.5); }
  .mx-2 { margin-inline: calc(var(--spacing)*2); }
  .mx-3 { margin-inline: calc(var(--spacing)*3); }
  .mx-3\.5 { margin-inline: calc(var(--spacing)*3.5); }
  .mx-4 { margin-inline: calc(var(--spacing)*4); }
  .mx-5 { margin-inline: calc(var(--spacing)*5); }
  .mx-6 { margin-inline: calc(var(--spacing)*6); }
  .mx-16 { margin-inline: calc(var(--spacing)*16); }
  .mx-24 { margin-inline: calc(var(--spacing)*24); }
  .mx-\[-1rem\] { margin-inline: -1rem; }
  .mx-\[-16px\] { margin-inline: -16px; }
  .mx-\[32px\] { margin-inline: 32px; }
  .mx-\[calc\(--spacing\(-2\)-1px\)\] { margin-inline: calc(var(--spacing)*=
-2 - 1px); }
  .mx-auto { margin-inline: auto; }
  .mx-snc-results-padding { margin-inline: var(--snc-results-padding); }
  .-my-1 { margin-block: calc(var(--spacing)*-1); }
  .-my-2 { margin-block: calc(var(--spacing)*-2); }
  .-my-\[1px\] { margin-block: -1px; }
  .my-0 { margin-block: calc(var(--spacing)*0); }
  .my-1 { margin-block: calc(var(--spacing)*1); }
  .my-1\.5 { margin-block: calc(var(--spacing)*1.5); }
  .my-2 { margin-block: calc(var(--spacing)*2); }
  .my-2\.5 { margin-block: calc(var(--spacing)*2.5); }
  .my-3 { margin-block: calc(var(--spacing)*3); }
  .my-4 { margin-block: calc(var(--spacing)*4); }
  .my-6 { margin-block: calc(var(--spacing)*6); }
  .my-8 { margin-block: calc(var(--spacing)*8); }
  .my-10 { margin-block: calc(var(--spacing)*10); }
  .my-12 { margin-block: calc(var(--spacing)*12); }
  .my-16 { margin-block: calc(var(--spacing)*16); }
  .my-\[-0\.2rem\] { margin-block: -0.2rem; }
  .my-\[-1px\] { margin-block: -1px; }
  .my-\[15px\] { margin-block: 15px; }
  .my-\[32px\] { margin-block: 32px; }
  .my-auto { margin-block: auto; }
  .-ms-0\.5 { margin-inline-start: calc(var(--spacing)*-.5); }
  .-ms-1 { margin-inline-start: calc(var(--spacing)*-1); }
  .-ms-1\.5 { margin-inline-start: calc(var(--spacing)*-1.5); }
  .-ms-2 { margin-inline-start: calc(var(--spacing)*-2); }
  .-ms-2\.5 { margin-inline-start: calc(var(--spacing)*-2.5); }
  .-ms-3 { margin-inline-start: calc(var(--spacing)*-3); }
  .-ms-3\.5 { margin-inline-start: calc(var(--spacing)*-3.5); }
  .-ms-4 { margin-inline-start: calc(var(--spacing)*-4); }
  .-ms-6 { margin-inline-start: calc(var(--spacing)*-6); }
  .ms-0 { margin-inline-start: calc(var(--spacing)*0); }
  .ms-0\.5 { margin-inline-start: calc(var(--spacing)*.5); }
  .ms-1 { margin-inline-start: calc(var(--spacing)*1); }
  .ms-1\.5 { margin-inline-start: calc(var(--spacing)*1.5); }
  .ms-2 { margin-inline-start: calc(var(--spacing)*2); }
  .ms-2\.5 { margin-inline-start: calc(var(--spacing)*2.5); }
  .ms-3 { margin-inline-start: calc(var(--spacing)*3); }
  .ms-4 { margin-inline-start: calc(var(--spacing)*4); }
  .ms-5 { margin-inline-start: calc(var(--spacing)*5); }
  .ms-6 { margin-inline-start: calc(var(--spacing)*6); }
  .ms-7 { margin-inline-start: calc(var(--spacing)*7); }
  .ms-8 { margin-inline-start: calc(var(--spacing)*8); }
  .ms-10 { margin-inline-start: calc(var(--spacing)*10); }
  .ms-14 { margin-inline-start: calc(var(--spacing)*14); }
  .ms-\[-2px\] { margin-inline-start: -2px; }
  .ms-\[-6px\] { margin-inline-start: -6px; }
  .ms-\[-12px\] { margin-inline-start: -12px; }
  .ms-\[-16px\] { margin-inline-start: -16px; }
  .ms-\[1px\] { margin-inline-start: 1px; }
  .ms-\[2px\] { margin-inline-start: 2px; }
  .ms-\[3px\] { margin-inline-start: 3px; }
  .ms-\[4px\] { margin-inline-start: 4px; }
  .ms-\[11px\] { margin-inline-start: 11px; }
  .ms-\[calc\(\(100vw-450px-min\(100vw-450px\,900px\)\)\/2\)\] { margin-inl=
ine-start: calc(-225px + 50vw + min(-450px + 100vw, 900px) / -2); }
  .ms-auto { margin-inline-start: auto; }
  .-me-1 { margin-inline-end: calc(var(--spacing)*-1); }
  .-me-1\.5 { margin-inline-end: calc(var(--spacing)*-1.5); }
  .-me-2 { margin-inline-end: calc(var(--spacing)*-2); }
  .-me-3\.5 { margin-inline-end: calc(var(--spacing)*-3.5); }
  .-me-6 { margin-inline-end: calc(var(--spacing)*-6); }
  .me-0 { margin-inline-end: calc(var(--spacing)*0); }
  .me-0\.5 { margin-inline-end: calc(var(--spacing)*.5); }
  .me-1 { margin-inline-end: calc(var(--spacing)*1); }
  .me-1\.5 { margin-inline-end: calc(var(--spacing)*1.5); }
  .me-2 { margin-inline-end: calc(var(--spacing)*2); }
  .me-3 { margin-inline-end: calc(var(--spacing)*3); }
  .me-4 { margin-inline-end: calc(var(--spacing)*4); }
  .me-5 { margin-inline-end: calc(var(--spacing)*5); }
  .me-6 { margin-inline-end: calc(var(--spacing)*6); }
  .me-8 { margin-inline-end: calc(var(--spacing)*8); }
  .me-12 { margin-inline-end: calc(var(--spacing)*12); }
  .me-\[-10px\] { margin-inline-end: -10px; }
  .me-\[0\.1875rem\] { margin-inline-end: 0.1875rem; }
  .me-\[1px\] { margin-inline-end: 1px; }
  .me-\[30px\] { margin-inline-end: 30px; }
  .me-px { margin-inline-end: 1px; }
  .-mt-0\.5 { margin-top: calc(var(--spacing)*-.5); }
  .-mt-1 { margin-top: calc(var(--spacing)*-1); }
  .-mt-2 { margin-top: calc(var(--spacing)*-2); }
  .-mt-3 { margin-top: calc(var(--spacing)*-3); }
  .-mt-4 { margin-top: calc(var(--spacing)*-4); }
  .-mt-5 { margin-top: calc(var(--spacing)*-5); }
  .-mt-6 { margin-top: calc(var(--spacing)*-6); }
  .mt-0 { margin-top: calc(var(--spacing)*0); }
  .mt-0\! { margin-top: calc(var(--spacing)*0) !important; }
  .mt-0\.5 { margin-top: calc(var(--spacing)*.5); }
  .mt-0\.25 { margin-top: calc(var(--spacing)*.25); }
  .mt-1 { margin-top: calc(var(--spacing)*1); }
  .mt-1\.5 { margin-top: calc(var(--spacing)*1.5); }
  .mt-2 { margin-top: calc(var(--spacing)*2); }
  .mt-2\.5 { margin-top: calc(var(--spacing)*2.5); }
  .mt-3 { margin-top: calc(var(--spacing)*3); }
  .mt-4 { margin-top: calc(var(--spacing)*4); }
  .mt-5 { margin-top: calc(var(--spacing)*5); }
  .mt-6 { margin-top: calc(var(--spacing)*6); }
  .mt-7 { margin-top: calc(var(--spacing)*7); }
  .mt-8 { margin-top: calc(var(--spacing)*8); }
  .mt-10 { margin-top: calc(var(--spacing)*10); }
  .mt-12 { margin-top: calc(var(--spacing)*12); }
  .mt-16 { margin-top: calc(var(--spacing)*16); }
  .mt-20 { margin-top: calc(var(--spacing)*20); }
  .mt-36 { margin-top: calc(var(--spacing)*36); }
  .mt-\[-2px\] { margin-top: -2px; }
  .mt-\[-3px\] { margin-top: -3px; }
  .mt-\[-4px\] { margin-top: -4px; }
  .mt-\[-8px\] { margin-top: -8px; }
  .mt-\[-10px\] { margin-top: -10px; }
  .mt-\[-32px\] { margin-top: -32px; }
  .mt-\[-100px\] { margin-top: -100px; }
  .mt-\[\.5px\] { margin-top: 0.5px; }
  .mt-\[0\.0625em\] { margin-top: 0.0625em; }
  .mt-\[0px\] { margin-top: 0px; }
  .mt-\[1px\] { margin-top: 1px; }
  .mt-\[2px\] { margin-top: 2px; }
  .mt-\[3px\] { margin-top: 3px; }
  .mt-\[11px\] { margin-top: 11px; }
  .mt-\[100px\] { margin-top: 100px; }
  .mt-\[calc\(var\(--threadFlyOut-leading-height\,57px\)\*-1\)\] { margin-t=
op: calc(var(--threadFlyOut-leading-height,57px)*-1); }
  .mt-\[var\(--screen-optical-compact-offset-amount\)\] { margin-top: var(-=
-screen-optical-compact-offset-amount); }
  .mt-auto { margin-top: auto; }
  .mt-px { margin-top: 1px; }
  .mt-snc-1 { margin-top: var(--snc-1); }
  .-mb-\(--composer-overlap-px\) { margin-bottom: calc(var(--composer-overl=
ap-px)*-1); }
  .-mb-0\.5 { margin-bottom: calc(var(--spacing)*-.5); }
  .-mb-1 { margin-bottom: calc(var(--spacing)*-1); }
  .-mb-2 { margin-bottom: calc(var(--spacing)*-2); }
  .-mb-4 { margin-bottom: calc(var(--spacing)*-4); }
  .-mb-5 { margin-bottom: calc(var(--spacing)*-5); }
  .-mb-6 { margin-bottom: calc(var(--spacing)*-6); }
  .-mb-10 { margin-bottom: calc(var(--spacing)*-10); }
  .mb-0 { margin-bottom: calc(var(--spacing)*0); }
  .mb-0\! { margin-bottom: calc(var(--spacing)*0) !important; }
  .mb-0\.5 { margin-bottom: calc(var(--spacing)*.5); }
  .mb-1 { margin-bottom: calc(var(--spacing)*1); }
  .mb-1\.5 { margin-bottom: calc(var(--spacing)*1.5); }
  .mb-2 { margin-bottom: calc(var(--spacing)*2); }
  .mb-3 { margin-bottom: calc(var(--spacing)*3); }
  .mb-4 { margin-bottom: calc(var(--spacing)*4); }
  .mb-5 { margin-bottom: calc(var(--spacing)*5); }
  .mb-6 { margin-bottom: calc(var(--spacing)*6); }
  .mb-7 { margin-bottom: calc(var(--spacing)*7); }
  .mb-8 { margin-bottom: calc(var(--spacing)*8); }
  .mb-9 { margin-bottom: calc(var(--spacing)*9); }
  .mb-10 { margin-bottom: calc(var(--spacing)*10); }
  .mb-12 { margin-bottom: calc(var(--spacing)*12); }
  .mb-14 { margin-bottom: calc(var(--spacing)*14); }
  .mb-16 { margin-bottom: calc(var(--spacing)*16); }
  .mb-36 { margin-bottom: calc(var(--spacing)*36); }
  .mb-\[-1px\] { margin-bottom: -1px; }
  .mb-\[-2px\] { margin-bottom: -2px; }
  .mb-\[-5px\] { margin-bottom: -5px; }
  .mb-\[-6px\] { margin-bottom: -6px; }
  .mb-\[0\.3125rem\] { margin-bottom: 0.3125rem; }
  .mb-\[1px\] { margin-bottom: 1px; }
  .mb-\[6px\] { margin-bottom: 6px; }
  .mb-\[8px\] { margin-bottom: 8px; }
  .mb-snc-1 { margin-bottom: var(--snc-1); }
  .box-border { box-sizing: border-box; }
  .box-content { box-sizing: content-box; }
  .line-clamp-1 { -webkit-line-clamp: 1; }
  .line-clamp-1, .line-clamp-2 { -webkit-box-orient: vertical; display: -we=
bkit-box; overflow: hidden; }
  .line-clamp-2 { -webkit-line-clamp: 2; }
  .line-clamp-3 { -webkit-line-clamp: 3; }
  .line-clamp-3, .line-clamp-4 { -webkit-box-orient: vertical; display: -we=
bkit-box; overflow: hidden; }
  .line-clamp-4 { -webkit-line-clamp: 4; }
  .line-clamp-5 { -webkit-line-clamp: 5; }
  .line-clamp-5, .line-clamp-6 { -webkit-box-orient: vertical; display: -we=
bkit-box; overflow: hidden; }
  .line-clamp-6 { -webkit-line-clamp: 6; }
  .line-clamp-12 { -webkit-line-clamp: 12; -webkit-box-orient: vertical; di=
splay: -webkit-box; overflow: hidden; }
  .\[display\:var\(--display-hidden-until-loaded\,block\)\] { display: var(=
--display-hidden-until-loaded,block); }
  .\[display\:var\(--display-hidden-until-loaded\,flex\)\] { display: var(-=
-display-hidden-until-loaded,flex); }
  .\[display\:var\(--force-hide-label\)\] { display: var(--force-hide-label=
); }
  .block { display: block; }
  .contents { display: contents; }
  .flex { display: flex; }
  .flow-root { display: flow-root; }
  .grid { display: grid; }
  .hidden { display: none; }
  .hidden\! { display: none !important; }
  .inline { display: inline; }
  .inline-block { display: inline-block; }
  .inline-flex { display: inline-flex; }
  .list-item { display: list-item; }
  .table { display: table; }
  .table-caption { display: table-caption; }
  .aspect-3\/2 { aspect-ratio: 3 / 2; }
  .aspect-4\/5 { aspect-ratio: 4 / 5; }
  .aspect-4\/7 { aspect-ratio: 4 / 7; }
  .aspect-7\/4 { aspect-ratio: 7 / 4; }
  .aspect-16\/9 { aspect-ratio: 16 / 9; }
  .aspect-\[9\/16\] { aspect-ratio: 9 / 16; }
  .aspect-square { aspect-ratio: 1 / 1; }
  .aspect-video { aspect-ratio: var(--aspect-video); }
  .size-1\.5 { height: calc(var(--spacing)*1.5); width: calc(var(--spacing)=
*1.5); }
  .size-\[10px\] { height: 10px; width: 10px; }
  .size-full { height: 100%; width: 100%; }
  .\!h-8 { height: calc(var(--spacing)*8) !important; }
  .h-0 { height: calc(var(--spacing)*0); }
  .h-0\.5 { height: calc(var(--spacing)*.5); }
  .h-1 { height: calc(var(--spacing)*1); }
  .h-1\.5 { height: calc(var(--spacing)*1.5); }
  .h-1\/4 { height: 25%; }
  .h-2 { height: calc(var(--spacing)*2); }
  .h-2\.5 { height: calc(var(--spacing)*2.5); }
  .h-2\/3 { height: 66.6667%; }
  .h-3 { height: calc(var(--spacing)*3); }
  .h-3\.5 { height: calc(var(--spacing)*3.5); }
  .h-3\/4 { height: 75%; }
  .h-3\/5 { height: 60%; }
  .h-4 { height: calc(var(--spacing)*4); }
  .h-4\.5 { height: calc(var(--spacing)*4.5); }
  .h-4\/5 { height: 80%; }
  .h-5 { height: calc(var(--spacing)*5); }
  .h-6 { height: calc(var(--spacing)*6); }
  .h-7 { height: calc(var(--spacing)*7); }
  .h-7\! { height: calc(var(--spacing)*7) !important; }
  .h-8 { height: calc(var(--spacing)*8); }
  .h-9 { height: calc(var(--spacing)*9); }
  .h-10 { height: calc(var(--spacing)*10); }
  .h-11 { height: calc(var(--spacing)*11); }
  .h-12 { height: calc(var(--spacing)*12); }
  .h-14 { height: calc(var(--spacing)*14); }
  .h-16 { height: calc(var(--spacing)*16); }
  .h-20 { height: calc(var(--spacing)*20); }
  .h-20\! { height: calc(var(--spacing)*20) !important; }
  .h-24 { height: calc(var(--spacing)*24); }
  .h-26 { height: calc(var(--spacing)*26); }
  .h-32 { height: calc(var(--spacing)*32); }
  .h-36 { height: calc(var(--spacing)*36); }
  .h-40 { height: calc(var(--spacing)*40); }
  .h-44 { height: calc(var(--spacing)*44); }
  .h-48 { height: calc(var(--spacing)*48); }
  .h-52 { height: calc(var(--spacing)*52); }
  .h-60 { height: calc(var(--spacing)*60); }
  .h-72 { height: calc(var(--spacing)*72); }
  .h-96 { height: calc(var(--spacing)*96); }
  .h-\[0\.75rem\] { height: 0.75rem; }
  .h-\[1em\] { height: 1em; }
  .h-\[1px\] { height: 1px; }
  .h-\[2px\] { height: 2px; }
  .h-\[3px\] { height: 3px; }
  .h-\[4px\] { height: 4px; }
  .h-\[6px\] { height: 6px; }
  .h-\[10px\] { height: 10px; }
  .h-\[11px\] { height: 11px; }
  .h-\[14px\] { height: 14px; }
  .h-\[15dvh\] { height: 15dvh; }
  .h-\[15px\] { height: 15px; }
  .h-\[16px\] { height: 16px; }
  .h-\[18px\] { height: 18px; }
  .h-\[19px\] { height: 19px; }
  .h-\[20px\] { height: 20px; }
  .h-\[22px\] { height: 22px; }
  .h-\[23px\] { height: 23px; }
  .h-\[24px\] { height: 24px; }
  .h-\[24rem\] { height: 24rem; }
  .h-\[25px\] { height: 25px; }
  .h-\[26px\] { height: 26px; }
  .h-\[28px\] { height: 28px; }
  .h-\[30px\] { height: 30px; }
  .h-\[30vh\] { height: 30vh; }
  .h-\[32px\] { height: 32px; }
  .h-\[34px\] { height: 34px; }
  .h-\[38px\] { height: 38px; }
  .h-\[38px\]\! { height: 38px !important; }
  .h-\[40px\] { height: 40px; }
  .h-\[42px\] { height: 42px; }
  .h-\[44px\] { height: 44px; }
  .h-\[45px\] { height: 45px; }
  .h-\[50dvh\] { height: 50dvh; }
  .h-\[50px\] { height: 50px; }
  .h-\[50vh\] { height: 50vh; }
  .h-\[54px\] { height: 54px; }
  .h-\[60px\] { height: 60px; }
  .h-\[60vh\] { height: 60vh; }
  .h-\[62px\] { height: 62px; }
  .h-\[64px\] { height: 64px; }
  .h-\[70px\] { height: 70px; }
  .h-\[70vh\] { height: 70vh; }
  .h-\[76px\] { height: 76px; }
  .h-\[100\%\] { height: 100%; }
  .h-\[100dvh\] { height: 100dvh; }
  .h-\[100px\] { height: 100px; }
  .h-\[100vh\] { height: 100vh; }
  .h-\[104px\] { height: 104px; }
  .h-\[116px\] { height: 116px; }
  .h-\[120px\] { height: 120px; }
  .h-\[132px\] { height: 132px; }
  .h-\[150px\] { height: 150px; }
  .h-\[160px\] { height: 160px; }
  .h-\[200px\] { height: 200px; }
  .h-\[205px\] { height: 205px; }
  .h-\[213px\] { height: 213px; }
  .h-\[234px\] { height: 234px; }
  .h-\[250px\] { height: 250px; }
  .h-\[300px\] { height: 300px; }
  .h-\[340px\] { height: 340px; }
  .h-\[378px\] { height: 378px; }
  .h-\[400\%\] { height: 400%; }
  .h-\[600px\] { height: 600px; }
  .h-\[860px\] { height: 860px; }
  .h-\[calc\(100\%\+var\(--snc-1\)\)\] { height: calc(100% + var(--snc-1));=
 }
  .h-\[calc\(100vh-25rem\)\] { height: calc(-25rem + 100vh); }
  .h-\[calc\(100vh-54px\)\] { height: calc(-54px + 100vh); }
  .h-\[calc\(100vh-325px\)\] { height: calc(-325px + 100vh); }
  .h-\[calc\(clamp\(150px\,1\/4\*var\(--thread-safe-area-height\,100lvh\)\,=
400px\)\)\] { height: clamp(150px,1/4*var(--thread-safe-area-height,100lvh)=
,400px); }
  .h-\[calc\(var\(--header-height\,3\.5rem\)\+1px\)\] { height: calc(var(--=
header-height,3.5rem) + 1px); }
  .h-\[max\(3rem\,18vh\)\] { height: max(3rem, 18vh); }
  .h-\[var\(--screen-height-override\,calc\(var\(--cqh-full\)-var\(--screen=
-height-offset\,0px\)\)\)\] { height: var(--screen-height-override,calc(var=
(--cqh-full) - var(--screen-height-offset,0px))); }
  .h-auto { height: auto; }
  .h-auto\! { height: auto !important; }
  .h-dvh { height: 100dvh; }
  .h-fit { height: fit-content; }
  .h-fit\! { height: fit-content !important; }
  .h-full { height: 100%; }
  .h-header-height { height: var(--header-height); }
  .h-max { height: max-content; }
  .h-min { height: min-content; }
  .h-px { height: 1px; }
  .h-screen { height: 100vh; }
  .h-snc-3 { height: var(--snc-3); }
  .h-snc-input-height { height: var(--snc-input-height); }
  .h-svh { height: 100svh; }
  .max-h-9 { max-height: calc(var(--spacing)*9); }
  .max-h-12 { max-height: calc(var(--spacing)*12); }
  .max-h-16 { max-height: calc(var(--spacing)*16); }
  .max-h-28 { max-height: calc(var(--spacing)*28); }
  .max-h-32 { max-height: calc(var(--spacing)*32); }
  .max-h-36 { max-height: calc(var(--spacing)*36); }
  .max-h-40 { max-height: calc(var(--spacing)*40); }
  .max-h-48 { max-height: calc(var(--spacing)*48); }
  .max-h-52 { max-height: calc(var(--spacing)*52); }
  .max-h-60 { max-height: calc(var(--spacing)*60); }
  .max-h-64 { max-height: calc(var(--spacing)*64); }
  .max-h-72 { max-height: calc(var(--spacing)*72); }
  .max-h-96 { max-height: calc(var(--spacing)*96); }
  .max-h-\[25dvh\] { max-height: 25dvh; }
  .max-h-\[28rem\] { max-height: 28rem; }
  .max-h-\[50dvh\] { max-height: 50dvh; }
  .max-h-\[50vh\] { max-height: 50vh; }
  .max-h-\[60vh\] { max-height: 60vh; }
  .max-h-\[64px\] { max-height: 64px; }
  .max-h-\[75vh\] { max-height: 75vh; }
  .max-h-\[80vh\] { max-height: 80vh; }
  .max-h-\[85vh\] { max-height: 85vh; }
  .max-h-\[90vh\] { max-height: 90vh; }
  .max-h-\[95\%\] { max-height: 95%; }
  .max-h-\[100vh\] { max-height: 100vh; }
  .max-h-\[100vh\]\! { max-height: 100vh !important; }
  .max-h-\[128px\] { max-height: 128px; }
  .max-h-\[188px\] { max-height: 188px; }
  .max-h-\[200px\] { max-height: 200px; }
  .max-h-\[220px\] { max-height: 220px; }
  .max-h-\[300px\] { max-height: 300px; }
  .max-h-\[400px\] { max-height: 400px; }
  .max-h-\[440px\] { max-height: 440px; }
  .max-h-\[550px\] { max-height: 550px; }
  .max-h-\[600px\] { max-height: 600px; }
  .max-h-\[700px\] { max-height: 700px; }
  .max-h-\[calc\(100vh-46px\)\] { max-height: calc(-46px + 100vh); }
  .max-h-\[calc\(100vh-150px\)\] { max-height: calc(-150px + 100vh); }
  .max-h-\[calc\(100vh-300px\)\] { max-height: calc(-300px + 100vh); }
  .max-h-\[calc\(clamp\(20px\,1\/4\*var\(--thread-safe-area-height\,100lvh\=
)\,400px\)\)\] { max-height: clamp(20px,1/4*var(--thread-safe-area-height,1=
00lvh),400px); }
  .max-h-\[calc\(clamp\(20px\,1\/8\*var\(--thread-safe-area-height\,100lvh\=
)\,200px\)\)\] { max-height: clamp(20px,1/8*var(--thread-safe-area-height,1=
00lvh),200px); }
  .max-h-\[calc\(var\(--radix-popper-available-height\)-2rem\)\] { max-heig=
ht: calc(var(--radix-popper-available-height) - 2rem); }
  .max-h-\[var\(--radix-dropdown-menu-content-available-height\)\] { max-he=
ight: var(--radix-dropdown-menu-content-available-height); }
  .max-h-dvh { max-height: 100dvh; }
  .max-h-full { max-height: 100%; }
  .max-h-screen { max-height: 100vh; }
  .max-h-svh { max-height: 100svh; }
  .btn-giant { --tw-font-weight: var(--font-weight-semibold); font-size: va=
r(--text-base); font-weight: var(--font-weight-semibold); line-height: var(=
--tw-leading,var(--text-base--line-height)); min-height: 46px; padding-bloc=
k: calc(var(--spacing)*2.5); padding-inline: calc(var(--spacing)*6); }
  .btn-xs { font-size: var(--text-xs); line-height: var(--tw-leading,var(--=
text-xs--line-height)); min-height: 26px; padding-block: calc(var(--spacing=
)*1); padding-inline: calc(var(--spacing)*3); }
  .btn-large { min-height: 46px; padding-block: calc(var(--spacing)*3); pad=
ding-inline: calc(var(--spacing)*4); }
  .btn-small { min-height: 30px; padding-block: calc(var(--spacing)*1); pad=
ding-inline: calc(var(--spacing)*3); }
  .min-h-0 { min-height: calc(var(--spacing)*0); }
  .min-h-0\! { min-height: calc(var(--spacing)*0) !important; }
  .min-h-5 { min-height: calc(var(--spacing)*5); }
  .min-h-6 { min-height: calc(var(--spacing)*6); }
  .min-h-7 { min-height: calc(var(--spacing)*7); }
  .min-h-8 { min-height: calc(var(--spacing)*8); }
  .min-h-9 { min-height: calc(var(--spacing)*9); }
  .min-h-10 { min-height: calc(var(--spacing)*10); }
  .min-h-12 { min-height: calc(var(--spacing)*12); }
  .min-h-16 { min-height: calc(var(--spacing)*16); }
  .min-h-20 { min-height: calc(var(--spacing)*20); }
  .min-h-24 { min-height: calc(var(--spacing)*24); }
  .min-h-36 { min-height: calc(var(--spacing)*36); }
  .min-h-60 { min-height: calc(var(--spacing)*60); }
  .min-h-72 { min-height: calc(var(--spacing)*72); }
  .min-h-80 { min-height: calc(var(--spacing)*80); }
  .min-h-96 { min-height: calc(var(--spacing)*96); }
  .min-h-\[0px\] { min-height: 0px; }
  .min-h-\[20px\] { min-height: 20px; }
  .min-h-\[22px\] { min-height: 22px; }
  .min-h-\[34px\] { min-height: 34px; }
  .min-h-\[36px\] { min-height: 36px; }
  .min-h-\[36px\]\! { min-height: 36px !important; }
  .min-h-\[38px\] { min-height: 38px; }
  .min-h-\[40px\] { min-height: 40px; }
  .min-h-\[40vh\] { min-height: 40vh; }
  .min-h-\[44px\] { min-height: 44px; }
  .min-h-\[50dvh\] { min-height: 50dvh; }
  .min-h-\[50px\] { min-height: 50px; }
  .min-h-\[50vh\] { min-height: 50vh; }
  .min-h-\[52px\] { min-height: 52px; }
  .min-h-\[56px\] { min-height: 56px; }
  .min-h-\[60px\] { min-height: 60px; }
  .min-h-\[62px\] { min-height: 62px; }
  .min-h-\[64px\] { min-height: 64px; }
  .min-h-\[75vh\] { min-height: 75vh; }
  .min-h-\[80px\] { min-height: 80px; }
  .min-h-\[80vh\] { min-height: 80vh; }
  .min-h-\[96px\] { min-height: 96px; }
  .min-h-\[100dvh\] { min-height: 100dvh; }
  .min-h-\[104px\] { min-height: 104px; }
  .min-h-\[108px\] { min-height: 108px; }
  .min-h-\[132px\] { min-height: 132px; }
  .min-h-\[193px\] { min-height: 193px; }
  .min-h-\[200px\] { min-height: 200px; }
  .min-h-\[320px\] { min-height: 320px; }
  .min-h-\[350px\] { min-height: 350px; }
  .min-h-\[360px\] { min-height: 360px; }
  .min-h-\[375px\] { min-height: 375px; }
  .min-h-\[440px\] { min-height: 440px; }
  .min-h-\[480px\] { min-height: 480px; }
  .min-h-\[560px\] { min-height: 560px; }
  .min-h-\[600px\] { min-height: 600px; }
  .min-h-\[calc\(var\(--header-height\,3\.5rem\)\+1px\)\] { min-height: cal=
c(var(--header-height,3.5rem) + 1px); }
  .min-h-\[max\(var\(--gutter-min-height\,0px\)\,var\(--gutter-remaining-he=
ight\,0px\)\)\] { min-height: max(var(--gutter-min-height,0px),var(--gutter=
-remaining-height,0px)); }
  .min-h-bloop { min-height: 227px; }
  .min-h-fit { min-height: fit-content; }
  .min-h-full { min-height: 100%; }
  .min-h-screen { min-height: 100vh; }
  .min-h-svh { min-height: 100svh; }
  .\!w-8 { width: calc(var(--spacing)*8) !important; }
  .\!w-full { width: 100% !important; }
  .w-0 { width: calc(var(--spacing)*0); }
  .w-0\! { width: calc(var(--spacing)*0) !important; }
  .w-1 { width: calc(var(--spacing)*1); }
  .w-1\.5 { width: calc(var(--spacing)*1.5); }
  .w-1\/2 { width: 50%; }
  .w-1\/3 { width: 33.3333%; }
  .w-1\/4 { width: 25%; }
  .w-2 { width: calc(var(--spacing)*2); }
  .w-2\.5 { width: calc(var(--spacing)*2.5); }
  .w-2\/3 { width: 66.6667%; }
  .w-2\/5 { width: 40%; }
  .w-3 { width: calc(var(--spacing)*3); }
  .w-3\.5 { width: calc(var(--spacing)*3.5); }
  .w-3\/4 { width: 75%; }
  .w-3\/4\! { width: 75% !important; }
  .w-4 { width: calc(var(--spacing)*4); }
  .w-4\.5 { width: calc(var(--spacing)*4.5); }
  .w-4\/5 { width: 80%; }
  .w-5 { width: calc(var(--spacing)*5); }
  .w-6 { width: calc(var(--spacing)*6); }
  .w-7 { width: calc(var(--spacing)*7); }
  .w-8 { width: calc(var(--spacing)*8); }
  .w-9 { width: calc(var(--spacing)*9); }
  .w-10 { width: calc(var(--spacing)*10); }
  .w-10\/12 { width: 83.3333%; }
  .w-11 { width: calc(var(--spacing)*11); }
  .w-12 { width: calc(var(--spacing)*12); }
  .w-14 { width: calc(var(--spacing)*14); }
  .w-16 { width: calc(var(--spacing)*16); }
  .w-20 { width: calc(var(--spacing)*20); }
  .w-20\! { width: calc(var(--spacing)*20) !important; }
  .w-24 { width: calc(var(--spacing)*24); }
  .w-28 { width: calc(var(--spacing)*28); }
  .w-32 { width: calc(var(--spacing)*32); }
  .w-36 { width: calc(var(--spacing)*36); }
  .w-40 { width: calc(var(--spacing)*40); }
  .w-44 { width: calc(var(--spacing)*44); }
  .w-48 { width: calc(var(--spacing)*48); }
  .w-52 { width: calc(var(--spacing)*52); }
  .w-56 { width: calc(var(--spacing)*56); }
  .w-60 { width: calc(var(--spacing)*60); }
  .w-64 { width: calc(var(--spacing)*64); }
  .w-72 { width: calc(var(--spacing)*72); }
  .w-80 { width: calc(var(--spacing)*80); }
  .w-96 { width: calc(var(--spacing)*96); }
  .w-\[0\.75rem\] { width: 0.75rem; }
  .w-\[1em\] { width: 1em; }
  .w-\[1px\] { width: 1px; }
  .w-\[3px\] { width: 3px; }
  .w-\[4px\] { width: 4px; }
  .w-\[6px\] { width: 6px; }
  .w-\[7\.5rem\] { width: 7.5rem; }
  .w-\[11px\] { width: 11px; }
  .w-\[12px\] { width: 12px; }
  .w-\[14px\] { width: 14px; }
  .w-\[14rem\] { width: 14rem; }
  .w-\[15px\] { width: 15px; }
  .w-\[16px\] { width: 16px; }
  .w-\[18px\] { width: 18px; }
  .w-\[20px\] { width: 20px; }
  .w-\[22px\] { width: 22px; }
  .w-\[23px\] { width: 23px; }
  .w-\[24px\] { width: 24px; }
  .w-\[25vw\] { width: 25vw; }
  .w-\[26px\] { width: 26px; }
  .w-\[30px\] { width: 30px; }
  .w-\[32px\] { width: 32px; }
  .w-\[34px\] { width: 34px; }
  .w-\[40px\] { width: 40px; }
  .w-\[42px\] { width: 42px; }
  .w-\[44px\] { width: 44px; }
  .w-\[48\%\] { width: 48%; }
  .w-\[48px\] { width: 48px; }
  .w-\[50\%\] { width: 50%; }
  .w-\[50px\] { width: 50px; }
  .w-\[50vw\] { width: 50vw; }
  .w-\[54px\] { width: 54px; }
  .w-\[55\%\] { width: 55%; }
  .w-\[55cqw\] { width: 55cqw; }
  .w-\[60\%\] { width: 60%; }
  .w-\[60px\] { width: 60px; }
  .w-\[64\%\] { width: 64%; }
  .w-\[66\%\] { width: 66%; }
  .w-\[70\%\] { width: 70%; }
  .w-\[75\%\] { width: 75%; }
  .w-\[75px\] { width: 75px; }
  .w-\[80\%\] { width: 80%; }
  .w-\[88px\] { width: 88px; }
  .w-\[90\%\] { width: 90%; }
  .w-\[90px\] { width: 90px; }
  .w-\[90vw\] { width: 90vw; }
  .w-\[100cqw\] { width: 100cqw; }
  .w-\[100px\] { width: 100px; }
  .w-\[100vw\] { width: 100vw; }
  .w-\[104px\] { width: 104px; }
  .w-\[105px\] { width: 105px; }
  .w-\[160px\] { width: 160px; }
  .w-\[180px\] { width: 180px; }
  .w-\[200px\] { width: 200px; }
  .w-\[210px\] { width: 210px; }
  .w-\[222px\] { width: 222px; }
  .w-\[232px\] { width: 232px; }
  .w-\[234px\] { width: 234px; }
  .w-\[240px\] { width: 240px; }
  .w-\[250px\] { width: 250px; }
  .w-\[280px\] { width: 280px; }
  .w-\[290px\] { width: 290px; }
  .w-\[294px\] { width: 294px; }
  .w-\[300px\] { width: 300px; }
  .w-\[304px\] { width: 304px; }
  .w-\[328px\] { width: 328px; }
  .w-\[350px\] { width: 350px; }
  .w-\[378px\] { width: 378px; }
  .w-\[400\%\] { width: 400%; }
  .w-\[400px\] { width: 400px; }
  .w-\[450px\] { width: 450px; }
  .w-\[620px\] { width: 620px; }
  .w-\[640px\] { width: 640px; }
  .w-\[700px\] { width: 700px; }
  .w-\[800px\] { width: 800px; }
  .w-\[calc\(\(100\%-768px\)\/2\)\] { width: calc(50% - 384px); }
  .w-\[calc\(100\%-1\.5rem\)\] { width: calc(100% - 1.5rem); }
  .w-\[calc\(100\%_-_32px\)\] { width: calc(100% - 32px); }
  .w-\[calc\(100vw-450px\)\] { width: calc(-450px + 100vw); }
  .w-\[fit-content\] { width: fit-content; }
  .w-\[max\(95vw\,300px\)\] { width: max(95vw, 300px); }
  .w-\[min\(400px\,100dvw\)\] { width: min(400px, 100dvw); }
  .w-\[var\(--radix-popper-anchor-width\)\] { width: var(--radix-popper-anc=
hor-width); }
  .w-\[var\(--sidebar-width\)\] { width: var(--sidebar-width); }
  .w-\[var\(--user-chat-width\,70\%\)\] { width: var(--user-chat-width,70%)=
; }
  .w-auto { width: auto; }
  .w-dvw { width: 100dvw; }
  .w-fit { width: fit-content; }
  .w-full { width: 100%; }
  .w-full\! { width: 100% !important; }
  .w-max { width: max-content; }
  .w-px { width: 1px; }
  .w-screen { width: 100vw; }
  .w-svw { width: 100svw; }
  .max-w-\(--breakpoint-2xl\) { max-width: var(--breakpoint-2xl); }
  .max-w-\(--breakpoint-md\) { max-width: var(--breakpoint-md); }
  .max-w-\(--thread-content-max-width\) { max-width: var(--thread-content-m=
ax-width); }
  .max-w-1\/2 { max-width: 50%; }
  .max-w-2xl { max-width: var(--container-2xl); }
  .max-w-2xs\! { max-width: 240px !important; }
  .max-w-3xl { max-width: var(--container-3xl); }
  .max-w-3xs { max-width: 256px; }
  .max-w-4xl { max-width: var(--container-4xl); }
  .max-w-5xl { max-width: var(--container-5xl); }
  .max-w-6xl { max-width: var(--container-6xl); }
  .max-w-16 { max-width: calc(var(--spacing)*16); }
  .max-w-20 { max-width: calc(var(--spacing)*20); }
  .max-w-28 { max-width: calc(var(--spacing)*28); }
  .max-w-32 { max-width: calc(var(--spacing)*32); }
  .max-w-48 { max-width: calc(var(--spacing)*48); }
  .max-w-52 { max-width: calc(var(--spacing)*52); }
  .max-w-60 { max-width: calc(var(--spacing)*60); }
  .max-w-64 { max-width: calc(var(--spacing)*64); }
  .max-w-72 { max-width: calc(var(--spacing)*72); }
  .max-w-80 { max-width: calc(var(--spacing)*80); }
  .max-w-96 { max-width: calc(var(--spacing)*96); }
  .max-w-100 { max-width: 25rem; }
  .max-w-\[22\%\] { max-width: 22%; }
  .max-w-\[48rem\] { max-width: 48rem; }
  .max-w-\[60\%\] { max-width: 60%; }
  .max-w-\[70\%\] { max-width: 70%; }
  .max-w-\[70dvw\] { max-width: 70dvw; }
  .max-w-\[75\%\] { max-width: 75%; }
  .max-w-\[80\%\] { max-width: 80%; }
  .max-w-\[80vw\]\! { max-width: 80vw !important; }
  .max-w-\[90\%\] { max-width: 90%; }
  .max-w-\[90vw\] { max-width: 90vw; }
  .max-w-\[100\%\] { max-width: 100%; }
  .max-w-\[100px\] { max-width: 100px; }
  .max-w-\[100vw\] { max-width: 100vw; }
  .max-w-\[120px\] { max-width: 120px; }
  .max-w-\[160px\] { max-width: 160px; }
  .max-w-\[200px\] { max-width: 200px; }
  .max-w-\[220px\] { max-width: 220px; }
  .max-w-\[240px\] { max-width: 240px; }
  .max-w-\[270px\] { max-width: 270px; }
  .max-w-\[300px\] { max-width: 300px; }
  .max-w-\[320px\] { max-width: 320px; }
  .max-w-\[328px\] { max-width: 328px; }
  .max-w-\[360px\] { max-width: 360px; }
  .max-w-\[372px\] { max-width: 372px; }
  .max-w-\[373px\] { max-width: 373px; }
  .max-w-\[390px\] { max-width: 390px; }
  .max-w-\[400px\] { max-width: 400px; }
  .max-w-\[402px\] { max-width: 402px; }
  .max-w-\[412px\] { max-width: 412px; }
  .max-w-\[416px\] { max-width: 416px; }
  .max-w-\[440px\] { max-width: 440px; }
  .max-w-\[450px\] { max-width: 450px; }
  .max-w-\[460px\] { max-width: 460px; }
  .max-w-\[480px\] { max-width: 480px; }
  .max-w-\[500px\] { max-width: 500px; }
  .max-w-\[550px\] { max-width: 550px; }
  .max-w-\[552px\] { max-width: 552px; }
  .max-w-\[555px\] { max-width: 555px; }
  .max-w-\[560px\] { max-width: 560px; }
  .max-w-\[596px\] { max-width: 596px; }
  .max-w-\[600px\] { max-width: 600px; }
  .max-w-\[640px\] { max-width: 640px; }
  .max-w-\[664px\] { max-width: 664px; }
  .max-w-\[680px\] { max-width: 680px; }
  .max-w-\[700px\] { max-width: 700px; }
  .max-w-\[720px\] { max-width: 720px; }
  .max-w-\[800px\] { max-width: 800px; }
  .max-w-\[820px\] { max-width: 820px; }
  .max-w-\[850px\] { max-width: 850px; }
  .max-w-\[900px\] { max-width: 900px; }
  .max-w-\[1000px\] { max-width: 1000px; }
  .max-w-\[1200px\] { max-width: 1200px; }
  .max-w-\[1300px\] { max-width: 1300px; }
  .max-w-\[calc\(0\.8\*var\(--thread-content-max-width\,40rem\)\)\] { max-w=
idth: calc(var(--thread-content-max-width,40rem)*.8); }
  .max-w-\[calc\(2\*var\(--thread-content-max-width\)\)\] { max-width: calc=
(var(--thread-content-max-width)*2); }
  .max-w-\[calc\(100vw-1\.5rem\)\] { max-width: calc(-1.5rem + 100vw); }
  .max-w-\[calc\(100vw-2rem\)\] { max-width: calc(-2rem + 100vw); }
  .max-w-\[var\(--user-chat-width\,70\%\)\] { max-width: var(--user-chat-wi=
dth,70%); }
  .max-w-fit { max-width: fit-content; }
  .max-w-full { max-width: 100%; }
  .max-w-lg { max-width: var(--container-lg); }
  .max-w-md { max-width: var(--container-md); }
  .max-w-none { max-width: none; }
  .max-w-screen-lg { max-width: var(--breakpoint-lg); }
  .max-w-screen-md { max-width: var(--breakpoint-md); }
  .max-w-sm { max-width: var(--container-sm); }
  .max-w-xl { max-width: var(--container-xl); }
  .max-w-xs { max-width: var(--container-xs); }
  .min-w-\(--thread-content-width\) { min-width: var(--thread-content-width=
); }
  .min-w-0 { min-width: calc(var(--spacing)*0); }
  .min-w-4 { min-width: calc(var(--spacing)*4); }
  .min-w-6 { min-width: calc(var(--spacing)*6); }
  .min-w-7 { min-width: calc(var(--spacing)*7); }
  .min-w-8 { min-width: calc(var(--spacing)*8); }
  .min-w-9 { min-width: calc(var(--spacing)*9); }
  .min-w-10 { min-width: calc(var(--spacing)*10); }
  .min-w-11 { min-width: calc(var(--spacing)*11); }
  .min-w-15 { min-width: calc(var(--spacing)*15); }
  .min-w-20 { min-width: calc(var(--spacing)*20); }
  .min-w-24 { min-width: calc(var(--spacing)*24); }
  .min-w-32 { min-width: calc(var(--spacing)*32); }
  .min-w-36 { min-width: calc(var(--spacing)*36); }
  .min-w-40 { min-width: calc(var(--spacing)*40); }
  .min-w-48 { min-width: calc(var(--spacing)*48); }
  .min-w-60 { min-width: calc(var(--spacing)*60); }
  .min-w-64 { min-width: calc(var(--spacing)*64); }
  .min-w-72 { min-width: calc(var(--spacing)*72); }
  .min-w-80 { min-width: calc(var(--spacing)*80); }
  .min-w-96 { min-width: calc(var(--spacing)*96); }
  .min-w-\[2em\] { min-width: 2em; }
  .min-w-\[7\.5rem\] { min-width: 7.5rem; }
  .min-w-\[18px\] { min-width: 18px; }
  .min-w-\[25vw\] { min-width: 25vw; }
  .min-w-\[32px\] { min-width: 32px; }
  .min-w-\[34px\] { min-width: 34px; }
  .min-w-\[40\%\] { min-width: 40%; }
  .min-w-\[50px\] { min-width: 50px; }
  .min-w-\[60px\] { min-width: 60px; }
  .min-w-\[62px\] { min-width: 62px; }
  .min-w-\[80px\] { min-width: 80px; }
  .min-w-\[86px\] { min-width: 86px; }
  .min-w-\[100px\] { min-width: 100px; }
  .min-w-\[120px\] { min-width: 120px; }
  .min-w-\[180px\] { min-width: 180px; }
  .min-w-\[200px\] { min-width: 200px; }
  .min-w-\[220px\] { min-width: 220px; }
  .min-w-\[224px\] { min-width: 224px; }
  .min-w-\[240px\] { min-width: 240px; }
  .min-w-\[320px\] { min-width: 320px; }
  .min-w-\[400px\] { min-width: 400px; }
  .min-w-\[680px\] { min-width: 680px; }
  .min-w-\[calc\(100vw-1\.5rem\)\] { min-width: calc(-1.5rem + 100vw); }
  .min-w-\[min\(125px\,95vw\)\] { min-width: min(125px, 95vw); }
  .min-w-\[min\(200px\,95vw\)\] { min-width: min(200px, 95vw); }
  .min-w-\[min\(280px\,95vw\)\] { min-width: min(280px, 95vw); }
  .min-w-\[min\(340px\,95vw\)\] { min-width: min(340px, 95vw); }
  .min-w-\[min\(450px\,80cqw\,80vw\)\] { min-width: min(450px, 80cqw, 80vw)=
; }
  .min-w-\[var\(--radix-select-trigger-width\)\] { min-width: var(--radix-s=
elect-trigger-width); }
  .min-w-bloop { min-width: 227px; }
  .min-w-fit { min-width: fit-content; }
  .min-w-full { min-width: 100%; }
  .min-w-min { min-width: min-content; }
  .flex-0 { flex: 0 1 0%; }
  .flex-1 { flex: 1 1 0%; }
  .flex-auto { flex: 1 1 auto; }
  .flex-initial { flex: 0 1 auto; }
  .flex-none { flex: 0 0 auto; }
  .flex-shrink { flex-shrink: 1; }
  .flex-shrink-0 { flex-shrink: 0; }
  .flex-shrink-1, .shrink { flex-shrink: 1; }
  .shrink-0 { flex-shrink: 0; }
  .flex-grow, .flex-grow-1, .grow { flex-grow: 1; }
  .grow-0 { flex-grow: 0; }
  .basis-0 { flex-basis: calc(var(--spacing)*0); }
  .basis-\[32px\] { flex-basis: 32px; }
  .basis-auto { flex-basis: auto; }
  .basis-full { flex-basis: 100%; }
  .table-auto { table-layout: auto; }
  .table-fixed { table-layout: fixed; }
  .border-separate { border-collapse: separate; }
  .border-spacing-0 { --tw-border-spacing-x: calc(var(--spacing)*0); --tw-b=
order-spacing-y: calc(var(--spacing)*0); border-spacing: var(--tw-border-sp=
acing-x)var(--tw-border-spacing-y); }
  .origin-\[14px_50\%\] { transform-origin: 14px center; }
  .origin-\[50\%_50\%\] { transform-origin: 50% center; }
  .origin-bottom { transform-origin: center bottom; }
  .origin-center { transform-origin: 50% center; }
  [dir=3D"ltr"] .origin-left { transform-origin: 0px center; }
  [dir=3D"rtl"] .origin-left { transform-origin: 100% center; }
  .origin-radix-popover { transform-origin: var(--radix-popover-content-tra=
nsform-origin); }
  [dir=3D"ltr"] .origin-top-left { transform-origin: 0px 0px; }
  [dir=3D"ltr"] .origin-top-right, [dir=3D"rtl"] .origin-top-left { transfo=
rm-origin: 100% 0px; }
  [dir=3D"rtl"] .origin-top-right { transform-origin: 0px 0px; }
  .-translate-x-1\/2 { --tw-translate-x: -50%; }
  .-translate-x-1\/2, .-translate-x-2 { translate: var(--tw-translate-x)var=
(--tw-translate-y); }
  .-translate-x-2 { --tw-translate-x: calc(var(--spacing)*-2); }
  .-translate-x-52 { --tw-translate-x: calc(var(--spacing)*-52); }
  .-translate-x-52, .-translate-x-96 { translate: var(--tw-translate-x)var(=
--tw-translate-y); }
  .-translate-x-96 { --tw-translate-x: calc(var(--spacing)*-96); }
  .-translate-x-full { --tw-translate-x: -100%; }
  .-translate-x-full, .translate-x-0 { translate: var(--tw-translate-x)var(=
--tw-translate-y); }
  .translate-x-0 { --tw-translate-x: calc(var(--spacing)*0); }
  .translate-x-1\/2 { --tw-translate-x: 50%; }
  .translate-x-1\/2, .translate-x-2 { translate: var(--tw-translate-x)var(-=
-tw-translate-y); }
  .translate-x-2 { --tw-translate-x: calc(var(--spacing)*2); }
  .translate-x-52 { --tw-translate-x: calc(var(--spacing)*52); }
  .translate-x-52, .translate-x-96 { translate: var(--tw-translate-x)var(--=
tw-translate-y); }
  .translate-x-96 { --tw-translate-x: calc(var(--spacing)*96); }
  .translate-x-\[-2\.5rem\] { --tw-translate-x: -2.5rem; }
  .translate-x-\[-2\.5rem\], .translate-x-\[-30\%\] { translate: var(--tw-t=
ranslate-x)var(--tw-translate-y); }
  .translate-x-\[-30\%\] { --tw-translate-x: -30%; }
  .translate-x-\[-50\%\] { --tw-translate-x: -50%; }
  .translate-x-\[-50\%\], .translate-x-\[2\.5rem\] { translate: var(--tw-tr=
anslate-x)var(--tw-translate-y); }
  .translate-x-\[2\.5rem\] { --tw-translate-x: 2.5rem; }
  .-translate-y-1 { --tw-translate-y: calc(var(--spacing)*-1); }
  .-translate-y-1, .-translate-y-1\/2 { translate: var(--tw-translate-x)var=
(--tw-translate-y); }
  .-translate-y-1\/2 { --tw-translate-y: -50%; }
  .-translate-y-2 { --tw-translate-y: calc(var(--spacing)*-2); }
  .-translate-y-12, .-translate-y-2 { translate: var(--tw-translate-x)var(-=
-tw-translate-y); }
  .-translate-y-12 { --tw-translate-y: calc(var(--spacing)*-12); }
  .-translate-y-full { --tw-translate-y: -100%; }
  .-translate-y-full, .translate-y-0 { translate: var(--tw-translate-x)var(=
--tw-translate-y); }
  .translate-y-0 { --tw-translate-y: calc(var(--spacing)*0); }
  .translate-y-0\.5 { --tw-translate-y: calc(var(--spacing)*.5); }
  .translate-y-0\.5, .translate-y-1 { translate: var(--tw-translate-x)var(-=
-tw-translate-y); }
  .translate-y-1 { --tw-translate-y: calc(var(--spacing)*1); }
  .translate-y-1\/2 { --tw-translate-y: 50%; }
  .translate-y-1\/2, .translate-y-2 { translate: var(--tw-translate-x)var(-=
-tw-translate-y); }
  .translate-y-2 { --tw-translate-y: calc(var(--spacing)*2); }
  .translate-y-\[-0\.5rem\] { --tw-translate-y: -.5rem; }
  .translate-y-\[-0\.5rem\], .translate-y-\[-100\%\] { translate: var(--tw-=
translate-x)var(--tw-translate-y); }
  .translate-y-\[-100\%\] { --tw-translate-y: -100%; }
  .translate-y-\[-100lvh\] { --tw-translate-y: -100lvh; }
  .translate-y-\[-100lvh\], .translate-y-\[0px\] { translate: var(--tw-tran=
slate-x)var(--tw-translate-y); }
  .translate-y-\[0px\] { --tw-translate-y: 0px; }
  .translate-y-\[2rem\] { --tw-translate-y: 2rem; }
  .translate-y-\[10px\], .translate-y-\[2rem\] { translate: var(--tw-transl=
ate-x)var(--tw-translate-y); }
  .translate-y-\[10px\] { --tw-translate-y: 10px; }
  .translate-y-\[12\%\] { --tw-translate-y: 12%; }
  .translate-y-\[12\%\], .translate-y-\[12px\] { translate: var(--tw-transl=
ate-x)var(--tw-translate-y); }
  .translate-y-\[12px\] { --tw-translate-y: 12px; }
  .translate-y-\[15\%\] { --tw-translate-y: 15%; translate: var(--tw-transl=
ate-x)var(--tw-translate-y); }
  .translate-y-\[100\%\], .translate-y-full { --tw-translate-y: 100%; trans=
late: var(--tw-translate-x)var(--tw-translate-y); }
  .scale-0 { --tw-scale-x: 0%; --tw-scale-y: 0%; --tw-scale-z: 0%; }
  .scale-0, .scale-90 { scale: var(--tw-scale-x)var(--tw-scale-y); }
  .scale-90 { --tw-scale-x: 90%; --tw-scale-y: 90%; --tw-scale-z: 90%; }
  .scale-100 { --tw-scale-x: 100%; --tw-scale-y: 100%; --tw-scale-z: 100%; =
}
  .scale-100, .scale-105 { scale: var(--tw-scale-x)var(--tw-scale-y); }
  .scale-105 { --tw-scale-x: 105%; --tw-scale-y: 105%; --tw-scale-z: 105%; =
}
  .scale-110 { --tw-scale-x: 110%; --tw-scale-y: 110%; --tw-scale-z: 110%; =
}
  .scale-110, .scale-200 { scale: var(--tw-scale-x)var(--tw-scale-y); }
  .scale-200 { --tw-scale-x: 200%; --tw-scale-y: 200%; --tw-scale-z: 200%; =
}
  .-scale-x-100 { --tw-scale-x: -100%; }
  .-scale-x-100, .scale-x-75 { scale: var(--tw-scale-x)var(--tw-scale-y); }
  .scale-x-75 { --tw-scale-x: 75%; }
  .scale-\[0\.9\] { scale: 0.9; }
  .scale-\[0\.95\] { scale: 0.95; }
  .scale-\[1\.015\] { scale: 1.015; }
  .-rotate-90 { rotate: -90deg; }
  .-rotate-180 { rotate: -180deg; }
  .rotate-0 { rotate: none; }
  .rotate-45 { rotate: 45deg; }
  .rotate-90 { rotate: 90deg; }
  .rotate-180 { rotate: 180deg; }
  .rotate-\[-3deg\] { rotate: -3deg; }
  .rotate-\[-4deg\] { rotate: -4deg; }
  .rotate-\[2deg\] { rotate: 2deg; }
  .rotate-\[4deg\] { rotate: 4deg; }
  .rotate-y-\[20deg\] { --tw-rotate-y: rotateY(20deg); }
  .rotate-y-\[20deg\], .rotate-z-\[-15deg\] { transform: var(--tw-rotate-x)=
var(--tw-rotate-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y); }
  .rotate-z-\[-15deg\] { --tw-rotate-z: rotateZ(-15deg); }
  .rotate-z-\[5deg\] { --tw-rotate-z: rotateZ(5deg); }
  .rotate-z-\[15deg\], .rotate-z-\[5deg\] { transform: var(--tw-rotate-x)va=
r(--tw-rotate-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y); }
  .rotate-z-\[15deg\] { --tw-rotate-z: rotateZ(15deg); }
  .transform { transform: var(--tw-rotate-x)var(--tw-rotate-y)var(--tw-rota=
te-z)var(--tw-skew-x)var(--tw-skew-y); }
  .animate-\[hive-log-fadeout_0\.3s_1\.5s_forwards\] { animation: 0.3s ease=
 1.5s 1 normal forwards running hive-log-fadeout; }
  .animate-\[show_150ms_ease-in\] { animation: 0.15s ease-in 0s 1 normal no=
ne running show; }
  .animate-bounce { animation: var(--animate-bounce); }
  .animate-ping { animation: var(--animate-ping); }
  .animate-pulse { animation: var(--animate-pulse); }
  .animate-pulsing { animation: 2s ease-in-out 0s infinite normal forwards =
running pulsing; }
  .animate-show { animation: 0.1s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal=
 none running show; }
  .animate-spin { animation: var(--animate-spin); }
  .cursor-auto { cursor: auto; }
  .cursor-default { cursor: default; }
  .cursor-default\! { cursor: default !important; }
  .cursor-e-resize { cursor: e-resize; }
  .cursor-ew-resize { cursor: ew-resize; }
  .cursor-grab { cursor: grab; }
  .cursor-none { cursor: none; }
  .cursor-not-allowed { cursor: not-allowed; }
  .cursor-ns-resize { cursor: ns-resize; }
  .cursor-pointer { cursor: pointer; }
  .cursor-progress { cursor: progress; }
  .cursor-text { cursor: text; }
  .cursor-w-resize { cursor: w-resize; }
  .cursor-wait { cursor: wait; }
  .cursor-zoom-in { cursor: zoom-in; }
  .cursor-zoom-out { cursor: zoom-out; }
  .touch-pan-y { --tw-pan-y: pan-y; touch-action: var(--tw-pan-x,)var(--tw-=
pan-y,)var(--tw-pinch-zoom,); }
  .resize { resize: both; }
  .resize-none { resize: none; }
  .resize-y { resize: vertical; }
  .snap-x { scroll-snap-type: x var(--tw-scroll-snap-strictness); }
  .snap-y { scroll-snap-type: y var(--tw-scroll-snap-strictness); }
  .snap-mandatory { --tw-scroll-snap-strictness: mandatory; }
  .snap-proximity { --tw-scroll-snap-strictness: proximity; }
  .snap-center { scroll-snap-align: center; }
  .snap-start { scroll-snap-align: start; }
  .snap-always { scroll-snap-stop: always; }
  .scroll-m-5 { scroll-margin: calc(var(--spacing)*5); }
  .scroll-mx-5 { scroll-margin-inline: calc(var(--spacing)*5); }
  .scroll-mt-28 { scroll-margin-top: calc(var(--spacing)*28); }
  .scroll-mt-\[44px\] { scroll-margin-top: 44px; }
  .scroll-ps-4 { scroll-padding-inline-start: calc(var(--spacing)*4); }
  .scroll-pt-\[30px\] { scroll-padding-top: 30px; }
  .list-inside { list-style-position: inside; }
  .list-decimal { list-style-type: decimal; }
  .list-disc { list-style-type: disc; }
  .list-none { list-style-type: none; }
  .form-textarea { --tw-shadow: 0 0 #0000; appearance: none; background-col=
or: rgb(255, 255, 255); border-color: rgb(155, 155, 155); border-radius: 0p=
x; border-width: 1px; font-size: 1rem; line-height: 1.5rem; padding: 0.5rem=
 0.75rem; }
  .form-textarea:focus { --tw-ring-inset: var(--tw-empty, ); --tw-ring-offs=
et-width: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: #004f99; --tw=
-ring-offset-shadow: var(--tw-ring-inset)0 0 0 var(--tw-ring-offset-width)v=
ar(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset)0 0 0 cal=
c(1px + var(--tw-ring-offset-width))var(--tw-ring-color); border-color: rgb=
(0, 79, 153); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow=
),var(--tw-shadow); outline: rgba(0, 0, 0, 0) solid 2px; outline-offset: 2p=
x; }
  .form-textarea::placeholder { color: rgb(155, 155, 155); opacity: 1; }
  .appearance-none { appearance: none; }
  .columns-1 { column-count: 1; }
  .break-inside-avoid { break-inside: avoid; }
  .grid-flow-col { grid-auto-flow: column; }
  .grid-flow-row { grid-auto-flow: row; }
  .auto-rows-min { grid-auto-rows: min-content; }
  .grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .grid-cols-\[1fr_auto\] { grid-template-columns: 1fr auto; }
  .grid-cols-\[1fr_auto_1fr\] { grid-template-columns: 1fr auto 1fr; }
  .grid-cols-\[1fr_auto_auto\] { grid-template-columns: 1fr auto auto; }
  .grid-cols-\[10px_1fr_10px\] { grid-template-columns: 10px 1fr 10px; }
  .grid-cols-\[50\%_50\%\] { grid-template-columns: 50% 50%; }
  .grid-cols-\[180px_1fr_32px\] { grid-template-columns: 180px 1fr 32px; }
  .grid-cols-\[200px_1fr_1fr\] { grid-template-columns: 200px 1fr 1fr; }
  .grid-cols-\[auto_1fr\] { grid-template-columns: auto 1fr; }
  .grid-cols-\[auto_1fr_auto\] { grid-template-columns: auto 1fr auto; }
  .grid-cols-\[auto_auto\] { grid-template-columns: auto auto; }
  .grid-cols-\[auto_auto_1fr\] { grid-template-columns: auto auto 1fr; }
  .grid-cols-\[auto_max-content\] { grid-template-columns: auto max-content=
; }
  .grid-cols-\[auto_minmax\(0\,1fr\)\] { grid-template-columns: auto minmax=
(0px, 1fr); }
  .grid-cols-\[minmax\(0\,1fr\)\] { grid-template-columns: minmax(0px, 1fr)=
; }
  .grid-cols-\[repeat\(auto-fit\,minmax\(250px\,1fr\)\)\] { grid-template-c=
olumns: repeat(auto-fit, minmax(250px, 1fr)); }
  .grid-rows-2 { grid-template-rows: repeat(2, minmax(0px, 1fr)); }
  .grid-rows-\[0fr\] { grid-template-rows: 0fr; }
  .grid-rows-\[1fr\] { grid-template-rows: 1fr; }
  .grid-rows-\[minmax\(10px\,1fr\)_auto_10px\] { grid-template-rows: minmax=
(10px, 1fr) auto 10px; }
  .grid-rows-\[minmax\(10px\,1fr\)_auto_minmax\(10px\,1fr\)\] { grid-templa=
te-rows: minmax(10px, 1fr) auto minmax(10px, 1fr); }
  .flex-col { flex-direction: column; }
  .flex-col-reverse { flex-direction: column-reverse; }
  .flex-row { flex-direction: row; }
  .flex-row-reverse { flex-direction: row-reverse; }
  .flex-nowrap { flex-wrap: nowrap; }
  .flex-wrap { flex-wrap: wrap; }
  .flex-wrap-reverse { flex-wrap: wrap-reverse; }
  .place-content-center { place-content: center; }
  .place-items-center { place-items: center; }
  .content-center { align-content: center; }
  .items-baseline { align-items: baseline; }
  .items-center { align-items: center; }
  .items-end { align-items: flex-end; }
  .items-start { align-items: flex-start; }
  .items-stretch { align-items: stretch; }
  .justify-around { justify-content: space-around; }
  .justify-between { justify-content: space-between; }
  .justify-center { justify-content: center; }
  .justify-end { justify-content: flex-end; }
  .justify-start { justify-content: flex-start; }
  .justify-stretch { justify-content: stretch; }
  .justify-items-center { justify-items: center; }
  .gap-0 { gap: calc(var(--spacing)*0); }
  .gap-0\.5 { gap: calc(var(--spacing)*.5); }
  .gap-1 { gap: calc(var(--spacing)*1); }
  .gap-1\.5 { gap: calc(var(--spacing)*1.5); }
  .gap-2 { gap: calc(var(--spacing)*2); }
  .gap-2\.5 { gap: calc(var(--spacing)*2.5); }
  .gap-3 { gap: calc(var(--spacing)*3); }
  .gap-3\.5 { gap: calc(var(--spacing)*3.5); }
  .gap-4 { gap: calc(var(--spacing)*4); }
  .gap-5 { gap: calc(var(--spacing)*5); }
  .gap-6 { gap: calc(var(--spacing)*6); }
  .gap-7 { gap: calc(var(--spacing)*7); }
  .gap-8 { gap: calc(var(--spacing)*8); }
  .gap-10 { gap: calc(var(--spacing)*10); }
  .gap-\[2px\] { gap: 2px; }
  .gap-\[10px\] { gap: 10px; }
  .gap-\[18px\] { gap: 18px; }
  .gap-\[min\(10dvw\,_200px\)\] { gap: min(10dvw, 200px); }
  .gap-bar { gap: var(--bar-gap,.25rem); }
  .gap-snc-1 { gap: var(--snc-1); }
  .gap-snc-results-padding { gap: var(--snc-results-padding); }
  :where(.-space-y-px > :not(:last-child)) { --tw-space-y-reverse: 0; margi=
n-block-end: calc(-1px*(1 - var(--tw-space-y-reverse))); margin-block-start=
: calc(-1px*var(--tw-space-y-reverse)); }
  :where(.space-y-0 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*0*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*0*var(--tw-space-y-reverse)); }
  :where(.space-y-1 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*1*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*1*var(--tw-space-y-reverse)); }
  :where(.space-y-1\.5 > :not(:last-child)) { --tw-space-y-reverse: 0; marg=
in-block-end: calc(var(--spacing)*1.5*(1 - var(--tw-space-y-reverse))); mar=
gin-block-start: calc(var(--spacing)*1.5*var(--tw-space-y-reverse)); }
  :where(.space-y-2 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*2*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*2*var(--tw-space-y-reverse)); }
  :where(.space-y-3 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*3*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*3*var(--tw-space-y-reverse)); }
  :where(.space-y-4 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*4*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*4*var(--tw-space-y-reverse)); }
  :where(.space-y-5 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*5*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*5*var(--tw-space-y-reverse)); }
  :where(.space-y-6 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*6*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*6*var(--tw-space-y-reverse)); }
  :where(.space-y-8 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-end: calc(var(--spacing)*8*(1 - var(--tw-space-y-reverse))); margin-b=
lock-start: calc(var(--spacing)*8*var(--tw-space-y-reverse)); }
  :where(.space-y-\[6px\] > :not(:last-child)) { --tw-space-y-reverse: 0; m=
argin-block-end: calc(6px*(1 - var(--tw-space-y-reverse))); margin-block-st=
art: calc(6px*var(--tw-space-y-reverse)); }
  :where(.space-y-reverse > :not(:last-child)) { --tw-space-y-reverse: 1; }
  .gap-x-1 { column-gap: calc(var(--spacing)*1); }
  .gap-x-1\.5 { column-gap: calc(var(--spacing)*1.5); }
  .gap-x-2 { column-gap: calc(var(--spacing)*2); }
  .gap-x-3 { column-gap: calc(var(--spacing)*3); }
  .gap-x-4 { column-gap: calc(var(--spacing)*4); }
  .gap-x-8 { column-gap: calc(var(--spacing)*8); }
  .gap-x-9 { column-gap: calc(var(--spacing)*9); }
  .gap-x-10 { column-gap: calc(var(--spacing)*10); }
  :where(.space-x-1 > :not(:last-child)) { --tw-space-x-reverse: 0; margin-=
inline-end: calc(var(--spacing)*1*(1 - var(--tw-space-x-reverse))); margin-=
inline-start: calc(var(--spacing)*1*var(--tw-space-x-reverse)); }
  :where(.space-x-2 > :not(:last-child)) { --tw-space-x-reverse: 0; margin-=
inline-end: calc(var(--spacing)*2*(1 - var(--tw-space-x-reverse))); margin-=
inline-start: calc(var(--spacing)*2*var(--tw-space-x-reverse)); }
  :where(.space-x-3 > :not(:last-child)) { --tw-space-x-reverse: 0; margin-=
inline-end: calc(var(--spacing)*3*(1 - var(--tw-space-x-reverse))); margin-=
inline-start: calc(var(--spacing)*3*var(--tw-space-x-reverse)); }
  :where(.space-x-4 > :not(:last-child)) { --tw-space-x-reverse: 0; margin-=
inline-end: calc(var(--spacing)*4*(1 - var(--tw-space-x-reverse))); margin-=
inline-start: calc(var(--spacing)*4*var(--tw-space-x-reverse)); }
  :where(.space-x-12 > :not(:last-child)) { --tw-space-x-reverse: 0; margin=
-inline-end: calc(var(--spacing)*12*(1 - var(--tw-space-x-reverse))); margi=
n-inline-start: calc(var(--spacing)*12*var(--tw-space-x-reverse)); }
  :where(.space-x-14 > :not(:last-child)) { --tw-space-x-reverse: 0; margin=
-inline-end: calc(var(--spacing)*14*(1 - var(--tw-space-x-reverse))); margi=
n-inline-start: calc(var(--spacing)*14*var(--tw-space-x-reverse)); }
  :where(.space-x-reverse > :not(:last-child)) { --tw-space-x-reverse: 1; }
  .gap-y-1 { row-gap: calc(var(--spacing)*1); }
  .gap-y-2 { row-gap: calc(var(--spacing)*2); }
  .gap-y-3 { row-gap: calc(var(--spacing)*3); }
  .gap-y-4 { row-gap: calc(var(--spacing)*4); }
  .gap-y-10 { row-gap: calc(var(--spacing)*10); }
  :where(.divide-x > :not(:last-child)) { --tw-divide-x-reverse: 0; border-=
inline-end-width: calc(1px*(1 - var(--tw-divide-x-reverse))); border-inline=
-start-width: calc(1px*var(--tw-divide-x-reverse)); border-inline-style: va=
r(--tw-border-style); }
  :where(.divide-y > :not(:last-child)) { --tw-divide-y-reverse: 0; border-=
bottom-style: var(--tw-border-style); border-bottom-width: calc(1px*(1 - va=
r(--tw-divide-y-reverse))); border-top-style: var(--tw-border-style); borde=
r-top-width: calc(1px*var(--tw-divide-y-reverse)); }
  :where(.divide-gray-200 > :not(:last-child)) { border-color: rgb(227, 227=
, 227); }
  :where(.divide-token-border-default > :not(:last-child)) { border-color: =
var(--border-default); }
  :where(.divide-token-border-medium > :not(:last-child)) { border-color: v=
ar(--border-medium); }
  :where(.divide-token-border-xlight > :not(:last-child)) { border-color: v=
ar(--border-xlight); }
  :where(.divide-white\/10 > :not(:last-child)) { border-color: rgba(255, 2=
55, 255, 0.1); }
  .self-center { align-self: center; }
  .self-end { align-self: flex-end; }
  .self-start { align-self: flex-start; }
  .self-stretch { align-self: stretch; }
  .justify-self-center { justify-self: center; }
  .justify-self-end { justify-self: flex-end; }
  .justify-self-start { justify-self: flex-start; }
  .justify-self-stretch { justify-self: stretch; }
  .\!truncate { overflow: hidden !important; text-overflow: ellipsis !impor=
tant; white-space: nowrap !important; }
  .truncate { overflow: hidden; text-overflow: ellipsis; white-space: nowra=
p; }
  .overflow-auto { overflow: auto; }
  .overflow-clip { overflow: clip; }
  .overflow-hidden { overflow: hidden; }
  .overflow-scroll { overflow: scroll; }
  .overflow-visible { overflow: visible; }
  .overflow-visible\! { overflow: visible !important; }
  .overflow-x-auto { overflow-x: auto; }
  .overflow-x-clip { overflow-x: clip; }
  .overflow-x-hidden { overflow-x: hidden; }
  .overflow-x-scroll { overflow-x: scroll; }
  .overflow-y-auto { overflow-y: auto; }
  .overflow-y-clip { overflow-y: clip; }
  .overflow-y-hidden { overflow-y: hidden; }
  .overflow-y-scroll { overflow-y: scroll; }
  .overflow-y-scroll\! { overflow-y: scroll !important; }
  .overflow-y-visible { overflow-y: visible; }
  .overscroll-contain { overscroll-behavior: contain; }
  .scroll-smooth { scroll-behavior: smooth; }
  .rounded { border-radius: 0.25rem; }
  .rounded-2xl { border-radius: var(--radius-2xl); }
  .rounded-3xl { border-radius: var(--radius-3xl); }
  .rounded-4xl { border-radius: var(--radius-4xl); }
  .rounded-\[0\.25rem\] { border-radius: 0.25rem; }
  .rounded-\[1px\] { border-radius: 1px; }
  .rounded-\[3px\] { border-radius: 3px; }
  .rounded-\[4px\] { border-radius: 4px; }
  .rounded-\[10px\] { border-radius: 10px; }
  .rounded-\[14px\] { border-radius: 14px; }
  .rounded-\[16px\] { border-radius: 16px; }
  .rounded-\[20px\] { border-radius: 20px; }
  .rounded-\[22px\] { border-radius: 22px; }
  .rounded-\[25px\] { border-radius: 25px; }
  .rounded-\[28px\] { border-radius: 28px; }
  .rounded-\[30px\] { border-radius: 30px; }
  .rounded-\[36px\] { border-radius: 36px; }
  .rounded-\[38px\] { border-radius: 38px; }
  .rounded-full { border-radius: 3.40282e+38px; }
  .rounded-full\! { border-radius: 3.40282e+38px !important; }
  .rounded-lg { border-radius: var(--radius-lg); }
  .rounded-lg\! { border-radius: var(--radius-lg) !important; }
  .rounded-md { border-radius: var(--radius-md); }
  .rounded-md\! { border-radius: var(--radius-md) !important; }
  .rounded-none { border-radius: 0px; }
  .rounded-sm { border-radius: var(--radius-sm); }
  .rounded-sm\! { border-radius: var(--radius-sm) !important; }
  .rounded-xl { border-radius: var(--radius-xl); }
  .rounded-xl\! { border-radius: var(--radius-xl) !important; }
  .rounded-xs { border-radius: var(--radius-xs); }
  .rounded-s-full { border-end-start-radius: 3.40282e+38px; border-start-st=
art-radius: 3.40282e+38px; }
  .rounded-s-none { border-end-start-radius: 0px; border-start-start-radius=
: 0px; }
  .rounded-s-xl { border-end-start-radius: var(--radius-xl); border-start-s=
tart-radius: var(--radius-xl); }
  .rounded-ss-2xl { border-start-start-radius: var(--radius-2xl); }
  .rounded-e-full { border-end-end-radius: 3.40282e+38px; border-start-end-=
radius: 3.40282e+38px; }
  .rounded-e-md { border-end-end-radius: var(--radius-md); border-start-end=
-radius: var(--radius-md); }
  .rounded-e-none { border-end-end-radius: 0px; border-start-end-radius: 0p=
x; }
  .rounded-e-xl { border-end-end-radius: var(--radius-xl); border-start-end=
-radius: var(--radius-xl); }
  .rounded-se-2xl { border-start-end-radius: var(--radius-2xl); }
  .rounded-se-\[1px\] { border-start-end-radius: 1px; }
  .rounded-se-lg { border-start-end-radius: var(--radius-lg); }
  .rounded-ee-full { border-end-end-radius: 3.40282e+38px; }
  .rounded-ee-sm { border-end-end-radius: var(--radius-sm); }
  .rounded-es-2xl { border-end-start-radius: var(--radius-2xl); }
  .rounded-es-\[1px\] { border-end-start-radius: 1px; }
  .rounded-t-2xl { border-top-left-radius: var(--radius-2xl); border-top-ri=
ght-radius: var(--radius-2xl); }
  .rounded-t-3xl { border-top-left-radius: var(--radius-3xl); border-top-ri=
ght-radius: var(--radius-3xl); }
  .rounded-t-\[5px\] { border-top-left-radius: 5px; border-top-right-radius=
: 5px; }
  .rounded-t-\[20px\] { border-top-left-radius: 20px; border-top-right-radi=
us: 20px; }
  .rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-radi=
us: 30px; }
  .rounded-t-lg { border-top-left-radius: var(--radius-lg); border-top-righ=
t-radius: var(--radius-lg); }
  .rounded-t-md { border-top-left-radius: var(--radius-md); border-top-righ=
t-radius: var(--radius-md); }
  .rounded-t-none { border-top-left-radius: 0px; border-top-right-radius: 0=
px; }
  .rounded-t-xl { border-top-left-radius: var(--radius-xl); border-top-righ=
t-radius: var(--radius-xl); }
  [dir=3D"ltr"] .rounded-l { border-bottom-left-radius: 0.25rem; border-top=
-left-radius: 0.25rem; }
  [dir=3D"ltr"] .rounded-r, [dir=3D"rtl"] .rounded-l { border-bottom-right-=
radius: 0.25rem; border-top-right-radius: 0.25rem; }
  [dir=3D"rtl"] .rounded-r { border-bottom-left-radius: 0.25rem; border-top=
-left-radius: 0.25rem; }
  .rounded-b-2xl { border-bottom-left-radius: var(--radius-2xl); border-bot=
tom-right-radius: var(--radius-2xl); }
  .rounded-b-3xl { border-bottom-left-radius: var(--radius-3xl); border-bot=
tom-right-radius: var(--radius-3xl); }
  .rounded-b-lg { border-bottom-left-radius: var(--radius-lg); border-botto=
m-right-radius: var(--radius-lg); }
  .rounded-b-md { border-bottom-left-radius: var(--radius-md); border-botto=
m-right-radius: var(--radius-md); }
  .rounded-b-none { border-bottom-left-radius: 0px; border-bottom-right-rad=
ius: 0px; }
  .rounded-b-xl { border-bottom-left-radius: var(--radius-xl); border-botto=
m-right-radius: var(--radius-xl); }
  .btn-secondary { background-color: var(--main-surface-primary); border-co=
lor: var(--border-medium); border-style: var(--tw-border-style); border-wid=
th: 1px; color: var(--text-primary); font-size: var(--text-sm); line-height=
: var(--tw-leading,var(--text-sm--line-height)); }
  @media (hover: hover) {
  .btn-secondary:hover { background-color: var(--main-surface-secondary); }
}
  .btn-secondary:focus-visible { --tw-ring-shadow: var(--tw-ring-inset,)0 0=
 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor)=
; --tw-ring-color: #676767; --tw-ring-offset-width: 2px; --tw-ring-offset-s=
hadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-=
offset-color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shado=
w),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .btn-danger-outline { background-color: var(--main-surface-primary); bord=
er-color: rgb(186, 38, 35); border-style: var(--tw-border-style); border-wi=
dth: 1px; color: rgb(186, 38, 35); }
  @media (hover: hover) {
  .btn-danger-outline:hover { background-color: var(--main-surface-secondar=
y); }
}
  .btn-danger-outline:focus-visible { --tw-ring-shadow: var(--tw-ring-inset=
,)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentC=
olor); --tw-ring-color: #ba2623; --tw-ring-offset-width: 2px; --tw-ring-off=
set-shadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-=
ring-offset-color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-=
shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)=
; }
  .border { border-width: 1px; }
  .border, .border-0 { border-style: var(--tw-border-style); }
  .border-0 { border-width: 0px; }
  .border-0\! { border-style: var(--tw-border-style) !important; border-wid=
th: 0px !important; }
  .border-1 { border-width: 1px; }
  .border-1, .border-2 { border-style: var(--tw-border-style); }
  .border-2 { border-width: 2px; }
  .border-4 { border-style: var(--tw-border-style); border-width: 4px; }
  .border-\[0\.5px\], .border-\[\.5px\] { border-style: var(--tw-border-sty=
le); border-width: 0.5px; }
  .border-\[1px\] { border-width: 1px; }
  .border-\[1px\], .border-\[3px\] { border-style: var(--tw-border-style); =
}
  .border-\[3px\] { border-width: 3px; }
  .border-\[4px\] { border-style: var(--tw-border-style); border-width: 4px=
; }
  .border-x-0 { border-inline-style: var(--tw-border-style); border-inline-=
width: 0px; }
  .border-y { border-block-style: var(--tw-border-style); border-block-widt=
h: 1px; }
  .border-s { border-inline-start-width: 1px; }
  .border-s, .border-s-0 { border-inline-start-style: var(--tw-border-style=
); }
  .border-s-0 { border-inline-start-width: 0px; }
  .border-s-0\! { border-inline-start-style: var(--tw-border-style) !import=
ant; border-inline-start-width: 0px !important; }
  .border-s-4 { border-inline-start-width: 4px; }
  .border-s-4, .border-s-8 { border-inline-start-style: var(--tw-border-sty=
le); }
  .border-s-8 { border-inline-start-width: 8px; }
  .border-e { border-inline-end-width: 1px; }
  .border-e, .border-e-0 { border-inline-end-style: var(--tw-border-style);=
 }
  .border-e-0 { border-inline-end-width: 0px; }
  .border-e-0\! { border-inline-end-style: var(--tw-border-style) !importan=
t; border-inline-end-width: 0px !important; }
  .border-e-2 { border-inline-end-width: 2px; }
  .border-e-2, .border-e-8 { border-inline-end-style: var(--tw-border-style=
); }
  .border-e-8 { border-inline-end-width: 8px; }
  .border-e-\[1px\] { border-inline-end-style: var(--tw-border-style); bord=
er-inline-end-width: 1px; }
  .border-t { border-top-width: 1px; }
  .border-t, .border-t-0 { border-top-style: var(--tw-border-style); }
  .border-t-0 { border-top-width: 0px; }
  .border-t-0\! { border-top-style: var(--tw-border-style) !important; bord=
er-top-width: 0px !important; }
  .border-t-8 { border-top-width: 8px; }
  .border-t-8, .border-t-\[0\.5px\] { border-top-style: var(--tw-border-sty=
le); }
  .border-t-\[0\.5px\] { border-top-width: 0.5px; }
  [dir=3D"ltr"] .border-r { border-right-style: var(--tw-border-style); bor=
der-right-width: 1px; }
  [dir=3D"rtl"] .border-r { border-left-style: var(--tw-border-style); bord=
er-left-width: 1px; }
  .border-b { border-bottom-width: 1px; }
  .border-b, .border-b-0 { border-bottom-style: var(--tw-border-style); }
  .border-b-0 { border-bottom-width: 0px; }
  .border-b-2 { border-bottom-width: 2px; }
  .border-b-2, .border-b-\[0\.5px\] { border-bottom-style: var(--tw-border-=
style); }
  .border-b-\[0\.5px\] { border-bottom-width: 0.5px; }
  [dir=3D"ltr"] .border-l, [dir=3D"ltr"] .border-l-\[1px\] { border-left-st=
yle: var(--tw-border-style); border-left-width: 1px; }
  [dir=3D"rtl"] .border-l, [dir=3D"rtl"] .border-l-\[1px\] { border-right-s=
tyle: var(--tw-border-style); border-right-width: 1px; }
  .border-dashed { --tw-border-style: dashed; border-style: dashed; }
  .border-dotted { --tw-border-style: dotted; border-style: dotted; }
  .border-none { --tw-border-style: none; border-style: none; }
  .border-solid { --tw-border-style: solid; border-style: solid; }
  .border-\[\#AF52DE\] { border-color: rgb(175, 82, 222); }
  .border-\[\#B3DBFF\] { border-color: rgb(179, 219, 255); }
  .border-\[\#EDEDF2\] { border-color: rgb(237, 237, 242); }
  .border-\[\#f4f4f4\] { border-color: rgb(244, 244, 244); }
  .border-\[rgba\(0\,0\,0\,0\.1\)\] { border-color: rgba(0, 0, 0, 0.1); }
  .border-\[rgba\(0\,0\,0\,0\.18\)\] { border-color: rgba(0, 0, 0, 0.18); }
  .border-black { border-color: rgb(0, 0, 0); }
  .border-black\/5 { border-color: oklab(0 none none / 0.05); }
  .border-black\/10 { border-color: oklab(0 none none / 0.1); }
  .border-black\/25 { border-color: oklab(0 none none / 0.25); }
  .border-black\/\[0\.12\] { border-color: oklab(0 none none / 0.12); }
  .border-blue-100 { border-color: rgb(153, 206, 255); }
  .border-blue-400 { border-color: rgb(2, 133, 255); }
  .border-blue-400\! { border-color: rgb(2, 133, 255) !important; }
  .border-blue-400\/10 { border-color: rgba(2, 133, 255, 0.1); }
  .border-blue-400\/\[\.3\] { border-color: rgba(2, 133, 255, 0.3); }
  .border-brand-green-800 { border-color: rgb(5, 167, 70); }
  .border-brand-purple { border-color: rgb(171, 104, 255); }
  .border-gray-100 { border-color: rgb(236, 236, 236); }
  .border-gray-200 { border-color: rgb(227, 227, 227); }
  .border-gray-300 { border-color: rgb(205, 205, 205); }
  .border-gray-400 { border-color: rgb(180, 180, 180); }
  .border-gray-500 { border-color: rgb(155, 155, 155); }
  .border-gray-700 { border-color: rgb(66, 66, 66); }
  .border-green-500 { border-color: rgb(0, 162, 64); }
  .border-green-600 { border-color: rgb(0, 134, 53); }
  .border-orange-400 { border-color: rgb(251, 106, 34); }
  .border-orange-400\/15 { border-color: rgba(251, 106, 34, 0.15); }
  .border-orange-500 { border-color: rgb(226, 85, 7); }
  .border-red-200 { border-color: rgb(255, 133, 131); }
  .border-red-400 { border-color: rgb(250, 66, 62); }
  .border-red-500 { border-color: rgb(224, 46, 42); }
  .border-red-500\! { border-color: rgb(224, 46, 42) !important; }
  .border-red-600 { border-color: rgb(186, 38, 35); }
  .border-red-700 { border-color: rgb(145, 30, 27); }
  .border-token-border-default { border-color: var(--border-default); }
  .border-token-border-default\! { border-color: var(--border-default) !imp=
ortant; }
  .border-token-border-heavy { border-color: var(--border-heavy); }
  .border-token-border-light { border-color: var(--border-light); }
  .border-token-border-light\! { border-color: var(--border-light) !importa=
nt; }
  .border-token-border-medium { border-color: var(--border-medium); }
  .border-token-border-medium\! { border-color: var(--border-medium) !impor=
tant; }
  .border-token-border-sharp { border-color: var(--border-sharp); }
  .border-token-border-xheavy { border-color: var(--border-xheavy); }
  .border-token-border-xlight { border-color: var(--border-xlight); }
  .border-token-border-xlight\! { border-color: var(--border-xlight) !impor=
tant; }
  .border-token-main-surface-primary { border-color: var(--main-surface-pri=
mary); }
  .border-token-main-surface-secondary { border-color: var(--main-surface-s=
econdary); }
  .border-token-main-surface-tertiary { border-color: var(--main-surface-te=
rtiary); }
  .border-token-sidebar-surface-primary { border-color: var(--sidebar-surfa=
ce-primary); }
  .border-token-surface-error\/5 { border-color: color-mix(in oklab,rgb(var=
(--surface-error)/1) 5%,transparent); }
  .border-token-surface-error\/15 { border-color: color-mix(in oklab,rgb(va=
r(--surface-error)/1) 15%,transparent); }
  .border-token-text-error { border-color: var(--text-error); }
  .border-token-text-primary { border-color: var(--text-primary); }
  .border-token-text-primary\! { border-color: var(--text-primary) !importa=
nt; }
  .border-token-text-secondary { border-color: var(--text-secondary); }
  .border-token-text-tertiary { border-color: var(--text-tertiary); }
  .border-transparent { border-color: rgba(0, 0, 0, 0); }
  .border-white { border-color: rgb(255, 255, 255); }
  .border-white\/10 { border-color: rgba(255, 255, 255, 0.1); }
  .border-white\/20 { border-color: rgba(255, 255, 255, 0.2); }
  .border-y-token-border-medium { border-block-color: var(--border-medium);=
 }
  .border-s-token-border-sharp { border-inline-start-color: var(--border-sh=
arp); }
  .border-s-token-sidebar-surface-secondary { border-inline-start-color: va=
r(--sidebar-surface-secondary); }
  .border-s-transparent { border-inline-start-color: rgba(0, 0, 0, 0); }
  .border-e-transparent { border-inline-end-color: rgba(0, 0, 0, 0); }
  .border-t-\[\#0077FF\] { border-top-color: rgb(0, 119, 255); }
  .border-t-token-border-xlight { border-top-color: var(--border-xlight); }
  .border-b-black { border-bottom-color: rgb(0, 0, 0); }
  .border-b-token-bg-secondary { border-bottom-color: var(--bg-secondary); =
}
  .border-b-token-border-default { border-bottom-color: var(--border-defaul=
t); }
  .border-b-transparent { border-bottom-color: rgba(0, 0, 0, 0); }
  .btn-primary { background-color: rgb(13, 13, 13); color: rgb(255, 255, 25=
5); }
  @media (hover: hover) {
  .btn-primary:hover { background-color: rgb(33, 33, 33); }
}
  .btn-primary:focus-visible { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0=
 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor); =
--tw-ring-color: #9b9b9b; --tw-ring-offset-width: 2px; --tw-ring-offset-sha=
dow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-of=
fset-color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow)=
,var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .btn-primary:is(.dark *) { background-color: rgb(249, 249, 249); color: r=
gb(13, 13, 13); }
  @media (hover: hover) {
  .btn-primary:is(.dark *):hover { background-color: rgb(236, 236, 236); }
}
  .btn-primary-inverse { background-color: rgb(249, 249, 249); color: rgb(1=
3, 13, 13); }
  @media (hover: hover) {
  .btn-primary-inverse:hover { background-color: rgb(236, 236, 236); }
}
  .btn-primary-inverse:focus-visible { --tw-ring-shadow: var(--tw-ring-inse=
t,)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,current=
Color); --tw-ring-color: #9b9b9b; --tw-ring-offset-width: 2px; --tw-ring-of=
fset-shadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw=
-ring-offset-color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring=
-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow=
); }
  .btn-primary-inverse:is(.dark *) { background-color: rgb(13, 13, 13); col=
or: rgb(255, 255, 255); }
  @media (hover: hover) {
  .btn-primary-inverse:is(.dark *):hover { background-color: rgb(33, 33, 33=
); }
}
  .btn-danger { background-color: rgb(224, 46, 42); color: rgb(255, 255, 25=
5); }
  @media (hover: hover) {
  .btn-danger:hover { background-color: rgb(145, 30, 27); }
}
  .btn-danger:focus-visible { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 =
calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor); -=
-tw-ring-color: #fa423e; --tw-ring-offset-width: 2px; --tw-ring-offset-shad=
ow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-off=
set-color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),=
var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  @media (hover: hover) {
  .btn-danger:disabled:hover { background-color: rgb(145, 30, 27); }
}
  .btn-blue { background-color: rgb(0, 102, 222); color: rgb(255, 255, 255)=
; }
  @media (hover: hover) {
  .btn-blue:hover { background-color: rgb(0, 63, 122); }
}
  .btn-blue:focus-visible { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 ca=
lc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor); --t=
w-ring-color: #003f7a; --tw-ring-offset-width: 2px; --tw-ring-offset-shadow=
: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offse=
t-color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),va=
r(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .btn-green { background-color: rgb(0, 134, 53); color: rgb(255, 255, 255)=
; }
  @media (hover: hover) {
  .btn-green:hover { background-color: rgb(0, 105, 42); }
}
  .btn-green:focus-visible { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 c=
alc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor); --=
tw-ring-color: #00a240; --tw-ring-offset-width: 2px; --tw-ring-offset-shado=
w: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offs=
et-color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),v=
ar(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  @media (hover: hover) {
  .btn-ghost:hover { background-color: oklab(0 none none / 0.05); }
}
  .btn-ghost:focus-visible { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 c=
alc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor); --=
tw-ring-color: oklab(0% none none/.05); --tw-outline-style: none; box-shado=
w: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-=
shadow),var(--tw-ring-shadow),var(--tw-shadow); outline-style: none; }
  @media (forced-colors: active) {
  .btn-ghost:focus-visible { outline: rgba(0, 0, 0, 0) solid 2px; outline-o=
ffset: 2px; }
}
  @media (hover: hover) {
  .btn-ghost:is(.dark *):hover { background-color: rgba(255, 255, 255, 0.1)=
; }
}
  .\!bg-token-interactive-bg-accent-default { background-color: var(--inter=
active-bg-accent-default) !important; }
  .bg-\(--task-bg\) { background-color: var(--task-bg); }
  .bg-\[\#1D53BF0D\] { background-color: rgba(29, 83, 191, 0.05); }
  .bg-\[\#007AFF\] { background-color: rgb(0, 122, 255); }
  .bg-\[\#8C43A00D\] { background-color: rgba(140, 67, 160, 0.05); }
  .bg-\[\#8E3CF320\] { background-color: rgba(142, 60, 243, 0.125); }
  .bg-\[\#10A37F\] { background-color: rgb(16, 163, 127); }
  .bg-\[\#0077FF\] { background-color: rgb(0, 119, 255); }
  .bg-\[\#0088FF\] { background-color: rgb(0, 136, 255); }
  .bg-\[\#129FBF\] { background-color: rgb(18, 159, 191); }
  .bg-\[\#59636E20\] { background-color: rgba(89, 99, 110, 0.125); }
  .bg-\[\#252525\] { background-color: rgb(37, 37, 37); }
  .bg-\[\#303030\] { background-color: rgb(48, 48, 48); }
  .bg-\[\#AF52DE\] { background-color: rgb(175, 82, 222); }
  .bg-\[\#B161FD\] { background-color: rgb(177, 97, 253); }
  .bg-\[\#C3DEC780\] { background-color: rgba(195, 222, 199, 0.5); }
  .bg-\[\#CEDFFE\] { background-color: rgb(206, 223, 254); }
  .bg-\[\#D6303D20\] { background-color: rgba(214, 48, 61, 0.125); }
  .bg-\[\#DAEEFF\] { background-color: rgb(218, 238, 255); }
  .bg-\[\#E5F3FF\] { background-color: rgb(229, 243, 255); }
  .bg-\[\#F1F1F1\] { background-color: rgb(241, 241, 241); }
  .bg-\[\#F4F4F4\]\! { background-color: rgb(244, 244, 244) !important; }
  .bg-\[\#F8CA27\] { background-color: rgb(248, 202, 39); }
  .bg-\[\#F9F9F9\] { background-color: rgb(249, 249, 249); }
  .bg-\[\#FCECC1\] { background-color: rgb(252, 236, 193); }
  .bg-\[\#FF6E3C\] { background-color: rgb(255, 110, 60); }
  .bg-\[\#FF5588\] { background-color: rgb(255, 85, 136); }
  .bg-\[\#e2c541\] { background-color: rgb(226, 197, 65); }
  .bg-\[\#f4f4f4\] { background-color: rgb(244, 244, 244); }
  .bg-\[\#fcf6e0\] { background-color: rgb(252, 246, 224); }
  .bg-\[Highlight\] { background-color: highlight; }
  .bg-\[Highlight\]\! { background-color: highlight !important; }
  .bg-\[rgba\(29\,155\,209\,0\.1\)\] { background-color: rgba(29, 155, 209,=
 0.1); }
  .bg-\[rgba\(229\,76\,66\,0\.16\)\] { background-color: rgba(229, 76, 66, =
0.16); }
  .bg-\[rgba\(249\,249\,249\,1\)\] { background-color: rgb(249, 249, 249); =
}
  .bg-\[rgba\(255\,255\,255\,0\.9\)\] { background-color: rgba(255, 255, 25=
5, 0.9); }
  .bg-\[var\(--item-background-color\)\] { background-color: var(--item-bac=
kground-color); }
  .bg-black { background-color: rgb(0, 0, 0); }
  .bg-black\! { background-color: rgb(0, 0, 0) !important; }
  .bg-black\/5 { background-color: oklab(0 none none / 0.05); }
  .bg-black\/5\! { background-color: oklab(0 none none / 0.05) !important; =
}
  .bg-black\/10 { background-color: oklab(0 none none / 0.1); }
  .bg-black\/25 { background-color: oklab(0 none none / 0.25); }
  .bg-black\/40 { background-color: oklab(0 none none / 0.4); }
  .bg-black\/50 { background-color: oklab(0 none none / 0.5); }
  .bg-black\/90 { background-color: oklab(0 none none / 0.9); }
  .bg-black\/95 { background-color: oklab(0 none none / 0.95); }
  .bg-black\/\[0\.025\] { background-color: oklab(0 none none / 0.025); }
  .bg-black\/\[0\.045\] { background-color: oklab(0 none none / 0.045); }
  .bg-blue-25 { background-color: rgb(245, 250, 255); }
  .bg-blue-50 { background-color: rgb(229, 243, 255); }
  .bg-blue-75 { background-color: rgb(204, 230, 255); }
  .bg-blue-100 { background-color: rgb(153, 206, 255); }
  .bg-blue-200 { background-color: rgb(102, 181, 255); }
  .bg-blue-300 { background-color: rgb(51, 156, 255); }
  .bg-blue-400 { background-color: rgb(2, 133, 255); }
  .bg-blue-400\/10 { background-color: rgba(2, 133, 255, 0.1); }
  .bg-blue-400\/10\! { background-color: rgba(2, 133, 255, 0.1) !important;=
 }
  .bg-blue-400\/15 { background-color: rgba(2, 133, 255, 0.15); }
  .bg-blue-400\/50 { background-color: rgba(2, 133, 255, 0.5); }
  .bg-blue-400\/\[\.08\] { background-color: rgba(2, 133, 255, 0.08); }
  .bg-blue-400\/\[0\.1\] { background-color: rgba(2, 133, 255, 0.1); }
  .bg-blue-500 { background-color: rgb(1, 105, 204); }
  .bg-blue-500\/10 { background-color: rgba(1, 105, 204, 0.1); }
  .bg-blue-500\/30 { background-color: rgba(1, 105, 204, 0.3); }
  .bg-blue-600 { background-color: rgb(0, 79, 153); }
  .bg-blue-700 { background-color: rgb(0, 63, 122); }
  .bg-blue-800 { background-color: rgb(1, 53, 102); }
  .bg-blue-900 { background-color: rgb(0, 40, 77); }
  .bg-blue-1000 { background-color: rgb(0, 13, 25); }
  .bg-brand-blue-800 { background-color: rgb(0, 102, 222); }
  .bg-brand-blue-800\/20 { background-color: rgba(0, 102, 222, 0.2); }
  .bg-brand-green { background-color: rgb(25, 195, 125); }
  .bg-brand-purple { background-color: rgb(171, 104, 255); }
  .bg-brand-purple-600 { background-color: rgb(113, 95, 222); }
  .bg-brand-purple-800 { background-color: rgb(84, 0, 222); }
  .bg-current { background-color: currentcolor; }
  .bg-gray-50 { background-color: rgb(249, 249, 249); }
  .bg-gray-50\/50 { background-color: rgba(249, 249, 249, 0.5); }
  .bg-gray-50\/75 { background-color: rgba(249, 249, 249, 0.75); }
  .bg-gray-100 { background-color: rgb(236, 236, 236); }
  .bg-gray-100\/50 { background-color: rgba(236, 236, 236, 0.5); }
  .bg-gray-200 { background-color: rgb(227, 227, 227); }
  .bg-gray-200\! { background-color: rgb(227, 227, 227) !important; }
  .bg-gray-200\/70 { background-color: rgba(227, 227, 227, 0.7); }
  .bg-gray-300 { background-color: rgb(205, 205, 205); }
  .bg-gray-300\! { background-color: rgb(205, 205, 205) !important; }
  .bg-gray-300\/60 { background-color: rgba(205, 205, 205, 0.6); }
  .bg-gray-400 { background-color: rgb(180, 180, 180); }
  .bg-gray-500 { background-color: rgb(155, 155, 155); }
  .bg-gray-600 { background-color: rgb(103, 103, 103); }
  .bg-gray-700 { background-color: rgb(66, 66, 66); }
  .bg-gray-800 { background-color: rgb(33, 33, 33); }
  .bg-gray-900 { background-color: rgb(23, 23, 23); }
  .bg-gray-900\/20 { background-color: rgba(23, 23, 23, 0.2); }
  .bg-gray-950 { background-color: rgb(13, 13, 13); }
  .bg-gray-950\/5 { background-color: rgba(13, 13, 13, 0.05); }
  .bg-gray-solid-0 { background-color: rgb(255, 255, 255); }
  .bg-gray-solid-50 { background-color: rgb(249, 249, 249); }
  .bg-gray-solid-75 { background-color: rgb(243, 243, 243); }
  .bg-gray-solid-100 { background-color: rgb(232, 232, 232); }
  .bg-gray-solid-200 { background-color: rgb(205, 205, 205); }
  .bg-gray-solid-300 { background-color: rgb(175, 175, 175); }
  .bg-gray-solid-400 { background-color: rgb(143, 143, 143); }
  .bg-gray-solid-500 { background-color: rgb(93, 93, 93); }
  .bg-gray-solid-600 { background-color: rgb(65, 65, 65); }
  .bg-gray-solid-700 { background-color: rgb(48, 48, 48); }
  .bg-gray-solid-800 { background-color: rgb(33, 33, 33); }
  .bg-gray-solid-900 { background-color: rgb(24, 24, 24); }
  .bg-gray-solid-1000 { background-color: rgb(13, 13, 13); }
  .bg-green-25 { background-color: rgb(237, 250, 242); }
  .bg-green-50 { background-color: rgb(217, 244, 228); }
  .bg-green-75 { background-color: rgb(184, 235, 204); }
  .bg-green-100 { background-color: rgb(140, 223, 173); }
  .bg-green-100\! { background-color: rgb(140, 223, 173) !important; }
  .bg-green-200 { background-color: rgb(102, 212, 146); }
  .bg-green-300 { background-color: rgb(64, 201, 119); }
  .bg-green-400 { background-color: rgb(4, 184, 76); }
  .bg-green-400\! { background-color: rgb(4, 184, 76) !important; }
  .bg-green-500 { background-color: rgb(0, 162, 64); }
  .bg-green-500\/10 { background-color: rgba(0, 162, 64, 0.1); }
  .bg-green-500\/30 { background-color: rgba(0, 162, 64, 0.3); }
  .bg-green-600 { background-color: rgb(0, 134, 53); }
  .bg-green-600\/5 { background-color: rgba(0, 134, 53, 0.05); }
  .bg-green-600\/10 { background-color: rgba(0, 134, 53, 0.1); }
  .bg-green-600\/15 { background-color: rgba(0, 134, 53, 0.15); }
  .bg-green-700 { background-color: rgb(0, 105, 42); }
  .bg-green-800 { background-color: rgb(0, 79, 31); }
  .bg-green-900 { background-color: rgb(0, 55, 22); }
  .bg-green-1000 { background-color: rgb(0, 18, 7); }
  .bg-orange-25 { background-color: rgb(255, 245, 240); }
  .bg-orange-50 { background-color: rgb(255, 231, 217); }
  .bg-orange-75 { background-color: rgb(255, 207, 180); }
  .bg-orange-100 { background-color: rgb(255, 183, 144); }
  .bg-orange-200 { background-color: rgb(255, 158, 108); }
  .bg-orange-300 { background-color: rgb(255, 133, 73); }
  .bg-orange-400 { background-color: rgb(251, 106, 34); }
  .bg-orange-400\/5 { background-color: rgba(251, 106, 34, 0.05); }
  .bg-orange-500 { background-color: rgb(226, 85, 7); }
  .bg-orange-600 { background-color: rgb(185, 72, 13); }
  .bg-orange-700 { background-color: rgb(146, 59, 15); }
  .bg-orange-800 { background-color: rgb(109, 46, 15); }
  .bg-orange-900 { background-color: rgb(74, 34, 6); }
  .bg-orange-1000 { background-color: rgb(33, 17, 7); }
  .bg-pink-25 { background-color: rgb(255, 244, 249); }
  .bg-pink-50 { background-color: rgb(255, 232, 243); }
  .bg-pink-75 { background-color: rgb(255, 212, 232); }
  .bg-pink-100 { background-color: rgb(255, 186, 218); }
  .bg-pink-200 { background-color: rgb(255, 163, 206); }
  .bg-pink-300 { background-color: rgb(255, 140, 193); }
  .bg-pink-400 { background-color: rgb(255, 102, 173); }
  .bg-pink-500 { background-color: rgb(224, 76, 145); }
  .bg-pink-600 { background-color: rgb(186, 67, 122); }
  .bg-pink-700 { background-color: rgb(150, 60, 103); }
  .bg-pink-800 { background-color: rgb(110, 44, 74); }
  .bg-pink-900 { background-color: rgb(77, 31, 52); }
  .bg-pink-1000 { background-color: rgb(26, 10, 17); }
  .bg-purple-25 { background-color: rgb(249, 245, 254); }
  .bg-purple-50 { background-color: rgb(239, 229, 254); }
  .bg-purple-75 { background-color: rgb(224, 206, 253); }
  .bg-purple-100 { background-color: rgb(206, 176, 251); }
  .bg-purple-200 { background-color: rgb(190, 149, 250); }
  .bg-purple-300 { background-color: rgb(173, 123, 249); }
  .bg-purple-400 { background-color: rgb(146, 79, 247); }
  .bg-purple-500 { background-color: rgb(128, 70, 217); }
  .bg-purple-600 { background-color: rgb(107, 58, 180); }
  .bg-purple-700 { background-color: rgb(83, 45, 141); }
  .bg-purple-800 { background-color: rgb(63, 34, 106); }
  .bg-purple-900 { background-color: rgb(44, 24, 74); }
  .bg-purple-1000 { background-color: rgb(16, 10, 25); }
  .bg-red-25 { background-color: rgb(255, 240, 240); }
  .bg-red-50 { background-color: rgb(255, 225, 224); }
  .bg-red-75 { background-color: rgb(255, 198, 197); }
  .bg-red-100 { background-color: rgb(255, 164, 162); }
  .bg-red-100\! { background-color: rgb(255, 164, 162) !important; }
  .bg-red-200 { background-color: rgb(255, 133, 131); }
  .bg-red-300 { background-color: rgb(255, 103, 100); }
  .bg-red-400 { background-color: rgb(250, 66, 62); }
  .bg-red-400\! { background-color: rgb(250, 66, 62) !important; }
  .bg-red-500 { background-color: rgb(224, 46, 42); }
  .bg-red-500\/10 { background-color: rgba(224, 46, 42, 0.1); }
  .bg-red-500\/30 { background-color: rgba(224, 46, 42, 0.3); }
  .bg-red-600 { background-color: rgb(186, 38, 35); }
  .bg-red-700 { background-color: rgb(145, 30, 27); }
  .bg-red-800 { background-color: rgb(110, 22, 21); }
  .bg-red-900 { background-color: rgb(77, 16, 14); }
  .bg-red-1000 { background-color: rgb(31, 9, 9); }
  .bg-token-bg-elevated-primary { background-color: var(--bg-elevated-prima=
ry); }
  .bg-token-bg-elevated-secondary { background-color: var(--bg-elevated-sec=
ondary); }
  .bg-token-bg-primary { background-color: var(--bg-primary); }
  .bg-token-bg-scrim { background-color: var(--bg-scrim); }
  .bg-token-bg-secondary { background-color: var(--bg-secondary); }
  .bg-token-bg-status-error { background-color: var(--bg-status-error); }
  .bg-token-bg-status-warning { background-color: var(--bg-status-warning);=
 }
  .bg-token-bg-tertiary { background-color: var(--bg-tertiary); }
  .bg-token-border-default { background-color: var(--border-default); }
  .bg-token-border-heavy { background-color: var(--border-heavy); }
  .bg-token-border-light { background-color: var(--border-light); }
  .bg-token-border-medium { background-color: var(--border-medium); }
  .bg-token-border-status-error { background-color: var(--border-status-err=
or); }
  .bg-token-border-status-warning { background-color: var(--border-status-w=
arning); }
  .bg-token-border-xlight { background-color: var(--border-xlight); }
  .bg-token-composer-blue-bg { background-color: var(--composer-blue-bg); }
  .bg-token-composer-surface { background-color: var(--composer-surface); }
  .bg-token-hint-bg { background-color: var(--hint-bg); }
  .bg-token-icon-accent { background-color: var(--icon-accent); }
  .bg-token-icon-inverted { background-color: var(--icon-inverted); }
  .bg-token-icon-inverted-static { background-color: var(--icon-inverted-st=
atic); }
  .bg-token-icon-primary { background-color: var(--icon-primary); }
  .bg-token-icon-secondary { background-color: var(--icon-secondary); }
  .bg-token-icon-status-error { background-color: var(--icon-status-error);=
 }
  .bg-token-icon-status-warning { background-color: var(--icon-status-warni=
ng); }
  .bg-token-icon-tertiary { background-color: var(--icon-tertiary); }
  .bg-token-interactive-bg-accent-default { background-color: var(--interac=
tive-bg-accent-default); }
  .bg-token-interactive-bg-accent-hover { background-color: var(--interacti=
ve-bg-accent-hover); }
  .bg-token-interactive-bg-accent-inactive { background-color: var(--intera=
ctive-bg-accent-inactive); }
  .bg-token-interactive-bg-accent-press { background-color: var(--interacti=
ve-bg-accent-press); }
  .bg-token-interactive-bg-danger-primary-default { background-color: var(-=
-interactive-bg-danger-primary-default); }
  .bg-token-interactive-bg-danger-primary-hover { background-color: var(--i=
nteractive-bg-danger-primary-hover); }
  .bg-token-interactive-bg-danger-primary-inactive { background-color: var(=
--interactive-bg-danger-primary-inactive); }
  .bg-token-interactive-bg-danger-primary-press { background-color: var(--i=
nteractive-bg-danger-primary-press); }
  .bg-token-interactive-bg-danger-secondary-default { background-color: var=
(--interactive-bg-danger-secondary-default); }
  .bg-token-interactive-bg-danger-secondary-hover { background-color: var(-=
-interactive-bg-danger-secondary-hover); }
  .bg-token-interactive-bg-danger-secondary-inactive { background-color: va=
r(--interactive-bg-danger-secondary-inactive); }
  .bg-token-interactive-bg-danger-secondary-press { background-color: var(-=
-interactive-bg-danger-secondary-press); }
  .bg-token-interactive-bg-primary-default { background-color: var(--intera=
ctive-bg-primary-default); }
  .bg-token-interactive-bg-primary-hover { background-color: var(--interact=
ive-bg-primary-hover); }
  .bg-token-interactive-bg-primary-inactive { background-color: var(--inter=
active-bg-primary-inactive); }
  .bg-token-interactive-bg-primary-press { background-color: var(--interact=
ive-bg-primary-press); }
  .bg-token-interactive-bg-primary-selected { background-color: var(--inter=
active-bg-primary-selected); }
  .bg-token-interactive-bg-secondary-default { background-color: var(--inte=
ractive-bg-secondary-default); }
  .bg-token-interactive-bg-secondary-hover { background-color: var(--intera=
ctive-bg-secondary-hover); }
  .bg-token-interactive-bg-secondary-inactive { background-color: var(--int=
eractive-bg-secondary-inactive); }
  .bg-token-interactive-bg-secondary-press { background-color: var(--intera=
ctive-bg-secondary-press); }
  .bg-token-interactive-bg-secondary-selected { background-color: var(--int=
eractive-bg-secondary-selected); }
  .bg-token-interactive-bg-tertiary-default { background-color: var(--inter=
active-bg-tertiary-default); }
  .bg-token-interactive-bg-tertiary-hover { background-color: var(--interac=
tive-bg-tertiary-hover); }
  .bg-token-interactive-bg-tertiary-inactive { background-color: var(--inte=
ractive-bg-tertiary-inactive); }
  .bg-token-interactive-bg-tertiary-press { background-color: var(--interac=
tive-bg-tertiary-press); }
  .bg-token-interactive-bg-tertiary-selected { background-color: var(--inte=
ractive-bg-tertiary-selected); }
  .bg-token-interactive-border-danger-secondary-default { background-color:=
 var(--interactive-border-danger-secondary-default); }
  .bg-token-interactive-border-danger-secondary-hover { background-color: v=
ar(--interactive-border-danger-secondary-hover); }
  .bg-token-interactive-border-danger-secondary-inactive { background-color=
: var(--interactive-border-danger-secondary-inactive); }
  .bg-token-interactive-border-danger-secondary-press { background-color: v=
ar(--interactive-border-danger-secondary-press); }
  .bg-token-interactive-border-focus { background-color: var(--interactive-=
border-focus); }
  .bg-token-interactive-border-secondary-default { background-color: var(--=
interactive-border-secondary-default); }
  .bg-token-interactive-border-secondary-hover { background-color: var(--in=
teractive-border-secondary-hover); }
  .bg-token-interactive-border-secondary-inactive { background-color: var(-=
-interactive-border-secondary-inactive); }
  .bg-token-interactive-border-secondary-press { background-color: var(--in=
teractive-border-secondary-press); }
  .bg-token-interactive-border-tertiary-default { background-color: var(--i=
nteractive-border-tertiary-default); }
  .bg-token-interactive-border-tertiary-hover { background-color: var(--int=
eractive-border-tertiary-hover); }
  .bg-token-interactive-border-tertiary-inactive { background-color: var(--=
interactive-border-tertiary-inactive); }
  .bg-token-interactive-border-tertiary-press { background-color: var(--int=
eractive-border-tertiary-press); }
  .bg-token-interactive-icon-accent-default { background-color: var(--inter=
active-icon-accent-default); }
  .bg-token-interactive-icon-accent-hover { background-color: var(--interac=
tive-icon-accent-hover); }
  .bg-token-interactive-icon-accent-inactive { background-color: var(--inte=
ractive-icon-accent-inactive); }
  .bg-token-interactive-icon-accent-press { background-color: var(--interac=
tive-icon-accent-press); }
  .bg-token-interactive-icon-accent-selected { background-color: var(--inte=
ractive-icon-accent-selected); }
  .bg-token-interactive-icon-danger-primary-default { background-color: var=
(--interactive-icon-danger-primary-default); }
  .bg-token-interactive-icon-danger-primary-hover { background-color: var(-=
-interactive-icon-danger-primary-hover); }
  .bg-token-interactive-icon-danger-primary-inactive { background-color: va=
r(--interactive-icon-danger-primary-inactive); }
  .bg-token-interactive-icon-danger-primary-press { background-color: var(-=
-interactive-icon-danger-primary-press); }
  .bg-token-interactive-icon-danger-secondary-default { background-color: v=
ar(--interactive-icon-danger-secondary-default); }
  .bg-token-interactive-icon-danger-secondary-hover { background-color: var=
(--interactive-icon-danger-secondary-hover); }
  .bg-token-interactive-icon-danger-secondary-inactive { background-color: =
var(--interactive-icon-danger-secondary-inactive); }
  .bg-token-interactive-icon-danger-secondary-press { background-color: var=
(--interactive-icon-danger-secondary-press); }
  .bg-token-interactive-icon-primary-default { background-color: var(--inte=
ractive-icon-primary-default); }
  .bg-token-interactive-icon-primary-hover { background-color: var(--intera=
ctive-icon-primary-hover); }
  .bg-token-interactive-icon-primary-inactive { background-color: var(--int=
eractive-icon-primary-inactive); }
  .bg-token-interactive-icon-primary-press { background-color: var(--intera=
ctive-icon-primary-press); }
  .bg-token-interactive-icon-primary-selected { background-color: var(--int=
eractive-icon-primary-selected); }
  .bg-token-interactive-icon-secondary-default { background-color: var(--in=
teractive-icon-secondary-default); }
  .bg-token-interactive-icon-secondary-hover { background-color: var(--inte=
ractive-icon-secondary-hover); }
  .bg-token-interactive-icon-secondary-inactive { background-color: var(--i=
nteractive-icon-secondary-inactive); }
  .bg-token-interactive-icon-secondary-press { background-color: var(--inte=
ractive-icon-secondary-press); }
  .bg-token-interactive-icon-secondary-selected { background-color: var(--i=
nteractive-icon-secondary-selected); }
  .bg-token-interactive-icon-tertiary-default { background-color: var(--int=
eractive-icon-tertiary-default); }
  .bg-token-interactive-icon-tertiary-hover { background-color: var(--inter=
active-icon-tertiary-hover); }
  .bg-token-interactive-icon-tertiary-inactive { background-color: var(--in=
teractive-icon-tertiary-inactive); }
  .bg-token-interactive-icon-tertiary-press { background-color: var(--inter=
active-icon-tertiary-press); }
  .bg-token-interactive-icon-tertiary-selected { background-color: var(--in=
teractive-icon-tertiary-selected); }
  .bg-token-interactive-label-accent-default { background-color: var(--inte=
ractive-label-accent-default); }
  .bg-token-interactive-label-accent-hover { background-color: var(--intera=
ctive-label-accent-hover); }
  .bg-token-interactive-label-accent-inactive { background-color: var(--int=
eractive-label-accent-inactive); }
  .bg-token-interactive-label-accent-press { background-color: var(--intera=
ctive-label-accent-press); }
  .bg-token-interactive-label-accent-selected { background-color: var(--int=
eractive-label-accent-selected); }
  .bg-token-interactive-label-danger-primary-default { background-color: va=
r(--interactive-label-danger-primary-default); }
  .bg-token-interactive-label-danger-primary-hover { background-color: var(=
--interactive-label-danger-primary-hover); }
  .bg-token-interactive-label-danger-primary-inactive { background-color: v=
ar(--interactive-label-danger-primary-inactive); }
  .bg-token-interactive-label-danger-primary-press { background-color: var(=
--interactive-label-danger-primary-press); }
  .bg-token-interactive-label-danger-secondary-default { background-color: =
var(--interactive-label-danger-secondary-default); }
  .bg-token-interactive-label-danger-secondary-hover { background-color: va=
r(--interactive-label-danger-secondary-hover); }
  .bg-token-interactive-label-danger-secondary-inactive { background-color:=
 var(--interactive-label-danger-secondary-inactive); }
  .bg-token-interactive-label-danger-secondary-press { background-color: va=
r(--interactive-label-danger-secondary-press); }
  .bg-token-interactive-label-primary-default { background-color: var(--int=
eractive-label-primary-default); }
  .bg-token-interactive-label-primary-hover { background-color: var(--inter=
active-label-primary-hover); }
  .bg-token-interactive-label-primary-inactive { background-color: var(--in=
teractive-label-primary-inactive); }
  .bg-token-interactive-label-primary-press { background-color: var(--inter=
active-label-primary-press); }
  .bg-token-interactive-label-primary-selected { background-color: var(--in=
teractive-label-primary-selected); }
  .bg-token-interactive-label-secondary-default { background-color: var(--i=
nteractive-label-secondary-default); }
  .bg-token-interactive-label-secondary-hover { background-color: var(--int=
eractive-label-secondary-hover); }
  .bg-token-interactive-label-secondary-inactive { background-color: var(--=
interactive-label-secondary-inactive); }
  .bg-token-interactive-label-secondary-press { background-color: var(--int=
eractive-label-secondary-press); }
  .bg-token-interactive-label-secondary-selected { background-color: var(--=
interactive-label-secondary-selected); }
  .bg-token-interactive-label-tertiary-default { background-color: var(--in=
teractive-label-tertiary-default); }
  .bg-token-interactive-label-tertiary-hover { background-color: var(--inte=
ractive-label-tertiary-hover); }
  .bg-token-interactive-label-tertiary-inactive { background-color: var(--i=
nteractive-label-tertiary-inactive); }
  .bg-token-interactive-label-tertiary-press { background-color: var(--inte=
ractive-label-tertiary-press); }
  .bg-token-interactive-label-tertiary-selected { background-color: var(--i=
nteractive-label-tertiary-selected); }
  .bg-token-main-surface-primary { background-color: var(--main-surface-pri=
mary); }
  .bg-token-main-surface-primary\! { background-color: var(--main-surface-p=
rimary) !important; }
  .bg-token-main-surface-primary-inverse { background-color: var(--main-sur=
face-primary-inverse); }
  .bg-token-main-surface-primary\/10 { background-color: color-mix(in oklab=
,var(--main-surface-primary)10%,transparent); }
  .bg-token-main-surface-secondary { background-color: var(--main-surface-s=
econdary); }
  .bg-token-main-surface-secondary\! { background-color: var(--main-surface=
-secondary) !important; }
  .bg-token-main-surface-secondary-selected { background-color: var(--main-=
surface-secondary-selected); }
  .bg-token-main-surface-tertiary { background-color: var(--main-surface-te=
rtiary); }
  .bg-token-main-surface-tertiary\! { background-color: var(--main-surface-=
tertiary) !important; }
  .bg-token-message-surface { background-color: var(--message-surface); }
  .bg-token-sidebar-surface { background-color: var(--sidebar-surface); }
  .bg-token-sidebar-surface-primary { background-color: var(--sidebar-surfa=
ce-primary); }
  .bg-token-sidebar-surface-secondary { background-color: var(--sidebar-sur=
face-secondary); }
  .bg-token-sidebar-surface-tertiary { background-color: var(--sidebar-surf=
ace-tertiary); }
  .bg-token-surface-error { background-color: rgb(var(--surface-error)/1); =
}
  .bg-token-surface-error\/5 { background-color: color-mix(in oklab,rgb(var=
(--surface-error)/1) 5%,transparent); }
  .bg-token-text-accent { background-color: var(--text-accent); }
  .bg-token-text-inverted { background-color: var(--text-inverted); }
  .bg-token-text-inverted-static { background-color: var(--text-inverted-st=
atic); }
  .bg-token-text-primary { background-color: var(--text-primary); }
  .bg-token-text-primary\! { background-color: var(--text-primary) !importa=
nt; }
  .bg-token-text-quaternary { background-color: var(--text-quaternary); }
  .bg-token-text-secondary { background-color: var(--text-secondary); }
  .bg-token-text-status-error { background-color: var(--text-status-error);=
 }
  .bg-token-text-status-warning { background-color: var(--text-status-warni=
ng); }
  .bg-token-text-tertiary { background-color: var(--text-tertiary); }
  .bg-token-utility-scrollbar { background-color: var(--utility-scrollbar);=
 }
  .bg-transparent { background-color: rgba(0, 0, 0, 0); }
  .bg-transparent\! { background-color: rgba(0, 0, 0, 0) !important; }
  .bg-white { background-color: rgb(255, 255, 255); }
  .bg-white\! { background-color: rgb(255, 255, 255) !important; }
  .bg-white\/10 { background-color: rgba(255, 255, 255, 0.1); }
  .bg-white\/25 { background-color: rgba(255, 255, 255, 0.25); }
  .bg-white\/50 { background-color: rgba(255, 255, 255, 0.5); }
  .bg-white\/60 { background-color: rgba(255, 255, 255, 0.6); }
  .bg-white\/70 { background-color: rgba(255, 255, 255, 0.7); }
  .bg-white\/80 { background-color: rgba(255, 255, 255, 0.8); }
  .bg-white\/95 { background-color: rgba(255, 255, 255, 0.95); }
  .bg-yellow-25 { background-color: rgb(255, 251, 237); }
  .bg-yellow-50 { background-color: rgb(255, 246, 217); }
  .bg-yellow-75 { background-color: rgb(255, 238, 184); }
  .bg-yellow-100 { background-color: rgb(255, 228, 140); }
  .bg-yellow-200 { background-color: rgb(255, 219, 102); }
  .bg-yellow-300 { background-color: rgb(255, 210, 64); }
  .bg-yellow-400 { background-color: rgb(255, 195, 0); }
  .bg-yellow-400\/40 { background-color: rgba(255, 195, 0, 0.4); }
  .bg-yellow-400\/60 { background-color: rgba(255, 195, 0, 0.6); }
  .bg-yellow-500 { background-color: rgb(224, 172, 0); }
  .bg-yellow-600 { background-color: rgb(186, 142, 0); }
  .bg-yellow-700 { background-color: rgb(145, 111, 0); }
  .bg-yellow-800 { background-color: rgb(110, 84, 0); }
  .bg-yellow-900 { background-color: rgb(77, 59, 0); }
  .bg-yellow-1000 { background-color: rgb(26, 20, 0); }
  .bg-gradient-to-r { --tw-gradient-position: to right in oklab; }
  .bg-gradient-to-r, .bg-gradient-to-t { background-image: linear-gradient(=
var(--tw-gradient-stops)); }
  .bg-gradient-to-t { --tw-gradient-position: to top in oklab; }
  .bg-linear-to-b { --tw-gradient-position: to bottom in oklab; }
  .bg-linear-to-b, .bg-linear-to-br { background-image: linear-gradient(var=
(--tw-gradient-stops)); }
  .bg-linear-to-br { --tw-gradient-position: to bottom right in oklab; }
  .bg-linear-to-l { --tw-gradient-position: to left in oklab; }
  .bg-linear-to-l, .bg-linear-to-r { background-image: linear-gradient(var(=
--tw-gradient-stops)); }
  .bg-linear-to-r { --tw-gradient-position: to right in oklab; }
  .bg-linear-to-t { --tw-gradient-position: to top in oklab; background-ima=
ge: linear-gradient(var(--tw-gradient-stops)); }
  .bg-none { background-image: none; }
  .bg-vert-light-gradient { background-image: linear-gradient(rgba(255, 255=
, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }
  .from-\[var\(--main-surface-background\)\] { --tw-gradient-from: var(--ma=
in-surface-background); --tw-gradient-stops: var(--tw-gradient-via-stops,va=
r(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-pos=
ition),var(--tw-gradient-to)var(--tw-gradient-to-position)); }
  .from-purple-400 { --tw-gradient-from: #924ff7; --tw-gradient-stops: var(=
--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)=
var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-=
position)); }
  .from-token-main-surface-primary { --tw-gradient-from: var(--main-surface=
-primary); --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradie=
nt-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--=
tw-gradient-to)var(--tw-gradient-to-position)); }
  .from-token-main-surface-secondary { --tw-gradient-from: var(--main-surfa=
ce-secondary); --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gr=
adient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),va=
r(--tw-gradient-to)var(--tw-gradient-to-position)); }
  .from-token-text-tertiary { --tw-gradient-from: var(--text-tertiary); --t=
w-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),v=
ar(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to=
)var(--tw-gradient-to-position)); }
  .from-transparent { --tw-gradient-from: transparent; --tw-gradient-stops:=
 var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-=
from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradien=
t-to-position)); }
  .from-white { --tw-gradient-from: #fff; --tw-gradient-stops: var(--tw-gra=
dient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw=
-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position=
)); }
  .from-white\/0 { --tw-gradient-from: oklab(0% 0 0/0); --tw-gradient-stops=
: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient=
-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradie=
nt-to-position)); }
  .from-10\% { --tw-gradient-from-position: 10%; }
  .from-50\% { --tw-gradient-from-position: 50%; }
  .from-60\% { --tw-gradient-from-position: 60%; }
  .via-\[rgba\(255\,255\,255\,0\.8\)\] { --tw-gradient-via: #fffc; --tw-gra=
dient-via-stops: var(--tw-gradient-position),var(--tw-gradient-from)var(--t=
w-gradient-from-position),var(--tw-gradient-via)var(--tw-gradient-via-posit=
ion),var(--tw-gradient-to)var(--tw-gradient-to-position); --tw-gradient-sto=
ps: var(--tw-gradient-via-stops); }
  .via-black\/20 { --tw-gradient-via: oklab(0% none none/.2); --tw-gradient=
-via-stops: var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gra=
dient-from-position),var(--tw-gradient-via)var(--tw-gradient-via-position),=
var(--tw-gradient-to)var(--tw-gradient-to-position); --tw-gradient-stops: v=
ar(--tw-gradient-via-stops); }
  .via-pink-500 { --tw-gradient-via: #e04c91; --tw-gradient-via-stops: var(=
--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-posit=
ion),var(--tw-gradient-via)var(--tw-gradient-via-position),var(--tw-gradien=
t-to)var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient=
-via-stops); }
  .via-token-border-heavy { --tw-gradient-via: var(--border-heavy); --tw-gr=
adient-via-stops: var(--tw-gradient-position),var(--tw-gradient-from)var(--=
tw-gradient-from-position),var(--tw-gradient-via)var(--tw-gradient-via-posi=
tion),var(--tw-gradient-to)var(--tw-gradient-to-position); --tw-gradient-st=
ops: var(--tw-gradient-via-stops); }
  .via-transparent { --tw-gradient-via: transparent; --tw-gradient-via-stop=
s: var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-fro=
m-position),var(--tw-gradient-via)var(--tw-gradient-via-position),var(--tw-=
gradient-to)var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-g=
radient-via-stops); }
  .via-30\% { --tw-gradient-via-position: 30%; }
  .to-black\/30 { --tw-gradient-to: oklab(0% none none/.3); --tw-gradient-s=
tops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-grad=
ient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gr=
adient-to-position)); }
  .to-red-500 { --tw-gradient-to: #e02e2a; --tw-gradient-stops: var(--tw-gr=
adient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--t=
w-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-positio=
n)); }
  .to-transparent { --tw-gradient-to: transparent; --tw-gradient-stops: var=
(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from=
)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to=
-position)); }
  .to-white\/20 { --tw-gradient-to: oklab(100% 0 5.96046e-8/.2); --tw-gradi=
ent-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw=
-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--=
tw-gradient-to-position)); }
  .to-100\% { --tw-gradient-to-position: 100%; }
  .bg-auto { background-size: auto; }
  .bg-contain { background-size: contain; }
  .bg-cover { background-size: cover; }
  .bg-clip-padding { background-clip: padding-box; }
  .bg-center { background-position: 50% center; }
  .bg-no-repeat { background-repeat: no-repeat; }
  .bg-repeat { background-repeat: repeat; }
  .fill-current { fill: currentcolor; }
  .fill-token-main-surface-primary { fill: var(--main-surface-primary); }
  .fill-transparent { fill: rgba(0, 0, 0, 0); }
  .fill-yellow-500 { fill: rgb(224, 172, 0); }
  .stroke-\[rgba\(0\,0\,0\,0\.1\)\] { stroke: rgba(0, 0, 0, 0.1); }
  .stroke-\[rgba\(0\,0\,0\,0\.32\)\] { stroke: rgba(0, 0, 0, 0.32); }
  .stroke-black { stroke: rgb(0, 0, 0); }
  .stroke-black\/10 { stroke: oklab(0 none none / 0.1); }
  .stroke-blue-200 { stroke: rgb(102, 181, 255); }
  .stroke-brand-purple\/25 { stroke: rgba(171, 104, 255, 0.25); }
  .stroke-gray-300 { stroke: rgb(205, 205, 205); }
  .stroke-gray-400 { stroke: rgb(180, 180, 180); }
  .stroke-token-main-surface-tertiary { stroke: var(--main-surface-tertiary=
); }
  .stroke-white { stroke: rgb(255, 255, 255); }
  .stroke-0 { stroke-width: 0; }
  .stroke-2 { stroke-width: 2px; }
  .stroke-3 { stroke-width: 3px; }
  .stroke-4 { stroke-width: 4px; }
  .object-contain { object-fit: contain; }
  .object-cover { object-fit: cover; }
  .object-fill { object-fit: fill; }
  .object-scale-down { object-fit: scale-down; }
  .object-bottom { object-position: center bottom; }
  .object-center { object-position: center center; }
  .p-0 { padding: calc(var(--spacing)*0); }
  .p-0\! { padding: calc(var(--spacing)*0) !important; }
  .p-0\.5 { padding: calc(var(--spacing)*.5); }
  .p-1 { padding: calc(var(--spacing)*1); }
  .p-1\! { padding: calc(var(--spacing)*1) !important; }
  .p-1\.5 { padding: calc(var(--spacing)*1.5); }
  .p-2 { padding: calc(var(--spacing)*2); }
  .p-2\.5 { padding: calc(var(--spacing)*2.5); }
  .p-3 { padding: calc(var(--spacing)*3); }
  .p-4 { padding: calc(var(--spacing)*4); }
  .p-5 { padding: calc(var(--spacing)*5); }
  .p-6 { padding: calc(var(--spacing)*6); }
  .p-7 { padding: calc(var(--spacing)*7); }
  .p-8 { padding: calc(var(--spacing)*8); }
  .p-9 { padding: calc(var(--spacing)*9); }
  .p-10 { padding: calc(var(--spacing)*10); }
  .p-14 { padding: calc(var(--spacing)*14); }
  .p-\[1px\] { padding: 1px; }
  .p-\[2px\] { padding: 2px; }
  .p-\[3px\] { padding: 3px; }
  .p-\[4px\] { padding: 4px; }
  .p-\[8rem\] { padding: 8rem; }
  .p-\[10px\] { padding: 10px; }
  .p-\[20px_20dvw\] { padding: 20px 20dvw; }
  .p-\[20vw\] { padding: 20vw; }
  .p-\[22px\] { padding: 22px; }
  .p-snc-1 { padding: var(--snc-1); }
  .px-\(--thread-content-margin\) { padding-inline: var(--thread-content-ma=
rgin); }
  .px-0 { padding-inline: calc(var(--spacing)*0); }
  .px-0\! { padding-inline: calc(var(--spacing)*0) !important; }
  .px-0\.5 { padding-inline: calc(var(--spacing)*.5); }
  .px-1 { padding-inline: calc(var(--spacing)*1); }
  .px-1\.5 { padding-inline: calc(var(--spacing)*1.5); }
  .px-2 { padding-inline: calc(var(--spacing)*2); }
  .px-2\.5 { padding-inline: calc(var(--spacing)*2.5); }
  .px-3 { padding-inline: calc(var(--spacing)*3); }
  .px-3\.5 { padding-inline: calc(var(--spacing)*3.5); }
  .px-4 { padding-inline: calc(var(--spacing)*4); }
  .px-5 { padding-inline: calc(var(--spacing)*5); }
  .px-6 { padding-inline: calc(var(--spacing)*6); }
  .px-7 { padding-inline: calc(var(--spacing)*7); }
  .px-8 { padding-inline: calc(var(--spacing)*8); }
  .px-10 { padding-inline: calc(var(--spacing)*10); }
  .px-12 { padding-inline: calc(var(--spacing)*12); }
  .px-16 { padding-inline: calc(var(--spacing)*16); }
  .px-20 { padding-inline: calc(var(--spacing)*20); }
  .px-24 { padding-inline: calc(var(--spacing)*24); }
  .px-\[1rem\] { padding-inline: 1rem; }
  .px-\[2px\] { padding-inline: 2px; }
  .px-\[4px\] { padding-inline: 4px; }
  .px-\[16px\] { padding-inline: 16px; }
  .px-\[22px\] { padding-inline: 22px; }
  .px-px { padding-inline: 1px; }
  .px-snc-1 { padding-inline: var(--snc-1); }
  .px-snc-2 { padding-inline: var(--snc-2); }
  .px-snc-results-padding { padding-inline: var(--snc-results-padding); }
  .py-0 { padding-block: calc(var(--spacing)*0); }
  .py-0\! { padding-block: calc(var(--spacing)*0) !important; }
  .py-0\.5 { padding-block: calc(var(--spacing)*.5); }
  .py-1 { padding-block: calc(var(--spacing)*1); }
  .py-1\.5 { padding-block: calc(var(--spacing)*1.5); }
  .py-2 { padding-block: calc(var(--spacing)*2); }
  .py-2\! { padding-block: calc(var(--spacing)*2) !important; }
  .py-2\.5 { padding-block: calc(var(--spacing)*2.5); }
  .py-3 { padding-block: calc(var(--spacing)*3); }
  .py-3\.5 { padding-block: calc(var(--spacing)*3.5); }
  .py-4 { padding-block: calc(var(--spacing)*4); }
  .py-5 { padding-block: calc(var(--spacing)*5); }
  .py-6 { padding-block: calc(var(--spacing)*6); }
  .py-8 { padding-block: calc(var(--spacing)*8); }
  .py-10 { padding-block: calc(var(--spacing)*10); }
  .py-12 { padding-block: calc(var(--spacing)*12); }
  .py-15 { padding-block: calc(var(--spacing)*15); }
  .py-16 { padding-block: calc(var(--spacing)*16); }
  .py-20 { padding-block: calc(var(--spacing)*20); }
  .py-24 { padding-block: calc(var(--spacing)*24); }
  .py-32 { padding-block: calc(var(--spacing)*32); }
  .py-\[0\.2rem\] { padding-block: 0.2rem; }
  .py-\[0\.108em\] { padding-block: 0.108em; }
  .py-\[1px\] { padding-block: 1px; }
  .py-\[5px\] { padding-block: 5px; }
  .py-\[7px\] { padding-block: 7px; }
  .py-\[12px\] { padding-block: 12px; }
  .py-\[15px\] { padding-block: 15px; }
  .py-snc-1 { padding-block: var(--snc-1); }
  .ps-0 { padding-inline-start: calc(var(--spacing)*0); }
  .ps-0\! { padding-inline-start: calc(var(--spacing)*0) !important; }
  .ps-0\.5 { padding-inline-start: calc(var(--spacing)*.5); }
  .ps-1 { padding-inline-start: calc(var(--spacing)*1); }
  .ps-1\.5 { padding-inline-start: calc(var(--spacing)*1.5); }
  .ps-2 { padding-inline-start: calc(var(--spacing)*2); }
  .ps-2\.5 { padding-inline-start: calc(var(--spacing)*2.5); }
  .ps-3 { padding-inline-start: calc(var(--spacing)*3); }
  .ps-4 { padding-inline-start: calc(var(--spacing)*4); }
  .ps-4\! { padding-inline-start: calc(var(--spacing)*4) !important; }
  .ps-5 { padding-inline-start: calc(var(--spacing)*5); }
  .ps-6 { padding-inline-start: calc(var(--spacing)*6); }
  .ps-7 { padding-inline-start: calc(var(--spacing)*7); }
  .ps-8 { padding-inline-start: calc(var(--spacing)*8); }
  .ps-10 { padding-inline-start: calc(var(--spacing)*10); }
  .ps-12 { padding-inline-start: calc(var(--spacing)*12); }
  .ps-16 { padding-inline-start: calc(var(--spacing)*16); }
  .ps-\[3\.25rem\] { padding-inline-start: 3.25rem; }
  .ps-\[14px\] { padding-inline-start: 14px; }
  .ps-\[20px\] { padding-inline-start: 20px; }
  .ps-\[22px\] { padding-inline-start: 22px; }
  .pe-0 { padding-inline-end: calc(var(--spacing)*0); }
  .pe-0\! { padding-inline-end: calc(var(--spacing)*0) !important; }
  .pe-1 { padding-inline-end: calc(var(--spacing)*1); }
  .pe-1\.5 { padding-inline-end: calc(var(--spacing)*1.5); }
  .pe-2 { padding-inline-end: calc(var(--spacing)*2); }
  .pe-2\.5 { padding-inline-end: calc(var(--spacing)*2.5); }
  .pe-3 { padding-inline-end: calc(var(--spacing)*3); }
  .pe-3\! { padding-inline-end: calc(var(--spacing)*3) !important; }
  .pe-3\.5 { padding-inline-end: calc(var(--spacing)*3.5); }
  .pe-4 { padding-inline-end: calc(var(--spacing)*4); }
  .pe-5 { padding-inline-end: calc(var(--spacing)*5); }
  .pe-6 { padding-inline-end: calc(var(--spacing)*6); }
  .pe-8 { padding-inline-end: calc(var(--spacing)*8); }
  .pe-9 { padding-inline-end: calc(var(--spacing)*9); }
  .pe-10 { padding-inline-end: calc(var(--spacing)*10); }
  .pe-12 { padding-inline-end: calc(var(--spacing)*12); }
  .pe-14 { padding-inline-end: calc(var(--spacing)*14); }
  .pe-\[15px\] { padding-inline-end: 15px; }
  .pt-0 { padding-top: calc(var(--spacing)*0); }
  .pt-0\.5 { padding-top: calc(var(--spacing)*.5); }
  .pt-1 { padding-top: calc(var(--spacing)*1); }
  .pt-1\.5 { padding-top: calc(var(--spacing)*1.5); }
  .pt-2 { padding-top: calc(var(--spacing)*2); }
  .pt-2\.5 { padding-top: calc(var(--spacing)*2.5); }
  .pt-3 { padding-top: calc(var(--spacing)*3); }
  .pt-3\! { padding-top: calc(var(--spacing)*3) !important; }
  .pt-3\.5 { padding-top: calc(var(--spacing)*3.5); }
  .pt-4 { padding-top: calc(var(--spacing)*4); }
  .pt-5 { padding-top: calc(var(--spacing)*5); }
  .pt-6 { padding-top: calc(var(--spacing)*6); }
  .pt-7 { padding-top: calc(var(--spacing)*7); }
  .pt-8 { padding-top: calc(var(--spacing)*8); }
  .pt-12 { padding-top: calc(var(--spacing)*12); }
  .pt-16 { padding-top: calc(var(--spacing)*16); }
  .pt-20 { padding-top: calc(var(--spacing)*20); }
  .pt-\[1\.125rem\] { padding-top: 1.125rem; }
  .pt-\[2px\] { padding-top: 2px; }
  .pt-\[3px\] { padding-top: 3px; }
  .pt-\[4\.5px\] { padding-top: 4.5px; }
  .pt-\[4px\] { padding-top: 4px; }
  .pt-\[13px\] { padding-top: 13px; }
  .pt-\[18px\] { padding-top: 18px; }
  .pt-\[71px\] { padding-top: 71px; }
  .pt-px { padding-top: 1px; }
  [dir=3D"ltr"] .pr-4 { padding-right: calc(var(--spacing)*4); }
  [dir=3D"rtl"] .pr-4 { padding-left: calc(var(--spacing)*4); }
  .pb-0 { padding-bottom: calc(var(--spacing)*0); }
  .pb-0\.5 { padding-bottom: calc(var(--spacing)*.5); }
  .pb-1 { padding-bottom: calc(var(--spacing)*1); }
  .pb-2 { padding-bottom: calc(var(--spacing)*2); }
  .pb-3 { padding-bottom: calc(var(--spacing)*3); }
  .pb-4 { padding-bottom: calc(var(--spacing)*4); }
  .pb-5 { padding-bottom: calc(var(--spacing)*5); }
  .pb-6 { padding-bottom: calc(var(--spacing)*6); }
  .pb-7 { padding-bottom: calc(var(--spacing)*7); }
  .pb-8 { padding-bottom: calc(var(--spacing)*8); }
  .pb-9 { padding-bottom: calc(var(--spacing)*9); }
  .pb-10 { padding-bottom: calc(var(--spacing)*10); }
  .pb-12 { padding-bottom: calc(var(--spacing)*12); }
  .pb-16 { padding-bottom: calc(var(--spacing)*16); }
  .pb-20 { padding-bottom: calc(var(--spacing)*20); }
  .pb-24 { padding-bottom: calc(var(--spacing)*24); }
  .pb-25 { padding-bottom: calc(var(--spacing)*25); }
  .pb-32 { padding-bottom: calc(var(--spacing)*32); }
  .pb-\[1px\] { padding-bottom: 1px; }
  .pb-\[5svh\] { padding-bottom: 5svh; }
  .pb-\[10px\] { padding-bottom: 10px; }
  .pb-\[22px\] { padding-bottom: 22px; }
  .pb-\[30vh\] { padding-bottom: 30vh; }
  .pb-\[200px\] { padding-bottom: 200px; }
  .pb-px { padding-bottom: 1px; }
  .pb-snc-1 { padding-bottom: var(--snc-1); }
  .pb-snc-2 { padding-bottom: var(--snc-2); }
  [dir=3D"ltr"] .pl-2 { padding-left: calc(var(--spacing)*2); }
  [dir=3D"rtl"] .pl-2 { padding-right: calc(var(--spacing)*2); }
  [dir=3D"ltr"] .pl-4 { padding-left: calc(var(--spacing)*4); }
  [dir=3D"rtl"] .pl-4 { padding-right: calc(var(--spacing)*4); }
  .text-center { text-align: center; }
  .text-end { text-align: end; }
  [dir=3D"ltr"] .text-left { text-align: left; }
  [dir=3D"ltr"] .text-right, [dir=3D"rtl"] .text-left { text-align: right; =
}
  [dir=3D"rtl"] .text-right { text-align: left; }
  .text-start { text-align: start; }
  .indent-\[0\.1em\] { text-indent: 0.1em; }
  .align-\[-0\.2em\] { vertical-align: -0.2em; }
  .align-baseline { vertical-align: baseline; }
  .align-middle { vertical-align: middle; }
  .align-top { vertical-align: top; }
  .font-circle { font-family: Circle, system-ui, sans-serif; }
  .font-mono { font-family: ui-monospace, SFMono-Regular, "SF Mono", Menlo,=
 Consolas, "Liberation Mono", monospace; }
  .font-oai { font-family: "OpenAI Sans", sans-serif; }
  .font-sans { font-family: ui-sans-serif, -apple-system, system-ui, "Segoe=
 UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", =
"Segoe UI Symbol"; }
  .text-body-small-regular { font-size: var(--text-body-small-regular); fon=
t-weight: var(--tw-font-weight,var(--text-body-small-regular--font-weight))=
; letter-spacing: var(--tw-tracking,var(--text-body-small-regular--letter-s=
pacing)); line-height: var(--tw-leading,var(--text-body-small-regular--line=
-height)); }
  .text-caption-regular { font-size: var(--text-caption-regular); font-weig=
ht: var(--tw-font-weight,var(--text-caption-regular--font-weight)); letter-=
spacing: var(--tw-tracking,var(--text-caption-regular--letter-spacing)); li=
ne-height: var(--tw-leading,var(--text-caption-regular--line-height)); }
  .text-heading-3 { font-size: var(--text-heading-3); font-weight: var(--tw=
-font-weight,var(--text-heading-3--font-weight)); letter-spacing: var(--tw-=
tracking,var(--text-heading-3--letter-spacing)); line-height: var(--tw-lead=
ing,var(--text-heading-3--line-height)); }
  .text-2xl { font-size: var(--text-2xl); line-height: var(--tw-leading,var=
(--text-2xl--line-height)); }
  .text-3xl { font-size: var(--text-3xl); line-height: var(--tw-leading,var=
(--text-3xl--line-height)); }
  .text-4xl { font-size: var(--text-4xl); line-height: var(--tw-leading,var=
(--text-4xl--line-height)); }
  .text-5xl { font-size: var(--text-5xl); line-height: var(--tw-leading,var=
(--text-5xl--line-height)); }
  .text-6xl { font-size: var(--text-6xl); line-height: var(--tw-leading,var=
(--text-6xl--line-height)); }
  .text-7xl { font-size: var(--text-7xl); line-height: var(--tw-leading,var=
(--text-7xl--line-height)); }
  .text-base { font-size: var(--text-base); line-height: var(--tw-leading,v=
ar(--text-base--line-height)); }
  .text-base\! { font-size: var(--text-base) !important; line-height: var(-=
-tw-leading,var(--text-base--line-height)) !important; }
  .text-lg { font-size: var(--text-lg); line-height: var(--tw-leading,var(-=
-text-lg--line-height)); }
  .text-sm { font-size: var(--text-sm); line-height: var(--tw-leading,var(-=
-text-sm--line-height)); }
  .text-sm\! { font-size: var(--text-sm) !important; line-height: var(--tw-=
leading,var(--text-sm--line-height)) !important; }
  .text-xl { font-size: var(--text-xl); line-height: var(--tw-leading,var(-=
-text-xl--line-height)); }
  .text-xs { font-size: var(--text-xs); line-height: var(--tw-leading,var(-=
-text-xs--line-height)); }
  .\[font-size\:var\(--pill-font-size\,14px\)\] { font-size: var(--pill-fon=
t-size,14px); }
  .text-\[0\.5em\] { font-size: 0.5em; }
  .text-\[0\.5rem\] { font-size: 0.5rem; }
  .text-\[0\.65rem\] { font-size: 0.65rem; }
  .text-\[0\.70rem\] { font-size: 0.7rem; }
  .text-\[0\.75rem\] { font-size: 0.75rem; }
  .text-\[0\.5625em\] { font-size: 0.5625em; }
  .text-\[5px\] { font-size: 5px; }
  .text-\[8px\] { font-size: 8px; }
  .text-\[9px\] { font-size: 9px; }
  .text-\[10px\] { font-size: 10px; }
  .text-\[11px\] { font-size: 11px; }
  .text-\[12px\] { font-size: 12px; }
  .text-\[13px\] { font-size: 13px; }
  .text-\[14px\] { font-size: 14px; }
  .text-\[15px\] { font-size: 15px; }
  .text-\[17px\] { font-size: 17px; }
  .text-\[18px\] { font-size: 18px; }
  .text-\[20px\] { font-size: 20px; }
  .text-\[22px\] { font-size: 22px; }
  .text-\[28px\] { font-size: 28px; }
  .text-\[32px\] { font-size: 32px; }
  .text-\[34px\] { font-size: 34px; }
  .text-\[40px\] { font-size: 40px; }
  .text-body { }
  .text-panel-title { }
  .leading-3 { --tw-leading: calc(var(--spacing)*3); line-height: calc(var(=
--spacing)*3); }
  .leading-4 { --tw-leading: calc(var(--spacing)*4); line-height: calc(var(=
--spacing)*4); }
  .leading-5 { --tw-leading: calc(var(--spacing)*5); line-height: calc(var(=
--spacing)*5); }
  .leading-6 { --tw-leading: calc(var(--spacing)*6); line-height: calc(var(=
--spacing)*6); }
  .leading-6\! { --tw-leading: calc(var(--spacing)*6) !important; line-heig=
ht: calc(var(--spacing)*6) !important; }
  .leading-7 { --tw-leading: calc(var(--spacing)*7); line-height: calc(var(=
--spacing)*7); }
  .leading-9 { --tw-leading: calc(var(--spacing)*9); line-height: calc(var(=
--spacing)*9); }
  .leading-\[0\] { --tw-leading: 0; line-height: 0; }
  .leading-\[1\.2\] { --tw-leading: 1.2; line-height: 1.2; }
  .leading-\[1\.4\] { --tw-leading: 1.4; line-height: 1.4; }
  .leading-\[15px\] { --tw-leading: 15px; line-height: 15px; }
  .leading-\[17px\] { --tw-leading: 17px; line-height: 17px; }
  .leading-\[18px\] { --tw-leading: 18px; line-height: 18px; }
  .leading-\[22px\] { --tw-leading: 22px; line-height: 22px; }
  .leading-\[34px\] { --tw-leading: 34px; line-height: 34px; }
  .leading-\[42px\] { --tw-leading: 42px; line-height: 42px; }
  .leading-\[50px\] { --tw-leading: 50px; line-height: 50px; }
  .leading-none { --tw-leading: 1; line-height: 1; }
  .leading-none\! { --tw-leading: 1 !important; line-height: 1 !important; =
}
  .leading-normal { --tw-leading: var(--leading-normal); line-height: var(-=
-leading-normal); }
  .leading-relaxed { --tw-leading: var(--leading-relaxed); line-height: var=
(--leading-relaxed); }
  .leading-snug { --tw-leading: var(--leading-snug); line-height: var(--lea=
ding-snug); }
  .leading-tight { --tw-leading: var(--leading-tight); line-height: var(--l=
eading-tight); }
  .font-\[550\] { --tw-font-weight: 550; font-weight: 550; }
  .font-black { --tw-font-weight: var(--font-weight-black); font-weight: va=
r(--font-weight-black); }
  .font-bold { --tw-font-weight: var(--font-weight-bold); font-weight: var(=
--font-weight-bold); }
  .font-extralight { --tw-font-weight: var(--font-weight-extralight); font-=
weight: var(--font-weight-extralight); }
  .font-light { --tw-font-weight: var(--font-weight-light); font-weight: va=
r(--font-weight-light); }
  .font-medium { --tw-font-weight: var(--font-weight-medium); font-weight: =
var(--font-weight-medium); }
  .font-medium\! { --tw-font-weight: var(--font-weight-medium) !important; =
font-weight: var(--font-weight-medium) !important; }
  .font-normal { --tw-font-weight: var(--font-weight-normal); font-weight: =
var(--font-weight-normal); }
  .font-normal\! { --tw-font-weight: var(--font-weight-normal) !important; =
font-weight: var(--font-weight-normal) !important; }
  .font-semibold { --tw-font-weight: var(--font-weight-semibold); font-weig=
ht: var(--font-weight-semibold); }
  .font-semibold\! { --tw-font-weight: var(--font-weight-semibold) !importa=
nt; font-weight: var(--font-weight-semibold) !important; }
  .\[font-weight\:700\] { font-weight: 700; }
  .tracking-\[-0\.18px\] { --tw-tracking: -.18px; letter-spacing: -0.18px; =
}
  .tracking-\[-0\.23px\] { --tw-tracking: -.23px; letter-spacing: -0.23px; =
}
  .tracking-\[-0\.28px\] { --tw-tracking: -.28px; letter-spacing: -0.28px; =
}
  .tracking-\[-0\.42px\] { --tw-tracking: -.42px; letter-spacing: -0.42px; =
}
  .tracking-\[-0\.197499px\] { --tw-tracking: -.197499px; letter-spacing: -=
0.197499px; }
  .tracking-\[0\.38px\] { --tw-tracking: .38px; letter-spacing: 0.38px; }
  .tracking-condensed { --tw-tracking: -.154px; letter-spacing: -0.154px; }
  .tracking-tight { --tw-tracking: var(--tracking-tight); letter-spacing: v=
ar(--tracking-tight); }
  .tracking-tighter { --tw-tracking: var(--tracking-tighter); letter-spacin=
g: var(--tracking-tighter); }
  .tracking-wide { --tw-tracking: var(--tracking-wide); letter-spacing: var=
(--tracking-wide); }
  .tracking-widest { --tw-tracking: var(--tracking-widest); letter-spacing:=
 var(--tracking-widest); }
  .\[text-wrap\:pretty\] { text-wrap: pretty; }
  .text-balance { text-wrap: balance; }
  .text-nowrap { text-wrap: nowrap; }
  .text-pretty { text-wrap: pretty; }
  .text-wrap { text-wrap: wrap; }
  .\[overflow-wrap\:anywhere\] { overflow-wrap: anywhere; }
  .break-words { overflow-wrap: break-word; }
  .break-all { word-break: break-all; }
  .overflow-ellipsis { text-overflow: ellipsis; }
  .text-clip { text-overflow: clip; }
  .text-ellipsis { text-overflow: ellipsis; }
  .whitespace-break-spaces { white-space: break-spaces; }
  .whitespace-normal { white-space: normal; }
  .whitespace-nowrap { white-space: nowrap; }
  .whitespace-pre { white-space: pre; }
  .whitespace-pre\! { white-space: pre !important; }
  .whitespace-pre-line { white-space: pre-line; }
  .whitespace-pre-wrap { white-space: pre-wrap; }
  .whitespace-pre-wrap\! { white-space: pre-wrap !important; }
  .\!text-\(--interactive-label-accent-default\) { color: var(--interactive=
-label-accent-default) !important; }
  .\[color\:var\(--pill-color\,var\(--text-secondary\)\)\] { color: var(--p=
ill-color,var(--text-secondary)); }
  .text-\[\#5D5D5D\] { color: rgb(93, 93, 93); }
  .text-\[\#007AFF\] { color: rgb(0, 122, 255); }
  .text-\[\#008C2E\] { color: rgb(0, 140, 46); }
  .text-\[\#8E3CF3\] { color: rgb(142, 60, 243); }
  .text-\[\#8F8F8F\] { color: rgb(143, 143, 143); }
  .text-\[\#10A37F\] { color: rgb(16, 163, 127); }
  .text-\[\#30a633\] { color: rgb(48, 166, 51); }
  .text-\[\#0088FF\] { color: rgb(0, 136, 255); }
  .text-\[\#0285ff\] { color: rgb(2, 133, 255); }
  .text-\[\#2964aa\]\! { color: rgb(41, 100, 170) !important; }
  .text-\[\#59636E\] { color: rgb(89, 99, 110); }
  .text-\[\#AF52DE\] { color: rgb(175, 82, 222); }
  .text-\[\#D6303D\] { color: rgb(214, 48, 61); }
  .text-\[\#DC2626\] { color: rgb(220, 38, 38); }
  .text-\[\#FE7600\] { color: rgb(254, 118, 0); }
  .text-\[\#f14d42\] { color: rgb(241, 77, 66); }
  .text-\[rgb\(18\,100\,163\)\] { color: rgb(18, 100, 163); }
  .text-\[var\(--main-surface-primary-inverse\)\] { color: var(--main-surfa=
ce-primary-inverse); }
  .text-\[var\(--sidebar-surface-secondary\)\] { color: var(--sidebar-surfa=
ce-secondary); }
  .text-black { color: rgb(0, 0, 0); }
  .text-black\! { color: rgb(0, 0, 0) !important; }
  .text-black\/50 { color: oklab(0 none none / 0.5); }
  .text-blue-100 { color: rgb(153, 206, 255); }
  .text-blue-400 { color: rgb(2, 133, 255); }
  .text-blue-400\! { color: rgb(2, 133, 255) !important; }
  .text-blue-500 { color: rgb(1, 105, 204); }
  .text-blue-600 { color: rgb(0, 79, 153); }
  .text-blue-800 { color: rgb(1, 53, 102); }
  .text-brand-blue-800 { color: rgb(0, 102, 222); }
  .text-brand-green-800 { color: rgb(5, 167, 70); }
  .text-brand-purple { color: rgb(171, 104, 255); }
  .text-current { color: currentcolor; }
  .text-danger { color: rgb(224, 46, 42); }
  .text-gray-100 { color: rgb(236, 236, 236); }
  .text-gray-200 { color: rgb(227, 227, 227); }
  .text-gray-300 { color: rgb(205, 205, 205); }
  .text-gray-400 { color: rgb(180, 180, 180); }
  .text-gray-500 { color: rgb(155, 155, 155); }
  .text-gray-600 { color: rgb(103, 103, 103); }
  .text-gray-700 { color: rgb(66, 66, 66); }
  .text-gray-800 { color: rgb(33, 33, 33); }
  .text-gray-900 { color: rgb(23, 23, 23); }
  .text-gray-950 { color: rgb(13, 13, 13); }
  .text-green-200 { color: rgb(102, 212, 146); }
  .text-green-500 { color: rgb(0, 162, 64); }
  .text-green-600 { color: rgb(0, 134, 53); }
  .text-green-700 { color: rgb(0, 105, 42); }
  .text-inherit { color: inherit; }
  .text-orange-300 { color: rgb(255, 133, 73); }
  .text-orange-400 { color: rgb(251, 106, 34); }
  .text-orange-500 { color: rgb(226, 85, 7); }
  .text-orange-600 { color: rgb(185, 72, 13); }
  .text-purple-600 { color: rgb(107, 58, 180); }
  .text-red-400 { color: rgb(250, 66, 62); }
  .text-red-500 { color: rgb(224, 46, 42); }
  .text-red-600 { color: rgb(186, 38, 35); }
  .text-red-700 { color: rgb(145, 30, 27); }
  .text-red-800 { color: rgb(110, 22, 21); }
  .text-red-900 { color: rgb(77, 16, 14); }
  .text-token-hint-text { color: var(--hint-text); }
  .text-token-icon-secondary { color: var(--icon-secondary); }
  .text-token-icon-tertiary { color: var(--icon-tertiary); }
  .text-token-interactive-label-accent-default { color: var(--interactive-l=
abel-accent-default); }
  .text-token-link { color: var(--link); }
  .text-token-main-surface-primary { color: var(--main-surface-primary); }
  .text-token-main-surface-primary\! { color: var(--main-surface-primary) !=
important; }
  .text-token-main-surface-primary-inverse { color: var(--main-surface-prim=
ary-inverse); }
  .text-token-main-surface-tertiary { color: var(--main-surface-tertiary); =
}
  .text-token-sidebar-icon { color: var(--sidebar-icon); }
  .text-token-sidebar-surface { color: var(--sidebar-surface); }
  .text-token-text-error { color: var(--text-error); }
  .text-token-text-inverted { color: var(--text-inverted); }
  .text-token-text-primary { color: var(--text-primary); }
  .text-token-text-primary\! { color: var(--text-primary) !important; }
  .text-token-text-quaternary { color: var(--text-quaternary); }
  .text-token-text-secondary { color: var(--text-secondary); }
  .text-token-text-secondary\! { color: var(--text-secondary) !important; }
  .text-token-text-tertiary { color: var(--text-tertiary); }
  .text-transparent { color: rgba(0, 0, 0, 0); }
  .text-white { color: rgb(255, 255, 255); }
  .text-white\! { color: rgb(255, 255, 255) !important; }
  .text-white\/25 { color: rgba(255, 255, 255, 0.25); }
  .text-yellow-500 { color: rgb(224, 172, 0); }
  .text-yellow-600 { color: rgb(186, 142, 0); }
  .text-yellow-700 { color: rgb(145, 111, 0); }
  .text-yellow-800 { color: rgb(110, 84, 0); }
  .capitalize { text-transform: capitalize; }
  .lowercase { text-transform: lowercase; }
  .normal-case { text-transform: none; }
  .uppercase { text-transform: uppercase; }
  .italic { font-style: italic; }
  .ordinal { --tw-ordinal: ordinal; }
  .ordinal, .tabular-nums { font-variant-numeric: var(--tw-ordinal,)var(--t=
w-slashed-zero,)var(--tw-numeric-figure,)var(--tw-numeric-spacing,)var(--tw=
-numeric-fraction,); }
  .tabular-nums { --tw-numeric-spacing: tabular-nums; }
  .line-through { text-decoration-line: line-through; }
  .no-underline { text-decoration-line: none; }
  .no-underline\! { text-decoration-line: none !important; }
  .underline { text-decoration-line: underline; }
  .underline\! { text-decoration-line: underline !important; }
  .decoration-token-link { text-decoration-color: var(--link); }
  .decoration-token-text-primary { text-decoration-color: var(--text-primar=
y); }
  .decoration-token-text-secondary { text-decoration-color: var(--text-seco=
ndary); }
  .decoration-dashed { text-decoration-style: dashed; }
  .decoration-\[4\%\] { text-decoration-thickness: 0.04em; }
  .underline-offset-1 { text-underline-offset: 1px; }
  .underline-offset-2 { text-underline-offset: 2px; }
  .underline-offset-4 { text-underline-offset: 4px; }
  .underline-offset-\[16\%\] { text-underline-offset: 16%; }
  .placeholder-gray-500::placeholder { color: rgb(155, 155, 155); }
  .placeholder-token-text-tertiary::placeholder { color: var(--text-tertiar=
y); }
  .opacity-0 { opacity: 0; }
  .opacity-5 { opacity: 0.05; }
  .opacity-10 { opacity: 0.1; }
  .opacity-20 { opacity: 0.2; }
  .opacity-25 { opacity: 0.25; }
  .opacity-30 { opacity: 0.3; }
  .opacity-35 { opacity: 0.35; }
  .opacity-40 { opacity: 0.4; }
  .opacity-45 { opacity: 0.45; }
  .opacity-50 { opacity: 0.5; }
  .opacity-60 { opacity: 0.6; }
  .opacity-65 { opacity: 0.65; }
  .opacity-70 { opacity: 0.7; }
  .opacity-75 { opacity: 0.75; }
  .opacity-80 { opacity: 0.8; }
  .opacity-85 { opacity: 0.85; }
  .opacity-90 { opacity: 0.9; }
  .opacity-100 { opacity: 1; }
  .opacity-100\! { opacity: 1 !important; }
  .opacity-\[0\.01\] { opacity: 0.01; }
  .mix-blend-darken { mix-blend-mode: darken; }
  .mix-blend-soft-light { mix-blend-mode: soft-light; }
  .shadow { --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color,#0000001a),0 1px=
 2px -1px var(--tw-shadow-color,#0000001a); }
  .shadow, .shadow-2xl { box-shadow: var(--tw-inset-shadow),var(--tw-inset-=
ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-sh=
adow); }
  .shadow-2xl { --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color,#00000=
040); }
  .shadow-\[0_-4px_32px_rgba\(0\,0\,0\,0\.08\)\] { --tw-shadow: 0 -4px 32px=
 var(--tw-shadow-color,#00000014); }
  .shadow-\[0_-4px_32px_rgba\(0\,0\,0\,0\.08\)\], .shadow-\[0_0_50px\] { bo=
x-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-=
offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .shadow-\[0_0_50px\] { --tw-shadow: 0 0 50px var(--tw-shadow-color,curren=
tcolor); }
  .shadow-\[0_0_64px_0_rgba\(0\,0\,0\,0\.07\)\] { --tw-shadow: 0 0 64px 0 v=
ar(--tw-shadow-color,#00000012); }
  .shadow-\[0_0_200px_0_rgba\(0\,0\,0\,0\.14\)\], .shadow-\[0_0_64px_0_rgba=
\(0\,0\,0\,0\.07\)\] { box-shadow: var(--tw-inset-shadow),var(--tw-inset-ri=
ng-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shad=
ow); }
  .shadow-\[0_0_200px_0_rgba\(0\,0\,0\,0\.14\)\] { --tw-shadow: 0 0 200px 0=
 var(--tw-shadow-color,#00000024); }
  .shadow-\[0_1px_0\] { --tw-shadow: 0 1px 0 var(--tw-shadow-color,currentc=
olor); }
  .shadow-\[0_1px_0\], .shadow-\[0_1px_1px_rgba\(0\,0\,0\,0\.03\)\,_0_4\.93=
747px_9\.05202px_rgba\(0\,0\,0\,0\.11\)\] { box-shadow: var(--tw-inset-shad=
ow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-=
shadow),var(--tw-shadow); }
  .shadow-\[0_1px_1px_rgba\(0\,0\,0\,0\.03\)\,_0_4\.93747px_9\.05202px_rgba=
\(0\,0\,0\,0\.11\)\] { --tw-shadow: 0 1px 1px var(--tw-shadow-color,#000000=
08),0 4.93747px 9.05202px var(--tw-shadow-color,#0000001c); }
  .shadow-\[0_1px_12px_0px_\#0000000B\] { --tw-shadow: 0 1px 12px 0px var(-=
-tw-shadow-color,#0000000b); }
  .shadow-\[0_1px_12px_0px_\#0000000B\], .shadow-\[0_2px_3px_0_rgba\(0\,0\,=
0\,0\.25\)\] { box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shado=
w),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .shadow-\[0_2px_3px_0_rgba\(0\,0\,0\,0\.25\)\] { --tw-shadow: 0 2px 3px 0=
 var(--tw-shadow-color,#00000040); }
  .shadow-\[0_2px_10px\] { --tw-shadow: 0 2px 10px var(--tw-shadow-color,cu=
rrentcolor); }
  .shadow-\[0_2px_10px\], .shadow-\[0_2px_16px_0_rgba\(0\,0\,0\,0\.04\)\] {=
 box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ri=
ng-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .shadow-\[0_2px_16px_0_rgba\(0\,0\,0\,0\.04\)\] { --tw-shadow: 0 2px 16px=
 0 var(--tw-shadow-color,#0000000a); }
  .shadow-\[0_4px_8px_-6px_rgb\(0_0_0_\/_0\.1\)\,0_0_1px_rgb\(0_0_0_\/_0\.4=
\)\] { --tw-shadow: 0 4px 8px -6px var(--tw-shadow-color,#0000001a),0 0 1px=
 var(--tw-shadow-color,#0006); }
  .shadow-\[0_4px_24px_-5px_rgba\(0\,0\,0\,0\.2\)\], .shadow-\[0_4px_8px_-6=
px_rgb\(0_0_0_\/_0\.1\)\,0_0_1px_rgb\(0_0_0_\/_0\.4\)\] { box-shadow: var(-=
-tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),=
var(--tw-ring-shadow),var(--tw-shadow); }
  .shadow-\[0_4px_24px_-5px_rgba\(0\,0\,0\,0\.2\)\] { --tw-shadow: 0 4px 24=
px -5px var(--tw-shadow-color,#0003); }
  .shadow-\[0_9px_9px_0px_rgba\(0\,0\,0\,0\.01\)\,_0_2px_5px_0px_rgba\(0\,0=
\,0\,0\.06\)\] { --tw-shadow: 0 9px 9px 0px var(--tw-shadow-color,#00000003=
),0 2px 5px 0px var(--tw-shadow-color,#0000000f); box-shadow: var(--tw-inse=
t-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw=
-ring-shadow),var(--tw-shadow); }
  .shadow-\[0_12px_24px_-6px_rgb\(0_0_0_\/_0\.1\)\,0_0_1px_rgb\(0_0_0_\/_0\=
.2\)\] { --tw-shadow: 0 12px 24px -6px var(--tw-shadow-color,#0000001a),0 0=
 1px var(--tw-shadow-color,#0003); box-shadow: var(--tw-inset-shadow),var(-=
-tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),v=
ar(--tw-shadow); }
  .shadow-\[0_12px_24px_-6px_rgb\(0_0_0_\/_0\.1\)\,0_0_12px_rgb\(0_0_0_\/_0=
\.2\)\] { --tw-shadow: 0 12px 24px -6px var(--tw-shadow-color,#0000001a),0 =
0 12px var(--tw-shadow-color,#0003); box-shadow: var(--tw-inset-shadow),var=
(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow)=
,var(--tw-shadow); }
  .shadow-\[0_12px_24px_-6px_rgb\(0_0_0_\/_0\.1\)\,_0_0_1px_rgb\(0_0_0_\/_0=
\.4\)\] { --tw-shadow: 0 12px 24px -6px var(--tw-shadow-color,#0000001a),0 =
0 1px var(--tw-shadow-color,#0006); box-shadow: var(--tw-inset-shadow),var(=
--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),=
var(--tw-shadow); }
  .shadow-\[0_12px_24px_-6px_rgb\(0_0_0_\/_0\.15\)\)\] { --tw-shadow: 0 12p=
x 24px -6px var(--tw-shadow-color,#00000026); box-shadow: var(--tw-inset-sh=
adow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-rin=
g-shadow),var(--tw-shadow); }
  .shadow-\[0_12px_32px_-12px_rgb\(0_0_0_\/_0\.2\)\,_0_0_1px_rgb\(0_0_0_\/_=
0\.3\)\] { --tw-shadow: 0 12px 32px -12px var(--tw-shadow-color,#0003),0 0 =
1px var(--tw-shadow-color,#0000004d); box-shadow: var(--tw-inset-shadow),va=
r(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow=
),var(--tw-shadow); }
  .shadow-\[0_12px_32px_-12px_rgb\(0_0_0_\/_0\.4\)\,0_0_1px_rgb\(0_0_0_\/_0=
\.2\)\] { --tw-shadow: 0 12px 32px -12px var(--tw-shadow-color,#0006),0 0 1=
px var(--tw-shadow-color,#0003); box-shadow: var(--tw-inset-shadow),var(--t=
w-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var=
(--tw-shadow); }
  .shadow-\[0_14px_62px_0_rgba\(0\,0\,0\,0\.25\)\] { --tw-shadow: 0 14px 62=
px 0 var(--tw-shadow-color,#00000040); }
  .shadow-\[0_14px_62px_0_rgba\(0\,0\,0\,0\.25\)\], .shadow-\[0_32px_48px_r=
gba\(0\,0\,0\,0\.175\)\,_0_0_1px_rgba\(0\,0\,0\,0\.2\)\] { box-shadow: var(=
--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow)=
,var(--tw-ring-shadow),var(--tw-shadow); }
  .shadow-\[0_32px_48px_rgba\(0\,0\,0\,0\.175\)\,_0_0_1px_rgba\(0\,0\,0\,0\=
.2\)\] { --tw-shadow: 0 32px 48px var(--tw-shadow-color,#0000002d),0 0 1px =
var(--tw-shadow-color,#0003); }
  .shadow-\[0px_0px_32px_rgba\(0\,0\,0\,0\.08\)\] { --tw-shadow: 0px 0px 32=
px var(--tw-shadow-color,#00000014); }
  .shadow-\[0px_0px_32px_rgba\(0\,0\,0\,0\.08\)\], .shadow-\[0px_0px_48px_r=
gba\(0\,0\,0\,0\.08\)\] { box-shadow: var(--tw-inset-shadow),var(--tw-inset=
-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-s=
hadow); }
  .shadow-\[0px_0px_48px_rgba\(0\,0\,0\,0\.08\)\] { --tw-shadow: 0px 0px 48=
px var(--tw-shadow-color,#00000014); }
  .shadow-\[0px_4px_14px_rgba\(0\,0\,0\,0\.06\)\] { --tw-shadow: 0px 4px 14=
px var(--tw-shadow-color,#0000000f); }
  .shadow-\[0px_4px_14px_rgba\(0\,0\,0\,0\.06\)\], .shadow-\[inset_0_0_0_1p=
x_rgba\(0\,0\,0\,0\.1\)\] { box-shadow: var(--tw-inset-shadow),var(--tw-ins=
et-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw=
-shadow); }
  .shadow-\[inset_0_0_0_1px_rgba\(0\,0\,0\,0\.1\)\] { --tw-shadow: inset 0 =
0 0 1px var(--tw-shadow-color,#0000001a); }
  .shadow-inner { --tw-shadow: inset 0 2px 4px 0 var(--tw-shadow-color,#000=
0000d); }
  .shadow-inner, .shadow-lg { box-shadow: var(--tw-inset-shadow),var(--tw-i=
nset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--=
tw-shadow); }
  .shadow-lg { --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color,#0000001=
a),0 4px 6px -4px var(--tw-shadow-color,#0000001a); }
  .shadow-md { --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color,#0000001a)=
,0 2px 4px -2px var(--tw-shadow-color,#0000001a); }
  .shadow-md, .shadow-none { box-shadow: var(--tw-inset-shadow),var(--tw-in=
set-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--t=
w-shadow); }
  .shadow-none { --tw-shadow: 0 0 #0000; }
  .shadow-none\! { --tw-shadow: 0 0 #0000 !important; box-shadow: var(--tw-=
inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(=
--tw-ring-shadow),var(--tw-shadow) !important; }
  .shadow-sm { --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color,#0000001a),0 =
1px 2px -1px var(--tw-shadow-color,#0000001a); }
  .shadow-sm, .shadow-xl { box-shadow: var(--tw-inset-shadow),var(--tw-inse=
t-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-=
shadow); }
  .shadow-xl { --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color,#0000001=
a),0 8px 10px -6px var(--tw-shadow-color,#0000001a); }
  .shadow-xs { --tw-shadow: 0 0 15px var(--tw-shadow-color,#0000001a); }
  .shadow-xs, .shadow-xxs { box-shadow: var(--tw-inset-shadow),var(--tw-ins=
et-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw=
-shadow); }
  .shadow-xxs { --tw-shadow: 0 0 2px 0 var(--tw-shadow-color,#0000000d),0 4=
px 6px 0 var(--tw-shadow-color,#00000005); }
  .ring { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(1px + var(--tw-=
ring-offset-width))var(--tw-ring-color,currentColor); }
  .ring, .ring-0 { box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-s=
hadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow);=
 }
  .ring-0 { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(var(--tw-ring=
-offset-width))var(--tw-ring-color,currentColor); }
  .ring-0\! { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(var(--tw-ri=
ng-offset-width))var(--tw-ring-color,currentColor) !important; box-shadow: =
var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-sha=
dow),var(--tw-ring-shadow),var(--tw-shadow) !important; }
  .ring-1 { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(1px + var(--t=
w-ring-offset-width))var(--tw-ring-color,currentColor); }
  .ring-1, .ring-2 { box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring=
-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow=
); }
  .ring-2 { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(2px + var(--t=
w-ring-offset-width))var(--tw-ring-color,currentColor); }
  .\[box-shadow\:var\(--sharp-edge-bottom-shadow-placeholder\)\] { box-shad=
ow: var(--sharp-edge-bottom-shadow-placeholder); }
  .\[box-shadow\:var\(--sharp-edge-top-shadow\)\] { box-shadow: var(--sharp=
-edge-top-shadow); }
  .\[box-shadow\:var\(--sharp-edge-top-shadow-placeholder\)\] { box-shadow:=
 var(--sharp-edge-top-shadow-placeholder); }
  .shadow-black\/3 { --tw-shadow-color: oklab(0% none none/.03); }
  .shadow-black\/5 { --tw-shadow-color: oklab(0% none none/.05); }
  .shadow-token-border-default { --tw-shadow-color: var(--border-default); =
}
  .ring-black { --tw-ring-color: #000; }
  .ring-transparent { --tw-ring-color: transparent; }
  .ring-white { --tw-ring-color: #fff; }
  .ring-offset-4 { --tw-ring-offset-width: 4px; --tw-ring-offset-shadow: va=
r(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-co=
lor); }
  .ring-offset-black { --tw-ring-offset-color: #000; }
  .outline-hidden { --tw-outline-style: none; outline-style: none; }
  @media (forced-colors: active) {
  .outline-hidden { outline: rgba(0, 0, 0, 0) solid 2px; outline-offset: 2p=
x; }
}
  .outline { outline-width: 1px; }
  .outline, .outline-0 { outline-style: var(--tw-outline-style); }
  .outline-0 { outline-width: 0px; }
  .outline-0\! { outline-style: var(--tw-outline-style) !important; outline=
-width: 0px !important; }
  .outline-1 { outline-width: 1px; }
  .outline-1, .outline-2 { outline-style: var(--tw-outline-style); }
  .outline-2 { outline-width: 2px; }
  .outline-offset-2 { outline-offset: 2px; }
  .outline-token-border-default { outline-color: var(--border-default); }
  .outline-token-border-medium { outline-color: var(--border-medium); }
  .outline-token-border-xlight { outline-color: var(--border-xlight); }
  .blur { --tw-blur: blur(8px); }
  .blur, .blur-2xl { filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-c=
ontrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw=
-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .blur-2xl { --tw-blur: blur(var(--blur-2xl)); }
  .blur-3xl { --tw-blur: blur(var(--blur-3xl)); }
  .blur-3xl, .blur-lg { filter: var(--tw-blur,)var(--tw-brightness,)var(--t=
w-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(-=
-tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .blur-lg { --tw-blur: blur(var(--blur-lg)); }
  .blur-sm { --tw-blur: blur(var(--blur-sm)); }
  .blur-sm, .blur-xl { filter: var(--tw-blur,)var(--tw-brightness,)var(--tw=
-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--=
tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .blur-xl { --tw-blur: blur(var(--blur-xl)); }
  .drop-shadow-\[0_6px_4px_var\(--shadow-color\)\] { --tw-drop-shadow: drop=
-shadow(0 6px 4px var(--shadow-color)); }
  .drop-shadow-\[0_12px_32px_rgba\(0\,0\,0\,0\.06\)\], .drop-shadow-\[0_6px=
_4px_var\(--shadow-color\)\] { filter: var(--tw-blur,)var(--tw-brightness,)=
var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert=
,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .drop-shadow-\[0_12px_32px_rgba\(0\,0\,0\,0\.06\)\] { --tw-drop-shadow: d=
rop-shadow(0 12px 32px #0000000f); }
  .drop-shadow-md { --tw-drop-shadow: drop-shadow(var(--drop-shadow-md)); }
  .drop-shadow-md, .drop-shadow-xs { filter: var(--tw-blur,)var(--tw-bright=
ness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-=
invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .drop-shadow-xs { --tw-drop-shadow: drop-shadow(var(--drop-shadow-xs)); }
  .grayscale { --tw-grayscale: grayscale(100%); }
  .grayscale, .grayscale-\[0\.6\] { filter: var(--tw-blur,)var(--tw-brightn=
ess,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-i=
nvert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .grayscale-\[0\.6\] { --tw-grayscale: grayscale(.6); }
  .invert { --tw-invert: invert(100%); }
  .invert, .sepia { filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-co=
ntrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-=
saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .sepia { --tw-sepia: sepia(100%); }
  .\[filter\:drop-shadow\(0_4px_4px_rgb\(0_0_0_\/0\.65\)\)\] { filter: drop=
-shadow(rgba(0, 0, 0, 0.65) 0px 4px 4px); }
  .filter { filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)=
var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate=
,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .backdrop-blur-3xl { --tw-backdrop-blur: blur(var(--blur-3xl)); }
  .backdrop-blur-3xl, .backdrop-blur-\[24px\] { backdrop-filter: var(--tw-b=
ackdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var=
(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-i=
nvert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-back=
drop-sepia,); }
  .backdrop-blur-\[24px\] { --tw-backdrop-blur: blur(24px); }
  .backdrop-blur-lg { --tw-backdrop-blur: blur(var(--blur-lg)); }
  .backdrop-blur-lg, .backdrop-blur-md { backdrop-filter: var(--tw-backdrop=
-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-b=
ackdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)=
var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-se=
pia,); }
  .backdrop-blur-md { --tw-backdrop-blur: blur(var(--blur-md)); }
  .backdrop-blur-xl { --tw-backdrop-blur: blur(var(--blur-xl)); }
  .backdrop-blur-xl, .backdrop-blur-xs { backdrop-filter: var(--tw-backdrop=
-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-b=
ackdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)=
var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-se=
pia,); }
  .backdrop-blur-xs { --tw-backdrop-blur: blur(var(--blur-xs)); }
  .backdrop-saturate-25 { --tw-backdrop-saturate: saturate(25%); backdrop-f=
ilter: var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backd=
rop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)va=
r(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-satura=
te,)var(--tw-backdrop-sepia,); }
  .transition { transition-duration: var(--tw-duration,var(--default-transi=
tion-duration)); transition-property: color, background-color, border-color=
, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, -=
-tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, transla=
te, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter; transi=
tion-timing-function: var(--tw-ease,var(--default-transition-timing-functio=
n)); }
  .transition-\[border-color\] { transition-duration: var(--tw-duration,var=
(--default-transition-duration)); transition-property: border-color; transi=
tion-timing-function: var(--tw-ease,var(--default-transition-timing-functio=
n)); }
  .transition-\[filter\] { transition-duration: var(--tw-duration,var(--def=
ault-transition-duration)); transition-property: filter; transition-timing-=
function: var(--tw-ease,var(--default-transition-timing-function)); }
  .transition-\[flex-basis\] { transition-duration: var(--tw-duration,var(-=
-default-transition-duration)); transition-property: flex-basis; transition=
-timing-function: var(--tw-ease,var(--default-transition-timing-function));=
 }
  .transition-\[mask\] { transition-duration: var(--tw-duration,var(--defau=
lt-transition-duration)); transition-property: -webkit-mask, mask; transiti=
on-timing-function: var(--tw-ease,var(--default-transition-timing-function)=
); }
  .transition-\[min-height\] { transition-duration: var(--tw-duration,var(-=
-default-transition-duration)); transition-property: min-height; transition=
-timing-function: var(--tw-ease,var(--default-transition-timing-function));=
 }
  .transition-\[opacity_transform\] { transition-duration: var(--tw-duratio=
n,var(--default-transition-duration)); transition-timing-function: var(--tw=
-ease,var(--default-transition-timing-function)); }
  .transition-\[stroke-dashoffset\] { transition-duration: var(--tw-duratio=
n,var(--default-transition-duration)); transition-property: stroke-dashoffs=
et; transition-timing-function: var(--tw-ease,var(--default-transition-timi=
ng-function)); }
  .transition-\[transform\,opacity\] { transition-duration: var(--tw-durati=
on,var(--default-transition-duration)); transition-property: transform, opa=
city; transition-timing-function: var(--tw-ease,var(--default-transition-ti=
ming-function)); }
  .transition-\[transform_--shadow-color\] { transition-duration: var(--tw-=
duration,var(--default-transition-duration)); transition-timing-function: v=
ar(--tw-ease,var(--default-transition-timing-function)); }
  .transition-\[transform_box-shadow\] { transition-duration: var(--tw-dura=
tion,var(--default-transition-duration)); transition-timing-function: var(-=
-tw-ease,var(--default-transition-timing-function)); }
  .transition-\[width\] { transition-duration: var(--tw-duration,var(--defa=
ult-transition-duration)); transition-property: width; transition-timing-fu=
nction: var(--tw-ease,var(--default-transition-timing-function)); }
  .transition-all { transition-duration: var(--tw-duration,var(--default-tr=
ansition-duration)); transition-property: all; transition-timing-function: =
var(--tw-ease,var(--default-transition-timing-function)); }
  .transition-colors { transition-duration: var(--tw-duration,var(--default=
-transition-duration)); transition-property: color, background-color, borde=
r-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-=
from, --tw-gradient-via, --tw-gradient-to; transition-timing-function: var(=
--tw-ease,var(--default-transition-timing-function)); }
  .transition-opacity { transition-duration: var(--tw-duration,var(--defaul=
t-transition-duration)); transition-property: opacity; transition-timing-fu=
nction: var(--tw-ease,var(--default-transition-timing-function)); }
  .transition-shadow { transition-duration: var(--tw-duration,var(--default=
-transition-duration)); transition-property: box-shadow; transition-timing-=
function: var(--tw-ease,var(--default-transition-timing-function)); }
  .transition-transform { transition-duration: var(--tw-duration,var(--defa=
ult-transition-duration)); transition-property: transform, translate, scale=
, rotate; transition-timing-function: var(--tw-ease,var(--default-transitio=
n-timing-function)); }
  .transition-width { transition-duration: var(--tw-duration,var(--default-=
transition-duration)); transition-property: width; transition-timing-functi=
on: var(--tw-ease,var(--default-transition-timing-function)); }
  .delay-0 { transition-delay: 0s; }
  .delay-75 { transition-delay: 75ms; }
  .delay-100 { transition-delay: 0.1s; }
  .duration-0 { --tw-duration: 0s; transition-duration: 0s; }
  .duration-50 { --tw-duration: 50ms; transition-duration: 50ms; }
  .duration-75 { --tw-duration: 75ms; transition-duration: 75ms; }
  .duration-100 { --tw-duration: .1s; transition-duration: 0.1s; }
  .duration-150 { --tw-duration: .15s; transition-duration: 0.15s; }
  .duration-175 { --tw-duration: .175s; transition-duration: 0.175s; }
  .duration-200 { --tw-duration: .2s; transition-duration: 0.2s; }
  .duration-300 { --tw-duration: .3s; transition-duration: 0.3s; }
  .duration-500 { --tw-duration: .5s; transition-duration: 0.5s; }
  .duration-700 { --tw-duration: .7s; transition-duration: 0.7s; }
  .duration-1000 { --tw-duration: 1s; transition-duration: 1s; }
  .duration-\[0\.24s\] { --tw-duration: .24s; transition-duration: 0.24s; }
  .duration-\[1\.5s\] { --tw-duration: 1.5s; transition-duration: 1.5s; }
  .ease-\[cubic-bezier\(0\.87\,_0\,_0\.13\,_1\)\] { --tw-ease: cubic-bezier=
(.87,0,.13,1); transition-timing-function: cubic-bezier(0.87, 0, 0.13, 1); =
}
  .ease-\[var\(--spring-bounce\)\] { --tw-ease: var(--spring-bounce); trans=
ition-timing-function: var(--spring-bounce); }
  .ease-in { --tw-ease: var(--ease-in); transition-timing-function: var(--e=
ase-in); }
  .ease-in-out { --tw-ease: var(--ease-in-out); transition-timing-function:=
 var(--ease-in-out); }
  .ease-linear { --tw-ease: linear; transition-timing-function: linear; }
  .ease-out { --tw-ease: var(--ease-out); transition-timing-function: var(-=
-ease-out); }
  .ease-spring-slow-bounce { --tw-ease: var(--spring-slow-bounce); transiti=
on-timing-function: var(--spring-slow-bounce); }
  .ease-spring-standard { --tw-ease: var(--spring-common); transition-timin=
g-function: var(--spring-common); }
  .will-change-\[opacity\,transform\] { will-change: opacity, transform; }
  .will-change-transform { will-change: transform; }
  .contain-inline-size { --tw-contain-size: inline-size; contain: var(--tw-=
contain-size,)var(--tw-contain-layout,)var(--tw-contain-paint,)var(--tw-con=
tain-style,); }
  .contain-content { contain: content; }
  .outline-none { --tw-outline-style: none; outline-style: none; }
  .select-none { user-select: none; }
  .select-text { user-select: text; }
  .\[--composer-overlap-px\:24px\] { --composer-overlap-px: 24px; }
  .\[--force-hide-label\:none\] { --force-hide-label: none; }
  .\[--panel-header-height\:var\(--screen-thread-header-min-height\)\] { --=
panel-header-height: var(--screen-thread-header-min-height); }
  .\[--pill-color\:var\(--text-secondary\)\] { --pill-color: var(--text-sec=
ondary); }
  .\[--pill-font-size\:13px\] { --pill-font-size: 13px; }
  .\[--shadow-color\:transparent\] { --shadow-color: transparent; }
  .\[--task-bg\:rgb\(250\,250\,250\)\] { --task-bg: #fafafa; }
  .\[--thread-content-margin\:--spacing\(4\)\] { --thread-content-margin: c=
alc(var(--spacing)*4); }
  .\[--thread-content-max-width\:32rem\] { --thread-content-max-width: 32re=
m; }
  .\[anchor-name\:--carousel\] { anchor-name: --carousel; }
  .\[grid-area\:_title\] { grid-area: title; }
  .\[grid-template-areas\:_\'title_action\'_\'description_action\'\] { grid=
-template-areas: "title action" "description action"; }
  .\[mask-image\:linear-gradient\(to_right\,black_33\%\,transparent_66\%\)\=
] { mask-image: linear-gradient(90deg, rgb(0, 0, 0) 33%, rgba(0, 0, 0, 0) 6=
6%); }
  .\[mask-position\:100\%_0\%\] { mask-position: 100% 0px; }
  .\[mask-size\:300\%_100\%\] { mask-size: 300% 100%; }
  .\[min-block-size\:6px\] { min-block-size: 6px; }
  .\[scrollbar-gutter\:stable\] { scrollbar-gutter: stable; }
  .\[scrollbar-width\:none\] { scrollbar-width: none; }
  .\[scrollbar-width\:thin\] { scrollbar-width: thin; }
  .\[text-box-trim\:trim-both\] { text-box-trim: trim-both; }
  .\[text-decoration-skip-ink\:auto\] { text-decoration-skip-ink: auto; }
  .\[text-underline-position\:from-font\] { text-underline-position: from-f=
ont; }
  .\[view-transition-name\:var\(--sidebar-popover\)\] { view-transition-nam=
e: var(--sidebar-popover); }
  .\[view-transition-name\:var\(--sidebar-slideover\)\] { view-transition-n=
ame: var(--sidebar-slideover); }
  .\[view-transition-name\:var\(--vt-active-image\)\] { view-transition-nam=
e: var(--vt-active-image); }
  .\[view-transition-name\:var\(--vt-composer\)\] { view-transition-name: v=
ar(--vt-composer); }
  .\[view-transition-name\:var\(--vt-composer-whisper-button\)\] { view-tra=
nsition-name: var(--vt-composer-whisper-button); }
  .\[view-transition-name\:var\(--vt-image-carousel\)\] { view-transition-n=
ame: var(--vt-image-carousel); }
  .\[view-transition-name\:var\(--vt-page-footer\)\] { view-transition-name=
: var(--vt-page-footer); }
  .\[view-transition-name\:var\(--vt-page-header\)\] { view-transition-name=
: var(--vt-page-header); }
  .\[view-transition-name\:var\(--vt-page-title\)\] { view-transition-name:=
 var(--vt-page-title); }
  .\[view-transition-name\:var\(--vt-scroll-buttons\)\] { view-transition-n=
ame: var(--vt-scroll-buttons); }
  .\[view-transition-name\:var\(--vt-tool-page-title\)\] { view-transition-=
name: var(--vt-tool-page-title); }
  .ring-inset { --tw-ring-inset: inset; }
  :is(.\*\:pointer-events-auto > *) { pointer-events: auto; }
  :is(.\*\:pointer-events-none > *) { pointer-events: none; }
  :is(.\*\:m-0 > *) { margin: calc(var(--spacing)*0); }
  :is(.\*\:h-full > *) { height: 100%; }
  :is(.\*\:w-full > *) { width: 100%; }
  :is(.\*\:flex-1 > *) { flex: 1 1 0%; }
  :is(.\*\:rounded-md > *) { border-radius: var(--radius-md); }
  :is(.\*\:bg-gray-300 > *) { background-color: rgb(205, 205, 205); }
  :is(.\*\:object-center > *) { object-position: center center; }
  :is(.\*\:p-4 > *) { padding: calc(var(--spacing)*4); }
  :is(.\*\:px-5 > *) { padding-inline: calc(var(--spacing)*5); }
  :is(.\*\:font-normal > *) { --tw-font-weight: var(--font-weight-normal); =
font-weight: var(--font-weight-normal); }
  :is(.\*\:shadow-lg > *) { --tw-shadow: 0 10px 15px -3px var(--tw-shadow-c=
olor,#0000001a),0 4px 6px -4px var(--tw-shadow-color,#0000001a); box-shadow=
: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-s=
hadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .group-focus-within\:text-token-text-secondary:is(:where(.group):focus-wi=
thin *) { color: var(--text-secondary); }
  .group-focus-within\/turn-messages\:pointer-events-auto:is(:where(.group\=
/turn-messages):focus-within *) { pointer-events: auto; }
  .group-focus-within\/turn-messages\:opacity-100:is(:where(.group\/turn-me=
ssages):focus-within *) { opacity: 1; }
  .group-focus-within\/turn-messages\:\[mask-position\:0_0\]:is(:where(.gro=
up\/turn-messages):focus-within *) { mask-position: 0px 0px; }
  @media (hover: hover) {
  .group-hover\:invisible:is(:where(.group):hover *) { visibility: hidden; =
}
  .group-hover\:visible:is(:where(.group):hover *) { visibility: visible; }
  .group-hover\:block:is(:where(.group):hover *) { display: block; }
  .group-hover\:flex:is(:where(.group):hover *) { display: flex; }
  .group-hover\:hidden:is(:where(.group):hover *) { display: none; }
  .group-hover\:-translate-y-\[1px\]:is(:where(.group):hover *) { --tw-tran=
slate-y: -1px; translate: var(--tw-translate-x)var(--tw-translate-y); }
  .group-hover\:translate-y-\[10px\]:is(:where(.group):hover *) { --tw-tran=
slate-y: 10px; translate: var(--tw-translate-x)var(--tw-translate-y); }
  .group-hover\:scale-100:is(:where(.group):hover *) { --tw-scale-x: 100%; =
--tw-scale-y: 100%; --tw-scale-z: 100%; scale: var(--tw-scale-x)var(--tw-sc=
ale-y); }
  .group-hover\:scale-\[1\.02\]:is(:where(.group):hover *) { scale: 1.02; }
  .group-hover\:rotate-\[-2deg\]:is(:where(.group):hover *) { rotate: -2deg=
; }
  .group-hover\:rotate-\[-5deg\]:is(:where(.group):hover *) { rotate: -5deg=
; }
  .group-hover\:border-token-text-primary:is(:where(.group):hover *) { bord=
er-color: var(--text-primary); }
  .group-hover\:border-t-\[\#0077FF\]:is(:where(.group):hover *) { border-t=
op-color: rgb(0, 119, 255); }
  .group-hover\:bg-gray-100:is(:where(.group):hover *) { background-color: =
rgb(236, 236, 236); }
  .group-hover\:bg-token-main-surface-primary:is(:where(.group):hover *) { =
background-color: var(--main-surface-primary); }
  .group-hover\:bg-token-main-surface-secondary:is(:where(.group):hover *) =
{ background-color: var(--main-surface-secondary); }
  .group-hover\:text-red-500:is(:where(.group):hover *) { color: rgb(224, 4=
6, 42); }
  .group-hover\:text-token-interactive-label-accent-default:is(:where(.grou=
p):hover *) { color: var(--interactive-label-accent-default); }
  .group-hover\:text-token-link:is(:where(.group):hover *) { color: var(--l=
ink); }
  .group-hover\:text-token-text-primary:is(:where(.group):hover *) { color:=
 var(--text-primary); }
  .group-hover\:text-token-text-secondary:is(:where(.group):hover *) { colo=
r: var(--text-secondary); }
  .group-hover\:underline:is(:where(.group):hover *) { text-decoration-line=
: underline; }
  .group-hover\:opacity-90:is(:where(.group):hover *) { opacity: 0.9; }
  .group-hover\:opacity-100:is(:where(.group):hover *) { opacity: 1; }
  .group-hover\:shadow-xl:is(:where(.group):hover *) { --tw-shadow: 0 20px =
25px -5px var(--tw-shadow-color,#0000001a),0 8px 10px -6px var(--tw-shadow-=
color,#0000001a); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-sh=
adow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); =
}
  .group-hover\:grayscale-0:is(:where(.group):hover *) { --tw-grayscale: gr=
ayscale(0%); filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,=
)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturat=
e,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .group-hover\/cards\:translate-x-\[-40\%\]:is(:where(.group\/cards):hover=
 *) { --tw-translate-x: -40%; translate: var(--tw-translate-x)var(--tw-tran=
slate-y); }
  .group-hover\/cards\:translate-x-\[4\%\]:is(:where(.group\/cards):hover *=
) { --tw-translate-x: 4%; translate: var(--tw-translate-x)var(--tw-translat=
e-y); }
  .group-hover\/cards\:translate-y-\[-2\%\]:is(:where(.group\/cards):hover =
*) { --tw-translate-y: -2%; translate: var(--tw-translate-x)var(--tw-transl=
ate-y); }
  .group-hover\/cards\:translate-y-\[10\%\]:is(:where(.group\/cards):hover =
*) { --tw-translate-y: 10%; translate: var(--tw-translate-x)var(--tw-transl=
ate-y); }
  .group-hover\/cards\:translate-y-\[12\%\]:is(:where(.group\/cards):hover =
*) { --tw-translate-y: 12%; translate: var(--tw-translate-x)var(--tw-transl=
ate-y); }
  .group-hover\/cards\:rotate-z-\[-16deg\]:is(:where(.group\/cards):hover *=
) { --tw-rotate-z: rotateZ(-16deg); transform: var(--tw-rotate-x)var(--tw-r=
otate-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y); }
  .group-hover\/cards\:rotate-z-\[1deg\]:is(:where(.group\/cards):hover *) =
{ --tw-rotate-z: rotateZ(1deg); transform: var(--tw-rotate-x)var(--tw-rotat=
e-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y); }
  .group-hover\/cards\:rotate-z-\[17deg\]:is(:where(.group\/cards):hover *)=
 { --tw-rotate-z: rotateZ(17deg); transform: var(--tw-rotate-x)var(--tw-rot=
ate-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y); }
  .group-hover\/cell\:opacity-0:is(:where(.group\/cell):hover *) { opacity:=
 0; }
  .group-hover\/cell\:opacity-100:is(:where(.group\/cell):hover *) { opacit=
y: 1; }
  .group-hover\/dalle-image\:visible:is(:where(.group\/dalle-image):hover *=
) { visibility: visible; }
  .group-hover\/dalle-image\:bg-black\/70:is(:where(.group\/dalle-image):ho=
ver *) { background-color: oklab(0 none none / 0.7); }
  .group-hover\/dalle-image\:bg-transparent:is(:where(.group\/dalle-image):=
hover *) { background-color: rgba(0, 0, 0, 0); }
  .group-hover\/file-tile\:block:is(:where(.group\/file-tile):hover *) { di=
splay: block; }
  .group-hover\/footnote\:border-token-main-surface-secondary:is(:where(.gr=
oup\/footnote):hover *) { border-color: var(--main-surface-secondary); }
  .group-hover\/imagegen-image\:opacity-100:is(:where(.group\/imagegen-imag=
e):hover *) { opacity: 1; }
  .group-hover\/nav-list\:underline:is(:where(.group\/nav-list):hover *) { =
text-decoration-line: underline; }
  .group-hover\/navigation\:bg-\[\#1D53BF1A\]:is(:where(.group\/navigation)=
:hover *) { background-color: rgba(29, 83, 191, 0.1); }
  .group-hover\/paragen-image\:visible:is(:where(.group\/paragen-image):hov=
er *) { visibility: visible; }
  .group-hover\/row\:bg-gray-50:is(:where(.group\/row):hover *) { backgroun=
d-color: rgb(249, 249, 249); }
  .group-hover\/row\:opacity-100:is(:where(.group\/row):hover *) { opacity:=
 1; }
  .group-hover\/row\:delay-500:is(:where(.group\/row):hover *) { transition=
-delay: 0.5s; }
  .group-hover\/snorlax-control-tile\:border-token-main-surface-secondary:i=
s(:where(.group\/snorlax-control-tile):hover *) { border-color: var(--main-=
surface-secondary); }
  .group-hover\/stack\:z-11:is(:where(.group\/stack):hover *) { z-index: 11=
; }
  .group-hover\/stack\:-translate-x-2:is(:where(.group\/stack):hover *) { -=
-tw-translate-x: calc(var(--spacing)*-2); translate: var(--tw-translate-x)v=
ar(--tw-translate-y); }
  .group-hover\/stack\:translate-x-2:is(:where(.group\/stack):hover *) { --=
tw-translate-x: calc(var(--spacing)*2); translate: var(--tw-translate-x)var=
(--tw-translate-y); }
  .group-hover\/stack\:translate-y-\[0px\]:is(:where(.group\/stack):hover *=
) { --tw-translate-y: 0px; translate: var(--tw-translate-x)var(--tw-transla=
te-y); }
  .group-hover\/stack\:rotate-\[-3deg\]:is(:where(.group\/stack):hover *) {=
 rotate: -3deg; }
  .group-hover\/stack\:rotate-\[4deg\]:is(:where(.group\/stack):hover *) { =
rotate: 4deg; }
  .group-hover\/stack\:shadow-md:is(:where(.group\/stack):hover *) { --tw-s=
hadow: 0 4px 6px -1px var(--tw-shadow-color,#0000001a),0 2px 4px -2px var(-=
-tw-shadow-color,#0000001a); box-shadow: var(--tw-inset-shadow),var(--tw-in=
set-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--t=
w-shadow); }
  .group-hover\/tldr\:opacity-70:is(:where(.group\/tldr):hover *) { opacity=
: 0.7; }
  .group-hover\/turn-messages\:pointer-events-auto:is(:where(.group\/turn-m=
essages):hover *) { pointer-events: auto; }
  .group-hover\/turn-messages\:opacity-100:is(:where(.group\/turn-messages)=
:hover *) { opacity: 1; }
  .group-hover\/turn-messages\:delay-300:is(:where(.group\/turn-messages):h=
over *) { transition-delay: 0.3s; }
  .group-hover\/turn-messages\:\[mask-position\:0_0\]:is(:where(.group\/tur=
n-messages):hover *) { mask-position: 0px 0px; }
}
  .group-focus\/imagegen-image\:opacity-100:is(:where(.group\/imagegen-imag=
e):focus *), .group-focus\:opacity-100:is(:where(.group):focus *) { opacity=
: 1; }
  @media (hover: hover) {
  .group-hover\:group-enabled\:text-token-text-primary:is(:where(.group):ho=
ver *):is(:where(.group):enabled *) { color: var(--text-primary); }
}
  .group-has-focus\:border-token-border-xheavy:is(:where(.group):has(:focus=
) *) { border-color: var(--border-xheavy); }
  .group-data-disabled\:opacity-50:is(:where(.group)[data-disabled] *) { op=
acity: 0.5; }
  .group-data-scroll-from-top\/thread\:\[box-shadow\:var\(--sharp-edge-top-=
shadow\)\]:is(:where(.group\/thread)[data-scroll-from-top] *) { box-shadow:=
 var(--sharp-edge-top-shadow); }
  .group-data-stream-active\/thread\:h-\(--thread-end-gutter-active-height\=
):is(:where(.group\/thread)[data-stream-active] *) { height: var(--thread-e=
nd-gutter-active-height); }
  .group-data-stream-active\/thread\:\[overflow-anchor\:none\]:is(:where(.g=
roup\/thread)[data-stream-active] *) { overflow-anchor: none; }
  .group-data-\[state\=3Dopen\]\:rotate-180:is(:where(.group)[data-state=3D=
"open"] *) { rotate: 180deg; }
  .group-radix-state-open\:bg-token-bg-tertiary:is(:where(.group)[data-stat=
e=3D"open"] *) { background-color: var(--bg-tertiary); }
  .group-radix-state-open\:bg-token-main-surface-tertiary:is(:where(.group)=
[data-state=3D"open"] *) { background-color: var(--main-surface-tertiary); =
}
  .group-\[\.skeleton\]\:animate-\[shimmer-skeleton_2s_infinite_ease-in-out=
\]:is(:where(.group).skeleton *) { animation: 2s ease-in-out 0s infinite no=
rmal none running shimmer-skeleton; }
  .group-\[\.skeleton\]\:rounded-md:is(:where(.group).skeleton *) { border-=
radius: var(--radius-md); }
  .group-\[\.skeleton\]\:bg-linear-to-r:is(:where(.group).skeleton *) { --t=
w-gradient-position: to right in oklab; background-image: linear-gradient(v=
ar(--tw-gradient-stops)); }
  .group-\[\.skeleton\]\:from-\[\#c1c0c0\]:is(:where(.group).skeleton *) { =
--tw-gradient-from: #c1c0c0; --tw-gradient-stops: var(--tw-gradient-via-sto=
ps,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-fro=
m-position),var(--tw-gradient-to)var(--tw-gradient-to-position)); }
  .group-\[\.skeleton\]\:via-\[\#f1f0f0\]:is(:where(.group).skeleton *) { -=
-tw-gradient-via: #f1f0f0; --tw-gradient-via-stops: var(--tw-gradient-posit=
ion),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradi=
ent-via)var(--tw-gradient-via-position),var(--tw-gradient-to)var(--tw-gradi=
ent-to-position); --tw-gradient-stops: var(--tw-gradient-via-stops); }
  .group-\[\.skeleton\]\:to-\[\#c1c0c0\:\]:is(:where(.group).skeleton *) { =
--tw-gradient-to: #c1c0c0:; --tw-gradient-stops: var(--tw-gradient-via-stop=
s,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from=
-position),var(--tw-gradient-to)var(--tw-gradient-to-position)); }
  .group-\[\.skeleton\]\:\[box-decoration-break\:clone\]:is(:where(.group).=
skeleton *) { -webkit-box-decoration-break: clone; box-decoration-break: cl=
one; }
  .group-\[\.skeleton\]\:bg-\[length\:300\%\]:is(:where(.group).skeleton *)=
 { background-size: 300%; }
  .group-\[\.skeleton\]\:leading-7:is(:where(.group).skeleton *) { --tw-lea=
ding: calc(var(--spacing)*7); line-height: calc(var(--spacing)*7); }
  .group-\[\.skeleton\]\:text-transparent:is(:where(.group).skeleton *) { c=
olor: rgba(0, 0, 0, 0); }
  .group-\[\.skeleton\]\:\[animation-direction\:alternate\]:is(:where(.grou=
p).skeleton *) { animation-direction: alternate; }
  .group-\[\:not\(\:hover\)\:not\(\:focus-within\)\]\:pointer-events-none:i=
s(:where(.group):not(:hover):not(:focus-within) *) { pointer-events: none; =
}
  .group-\[\:not\(\:hover\)\:not\(\:focus-within\)\]\:opacity-0:is(:where(.=
group):not(:hover):not(:focus-within) *) { opacity: 0; }
  .group-\[\:not\(\[data-scroll-from-end\]\)\]\/thread\:pointer-events-none=
:is(:where(.group\/thread):not([data-scroll-from-end]) *) { pointer-events:=
 none; }
  .group-\[\:not\(\[data-scroll-from-end\]\)\]\/thread\:scale-50:is(:where(=
.group\/thread):not([data-scroll-from-end]) *) { --tw-scale-x: 50%; --tw-sc=
ale-y: 50%; --tw-scale-z: 50%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .group-\[\:not\(\[data-scroll-from-end\]\)\]\/thread\:opacity-0:is(:where=
(.group\/thread):not([data-scroll-from-end]) *) { opacity: 0; }
  .group-\[\:not\(\[data-scroll-from-end\]\)\]\/thread\:delay-0:is(:where(.=
group\/thread):not([data-scroll-from-end]) *) { transition-delay: 0s; }
  .group-\[\:not\(\[data-scroll-from-end\]\)\]\/thread\:duration-100:is(:wh=
ere(.group\/thread):not([data-scroll-from-end]) *) { --tw-duration: .1s; tr=
ansition-duration: 0.1s; }
  .group-\[\:not\(\[data-scroll-from-top\]\)\]\/thread\:pointer-events-none=
:is(:where(.group\/thread):not([data-scroll-from-top]) *) { pointer-events:=
 none; }
  .group-\[\:not\(\[data-scroll-from-top\]\)\]\/thread\:scale-50:is(:where(=
.group\/thread):not([data-scroll-from-top]) *) { --tw-scale-x: 50%; --tw-sc=
ale-y: 50%; --tw-scale-z: 50%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .group-\[\:not\(\[data-scroll-from-top\]\)\]\/thread\:opacity-0:is(:where=
(.group\/thread):not([data-scroll-from-top]) *) { opacity: 0; }
  .group-\[\:not\(\[data-scroll-from-top\]\)\]\/thread\:delay-0:is(:where(.=
group\/thread):not([data-scroll-from-top]) *) { transition-delay: 0s; }
  .group-\[\:not\(\[data-scroll-from-top\]\)\]\/thread\:duration-100:is(:wh=
ere(.group\/thread):not([data-scroll-from-top]) *) { --tw-duration: .1s; tr=
ansition-duration: 0.1s; }
  .peer-disabled\:cursor-not-allowed:is(:where(.peer):disabled ~ *) { curso=
r: not-allowed; }
  .peer-disabled\:opacity-70:is(:where(.peer):disabled ~ *) { opacity: 0.7;=
 }
  .first-letter\:uppercase::first-letter { text-transform: uppercase; }
  .marker\:text-token-text-tertiary ::marker { color: var(--text-tertiary);=
 }
  .marker\:text-token-text-tertiary::marker { color: var(--text-tertiary); =
}
  .marker\:text-token-text-tertiary ::-webkit-details-marker, .marker\:text=
-token-text-tertiary::-webkit-details-marker { color: var(--text-tertiary);=
 }
  .placeholder\:ps-px::placeholder { padding-inline-start: 1px; }
  .placeholder\:text-gray-300::placeholder { color: rgb(205, 205, 205); }
  .placeholder\:text-gray-400::placeholder { color: rgb(180, 180, 180); }
  .placeholder\:text-gray-500::placeholder { color: rgb(155, 155, 155); }
  .placeholder\:text-gray-600::placeholder { color: rgb(103, 103, 103); }
  .placeholder\:text-token-text-quaternary::placeholder { color: var(--text=
-quaternary); }
  .placeholder\:text-token-text-secondary::placeholder { color: var(--text-=
secondary); }
  .placeholder\:text-token-text-tertiary::placeholder { color: var(--text-t=
ertiary); }
  .before\:pointer-events-none::before { content: var(--tw-content); pointe=
r-events: none; }
  .before\:absolute::before { content: var(--tw-content); position: absolut=
e; }
  .before\:inset-0::before { content: var(--tw-content); inset: calc(var(--=
spacing)*0); }
  .before\:-inset-x-1::before { content: var(--tw-content); inset-inline: c=
alc(var(--spacing)*-1); }
  .before\:-start-0\.5::before { content: var(--tw-content); inset-inline-s=
tart: calc(var(--spacing)*-.5); }
  .before\:-top-1::before { content: var(--tw-content); top: calc(var(--spa=
cing)*-1); }
  .before\:bottom-0::before { bottom: calc(var(--spacing)*0); content: var(=
--tw-content); }
  .before\:z-\[-1\]::before { content: var(--tw-content); z-index: -1; }
  .before\:bg-\(--task-bg\)::before { background-color: var(--task-bg); con=
tent: var(--tw-content); }
  .before\:bg-white\/50::before { background-color: rgba(255, 255, 255, 0.5=
); content: var(--tw-content); }
  .before\:bg-gradient-to-l::before { --tw-gradient-position: to left in ok=
lab; background-image: linear-gradient(var(--tw-gradient-stops)); content: =
var(--tw-content); }
  .before\:from-token-bg-tertiary::before { --tw-gradient-from: var(--bg-te=
rtiary); --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient=
-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw=
-gradient-to)var(--tw-gradient-to-position)); content: var(--tw-content); }
  .before\:via-token-bg-tertiary::before { --tw-gradient-via: var(--bg-tert=
iary); --tw-gradient-via-stops: var(--tw-gradient-position),var(--tw-gradie=
nt-from)var(--tw-gradient-from-position),var(--tw-gradient-via)var(--tw-gra=
dient-via-position),var(--tw-gradient-to)var(--tw-gradient-to-position); --=
tw-gradient-stops: var(--tw-gradient-via-stops); content: var(--tw-content)=
; }
  .before\:to-transparent::before { --tw-gradient-to: transparent; --tw-gra=
dient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--=
tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(=
--tw-gradient-to-position)); content: var(--tw-content); }
  .before\:content-\[\'\'\]::before { --tw-content: ""; content: var(--tw-c=
ontent); }
  .before\:content-\[\'\*\'\]::before { --tw-content: "*"; content: var(--t=
w-content); }
  .after\:pointer-events-none::after { content: var(--tw-content); pointer-=
events: none; }
  .after\:absolute::after { content: var(--tw-content); position: absolute;=
 }
  .after\:-inset-4::after { content: var(--tw-content); inset: calc(var(--s=
pacing)*-4); }
  .after\:inset-0::after { content: var(--tw-content); inset: calc(var(--sp=
acing)*0); }
  .after\:inset-\[-4px\]::after { content: var(--tw-content); inset: -4px; =
}
  .after\:-inset-x-2::after { content: var(--tw-content); inset-inline: cal=
c(var(--spacing)*-2); }
  .after\:inset-x-2::after { content: var(--tw-content); inset-inline: calc=
(var(--spacing)*2); }
  .after\:inset-x-\[-4px\]::after { content: var(--tw-content); inset-inlin=
e: -4px; }
  .after\:-inset-y-4::after { content: var(--tw-content); inset-block: calc=
(var(--spacing)*-4); }
  .after\:inset-y-0::after { content: var(--tw-content); inset-block: calc(=
var(--spacing)*0); }
  .after\:start-0::after { content: var(--tw-content); inset-inline-start: =
calc(var(--spacing)*0); }
  .after\:start-\[-15px\]::after { content: var(--tw-content); inset-inline=
-start: -15px; }
  .after\:start-\[calc\(100\%_\+_280px\)\]::after { content: var(--tw-conte=
nt); inset-inline-start: calc(100% + 280px); }
  .after\:start-\[calc\(100\%_-_25px\)\]::after { content: var(--tw-content=
); inset-inline-start: calc(100% - 25px); }
  .after\:end-0::after { content: var(--tw-content); inset-inline-end: calc=
(var(--spacing)*0); }
  .after\:end-\[-15\%\]::after { content: var(--tw-content); inset-inline-e=
nd: -15%; }
  .after\:top-0::after { content: var(--tw-content); top: calc(var(--spacin=
g)*0); }
  .after\:top-\[-30px\]::after { content: var(--tw-content); top: -30px; }
  .after\:top-\[-95px\]::after { content: var(--tw-content); top: -95px; }
  .after\:top-\[-100\%\]::after { content: var(--tw-content); top: -100%; }
  .after\:-right-4::after { content: var(--tw-content); }
  [dir=3D"ltr"] .after\:-right-4::after { right: calc(var(--spacing)*-4); }
  [dir=3D"rtl"] .after\:-right-4::after { left: calc(var(--spacing)*-4); }
  .after\:bottom-0::after { bottom: calc(var(--spacing)*0); content: var(--=
tw-content); }
  .after\:bottom-\[75\%\]::after { bottom: 75%; content: var(--tw-content);=
 }
  .after\:-left-1::after { content: var(--tw-content); }
  [dir=3D"ltr"] .after\:-left-1::after { left: calc(var(--spacing)*-1); }
  [dir=3D"rtl"] .after\:-left-1::after { right: calc(var(--spacing)*-1); }
  .after\:z-0::after { content: var(--tw-content); z-index: 0; }
  .after\:z-\[-1\]::after { content: var(--tw-content); z-index: -1; }
  .after\:mx-1::after { content: var(--tw-content); margin-inline: calc(var=
(--spacing)*1); }
  .after\:block::after { content: var(--tw-content); display: block; }
  .after\:h-2::after { content: var(--tw-content); height: calc(var(--spaci=
ng)*2); }
  .after\:h-\[1px\]::after { content: var(--tw-content); height: 1px; }
  .after\:h-\[64px\]::after { content: var(--tw-content); height: 64px; }
  .after\:h-\[120\%\]::after { content: var(--tw-content); height: 120%; }
  .after\:h-\[140px\]::after { content: var(--tw-content); height: 140px; }
  .after\:h-\[144px\]::after { content: var(--tw-content); height: 144px; }
  .after\:h-\[200px\]::after { content: var(--tw-content); height: 200px; }
  .after\:w-1::after { content: var(--tw-content); width: calc(var(--spacin=
g)*1); }
  .after\:w-2::after { content: var(--tw-content); width: calc(var(--spacin=
g)*2); }
  .after\:w-\[75px\]::after { content: var(--tw-content); width: 75px; }
  .after\:w-\[80\%\]::after { content: var(--tw-content); width: 80%; }
  .after\:w-\[113px\]::after { content: var(--tw-content); width: 113px; }
  .after\:w-\[120\%\]::after { content: var(--tw-content); width: 120%; }
  .after\:w-\[255px\]::after { content: var(--tw-content); width: 255px; }
  .after\:max-w-\[340px\]::after { content: var(--tw-content); max-width: 3=
40px; }
  .after\:rounded-\[50\%\]::after { border-radius: 50%; content: var(--tw-c=
ontent); }
  .after\:rounded-lg::after { border-radius: var(--radius-lg); content: var=
(--tw-content); }
  .after\:rounded-md::after { border-radius: var(--radius-md); content: var=
(--tw-content); }
  .after\:bg-\[Highlight\]::after { background-color: highlight; content: v=
ar(--tw-content); }
  .after\:bg-green-500::after { background-color: rgb(0, 162, 64); content:=
 var(--tw-content); }
  .after\:bg-red-500::after { background-color: rgb(224, 46, 42); content: =
var(--tw-content); }
  .after\:bg-token-border-light::after { background-color: var(--border-lig=
ht); content: var(--tw-content); }
  .after\:bg-token-main-surface-primary::after { background-color: var(--ma=
in-surface-primary); content: var(--tw-content); }
  .after\:bg-token-text-primary::after { background-color: var(--text-prima=
ry); content: var(--tw-content); }
  .after\:bg-\[url\(https\:\/\/cdn\.openai\.com\/chatgpt\/ctf-cdn\/student-=
landing\/cards-more-v2\.png\)\]::after { background-image: url("https://cdn=
.openai.com/chatgpt/ctf-cdn/student-landing/cards-more-v2.png"); content: v=
ar(--tw-content); }
  .after\:bg-\[url\(https\:\/\/cdn\.openai\.com\/chatgpt\/ctf-cdn\/student-=
landing\/faq-bubble-small-v2\.png\)\]::after { background-image: url("https=
://cdn.openai.com/chatgpt/ctf-cdn/student-landing/faq-bubble-small-v2.png")=
; content: var(--tw-content); }
  .after\:bg-\[url\(https\:\/\/cdn\.openai\.com\/chatgpt\/ctf-cdn\/student-=
landing\/offer-flowers-v2\.png\)\]::after { background-image: url("https://=
cdn.openai.com/chatgpt/ctf-cdn/student-landing/offer-flowers-v2.png"); cont=
ent: var(--tw-content); }
  .after\:bg-\[url\(https\:\/\/cdn\.openai\.com\/chatgpt\/ctf-cdn\/student-=
landing\/splash-scribble-v2\.png\)\]::after { background-image: url("https:=
//cdn.openai.com/chatgpt/ctf-cdn/student-landing/splash-scribble-v2.png"); =
content: var(--tw-content); }
  .after\:bg-\[url\(https\:\/\/cdn\.openai\.com\/chatgpt\/ctf-cdn\/student-=
landing\/splash-stars-v2\.png\)\]::after { background-image: url("https://c=
dn.openai.com/chatgpt/ctf-cdn/student-landing/splash-stars-v2.png"); conten=
t: var(--tw-content); }
  .after\:bg-contain::after { background-size: contain; content: var(--tw-c=
ontent); }
  .after\:bg-bottom::after { background-position: center bottom; content: v=
ar(--tw-content); }
  .after\:bg-center::after { background-position: 50% center; content: var(=
--tw-content); }
  .after\:bg-no-repeat::after { background-repeat: no-repeat; content: var(=
--tw-content); }
  .after\:opacity-0::after { content: var(--tw-content); opacity: 0; }
  .after\:opacity-80::after { content: var(--tw-content); opacity: 0.8; }
  .after\:opacity-100::after { content: var(--tw-content); opacity: 1; }
  .after\:content-\[\"=C2=B7\"\]::after { --tw-content: "=C2=B7"; content: =
var(--tw-content); }
  .after\:content-\[\'\'\]::after { --tw-content: ""; content: var(--tw-con=
tent); }
  .group-last\:after\:hidden:is(:where(.group):last-child *)::after { conte=
nt: var(--tw-content); display: none; }
  .first\:-ms-1:first-child { margin-inline-start: calc(var(--spacing)*-1);=
 }
  .first\:ms-0:first-child { margin-inline-start: calc(var(--spacing)*0); }
  .first\:ms-4:first-child { margin-inline-start: calc(var(--spacing)*4); }
  .first\:me-0:first-child { margin-inline-end: calc(var(--spacing)*0); }
  .first\:mt-0:first-child { margin-top: calc(var(--spacing)*0); }
  .first\:rounded-t:first-child { border-top-left-radius: 0.25rem; border-t=
op-right-radius: 0.25rem; }
  .first\:rounded-t-lg:first-child { border-top-left-radius: var(--radius-l=
g); border-top-right-radius: var(--radius-lg); }
  .first\:border-0:first-child { border-style: var(--tw-border-style); bord=
er-width: 0px; }
  .first\:border-none:first-child { --tw-border-style: none; border-style: =
none; }
  .first\:ps-0\!:first-child { padding-inline-start: calc(var(--spacing)*0)=
 !important; }
  .first\:pt-\[3px\]:first-child { padding-top: 3px; }
  .last\:me-0:last-child { margin-inline-end: calc(var(--spacing)*0); }
  .last\:me-1\.5:last-child { margin-inline-end: calc(var(--spacing)*1.5); =
}
  .last\:me-4:last-child { margin-inline-end: calc(var(--spacing)*4); }
  .last\:mb-0:last-child { margin-bottom: calc(var(--spacing)*0); }
  .last\:mb-2:last-child { margin-bottom: calc(var(--spacing)*2); }
  .last\:mb-5:last-child { margin-bottom: calc(var(--spacing)*5); }
  .last\:min-h-\[calc\(100vh-8rem\)\]:last-child { min-height: calc(-8rem +=
 100vh); }
  .last\:snap-end:last-child { scroll-snap-align: end; }
  .last\:scroll-mb-20:last-child { scroll-margin-bottom: calc(var(--spacing=
)*20); }
  .last\:scroll-pb-20:last-child { scroll-padding-bottom: calc(var(--spacin=
g)*20); }
  .last\:rounded-b:last-child { border-bottom-left-radius: 0.25rem; border-=
bottom-right-radius: 0.25rem; }
  .last\:rounded-b-lg:last-child { border-bottom-left-radius: var(--radius-=
lg); border-bottom-right-radius: var(--radius-lg); }
  .last\:border-e-0:last-child { border-inline-end-style: var(--tw-border-s=
tyle); border-inline-end-width: 0px; }
  .last\:border-b:last-child { border-bottom-style: var(--tw-border-style);=
 border-bottom-width: 1px; }
  .last\:border-b-0:last-child { border-bottom-style: var(--tw-border-style=
); border-bottom-width: 0px; }
  .last\:border-none:last-child { --tw-border-style: none; border-style: no=
ne; }
  .last\:pe-0:last-child { padding-inline-end: calc(var(--spacing)*0); }
  .last\:pe-0\!:last-child { padding-inline-end: calc(var(--spacing)*0) !im=
portant; }
  .last\:pb-20:last-child { padding-bottom: calc(var(--spacing)*20); }
  .last\:after\:content-\[none\]:last-child::after { --tw-content: none; co=
ntent: var(--tw-content); }
  .first-of-type\:border-none:first-of-type { --tw-border-style: none; bord=
er-style: none; }
  .last-of-type\:border-0:last-of-type { border-style: var(--tw-border-styl=
e); border-width: 0px; }
  .last-of-type\:border-b-0:last-of-type { border-bottom-style: var(--tw-bo=
rder-style); border-bottom-width: 0px; }
  .checked\:border-black\!:checked { border-color: rgb(0, 0, 0) !important;=
 }
  .checked\:border-blue-400\!:checked { border-color: rgb(2, 133, 255) !imp=
ortant; }
  .checked\:border-blue-600:checked { border-color: rgb(0, 79, 153); }
  .checked\:bg-black\!:checked { background-color: rgb(0, 0, 0) !important;=
 }
  .checked\:bg-blue-400\!:checked { background-color: rgb(2, 133, 255) !imp=
ortant; }
  .checked\:bg-blue-600:checked { background-color: rgb(0, 79, 153); }
  .empty\:hidden:empty { display: none; }
  .focus-within\:relative:focus-within { position: relative; }
  .focus-within\:z-10:focus-within { z-index: 10; }
  .focus-within\:border-green-500:focus-within { border-color: rgb(0, 162, =
64); }
  .focus-within\:border-green-600:focus-within { border-color: rgb(0, 134, =
53); }
  .focus-within\:border-token-border-heavy:focus-within { border-color: var=
(--border-heavy); }
  .focus-within\:border-token-border-xheavy:focus-within { border-color: va=
r(--border-xheavy); }
  .focus-within\:bg-token-main-surface-tertiary:focus-within { background-c=
olor: var(--main-surface-tertiary); }
  .focus-within\:opacity-100:focus-within { opacity: 1; }
  .focus-within\:shadow-\[0_0_0_2px\]:focus-within { --tw-shadow: 0 0 0 2px=
 var(--tw-shadow-color,currentcolor); box-shadow: var(--tw-inset-shadow),va=
r(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow=
),var(--tw-shadow); }
  .focus-within\:shadow-none:focus-within { --tw-shadow: 0 0 #0000; box-sha=
dow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offse=
t-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus-within\:ring-0:focus-within { --tw-ring-shadow: var(--tw-ring-inse=
t,)0 0 0 calc(var(--tw-ring-offset-width))var(--tw-ring-color,currentColor)=
; box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-r=
ing-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus-within\:ring-0\!:focus-within { --tw-ring-shadow: var(--tw-ring-in=
set,)0 0 0 calc(var(--tw-ring-offset-width))var(--tw-ring-color,currentColo=
r) !important; box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shado=
w),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow) !imp=
ortant; }
  .focus-within\:ring-1:focus-within { --tw-ring-shadow: var(--tw-ring-inse=
t,)0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color,current=
Color); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(=
--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus-within\:ring-green-600:focus-within { --tw-ring-color: #008635; }
  .focus-within\:ring-token-text-secondary:focus-within { --tw-ring-color: =
var(--text-secondary); }
  .focus-within\:ring-transparent:focus-within { --tw-ring-color: transpare=
nt; }
  .focus-within\:outline-hidden:focus-within { --tw-outline-style: none; ou=
tline-style: none; }
  @media (forced-colors: active) {
  .focus-within\:outline-hidden:focus-within { outline: rgba(0, 0, 0, 0) so=
lid 2px; outline-offset: 2px; }
}
  .focus-within\:transition-none:focus-within { transition-property: none; =
}
  @media (hover: hover) {
  .hover\:visible:hover { visibility: visible; }
  .hover\:scale-105:hover { --tw-scale-x: 105%; --tw-scale-y: 105%; --tw-sc=
ale-z: 105%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .hover\:scale-110:hover { --tw-scale-x: 110%; --tw-scale-y: 110%; --tw-sc=
ale-z: 110%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .hover\:scale-\[1\.015\]:hover { scale: 1.015; }
  .hover\:scale-\[103\%\]:hover { scale: 1.03; }
  .hover\:cursor-default:hover { cursor: default; }
  .hover\:cursor-pointer:hover { cursor: pointer; }
  .hover\:border-black\/0:hover { border-color: oklab(0 none none / 0); }
  .hover\:border-gray-100:hover { border-color: rgb(236, 236, 236); }
  .hover\:border-gray-900:hover { border-color: rgb(23, 23, 23); }
  .hover\:border-token-border-heavy:hover { border-color: var(--border-heav=
y); }
  .hover\:border-token-border-medium:hover { border-color: var(--border-med=
ium); }
  .hover\:border-token-border-xheavy:hover { border-color: var(--border-xhe=
avy); }
  .hover\:border-token-border-xlight:hover { border-color: var(--border-xli=
ght); }
  .hover\:border-b-transparent:hover { border-bottom-color: rgba(0, 0, 0, 0=
); }
  .hover\:bg-\[\#0077FF\]:hover { background-color: rgb(0, 119, 255); }
  .hover\:bg-\[\#BDDCF4\]:hover { background-color: rgb(189, 220, 244); }
  .hover\:bg-\[\#f5f5f5\]:hover { background-color: rgb(245, 245, 245); }
  .hover\:bg-\[rgba\(29\,155\,209\,0\.2\)\]:hover { background-color: rgba(=
29, 155, 209, 0.2); }
  .hover\:bg-\[var\(--snc-hover\)\]:hover { background-color: var(--snc-hov=
er); }
  .hover\:bg-black:hover { background-color: rgb(0, 0, 0); }
  .hover\:bg-black\/5:hover { background-color: oklab(0 none none / 0.05); =
}
  .hover\:bg-black\/10:hover { background-color: oklab(0 none none / 0.1); =
}
  .hover\:bg-black\/\[0\.075\]\!:hover { background-color: oklab(0 none non=
e / 0.075) !important; }
  .hover\:bg-blue-600:hover { background-color: rgb(0, 79, 153); }
  .hover\:bg-blue-800:hover { background-color: rgb(1, 53, 102); }
  .hover\:bg-gray-50:hover { background-color: rgb(249, 249, 249); }
  .hover\:bg-gray-100:hover { background-color: rgb(236, 236, 236); }
  .hover\:bg-gray-100\/75:hover { background-color: rgba(236, 236, 236, 0.7=
5); }
  .hover\:bg-gray-200:hover { background-color: rgb(227, 227, 227); }
  .hover\:bg-gray-300:hover { background-color: rgb(205, 205, 205); }
  .hover\:bg-gray-500\/10:hover { background-color: rgba(155, 155, 155, 0.1=
); }
  .hover\:bg-gray-800:hover { background-color: rgb(33, 33, 33); }
  .hover\:bg-gray-800\/10:hover { background-color: rgba(33, 33, 33, 0.1); =
}
  .hover\:bg-gray-900:hover { background-color: rgb(23, 23, 23); }
  .hover\:bg-gray-900\/30:hover { background-color: rgba(23, 23, 23, 0.3); =
}
  .hover\:bg-orange-400\/10:hover { background-color: rgba(251, 106, 34, 0.=
1); }
  .hover\:bg-purple-100:hover { background-color: rgb(206, 176, 251); }
  .hover\:bg-purple-600:hover { background-color: rgb(107, 58, 180); }
  .hover\:bg-red-500\/10:hover { background-color: rgba(224, 46, 42, 0.1); =
}
  .hover\:bg-red-500\/15:hover { background-color: rgba(224, 46, 42, 0.15);=
 }
  .hover\:bg-token-bg-elevated-secondary:hover { background-color: var(--bg=
-elevated-secondary); }
  .hover\:bg-token-bg-primary:hover { background-color: var(--bg-primary); =
}
  .hover\:bg-token-bg-secondary:hover { background-color: var(--bg-secondar=
y); }
  .hover\:bg-token-bg-tertiary:hover { background-color: var(--bg-tertiary)=
; }
  .hover\:bg-token-border-light:hover { background-color: var(--border-ligh=
t); }
  .hover\:bg-token-border-xlight:hover { background-color: var(--border-xli=
ght); }
  .hover\:bg-token-icon-surface\/10:hover { background-color: color-mix(in =
oklab,rgb(var(--icon-surface)/1) 10%,transparent); }
  .hover\:bg-token-interactive-bg-secondary-hover:hover { background-color:=
 var(--interactive-bg-secondary-hover); }
  .hover\:bg-token-main-surface-primary\!:hover { background-color: var(--m=
ain-surface-primary) !important; }
  .hover\:bg-token-main-surface-primary-inverse:hover { background-color: v=
ar(--main-surface-primary-inverse); }
  .hover\:bg-token-main-surface-secondary:hover { background-color: var(--m=
ain-surface-secondary); }
  .hover\:bg-token-main-surface-secondary\!:hover { background-color: var(-=
-main-surface-secondary) !important; }
  .hover\:bg-token-main-surface-secondary-selected:hover { background-color=
: var(--main-surface-secondary-selected); }
  .hover\:bg-token-main-surface-tertiary:hover { background-color: var(--ma=
in-surface-tertiary); }
  .hover\:bg-token-sidebar-surface-secondary:hover { background-color: var(=
--sidebar-surface-secondary); }
  .hover\:bg-token-sidebar-surface-tertiary:hover { background-color: var(-=
-sidebar-surface-tertiary); }
  .hover\:bg-token-surface-error\/10:hover { background-color: color-mix(in=
 oklab,rgb(var(--surface-error)/1) 10%,transparent); }
  .hover\:bg-token-surface-hover:hover { background-color: var(--surface-ho=
ver); }
  .hover\:bg-token-text-primary:hover { background-color: var(--text-primar=
y); }
  .hover\:bg-token-text-secondary:hover { background-color: var(--text-seco=
ndary); }
  .hover\:bg-transparent:hover { background-color: rgba(0, 0, 0, 0); }
  .hover\:bg-white:hover { background-color: rgb(255, 255, 255); }
  .hover\:bg-white\/40:hover { background-color: rgba(255, 255, 255, 0.4); =
}
  .hover\:text-\[\#0285ff\]\/80:hover { color: rgba(2, 133, 255, 0.8); }
  .hover\:text-\[rgb\(11\,76\,140\)\]:hover { color: rgb(11, 76, 140); }
  .hover\:text-\[var\(--tag-blue-light\)\]:hover { color: var(--tag-blue-li=
ght); }
  .hover\:text-gray-700:hover { color: rgb(66, 66, 66); }
  .hover\:text-red-500:hover { color: rgb(224, 46, 42); }
  .hover\:text-red-700:hover { color: rgb(145, 30, 27); }
  .hover\:text-token-link-hover:hover { color: var(--link-hover); }
  .hover\:text-token-main-surface-secondary\!:hover { color: var(--main-sur=
face-secondary) !important; }
  .hover\:text-token-main-surface-tertiary:hover { color: var(--main-surfac=
e-tertiary); }
  .hover\:text-token-text-inverted:hover { color: var(--text-inverted); }
  .hover\:text-token-text-primary:hover { color: var(--text-primary); }
  .hover\:text-token-text-quaternary:hover { color: var(--text-quaternary);=
 }
  .hover\:text-token-text-secondary:hover { color: var(--text-secondary); }
  .hover\:text-token-text-tertiary:hover { color: var(--text-tertiary); }
  .hover\:text-white:hover { color: rgb(255, 255, 255); }
  .hover\:text-white\/40:hover { color: rgba(255, 255, 255, 0.4); }
  .hover\:no-underline:hover { text-decoration-line: none; }
  .hover\:underline:hover { text-decoration-line: underline; }
  .hover\:opacity-50:hover { opacity: 0.5; }
  .hover\:opacity-65:hover { opacity: 0.65; }
  .hover\:opacity-70:hover { opacity: 0.7; }
  .hover\:opacity-75:hover { opacity: 0.75; }
  .hover\:opacity-80:hover { opacity: 0.8; }
  .hover\:opacity-85:hover { opacity: 0.85; }
  .hover\:opacity-90:hover { opacity: 0.9; }
  .hover\:opacity-100:hover { opacity: 1; }
  .hover\:mix-blend-normal:hover { mix-blend-mode: normal; }
  .hover\:shadow-\[-1px_0_2px_2px_rgba\(255\,0\,0\,0\.4\)\]:hover { --tw-sh=
adow: -1px 0 2px 2px var(--tw-shadow-color,#f006); }
  .hover\:shadow-\[-1px_0_2px_2px_rgba\(255\,0\,0\,0\.4\)\]:hover, .hover\:=
shadow-lg:hover { box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-sh=
adow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); =
}
  .hover\:shadow-lg:hover { --tw-shadow: 0 10px 15px -3px var(--tw-shadow-c=
olor,#0000001a),0 4px 6px -4px var(--tw-shadow-color,#0000001a); }
  .hover\:shadow-md:hover { --tw-shadow: 0 4px 6px -1px var(--tw-shadow-col=
or,#0000001a),0 2px 4px -2px var(--tw-shadow-color,#0000001a); }
  .hover\:shadow-md:hover, .hover\:shadow-sm:hover { box-shadow: var(--tw-i=
nset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(-=
-tw-ring-shadow),var(--tw-shadow); }
  .hover\:shadow-sm:hover { --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color,=
#0000001a),0 1px 2px -1px var(--tw-shadow-color,#0000001a); }
  .hover\:shadow-xl:hover { --tw-shadow: 0 20px 25px -5px var(--tw-shadow-c=
olor,#0000001a),0 8px 10px -6px var(--tw-shadow-color,#0000001a); box-shado=
w: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-=
shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .hover\:shadow-token-border-default:hover { --tw-shadow-color: var(--bord=
er-default); }
  .hover\:transition-none:hover { transition-property: none; }
  .hover\:delay-0:hover { transition-delay: 0s; }
  .hover\:delay-300:hover { transition-delay: 0.3s; }
  .hover\:after\:bg-token-main-surface-tertiary:hover::after { background-c=
olor: var(--main-surface-tertiary); content: var(--tw-content); }
}
  .focus\:border-none:focus { --tw-border-style: none; border-style: none; =
}
  .focus\:border-black:focus { border-color: rgb(0, 0, 0); }
  .focus\:border-gray-200:focus { border-color: rgb(227, 227, 227); }
  .focus\:border-orange-400:focus { border-color: rgb(251, 106, 34); }
  .focus\:border-red-500:focus { border-color: rgb(224, 46, 42); }
  .focus\:border-token-border-medium:focus { border-color: var(--border-med=
ium); }
  .focus\:border-token-text-error:focus { border-color: var(--text-error); =
}
  .focus\:border-token-text-primary:focus { border-color: var(--text-primar=
y); }
  .focus\:border-transparent:focus { border-color: rgba(0, 0, 0, 0); }
  .focus\:bg-token-icon-surface\/10:focus { background-color: color-mix(in =
oklab,rgb(var(--icon-surface)/1) 10%,transparent); }
  .focus\:shadow-none:focus { --tw-shadow: 0 0 #0000; }
  .focus\:ring-0:focus, .focus\:shadow-none:focus { box-shadow: var(--tw-in=
set-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--=
tw-ring-shadow),var(--tw-shadow); }
  .focus\:ring-0:focus { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(=
var(--tw-ring-offset-width))var(--tw-ring-color,currentColor); }
  .focus\:ring-0\!:focus { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 cal=
c(var(--tw-ring-offset-width))var(--tw-ring-color,currentColor) !important;=
 box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ri=
ng-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow) !important; }
  .focus\:ring-2:focus { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(=
2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor); box-sh=
adow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offs=
et-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus\:ring-black:focus { --tw-ring-color: #000; }
  .focus\:ring-blue-400:focus { --tw-ring-color: #0285ff; }
  .focus\:ring-gray-200:focus { --tw-ring-color: #e3e3e3; }
  .focus\:ring-purple-500:focus { --tw-ring-color: #8046d9; }
  .focus\:ring-token-text-primary:focus { --tw-ring-color: var(--text-prima=
ry); }
  .focus\:ring-transparent:focus { --tw-ring-color: transparent; }
  .focus\:ring-white:focus { --tw-ring-color: #fff; }
  .focus\:ring-offset-0:focus { --tw-ring-offset-width: 0px; --tw-ring-offs=
et-shadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-r=
ing-offset-color); }
  .focus\:ring-offset-0\!:focus { --tw-ring-offset-width: 0px !important; -=
-tw-ring-offset-shadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-wid=
th)var(--tw-ring-offset-color) !important; }
  .focus\:outline-hidden:focus { --tw-outline-style: none; outline-style: n=
one; }
  @media (forced-colors: active) {
  .focus\:outline-hidden:focus { outline: rgba(0, 0, 0, 0) solid 2px; outli=
ne-offset: 2px; }
}
  .focus\:outline-0:focus { outline-style: var(--tw-outline-style); outline=
-width: 0px; }
  .focus\:outline-0\!:focus { outline-style: var(--tw-outline-style) !impor=
tant; outline-width: 0px !important; }
  .focus\:outline-none:focus { --tw-outline-style: none; outline-style: non=
e; }
  .focus\:ring-inset:focus { --tw-ring-inset: inset; }
  .focus-visible\:z-11:focus-visible { z-index: 11; }
  .focus-visible\:translate-y-0:focus-visible { --tw-translate-y: calc(var(=
--spacing)*0); translate: var(--tw-translate-x)var(--tw-translate-y); }
  .focus-visible\:rounded-\[inherit\]:focus-visible { border-radius: inheri=
t; }
  .focus-visible\:border-none:focus-visible { --tw-border-style: none; bord=
er-style: none; }
  .focus-visible\:border-token-border-default:focus-visible { border-color:=
 var(--border-default); }
  .focus-visible\:bg-\[\#f5f5f5\]:focus-visible { background-color: rgb(245=
, 245, 245); }
  .focus-visible\:bg-token-icon-surface\/10:focus-visible { background-colo=
r: color-mix(in oklab,rgb(var(--icon-surface)/1) 10%,transparent); }
  .focus-visible\:bg-token-main-surface-secondary:focus-visible { backgroun=
d-color: var(--main-surface-secondary); }
  .focus-visible\:bg-token-surface-hover:focus-visible { background-color: =
var(--surface-hover); }
  .focus-visible\:opacity-100:focus-visible { opacity: 1; }
  .focus-visible\:ring-0:focus-visible { --tw-ring-shadow: var(--tw-ring-in=
set,)0 0 0 calc(var(--tw-ring-offset-width))var(--tw-ring-color,currentColo=
r); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw=
-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus-visible\:ring-2:focus-visible { --tw-ring-shadow: var(--tw-ring-in=
set,)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,curre=
ntColor); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),va=
r(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus-visible\:ring-token-text-quaternary:focus-visible { --tw-ring-colo=
r: var(--text-quaternary); }
  .focus-visible\:ring-token-text-secondary:focus-visible { --tw-ring-color=
: var(--text-secondary); }
  .focus-visible\:ring-offset-1:focus-visible { --tw-ring-offset-width: 1px=
; --tw-ring-offset-shadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-=
width)var(--tw-ring-offset-color); }
  .focus-visible\:ring-offset-2:focus-visible { --tw-ring-offset-width: 2px=
; --tw-ring-offset-shadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-=
width)var(--tw-ring-offset-color); }
  .focus-visible\:ring-offset-transparent:focus-visible { --tw-ring-offset-=
color: transparent; }
  .focus-visible\:outline-hidden:focus-visible { --tw-outline-style: none; =
outline-style: none; }
  @media (forced-colors: active) {
  .focus-visible\:outline-hidden:focus-visible { outline: rgba(0, 0, 0, 0) =
solid 2px; outline-offset: 2px; }
}
  .focus-visible\:outline-0:focus-visible { outline-style: var(--tw-outline=
-style); outline-width: 0px; }
  .focus-visible\:-outline-offset-1:focus-visible { outline-offset: -1px; }
  .focus-visible\:outline-black:focus-visible { outline-color: rgb(0, 0, 0)=
; }
  .active\:scale-98:active { --tw-scale-x: 98%; --tw-scale-y: 98%; --tw-sca=
le-z: 98%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .active\:scale-\[0\.9\]:active { scale: 0.9; }
  .active\:scale-\[0\.98\]:active { scale: 0.98; }
  .active\:bg-black\/20:active { background-color: oklab(0 none none / 0.2)=
; }
  .active\:bg-gray-700:active { background-color: rgb(66, 66, 66); }
  .active\:bg-red-500\/20:active { background-color: rgba(224, 46, 42, 0.2)=
; }
  .active\:bg-token-main-surface-tertiary:active { background-color: var(--=
main-surface-tertiary); }
  .active\:opacity-50:active { opacity: 0.5; }
  .active\:opacity-90:active { opacity: 0.9; }
  .active\:drop-shadow-none:active { --tw-drop-shadow: ; filter: var(--tw-b=
lur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-h=
ue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-dro=
p-shadow,); }
  @media (hover: hover) {
  .enabled\:hover\:bg-black\/5:enabled:hover { background-color: oklab(0 no=
ne none / 0.05); }
  .enabled\:hover\:bg-token-main-surface-secondary:enabled:hover { backgrou=
nd-color: var(--main-surface-secondary); }
  .enabled\:hover\:bg-token-surface-hover:enabled:hover { background-color:=
 var(--surface-hover); }
  .enabled\:hover\:underline:enabled:hover { text-decoration-line: underlin=
e; }
}
  .disabled\:pointer-events-none:disabled { pointer-events: none; }
  .disabled\:cursor-not-allowed:disabled { cursor: not-allowed; }
  .disabled\:bg-\[\#D7D7D7\]:disabled { background-color: rgb(215, 215, 215=
); }
  .disabled\:bg-token-main-surface-tertiary:disabled { background-color: va=
r(--main-surface-tertiary); }
  .disabled\:bg-token-text-quaternary:disabled { background-color: var(--te=
xt-quaternary); }
  .disabled\:text-\[\#f4f4f4\]:disabled { color: rgb(244, 244, 244); }
  .disabled\:text-gray-50:disabled { color: rgb(249, 249, 249); }
  .disabled\:text-token-border-medium:disabled { color: var(--border-medium=
); }
  .disabled\:text-token-text-quaternary:disabled { color: var(--text-quater=
nary); }
  .disabled\:text-token-text-tertiary:disabled { color: var(--text-tertiary=
); }
  .disabled\:opacity-30:disabled { opacity: 0.3; }
  .disabled\:opacity-40:disabled { opacity: 0.4; }
  .disabled\:opacity-50:disabled { opacity: 0.5; }
  .disabled\:opacity-100:disabled { opacity: 1; }
  @media (hover: hover) {
  .disabled\:hover\:bg-transparent:disabled:hover { background-color: rgba(=
0, 0, 0, 0); }
  .disabled\:hover\:opacity-100:disabled:hover { opacity: 1; }
}
  .has-focus\:shadow-\[0_2px_12px_0px_rgba\(0\,0\,0\,0\.04\)\,0_9px_9px_0px=
_rgba\(0\,0\,0\,0\.01\)\,0_2px_5px_0px_rgba\(0\,0\,0\,0\.06\)\]:has(:focus)=
 { --tw-shadow: 0 2px 12px 0px var(--tw-shadow-color,#0000000a),0 9px 9px 0=
px var(--tw-shadow-color,#00000003),0 2px 5px 0px var(--tw-shadow-color,#00=
00000f); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var=
(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .has-focus-visible\:border-token-border-xheavy:has(:focus-visible) { bord=
er-color: var(--border-xheavy); }
  .has-data-has-thread-error\:pt-2:has([data-has-thread-error]) { padding-t=
op: calc(var(--spacing)*2); }
  .has-data-has-thread-error\:\[box-shadow\:var\(--sharp-edge-bottom-shadow=
\)\]:has([data-has-thread-error]) { box-shadow: var(--sharp-edge-bottom-sha=
dow); }
  .has-data-\[state\=3Dopen\]\:pointer-events-auto:has([data-state=3D"open"=
]) { pointer-events: auto; }
  .has-data-\[state\=3Dopen\]\:opacity-100:has([data-state=3D"open"]) { opa=
city: 1; }
  .has-data-\[state\=3Dopen\]\:\[mask-position\:0_0\]:has([data-state=3D"op=
en"]) { mask-position: 0px 0px; }
  .has-\[strong\]\:mb-0:has(:is(strong)) { margin-bottom: calc(var(--spacin=
g)*0); }
  .data-\[state\=3Dactive\]\:block[data-state=3D"active"] { display: block;=
 }
  .data-\[state\=3Dactive\]\:border-b-2[data-state=3D"active"] { border-bot=
tom-style: var(--tw-border-style); border-bottom-width: 2px; }
  .data-\[state\=3Dactive\]\:border-token-link-hover[data-state=3D"active"]=
 { border-color: var(--link-hover); }
  .data-\[state\=3Dactive\]\:text-token-link[data-state=3D"active"] { color=
: var(--link); }
  .data-\[state\=3Dchecked\]\:border-2[data-state=3D"checked"] { border-sty=
le: var(--tw-border-style); border-width: 2px; }
  .data-\[state\=3Dchecked\]\:border-black[data-state=3D"checked"] { border=
-color: rgb(0, 0, 0); }
  .data-\[state\=3Dchecked\]\:bg-black[data-state=3D"checked"] { background=
-color: rgb(0, 0, 0); }
  .data-\[state\=3Dunchecked\]\:m-\[1px\][data-state=3D"unchecked"] { margi=
n: 1px; }
  .data-\[state\=3Dunchecked\]\:border[data-state=3D"unchecked"] { border-s=
tyle: var(--tw-border-style); border-width: 1px; }
  .nth-1\:bg-\[\#FFF493\]:first-child { background-color: rgb(255, 244, 147=
); }
  .nth-2\:bg-\[\#EBEBEB\]:nth-child(2) { background-color: rgb(235, 235, 23=
5); }
  .nth-3\:bg-\[\#94E6FF\]:nth-child(3) { background-color: rgb(148, 230, 25=
5); }
  .nth-4\:bg-\[\#C8F7AB\]:nth-child(4) { background-color: rgb(200, 247, 17=
1); }
  .nth-5\:bg-\[\#B4A6FE\]:nth-child(5) { background-color: rgb(180, 166, 25=
4); }
  @media (prefers-reduced-motion: no-preference) {
  .motion-safe\:block { display: block; }
  .motion-safe\:transition { transition-duration: var(--tw-duration,var(--d=
efault-transition-duration)); transition-property: color, background-color,=
 border-color, outline-color, text-decoration-color, fill, stroke, --tw-gra=
dient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, trans=
form, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-f=
ilter; transition-timing-function: var(--tw-ease,var(--default-transition-t=
iming-function)); }
  .motion-safe\:transition-\[background-color\,transform\] { transition-dur=
ation: var(--tw-duration,var(--default-transition-duration)); transition-pr=
operty: background-color, transform; transition-timing-function: var(--tw-e=
ase,var(--default-transition-timing-function)); }
  .motion-safe\:transition-\[color\,background-color\,border-color\,text-de=
coration-color\,fill\,stroke\,box-shadow\,bottom\] { transition-duration: v=
ar(--tw-duration,var(--default-transition-duration)); transition-property: =
color, background-color, border-color, text-decoration-color, fill, stroke,=
 box-shadow, bottom; transition-timing-function: var(--tw-ease,var(--defaul=
t-transition-timing-function)); }
  .motion-safe\:transition-\[mask-position\] { transition-duration: var(--t=
w-duration,var(--default-transition-duration)); transition-property: -webki=
t-mask-position, mask-position; transition-timing-function: var(--tw-ease,v=
ar(--default-transition-timing-function)); }
  .motion-safe\:transition-all { transition-duration: var(--tw-duration,var=
(--default-transition-duration)); transition-property: all; transition-timi=
ng-function: var(--tw-ease,var(--default-transition-timing-function)); }
  .motion-safe\:transition-colors { transition-duration: var(--tw-duration,=
var(--default-transition-duration)); transition-property: color, background=
-color, border-color, outline-color, text-decoration-color, fill, stroke, -=
-tw-gradient-from, --tw-gradient-via, --tw-gradient-to; transition-timing-f=
unction: var(--tw-ease,var(--default-transition-timing-function)); }
  .motion-safe\:transition-opacity { transition-duration: var(--tw-duration=
,var(--default-transition-duration)); transition-property: opacity; transit=
ion-timing-function: var(--tw-ease,var(--default-transition-timing-function=
)); }
  .motion-safe\:transition-transform { transition-duration: var(--tw-durati=
on,var(--default-transition-duration)); transition-property: transform, tra=
nslate, scale, rotate; transition-timing-function: var(--tw-ease,var(--defa=
ult-transition-timing-function)); }
  .motion-safe\:transition-width { transition-duration: var(--tw-duration,v=
ar(--default-transition-duration)); transition-property: width; transition-=
timing-function: var(--tw-ease,var(--default-transition-timing-function)); =
}
  .motion-safe\:delay-300 { transition-delay: 0.3s; }
  .motion-safe\:duration-100 { --tw-duration: .1s; transition-duration: 0.1=
s; }
  .motion-safe\:duration-300 { --tw-duration: .3s; transition-duration: 0.3=
s; }
  .motion-safe\:\[transition\:0\.3s_transform_var\(--spring-standard\)\,0\.=
5s_opacity_var\(--spring-standard\)\,0\.5s_visibility_var\(--spring-standar=
d\)\] { transition: .3s transform var(--spring-standard),.5s opacity var(--=
spring-standard),.5s visibility var(--spring-standard); }
  .motion-safe\:\[transition\:border-color_0\.1s_ease-in-out\] { transition=
: border-color 0.1s ease-in-out; }
  .motion-safe\:\[transition\:height_0\.3s_var\(--easing-common\)\] { trans=
ition: height .3s var(--easing-common); }
}
  @media (hover: hover) {
  @media (prefers-reduced-motion: no-preference) {
  .hover\:motion-safe\:scale-105:hover { --tw-scale-x: 105%; --tw-scale-y: =
105%; --tw-scale-z: 105%; scale: var(--tw-scale-x)var(--tw-scale-y); }
}
}
  @media (prefers-reduced-motion: no-preference) {
  @media (hover: hover) {
  .motion-safe\:hover\:scale-105:hover { --tw-scale-x: 105%; --tw-scale-y: =
105%; --tw-scale-z: 105%; scale: var(--tw-scale-x)var(--tw-scale-y); }
}
  .motion-safe\:active\:scale-\[98\%\]:active { scale: 0.98; }
  .motion-safe\:active\:transition-transform:active { transition-duration: =
var(--tw-duration,var(--default-transition-duration)); transition-property:=
 transform, translate, scale, rotate; transition-timing-function: var(--tw-=
ease,var(--default-transition-timing-function)); }
}
  @media (max-width: 479px) {
  .max-xs\:hidden { display: none; }
  .max-xs\:max-h-\[260px\] { max-height: 260px; }
  .max-xs\:gap-1 { gap: calc(var(--spacing)*1); }
  .max-xs\:\[--force-hide-label\:none\] { --force-hide-label: none; }
}
  @media (max-width: 63.999rem) {
  .max-lg\:bottom-full { bottom: 100%; }
  .max-lg\:hidden { display: none; }
  .max-lg\:w-0\! { width: calc(var(--spacing)*0) !important; }
  .max-lg\:flex-col-reverse { flex-direction: column-reverse; }
}
  @media (max-width: 47.999rem) {
  .max-md\:sr-only { clip: rect(0px, 0px, 0px, 0px); border-width: 0px; hei=
ght: 1px; margin: -1px; overflow: hidden; padding: 0px; white-space: nowrap=
; width: 1px; }
  .max-md\:absolute, .max-md\:sr-only { position: absolute; }
  .max-md\:start-0 { inset-inline-start: calc(var(--spacing)*0); }
  .max-md\:end-0 { inset-inline-end: calc(var(--spacing)*0); }
  .max-md\:top-0 { top: calc(var(--spacing)*0); }
  .max-md\:mt-\[-80px\] { margin-top: -80px; }
  .max-md\:mb-6 { margin-bottom: calc(var(--spacing)*6); }
  .max-md\:flex { display: flex; }
  .max-md\:hidden { display: none; }
  .max-md\:aspect-square { aspect-ratio: 1 / 1; }
  .max-md\:h-full { height: 100%; }
  .max-md\:\!w-0, .max-md\:w-0\! { width: calc(var(--spacing)*0) !important=
; }
  .max-md\:w-10 { width: calc(var(--spacing)*10); }
  .max-md\:w-\[100dvw\] { width: 100dvw; }
  .max-md\:max-w-\[100dvw\] { max-width: 100dvw; }
  .max-md\:min-w-\[50vw\] { min-width: 50vw; }
  .max-md\:snap-always { scroll-snap-stop: always; }
  .max-md\:items-center { align-items: center; }
  .max-md\:gap-0 { gap: calc(var(--spacing)*0); }
  .max-md\:gap-0\.5 { gap: calc(var(--spacing)*.5); }
  .max-md\:rounded-none { border-radius: 0px; }
  .max-md\:px-0 { padding-inline: calc(var(--spacing)*0); }
  .max-md\:px-4 { padding-inline: calc(var(--spacing)*4); }
  .max-md\:ps-2 { padding-inline-start: calc(var(--spacing)*2); }
  .max-md\:pt-0 { padding-top: calc(var(--spacing)*0); }
  .max-md\:pb-6 { padding-bottom: calc(var(--spacing)*6); }
  .max-md\:opacity-100 { opacity: 1; }
  .max-md\:shadow-none { --tw-shadow: 0 0 #0000; box-shadow: var(--tw-inset=
-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-=
ring-shadow),var(--tw-shadow); }
}
  @media (max-width: 39.999rem) {
  .max-sm\:mt-6 { margin-top: calc(var(--spacing)*6); }
  .max-sm\:mb-3 { margin-bottom: calc(var(--spacing)*3); }
  .max-sm\:mb-4 { margin-bottom: calc(var(--spacing)*4); }
  .max-sm\:hidden { display: none; }
  .max-sm\:h-6 { height: calc(var(--spacing)*6); }
  .max-sm\:h-12 { height: calc(var(--spacing)*12); }
  .max-sm\:max-h-\[300px\] { max-height: 300px; }
  .max-sm\:min-h-\[84px\] { min-height: 84px; }
  .max-sm\:w-6 { width: calc(var(--spacing)*6); }
  .max-sm\:w-12 { width: calc(var(--spacing)*12); }
  .max-sm\:w-full { width: 100%; }
  :where(.max-sm\:space-x-6 > :not(:last-child)) { --tw-space-x-reverse: 0;=
 margin-inline-end: calc(var(--spacing)*6*(1 - var(--tw-space-x-reverse)));=
 margin-inline-start: calc(var(--spacing)*6*var(--tw-space-x-reverse)); }
  .max-sm\:gap-y-2 { row-gap: calc(var(--spacing)*2); }
  .max-sm\:overflow-y-auto { overflow-y: auto; }
  .max-sm\:p-1\.5 { padding: calc(var(--spacing)*1.5); }
  .max-sm\:px-5 { padding-inline: calc(var(--spacing)*5); }
  .max-sm\:py-4 { padding-block: calc(var(--spacing)*4); }
  .max-sm\:text-center { text-align: center; }
  .max-sm\:text-xl { font-size: var(--text-xl); line-height: var(--tw-leadi=
ng,var(--text-xl--line-height)); }
  .max-sm\:shadow-md { --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color,#0=
000001a),0 2px 4px -2px var(--tw-shadow-color,#0000001a); box-shadow: var(-=
-tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),=
var(--tw-ring-shadow),var(--tw-shadow); }
}
  @media (min-width: 480px) {
  .xs\:-mt-4 { margin-top: calc(var(--spacing)*-4); }
  .xs\:max-w-40 { max-width: calc(var(--spacing)*40); }
  .xs\:max-w-sm\! { max-width: var(--container-sm) !important; }
  .xs\:max-w-xs\! { max-width: var(--container-xs) !important; }
  .xs\:columns-2 { column-count: 2; }
  .xs\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .xs\:flex-col { flex-direction: column; }
  .xs\:pe-3 { padding-inline-end: calc(var(--spacing)*3); }
}
  @media (min-width: 1200px) {
  .min-\[1200px\]\:hidden { display: none; }
}
  @media (min-width: 40rem) {
  .sm\:absolute { position: absolute; }
  .sm\:inset-x-4 { inset-inline: calc(var(--spacing)*4); }
  .sm\:start-1\/2 { inset-inline-start: 50%; }
  .sm\:start-6 { inset-inline-start: calc(var(--spacing)*6); }
  .sm\:end-6 { inset-inline-end: calc(var(--spacing)*6); }
  .sm\:top-6 { top: calc(var(--spacing)*6); }
  .sm\:bottom-snc-1 { bottom: var(--snc-1); }
  .sm\:col-span-2 { grid-column: span 2 / span 2; }
  .sm\:-mx-6 { margin-inline: calc(var(--spacing)*-6); }
  .sm\:mx-16 { margin-inline: calc(var(--spacing)*16); }
  .sm\:mx-\[-32px\] { margin-inline: -32px; }
  .sm\:ms-8 { margin-inline-start: calc(var(--spacing)*8); }
  .sm\:me-8 { margin-inline-end: calc(var(--spacing)*8); }
  .sm\:-mt-7 { margin-top: calc(var(--spacing)*-7); }
  .sm\:-mt-12 { margin-top: calc(var(--spacing)*-12); }
  .sm\:mt-0 { margin-top: calc(var(--spacing)*0); }
  .sm\:mt-4 { margin-top: calc(var(--spacing)*4); }
  .sm\:mt-5 { margin-top: calc(var(--spacing)*5); }
  .sm\:mt-auto { margin-top: auto; }
  .sm\:mb-3 { margin-bottom: calc(var(--spacing)*3); }
  .sm\:mb-4 { margin-bottom: calc(var(--spacing)*4); }
  .sm\:mb-6 { margin-bottom: calc(var(--spacing)*6); }
  .sm\:line-clamp-3 { -webkit-line-clamp: 3; -webkit-box-orient: vertical; =
display: -webkit-box; overflow: hidden; }
  .sm\:block { display: block; }
  .sm\:flex { display: flex; }
  .sm\:grid { display: grid; }
  .sm\:hidden { display: none; }
  .sm\:inline { display: inline; }
  .sm\:h-10 { height: calc(var(--spacing)*10); }
  .sm\:h-32 { height: calc(var(--spacing)*32); }
  .sm\:h-\[172px\] { height: 172px; }
  .sm\:h-full { height: 100%; }
  .sm\:h-snc-input-height { height: var(--snc-input-height); }
  .sm\:max-h-80 { max-height: calc(var(--spacing)*80); }
  .sm\:w-10 { width: calc(var(--spacing)*10); }
  .sm\:w-32 { width: calc(var(--spacing)*32); }
  .sm\:w-\[380px\] { width: 380px; }
  .sm\:w-\[384px\] { width: 384px; }
  .sm\:w-\[460px\] { width: 460px; }
  .sm\:w-\[calc\(\(100\%-1rem\)\/4\)\] { width: calc(25% - 0.25rem); }
  .sm\:w-auto { width: auto; }
  .sm\:max-w-2xl { max-width: var(--container-2xl); }
  .sm\:max-w-60 { max-width: calc(var(--spacing)*60); }
  .sm\:max-w-100 { max-width: 25rem; }
  .sm\:max-w-\[400px\] { max-width: 400px; }
  .sm\:max-w-\[552px\] { max-width: 552px; }
  .sm\:max-w-\[700px\] { max-width: 700px; }
  .sm\:max-w-\[calc\(100vw-10rem\)\] { max-width: calc(-10rem + 100vw); }
  .sm\:max-w-md { max-width: var(--container-md); }
  .sm\:max-w-xs { max-width: var(--container-xs); }
  .sm\:min-w-\[300px\] { min-width: 300px; }
  .sm\:min-w-\[360px\] { min-width: 360px; }
  .sm\:grow { flex-grow: 1; }
  .sm\:-translate-x-1\/2 { --tw-translate-x: -50%; translate: var(--tw-tran=
slate-x)var(--tw-translate-y); }
  .sm\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .sm\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .sm\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .sm\:flex-row { flex-direction: row; }
  .sm\:flex-row-reverse { flex-direction: row-reverse; }
  .sm\:items-center { align-items: center; }
  .sm\:justify-center { justify-content: center; }
  .sm\:justify-start { justify-content: flex-start; }
  .sm\:gap-0 { gap: calc(var(--spacing)*0); }
  .sm\:gap-1 { gap: calc(var(--spacing)*1); }
  .sm\:gap-2\.5 { gap: calc(var(--spacing)*2.5); }
  .sm\:gap-3 { gap: calc(var(--spacing)*3); }
  .sm\:gap-4 { gap: calc(var(--spacing)*4); }
  .sm\:gap-6 { gap: calc(var(--spacing)*6); }
  .sm\:gap-x-2\.5 { column-gap: calc(var(--spacing)*2.5); }
  .sm\:gap-x-16 { column-gap: calc(var(--spacing)*16); }
  .sm\:gap-y-0 { row-gap: calc(var(--spacing)*0); }
  .sm\:gap-y-2 { row-gap: calc(var(--spacing)*2); }
  .sm\:gap-y-4 { row-gap: calc(var(--spacing)*4); }
  .sm\:gap-y-5 { row-gap: calc(var(--spacing)*5); }
  .sm\:overflow-hidden { overflow: hidden; }
  .sm\:rounded-\[28px\] { border-radius: 28px; }
  .sm\:rounded-\[30px\] { border-radius: 30px; }
  .sm\:rounded-full { border-radius: 3.40282e+38px; }
  .sm\:rounded-lg { border-radius: var(--radius-lg); }
  .sm\:rounded-md { border-radius: var(--radius-md); }
  .sm\:rounded-ss-xl { border-start-start-radius: var(--radius-xl); }
  .sm\:rounded-se-xl { border-start-end-radius: var(--radius-xl); }
  .sm\:rounded-ee-xl { border-end-end-radius: var(--radius-xl); }
  .sm\:rounded-es-xl { border-end-start-radius: var(--radius-xl); }
  .sm\:rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-=
radius: 30px; }
  .sm\:border-none { --tw-border-style: none; border-style: none; }
  .sm\:bg-token-main-surface-tertiary { background-color: var(--main-surfac=
e-tertiary); }
  .sm\:p-0 { padding: calc(var(--spacing)*0); }
  .sm\:p-2 { padding: calc(var(--spacing)*2); }
  .sm\:p-3 { padding: calc(var(--spacing)*3); }
  .sm\:p-6 { padding: calc(var(--spacing)*6); }
  .sm\:p-8 { padding: calc(var(--spacing)*8); }
  .sm\:p-10 { padding: calc(var(--spacing)*10); }
  .sm\:px-0 { padding-inline: calc(var(--spacing)*0); }
  .sm\:px-2 { padding-inline: calc(var(--spacing)*2); }
  .sm\:px-4 { padding-inline: calc(var(--spacing)*4); }
  .sm\:px-6 { padding-inline: calc(var(--spacing)*6); }
  .sm\:px-8 { padding-inline: calc(var(--spacing)*8); }
  .sm\:px-10 { padding-inline: calc(var(--spacing)*10); }
  .sm\:px-snc-results-padding { padding-inline: var(--snc-results-padding);=
 }
  .sm\:py-2\.5 { padding-block: calc(var(--spacing)*2.5); }
  .sm\:py-3 { padding-block: calc(var(--spacing)*3); }
  .sm\:py-6 { padding-block: calc(var(--spacing)*6); }
  .sm\:ps-2 { padding-inline-start: calc(var(--spacing)*2); }
  .sm\:ps-5 { padding-inline-start: calc(var(--spacing)*5); }
  .sm\:ps-\[3\.25rem\] { padding-inline-start: 3.25rem; }
  .sm\:pt-8 { padding-top: calc(var(--spacing)*8); }
  .sm\:pt-12 { padding-top: calc(var(--spacing)*12); }
  .sm\:pt-16 { padding-top: calc(var(--spacing)*16); }
  .sm\:pb-6 { padding-bottom: calc(var(--spacing)*6); }
  .sm\:pb-8 { padding-bottom: calc(var(--spacing)*8); }
  .sm\:pb-10 { padding-bottom: calc(var(--spacing)*10); }
  .sm\:pb-16 { padding-bottom: calc(var(--spacing)*16); }
  .sm\:text-center { text-align: center; }
  .sm\:text-2xl { font-size: var(--text-2xl); line-height: var(--tw-leading=
,var(--text-2xl--line-height)); }
  .sm\:text-base { font-size: var(--text-base); line-height: var(--tw-leadi=
ng,var(--text-base--line-height)); }
  .sm\:text-lg { font-size: var(--text-lg); line-height: var(--tw-leading,v=
ar(--text-lg--line-height)); }
  .sm\:text-sm { font-size: var(--text-sm); line-height: var(--tw-leading,v=
ar(--text-sm--line-height)); }
  .sm\:text-\[40px\] { font-size: 40px; }
  .sm\:text-token-main-surface-tertiary { color: var(--main-surface-tertiar=
y); }
  .sm\:shadow-lg { --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color,#000=
0001a),0 4px 6px -4px var(--tw-shadow-color,#0000001a); }
  .sm\:shadow-lg, .sm\:shadow-md { box-shadow: var(--tw-inset-shadow),var(-=
-tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),v=
ar(--tw-shadow); }
  .sm\:shadow-md { --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color,#00000=
01a),0 2px 4px -2px var(--tw-shadow-color,#0000001a); }
  @supports (min-height:100dvh) {
  .sm\:supports-\[min-height\:100dvh\]\:min-h-\[100dvh\] { min-height: 100d=
vh; }
}
}
  @media (min-width: 48rem) {
  .md\:absolute { position: absolute; }
  .md\:fixed { position: fixed; }
  .md\:relative { position: relative; }
  .md\:static { position: static; }
  .md\:start-0 { inset-inline-start: calc(var(--spacing)*0); }
  .md\:start-4 { inset-inline-start: calc(var(--spacing)*4); }
  .md\:end-0 { inset-inline-end: calc(var(--spacing)*0); }
  .md\:end-4 { inset-inline-end: calc(var(--spacing)*4); }
  .md\:end-6 { inset-inline-end: calc(var(--spacing)*6); }
  .md\:end-12 { inset-inline-end: calc(var(--spacing)*12); }
  .md\:top-4 { top: calc(var(--spacing)*4); }
  .md\:top-6 { top: calc(var(--spacing)*6); }
  .md\:top-\[22px\] { top: 22px; }
  .md\:top-header-height { top: var(--header-height); }
  .md\:bottom-4 { bottom: calc(var(--spacing)*4); }
  .md\:bottom-6 { bottom: calc(var(--spacing)*6); }
  .md\:col-span-1 { grid-column: span 1 / span 1; }
  .md\:col-span-2 { grid-column: span 2 / span 2; }
  .md\:m-0 { margin: calc(var(--spacing)*0); }
  .md\:mx-4 { margin-inline: calc(var(--spacing)*4); }
  .md\:my-4 { margin-block: calc(var(--spacing)*4); }
  .md\:ms-0 { margin-inline-start: calc(var(--spacing)*0); }
  .md\:ms-8 { margin-inline-start: calc(var(--spacing)*8); }
  .md\:ms-\[-8px\] { margin-inline-start: -8px; }
  .md\:-mt-4 { margin-top: calc(var(--spacing)*-4); }
  .md\:-mt-16 { margin-top: calc(var(--spacing)*-16); }
  .md\:-mt-48 { margin-top: calc(var(--spacing)*-48); }
  .md\:mt-0 { margin-top: calc(var(--spacing)*0); }
  .md\:mt-2 { margin-top: calc(var(--spacing)*2); }
  .md\:mt-3 { margin-top: calc(var(--spacing)*3); }
  .md\:mt-5 { margin-top: calc(var(--spacing)*5); }
  .md\:mt-6 { margin-top: calc(var(--spacing)*6); }
  .md\:mt-8 { margin-top: calc(var(--spacing)*8); }
  .md\:mt-10 { margin-top: calc(var(--spacing)*10); }
  .md\:mt-12 { margin-top: calc(var(--spacing)*12); }
  .md\:mt-\[-48px\] { margin-top: -48px; }
  .md\:mt-\[120px\] { margin-top: 120px; }
  .md\:mt-px { margin-top: 1px; }
  .md\:-mb-4 { margin-bottom: calc(var(--spacing)*-4); }
  .md\:mb-0 { margin-bottom: calc(var(--spacing)*0); }
  .md\:mb-8 { margin-bottom: calc(var(--spacing)*8); }
  .md\:mb-10 { margin-bottom: calc(var(--spacing)*10); }
  .md\:line-clamp-3 { -webkit-line-clamp: 3; -webkit-box-orient: vertical; =
display: -webkit-box; overflow: hidden; }
  .md\:block { display: block; }
  .md\:flex { display: flex; }
  .md\:grid { display: grid; }
  .md\:hidden { display: none; }
  .md\:inline-flex { display: inline-flex; }
  .md\:h-6 { height: calc(var(--spacing)*6); }
  .md\:h-7 { height: calc(var(--spacing)*7); }
  .md\:h-24 { height: calc(var(--spacing)*24); }
  .md\:h-32 { height: calc(var(--spacing)*32); }
  .md\:h-full { height: 100%; }
  .md\:max-h-\[80vh\] { max-height: 80vh; }
  .md\:max-h-\[600px\] { max-height: 600px; }
  .md\:max-h-\[625px\] { max-height: 625px; }
  .md\:max-h-\[calc\(100vh-300px\)\] { max-height: calc(-300px + 100vh); }
  .md\:min-h-\[20rem\] { min-height: 20rem; }
  .md\:min-h-\[30rem\] { min-height: 30rem; }
  .md\:min-h-\[300px\] { min-height: 300px; }
  .md\:min-h-\[380px\] { min-height: 380px; }
  .md\:min-h-\[600px\] { min-height: 600px; }
  .md\:min-h-\[625px\] { min-height: 625px; }
  .md\:w-0 { width: calc(var(--spacing)*0); }
  .md\:w-1\/2 { width: 50%; }
  .md\:w-1\/3 { width: 33.3333%; }
  .md\:w-3\/5 { width: 60%; }
  .md\:w-3xl { width: var(--container-3xl); }
  .md\:w-6 { width: calc(var(--spacing)*6); }
  .md\:w-24 { width: calc(var(--spacing)*24); }
  .md\:w-\[85\%\] { width: 85%; }
  .md\:w-\[100px\] { width: 100px; }
  .md\:w-\[370px\] { width: 370px; }
  .md\:w-\[500px\] { width: 500px; }
  .md\:w-\[720px\] { width: 720px; }
  .md\:w-\[calc\(100\%-\.5rem\)\] { width: calc(100% - 0.5rem); }
  .md\:w-\[calc\(100\%-16rem\)\] { width: calc(100% - 16rem); }
  .md\:w-\[calc\(100\%_-_64px\)\] { width: calc(100% - 64px); }
  .md\:w-auto { width: auto; }
  .md\:w-full { width: 100%; }
  .md\:max-w-3xl { max-width: var(--container-3xl); }
  .md\:max-w-4xl { max-width: var(--container-4xl); }
  .md\:max-w-96 { max-width: calc(var(--spacing)*96); }
  .md\:max-w-\[80\%\] { max-width: 80%; }
  .md\:max-w-\[672px\] { max-width: 672px; }
  .md\:max-w-\[680px\] { max-width: 680px; }
  .md\:max-w-none { max-width: none; }
  .md\:min-w-\[22rem\] { min-width: 22rem; }
  .md\:min-w-\[180px\] { min-width: 180px; }
  .md\:min-w-\[450px\] { min-width: 450px; }
  .md\:min-w-\[680px\] { min-width: 680px; }
  .md\:flex-1 { flex: 1 1 0%; }
  .md\:shrink { flex-shrink: 1; }
  .md\:grow-0 { flex-grow: 0; }
  .md\:basis-0 { flex-basis: calc(var(--spacing)*0); }
  .md\:basis-\[25vw\] { flex-basis: 25vw; }
  .md\:basis-\[75vw\] { flex-basis: 75vw; }
  .md\:translate-y-\[30px\] { --tw-translate-y: 30px; translate: var(--tw-t=
ranslate-x)var(--tw-translate-y); }
  .md\:scroll-ps-8 { scroll-padding-inline-start: calc(var(--spacing)*8); }
  .md\:columns-2 { column-count: 2; }
  .md\:columns-3 { column-count: 3; }
  .md\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .md\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .md\:grid-cols-\[1fr_auto_1fr\] { grid-template-columns: 1fr auto 1fr; }
  .md\:grid-rows-\[minmax\(20px\,1fr\)_auto_20px\] { grid-template-rows: mi=
nmax(20px, 1fr) auto 20px; }
  .md\:grid-rows-\[minmax\(20px\,1fr\)_auto_minmax\(20px\,1fr\)\] { grid-te=
mplate-rows: minmax(20px, 1fr) auto minmax(20px, 1fr); }
  .md\:flex-row { flex-direction: row; }
  .md\:flex-row-reverse { flex-direction: row-reverse; }
  .md\:items-center { align-items: center; }
  .md\:items-end { align-items: flex-end; }
  .md\:items-start { align-items: flex-start; }
  .md\:justify-between { justify-content: space-between; }
  .md\:justify-center { justify-content: center; }
  .md\:gap-0 { gap: calc(var(--spacing)*0); }
  .md\:gap-2 { gap: calc(var(--spacing)*2); }
  .md\:gap-3 { gap: calc(var(--spacing)*3); }
  .md\:gap-5 { gap: calc(var(--spacing)*5); }
  .md\:gap-6 { gap: calc(var(--spacing)*6); }
  .md\:gap-8 { gap: calc(var(--spacing)*8); }
  .md\:gap-10 { gap: calc(var(--spacing)*10); }
  .md\:gap-16 { gap: calc(var(--spacing)*16); }
  .md\:gap-x-2 { column-gap: calc(var(--spacing)*2); }
  .md\:gap-x-4 { column-gap: calc(var(--spacing)*4); }
  .md\:gap-y-1\.5 { row-gap: calc(var(--spacing)*1.5); }
  .md\:self-end { align-self: flex-end; }
  .md\:overflow-hidden { overflow: hidden; }
  .md\:rounded-3xl { border-radius: var(--radius-3xl); }
  .md\:rounded-lg { border-radius: var(--radius-lg); }
  .md\:rounded-none { border-radius: 0px; }
  .md\:border { border-style: var(--tw-border-style); border-width: 1px; }
  .md\:border-s { border-inline-start-style: var(--tw-border-style); border=
-inline-start-width: 1px; }
  .md\:border-e { border-inline-end-width: 1px; }
  .md\:border-e, .md\:border-e-0 { border-inline-end-style: var(--tw-border=
-style); }
  .md\:border-e-0 { border-inline-end-width: 0px; }
  .md\:border-t-0 { border-top-style: var(--tw-border-style); border-top-wi=
dth: 0px; }
  .md\:border-b { border-bottom-width: 1px; }
  .md\:border-b, .md\:border-b-2 { border-bottom-style: var(--tw-border-sty=
le); }
  .md\:border-b-2 { border-bottom-width: 2px; }
  .md\:border-gray-100 { border-color: rgb(236, 236, 236); }
  .md\:border-transparent { border-color: rgba(0, 0, 0, 0); }
  .md\:bg-token-main-surface-primary { background-color: var(--main-surface=
-primary); }
  .md\:bg-transparent { background-color: rgba(0, 0, 0, 0); }
  .md\:bg-transparent\! { background-color: rgba(0, 0, 0, 0) !important; }
  .md\:bg-vert-light-gradient { background-image: linear-gradient(rgba(255,=
 255, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }
  .md\:p-3 { padding: calc(var(--spacing)*3); }
  .md\:p-4 { padding: calc(var(--spacing)*4); }
  .md\:p-6 { padding: calc(var(--spacing)*6); }
  .md\:px-0 { padding-inline: calc(var(--spacing)*0); }
  .md\:px-2 { padding-inline: calc(var(--spacing)*2); }
  .md\:px-3 { padding-inline: calc(var(--spacing)*3); }
  .md\:px-3\.5 { padding-inline: calc(var(--spacing)*3.5); }
  .md\:px-4 { padding-inline: calc(var(--spacing)*4); }
  .md\:px-5 { padding-inline: calc(var(--spacing)*5); }
  .md\:px-6 { padding-inline: calc(var(--spacing)*6); }
  .md\:px-8 { padding-inline: calc(var(--spacing)*8); }
  .md\:px-12 { padding-inline: calc(var(--spacing)*12); }
  .md\:px-\[60px\] { padding-inline: 60px; }
  .md\:py-0 { padding-block: calc(var(--spacing)*0); }
  .md\:py-2 { padding-block: calc(var(--spacing)*2); }
  .md\:py-3 { padding-block: calc(var(--spacing)*3); }
  .md\:py-4 { padding-block: calc(var(--spacing)*4); }
  .md\:py-20 { padding-block: calc(var(--spacing)*20); }
  .md\:py-32 { padding-block: calc(var(--spacing)*32); }
  .md\:py-\[22px\] { padding-block: 22px; }
  .md\:ps-0 { padding-inline-start: calc(var(--spacing)*0); }
  .md\:ps-2 { padding-inline-start: calc(var(--spacing)*2); }
  .md\:ps-3 { padding-inline-start: calc(var(--spacing)*3); }
  .md\:ps-4 { padding-inline-start: calc(var(--spacing)*4); }
  .md\:ps-6 { padding-inline-start: calc(var(--spacing)*6); }
  .md\:ps-8 { padding-inline-start: calc(var(--spacing)*8); }
  .md\:pe-0 { padding-inline-end: calc(var(--spacing)*0); }
  .md\:pe-3 { padding-inline-end: calc(var(--spacing)*3); }
  .md\:pe-4 { padding-inline-end: calc(var(--spacing)*4); }
  .md\:pe-8 { padding-inline-end: calc(var(--spacing)*8); }
  .md\:pt-0 { padding-top: calc(var(--spacing)*0); }
  .md\:pt-0\! { padding-top: calc(var(--spacing)*0) !important; }
  .md\:pt-2 { padding-top: calc(var(--spacing)*2); }
  .md\:pt-4 { padding-top: calc(var(--spacing)*4); }
  .md\:pt-5 { padding-top: calc(var(--spacing)*5); }
  .md\:pt-\[3px\] { padding-top: 3px; }
  .md\:pt-\[4\.5rem\] { padding-top: 4.5rem; }
  .md\:pt-header-height { padding-top: var(--header-height); }
  .md\:pb-0 { padding-bottom: calc(var(--spacing)*0); }
  .md\:pb-2 { padding-bottom: calc(var(--spacing)*2); }
  .md\:pb-4 { padding-bottom: calc(var(--spacing)*4); }
  .md\:pb-5 { padding-bottom: calc(var(--spacing)*5); }
  .md\:pb-6 { padding-bottom: calc(var(--spacing)*6); }
  .md\:pb-10 { padding-bottom: calc(var(--spacing)*10); }
  [dir=3D"ltr"] .md\:pl-2 { padding-left: calc(var(--spacing)*2); }
  [dir=3D"rtl"] .md\:pl-2 { padding-right: calc(var(--spacing)*2); }
  [dir=3D"ltr"] .md\:pl-4 { padding-left: calc(var(--spacing)*4); }
  [dir=3D"rtl"] .md\:pl-4 { padding-right: calc(var(--spacing)*4); }
  .md\:text-justify { text-align: justify; }
  .md\:text-start { text-align: start; }
  .md\:text-2xl { font-size: var(--text-2xl); line-height: var(--tw-leading=
,var(--text-2xl--line-height)); }
  .md\:text-3xl { font-size: var(--text-3xl); line-height: var(--tw-leading=
,var(--text-3xl--line-height)); }
  .md\:text-5xl { font-size: var(--text-5xl); line-height: var(--tw-leading=
,var(--text-5xl--line-height)); }
  .md\:text-base { font-size: var(--text-base); line-height: var(--tw-leadi=
ng,var(--text-base--line-height)); }
  .md\:text-lg { font-size: var(--text-lg); line-height: var(--tw-leading,v=
ar(--text-lg--line-height)); }
  .md\:text-\[32px\] { font-size: 32px; }
  .md\:text-\[40px\] { font-size: 40px; }
  .md\:text-\[44px\] { font-size: 44px; }
  .md\:leading-8 { --tw-leading: calc(var(--spacing)*8); line-height: calc(=
var(--spacing)*8); }
  .md\:leading-tight { --tw-leading: var(--leading-tight); line-height: var=
(--leading-tight); }
  .md\:text-pretty { text-wrap: pretty; }
  .md\:text-token-text-primary { color: var(--text-primary); }
  .md\:text-token-text-tertiary { color: var(--text-tertiary); }
  .md\:opacity-0 { opacity: 0; }
  .md\:opacity-100 { opacity: 1; }
  .md\:shadow-\[0px_12px_24px_rgba\(0\,0\,0\,0\.032\)\] { --tw-shadow: 0px =
12px 24px var(--tw-shadow-color,#00000008); }
  .md\:shadow-\[0px_12px_24px_rgba\(0\,0\,0\,0\.032\)\], .md\:shadow-lg { b=
ox-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring=
-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .md\:shadow-lg { --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color,#000=
0001a),0 4px 6px -4px var(--tw-shadow-color,#0000001a); }
  .md\:\[--gutter-min-height\:2\.25rem\] { --gutter-min-height: 2.25rem; }
  .md\:after\:opacity-0::after { content: var(--tw-content); opacity: 0; }
  .md\:after\:opacity-100::after { content: var(--tw-content); opacity: 1; =
}
  .md\:first\:ms-0:first-child { margin-inline-start: calc(var(--spacing)*0=
); }
  .md\:first\:rounded-ss-xl:first-child { border-start-start-radius: var(--=
radius-xl); }
  .md\:first\:rounded-es-xl:first-child { border-end-start-radius: var(--ra=
dius-xl); }
  .md\:last\:me-0:last-child { margin-inline-end: calc(var(--spacing)*0); }
  .md\:last\:mb-6:last-child { margin-bottom: calc(var(--spacing)*6); }
  .md\:last\:rounded-se-xl:last-child { border-start-end-radius: var(--radi=
us-xl); }
  .md\:last\:rounded-ee-xl:last-child { border-end-end-radius: var(--radius=
-xl); }
  .md\:last\:border-e:last-child { border-inline-end-style: var(--tw-border=
-style); border-inline-end-width: 1px; }
  @media (hover: hover) {
  .md\:hover\:bg-gray-50:hover { background-color: rgb(249, 249, 249); }
}
}
  @media (min-width: 64rem) {
  .lg\:end-3 { inset-inline-end: calc(var(--spacing)*3); }
  .lg\:top-full { top: 100%; }
  .lg\:bottom-3 { bottom: calc(var(--spacing)*3); }
  .lg\:order-3 { order: 3; }
  .lg\:order-last { order: 9999; }
  .lg\:-mx-8 { margin-inline: calc(var(--spacing)*-8); }
  .lg\:mx-auto { margin-inline: auto; }
  .lg\:block { display: block; }
  .lg\:hidden { display: none; }
  .lg\:h-36 { height: calc(var(--spacing)*36); }
  .lg\:w-3xl { width: var(--container-3xl); }
  .lg\:w-\[53\%\] { width: 53%; }
  .lg\:w-\[80\%\] { width: 80%; }
  .lg\:w-full { width: 100%; }
  .lg\:max-w-2xl { max-width: var(--container-2xl); }
  .lg\:max-w-52 { max-width: calc(var(--spacing)*52); }
  .lg\:max-w-\[40rem\] { max-width: 40rem; }
  .lg\:max-w-\[796px\] { max-width: 796px; }
  .lg\:max-w-\[800px\] { max-width: 800px; }
  .lg\:max-w-md { max-width: var(--container-md); }
  .lg\:grow { flex-grow: 1; }
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .lg\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .lg\:grid-cols-\[60\%_40\%\] { grid-template-columns: 60% 40%; }
  .lg\:flex-row { flex-direction: row; }
  .lg\:items-end { align-items: flex-end; }
  .lg\:justify-between { justify-content: space-between; }
  .lg\:gap-6 { gap: calc(var(--spacing)*6); }
  .lg\:gap-x-3 { column-gap: calc(var(--spacing)*3); }
  .lg\:gap-x-6 { column-gap: calc(var(--spacing)*6); }
  .lg\:gap-y-2\.5 { row-gap: calc(var(--spacing)*2.5); }
  .lg\:border-s { border-inline-start-style: var(--tw-border-style); border=
-inline-start-width: 1px; }
  .lg\:border-e { border-inline-end-style: var(--tw-border-style); border-i=
nline-end-width: 1px; }
  .lg\:border-b-0 { border-bottom-style: var(--tw-border-style); border-bot=
tom-width: 0px; }
  .lg\:px-0 { padding-inline: calc(var(--spacing)*0); }
  .lg\:px-2 { padding-inline: calc(var(--spacing)*2); }
  .lg\:px-3 { padding-inline: calc(var(--spacing)*3); }
  .lg\:px-4 { padding-inline: calc(var(--spacing)*4); }
  .lg\:px-8 { padding-inline: calc(var(--spacing)*8); }
  .lg\:px-10 { padding-inline: calc(var(--spacing)*10); }
  .lg\:px-16 { padding-inline: calc(var(--spacing)*16); }
  .lg\:py-3 { padding-block: calc(var(--spacing)*3); }
  .lg\:py-6 { padding-block: calc(var(--spacing)*6); }
  .lg\:py-10 { padding-block: calc(var(--spacing)*10); }
  .lg\:ps-4 { padding-inline-start: calc(var(--spacing)*4); }
  .lg\:ps-10 { padding-inline-start: calc(var(--spacing)*10); }
  .lg\:pe-4 { padding-inline-end: calc(var(--spacing)*4); }
  .lg\:pt-8 { padding-top: calc(var(--spacing)*8); }
  .lg\:pb-4 { padding-bottom: calc(var(--spacing)*4); }
  .lg\:text-start { text-align: start; }
  .lg\:text-\[22px\] { font-size: 22px; }
}
  @media (min-width: 80rem) {
  .xl\:min-h-44 { min-height: calc(var(--spacing)*44); }
  .xl\:max-w-3xl { max-width: var(--container-3xl); }
  .xl\:max-w-4xl { max-width: var(--container-4xl); }
  .xl\:max-w-64 { max-width: calc(var(--spacing)*64); }
  .xl\:max-w-\[48rem\] { max-width: 48rem; }
  .xl\:max-w-xl { max-width: var(--container-xl); }
  .xl\:max-w-xs { max-width: var(--container-xs); }
  .xl\:gap-2 { gap: calc(var(--spacing)*2); }
  .xl\:gap-x-2\.5 { column-gap: calc(var(--spacing)*2.5); }
  .xl\:gap-y-2\.5 { row-gap: calc(var(--spacing)*2.5); }
  .xl\:px-2 { padding-inline: calc(var(--spacing)*2); }
  .xl\:px-3 { padding-inline: calc(var(--spacing)*3); }
  .xl\:px-24 { padding-inline: calc(var(--spacing)*24); }
  .xl\:pt-10 { padding-top: calc(var(--spacing)*10); }
  .xl\:text-\[14px\] { font-size: 14px; }
}
  @media (min-width: 96rem) {
  .\32 xl\:max-w-\[800px\] { max-width: 800px; }
  .\32 xl\:scroll-ps-\[calc\(\(100\%_-_96rem\)_\/_2_\+_32px\)\] { scroll-pa=
dding-inline-start: calc(50% + 32px - 48rem); }
  .\32 xl\:ps-\[calc\(\(100\%_-_96rem\)_\/_2_\+_32px\)\] { padding-inline-s=
tart: calc(50% + 32px - 48rem); }
  .\32 xl\:pt-12 { padding-top: calc(var(--spacing)*12); }
  .\32 xl\:text-xl { font-size: var(--text-xl); line-height: var(--tw-leadi=
ng,var(--text-xl--line-height)); }
}
  @container (width < 48rem) {
  .\@max-3xl\:-top-2 { top: calc(var(--spacing)*-2); }
}
  @container (width >=3D 0) {
  .\@\[0px\]\:hidden { display: none; }
}
  @container (width >=3D 150px) {
  .\@\[150px\]\:block { display: block; }
}
  @container composer (width >=3D 300px) {
  .\@\[300px\]\/composer\:flex { display: flex; }
}
  @container composer (width >=3D 310px) {
  .\@\[310px\]\/composer\:flex { display: flex; }
}
  @container composer (width >=3D 400px) {
  .\@\[400px\]\/composer\:flex { display: flex; }
}
  @container composer (width >=3D 800px) {
  .\@\[800px\]\/composer\:flex { display: flex; }
}
  @container thread (width >=3D 32rem) {
  .\@lg\/thread\:block { display: block; }
  .\@lg\/thread\:flex { display: flex; }
  .\@lg\/thread\:hidden { display: none; }
  .\@lg\/thread\:grow { flex-grow: 1; }
  .\@lg\/thread\:items-end { align-items: flex-end; }
}
  @container (width >=3D 34rem) {
  .\@\[34rem\]\:\[--thread-content-max-width\:40rem\] { --thread-content-ma=
x-width: 40rem; }
}
  @container (width >=3D 37rem) {
  .\@\[37rem\]\:\[--thread-content-margin\:--spacing\(6\)\] { --thread-cont=
ent-margin: calc(var(--spacing)*6); }
}
  @container (width >=3D 42rem) {
  .\@2xl\:flex-row { flex-direction: row; }
  .\@2xl\:justify-between { justify-content: space-between; }
  .\@2xl\:text-start { text-align: start; }
}
  @container (width >=3D 48rem) {
  .\@3xl\:-start-3 { inset-inline-start: calc(var(--spacing)*-3); }
  .\@3xl\:-top-4 { top: calc(var(--spacing)*-4); }
}
  @container (width >=3D 64rem) {
  .\@\[64rem\]\:\[--thread-content-max-width\:48rem\] { --thread-content-ma=
x-width: 48rem; }
}
  @container (width >=3D 72rem) {
  .\@\[72rem\]\:\[--thread-content-margin\:--spacing\(16\)\] { --thread-con=
tent-margin: calc(var(--spacing)*16); }
}
  @container thread (width >=3D 84rem) {
  .\@\[84rem\]\/thread\:absolute { position: absolute; }
  .\@\[84rem\]\/thread\:start-0 { inset-inline-start: calc(var(--spacing)*0=
); }
  .\@\[84rem\]\/thread\:end-0 { inset-inline-end: calc(var(--spacing)*0); }
  .\@\[84rem\]\/thread\:bg-transparent { background-color: rgba(0, 0, 0, 0)=
; }
  .\@\[84rem\]\/thread\:pt-\(--header-height\) { padding-top: var(--header-=
height); }
  .\@\[84rem\]\/thread\:shadow-none\! { --tw-shadow: 0 0 #0000 !important; =
box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-rin=
g-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow) !important; }
}
  .ltr\:end-0:where(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) { inset-inli=
ne-end: calc(var(--spacing)*0); }
  .ltr\:me-auto:where(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) { margin-i=
nline-end: auto; }
  .ltr\:-translate-x-1\/2:where(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) =
{ --tw-translate-x: -50%; translate: var(--tw-translate-x)var(--tw-translat=
e-y); }
  .ltr\:translate-x-0\.5:where(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) {=
 --tw-translate-x: calc(var(--spacing)*.5); translate: var(--tw-translate-x=
)var(--tw-translate-y); }
  .ltr\:-rotate-90:where(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) { rotat=
e: -90deg; }
  .rtl\:start-0:where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { inset-in=
line-start: calc(var(--spacing)*0); }
  .rtl\:ms-auto:where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { margin-i=
nline-start: auto; }
  .rtl\:-translate-x-0\.5:where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) =
{ --tw-translate-x: calc(var(--spacing)*-.5); translate: var(--tw-translate=
-x)var(--tw-translate-y); }
  .rtl\:translate-x-1\/2:where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) {=
 --tw-translate-x: 50%; translate: var(--tw-translate-x)var(--tw-translate-=
y); }
  .rtl\:-scale-x-100:where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { --t=
w-scale-x: -100%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .rtl\:rotate-90:where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { rotate=
: 90deg; }
  .rtl\:items-start:where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { alig=
n-items: flex-start; }
  :where(.dark\:divide-gray-900:is(.dark *) > :not(:last-child)) { border-c=
olor: rgb(23, 23, 23); }
  :where(.dark\:divide-token-border-heavy:is(.dark *) > :not(:last-child)) =
{ border-color: var(--border-heavy); }
  .dark\:border:is(.dark *) { border-style: var(--tw-border-style); border-=
width: 1px; }
  .dark\:border-e:is(.dark *) { border-inline-end-style: var(--tw-border-st=
yle); border-inline-end-width: 1px; }
  .dark\:border-b:is(.dark *) { border-bottom-style: var(--tw-border-style)=
; border-bottom-width: 1px; }
  .dark\:border-none:is(.dark *) { --tw-border-style: none; border-style: n=
one; }
  .dark\:border-\[\#0088FF\]:is(.dark *) { border-color: rgb(0, 136, 255); =
}
  .dark\:border-\[\#252525\]:is(.dark *) { border-color: rgb(37, 37, 37); }
  .dark\:border-\[rgba\(255\,255\,255\,0\.1\)\]:is(.dark *) { border-color:=
 rgba(255, 255, 255, 0.1); }
  .dark\:border-black\/20:is(.dark *) { border-color: oklab(0 none none / 0=
.2); }
  .dark\:border-gray-300:is(.dark *) { border-color: rgb(205, 205, 205); }
  .dark\:border-gray-500:is(.dark *) { border-color: rgb(155, 155, 155); }
  .dark\:border-gray-600:is(.dark *) { border-color: rgb(103, 103, 103); }
  .dark\:border-gray-700:is(.dark *) { border-color: rgb(66, 66, 66); }
  .dark\:border-gray-800:is(.dark *) { border-color: rgb(33, 33, 33); }
  .dark\:border-token-border-default:is(.dark *) { border-color: var(--bord=
er-default); }
  .dark\:border-token-border-heavy:is(.dark *) { border-color: var(--border=
-heavy); }
  .dark\:border-token-border-light:is(.dark *) { border-color: var(--border=
-light); }
  .dark\:border-token-border-medium:is(.dark *) { border-color: var(--borde=
r-medium); }
  .dark\:border-token-border-medium\!:is(.dark *) { border-color: var(--bor=
der-medium) !important; }
  .dark\:border-token-border-xheavy:is(.dark *) { border-color: var(--borde=
r-xheavy); }
  .dark\:border-token-border-xlight:is(.dark *) { border-color: var(--borde=
r-xlight); }
  .dark\:border-token-main-surface-secondary:is(.dark *) { border-color: va=
r(--main-surface-secondary); }
  .dark\:border-transparent:is(.dark *) { border-color: rgba(0, 0, 0, 0); }
  .dark\:border-white:is(.dark *) { border-color: rgb(255, 255, 255); }
  .dark\:border-white\/5:is(.dark *) { border-color: rgba(255, 255, 255, 0.=
05); }
  .dark\:border-white\/10:is(.dark *) { border-color: rgba(255, 255, 255, 0=
.1); }
  .dark\:border-white\/20:is(.dark *) { border-color: rgba(255, 255, 255, 0=
.2); }
  .dark\:border-x-token-border-xheavy:is(.dark *) { border-inline-color: va=
r(--border-xheavy); }
  .dark\:border-b-white:is(.dark *) { border-bottom-color: rgb(255, 255, 25=
5); }
  .dark\:prose-invert:is(.dark *) { --tw-prose-body: var(--tw-prose-invert-=
body); --tw-prose-headings: var(--tw-prose-invert-headings); --tw-prose-lea=
d: var(--tw-prose-invert-lead); --tw-prose-links: var(--tw-prose-invert-lin=
ks); --tw-prose-bold: var(--tw-prose-invert-bold); --tw-prose-counters: var=
(--tw-prose-invert-counters); --tw-prose-bullets: var(--tw-prose-invert-bul=
lets); --tw-prose-hr: var(--tw-prose-invert-hr); --tw-prose-quotes: var(--t=
w-prose-invert-quotes); --tw-prose-quote-borders: var(--tw-prose-invert-quo=
te-borders); --tw-prose-captions: var(--tw-prose-invert-captions); --tw-pro=
se-code: var(--tw-prose-invert-code); --tw-prose-pre-code: var(--tw-prose-i=
nvert-pre-code); --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg); --tw-pro=
se-th-borders: var(--tw-prose-invert-th-borders); --tw-prose-td-borders: va=
r(--tw-prose-invert-td-borders); }
  .dark\:prose-invert:is(.dark *) :where(pre):not(:where([class~=3D"not-pro=
se"] *)) code { background-color: rgba(0, 0, 0, 0); }
  .dark\:prose-invert:is(.dark *) :where(code):not(:where([class~=3D"not-pr=
ose"] *)) { background-color: var(--gray-700); }
  .dark\:bg-\(--gray-800\):is(.dark *) { background-color: var(--gray-800);=
 }
  .dark\:bg-\[\#2A4A6D\]:is(.dark *) { background-color: rgb(42, 74, 109); =
}
  .dark\:bg-\[\#6BBD6720\]:is(.dark *) { background-color: rgba(107, 189, 1=
03, 0.125); }
  .dark\:bg-\[\#7CA8FF33\]:is(.dark *) { background-color: rgba(124, 168, 2=
55, 0.2); }
  .dark\:bg-\[\#64572A\]:is(.dark *) { background-color: rgb(100, 87, 42); =
}
  .dark\:bg-\[\#171717\]:is(.dark *) { background-color: rgb(23, 23, 23); }
  .dark\:bg-\[\#252525\]:is(.dark *) { background-color: rgb(37, 37, 37); }
  .dark\:bg-\[\#303030\]:is(.dark *) { background-color: rgb(48, 48, 48); }
  .dark\:bg-\[\#303030\]\!:is(.dark *) { background-color: rgb(48, 48, 48) =
!important; }
  .dark\:bg-\[\#353535\]:is(.dark *) { background-color: rgb(53, 53, 53); }
  .dark\:bg-\[\#393939\]:is(.dark *) { background-color: rgb(57, 57, 57); }
  .dark\:bg-\[\#444444\]:is(.dark *) { background-color: rgb(68, 68, 68); }
  .dark\:bg-\[\#B2B2B220\]:is(.dark *) { background-color: rgba(178, 178, 1=
78, 0.125); }
  .dark\:bg-\[\#C26FFD20\]:is(.dark *) { background-color: rgba(194, 111, 2=
53, 0.125); }
  .dark\:bg-\[\#EA8444\]:is(.dark *) { background-color: rgb(234, 132, 68);=
 }
  .dark\:bg-\[\#FD756F20\]:is(.dark *) { background-color: rgba(253, 117, 1=
11, 0.125); }
  .dark\:bg-\[rgb\(33\,33\,33\,0\.9\)\]:is(.dark *) { background-color: rgb=
a(33, 33, 33, 0.9); }
  .dark\:bg-\[rgba\(33\,33\,33\,1\)\]:is(.dark *) { background-color: rgb(3=
3, 33, 33); }
  .dark\:bg-\[rgba\(48\,48\,48\,0\.8\)\]:is(.dark *) { background-color: rg=
ba(48, 48, 48, 0.8); }
  .dark\:bg-\[rgba\(202\,58\,49\,0\.16\)\]:is(.dark *) { background-color: =
rgba(202, 58, 49, 0.16); }
  .dark\:bg-\[rgba\(255\,255\,255\,0\.04\)\]:is(.dark *) { background-color=
: rgba(255, 255, 255, 0.04); }
  .dark\:bg-black:is(.dark *) { background-color: rgb(0, 0, 0); }
  .dark\:bg-black\/50:is(.dark *) { background-color: oklab(0 none none / 0=
.5); }
  .dark\:bg-black\/80:is(.dark *) { background-color: oklab(0 none none / 0=
.8); }
  .dark\:bg-black\/85:is(.dark *) { background-color: oklab(0 none none / 0=
.85); }
  .dark\:bg-gray-50:is(.dark *) { background-color: rgb(249, 249, 249); }
  .dark\:bg-gray-50\/5:is(.dark *) { background-color: rgba(249, 249, 249, =
0.05); }
  .dark\:bg-gray-100:is(.dark *) { background-color: rgb(236, 236, 236); }
  .dark\:bg-gray-500:is(.dark *) { background-color: rgb(155, 155, 155); }
  .dark\:bg-gray-600:is(.dark *) { background-color: rgb(103, 103, 103); }
  .dark\:bg-gray-700:is(.dark *) { background-color: rgb(66, 66, 66); }
  .dark\:bg-gray-700\/50:is(.dark *) { background-color: rgba(66, 66, 66, 0=
.5); }
  .dark\:bg-gray-700\/70:is(.dark *) { background-color: rgba(66, 66, 66, 0=
.7); }
  .dark\:bg-gray-700\/75:is(.dark *) { background-color: rgba(66, 66, 66, 0=
.75); }
  .dark\:bg-gray-750:is(.dark *) { background-color: rgb(47, 47, 47); }
  .dark\:bg-gray-800:is(.dark *) { background-color: rgb(33, 33, 33); }
  .dark\:bg-gray-800\/70:is(.dark *) { background-color: rgba(33, 33, 33, 0=
.7); }
  .dark\:bg-gray-900:is(.dark *) { background-color: rgb(23, 23, 23); }
  .dark\:bg-gray-950:is(.dark *) { background-color: rgb(13, 13, 13); }
  .dark\:bg-green-600:is(.dark *) { background-color: rgb(0, 134, 53); }
  .dark\:bg-green-600\/30:is(.dark *) { background-color: rgba(0, 134, 53, =
0.3); }
  .dark\:bg-green-800:is(.dark *) { background-color: rgb(0, 79, 31); }
  .dark\:bg-orange-500:is(.dark *) { background-color: rgb(226, 85, 7); }
  .dark\:bg-orange-800:is(.dark *) { background-color: rgb(109, 46, 15); }
  .dark\:bg-red-500\/10:is(.dark *) { background-color: rgba(224, 46, 42, 0=
.1); }
  .dark\:bg-red-600:is(.dark *) { background-color: rgb(186, 38, 35); }
  .dark\:bg-red-600\/30:is(.dark *) { background-color: rgba(186, 38, 35, 0=
.3); }
  .dark\:bg-red-800:is(.dark *) { background-color: rgb(110, 22, 21); }
  .dark\:bg-token-bg-secondary:is(.dark *) { background-color: var(--bg-sec=
ondary); }
  .dark\:bg-token-border-default:is(.dark *) { background-color: var(--bord=
er-default); }
  .dark\:bg-token-main-surface-primary-inverse:is(.dark *) { background-col=
or: var(--main-surface-primary-inverse); }
  .dark\:bg-token-main-surface-secondary:is(.dark *) { background-color: va=
r(--main-surface-secondary); }
  .dark\:bg-token-main-surface-tertiary:is(.dark *) { background-color: var=
(--main-surface-tertiary); }
  .dark\:bg-token-surface-error\/5:is(.dark *) { background-color: color-mi=
x(in oklab,rgb(var(--surface-error)/1) 5%,transparent); }
  .dark\:bg-token-text-primary:is(.dark *) { background-color: var(--text-p=
rimary); }
  .dark\:bg-token-text-tertiary:is(.dark *) { background-color: var(--text-=
tertiary); }
  .dark\:bg-transparent:is(.dark *) { background-color: rgba(0, 0, 0, 0); }
  .dark\:bg-white:is(.dark *) { background-color: rgb(255, 255, 255); }
  .dark\:bg-white\/5:is(.dark *) { background-color: rgba(255, 255, 255, 0.=
05); }
  .dark\:bg-white\/10:is(.dark *) { background-color: rgba(255, 255, 255, 0=
.1); }
  .dark\:bg-yellow-400:is(.dark *) { background-color: rgb(255, 195, 0); }
  .dark\:bg-yellow-400\/30:is(.dark *) { background-color: rgba(255, 195, 0=
, 0.3); }
  .dark\:bg-yellow-400\/50:is(.dark *) { background-color: rgba(255, 195, 0=
, 0.5); }
  .dark\:bg-yellow-500\/50:is(.dark *) { background-color: rgba(224, 172, 0=
, 0.5); }
  .dark\:bg-yellow-500\/70:is(.dark *) { background-color: rgba(224, 172, 0=
, 0.7); }
  .dark\:bg-yellow-600:is(.dark *) { background-color: rgb(186, 142, 0); }
  .dark\:bg-yellow-900:is(.dark *) { background-color: rgb(77, 59, 0); }
  .dark\:bg-linear-to-t:is(.dark *) { --tw-gradient-position: to top in okl=
ab; background-image: linear-gradient(var(--tw-gradient-stops)); }
  .dark\:from-\[\#2f2f2f\]:is(.dark *) { --tw-gradient-from: #2f2f2f; --tw-=
gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var=
(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)v=
ar(--tw-gradient-to-position)); }
  .dark\:from-gray-800:is(.dark *) { --tw-gradient-from: #212121; --tw-grad=
ient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--t=
w-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(-=
-tw-gradient-to-position)); }
  .dark\:from-token-main-surface-primary:is(.dark *) { --tw-gradient-from: =
var(--main-surface-primary); --tw-gradient-stops: var(--tw-gradient-via-sto=
ps,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-fro=
m-position),var(--tw-gradient-to)var(--tw-gradient-to-position)); }
  .dark\:via-token-main-surface-primary:is(.dark *) { --tw-gradient-via: va=
r(--main-surface-primary); --tw-gradient-via-stops: var(--tw-gradient-posit=
ion),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradi=
ent-via)var(--tw-gradient-via-position),var(--tw-gradient-to)var(--tw-gradi=
ent-to-position); --tw-gradient-stops: var(--tw-gradient-via-stops); }
  .dark\:via-white\/5:is(.dark *) { --tw-gradient-via: oklab(100% 0 5.96046=
e-8/.05); --tw-gradient-via-stops: var(--tw-gradient-position),var(--tw-gra=
dient-from)var(--tw-gradient-from-position),var(--tw-gradient-via)var(--tw-=
gradient-via-position),var(--tw-gradient-to)var(--tw-gradient-to-position);=
 --tw-gradient-stops: var(--tw-gradient-via-stops); }
  .dark\:to-transparent:is(.dark *) { --tw-gradient-to: transparent; --tw-g=
radient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(=
--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)va=
r(--tw-gradient-to-position)); }
  .dark\:to-white\/15:is(.dark *) { --tw-gradient-to: oklab(100% 0 5.96046e=
-8/.15); --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient=
-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw=
-gradient-to)var(--tw-gradient-to-position)); }
  .dark\:stroke-\[rgba\(0\,0\,0\,0\.32\)\]:is(.dark *) { stroke: rgba(0, 0,=
 0, 0.32); }
  .dark\:stroke-\[rgba\(255\,255\,255\,0\.4\)\]:is(.dark *) { stroke: rgba(=
255, 255, 255, 0.4); }
  .dark\:stroke-brand-purple\/50:is(.dark *) { stroke: rgba(171, 104, 255, =
0.5); }
  .dark\:stroke-white\/10:is(.dark *) { stroke: rgba(255, 255, 255, 0.1); }
  .dark\:text-\[\#6BBD67\]:is(.dark *) { color: rgb(107, 189, 103); }
  .dark\:text-\[\#48AAFF\]:is(.dark *) { color: rgb(72, 170, 255); }
  .dark\:text-\[\#B2B2B2\]:is(.dark *) { color: rgb(178, 178, 178); }
  .dark\:text-\[\#C4C4C4\]:is(.dark *) { color: rgb(196, 196, 196); }
  .dark\:text-\[\#C26FFD\]:is(.dark *) { color: rgb(194, 111, 253); }
  .dark\:text-\[\#D292FF\]:is(.dark *) { color: rgb(210, 146, 255); }
  .dark\:text-\[\#DC2626\]:is(.dark *) { color: rgb(220, 38, 38); }
  .dark\:text-\[\#FD756F\]:is(.dark *) { color: rgb(253, 117, 111); }
  .dark\:text-\[var\(--text-secondary\)\]:is(.dark *) { color: var(--text-s=
econdary); }
  .dark\:text-black:is(.dark *) { color: rgb(0, 0, 0); }
  .dark\:text-blue-75:is(.dark *) { color: rgb(204, 230, 255); }
  .dark\:text-blue-400:is(.dark *) { color: rgb(2, 133, 255); }
  .dark\:text-brand-purple-600:is(.dark *) { color: rgb(113, 95, 222); }
  .dark\:text-gray-100:is(.dark *) { color: rgb(236, 236, 236); }
  .dark\:text-gray-200:is(.dark *) { color: rgb(227, 227, 227); }
  .dark\:text-gray-300:is(.dark *) { color: rgb(205, 205, 205); }
  .dark\:text-gray-400:is(.dark *) { color: rgb(180, 180, 180); }
  .dark\:text-gray-500:is(.dark *) { color: rgb(155, 155, 155); }
  .dark\:text-gray-700:is(.dark *) { color: rgb(66, 66, 66); }
  .dark\:text-gray-800:is(.dark *) { color: rgb(33, 33, 33); }
  .dark\:text-gray-950:is(.dark *) { color: rgb(13, 13, 13); }
  .dark\:text-green-200:is(.dark *) { color: rgb(102, 212, 146); }
  .dark\:text-red-200:is(.dark *) { color: rgb(255, 133, 131); }
  .dark\:text-red-400:is(.dark *) { color: rgb(250, 66, 62); }
  .dark\:text-token-composer-blue-text:is(.dark *) { color: var(--composer-=
blue-text); }
  .dark\:text-token-main-surface-primary:is(.dark *) { color: var(--main-su=
rface-primary); }
  .dark\:text-token-main-surface-tertiary:is(.dark *) { color: var(--main-s=
urface-tertiary); }
  .dark\:text-token-text-primary:is(.dark *) { color: var(--text-primary); =
}
  .dark\:text-token-text-secondary:is(.dark *) { color: var(--text-secondar=
y); }
  .dark\:text-token-text-tertiary:is(.dark *) { color: var(--text-tertiary)=
; }
  .dark\:text-white:is(.dark *) { color: rgb(255, 255, 255); }
  .dark\:text-white\/30:is(.dark *) { color: rgba(255, 255, 255, 0.3); }
  .dark\:text-white\/50:is(.dark *) { color: rgba(255, 255, 255, 0.5); }
  .dark\:text-yellow-100:is(.dark *) { color: rgb(255, 228, 140); }
  .dark\:text-yellow-400:is(.dark *) { color: rgb(255, 195, 0); }
  .dark\:opacity-20:is(.dark *) { opacity: 0.2; }
  .dark\:opacity-60:is(.dark *) { opacity: 0.6; }
  .dark\:shadow-\[0_-4px_32px_rgba\(0\,0\,0\,0\.12\)\]:is(.dark *) { --tw-s=
hadow: 0 -4px 32px var(--tw-shadow-color,#0000001f); box-shadow: var(--tw-i=
nset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(-=
-tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-\[0_10px_20px_-6px_rgb\(20_20_20_\/_0\.5\)\,0_0_1px_rgb\(25=
5_255_255_\/_0\.7\)\]:is(.dark *), .dark\:shadow-\[0_10px_20px_-6px_rgb\(20=
_20_20_\/_0\.5\)\,_0_0_1px_rgb\(255_255_255_\/_0\.7\)\]:is(.dark *) { --tw-=
shadow: 0 10px 20px -6px var(--tw-shadow-color,#14141480),0 0 1px var(--tw-=
shadow-color,#ffffffb3); box-shadow: var(--tw-inset-shadow),var(--tw-inset-=
ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-sh=
adow); }
  .dark\:shadow-\[0_10px_20px_-6px_rgb\(20_20_20_\/_0\.5\)\,inset_0_0_1px_r=
gb\(255_255_255_\/_0\.3\)\]:is(.dark *) { --tw-shadow: 0 10px 20px -6px var=
(--tw-shadow-color,#14141480),inset 0 0 1px var(--tw-shadow-color,#ffffff4d=
); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-=
ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-\[0_10px_20px_-6px_rgb\(20_20_20_\/_0\.5\)\]:is(.dark *) { =
--tw-shadow: 0 10px 20px -6px var(--tw-shadow-color,#14141480); box-shadow:=
 var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-sh=
adow),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-\[0_12px_32px_-12px_rgb\(0_0_0_\/_1\)\,inset_0_0_1px_rgb\(2=
55_255_255_\/_0\.3\)\]:is(.dark *) { --tw-shadow: 0 12px 32px -12px var(--t=
w-shadow-color,#000),inset 0 0 1px var(--tw-shadow-color,#ffffff4d); box-sh=
adow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offs=
et-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-\[0_12px_32px_-12px_rgb\(20_20_20_\/_0\.5\)\,_0_0_1px_rgb\(=
255_255_255_\/_1\)\]:is(.dark *) { --tw-shadow: 0 12px 32px -12px var(--tw-=
shadow-color,#14141480),0 0 1px var(--tw-shadow-color,#fff); box-shadow: va=
r(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shado=
w),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-\[0_32px_48px_rgba\(0\,0\,0\,0\.175\)\,_0_0_1px_rgba\(255\,=
255\,255\,0\.4\)\]:is(.dark *) { --tw-shadow: 0 32px 48px var(--tw-shadow-c=
olor,#0000002d),0 0 1px var(--tw-shadow-color,#fff6); box-shadow: var(--tw-=
inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(=
--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-\[0px_24px_64px_rgba\(0\,0\,0\,0\.32\)\]:is(.dark *) { --tw=
-shadow: 0px 24px 64px var(--tw-shadow-color,#00000052); box-shadow: var(--=
tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),v=
ar(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-\[inset_0_0_0_1px_rgba\(255\,255\,255\,0\.1\)\]:is(.dark *)=
 { --tw-shadow: inset 0 0 0 1px var(--tw-shadow-color,#ffffff1a); box-shado=
w: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-=
shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-md:is(.dark *) { --tw-shadow: 0 4px 6px -1px var(--tw-shado=
w-color,#0000001a),0 2px 4px -2px var(--tw-shadow-color,#0000001a); box-sha=
dow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offse=
t-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-none:is(.dark *) { --tw-shadow: 0 0 #0000; box-shadow: var(=
--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow)=
,var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:shadow-none\!:is(.dark *) { --tw-shadow: 0 0 #0000 !important; box=
-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-o=
ffset-shadow),var(--tw-ring-shadow),var(--tw-shadow) !important; }
  .dark\:shadow-xl:is(.dark *) { --tw-shadow: 0 20px 25px -5px var(--tw-sha=
dow-color,#0000001a),0 8px 10px -6px var(--tw-shadow-color,#0000001a); box-=
shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-of=
fset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:backdrop-blur-lg:is(.dark *) { --tw-backdrop-blur: blur(var(--blur=
-lg)); backdrop-filter: var(--tw-backdrop-blur,)var(--tw-backdrop-brightnes=
s,)var(--tw-backdrop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdr=
op-hue-rotate,)var(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--t=
w-backdrop-saturate,)var(--tw-backdrop-sepia,); }
  .dark\:\[--task-bg\:rgb\(0\,0\,0\)\]:is(.dark *) { --task-bg: #000; }
  @media (hover: hover) {
  .dark\:group-hover\:border-token-text-primary:is(.dark *):is(:where(.grou=
p):hover *) { border-color: var(--text-primary); }
  .dark\:group-hover\/navigation\:bg-\[\#7CA8FF33\]:is(.dark *):is(:where(.=
group\/navigation):hover *) { background-color: rgba(124, 168, 255, 0.2); }
  .dark\:group-hover\/row\:bg-gray-700:is(.dark *):is(:where(.group\/row):h=
over *) { background-color: rgb(66, 66, 66); }
}
  .dark\:placeholder\:text-white:is(.dark *)::placeholder { color: rgb(255,=
 255, 255); }
  .dark\:before\:bg-gray-750\/50:is(.dark *)::before { background-color: rg=
ba(47, 47, 47, 0.5); content: var(--tw-content); }
  .dark\:after\:bg-\[Highlight\]:is(.dark *)::after { background-color: hig=
hlight; content: var(--tw-content); }
  .dark\:after\:invert:is(.dark *)::after { --tw-invert: invert(100%); cont=
ent: var(--tw-content); filter: var(--tw-blur,)var(--tw-brightness,)var(--t=
w-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(-=
-tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .dark\:focus-within\:border-token-border-xheavy:is(.dark *):focus-within =
{ border-color: var(--border-xheavy); }
  .dark\:focus-within\:ring-0:is(.dark *):focus-within { --tw-ring-shadow: =
var(--tw-ring-inset,)0 0 0 calc(var(--tw-ring-offset-width))var(--tw-ring-c=
olor,currentColor); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-=
shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)=
; }
  @media (hover: hover) {
  .dark\:hover\:border-gray-800:is(.dark *):hover { border-color: rgb(33, 3=
3, 33); }
  .dark\:hover\:bg-\[\#1A416A\]:is(.dark *):hover { background-color: rgb(2=
6, 65, 106); }
  .dark\:hover\:bg-gray-500\/10:is(.dark *):hover { background-color: rgba(=
155, 155, 155, 0.1); }
  .dark\:hover\:bg-gray-600:is(.dark *):hover { background-color: rgb(103, =
103, 103); }
  .dark\:hover\:bg-gray-700:is(.dark *):hover { background-color: rgb(66, 6=
6, 66); }
  .dark\:hover\:bg-red-500\/15:is(.dark *):hover { background-color: rgba(2=
24, 46, 42, 0.15); }
  .dark\:hover\:bg-token-bg-primary:is(.dark *):hover { background-color: v=
ar(--bg-primary); }
  .dark\:hover\:bg-token-main-surface-secondary:is(.dark *):hover { backgro=
und-color: var(--main-surface-secondary); }
  .dark\:hover\:bg-token-main-surface-tertiary:is(.dark *):hover { backgrou=
nd-color: var(--main-surface-tertiary); }
  .dark\:hover\:bg-token-text-primary:is(.dark *):hover { background-color:=
 var(--text-primary); }
  .dark\:hover\:bg-token-text-tertiary:is(.dark *):hover { background-color=
: var(--text-tertiary); }
  .dark\:hover\:bg-transparent:is(.dark *):hover { background-color: rgba(0=
, 0, 0, 0); }
  .dark\:hover\:bg-white:is(.dark *):hover { background-color: rgb(255, 255=
, 255); }
  .dark\:hover\:bg-white\/5:is(.dark *):hover { background-color: rgba(255,=
 255, 255, 0.05); }
  .dark\:hover\:bg-white\/10:is(.dark *):hover { background-color: rgba(255=
, 255, 255, 0.1); }
  .dark\:hover\:bg-white\/10\!:is(.dark *):hover { background-color: rgba(2=
55, 255, 255, 0.1) !important; }
  .dark\:hover\:bg-white\/20:is(.dark *):hover { background-color: rgba(255=
, 255, 255, 0.2); }
  .hover\:dark\:bg-gray-100\/10:hover:is(.dark *) { background-color: rgba(=
236, 236, 236, 0.1); }
  .dark\:hover\:text-black:is(.dark *):hover { color: rgb(0, 0, 0); }
  .dark\:hover\:text-gray-100:is(.dark *):hover { color: rgb(236, 236, 236)=
; }
  .dark\:hover\:text-token-main-surface-tertiary:is(.dark *):hover { color:=
 var(--main-surface-tertiary); }
  .dark\:hover\:opacity-100:is(.dark *):hover { opacity: 1; }
}
  .dark\:focus\:border-white:is(.dark *):focus { border-color: rgb(255, 255=
, 255); }
  .dark\:focus\:ring-white:is(.dark *):focus { --tw-ring-color: #fff; }
  .dark\:focus-visible\:bg-token-main-surface-secondary:is(.dark *):focus-v=
isible { background-color: var(--main-surface-secondary); }
  .dark\:focus-visible\:ring-token-main-surface-primary:is(.dark *):focus-v=
isible { --tw-ring-color: var(--main-surface-primary); }
  .dark\:focus-visible\:outline-white:is(.dark *):focus-visible { outline-c=
olor: rgb(255, 255, 255); }
  .dark\:active\:bg-red-500\/20:is(.dark *):active { background-color: rgba=
(224, 46, 42, 0.2); }
  .dark\:active\:bg-white\/10:is(.dark *):active { background-color: rgba(2=
55, 255, 255, 0.1); }
  @media (hover: hover) {
  .dark\:enabled\:hover\:bg-white\/10:is(.dark *):enabled:hover { backgroun=
d-color: rgba(255, 255, 255, 0.1); }
}
  .dark\:disabled\:bg-token-text-quaternary:is(.dark *):disabled { backgrou=
nd-color: var(--text-quaternary); }
  .dark\:disabled\:bg-token-text-tertiary:is(.dark *):disabled { background=
-color: var(--text-tertiary); }
  .dark\:disabled\:text-token-main-surface-secondary:is(.dark *):disabled {=
 color: var(--main-surface-secondary); }
  .dark\:data-\[state\=3Dchecked\]\:border-white:is(.dark *)[data-state=3D"=
checked"] { border-color: rgb(255, 255, 255); }
  .dark\:data-\[state\=3Dchecked\]\:bg-white:is(.dark *)[data-state=3D"chec=
ked"] { background-color: rgb(255, 255, 255); }
  @media (min-width: 48rem) {
  .md\:dark\:border-gray-700:is(.dark *) { border-color: rgb(66, 66, 66); }
  .md\:dark\:border-transparent:is(.dark *) { border-color: rgba(0, 0, 0, 0=
); }
  .dark\:md\:bg-transparent:is(.dark *) { background-color: rgba(0, 0, 0, 0=
); }
  .dark\:md\:bg-vert-dark-gradient:is(.dark *) { background-image: linear-g=
radient(rgba(53, 55, 64, 0), rgb(53, 55, 64) 58.85%); }
  @media (hover: hover) {
  .dark\:md\:hover\:bg-gray-700:is(.dark *):hover { background-color: rgb(6=
6, 66, 66); }
}
}
  @media print {
  .print\:hidden { display: none; }
  .print\:border-none { --tw-border-style: none; border-style: none; }
  .print\:pt-2 { padding-top: calc(var(--spacing)*2); }
  .print\:shadow-none { --tw-shadow: 0 0 #0000; box-shadow: var(--tw-inset-=
shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-r=
ing-shadow),var(--tw-shadow); }
}
  .radix-disabled\:pointer-events-auto[data-disabled] { pointer-events: aut=
o; }
  .radix-disabled\:pointer-events-none[data-disabled] { pointer-events: non=
e; }
  .radix-disabled\:cursor-auto[data-disabled] { cursor: auto; }
  .radix-disabled\:cursor-not-allowed[data-disabled] { cursor: not-allowed;=
 }
  .radix-disabled\:bg-transparent[data-disabled] { background-color: rgba(0=
, 0, 0, 0); }
  .radix-disabled\:text-token-text-tertiary[data-disabled] { color: var(--t=
ext-tertiary); }
  .radix-disabled\:opacity-50[data-disabled] { opacity: 0.5; }
  @media (hover: hover) {
  .radix-disabled\:hover\:bg-transparent[data-disabled]:hover { background-=
color: rgba(0, 0, 0, 0); }
}
  .dark\:radix-disabled\:bg-transparent:is(.dark *)[data-disabled] { backgr=
ound-color: rgba(0, 0, 0, 0); }
  .radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"active"=
] { background-color: var(--main-surface-tertiary); }
  .radix-state-active\:bg-white[data-state=3D"active"] { background-color: =
rgb(255, 255, 255); }
  .radix-state-active\:text-token-text-primary[data-state=3D"active"] { col=
or: var(--text-primary); }
  .radix-state-active\:text-token-text-secondary[data-state=3D"active"] { c=
olor: var(--text-secondary); }
  @media (min-width: 48rem) {
  .md\:radix-state-active\:bg-token-main-surface-secondary[data-state=3D"ac=
tive"] { background-color: var(--main-surface-secondary); }
  .md\:radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"act=
ive"] { background-color: var(--main-surface-tertiary); }
  .md\:radix-state-active\:text-token-text-primary[data-state=3D"active"] {=
 color: var(--text-primary); }
}
  .dark\:radix-state-active\:bg-token-main-surface-tertiary:is(.dark *)[dat=
a-state=3D"active"] { background-color: var(--main-surface-tertiary); }
  .radix-state-checked\:border[data-state=3D"checked"] { border-style: var(=
--tw-border-style); border-width: 1px; }
  .radix-state-checked\:border-green-500[data-state=3D"checked"] { border-c=
olor: rgb(0, 162, 64); }
  .radix-state-checked\:border-token-text-tertiary[data-state=3D"checked"] =
{ border-color: var(--text-tertiary); }
  .radix-state-checked\:bg-black[data-state=3D"checked"] { background-color=
: rgb(0, 0, 0); }
  .radix-state-checked\:bg-green-500[data-state=3D"checked"] { background-c=
olor: rgb(0, 162, 64); }
  .radix-state-checked\:bg-green-600\/15[data-state=3D"checked"] { backgrou=
nd-color: rgba(0, 134, 53, 0.15); }
  .radix-state-checked\:bg-token-main-surface-primary[data-state=3D"checked=
"] { background-color: var(--main-surface-primary); }
  .radix-state-checked\:bg-token-text-primary[data-state=3D"checked"] { bac=
kground-color: var(--text-primary); }
  .radix-state-checked\:font-semibold[data-state=3D"checked"] { --tw-font-w=
eight: var(--font-weight-semibold); font-weight: var(--font-weight-semibold=
); }
  .radix-state-checked\:text-token-main-surface-primary[data-state=3D"check=
ed"] { color: var(--main-surface-primary); }
  .radix-state-checked\:text-token-text-primary[data-state=3D"checked"] { c=
olor: var(--text-primary); }
  .radix-state-checked\:shadow-\[0_0_2px_rgba\(0\,0\,0\,\.03\)\][data-state=
=3D"checked"] { --tw-shadow: 0 0 2px var(--tw-shadow-color,#00000008); box-=
shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-of=
fset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus-visible\:radix-state-checked\:ring-black:focus-visible[data-state=
=3D"checked"] { --tw-ring-color: #000; }
  .radix-state-checked\:ltr\:translate-x-\[13px\][data-state=3D"checked"]:w=
here(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) { --tw-translate-x: 13px; t=
ranslate: var(--tw-translate-x)var(--tw-translate-y); }
  .radix-state-checked\:ltr\:translate-x-\[14px\][data-state=3D"checked"]:w=
here(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) { --tw-translate-x: 14px; t=
ranslate: var(--tw-translate-x)var(--tw-translate-y); }
  .radix-state-checked\:ltr\:translate-x-\[24px\][data-state=3D"checked"]:w=
here(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) { --tw-translate-x: 24px; t=
ranslate: var(--tw-translate-x)var(--tw-translate-y); }
  .radix-state-checked\:rtl\:translate-x-\[-13px\][data-state=3D"checked"]:=
where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { --tw-translate-x: -13px;=
 translate: var(--tw-translate-x)var(--tw-translate-y); }
  .radix-state-checked\:rtl\:translate-x-\[-14px\][data-state=3D"checked"]:=
where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { --tw-translate-x: -14px;=
 translate: var(--tw-translate-x)var(--tw-translate-y); }
  .radix-state-checked\:rtl\:translate-x-\[-24px\][data-state=3D"checked"]:=
where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { --tw-translate-x: -24px;=
 translate: var(--tw-translate-x)var(--tw-translate-y); }
  .dark\:radix-state-checked\:border-green-600:is(.dark *)[data-state=3D"ch=
ecked"] { border-color: rgb(0, 134, 53); }
  .dark\:radix-state-checked\:bg-green-600:is(.dark *)[data-state=3D"checke=
d"] { background-color: rgb(0, 134, 53); }
  .dark\:focus-visible\:radix-state-checked\:ring-green-600:is(.dark *):foc=
us-visible[data-state=3D"checked"] { --tw-ring-color: #008635; }
  .radix-state-open\:animate-show[data-state=3D"open"] { animation: 0.1s cu=
bic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running show; }
  .radix-state-open\:bg-\[\#f5f5f5\][data-state=3D"open"] { background-colo=
r: rgb(245, 245, 245); }
  .radix-state-open\:bg-black\/10[data-state=3D"open"] { background-color: =
oklab(0 none none / 0.1); }
  .radix-state-open\:bg-token-main-surface-secondary[data-state=3D"open"] {=
 background-color: var(--main-surface-secondary); }
  .radix-state-open\:bg-token-sidebar-surface-secondary[data-state=3D"open"=
] { background-color: var(--sidebar-surface-secondary); }
  .radix-state-open\:text-token-text-primary[data-state=3D"open"] { color: =
var(--text-primary); }
  .radix-state-open\:text-token-text-secondary[data-state=3D"open"] { color=
: var(--text-secondary); }
  .radix-state-open\:text-token-text-tertiary[data-state=3D"open"] { color:=
 var(--text-tertiary); }
  .dark\:radix-state-open\:bg-token-main-surface-secondary:is(.dark *)[data=
-state=3D"open"] { background-color: var(--main-surface-secondary); }
  .dark\:radix-state-open\:text-gray-400:is(.dark *)[data-state=3D"open"] {=
 color: rgb(180, 180, 180); }
  @media (hover: hover) and (pointer: fine) {
  .can-hover\:pointer-events-none { pointer-events: none; }
  .can-hover\:z-0 { z-index: 0; }
  .can-hover\:hidden { display: none; }
  .can-hover\:w-full { width: 100%; }
  .can-hover\:opacity-0 { opacity: 0; }
  @media (hover: hover) {
  .can-hover\:group-hover\:visible:is(:where(.group):hover *) { visibility:=
 visible; }
  .can-hover\:group-hover\:me-5:is(:where(.group):hover *) { margin-inline-=
end: calc(var(--spacing)*5); }
  .can-hover\:group-hover\:flex:is(:where(.group):hover *) { display: flex;=
 }
  .can-hover\:group-hover\:w-11\/12:is(:where(.group):hover *) { width: 91.=
6667%; }
  .can-hover\:group-hover\:scale-110:is(:where(.group):hover *) { --tw-scal=
e-x: 110%; --tw-scale-y: 110%; --tw-scale-z: 110%; scale: var(--tw-scale-x)=
var(--tw-scale-y); }
  .can-hover\:group-hover\:opacity-100:is(:where(.group):hover *) { opacity=
: 1; }
  .can-hover\:group-hover\/sidebar\:pointer-events-auto:is(:where(.group\/s=
idebar):hover *) { pointer-events: auto; }
  .can-hover\:group-hover\/sidebar\:opacity-100:is(:where(.group\/sidebar):=
hover *) { opacity: 1; }
  .can-hover\:hover\:scale-110:hover { --tw-scale-x: 110%; --tw-scale-y: 11=
0%; --tw-scale-z: 110%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .can-hover\:hover\:bg-\[\#BDDCF4\]:hover { background-color: rgb(189, 220=
, 244); }
  .can-hover\:hover\:bg-black\/5:hover { background-color: oklab(0 none non=
e / 0.05); }
  .can-hover\:hover\:bg-token-main-surface-secondary:hover { background-col=
or: var(--main-surface-secondary); }
  .can-hover\:hover\:bg-token-main-surface-tertiary:hover { background-colo=
r: var(--main-surface-tertiary); }
  .can-hover\:hover\:bg-token-sidebar-surface-secondary:hover { background-=
color: var(--sidebar-surface-secondary); }
  .can-hover\:hover\:text-token-link-hover:hover { color: var(--link-hover)=
; }
  .can-hover\:hover\:text-token-text-primary:hover { color: var(--text-prim=
ary); }
  .can-hover\:hover\:opacity-70:hover { opacity: 0.7; }
}
  .can-hover\:active\:scale-100:active { --tw-scale-x: 100%; --tw-scale-y: =
100%; --tw-scale-z: 100%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .can-hover\:active\:scale-\[0\.98\]:active { scale: 0.98; }
}
  @media (hover: hover) {
  @media (hover: hover) and (pointer: fine) {
  @media (prefers-reduced-motion: no-preference) {
  .group-hover\/app-icon\:can-hover\:motion-safe\:scale-\[0\.91\]:is(:where=
(.group\/app-icon):hover *) { scale: 0.91; }
  .group-hover\/app-icon\:can-hover\:motion-safe\:scale-\[1\.025\]:is(:wher=
e(.group\/app-icon):hover *) { scale: 1.025; }
  .group-hover\/app-icon\:can-hover\:motion-safe\:shadow-\[0px_4px_12px_rgb=
a\(0\,0\,0\,0\.08\)\]:is(:where(.group\/app-icon):hover *) { --tw-shadow: 0=
px 4px 12px var(--tw-shadow-color,#00000014); box-shadow: var(--tw-inset-sh=
adow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-rin=
g-shadow),var(--tw-shadow); }
  .group-hover\/app-icon\:can-hover\:motion-safe\:\[--shadow-color\:rgba\(0=
\,0\,0\,0\.1\)\]:is(:where(.group\/app-icon):hover *) { --shadow-color: #00=
00001a; }
}
}
}
  @media (hover: hover) and (pointer: fine) {
  @media (hover: hover) {
  .dark\:can-hover\:hover\:bg-\[\#1A416A\]:is(.dark *):hover { background-c=
olor: rgb(26, 65, 106); }
  .dark\:can-hover\:hover\:bg-gray-700:is(.dark *):hover { background-color=
: rgb(66, 66, 66); }
  .dark\:can-hover\:hover\:bg-white\/5:is(.dark *):hover { background-color=
: rgba(255, 255, 255, 0.05); }
}
}
  .screen-arch .screen-arch\:relative { position: relative; }
  .screen-arch .screen-arch\:static { position: static; }
  .screen-arch .screen-arch\:sticky { position: sticky; }
  .screen-arch .screen-arch\:top-12 { top: calc(var(--spacing)*12); }
  .screen-arch .screen-arch\:top-\[var\(--sticky-title-offset\)\] { top: va=
r(--sticky-title-offset); }
  .screen-arch .screen-arch\:-me-2 { margin-inline-end: calc(var(--spacing)=
*-2); }
  .screen-arch .screen-arch\:mb-3 { margin-bottom: calc(var(--spacing)*3); =
}
  .screen-arch .screen-arch\:flex { display: flex; }
  .screen-arch .screen-arch\:hidden { display: none; }
  .screen-arch .screen-arch\:h-10 { height: calc(var(--spacing)*10); }
  .screen-arch .screen-arch\:min-h-\[47px\] { min-height: 47px; }
  .screen-arch .screen-arch\:min-h-\[calc\(100dvh-var\(--thread-leading-hei=
ght\)-var\(--thread-trailing-height\)-12px\)\] { min-height: calc(100dvh - =
var(--thread-leading-height) - var(--thread-trailing-height) - 12px); }
  .screen-arch .screen-arch\:w-full { width: 100%; }
  .screen-arch .screen-arch\:min-w-\[50cqw\] { min-width: 50cqw; }
  .screen-arch .screen-arch\:-translate-x-2 { --tw-translate-x: calc(var(--=
spacing)*-2); translate: var(--tw-translate-x)var(--tw-translate-y); }
  .screen-arch .screen-arch\:items-center { align-items: center; }
  .screen-arch .screen-arch\:justify-evenly { justify-content: space-evenly=
; }
  .screen-arch .screen-arch\:gap-0\.5 { gap: calc(var(--spacing)*.5); }
  .screen-arch .screen-arch\:bg-\[var\(--sidebar-surface\)\] { background-c=
olor: var(--sidebar-surface); }
  .screen-arch .screen-arch\:bg-transparent { background-color: rgba(0, 0, =
0, 0); }
  .screen-arch .screen-arch\:bg-none { background-image: none; }
  .screen-arch .screen-arch\:px-2 { padding-inline: calc(var(--spacing)*2);=
 }
  .screen-arch .screen-arch\:py-1 { padding-block: calc(var(--spacing)*1); =
}
  .screen-arch .screen-arch\:py-1\.5 { padding-block: calc(var(--spacing)*1=
.5); }
  .screen-arch .screen-arch\:py-\[7px\] { padding-block: 7px; }
  .screen-arch .screen-arch\:ps-1 { padding-inline-start: calc(var(--spacin=
g)*1); }
  .screen-arch .screen-arch\:text-body { }
  .screen-arch .screen-arch\:text-token-text-secondary { color: var(--text-=
secondary); }
  @media (prefers-reduced-motion: no-preference) {
  .screen-arch .motion-safe\:group-active\:screen-arch\:scale-\[98\%\]:is(:=
where(.group):active *) { scale: 0.98; }
  .screen-arch .motion-safe\:group-active\:screen-arch\:transition-transfor=
m:is(:where(.group):active *) { transition-duration: var(--tw-duration,var(=
--default-transition-duration)); transition-property: transform, translate,=
 scale, rotate; transition-timing-function: var(--tw-ease,var(--default-tra=
nsition-timing-function)); }
  .screen-arch .motion-safe\:group-active\:screen-arch\:duration-100:is(:wh=
ere(.group):active *) { --tw-duration: .1s; transition-duration: 0.1s; }
}
  @media (min-width: 48rem) {
  .screen-arch .md\:screen-arch\:flex { display: flex; }
}
  @media (hover: hover) and (pointer: fine) {
  @media (hover: hover) {
  .screen-arch .can-hover\:hover\:screen-arch\:bg-token-main-surface-second=
ary:hover { background-color: var(--main-surface-secondary); }
}
}
  .keyboard-open .keyboard-open\:fixed { position: fixed; }
  .keyboard-open .keyboard-open\:start-3 { inset-inline-start: calc(var(--s=
pacing)*3); }
  .keyboard-open .keyboard-open\:end-3 { inset-inline-end: calc(var(--spaci=
ng)*3); }
  .keyboard-open .keyboard-open\:bottom-\[var\(--screen-keyboard-height\,0\=
)\] { bottom: var(--screen-keyboard-height,0); }
  .keyboard-open .keyboard-open\:z-50 { z-index: 50; }
  .keyboard-open .keyboard-open\:h-\[calc\(100\%-var\(--screen-keyboard-hei=
ght\,0px\)-var\(--composer-height\,100px\)\)\] { height: calc(100% - var(--=
screen-keyboard-height,0px) - var(--composer-height,100px)); }
  .keyboard-open .keyboard-open\:h-\[var\(--screen-height-override\,calc\(v=
ar\(--cqh-full\)-env\(keyboard-inset-height\,0px\)-var\(--screen-height-off=
set\,0px\)-var\(--force-redraw\,0px\)\)\)\] { height: var(--screen-height-o=
verride,calc(var(--cqh-full) - env(keyboard-inset-height,0px) - var(--scree=
n-height-offset,0px) - var(--force-redraw,0px))); }
  .keyboard-open .keyboard-open\:w-auto\! { width: auto !important; }
  .keyboard-open .keyboard-open\:-translate-y-2 { --tw-translate-y: calc(va=
r(--spacing)*-2); translate: var(--tw-translate-x)var(--tw-translate-y); }
  .keyboard-open .keyboard-open\:pb-\[calc\(var\(--composer-height\,100px\)=
\+var\(--screen-keyboard-height\,0\)\)\] { padding-bottom: calc(var(--compo=
ser-height,100px) + var(--screen-keyboard-height,0)); }
  .panel-has-scrolled\:\[box-shadow\:var\(--sharp-edge-top-shadow\)\].panel=
-has-scrolled { box-shadow: var(--sharp-edge-top-shadow); }
  .panel-is-scrolling-to-end\:\[box-shadow\:var\(--sharp-edge-bottom-shadow=
\)\].panel-is-scrolling-to-end { box-shadow: var(--sharp-edge-bottom-shadow=
); }
  .top-banner-visible .top-banner-visible\:top-\(--top-banner-height\,0px\)=
 { top: var(--top-banner-height,0); }
  .top-banner-visible .top-banner-visible\:bottom-0 { bottom: calc(var(--sp=
acing)*0); }
  .top-banner-visible .top-banner-visible\:h-auto { height: auto; }
  @media (pointer: coarse) {
  .touch\:-ms-3\.5 { margin-inline-start: calc(var(--spacing)*-3.5); }
  .touch\:-me-2 { margin-inline-end: calc(var(--spacing)*-2); }
  .touch\:w-\[32px\] { width: 32px; }
  .touch\:w-\[38px\] { width: 38px; }
  .touch\:px-2\.5 { padding-inline: calc(var(--spacing)*2.5); }
}
  .\[\&\]\:border-0 { border-style: var(--tw-border-style); border-width: 0=
px; }
  .\[\&_path\]\:stroke-current path { stroke: currentcolor; }
  .\[\&_svg\]\:h-full svg { height: 100%; }
  .\[\&_svg\]\:w-full svg { width: 100%; }
  .\[\&_tr\:last-child\]\:border-b-0 tr:last-child { border-bottom-style: v=
ar(--tw-border-style); border-bottom-width: 0px; }
  .\[\&\&\]\:text-black.\[\&\&\]\:text-black { color: rgb(0, 0, 0); }
  .\[\&\&\]\:underline.\[\&\&\]\:underline { text-decoration-line: underlin=
e; }
  @media (hover: hover) {
  .\[\&\&\]\:hover\:text-black.\[\&\&\]\:hover\:text-black:hover { color: r=
gb(0, 0, 0); }
}
  .dark\:\[\&\&\]\:text-white:is(.dark *).dark\:\[\&\&\]\:text-white:is(.da=
rk *) { color: rgb(255, 255, 255); }
  @media (hover: hover) {
  .dark\:\[\&\&\]\:hover\:text-white:is(.dark *).dark\:\[\&\&\]\:hover\:tex=
t-white:is(.dark *):hover { color: rgb(255, 255, 255); }
}
  .\[\&\:\:-webkit-search-cancel-button\]\:hidden::-webkit-search-cancel-bu=
tton { display: none; }
  .\[\&\:\:after\]\:content-\[\'\\\\a\'\]::after { --tw-content: "\\a"; con=
tent: var(--tw-content); }
  .\[\&\:not\(\:has\(strong\)\)\]\:mb-\[18px\]:not(:has(strong)) { margin-b=
ottom: 18px; }
  .\[\&\>\:last-child\]\:mb-0 > :last-child { margin-bottom: calc(var(--spa=
cing)*0); }
  .\[\&\>div\:nth-child\(2\)\]\:overflow-y-hidden > div:nth-child(2) { over=
flow-y: hidden; }
  .text-message + .\[\.text-message\+\&\]\:mt-5 { margin-top: calc(var(--sp=
acing)*5); }
  @media (min-width: 1560px) {
  .\[\@media\(min-width\:1560px\)\]\:top-0 { top: calc(var(--spacing)*0); }
}
  tr:last-child .\[tr\:last-child_\&\]\:border-b-0 { border-bottom-style: v=
ar(--tw-border-style); border-bottom-width: 0px; }
  tr[data-disabled=3D"true"] .\[tr\[data-disabled\=3Dtrue\]_\&\]\:opacity-5=
0 { opacity: 0.5; }
  .overflow-auto > *, .overflow-scroll > *, .overflow-x-auto > *, .overflow=
-y-auto > * { scrollbar-color: auto; }
  .overflow-auto, .overflow-scroll, .overflow-x-auto, .overflow-x-scroll, .=
overflow-y-auto, .overflow-y-scroll { scrollbar-color: var(--main-surface-t=
ertiary)transparent; }
  .overflow-auto:hover, .overflow-scroll:hover, .overflow-x-auto:hover, .ov=
erflow-y-auto:hover { scrollbar-color: var(--gray-200)transparent; }
  .dark .overflow-auto:hover, .dark .overflow-scroll:hover, .dark .overflow=
-x-auto:hover, .dark .overflow-y-auto:hover { scrollbar-color: var(--gray-6=
00)transparent; }
}

.dark .light, .light, html { --bg-primary: #fff; --bg-secondary: #e8e8e8; -=
-bg-tertiary: #f3f3f3; --bg-scrim: #0d0d0d80; --bg-elevated-primary: #fff; =
--bg-elevated-secondary: #f9f9f9; --bg-status-warning: #fff5f0; --bg-status=
-error: #fff0f0; --border-default: #0d0d0d1a; --border-heavy: #0d0d0d26; --=
border-light: #0d0d0d0d; --border-status-warning: #ffe7d9; --border-status-=
error: #ffe1e0; --text-primary: #0d0d0d; --text-secondary: #5d5d5d; --text-=
tertiary: #8f8f8f; --text-inverted: #fff; --text-inverted-static: #fff; --t=
ext-accent: #66b5ff; --text-status-warning: #e25507; --text-status-error: #=
e02e2a; --icon-primary: #0d0d0d; --icon-secondary: #5d5d5d; --icon-tertiary=
: #8f8f8f; --icon-inverted: #fff; --icon-inverted-static: #fff; --icon-acce=
nt: #0285ff; --icon-status-warning: #e25507; --icon-status-error: #e02e2a; =
--interactive-bg-primary-default: #0d0d0d; --interactive-bg-primary-hover: =
#0d0d0dcc; --interactive-bg-primary-press: #0d0d0de5; --interactive-bg-prim=
ary-inactive: #0d0d0d; --interactive-bg-primary-selected: #0d0d0d; --intera=
ctive-bg-secondary-default: #0d0d0d00; --interactive-bg-secondary-hover: #0=
d0d0d05; --interactive-bg-secondary-press: #0d0d0d0d; --interactive-bg-seco=
ndary-inactive: #0d0d0d00; --interactive-bg-secondary-selected: #0d0d0d0d; =
--interactive-bg-tertiary-default: #fff; --interactive-bg-tertiary-hover: #=
f9f9f9; --interactive-bg-tertiary-press: #f3f3f3; --interactive-bg-tertiary=
-inactive: #fff; --interactive-bg-tertiary-selected: #fff; --interactive-bg=
-accent-default: #e5f3ff; --interactive-bg-accent-hover: #cce6ff; --interac=
tive-bg-accent-press: #99ceff; --interactive-bg-accent-inactive: #e5f3ff; -=
-interactive-bg-danger-primary-default: #e02e2a; --interactive-bg-danger-pr=
imary-hover: #fa423e; --interactive-bg-danger-primary-press: #ba2623; --int=
eractive-bg-danger-primary-inactive: #e02e2a; --interactive-bg-danger-secon=
dary-default: #0d0d0d00; --interactive-bg-danger-secondary-hover: #0d0d0d00=
; --interactive-bg-danger-secondary-press: #0d0d0d00; --interactive-bg-dang=
er-secondary-inactive: #0d0d0d00; --interactive-border-focus: #0d0d0d; --in=
teractive-border-secondary-default: #0d0d0d1a; --interactive-border-seconda=
ry-hover: #0d0d0d0d; --interactive-border-secondary-press: #0d0d0d0d; --int=
eractive-border-secondary-inactive: #0d0d0d1a; --interactive-border-tertiar=
y-default: #0d0d0d1a; --interactive-border-tertiary-hover: #0d0d0d1a; --int=
eractive-border-tertiary-press: #0d0d0d0d; --interactive-border-tertiary-in=
active: #0d0d0d1a; --interactive-border-danger-secondary-default: #e02e2a; =
--interactive-border-danger-secondary-hover: #fa423e; --interactive-border-=
danger-secondary-press: #ba2623; --interactive-border-danger-secondary-inac=
tive: #e02e2a; --interactive-label-primary-default: #fff; --interactive-lab=
el-primary-hover: #fff; --interactive-label-primary-press: #fff; --interact=
ive-label-primary-inactive: #fff; --interactive-label-primary-selected: #ff=
f; --interactive-label-secondary-default: #0d0d0d; --interactive-label-seco=
ndary-hover: #0d0d0de5; --interactive-label-secondary-press: #0d0d0dcc; --i=
nteractive-label-secondary-inactive: #0d0d0d; --interactive-label-secondary=
-selected: #0d0d0d; --interactive-label-tertiary-default: #5d5d5d; --intera=
ctive-label-tertiary-hover: #5d5d5d; --interactive-label-tertiary-press: #5=
d5d5d; --interactive-label-tertiary-inactive: #5d5d5d; --interactive-label-=
tertiary-selected: #5d5d5d; --interactive-label-accent-default: #0285ff; --=
interactive-label-accent-hover: #0285ff; --interactive-label-accent-press: =
#0285ff; --interactive-label-accent-inactive: #0285ff; --interactive-label-=
accent-selected: #0285ff; --interactive-label-danger-primary-default: #fff;=
 --interactive-label-danger-primary-hover: #fff; --interactive-label-danger=
-primary-press: #fff; --interactive-label-danger-primary-inactive: #fff; --=
interactive-label-danger-secondary-default: #e02e2a; --interactive-label-da=
nger-secondary-hover: #fa423e; --interactive-label-danger-secondary-press: =
#ba2623; --interactive-label-danger-secondary-inactive: #e02e2a; --interact=
ive-icon-primary-default: #fff; --interactive-icon-primary-hover: #fff; --i=
nteractive-icon-primary-press: #fff; --interactive-icon-primary-selected: #=
fff; --interactive-icon-primary-inactive: #fff; --interactive-icon-secondar=
y-default: #0d0d0d; --interactive-icon-secondary-hover: #0d0d0de5; --intera=
ctive-icon-secondary-press: #0d0d0dcc; --interactive-icon-secondary-selecte=
d: #0d0d0d; --interactive-icon-secondary-inactive: #0d0d0d; --interactive-i=
con-tertiary-default: #5d5d5d; --interactive-icon-tertiary-hover: #5d5d5d; =
--interactive-icon-tertiary-press: #5d5d5d; --interactive-icon-tertiary-sel=
ected: #5d5d5d; --interactive-icon-tertiary-inactive: #5d5d5d; --interactiv=
e-icon-accent-default: #0285ff; --interactive-icon-accent-hover: #0285ff; -=
-interactive-icon-accent-press: #0285ff; --interactive-icon-accent-selected=
: #0285ff; --interactive-icon-accent-inactive: #0285ff; --interactive-icon-=
danger-primary-default: #fff; --interactive-icon-danger-primary-hover: #fff=
; --interactive-icon-danger-primary-press: #fff; --interactive-icon-danger-=
primary-inactive: #fff; --interactive-icon-danger-secondary-default: #e02e2=
a; --interactive-icon-danger-secondary-hover: #fa423e; --interactive-icon-d=
anger-secondary-press: #ba2623; --interactive-icon-danger-secondary-inactiv=
e: #e02e2a; --utility-scrollbar: #0000000a; }

.dark { --bg-primary: #212121; --bg-secondary: #303030; --bg-tertiary: #414=
141; --bg-scrim: #0d0d0d80; --bg-elevated-primary: #303030; --bg-elevated-s=
econdary: #181818; --bg-status-warning: #4a2206; --bg-status-error: #4d100e=
; --border-default: #ffffff26; --border-heavy: #fff3; --border-light: #ffff=
ff0d; --border-status-warning: #4a2206; --border-status-error: #4d100e; --t=
ext-primary: #fff; --text-secondary: #f3f3f3; --text-tertiary: #afafaf; --t=
ext-inverted: #0d0d0d; --text-inverted-static: #fff; --text-accent: #66b5ff=
; --text-status-warning: #ff9e6c; --text-status-error: #ff8583; --icon-prim=
ary: #e8e8e8; --icon-secondary: #cdcdcd; --icon-tertiary: #afafaf; --icon-i=
nverted: #0d0d0d; --icon-inverted-static: #fff; --icon-accent: #66b5ff; --i=
con-status-warning: #ff9e6c; --icon-status-error: #ff8583; --interactive-bg=
-primary-default: #fff; --interactive-bg-primary-hover: #fffc; --interactiv=
e-bg-primary-press: #ffffffe5; --interactive-bg-primary-inactive: #fff; --i=
nteractive-bg-primary-selected: #fff; --interactive-bg-secondary-default: #=
fff0; --interactive-bg-secondary-hover: #ffffff1a; --interactive-bg-seconda=
ry-press: #ffffff0d; --interactive-bg-secondary-inactive: #fff0; --interact=
ive-bg-secondary-selected: #ffffff1a; --interactive-bg-tertiary-default: #2=
12121; --interactive-bg-tertiary-hover: #181818; --interactive-bg-tertiary-=
press: #0d0d0d; --interactive-bg-tertiary-inactive: #212121; --interactive-=
bg-tertiary-selected: #212121; --interactive-bg-accent-default: #013566; --=
interactive-bg-accent-hover: #003f7a; --interactive-bg-accent-press: #004f9=
9; --interactive-bg-accent-inactive: #013566; --interactive-bg-danger-prima=
ry-default: #e02e2a; --interactive-bg-danger-primary-hover: #fa423e; --inte=
ractive-bg-danger-primary-press: #ba2623; --interactive-bg-danger-primary-i=
nactive: #e02e2a; --interactive-bg-danger-secondary-default: #fff0; --inter=
active-bg-danger-secondary-hover: #fff0; --interactive-bg-danger-secondary-=
press: #fff0; --interactive-bg-danger-secondary-inactive: #fff0; --interact=
ive-border-focus: #fff; --interactive-border-secondary-default: #ffffff26; =
--interactive-border-secondary-hover: #ffffff26; --interactive-border-secon=
dary-press: #fff3; --interactive-border-secondary-inactive: #ffffff1a; --in=
teractive-border-tertiary-default: #ffffff1a; --interactive-border-tertiary=
-hover: #ffffff26; --interactive-border-tertiary-press: #ffffff1a; --intera=
ctive-border-tertiary-inactive: #ffffff1a; --interactive-border-danger-seco=
ndary-default: #fa423e; --interactive-border-danger-secondary-hover: #ff676=
4; --interactive-border-danger-secondary-press: #e02e2a; --interactive-bord=
er-danger-secondary-inactive: #fa423e; --interactive-label-primary-default:=
 #0d0d0d; --interactive-label-primary-hover: #0d0d0d; --interactive-label-p=
rimary-press: #0d0d0d; --interactive-label-primary-inactive: #0d0d0d; --int=
eractive-label-primary-selected: #0d0d0d; --interactive-label-secondary-def=
ault: #f3f3f3; --interactive-label-secondary-hover: #ffffffe5; --interactiv=
e-label-secondary-press: #fffc; --interactive-label-secondary-inactive: #f3=
f3f3; --interactive-label-secondary-selected: #f3f3f3; --interactive-label-=
tertiary-default: #cdcdcd; --interactive-label-tertiary-hover: #cdcdcd; --i=
nteractive-label-tertiary-press: #cdcdcd; --interactive-label-tertiary-inac=
tive: #cdcdcd; --interactive-label-tertiary-selected: #cdcdcd; --interactiv=
e-label-accent-default: #99ceff; --interactive-label-accent-hover: #99ceff;=
 --interactive-label-accent-press: #99ceff; --interactive-label-accent-inac=
tive: #99ceff; --interactive-label-accent-selected: #99ceff; --interactive-=
label-danger-primary-default: #fff; --interactive-label-danger-primary-hove=
r: #fff; --interactive-label-danger-primary-press: #fff; --interactive-labe=
l-danger-primary-inactive: #fff; --interactive-label-danger-secondary-defau=
lt: #fa423e; --interactive-label-danger-secondary-hover: #ff6764; --interac=
tive-label-danger-secondary-press: #e02e2a; --interactive-label-danger-seco=
ndary-inactive: #fa423e; --interactive-icon-primary-default: #0d0d0d; --int=
eractive-icon-primary-hover: #0d0d0d; --interactive-icon-primary-press: #0d=
0d0d; --interactive-icon-primary-selected: #0d0d0d; --interactive-icon-prim=
ary-inactive: #0d0d0d; --interactive-icon-secondary-default: #f3f3f3; --int=
eractive-icon-secondary-hover: #ffffffe5; --interactive-icon-secondary-pres=
s: #fffc; --interactive-icon-secondary-selected: #f3f3f3; --interactive-ico=
n-secondary-inactive: #f3f3f3; --interactive-icon-tertiary-default: #cdcdcd=
; --interactive-icon-tertiary-hover: #cdcdcd; --interactive-icon-tertiary-p=
ress: #cdcdcd; --interactive-icon-tertiary-selected: #cdcdcd; --interactive=
-icon-tertiary-inactive: #cdcdcd; --interactive-icon-accent-default: #99cef=
f; --interactive-icon-accent-hover: #99ceff; --interactive-icon-accent-pres=
s: #99ceff; --interactive-icon-accent-selected: #99ceff; --interactive-icon=
-accent-inactive: #99ceff; --interactive-icon-danger-primary-default: #fff;=
 --interactive-icon-danger-primary-hover: #fff; --interactive-icon-danger-p=
rimary-press: #fff; --interactive-icon-danger-primary-inactive: #fff; --int=
eractive-icon-danger-secondary-default: #fa423e; --interactive-icon-danger-=
secondary-hover: #ff6764; --interactive-icon-danger-secondary-press: #e02e2=
a; --interactive-icon-danger-secondary-inactive: #fa423e; --utility-scrollb=
ar: #fff3; }

html:not(.screen-arch), html:not(.screen-arch) body { background-color: var=
(--main-surface-primary); height: 100%; }

html.screen-arch, html.screen-arch body { background-color: var(--main-surf=
ace-primary); min-height: 100%; }

#__next, #root { height: 100%; }

.markdown { max-width: unset; }

.markdown.streaming-animation.block-entry-animation pre, .markdown.streamin=
g-animation.block-entry-animation table { position: relative; overflow: cli=
p !important; }

:is(.markdown.streaming-animation.block-entry-animation pre, .markdown.stre=
aming-animation.block-entry-animation table)::after { --overlap-distance: 1=
0px; --overlap-negative-distance: -10px; content: ""; display: flex; height=
: calc(100% + var(--overlap-distance)*2); inset: 0px; position: absolute; t=
ranslate: 0 var(--streaming-reveal-amount,var(--overlap-negative-distance))=
; }

[dir=3D"ltr"] :is(.markdown.streaming-animation.block-entry-animation pre, =
.markdown.streaming-animation.block-entry-animation table)::after { backgro=
und-image: linear-gradient(180deg,transparent,var(--main-surface-primary)va=
r(--overlap-distance)); }

[dir=3D"rtl"] :is(.markdown.streaming-animation.block-entry-animation pre, =
.markdown.streaming-animation.block-entry-animation table)::after { backgro=
und-image: linear-gradient(-180deg,transparent,var(--main-surface-primary)v=
ar(--overlap-distance)); }

@media (prefers-reduced-motion: no-preference) {
  :is(.markdown.streaming-animation.block-entry-animation pre, .markdown.st=
reaming-animation.block-entry-animation table)::after { transition: .5s tra=
nslate var(--spring-standard); }
}

.markdown.streaming-animation h1, .markdown.streaming-animation h2, .markdo=
wn.streaming-animation h3, .markdown.streaming-animation h4, .markdown.stre=
aming-animation h5, .markdown.streaming-animation h6, .markdown.streaming-a=
nimation li:not(:has(pre)) { width: fit-content; }

.markdown pre { margin-top: calc(var(--spacing)*2); }

.markdown pre:first-child { margin-top: calc(var(--spacing)*0); }

.markdown h1 { --tw-font-weight: var(--font-weight-bold); --tw-tracking: -.=
04rem; font-weight: var(--font-weight-bold); letter-spacing: -0.04rem; }

.markdown h1:first-child { margin-top: calc(var(--spacing)*0); }

.markdown h2 { --tw-font-weight: var(--font-weight-semibold); font-weight: =
var(--font-weight-semibold); margin-bottom: calc(var(--spacing)*4); margin-=
top: calc(var(--spacing)*8); }

.markdown h2:first-child { margin-top: calc(var(--spacing)*0); }

.markdown h3 { --tw-font-weight: var(--font-weight-semibold); font-weight: =
var(--font-weight-semibold); margin-bottom: calc(var(--spacing)*2); margin-=
top: calc(var(--spacing)*4); }

.markdown h3:first-child { margin-top: calc(var(--spacing)*0); }

.markdown h4 { --tw-font-weight: var(--font-weight-semibold); font-weight: =
var(--font-weight-semibold); margin-bottom: calc(var(--spacing)*2); margin-=
top: calc(var(--spacing)*4); }

.markdown h4:first-child { margin-top: calc(var(--spacing)*0); }

.markdown h5 { --tw-font-weight: var(--font-weight-semibold); font-weight: =
var(--font-weight-semibold); }

.markdown h5:first-child { margin-top: calc(var(--spacing)*0); }

.markdown blockquote { --tw-leading: calc(var(--spacing)*6); border-style: =
var(--tw-border-style); border-width: 0px; line-height: calc(var(--spacing)=
*6); margin: calc(var(--spacing)*0); padding-block: calc(var(--spacing)*2);=
 position: relative; }

[dir=3D"ltr"] .markdown blockquote { padding-left: calc(var(--spacing)*6); =
}

[dir=3D"rtl"] .markdown blockquote { padding-right: calc(var(--spacing)*6);=
 }

.markdown blockquote > p { --tw-font-weight: var(--font-weight-normal); fon=
t-weight: var(--font-weight-normal); margin: calc(var(--spacing)*0); }

.markdown blockquote > p::after, .markdown blockquote > p::before { display=
: none; }

.markdown blockquote::after { background-color: var(--border-medium); borde=
r-radius: 2px; bottom: 0.5rem; content: ""; position: absolute; top: 0.5rem=
; width: 4px; }

[dir=3D"ltr"] .markdown blockquote::after { left: 0px; }

[dir=3D"rtl"] .markdown blockquote::after { right: 0px; }

.markdown p { margin-bottom: 0.5rem; }

.markdown p:not(:first-child) { margin-top: 0.5rem; }

.markdown p + :where(ol, ul) { margin-top: 0px; }

.markdown :where(ol, ul) > li > :last-child { margin-bottom: 0px; }

.markdown :where(ol, ul) > li > :first-child { margin-bottom: 0px; margin-t=
op: 0px; }

.markdown table { --tw-border-spacing-x: calc(var(--spacing)*0); --tw-borde=
r-spacing-y: calc(var(--spacing)*0); border-collapse: separate; border-spac=
ing: var(--tw-border-spacing-x)var(--tw-border-spacing-y); margin: calc(var=
(--spacing)*0); }

.markdown table [data-col-size=3D"sm"] { max-width: calc(var(--thread-conte=
nt-max-width)*6/24); }

.markdown table [data-col-size=3D"md"] { max-width: calc(var(--thread-conte=
nt-max-width)*8/24); min-width: calc(var(--thread-content-max-width)*6/24);=
 }

.markdown table [data-col-size=3D"lg"] { max-width: calc(var(--thread-conte=
nt-max-width)*12/24); min-width: calc(var(--thread-content-max-width)*8/24)=
; }

.markdown table [data-col-size=3D"xl"] { max-width: calc(var(--thread-conte=
nt-max-width)*18/24); min-width: calc(var(--thread-content-max-width)*14/24=
); }

.markdown th { --tw-leading: calc(var(--spacing)*4); border-bottom-style: v=
ar(--tw-border-style); border-bottom-width: 1px; border-color: var(--border=
-medium); line-height: calc(var(--spacing)*4); padding-block: calc(var(--sp=
acing)*2); }

.markdown th:not(:last-child) { padding-inline-end: calc(var(--spacing)*6);=
 }

.markdown tr:not(:last-child) td { border-bottom-style: var(--tw-border-sty=
le); border-bottom-width: 1px; border-color: var(--border-light); }

.markdown tr:last-child td { padding-bottom: calc(var(--spacing)*6); }

.markdown td { padding-block: calc(var(--spacing)*2.5); }

.markdown td:not(:last-child) { padding-inline-end: calc(var(--spacing)*6);=
 }

.markdown ol, .markdown ul { margin-bottom: calc(var(--spacing)*4); }

.markdown li::marker { --tw-font-weight: var(--font-weight-bold); color: va=
r(--text-secondary); font-weight: var(--font-weight-bold); }

.markdown a { --tw-font-weight: var(--font-weight-normal); color: var(--lin=
k); font-weight: var(--font-weight-normal); text-decoration-line: none; }

@media (hover: hover) {
  .markdown a:hover { color: var(--link-hover); }
}

.gizmo .markdown > :not(pre), .gizmo .markdown > :not(pre) > :not(a) { colo=
r: var(--text-primary); }

.markdown .float-image + p { margin-top: calc(var(--spacing)*0); }

.markdown hr { border-color: var(--border-light); margin-block: calc(var(--=
spacing)*10); }

.deep-research-result p { display: inline-block; vertical-align: top; width=
: 100%; }

@keyframes blink {=20
  100% { visibility: hidden; }
}

@keyframes show {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

.result-streaming > :not(ol, ul, pre, div):last-child::after, .result-strea=
ming > pre:last-child code::after { content: "=E2=97=8F"; font-family: Circ=
le, system-ui, sans-serif; line-height: normal; vertical-align: baseline; }

.result-streaming.no-flow > :not(ol, ul, pre):last-child::after, .result-st=
reaming.no-flow > pre:last-child code::after { margin-top: 0.25rem; positio=
n: absolute; }

.pulse > :not(ol, ul, pre, div):last-child::after, .pulse > pre:last-child =
code::after { -webkit-font-smoothing: subpixel-antialiased; animation: 1.25=
s ease-in-out 0s infinite normal none running pulseSize; backface-visibilit=
y: hidden; border-radius: 50%; content: "=E2=97=8F"; display: inline-block;=
 transform: translateZ(0px); transform-origin: 50% center; will-change: tra=
nsform; }

[dir=3D"ltr"] .pulse > :not(ol, ul, pre, div):last-child::after, [dir=3D"lt=
r"] .pulse > pre:last-child code::after { padding-left: 0.1em; }

[dir=3D"rtl"] .pulse > :not(ol, ul, pre, div):last-child::after, [dir=3D"rt=
l"] .pulse > pre:last-child code::after { padding-right: 0.1em; }

.result-thinking p:last-child::after { -webkit-font-smoothing: subpixel-ant=
ialiased; animation: 1.25s ease-in-out 0s infinite normal none running puls=
eSize; backface-visibility: hidden; background-color: var(--text-primary); =
border-radius: 50%; box-sizing: border-box; content: " "; display: block; h=
eight: 12px; position: absolute; top: 11px; transform: translateZ(0px); tra=
nsform-origin: 50% center; width: 12px; will-change: transform; }

:root { --sharp-edge-top-shadow: 0 1px 0 var(--border-sharp); --sharp-edge-=
top-shadow-placeholder: 0 1px 0 transparent; --sharp-edge-bottom-shadow: 0 =
-1px 0 var(--border-sharp); --sharp-edge-bottom-shadow-placeholder: 0 -1px =
0 transparent; }

@keyframes add-top-shadow {=20
  0% { box-shadow: var(--sharp-edge-top-shadow-placeholder); }
  0.1%, 100% { box-shadow: var(--sharp-edge-top-shadow); }
}

@keyframes add-bottom-shadow {=20
  0%, 99.9% { box-shadow: var(--sharp-edge-bottom-shadow); }
  100% { box-shadow: var(--sharp-edge-bottom-shadow-placeholder); }
}

.sharp-edge-on-scroll-start { box-shadow: rgba(0, 0, 0, 0) 0px 1px; }

@supports (animation-timeline:--agi) {
  .sharp-edge-on-scroll-start { animation: 1ms linear 0s 1 normal both runn=
ing add-top-shadow; }
}

.sharp-edge-on-scroll-end { box-shadow: rgba(0, 0, 0, 0) 0px -1px; }

.sharp-edge-on-scroll-end, .sharp-edge-on-scroll-start { animation-timeline=
: scroll(); }

@keyframes shimmer-skeleton {=20
  0% { background-position: 100% center; }
  100% { background-position: 0px center; }
}

@supports selector(:has(*)) {
  .result-streaming:not(.streaming-animation) > :is(ul, ol):last-child > li=
:last-child:not(:has(* > li))::after, .result-streaming:not(.streaming-anim=
ation) > :is(ul, ol):last-child > li:last-child > :is(ul, ol):last-child > =
li:last-child::after, .result-streaming:not(.streaming-animation) > :is(ul,=
 ol):last-child > li:last-child > :is(ul, ol):last-child > li:last-child > =
:is(ul, ol):last-child > li:last-child::after { content: "=E2=97=8F"; font-=
family: Circle, system-ui, sans-serif; line-height: normal; vertical-align:=
 baseline; }
  [dir=3D"ltr"] .result-streaming:not(.streaming-animation) > :is(ul, ol):l=
ast-child > li:last-child:not(:has(* > li))::after, [dir=3D"ltr"] .result-s=
treaming:not(.streaming-animation) > :is(ul, ol):last-child > li:last-child=
 > :is(ul, ol):last-child > li:last-child::after, [dir=3D"ltr"] .result-str=
eaming:not(.streaming-animation) > :is(ul, ol):last-child > li:last-child >=
 :is(ul, ol):last-child > li:last-child > :is(ul, ol):last-child > li:last-=
child::after { margin-left: 0.25rem; }
  [dir=3D"rtl"] .result-streaming:not(.streaming-animation) > :is(ul, ol):l=
ast-child > li:last-child:not(:has(* > li))::after, [dir=3D"rtl"] .result-s=
treaming:not(.streaming-animation) > :is(ul, ol):last-child > li:last-child=
 > :is(ul, ol):last-child > li:last-child::after, [dir=3D"rtl"] .result-str=
eaming:not(.streaming-animation) > :is(ul, ol):last-child > li:last-child >=
 :is(ul, ol):last-child > li:last-child > :is(ul, ol):last-child > li:last-=
child::after { margin-right: 0.25rem; }
}

@supports not selector(:has(*)) {
  .result-streaming > ol:last-child > li:last-child::after, .result-streami=
ng > ul:last-child > li:last-child::after { content: "=E2=97=8F"; font-fami=
ly: Circle, system-ui, sans-serif; line-height: normal; vertical-align: bas=
eline; }
  [dir=3D"ltr"] .result-streaming > ol:last-child > li:last-child::after, [=
dir=3D"ltr"] .result-streaming > ul:last-child > li:last-child::after { mar=
gin-left: 0.25rem; }
  [dir=3D"rtl"] .result-streaming > ol:last-child > li:last-child::after, [=
dir=3D"rtl"] .result-streaming > ul:last-child > li:last-child::after { mar=
gin-right: 0.25rem; }
}

.result-streaming .katex-error { display: none; }

@keyframes pulse-dot {=20
  100% { transform: scale(var(--pulse-scale,1.3)); }
}

@keyframes float-sidebar-in {=20
  0% { opacity: 0; translate: -60%; }
  70% { opacity: 1; }
  100% { translate: 0px; }
}

@keyframes float-sidebar-out {=20
  0% { translate: 0px; }
  30% { opacity: 1; }
  100% { opacity: 0; translate: -60%; }
}

.pulsing-dot { aspect-ratio: 1 / 1; background: var(--dot-color); border-ra=
dius: 50%; opacity: var(--dot-opacity,1); width: 1rem; }

@media (prefers-reduced-motion: no-preference) {
  .pulsing-dot { animation: pulse-dot 1s infinite var(--easing-common)alter=
nate-reverse; transition: .2s opacity var(--easing-common); translate: 0px =
3px; }
}

@keyframes pulseSize {=20
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.25); }
}

@keyframes toast-open {=20
  0% { opacity: 0; transform: translateY(-100%); }
  100% { transform: translateY(0px); }
}

@keyframes toast-close {=20
  0% { opacity: 1; }
  100% { opacity: 0; }
}

.toast-root { align-items: center; display: flex; flex-direction: column; h=
eight: 0px; transition: 0.24s cubic-bezier(0, 0, 0.2, 1); }

.toast-root[data-state=3D"entered"], .toast-root[data-state=3D"entering"] {=
 animation: 0.24s cubic-bezier(0.175, 0.885, 0.32, 1) 0s 1 normal both runn=
ing toast-open; }

.toast-root[data-state=3D"exiting"] { animation: 0.12s cubic-bezier(0.4, 0,=
 1, 1) 0s 1 normal both running toast-close; }

.toast-root .alert-root { box-shadow: rgba(67, 90, 111, 0.3) 0px 0px 1px, r=
gba(67, 90, 111, 0.3) 0px 5px 8px -4px; flex-shrink: 0; pointer-events: all=
; }

.title { font-feature-settings: normal; font-family: ui-sans-serif, system-=
ui, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color E=
moji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; font-variat=
ion-settings: normal; }

.icon-shimmer { animation: 5s cubic-bezier(0.2, 0.44, 0.38, 1.02) 0s infini=
te normal none running icon-shimmer; background-repeat: no-repeat; mask: li=
near-gradient(80deg, currentcolor 30%, rgba(0, 0, 0, 0.333), currentcolor 7=
0%) 100% center / 300% 100%; }

@keyframes icon-shimmer {=20
  0% { mask-position: 100% center; }
  20% { mask-position: 0px center; }
  100% { mask-position: 0px center; }
}

@keyframes loading-results-shimmer {=20
  0% { background-position: -1000px 0px; }
  100% { background-position: 1000px 0px; }
}

@keyframes diagonalSweep {=20
  0% { transform: translate(-100%, -100%); }
  100% { transform: translate(100%, 100%); }
}

.diagonal-sweep-gradient { animation: 4s ease-out 0s infinite normal none r=
unning diagonalSweep; }

[dir=3D"ltr"] .diagonal-sweep-gradient { background-image: linear-gradient(=
135deg, rgba(255, 255, 255, 0) 46%, rgba(255, 255, 255, 0.2), rgba(255, 255=
, 255, 0) 54%); }

[dir=3D"rtl"] .diagonal-sweep-gradient { background-image: linear-gradient(=
-135deg, rgba(255, 255, 255, 0) 46%, rgba(255, 255, 255, 0.2), rgba(255, 25=
5, 255, 0) 54%); }

.loading-results-shimmer { animation: 3s linear 0s infinite normal none run=
ning loading-results-shimmer; background-image: ; background-position-x: ; =
background-position-y: ; background-repeat: ; background-attachment: ; back=
ground-origin: ; background-clip: ; background-color: ; background-size: 10=
00px 100%; }

.hint-pill { --tw-font-weight: var(--font-weight-semibold); color: var(--hi=
nt-text); font-weight: var(--font-weight-semibold); }

@keyframes loading-shimmer {=20
  0% { background-position: -100% 0px; }
  100% { background-position: 250% 0px; }
}

.no-scrollbar::-webkit-scrollbar { display: none; }

.no-scrollbar { scrollbar-width: none; }

.gizmo-bot-avatar { outline: solid 1px var(--main-surface-tertiary); }

[dir=3D"ltr"] div[data-radix-popper-content-wrapper]:has(> div[data-side=3D=
"right"]) { left: min(0px,var(--radix-popper-available-width) + (-1*var(--r=
adix-popper-anchor-width))) !important; }

[dir=3D"rtl"] div[data-radix-popper-content-wrapper]:has(> div[data-side=3D=
"right"]) { right: min(0px,var(--radix-popper-available-width) + (-1*var(--=
radix-popper-anchor-width))) !important; }

[dir=3D"ltr"] div[data-radix-popper-content-wrapper]:has(> div[data-side=3D=
"left"]) { left: max(0px,(-1*var(--radix-popper-available-width)) + var(--r=
adix-popper-anchor-width)) !important; }

[dir=3D"rtl"] div[data-radix-popper-content-wrapper]:has(> div[data-side=3D=
"left"]) { right: max(0px,(-1*var(--radix-popper-available-width)) + var(--=
radix-popper-anchor-width)) !important; }

#sidebar-summarizer p:not(:first-child) { margin-top: 0px; }

@property --tw-border-style { syntax: "*"; inherits: false; initial-value: =
solid; }

@property --tw-blur { syntax: "*"; inherits: false; }

@property --tw-brightness { syntax: "*"; inherits: false; }

@property --tw-contrast { syntax: "*"; inherits: false; }

@property --tw-grayscale { syntax: "*"; inherits: false; }

@property --tw-hue-rotate { syntax: "*"; inherits: false; }

@property --tw-invert { syntax: "*"; inherits: false; }

@property --tw-opacity { syntax: "*"; inherits: false; }

@property --tw-saturate { syntax: "*"; inherits: false; }

@property --tw-sepia { syntax: "*"; inherits: false; }

@property --tw-drop-shadow { syntax: "*"; inherits: false; }

@property --tw-border-spacing-x { syntax: "<length>"; inherits: false; init=
ial-value: 0; }

@property --tw-border-spacing-y { syntax: "<length>"; inherits: false; init=
ial-value: 0; }

@property --tw-translate-x { syntax: "*"; inherits: false; initial-value: 0=
; }

@property --tw-translate-y { syntax: "*"; inherits: false; initial-value: 0=
; }

@property --tw-translate-z { syntax: "*"; inherits: false; initial-value: 0=
; }

@property --tw-scale-x { syntax: "*"; inherits: false; initial-value: 1; }

@property --tw-scale-y { syntax: "*"; inherits: false; initial-value: 1; }

@property --tw-scale-z { syntax: "*"; inherits: false; initial-value: 1; }

@property --tw-rotate-x { syntax: "*"; inherits: false; initial-value: rota=
teX(0); }

@property --tw-rotate-y { syntax: "*"; inherits: false; initial-value: rota=
teY(0); }

@property --tw-rotate-z { syntax: "*"; inherits: false; initial-value: rota=
teZ(0); }

@property --tw-skew-x { syntax: "*"; inherits: false; initial-value: skewX(=
0); }

@property --tw-skew-y { syntax: "*"; inherits: false; initial-value: skewY(=
0); }

@property --tw-pan-x { syntax: "*"; inherits: false; }

@property --tw-pan-y { syntax: "*"; inherits: false; }

@property --tw-pinch-zoom { syntax: "*"; inherits: false; }

@property --tw-scroll-snap-strictness { syntax: "*"; inherits: false; initi=
al-value: proximity; }

@property --tw-space-y-reverse { syntax: "*"; inherits: false; initial-valu=
e: 0; }

@property --tw-space-x-reverse { syntax: "*"; inherits: false; initial-valu=
e: 0; }

@property --tw-divide-x-reverse { syntax: "*"; inherits: false; initial-val=
ue: 0; }

@property --tw-divide-y-reverse { syntax: "*"; inherits: false; initial-val=
ue: 0; }

@property --tw-gradient-position { syntax: "*"; inherits: false; }

@property --tw-gradient-from { syntax: "<color>"; inherits: false; initial-=
value: #0000; }

@property --tw-gradient-via { syntax: "<color>"; inherits: false; initial-v=
alue: #0000; }

@property --tw-gradient-to { syntax: "<color>"; inherits: false; initial-va=
lue: #0000; }

@property --tw-gradient-stops { syntax: "*"; inherits: false; }

@property --tw-gradient-via-stops { syntax: "*"; inherits: false; }

@property --tw-gradient-from-position { syntax: "<length-percentage>"; inhe=
rits: false; initial-value: 0; }

@property --tw-gradient-via-position { syntax: "<length-percentage>"; inher=
its: false; initial-value: 50%; }

@property --tw-gradient-to-position { syntax: "<length-percentage>"; inheri=
ts: false; initial-value: 100%; }

@property --tw-leading { syntax: "*"; inherits: false; }

@property --tw-tracking { syntax: "*"; inherits: false; }

@property --tw-ordinal { syntax: "*"; inherits: false; }

@property --tw-slashed-zero { syntax: "*"; inherits: false; }

@property --tw-numeric-figure { syntax: "*"; inherits: false; }

@property --tw-numeric-spacing { syntax: "*"; inherits: false; }

@property --tw-numeric-fraction { syntax: "*"; inherits: false; }

@property --tw-outline-style { syntax: "*"; inherits: false; initial-value:=
 solid; }

@property --tw-backdrop-blur { syntax: "*"; inherits: false; }

@property --tw-backdrop-brightness { syntax: "*"; inherits: false; }

@property --tw-backdrop-contrast { syntax: "*"; inherits: false; }

@property --tw-backdrop-grayscale { syntax: "*"; inherits: false; }

@property --tw-backdrop-hue-rotate { syntax: "*"; inherits: false; }

@property --tw-backdrop-invert { syntax: "*"; inherits: false; }

@property --tw-backdrop-opacity { syntax: "*"; inherits: false; }

@property --tw-backdrop-saturate { syntax: "*"; inherits: false; }

@property --tw-backdrop-sepia { syntax: "*"; inherits: false; }

@property --tw-duration { syntax: "*"; inherits: false; }

@property --tw-ease { syntax: "*"; inherits: false; }

@property --tw-contain-size { syntax: "*"; inherits: false; }

@property --tw-contain-layout { syntax: "*"; inherits: false; }

@property --tw-contain-paint { syntax: "*"; inherits: false; }

@property --tw-contain-style { syntax: "*"; inherits: false; }

@property --tw-content { syntax: "*"; inherits: false; initial-value: ""; }

@keyframes spin {=20
  100% { transform: rotate(1turn); }
}

@keyframes ping {=20
  75%, 100% { opacity: 0; transform: scale(2); }
}

@keyframes pulse {=20
  50% { opacity: 0.5; }
}

@keyframes bounce {=20
  0%, 100% { animation-timing-function: cubic-bezier(0.8, 0, 1, 1); transfo=
rm: translateY(-25%); }
  50% { animation-timing-function: cubic-bezier(0, 0, 0.2, 1); transform: n=
one; }
}

@keyframes pulsing {=20
  0% { opacity: 1; scale: 1; }
  50% { opacity: 0.9; scale: 0.875; }
  100% { opacity: 1; scale: 1; }
}

@font-face { font-family: KaTeX_AMS; font-style: normal; font-weight: 400; =
src: url("https://cdn.oaistatic.com/assets/KaTeX_AMS-Regular-e1why8ff.woff2=
") format("woff2"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 700; src: url("https://cdn.oaistatic.com/assets/KaTeX_Caligraphic-Bold-n=
63xiolk.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 400; src: url("https://cdn.oaistatic.com/assets/KaTeX_Caligraphic-Regula=
r-npwmqylf.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 7=
00; src: url("https://cdn.oaistatic.com/assets/KaTeX_Fraktur-Bold-ikhebgtj.=
woff2") format("woff2"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 4=
00; src: url("https://cdn.oaistatic.com/assets/KaTeX_Fraktur-Regular-i0egur=
y6.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Main-Bold-ktk38ybk.woff2"=
) format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Main-BoldItalic-oj033t4i.=
woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Main-Italic-2p4bq1jf.woff=
2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Main-Regular-hbkzldb8.wof=
f2") format("woff2"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Math-BoldItalic-jdo1yxu8.=
woff2") format("woff2"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/assets/KaTeX_Math-Italic-cz4b2ure.woff=
2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 700; src: url("https://cdn.oaistatic.com/assets/KaTeX_SansSerif-Bold-otxc8=
itm.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: italic; font-weight:=
 400; src: url("https://cdn.oaistatic.com/assets/KaTeX_SansSerif-Italic-k4k=
ksncm.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 400; src: url("https://cdn.oaistatic.com/assets/KaTeX_SansSerif-Regular-lt=
w53ck4.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Script; font-style: normal; font-weight: 40=
0; src: url("https://cdn.oaistatic.com/assets/KaTeX_Script-Regular-oybd33cp=
.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size1; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/assets/KaTeX_Size1-Regular-cjccv44r.w=
off2") format("woff2"); }

@font-face { font-family: KaTeX_Size2; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/assets/KaTeX_Size2-Regular-onxq3bzc.w=
off2") format("woff2"); }

@font-face { font-family: KaTeX_Size3; font-style: normal; font-weight: 400=
; src: url("data:font/woff2;base64,d09GMgABAAAAAA4oAA4AAAAAHbQAAA3TAAEAAAAA=
AAAAAAAAAAAAAAAAAAAAAAAABmAAgRQIDgmcDBEICo1oijYBNgIkA14LMgAEIAWJAAeBHAyBHBv=
bGiMRdnO0IkRRkiYDgr9KsJ1NUAf2kILNxgUmgqIgq1P89vcbIcmsQbRps3vCcXdYOKSWEPEKgZ=
gQkprQQsxIXUgq0DqpGKmIvrgkeVGtEQD9DzAO29fM9jYhxZEsL2FeURH2JN4MIcTdO049NCVdx=
Q/w9NrSYFEBKTDKpLKfNkCGDc1RwjZLQcm3vqJ2UW9Xfa3tgAHz6ivp6vgC2yD4/6352ndnN0X0=
TL7seypkjZlMsjmZnf0Mm5Q+JykRWQBKCVCVPbARPXWyQtb5VgLB6Biq7/Uixcj2WGqdI8tGSgk=
uRG+t910GKP2D7AQH0DB9FMDW/obJZ8giFI3Wg8Cvevz0M+5m0rTh7XDBlvo9Y4vm13EXmfttwI=
4mBo1EG15fxJhUiCLbiiyCf/ZA6MFAhg3pGIZGdGIVjtPn6UcMk9A/UUr9PhoNsCENw1APAq0gp=
H73e+M+0ueyHbabc3vkbcdtzcf/fiy+NxQEjf9ud/ELBHAXJ0nk4z+MXH2Ev/kWyV4k7SkvpPc9=
Qr38F6RPWnM9cN6DJ0AdD1BhtgABtmoRoFCvPsBAumNm6soZG2Gk5GyVTo2sJncSyp0jQTYoR6W=
DvTwaaEcHsxHfvuWhHA3a6bN7twRKtcGok6NsCi7jYRrM2jExsUFMxMQYuJbMhuWNOumEJy9hi2=
9Dmg5zMp/A5+hhPG19j1vBrq8JTLr8ki5VLPmG/PynJHVul440bxg5xuymHUFPBshC+nA9I1Fmw=
bRBTNHAcik3Oae0cxKoI3MOriM42UrPe51nsaGxJ+WfXubAsP84aabUlQSJ1IiE0iPETLUU4CAT=
gfXSCSpuRFRmCGbO+wSpAnzaeaCYW1VNEysRtuXCEL1kUFUbbtMv3Tilt/1c11jt3Q5bbMa84cp=
Wipp8Elw3MZhOHsOlwwVUQM3lAR35JiFQbaYCRnMF2lxAWoOg2gyoIV4PouX8HytNIfLhqpJtXB=
4vjiViUI8IJ7bkC4ikkQvKksnOTKICwnqWSZ9YS5f0WCxmpgjbIq7EJcM4aI2nmhLNY2JIUgOjX=
ZFWBHb+x5oh6cwb0Tv1ackHdKi0I9OO2wE9aogIOn540CCCziyhN+IaejtgAONKznHlHyutPrHG=
wCx9S6B8kfS4Mfi4Eyv7OU730bT1SCBjt834cXsf43zVjPUqqJjgrjeGnBxSG4aYAKFuVbeCfkD=
IjAqMb6yLNIbCuvXhMH2/+k2vkNpkORhR59N1CkzoOENvneIosjYmuTxlhUzaGEJQ/iWqx4dmwp=
mKjrwTiTGTCVozNAYqk/zXOndWxuWSmJkQpJw3pK5KX6QrLt5LATMqpmPAQhkhK6PUjzHUn7E0g=
HE0kPE0iKkolgkUx9SZmVAdDgpffdyJKg3k7VmzYGCwVXGz/tXmkOIp+vcWs+EMuhhvN0h9uhfz=
WJziBQmCREGSIFmQIkgVpAnSBRmC//6hkLZwaVhwxlrJSOdqlFtOYxlau9F2QN5Y98xmIAsiM1H=
Vp2VFX+DHHGg6Ecjh3vmqtidX3qHI2qycTk/iwxSt5UzTmEP92ZBnEWTk4Mx8Mpl78ZDokxg/KW=
b+Q0QkvdKVmq3TMW+RXEgrsziSAfNXFMhDc60N5N9jQzjfO0kBKpUZl0ZmwJ41j/B9Hz6wmRaJB=
84niNmQrzp9eSlQCDDzazGDdVi3P36VZQ+Jy4f9UBNp+3zTjqI4abaFAm+GShVaXlsGdF3FYzZc=
DI6cori4kMxUECl9IjJZpzkvitAoxKue+90pDMvcKRxLl53TmOKCmV/xRolNKSqqUxc6LStOETm=
FOiLZZptlZepcKiAzteG8PEdpnQpbOMNcMsR4RR2Bs0cKFEvSmIjAFcnarqwUL4lDhHmnVkwu1I=
wshbiCcgvOheZuYyOteufZZwlcTlLgnZ3o/WcYdzZHW/WGaqaVfmTZ1aWCceJjkbZqsfbkOtcFl=
UZM/jy+hXHDbaUobWqqXaeWobbLO99yG5N3U4wxco0rQGGcOLASFMXeJoham8M+/x6O2WywK2l4=
HGbq1CoUyC/IZikQhdq3SiuNrvAEj0AVu9x2x3lp/xWzahaxidezFVtdcb5uEnzyl0ZmYiuKI0e=
xvCd4Xc9CV1KB0db00z92wDPde0kukbvZIWN6jUWFTmPIC/Y4UPCm8UfDTFZpZNon1qLFTkBhxz=
B+FjQRA2Q/YRJT8pQigslMaUpFyAG8TMlXigiqmAZX4xgijKjRlGpLE0GdplRfCaJo0JQaSxNBk=
6ZmMzcya0FmrcisDdn0Q3HI2sWSppYigmlM1XT/kLQZSNpMJG0WkjYbSZuDpM1F0uYhFc1HxU4m=
1QJjDK6iL0S5uSj5rgXc3RejEigtcRBtqYPQsiTskmO5vosV+q4VGIKbOkDg0jtRrq+Em1YloaT=
Far3EGr1EUC8R0kus1Uus00usL97ABr2BjXoDm/QGNhuWtMVBKOwg/i78lT7hBsAvDmwHc/ao3v=
mUbBmhjeYySZNWvGkfZAgISDSaDo1SVpzGDsAEkF8B+gEapViUoZgUWXcRIGFZNm6gWbAKk0bp0=
k1MHG9fLYtV4iS2SmLEQFARzRcnf9PUS0LVn05/J9MiRRBU3v2IrvW974v4N00L7ZMk0wXP1409=
CHo/an8zTRHD3eSJ6m8D4YMkZNl3M79sqeuAsr/m3f+8/yl7A50aiAEJgeBeMWzu7ui9UfUBCe2=
TIqZIoOd/3/udRBOQidQZUERzb2/VwZN1H/Sju82ew2H2Wfr6qvfVf3hqwDvAIpkQVFy4B9Pe9e=
4/XvPeceu7h3dvO56iJPf0+A6cqA2ip18ER+iFgggiuOkvj24bby0N9j2UHIkgqIt+sVgfodC4Y=
ghLSMjSZbH0VR/6dMDrYJeKHilKTemt6v6kvzvn3/RrdWtr0GoN/xL+Sex/cPYLUpepx9cz/D46=
UPU5KXgAQa+NDps1v6J3xP1i2HtaDB0M9aX2deA7SYff//+gUCovMmIK/qfsFcOk+4Y5ZN97XlG=
6zebqtMbKgeRFi51vnxTQYBUik2rS/Cn6PC8ADR8FGxsRPB82dzfND90gIcshOcYUkfjherBz53=
odpm6TP8txlwOZ71xmfHHOvq053qFF/MRlS3jP0ELudrf2OeN8DHvp6ZceLe8qKYvWz/7yp0u4d=
KPfli3CYq0O13Ih71mylJ80tOi10On8wi+F4+LWgDPeJ30msSQt9/vkmHq9/Lvo2b461mP801v3=
W4xTcs6CbvF9UDdrSt+A8OUbpSh55qAUFXWznBBfdeJ8a4d7ugT5tvxUza3h9m4H7ptTqiG4z0g=
5dc0X29OcGlhpGFMpQo9ytTS+NViZpNdvU4kWx+LKxNY10kQ1yqGXrhe4/1nvP7E+nd5A92TtaR=
plbHSqoIdOqtRWti+fkB5/n1+/VvCmz12pG1kpQWsfi1ftlBobm0bpngs16CHkbIwdLnParxtTV=
3QYRlfJ0KFskH7pdN/YDn+yRuSd7sNH3aO0DYPggk6uWuXrfOc+fa3VTxFVvKaNxHsiHmsXyCLI=
E5yuOeN3/Jdf8HBL/5M6shjyhxHx9BjB1O0+4NLOnjLLSxwO7ukN4jMbOIcD879KLSi6Pk61Oqm=
2377n8079PXEEQ7cy7OKEC9nbpet118fxweTafpt69x/Bt8UqGzNQt7aelpc44dn5cqhwf71+qK=
p/Zf/+a0zcizOUWpl/iBcSXip0pplkatCchoH5c5aUM8I7/dWxAej8WicPL1URFZ9BDJelUwEwT=
kGqUhgSlydVes95YdXvhh9Gfz/aeFWvgVb4tuLbcv4+wLdutVZv/cUonwBD/6eDlE0aSiKK/uoH=
3+J1wDE/jMVqY2ysGufN84oIXB0sPzy8ollX/LegY74DgJXJR57sn+VGza0x3DnuIgABFM15Lma=
jjjsNlYj+JEZGbuRYcAMOWxFkPN2w6Wd46xo4gVWQR/X4lyI/R6K/YK0110GzudPRW7Y+UOBGTf=
NNzHeYT0fiH0taunBpq9HEW8OKSaBGj21L0MqenEmNRWBAWDWAk4CpNoEZJ2tTaPFgbQYj8HxtF=
ilErs3BTRwT8uO1NXQaWfIotchmPkAF5mMBAliEmZiOGVgCG9LgRzpscMAOOwowlT3JhusdazXG=
SC/hxR3UlmWVwWHpOIKheqONvjyhSiTHIkVUco5bnji8m//zL7PKaT1Vl5I6UE609f+gkr6MZKV=
yKc7zJRmCahLsdlyA5fdQkRSan9LgnnLEyGSkaKJCJog0wAgvepWBt80+1yKln1bMVtCljfNWDu=
eKLsWwaEbBSfSPTEmVRsUcYYMnEjcjeyCZzBXK9E9BYBXLKjOSpUDR+nEV3TFSUdQaz+ot98Qxg=
Xwx0GQ+EEUAKB2qZPkQQ0GqFD8UPFMqyaCHM24BZmSGic9EYMagKizOw9Hz50DMrDLrqqLkTAhp=
lMictiCAx5S3BIUQdeJeLnBy2CNtMfz6cV4u8XKoFZQesbf9YZiIERiHjaNodDW6LgcirX/mPnJ=
IkBGDUpTBhSa0EIr38D5hCIszhCM8URGBqImoWjpvpt1ebu/v3Gl3qJfMnNM+9V+kiRFyROTPHQ=
WOcs1dNW94/ukKMPZBvDi55i5CttdeJz84DLngLqjcdwEZ87bFFR8CIG35OAkDVN6VRDZ7aq67N=
teYqZ2lpT8oYB2CytoBd6VuAx4WgiAsnuj3WohG+LugzXiQRDeM3XYXlULv4dp5VFYC") forma=
t("woff2"); }

@font-face { font-family: KaTeX_Size4; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/assets/KaTeX_Size4-Regular-nv9nppzf.w=
off2") format("woff2"); }

@font-face { font-family: KaTeX_Typewriter; font-style: normal; font-weight=
: 400; src: url("https://cdn.oaistatic.com/assets/KaTeX_Typewriter-Regular-=
iqvr3vwu.woff2") format("woff2"); }

.katex { font: 1.21em / 1.2 KaTeX_Main, "Times New Roman", serif; text-inde=
nt: 0px; text-rendering: auto; }

.katex * { border-color: currentcolor; }

.katex .katex-version::after { content: "0.16.0"; }

.katex .katex-mathml { clip: rect(1px, 1px, 1px, 1px); border: 0px; height:=
 1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; }

.katex .katex-html > .newline { display: block; }

.katex .base { position: relative; white-space: nowrap; width: min-content;=
 }

.katex .base, .katex .strut { display: inline-block; }

.katex .textbf { font-weight: 700; }

.katex .textit { font-style: italic; }

.katex .textrm { font-family: KaTeX_Main; }

.katex .textsf { font-family: KaTeX_SansSerif; }

.katex .texttt { font-family: KaTeX_Typewriter; }

.katex .mathnormal { font-family: KaTeX_Math; font-style: italic; }

.katex .mathit { font-family: KaTeX_Main; font-style: italic; }

.katex .mathrm { font-style: normal; }

.katex .mathbf { font-family: KaTeX_Main; font-weight: 700; }

.katex .boldsymbol { font-family: KaTeX_Math; font-style: italic; font-weig=
ht: 700; }

.katex .amsrm, .katex .mathbb, .katex .textbb { font-family: KaTeX_AMS; }

.katex .mathcal { font-family: KaTeX_Caligraphic; }

.katex .mathfrak, .katex .textfrak { font-family: KaTeX_Fraktur; }

.katex .mathtt { font-family: KaTeX_Typewriter; }

.katex .mathscr, .katex .textscr { font-family: KaTeX_Script; }

.katex .mathsf, .katex .textsf { font-family: KaTeX_SansSerif; }

.katex .mathboldsf, .katex .textboldsf { font-family: KaTeX_SansSerif; font=
-weight: 700; }

.katex .mathitsf, .katex .textitsf { font-family: KaTeX_SansSerif; font-sty=
le: italic; }

.katex .mainrm { font-family: KaTeX_Main; font-style: normal; }

.katex .vlist-t { border-collapse: collapse; display: inline-table; table-l=
ayout: fixed; }

.katex .vlist-r { display: table-row; }

.katex .vlist { display: table-cell; position: relative; vertical-align: bo=
ttom; }

.katex .vlist > span { display: block; height: 0px; position: relative; }

.katex .vlist > span > span { display: inline-block; }

.katex .vlist > span > .pstrut { overflow: hidden; width: 0px; }

[dir=3D"ltr"] .katex .vlist-t2 { margin-right: -2px; }

[dir=3D"rtl"] .katex .vlist-t2 { margin-left: -2px; }

.katex .vlist-s { display: table-cell; font-size: 1px; min-width: 2px; vert=
ical-align: bottom; width: 2px; }

.katex .vbox { align-items: baseline; display: inline-flex; flex-direction:=
 column; }

.katex .hbox { width: 100%; }

.katex .hbox, .katex .thinbox { display: inline-flex; flex-direction: row; =
}

.katex .thinbox { max-width: 0px; width: 0px; }

[dir=3D"ltr"] .katex .msupsub { text-align: left; }

[dir=3D"rtl"] .katex .msupsub { text-align: right; }

.katex .mfrac > span > span { text-align: center; }

.katex .mfrac .frac-line { border-bottom-style: solid; display: inline-bloc=
k; width: 100%; }

.katex .hdashline, .katex .hline, .katex .mfrac .frac-line, .katex .overlin=
e .overline-line, .katex .rule, .katex .underline .underline-line { min-hei=
ght: 1px; }

.katex .mspace { display: inline-block; }

.katex .clap, .katex .llap, .katex .rlap { position: relative; width: 0px; =
}

.katex .clap > .inner, .katex .llap > .inner, .katex .rlap > .inner { posit=
ion: absolute; }

.katex .clap > .fix, .katex .llap > .fix, .katex .rlap > .fix { display: in=
line-block; }

[dir=3D"ltr"] .katex .llap > .inner { right: 0px; }

[dir=3D"ltr"] .katex .clap > .inner, [dir=3D"ltr"] .katex .rlap > .inner, [=
dir=3D"rtl"] .katex .llap > .inner { left: 0px; }

[dir=3D"rtl"] .katex .clap > .inner, [dir=3D"rtl"] .katex .rlap > .inner { =
right: 0px; }

[dir=3D"ltr"] .katex .clap > .inner > span { margin-left: -50%; margin-righ=
t: 50%; }

[dir=3D"rtl"] .katex .clap > .inner > span { margin-left: 50%; margin-right=
: -50%; }

.katex .rule { border: 0px solid; display: inline-block; position: relative=
; }

.katex .hline, .katex .overline .overline-line, .katex .underline .underlin=
e-line { border-bottom-style: solid; display: inline-block; width: 100%; }

.katex .hdashline { border-bottom-style: dashed; display: inline-block; wid=
th: 100%; }

[dir=3D"ltr"] .katex .sqrt > .root { margin-left: 0.277778em; margin-right:=
 -0.555556em; }

[dir=3D"rtl"] .katex .sqrt > .root { margin-left: -0.555556em; margin-right=
: 0.277778em; }

.katex .fontsize-ensurer.reset-size1.size1, .katex .sizing.reset-size1.size=
1 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size1.size2, .katex .sizing.reset-size1.size=
2 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size1.size3, .katex .sizing.reset-size1.size=
3 { font-size: 1.4em; }

.katex .fontsize-ensurer.reset-size1.size4, .katex .sizing.reset-size1.size=
4 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size1.size5, .katex .sizing.reset-size1.size=
5 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size1.size6, .katex .sizing.reset-size1.size=
6 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size1.size7, .katex .sizing.reset-size1.size=
7 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size1.size8, .katex .sizing.reset-size1.size=
8 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size1.size9, .katex .sizing.reset-size1.size=
9 { font-size: 3.456em; }

.katex .fontsize-ensurer.reset-size1.size10, .katex .sizing.reset-size1.siz=
e10 { font-size: 4.148em; }

.katex .fontsize-ensurer.reset-size1.size11, .katex .sizing.reset-size1.siz=
e11 { font-size: 4.976em; }

.katex .fontsize-ensurer.reset-size2.size1, .katex .sizing.reset-size2.size=
1 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size2.size2, .katex .sizing.reset-size2.size=
2 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size2.size3, .katex .sizing.reset-size2.size=
3 { font-size: 1.16667em; }

.katex .fontsize-ensurer.reset-size2.size4, .katex .sizing.reset-size2.size=
4 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size2.size5, .katex .sizing.reset-size2.size=
5 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size2.size6, .katex .sizing.reset-size2.size=
6 { font-size: 1.66667em; }

.katex .fontsize-ensurer.reset-size2.size7, .katex .sizing.reset-size2.size=
7 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size2.size8, .katex .sizing.reset-size2.size=
8 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size2.size9, .katex .sizing.reset-size2.size=
9 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size2.size10, .katex .sizing.reset-size2.siz=
e10 { font-size: 3.45667em; }

.katex .fontsize-ensurer.reset-size2.size11, .katex .sizing.reset-size2.siz=
e11 { font-size: 4.14667em; }

.katex .fontsize-ensurer.reset-size3.size1, .katex .sizing.reset-size3.size=
1 { font-size: 0.714286em; }

.katex .fontsize-ensurer.reset-size3.size2, .katex .sizing.reset-size3.size=
2 { font-size: 0.857143em; }

.katex .fontsize-ensurer.reset-size3.size3, .katex .sizing.reset-size3.size=
3 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size3.size4, .katex .sizing.reset-size3.size=
4 { font-size: 1.14286em; }

.katex .fontsize-ensurer.reset-size3.size5, .katex .sizing.reset-size3.size=
5 { font-size: 1.28571em; }

.katex .fontsize-ensurer.reset-size3.size6, .katex .sizing.reset-size3.size=
6 { font-size: 1.42857em; }

.katex .fontsize-ensurer.reset-size3.size7, .katex .sizing.reset-size3.size=
7 { font-size: 1.71429em; }

.katex .fontsize-ensurer.reset-size3.size8, .katex .sizing.reset-size3.size=
8 { font-size: 2.05714em; }

.katex .fontsize-ensurer.reset-size3.size9, .katex .sizing.reset-size3.size=
9 { font-size: 2.46857em; }

.katex .fontsize-ensurer.reset-size3.size10, .katex .sizing.reset-size3.siz=
e10 { font-size: 2.96286em; }

.katex .fontsize-ensurer.reset-size3.size11, .katex .sizing.reset-size3.siz=
e11 { font-size: 3.55429em; }

.katex .fontsize-ensurer.reset-size4.size1, .katex .sizing.reset-size4.size=
1 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size4.size2, .katex .sizing.reset-size4.size=
2 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size4.size3, .katex .sizing.reset-size4.size=
3 { font-size: 0.875em; }

.katex .fontsize-ensurer.reset-size4.size4, .katex .sizing.reset-size4.size=
4 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size4.size5, .katex .sizing.reset-size4.size=
5 { font-size: 1.125em; }

.katex .fontsize-ensurer.reset-size4.size6, .katex .sizing.reset-size4.size=
6 { font-size: 1.25em; }

.katex .fontsize-ensurer.reset-size4.size7, .katex .sizing.reset-size4.size=
7 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size4.size8, .katex .sizing.reset-size4.size=
8 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size4.size9, .katex .sizing.reset-size4.size=
9 { font-size: 2.16em; }

.katex .fontsize-ensurer.reset-size4.size10, .katex .sizing.reset-size4.siz=
e10 { font-size: 2.5925em; }

.katex .fontsize-ensurer.reset-size4.size11, .katex .sizing.reset-size4.siz=
e11 { font-size: 3.11em; }

.katex .fontsize-ensurer.reset-size5.size1, .katex .sizing.reset-size5.size=
1 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size5.size2, .katex .sizing.reset-size5.size=
2 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size5.size3, .katex .sizing.reset-size5.size=
3 { font-size: 0.777778em; }

.katex .fontsize-ensurer.reset-size5.size4, .katex .sizing.reset-size5.size=
4 { font-size: 0.888889em; }

.katex .fontsize-ensurer.reset-size5.size5, .katex .sizing.reset-size5.size=
5 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size5.size6, .katex .sizing.reset-size5.size=
6 { font-size: 1.11111em; }

.katex .fontsize-ensurer.reset-size5.size7, .katex .sizing.reset-size5.size=
7 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size5.size8, .katex .sizing.reset-size5.size=
8 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size5.size9, .katex .sizing.reset-size5.size=
9 { font-size: 1.92em; }

.katex .fontsize-ensurer.reset-size5.size10, .katex .sizing.reset-size5.siz=
e10 { font-size: 2.30444em; }

.katex .fontsize-ensurer.reset-size5.size11, .katex .sizing.reset-size5.siz=
e11 { font-size: 2.76444em; }

.katex .fontsize-ensurer.reset-size6.size1, .katex .sizing.reset-size6.size=
1 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size6.size2, .katex .sizing.reset-size6.size=
2 { font-size: 0.6em; }

.katex .fontsize-ensurer.reset-size6.size3, .katex .sizing.reset-size6.size=
3 { font-size: 0.7em; }

.katex .fontsize-ensurer.reset-size6.size4, .katex .sizing.reset-size6.size=
4 { font-size: 0.8em; }

.katex .fontsize-ensurer.reset-size6.size5, .katex .sizing.reset-size6.size=
5 { font-size: 0.9em; }

.katex .fontsize-ensurer.reset-size6.size6, .katex .sizing.reset-size6.size=
6 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size6.size7, .katex .sizing.reset-size6.size=
7 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size6.size8, .katex .sizing.reset-size6.size=
8 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size6.size9, .katex .sizing.reset-size6.size=
9 { font-size: 1.728em; }

.katex .fontsize-ensurer.reset-size6.size10, .katex .sizing.reset-size6.siz=
e10 { font-size: 2.074em; }

.katex .fontsize-ensurer.reset-size6.size11, .katex .sizing.reset-size6.siz=
e11 { font-size: 2.488em; }

.katex .fontsize-ensurer.reset-size7.size1, .katex .sizing.reset-size7.size=
1 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size7.size2, .katex .sizing.reset-size7.size=
2 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size7.size3, .katex .sizing.reset-size7.size=
3 { font-size: 0.583333em; }

.katex .fontsize-ensurer.reset-size7.size4, .katex .sizing.reset-size7.size=
4 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size7.size5, .katex .sizing.reset-size7.size=
5 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size7.size6, .katex .sizing.reset-size7.size=
6 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size7.size7, .katex .sizing.reset-size7.size=
7 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size7.size8, .katex .sizing.reset-size7.size=
8 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size7.size9, .katex .sizing.reset-size7.size=
9 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size7.size10, .katex .sizing.reset-size7.siz=
e10 { font-size: 1.72833em; }

.katex .fontsize-ensurer.reset-size7.size11, .katex .sizing.reset-size7.siz=
e11 { font-size: 2.07333em; }

.katex .fontsize-ensurer.reset-size8.size1, .katex .sizing.reset-size8.size=
1 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size8.size2, .katex .sizing.reset-size8.size=
2 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size8.size3, .katex .sizing.reset-size8.size=
3 { font-size: 0.486111em; }

.katex .fontsize-ensurer.reset-size8.size4, .katex .sizing.reset-size8.size=
4 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size8.size5, .katex .sizing.reset-size8.size=
5 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size8.size6, .katex .sizing.reset-size8.size=
6 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size8.size7, .katex .sizing.reset-size8.size=
7 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size8.size8, .katex .sizing.reset-size8.size=
8 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size8.size9, .katex .sizing.reset-size8.size=
9 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size8.size10, .katex .sizing.reset-size8.siz=
e10 { font-size: 1.44028em; }

.katex .fontsize-ensurer.reset-size8.size11, .katex .sizing.reset-size8.siz=
e11 { font-size: 1.72778em; }

.katex .fontsize-ensurer.reset-size9.size1, .katex .sizing.reset-size9.size=
1 { font-size: 0.289352em; }

.katex .fontsize-ensurer.reset-size9.size2, .katex .sizing.reset-size9.size=
2 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size9.size3, .katex .sizing.reset-size9.size=
3 { font-size: 0.405093em; }

.katex .fontsize-ensurer.reset-size9.size4, .katex .sizing.reset-size9.size=
4 { font-size: 0.462963em; }

.katex .fontsize-ensurer.reset-size9.size5, .katex .sizing.reset-size9.size=
5 { font-size: 0.520833em; }

.katex .fontsize-ensurer.reset-size9.size6, .katex .sizing.reset-size9.size=
6 { font-size: 0.578704em; }

.katex .fontsize-ensurer.reset-size9.size7, .katex .sizing.reset-size9.size=
7 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size9.size8, .katex .sizing.reset-size9.size=
8 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size9.size9, .katex .sizing.reset-size9.size=
9 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size9.size10, .katex .sizing.reset-size9.siz=
e10 { font-size: 1.20023em; }

.katex .fontsize-ensurer.reset-size9.size11, .katex .sizing.reset-size9.siz=
e11 { font-size: 1.43981em; }

.katex .fontsize-ensurer.reset-size10.size1, .katex .sizing.reset-size10.si=
ze1 { font-size: 0.24108em; }

.katex .fontsize-ensurer.reset-size10.size2, .katex .sizing.reset-size10.si=
ze2 { font-size: 0.289296em; }

.katex .fontsize-ensurer.reset-size10.size3, .katex .sizing.reset-size10.si=
ze3 { font-size: 0.337512em; }

.katex .fontsize-ensurer.reset-size10.size4, .katex .sizing.reset-size10.si=
ze4 { font-size: 0.385728em; }

.katex .fontsize-ensurer.reset-size10.size5, .katex .sizing.reset-size10.si=
ze5 { font-size: 0.433944em; }

.katex .fontsize-ensurer.reset-size10.size6, .katex .sizing.reset-size10.si=
ze6 { font-size: 0.48216em; }

.katex .fontsize-ensurer.reset-size10.size7, .katex .sizing.reset-size10.si=
ze7 { font-size: 0.578592em; }

.katex .fontsize-ensurer.reset-size10.size8, .katex .sizing.reset-size10.si=
ze8 { font-size: 0.694311em; }

.katex .fontsize-ensurer.reset-size10.size9, .katex .sizing.reset-size10.si=
ze9 { font-size: 0.833173em; }

.katex .fontsize-ensurer.reset-size10.size10, .katex .sizing.reset-size10.s=
ize10 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size10.size11, .katex .sizing.reset-size10.s=
ize11 { font-size: 1.19961em; }

.katex .fontsize-ensurer.reset-size11.size1, .katex .sizing.reset-size11.si=
ze1 { font-size: 0.200965em; }

.katex .fontsize-ensurer.reset-size11.size2, .katex .sizing.reset-size11.si=
ze2 { font-size: 0.241158em; }

.katex .fontsize-ensurer.reset-size11.size3, .katex .sizing.reset-size11.si=
ze3 { font-size: 0.28135em; }

.katex .fontsize-ensurer.reset-size11.size4, .katex .sizing.reset-size11.si=
ze4 { font-size: 0.321543em; }

.katex .fontsize-ensurer.reset-size11.size5, .katex .sizing.reset-size11.si=
ze5 { font-size: 0.361736em; }

.katex .fontsize-ensurer.reset-size11.size6, .katex .sizing.reset-size11.si=
ze6 { font-size: 0.401929em; }

.katex .fontsize-ensurer.reset-size11.size7, .katex .sizing.reset-size11.si=
ze7 { font-size: 0.482315em; }

.katex .fontsize-ensurer.reset-size11.size8, .katex .sizing.reset-size11.si=
ze8 { font-size: 0.578778em; }

.katex .fontsize-ensurer.reset-size11.size9, .katex .sizing.reset-size11.si=
ze9 { font-size: 0.694534em; }

.katex .fontsize-ensurer.reset-size11.size10, .katex .sizing.reset-size11.s=
ize10 { font-size: 0.833601em; }

.katex .fontsize-ensurer.reset-size11.size11, .katex .sizing.reset-size11.s=
ize11 { font-size: 1em; }

.katex .delimsizing.size1 { font-family: KaTeX_Size1; }

.katex .delimsizing.size2 { font-family: KaTeX_Size2; }

.katex .delimsizing.size3 { font-family: KaTeX_Size3; }

.katex .delimsizing.size4 { font-family: KaTeX_Size4; }

.katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; }

.katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; }

.katex .nulldelimiter { display: inline-block; width: 0.12em; }

.katex .delimcenter, .katex .op-symbol { position: relative; }

.katex .op-symbol.small-op { font-family: KaTeX_Size1; }

.katex .op-symbol.large-op { font-family: KaTeX_Size2; }

.katex .accent > .vlist-t, .katex .op-limits > .vlist-t { text-align: cente=
r; }

.katex .accent .accent-body { position: relative; }

.katex .accent .accent-body:not(.accent-full) { width: 0px; }

.katex .overlay { display: block; }

.katex .mtable .vertical-separator { display: inline-block; min-width: 1px;=
 }

.katex .mtable .arraycolsep { display: inline-block; }

.katex .mtable .col-align-c > .vlist-t { text-align: center; }

[dir=3D"ltr"] .katex .mtable .col-align-l > .vlist-t { text-align: left; }

[dir=3D"ltr"] .katex .mtable .col-align-r > .vlist-t, [dir=3D"rtl"] .katex =
.mtable .col-align-l > .vlist-t { text-align: right; }

[dir=3D"ltr"] .katex .svg-align, [dir=3D"rtl"] .katex .mtable .col-align-r =
> .vlist-t { text-align: left; }

[dir=3D"rtl"] .katex .svg-align { text-align: right; }

.katex svg { fill: currentcolor; stroke: currentcolor; fill-rule: nonzero; =
fill-opacity: 1; stroke-width: 1; stroke-linecap: butt; stroke-linejoin: mi=
ter; stroke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; st=
roke-opacity: 1; display: block; height: inherit; position: absolute; width=
: 100%; }

.katex svg path { stroke: none; }

.katex img { border-style: none; max-height: none; max-width: none; min-hei=
ght: 0px; min-width: 0px; }

.katex .stretchy { display: block; overflow: hidden; position: relative; wi=
dth: 100%; }

.katex .stretchy::after, .katex .stretchy::before { content: ""; }

.katex .hide-tail { overflow: hidden; position: relative; width: 100%; }

.katex .halfarrow-left { overflow: hidden; position: absolute; width: 50.2%=
; }

[dir=3D"ltr"] .katex .halfarrow-left { left: 0px; }

[dir=3D"rtl"] .katex .halfarrow-left { right: 0px; }

.katex .halfarrow-right { overflow: hidden; position: absolute; width: 50.2=
%; }

[dir=3D"ltr"] .katex .halfarrow-right { right: 0px; }

[dir=3D"rtl"] .katex .halfarrow-right { left: 0px; }

.katex .brace-left { overflow: hidden; position: absolute; width: 25.1%; }

[dir=3D"ltr"] .katex .brace-left { left: 0px; }

[dir=3D"rtl"] .katex .brace-left { right: 0px; }

.katex .brace-center { overflow: hidden; position: absolute; width: 50%; }

[dir=3D"ltr"] .katex .brace-center { left: 25%; }

[dir=3D"rtl"] .katex .brace-center { right: 25%; }

.katex .brace-right { overflow: hidden; position: absolute; width: 25.1%; }

[dir=3D"ltr"] .katex .brace-right { right: 0px; }

[dir=3D"rtl"] .katex .brace-right { left: 0px; }

.katex .x-arrow-pad { padding: 0px 0.5em; }

[dir=3D"ltr"] .katex .cd-arrow-pad { padding: 0px 0.55556em 0px 0.27778em; =
}

[dir=3D"rtl"] .katex .cd-arrow-pad { padding: 0px 0.27778em 0px 0.55556em; =
}

.katex .mover, .katex .munder, .katex .x-arrow { text-align: center; }

.katex .boxpad { padding: 0px 0.3em; }

.katex .fbox, .katex .fcolorbox { border: 0.04em solid; box-sizing: border-=
box; }

.katex .cancel-pad { padding: 0px 0.2em; }

.katex .cancel-lap { margin-left: -0.2em; margin-right: -0.2em; }

.katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; }

.katex .angl { border-top: 0.049em solid; box-sizing: border-box; }

[dir=3D"ltr"] .katex .angl { border-right: 0.049em solid; margin-right: 0.0=
3889em; }

[dir=3D"rtl"] .katex .angl { border-left: 0.049em solid; margin-left: 0.038=
89em; }

.katex .anglpad { padding: 0px 0.03889em; }

.katex .eqn-num::before { content: "(" counter(katexEqnNo) ")"; counter-inc=
rement: katexEqnNo 1; }

.katex .mml-eqn-num::before { content: "(" counter(mmlEqnNo) ")"; counter-i=
ncrement: mmlEqnNo 1; }

.katex .mtr-glue { width: 50%; }

.katex .cd-vert-arrow { display: inline-block; position: relative; }

.katex .cd-label-left { display: inline-block; position: absolute; }

[dir=3D"ltr"] .katex .cd-label-left { right: calc(50% + 0.3em); text-align:=
 left; }

[dir=3D"rtl"] .katex .cd-label-left { left: calc(50% + 0.3em); text-align: =
right; }

.katex .cd-label-right { display: inline-block; position: absolute; }

[dir=3D"ltr"] .katex .cd-label-right { left: calc(50% + 0.3em); text-align:=
 right; }

[dir=3D"rtl"] .katex .cd-label-right { right: calc(50% + 0.3em); text-align=
: left; }

.katex-display { display: block; margin: 1em 0px; text-align: center; }

.katex-display > .katex { display: block; text-align: center; white-space: =
nowrap; }

.katex-display > .katex > .katex-html { display: block; position: relative;=
 }

.katex-display > .katex > .katex-html > .tag { position: absolute; }

[dir=3D"ltr"] .katex-display > .katex > .katex-html > .tag { right: 0px; }

[dir=3D"rtl"] .katex-display > .katex > .katex-html > .tag { left: 0px; }

[dir=3D"ltr"] .katex-display.leqno > .katex > .katex-html > .tag { left: 0p=
x; right: auto; }

[dir=3D"rtl"] .katex-display.leqno > .katex > .katex-html > .tag { left: au=
to; right: 0px; }

[dir=3D"ltr"] .katex-display.fleqn > .katex { padding-left: 2em; text-align=
: left; }

[dir=3D"rtl"] .katex-display.fleqn > .katex { padding-right: 2em; text-alig=
n: right; }

body { counter-reset: katexEqnNo 0 mmlEqnNo 0; }

.sdtrn-root { font-size: 14px; line-height: 20px; background: unset !import=
ant; }

.sdtrn-root .draggable { app-region: drag; }

.sdtrn-root .no-draggable { app-region: no-drag; }

.sdtrn-root .no-draggable-children * { app-region: no-drag; user-select: no=
ne; }

.sdtrn-root [data-radix-popper-content-wrapper], .sdtrn-root [role=3D"dialo=
g"] { app-region: no-drag; }

.sdtrn-root [data-radix-popper-content-wrapper] li a, .sdtrn-root [role=3D"=
button"], .sdtrn-root button, .sdtrn-root div[role=3D"menu"], .sdtrn-root i=
nput[type=3D"button"], .sdtrn-root input[type=3D"reset"], .sdtrn-root input=
[type=3D"submit"], .sdtrn-root label { cursor: default; }

.sdtrn-root nav a { cursor: default; user-select: none; }

.snc-root { font-size: var(--snc-text-base); }

.snc { --snc-1: 1.5rem; --snc-2: 1.75rem; --snc-3: 3rem; --snc-results-padd=
ing: 1rem; --snc-input-height: 2.875rem; --snc-text-base: 16px; --snc-hover=
: #00000008; --main-surface-secondary: #f7f7f7; --main-surface-tertiary: #f=
1f1f1; --text-secondary: var(--gray-600); --text-tertiary: var(--gray-500);=
 --snc-result-search-input-shadow: 0 12px 20px -8px; --snc-answer-followup-=
input-shadow: 0 -12px 20px -8px; --snc-input-shadow-mult: 0; }

.snc .snc-accent-border { border: 0px; }

.snc ::-webkit-scrollbar { width: 16px; }

[dir=3D"ltr"] .snc ::-webkit-scrollbar { background: 0px 0px; }

[dir=3D"rtl"] .snc ::-webkit-scrollbar { background: 100% 0px; }

.snc ::-webkit-scrollbar-thumb { background: var(--main-surface-tertiary); =
border: 4px solid var(--main-surface-primary); border-radius: 8px; }

.snc ::-webkit-scrollbar-thumb:hover { background: var(--gray-200); }

.dark .snc ::-webkit-scrollbar-thumb:hover { background: var(--gray-600); }

.dark .snc, .dark .snc .dark { --snc-hover: #ffffff08; --snc-focus-border: =
#ffffffbf; --main-surface-primary: var(--gray-950); --main-surface-secondar=
y: var(--gray-900); --main-surface-tertiary: var(--gray-700); --text-second=
ary: var(--gray-300); --text-tertiary: var(--gray-500); --border-light: #ff=
ffff0d; --border-medium: #ffffff1f; --border-xheavy: #fff3; --gray-950: #14=
1414; --snc-result-search-input-shadow: 0 8px 12px -8px; --snc-answer-follo=
wup-input-shadow: 0 -8px 12px -8px; }

:is(.dark .snc .dark, .dark .snc) .snc-accent-border { border: .5px solid v=
ar(--border-xheavy); }

.snc .user-query .prose p:first-child { margin-bottom: calc(var(--spacing,.=
25rem)*0); }

.snc .prose :not(.not-prose, .not-prose *) { max-width: 100%; }

.snc .prose :not(.not-prose, .not-prose *) a { --tw-font-weight: var(--font=
-weight-normal,400); color: var(--link); font-weight: var(--font-weight-nor=
mal,400); text-decoration-line: none; text-underline-offset: 2px; }

.snc .prose :not(.not-prose, .not-prose *) > h1:first-child { font-size: 1.=
125rem; }

.snc .prose :not(.not-prose, .not-prose *) h1, .snc .prose :not(.not-prose,=
 .not-prose *) h2, .snc .prose :not(.not-prose, .not-prose *) h3, .snc .pro=
se :not(.not-prose, .not-prose *) h4, .snc .prose :not(.not-prose, .not-pro=
se *) h5 { --tw-font-weight: var(--font-weight-semibold,600); font-size: 1r=
em; font-weight: var(--font-weight-semibold,600); }

.snc .prose :not(.not-prose, .not-prose *) h3, .snc .prose :not(.not-prose,=
 .not-prose *) h4 { margin-bottom: calc(var(--spacing,.25rem)*1); }

.snc .prose :not(.not-prose, .not-prose *) h3:first-child a { font-size: 1.=
25rem; font-weight: 500; }

.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-prose,=
 .not-prose *) p, .snc .prose :not(.not-prose, .not-prose *) ul { margin-bo=
ttom: calc(var(--spacing,.25rem)*4); }

:is(.snc .prose :not(.not-prose, .not-prose *) p, .snc .prose :not(.not-pro=
se, .not-prose *) ol, .snc .prose :not(.not-prose, .not-prose *) ul):last-c=
hild { margin-bottom: calc(var(--spacing,.25rem)*0); }

.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-prose,=
 .not-prose *) ul { display: contents; list-style-position: inside; list-st=
yle-type: none; margin-top: calc(var(--spacing,.25rem)*0); }

:is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-pr=
ose, .not-prose *) ul) > li { position: relative; }

:is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-pr=
ose, .not-prose *) ul) > li:has(.title-citation) { margin-bottom: calc(var(=
--spacing,.25rem)*3); }

:is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-pr=
ose, .not-prose *) ul) > li:has(.title-citation):last-child { margin-bottom=
: calc(var(--spacing,.25rem)*0); }

:is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-pr=
ose, .not-prose *) ul) > li::before { position: absolute; }

[dir=3D"ltr"] :is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .pros=
e :not(.not-prose, .not-prose *) ul) > li::before { left: calc(var(--spacin=
g,.25rem)*0); }

[dir=3D"rtl"] :is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .pros=
e :not(.not-prose, .not-prose *) ul) > li::before { right: calc(var(--spaci=
ng,.25rem)*0); }

:is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-pr=
ose, .not-prose *) ul) > li button, :is(.snc .prose :not(.not-prose, .not-p=
rose *) ol, .snc .prose :not(.not-prose, .not-prose *) ul) > li > a { margi=
n-block: calc(var(--spacing,.25rem)*0); }

:is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-pr=
ose, .not-prose *) ul) > li p { margin-bottom: calc(var(--spacing,.25rem)*2=
); margin-top: calc(var(--spacing,.25rem)*0); }

:is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-pr=
ose, .not-prose *) ul) > li ol, :is(.snc .prose :not(.not-prose, .not-prose=
 *) ol, .snc .prose :not(.not-prose, .not-prose *) ul) > li ul { display: b=
lock; margin-block: calc(var(--spacing,.25rem)*0); padding: calc(var(--spac=
ing,.25rem)*0); }

[dir=3D"ltr"] :is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .pros=
e :not(.not-prose, .not-prose *) ul) > li ol, [dir=3D"ltr"] :is(.snc .prose=
 :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-prose, .not-prose=
 *) ul) > li ul { margin-left: calc(var(--spacing,.25rem)*4); }

[dir=3D"rtl"] :is(.snc .prose :not(.not-prose, .not-prose *) ol, .snc .pros=
e :not(.not-prose, .not-prose *) ul) > li ol, [dir=3D"rtl"] :is(.snc .prose=
 :not(.not-prose, .not-prose *) ol, .snc .prose :not(.not-prose, .not-prose=
 *) ul) > li ul { margin-right: calc(var(--spacing,.25rem)*4); }

.snc .prose :not(.not-prose, .not-prose *) ol { counter-reset: list-counter=
 0; }

.snc .prose :not(.not-prose, .not-prose *) ol > li { counter-increment: lis=
t-counter 1; }

[dir=3D"ltr"] .snc .prose :not(.not-prose, .not-prose *) ol > li { padding-=
left: calc(var(--spacing,.25rem)*8); }

[dir=3D"rtl"] .snc .prose :not(.not-prose, .not-prose *) ol > li { padding-=
right: calc(var(--spacing,.25rem)*8); }

.snc .prose :not(.not-prose, .not-prose *) ol > li::before { color: var(--t=
ext-secondary); content: counter(list-counter) "."; }

[dir=3D"ltr"] .snc .prose :not(.not-prose, .not-prose *) ul > li { padding-=
left: calc(var(--spacing,.25rem)*6); }

[dir=3D"rtl"] .snc .prose :not(.not-prose, .not-prose *) ul > li { padding-=
right: calc(var(--spacing,.25rem)*6); }

.snc .prose :not(.not-prose, .not-prose *) ul > li::before { content: "=E2=
=80=A2"; }

.snc .prose :not(.not-prose, .not-prose *) strong { --tw-font-weight: var(-=
-font-weight-medium,500); font-weight: var(--font-weight-medium,500); }

.snc .prose.result-streaming .context-list:last-child:has(p)::after { displ=
ay: none; }

.snc .prose.result-streaming .context-list:last-child p:last-child::after {=
 content: "=E2=97=8F"; display: inline; font-family: Circle, system-ui, san=
s-serif; line-height: normal; vertical-align: baseline; }

[dir=3D"ltr"] .snc .prose.result-streaming .context-list:last-child p:last-=
child::after { margin-left: 0.25rem; }

[dir=3D"rtl"] .snc .prose.result-streaming .context-list:last-child p:last-=
child::after { margin-right: 0.25rem; }

@property --tw-font-weight { syntax: "*"; inherits: false; }

code, pre { font-family: ui-monospace, SFMono-Regular, "SF Mono", Menlo, Co=
nsolas, "Liberation Mono", monospace !important; }

code[class=3D"language-plaintext"] { white-space: pre-line; }

code.hljs, code[class*=3D"language-"], pre[class*=3D"language-"] { overflow=
-wrap: normal; background: none; hyphens: none; line-height: 1.5; tab-size:=
 4; white-space: pre; word-break: normal; word-spacing: normal; }

[dir=3D"ltr"] code.hljs, [dir=3D"ltr"] code[class*=3D"language-"], [dir=3D"=
ltr"] pre[class*=3D"language-"] { text-align: left; }

[dir=3D"rtl"] code.hljs, [dir=3D"rtl"] code[class*=3D"language-"], [dir=3D"=
rtl"] pre[class*=3D"language-"] { text-align: right; }

pre[class*=3D"language-"] { border-radius: 0.3em; overflow: auto; }

:not(pre) > code.hljs, :not(pre) > code[class*=3D"language-"] { border-radi=
us: 0.3em; padding: 0.1em; white-space: normal; }

:is(.light .dark, .dark) code.hljs, :is(.light .dark, .dark) code[class*=3D=
"language-"], :is(.light .dark, .dark) pre[class*=3D"language-"] { color: r=
gb(255, 255, 255); }

:is(.light .dark, .dark) .hljs-comment { color: rgba(255, 255, 255, 0.5); }

:is(.light .dark, .dark) .hljs-meta { color: rgba(255, 255, 255, 0.6); }

:is(.light .dark, .dark) .hljs-built_in, :is(.light .dark, .dark) .hljs-cla=
ss .hljs-title { color: rgb(233, 149, 12); }

:is(.light .dark, .dark) .hljs-doctag, :is(.light .dark, .dark) .hljs-formu=
la, :is(.light .dark, .dark) .hljs-keyword, :is(.light .dark, .dark) .hljs-=
literal { color: rgb(46, 149, 211); }

:is(.light .dark, .dark) .hljs-addition, :is(.light .dark, .dark) .hljs-att=
ribute, :is(.light .dark, .dark) .hljs-meta-string, :is(.light .dark, .dark=
) .hljs-regexp, :is(.light .dark, .dark) .hljs-string { color: rgb(0, 166, =
125); }

:is(.light .dark, .dark) .hljs-attr, :is(.light .dark, .dark) .hljs-number,=
 :is(.light .dark, .dark) .hljs-selector-attr, :is(.light .dark, .dark) .hl=
js-selector-class, :is(.light .dark, .dark) .hljs-selector-pseudo, :is(.lig=
ht .dark, .dark) .hljs-template-variable, :is(.light .dark, .dark) .hljs-ty=
pe, :is(.light .dark, .dark) .hljs-variable { color: rgb(223, 48, 121); }

:is(.light .dark, .dark) .hljs-bullet, :is(.light .dark, .dark) .hljs-link,=
 :is(.light .dark, .dark) .hljs-selector-id, :is(.light .dark, .dark) .hljs=
-symbol, :is(.light .dark, .dark) .hljs-title { color: rgb(242, 44, 61); }

.light code.hljs, .light code[class*=3D"language-"], .light pre[class*=3D"l=
anguage-"] { color: rgb(56, 58, 66); }

.light .hljs-comment, .light .hljs-quote { color: rgb(160, 161, 167); font-=
style: italic; }

.light .hljs-doctag, .light .hljs-formula, .light .hljs-keyword { color: rg=
b(166, 38, 164); }

.light .hljs-deletion, .light .hljs-name, .light .hljs-section, .light .hlj=
s-selector-tag, .light .hljs-subst { color: rgb(228, 86, 73); }

.light .hljs-literal { color: rgb(1, 132, 187); }

.light .hljs-addition, .light .hljs-attribute, .light .hljs-meta-string, .l=
ight .hljs-regexp, .light .hljs-string { color: rgb(80, 161, 79); }

.light .hljs-built_in, .light .hljs-class .hljs-title { color: rgb(193, 132=
, 1); }

.light .hljs-attr, .light .hljs-number, .light .hljs-selector-attr, .light =
.hljs-selector-class, .light .hljs-selector-pseudo, .light .hljs-template-v=
ariable, .light .hljs-type, .light .hljs-variable { color: rgb(152, 104, 1)=
; }

.light .hljs-bullet, .light .hljs-link, .light .hljs-meta, .light .hljs-sel=
ector-id, .light .hljs-symbol, .light .hljs-title { color: rgb(64, 120, 242=
); }

.light .hljs-emphasis { font-style: italic; }

.light .hljs-strong { font-weight: 700; }

.light .hljs-link { text-decoration: underline; }

.token.cdata, .token.comment, .token.doctype, .token.prolog { color: rgb(16=
9, 174, 193); }

.token.punctuation { color: rgb(254, 254, 254); }

.token.constant, .token.deleted, .token.property, .token.symbol, .token.tag=
 { color: rgb(255, 160, 122); }

.token.boolean, .token.number { color: rgb(0, 224, 224); }

.token.attr-name, .token.builtin, .token.char, .token.inserted, .token.sele=
ctor, .token.string { color: rgb(171, 227, 56); }

.language-css .token.string, .style .token.string, .token.entity, .token.op=
erator, .token.url, .token.variable { color: rgb(0, 224, 224); }

.token.atrule, .token.attr-value, .token.function { color: gold; }

.token.keyword { color: rgb(0, 224, 224); }

.token.important, .token.regex { color: gold; }

.token.bold, .token.important { font-weight: 700; }

.token.italic { font-style: italic; }

.token.entity { cursor: help; }

@media screen and (-ms-high-contrast:active) {
  code[class*=3D"language-"], pre[class*=3D"language-"] { background: windo=
w; color: windowtext; }
  :not(pre) > code[class*=3D"language-"], pre[class*=3D"language-"] { backg=
round: window; }
  .token.important { background: highlight; color: window; font-weight: 400=
; }
  .token.atrule, .token.attr-value, .token.function, .token.keyword, .token=
.operator, .token.selector { font-weight: 700; }
  .token.attr-value, .token.comment, .token.doctype, .token.function, .toke=
n.keyword, .token.operator, .token.property, .token.string { color: highlig=
ht; }
  .token.attr-value, .token.url { font-weight: 400; }
}

.react-select-container input:focus { --tw-ring-shadow: var(--tw-ring-inset=
,)0 0 0 calc(var(--tw-ring-offset-width))var(--tw-ring-color,currentColor);=
 box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ri=
ng-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }

.react-select-container .react-select__control { align-items: flex-start; b=
order-color: rgb(236, 236, 236); border-radius: var(--radius-lg,.5rem); fon=
t-size: var(--text-sm,.875rem); height: 192px; line-height: var(--tw-leadin=
g,var(--text-sm--line-height,1.42857)); min-height: 192px; overflow: auto; =
padding: calc(var(--spacing,.25rem)*2); }

@media (hover: hover) {
  .react-select-container .react-select__control:hover { border-color: rgb(=
227, 227, 227); }
}

.react-select-container .react-select__control:is(.dark *) { background-col=
or: rgb(23, 23, 23); border-color: rgba(255, 255, 255, 0.1); }

@media (hover: hover) {
  .react-select-container .react-select__control:hover:is(.dark *) { border=
-color: rgba(255, 255, 255, 0.2); }
}

.react-select-container.react-select--invalid .react-select__control, .reac=
t-select-container.react-select--invalid .react-select__control:is(.dark *)=
 { border-color: rgb(224, 46, 42); }

.react-select-container .react-select__placeholder { padding-inline: calc(v=
ar(--spacing,.25rem)*2); }

.react-select-container .react-select__input-container { color: var(--text-=
secondary); padding-inline: calc(var(--spacing,.25rem)*2); }

.react-select-container .react-select__input { height: calc(var(--spacing,.=
25rem)*8); }

.react-select-container .react-select__control--is-focused { --tw-ring-shad=
ow: var(--tw-ring-inset,)0 0 0 calc(var(--tw-ring-offset-width))var(--tw-ri=
ng-color,currentColor); box-shadow: var(--tw-inset-shadow),var(--tw-inset-r=
ing-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-sha=
dow); border-color: rgb(227, 227, 227) !important; }

.react-select-container .react-select__control--is-focused:is(.dark *) { bo=
rder-color: rgba(255, 255, 255, 0.2) !important; }

.react-select-container .react-select__value-container { padding: calc(var(=
--spacing,.25rem)*0); }

.react-select-container .react-select__indicators:empty { display: none; }

.react-select-container .react-select__multi-value { background-color: rgba=
(0, 0, 0, 0); margin: calc(var(--spacing,.25rem)*0); }

.react-select-container .react-select__multi-value__label { padding: calc(v=
ar(--spacing,.25rem)*0); }

#intercom-container { display: none; }

@property --tw-shadow { syntax: "*"; inherits: false; initial-value: 0 0 #0=
000; }

@property --tw-shadow-color { syntax: "*"; inherits: false; }

@property --tw-inset-shadow { syntax: "*"; inherits: false; initial-value: =
0 0 #0000; }

@property --tw-inset-shadow-color { syntax: "*"; inherits: false; }

@property --tw-ring-color { syntax: "*"; inherits: false; }

@property --tw-ring-shadow { syntax: "*"; inherits: false; initial-value: 0=
 0 #0000; }

@property --tw-inset-ring-color { syntax: "*"; inherits: false; }

@property --tw-inset-ring-shadow { syntax: "*"; inherits: false; initial-va=
lue: 0 0 #0000; }

@property --tw-ring-inset { syntax: "*"; inherits: false; }

@property --tw-ring-offset-width { syntax: "<length>"; inherits: false; ini=
tial-value: 0; }

@property --tw-ring-offset-color { syntax: "*"; inherits: false; initial-va=
lue: #fff; }

@property --tw-ring-offset-shadow { syntax: "*"; inherits: false; initial-v=
alue: 0 0 #0000; }
------MultipartBoundary--JeftemRFv6yz4tcA0Is1dkAJcckJ66FI5kZlNzJQ4K----
Content-Type: text/html
Content-ID: <frame-7E54786600B1DFF05D25CDBD4FA6712B@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body></body></html>
------MultipartBoundary--JeftemRFv6yz4tcA0Is1dkAJcckJ66FI5kZlNzJQ4K------
